### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions
  id: QueueRequestOptions
  parent: com.microsoft.azure.storage.queue
  children:
  - com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults(QueueRequestOptions)
  - com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired()
  - com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy()
  - com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults(QueueRequestOptions,final CloudQueueClient)
  - com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions()
  - com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions(final QueueRequestOptions)
  - com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy)
  href: com.microsoft.azure.storage.queue.QueueRequestOptions.yml
  langs:
  - java
  name: QueueRequestOptions
  nameWithType: QueueRequestOptions
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
      branch: legacy-master
      repo: https://github.com/azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 25
  package: com.microsoft.azure.storage.queue
  summary: "<p>Represents a set of options that may be specified on a queue request. </p>"
  syntax: &o1
    content: public class QueueRequestOptions extends RequestOptions
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.storage.RequestOptions
  inheritedMembers:
  - com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(final RequestOptions)
  - com.microsoft.azure.storage.RequestOptions.disableHttpsSocketKeepAlive()
  - com.microsoft.azure.storage.RequestOptions.getLocationMode()
  - com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()
  - com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()
  - com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()
  - com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()
  - com.microsoft.azure.storage.RequestOptions.populateRequestOptions(RequestOptions,final RequestOptions,final boolean)
  - com.microsoft.azure.storage.RequestOptions.RequestOptions()
  - com.microsoft.azure.storage.RequestOptions.RequestOptions(final RequestOptions)
  - com.microsoft.azure.storage.RequestOptions.requireEncryption()
  - com.microsoft.azure.storage.RequestOptions.setDisableHttpsSocketKeepAlive(Boolean)
  - com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode)
  - com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)
  - com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean)
  - com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory)
  - com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer)
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults(QueueRequestOptions)
  id: applyDefaults(QueueRequestOptions)
  parent: com.microsoft.azure.storage.queue.QueueRequestOptions
  href: com.microsoft.azure.storage.queue.QueueRequestOptions.yml
  langs:
  - java
  name: applyDefaults(QueueRequestOptions modifiedOptions)
  nameWithType: QueueRequestOptions.applyDefaults(QueueRequestOptions modifiedOptions)
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults(QueueRequestOptions modifiedOptions)
  overload: com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 76
  package: com.microsoft.azure.storage.queue
  summary: "<p>Applies defaults to the options passed in.</p>\r\n<p></p>"
  syntax:
    content: protected static void applyDefaults(QueueRequestOptions modifiedOptions)
    parameters:
    - id: modifiedOptions
      type: com.microsoft.azure.storage.queue.QueueRequestOptions
      description: <p>The options to apply defaults to. </p>
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired()
  id: assertPolicyIfRequired()
  parent: com.microsoft.azure.storage.queue.QueueRequestOptions
  href: com.microsoft.azure.storage.queue.QueueRequestOptions.yml
  langs:
  - java
  name: assertPolicyIfRequired()
  nameWithType: QueueRequestOptions.assertPolicyIfRequired()
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired()
  overload: com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 127
  package: com.microsoft.azure.storage.queue
  summary: "<p>Assert that if strict mode is on, an encryption policy is specified. </p>"
  syntax:
    content: protected void assertPolicyIfRequired()
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy()
  id: getEncryptionPolicy()
  parent: com.microsoft.azure.storage.queue.QueueRequestOptions
  href: com.microsoft.azure.storage.queue.QueueRequestOptions.yml
  langs:
  - java
  name: getEncryptionPolicy()
  nameWithType: QueueRequestOptions.getEncryptionPolicy()
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy()
  overload: com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 105
  package: com.microsoft.azure.storage.queue
  summary: "<p>Gets the encryption policy to use for this request. For more information about the encryption policy defaults, see <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setEncryptionPolicy(QueueEncryptionPolicy)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public QueueEncryptionPolicy getEncryptionPolicy()
    return:
      type: com.microsoft.azure.storage.queue.QueueEncryptionPolicy
      description: <p>An <xref uid="com.microsoft.azure.storage.queue.QueueEncryptionPolicy" data-throw-if-not-resolved="false" data-raw-source="QueueEncryptionPolicy"></xref> object that represents the current encryption policy. </p>
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults(QueueRequestOptions,final CloudQueueClient)
  id: populateAndApplyDefaults(QueueRequestOptions,final CloudQueueClient)
  parent: com.microsoft.azure.storage.queue.QueueRequestOptions
  href: com.microsoft.azure.storage.queue.QueueRequestOptions.yml
  langs:
  - java
  name: populateAndApplyDefaults(QueueRequestOptions options, final CloudQueueClient client)
  nameWithType: QueueRequestOptions.populateAndApplyDefaults(QueueRequestOptions options, final CloudQueueClient client)
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults(QueueRequestOptions options, final CloudQueueClient client)
  overload: com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 63
  package: com.microsoft.azure.storage.queue
  summary: "<p>Populates the default timeout and retry policy from client if they are not set.</p>\r\n<p></p>"
  syntax:
    content: protected static final QueueRequestOptions populateAndApplyDefaults(QueueRequestOptions options, final CloudQueueClient client)
    parameters:
    - id: options
      type: com.microsoft.azure.storage.queue.QueueRequestOptions
      description: <p>The input options to copy from when applying defaults </p>
    - id: client
      type: 93de0ef9com.microsoft.azure.storage.queue.CloudQueueClient
      description: <p>The <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref> service client to populate the default values from. </p>
    return:
      type: 93de0ef9com.microsoft.azure.storage.queue.QueueRequestOptions
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions()
  id: QueueRequestOptions()
  parent: com.microsoft.azure.storage.queue.QueueRequestOptions
  href: com.microsoft.azure.storage.queue.QueueRequestOptions.yml
  langs:
  - java
  name: QueueRequestOptions()
  nameWithType: QueueRequestOptions.QueueRequestOptions()
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions()
  overload: com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 35
  package: com.microsoft.azure.storage.queue
  summary: "<p>Initializes a new instance of the QueueRequestOptions class. </p>"
  syntax:
    content: public QueueRequestOptions()
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions(final QueueRequestOptions)
  id: QueueRequestOptions(final QueueRequestOptions)
  parent: com.microsoft.azure.storage.queue.QueueRequestOptions
  href: com.microsoft.azure.storage.queue.QueueRequestOptions.yml
  langs:
  - java
  name: QueueRequestOptions(final QueueRequestOptions other)
  nameWithType: QueueRequestOptions.QueueRequestOptions(final QueueRequestOptions other)
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions(final QueueRequestOptions other)
  overload: com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 47
  package: com.microsoft.azure.storage.queue
  summary: "<p>Initializes a new instance of the QueueRequestOptions class as a copy of another QueueRequestOptions instance.</p>\r\n<p></p>"
  syntax:
    content: public QueueRequestOptions(final QueueRequestOptions other)
    parameters:
    - id: other
      type: 93de0ef9com.microsoft.azure.storage.queue.QueueRequestOptions
      description: <p>The <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object to copy the values from. </p>
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy)
  id: setEncryptionPolicy(QueueEncryptionPolicy)
  parent: com.microsoft.azure.storage.queue.QueueRequestOptions
  href: com.microsoft.azure.storage.queue.QueueRequestOptions.yml
  langs:
  - java
  name: setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
  nameWithType: QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
  overload: com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 120
  package: com.microsoft.azure.storage.queue
  summary: "<p>Sets the QueueEncryptionPolicy object to use for this request. </p>\r\n<p>The default QueueEncryptionPolicy is set in the client and is by default null, indicating no encryption. You can change the QueueEncryptionPolicy on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use that QueueEncryptionPolicy.</p>\r\n<p></p>"
  syntax: &o2
    content: public void setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
    parameters:
    - id: encryptionPolicy
      type: com.microsoft.azure.storage.queue.QueueEncryptionPolicy
      description: <p>the QueueEncryptionPolicy object to use when making service requests. </p>
references:
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions*
  name: QueueRequestOptions
  nameWithType: QueueRequestOptions.QueueRequestOptions
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions
  package: com.microsoft.azure.storage.queue
- uid: 93de0ef9com.microsoft.azure.storage.queue.QueueRequestOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.queue.QueueRequestOptions
    name: QueueRequestOptions
    fullName: com.microsoft.azure.storage.queue.QueueRequestOptions
    href: com.microsoft.azure.storage.queue.QueueRequestOptions.yml
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy*
  name: getEncryptionPolicy
  nameWithType: QueueRequestOptions.getEncryptionPolicy
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy*
  name: setEncryptionPolicy
  nameWithType: QueueRequestOptions.setEncryptionPolicy
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy
  package: com.microsoft.azure.storage.queue
- uid: 93de0ef9com.microsoft.azure.storage.queue.CloudQueueClient
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.queue.CloudQueueClient
    name: CloudQueueClient
    fullName: com.microsoft.azure.storage.queue.CloudQueueClient
    href: com.microsoft.azure.storage.queue.CloudQueueClient.yml
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults*
  name: populateAndApplyDefaults
  nameWithType: QueueRequestOptions.populateAndApplyDefaults
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults*
  name: applyDefaults
  nameWithType: QueueRequestOptions.applyDefaults
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired*
  name: assertPolicyIfRequired
  nameWithType: QueueRequestOptions.assertPolicyIfRequired
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(final RequestOptions)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  nameWithType: RequestOptions.applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  fullName: com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  type: Method
  summary: "<p>Populates the default timeout, retry policy, and location mode from client if they are null.</p>\r\n<p></p>"
  syntax:
    content: protected static void applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
    parameters:
    - id: modifiedOptions
      type: 93de0ef9com.microsoft.azure.storage.RequestOptions
      description: <p>The input options to copy from when applying defaults </p>
- uid: com.microsoft.azure.storage.RequestOptions.disableHttpsSocketKeepAlive()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: disableHttpsSocketKeepAlive()
  nameWithType: RequestOptions.disableHttpsSocketKeepAlive()
  fullName: com.microsoft.azure.storage.RequestOptions.disableHttpsSocketKeepAlive()
  type: Method
  summary: "<p>Gets a value to indicate whether https socket keep-alive should be disabled. Use  to disable keep-alive; otherwise, . For more information about disableHttpsSocketKeepAlive defaults, see <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref></p>\r\n<p></p>"
  syntax:
    content: public Boolean disableHttpsSocketKeepAlive()
    return:
      type: 866c2227
      description: <p>A value to indicate whether https socket keep-alive should be disabled. </p>
- uid: com.microsoft.azure.storage.RequestOptions.getLocationMode()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: getLocationMode()
  nameWithType: RequestOptions.getLocationMode()
  fullName: com.microsoft.azure.storage.RequestOptions.getLocationMode()
  type: Method
  summary: "<p>Gets the default location mode for this request. For more information about location mode, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setLocationMode(LocationMode)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public final LocationMode getLocationMode()
    return:
      type: 93de0ef9com.microsoft.azure.storage.LocationMode
      description: <p>A <xref uid="com.microsoft.azure.storage.LocationMode" data-throw-if-not-resolved="false" data-raw-source="LocationMode"></xref> object that represents the location mode for this request. </p>
- uid: com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: getMaximumExecutionTimeInMs()
  nameWithType: RequestOptions.getMaximumExecutionTimeInMs()
  fullName: com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()
  type: Method
  summary: "<p>Gets the maximum execution time for this request. For more information about maximum execution time defaults, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setMaximumExecutionTimeInMs(Integer)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public Integer getMaximumExecutionTimeInMs()
    return:
      type: 08effaa0
      description: <p>The current maximum execution time, in milliseconds, for this request. </p>
- uid: com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: getOperationExpiryTimeInMs()
  nameWithType: RequestOptions.getOperationExpiryTimeInMs()
  fullName: com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()
  type: Method
  summary: "<p>RESERVED FOR INTERNAL USE.</p>\r\n<p>Returns the time at which this operation expires. This is computed by adding the time the operation begins and the maximum execution time and will be null if maximum execution time is null. For more information about maximum execution time, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setMaximumExecutionTimeInMs(Integer)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public Long getOperationExpiryTimeInMs()
    return:
      type: 34f09483
      description: <p>The current operation expiry time, in milliseconds, for this request. </p>
- uid: com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: getRetryPolicyFactory()
  nameWithType: RequestOptions.getRetryPolicyFactory()
  fullName: com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()
  type: Method
  summary: "<p>Gets the retry policy to use for this request. For more information about the retry policy defaults, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setRetryPolicyFactory(RetryPolicyFactory)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public final RetryPolicyFactory getRetryPolicyFactory()
    return:
      type: 93de0ef9com.microsoft.azure.storage.RetryPolicyFactory
      description: <p>An <xref uid="com.microsoft.azure.storage.RetryPolicyFactory" data-throw-if-not-resolved="false" data-raw-source="RetryPolicyFactory"></xref> object that represents the current retry policy.</p>
- uid: com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: getTimeoutIntervalInMs()
  nameWithType: RequestOptions.getTimeoutIntervalInMs()
  fullName: com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()
  type: Method
  summary: "<p>Returns the timeout value for this request. For more information about the timeout defaults, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setTimeoutIntervalInMs(Integer)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public final Integer getTimeoutIntervalInMs()
    return:
      type: 3437983f
      description: <p>The current timeout value, in milliseconds, for this request. </p>
- uid: com.microsoft.azure.storage.RequestOptions.populateRequestOptions(RequestOptions,final RequestOptions,final boolean)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  nameWithType: RequestOptions.populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  fullName: com.microsoft.azure.storage.RequestOptions.populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  type: Method
  summary: "<p>Populates any null fields in the first requestOptions object with values from the second requestOptions object. </p>"
  syntax:
    content: protected static void populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
    parameters:
    - id: modifiedOptions
      type: com.microsoft.azure.storage.RequestOptions
    - id: clientOptions
      type: 93de0ef9com.microsoft.azure.storage.RequestOptions
    - id: setStartTime
      type: 4dda0764
- uid: com.microsoft.azure.storage.RequestOptions.RequestOptions()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: RequestOptions()
  nameWithType: RequestOptions.RequestOptions()
  fullName: com.microsoft.azure.storage.RequestOptions.RequestOptions()
  type: Constructor
  summary: "<p>Creates an instance of the  class. </p>"
  syntax:
    content: public RequestOptions()
- uid: com.microsoft.azure.storage.RequestOptions.RequestOptions(final RequestOptions)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: RequestOptions(final RequestOptions other)
  nameWithType: RequestOptions.RequestOptions(final RequestOptions other)
  fullName: com.microsoft.azure.storage.RequestOptions.RequestOptions(final RequestOptions other)
  type: Constructor
  summary: "<p>Creates an instance of the  class by copying values from another  instance.</p>\r\n<p></p>"
  syntax:
    content: public RequestOptions(final RequestOptions other)
    parameters:
    - id: other
      type: 93de0ef9com.microsoft.azure.storage.RequestOptions
      description: <p>A <code>RequestOptions</code> object that represents the request options to copy. </p>
- uid: com.microsoft.azure.storage.RequestOptions.requireEncryption()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: requireEncryption()
  nameWithType: RequestOptions.requireEncryption()
  fullName: com.microsoft.azure.storage.RequestOptions.requireEncryption()
  type: Method
  summary: "<p>Gets a value to indicate whether all data written and read must be encrypted. Use  to encrypt/decrypt data for transactions; otherwise, . For more information about require encryption defaults, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setRequireEncryption(Boolean)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public Boolean requireEncryption()
    return:
      type: 866c2227
      description: <p>A value to indicate whether all data written and read must be encrypted. </p>
- uid: com.microsoft.azure.storage.RequestOptions.setDisableHttpsSocketKeepAlive(Boolean)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: setDisableHttpsSocketKeepAlive(Boolean disableHttpsSocketKeepAlive)
  nameWithType: RequestOptions.setDisableHttpsSocketKeepAlive(Boolean disableHttpsSocketKeepAlive)
  fullName: com.microsoft.azure.storage.RequestOptions.setDisableHttpsSocketKeepAlive(Boolean disableHttpsSocketKeepAlive)
  type: Method
  summary: "<p>Sets a value to indicate whether https socket keep-alive should be disabled. Use  to disable keep-alive; otherwise, </p>\r\n<p>The default is set in the client and is by default true, indicating that https socket keep-alive will be disabled. You can change the value on this request by setting this property. You can also change the value on on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use the appropriate value. </p>\r\n<p>Setting keep-alive on https sockets is to work around a bug in the JVM where connection timeouts are not honored on retried requests. In those cases, you may choose to use socket keep-alive as a fallback. Unfortunately, the timeout value must be taken from a JVM property rather than configured locally. Therefore, in rare cases the JVM has configured aggressively short keep-alive times, it may not be beneficial to enable the use of keep-alives lest they interfere with long running data transfer operations.</p>\r\n<p></p>"
  syntax:
    content: public void setDisableHttpsSocketKeepAlive(Boolean disableHttpsSocketKeepAlive)
    parameters:
    - id: disableHttpsSocketKeepAlive
      type: 866c2227
      description: <p>A value to indicate whether https socket keep-alive should be disabled. </p>
- uid: com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: setLocationMode(final LocationMode locationMode)
  nameWithType: RequestOptions.setLocationMode(final LocationMode locationMode)
  fullName: com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode locationMode)
  type: Method
  summary: "<p>Sets the <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode\"></xref> for this request. </p>\r\n<p>The default <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode\"></xref> is set in the client and is by default <xref uid=\"com.microsoft.azure.storage.LocationMode.PRIMARY_ONLY\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode#PRIMARY_ONLY\"></xref>. You can change the <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode\"></xref> on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use that <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public void setLocationMode(final LocationMode locationMode)
    parameters:
    - id: locationMode
      type: 93de0ef9com.microsoft.azure.storage.LocationMode
      description: <p>the locationMode to set </p>
- uid: com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  nameWithType: RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  fullName: com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  type: Method
  summary: "<p>Sets the maximum execution time to use when making this request. </p>\r\n<p>The maximum execution time interval begins at the time that the client begins building the request. The maximum execution time is checked intermittently while uploading data, downloading data, and before executing retries. The service will continue to upload, download, and retry until the maximum execution time is reached. At that time, any partial uploads or downloads will be cancelled and an exception will be thrown. </p>\r\n<p>The default maximum execution is set in the client and is by default null, indicating no maximum time. You can change the maximum execution time on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use the maximum execution time.</p>\r\n<p></p>"
  syntax:
    content: public void setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
    parameters:
    - id: maximumExecutionTimeInMs
      type: 08effaa0
      description: <p>The maximum execution time, in milliseconds, to use for this request. </p>
- uid: com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: setRequireEncryption(Boolean requireEncryption)
  nameWithType: RequestOptions.setRequireEncryption(Boolean requireEncryption)
  fullName: com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean requireEncryption)
  type: Method
  summary: "<p>Sets a value to indicate whether all data written and read must be encrypted. Use  to encrypt/decrypt data for transactions; otherwise, . </p>\r\n<p>The default is set in the client and is by default false, indicating encryption is not required. You can change the value on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use the appropriate value.</p>\r\n<p></p>"
  syntax:
    content: public void setRequireEncryption(Boolean requireEncryption)
    parameters:
    - id: requireEncryption
      type: 866c2227
      description: <p>A value to indicate whether all data written and read must be encrypted. </p>
- uid: com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  nameWithType: RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  fullName: com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  type: Method
  summary: "<p>Sets the RetryPolicyFactory object to use for this request. </p>\r\n<p>The default RetryPolicyFactory is set in the client and is by default <xref uid=\"com.microsoft.azure.storage.RetryExponentialRetry\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryExponentialRetry\"></xref>. You can change the RetryPolicyFactory on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use that RetryPolicyFactory.</p>\r\n<p></p>"
  syntax:
    content: public final void setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
    parameters:
    - id: retryPolicyFactory
      type: 93de0ef9com.microsoft.azure.storage.RetryPolicyFactory
      description: <p>the RetryPolicyFactory object to use when making service requests.</p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  nameWithType: RequestOptions.setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  fullName: com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  type: Method
  summary: "<p>Sets the timeout to use when making this request. </p>\r\n<p>The server timeout interval begins at the time that the complete request has been received by the service, and the server begins processing the response. If the timeout interval elapses before the response is returned to the client, the operation times out. The timeout interval resets with each retry, if the request is retried. </p>\r\n<p>The default server timeout is set in the client and is by default null, indicating no server timeout. You can change the server timeout on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use that server timeout.</p>\r\n<p></p>"
  syntax:
    content: public final void setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
    parameters:
    - id: timeoutIntervalInMs
      type: 3437983f
      description: <p>The timeout, in milliseconds, to use for this request. </p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage.RequestOptions
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.microsoft.azure.storage.RequestOptions
  type: Class
  summary: "<p>Represents the options to use while processing a given request. </p>"
  syntax:
    content: public class RequestOptions
- uid: com.microsoft.azure.storage.queue.QueueEncryptionPolicy
  parent: com.microsoft.azure.storage.queue
  href: com.microsoft.azure.storage.queue.QueueEncryptionPolicy.yml
  name: QueueEncryptionPolicy
  nameWithType: QueueEncryptionPolicy
  fullName: com.microsoft.azure.storage.queue.QueueEncryptionPolicy
  type: Class
  summary: "<p>Represents a queue encryption policy that is used to perform envelope encryption/decryption of Azure queue messages. </p>"
  syntax:
    content: public class QueueEncryptionPolicy
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions
  parent: com.microsoft.azure.storage.queue
  href: com.microsoft.azure.storage.queue.QueueRequestOptions.yml
  name: QueueRequestOptions
  nameWithType: QueueRequestOptions
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions
  type: Class
  summary: "<p>Represents a set of options that may be specified on a queue request. </p>"
  syntax: *o1
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy)
  parent: com.microsoft.azure.storage.queue.QueueRequestOptions
  href: com.microsoft.azure.storage.queue.QueueRequestOptions.yml
  name: setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
  nameWithType: QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
  type: Method
  summary: "<p>Sets the QueueEncryptionPolicy object to use for this request. </p>\r\n<p>The default QueueEncryptionPolicy is set in the client and is by default null, indicating no encryption. You can change the QueueEncryptionPolicy on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use that QueueEncryptionPolicy.</p>\r\n<p></p>"
  syntax: *o2
- uid: com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()
  parent: com.microsoft.azure.storage.ServiceClient
  href: com.microsoft.azure.storage.ServiceClient.yml
  name: getDefaultRequestOptions()
  nameWithType: ServiceClient.getDefaultRequestOptions()
  fullName: com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()
  type: Method
  summary: "<p>Gets the <xref uid=\"com.microsoft.azure.storage.RequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions\"></xref> that is used for requests associated with this </p>\r\n<p></p>"
  syntax:
    content: public abstract RequestOptions getDefaultRequestOptions()
    return:
      type: 13c86962com.microsoft.azure.storage.RequestOptions
      description: <p>The <xref uid="com.microsoft.azure.storage.RequestOptions" data-throw-if-not-resolved="false" data-raw-source="RequestOptions"></xref> object containing the values used by this <code>ServiceClient</code></p>
- uid: com.microsoft.azure.storage.queue.CloudQueueClient
  parent: com.microsoft.azure.storage.queue
  href: com.microsoft.azure.storage.queue.CloudQueueClient.yml
  name: CloudQueueClient
  nameWithType: CloudQueueClient
  fullName: com.microsoft.azure.storage.queue.CloudQueueClient
  type: Class
  summary: "<p>Provides a service client for accessing the Microsoft Azure Queue service. </p>"
  syntax:
    content: public class CloudQueueClient extends ServiceClient
