### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner"
fullName: "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner"
name: "LoadBalancingRuleInner"
nameWithType: "LoadBalancingRuleInner"
summary: "A load balancing rule for a load balancer."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.SubResource\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.SubResource.id()"
- "com.azure.core.management.SubResource.withId(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class LoadBalancingRuleInner extends SubResource"
constructors:
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.LoadBalancingRuleInner()"
methods:
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.backendAddressPool()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.backendPort()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.disableOutboundSnat()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.enableFloatingIp()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.enableTcpReset()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.etag()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.frontendIpConfiguration()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.frontendPort()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.idleTimeoutInMinutes()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.loadDistribution()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.name()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.probe()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.protocol()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.provisioningState()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.type()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.validate()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.withBackendAddressPool(com.azure.core.management.SubResource)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.withBackendPort(java.lang.Integer)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.withDisableOutboundSnat(java.lang.Boolean)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.withEnableFloatingIp(java.lang.Boolean)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.withEnableTcpReset(java.lang.Boolean)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.withFrontendIpConfiguration(com.azure.core.management.SubResource)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.withFrontendPort(java.lang.Integer)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.withIdleTimeoutInMinutes(java.lang.Integer)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.withLoadDistribution(com.azure.resourcemanager.network.models.LoadDistribution)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.withName(java.lang.String)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.withProbe(com.azure.core.management.SubResource)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner.withProtocol(com.azure.resourcemanager.network.models.TransportProtocol)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
