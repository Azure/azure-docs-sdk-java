### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.Certificates"
fullName: "com.microsoft.azure.batch.protocol.Certificates"
name: "Certificates"
nameWithType: "Certificates"
summary: "An instance of this class provides access to all the operations defined in Certificates."
syntax: "public interface Certificates"
methods:
- uid: "com.microsoft.azure.batch.protocol.Certificates.add(com.microsoft.azure.batch.protocol.models.CertificateAddParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.add(CertificateAddParameter certificate)"
  name: "add(CertificateAddParameter certificate)"
  nameWithType: "Certificates.add(CertificateAddParameter certificate)"
  summary: "Adds a Certificate to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Certificate to be added."
    name: "certificate"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddParameter?alt=com.microsoft.azure.batch.protocol.models.CertificateAddParameter&text=CertificateAddParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void add(CertificateAddParameter certificate)"
  desc: "Adds a Certificate to the specified Account."
- uid: "com.microsoft.azure.batch.protocol.Certificates.add(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)"
  name: "add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)"
  nameWithType: "Certificates.add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)"
  summary: "Adds a Certificate to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Certificate to be added."
    name: "certificate"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddParameter?alt=com.microsoft.azure.batch.protocol.models.CertificateAddParameter&text=CertificateAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateAddOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateAddOptions&text=CertificateAddOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)"
  desc: "Adds a Certificate to the specified Account."
- uid: "com.microsoft.azure.batch.protocol.Certificates.addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.addAsync(CertificateAddParameter certificate)"
  name: "addAsync(CertificateAddParameter certificate)"
  nameWithType: "Certificates.addAsync(CertificateAddParameter certificate)"
  summary: "Adds a Certificate to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Certificate to be added."
    name: "certificate"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddParameter?alt=com.microsoft.azure.batch.protocol.models.CertificateAddParameter&text=CertificateAddParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> addAsync(CertificateAddParameter certificate)"
  desc: "Adds a Certificate to the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)"
  name: "addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)"
  nameWithType: "Certificates.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)"
  summary: "Adds a Certificate to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Certificate to be added."
    name: "certificate"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddParameter?alt=com.microsoft.azure.batch.protocol.models.CertificateAddParameter&text=CertificateAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateAddOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateAddOptions&text=CertificateAddOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)"
  desc: "Adds a Certificate to the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, ServiceCallback<Void> serviceCallback)"
  name: "addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Certificates.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Adds a Certificate to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Certificate to be added."
    name: "certificate"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddParameter?alt=com.microsoft.azure.batch.protocol.models.CertificateAddParameter&text=CertificateAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateAddOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateAddOptions&text=CertificateAddOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Adds a Certificate to the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.addAsync(CertificateAddParameter certificate, ServiceCallback<Void> serviceCallback)"
  name: "addAsync(CertificateAddParameter certificate, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Certificates.addAsync(CertificateAddParameter certificate, ServiceCallback<Void> serviceCallback)"
  summary: "Adds a Certificate to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Certificate to be added."
    name: "certificate"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddParameter?alt=com.microsoft.azure.batch.protocol.models.CertificateAddParameter&text=CertificateAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> addAsync(CertificateAddParameter certificate, ServiceCallback<Void> serviceCallback)"
  desc: "Adds a Certificate to the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync(CertificateAddParameter certificate)"
  name: "addWithServiceResponseAsync(CertificateAddParameter certificate)"
  nameWithType: "Certificates.addWithServiceResponseAsync(CertificateAddParameter certificate)"
  summary: "Adds a Certificate to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Certificate to be added."
    name: "certificate"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddParameter?alt=com.microsoft.azure.batch.protocol.models.CertificateAddParameter&text=CertificateAddParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,CertificateAddHeaders>> addWithServiceResponseAsync(CertificateAddParameter certificate)"
  desc: "Adds a Certificate to the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateAddHeaders&text=CertificateAddHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)"
  name: "addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)"
  nameWithType: "Certificates.addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)"
  summary: "Adds a Certificate to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Certificate to be added."
    name: "certificate"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddParameter?alt=com.microsoft.azure.batch.protocol.models.CertificateAddParameter&text=CertificateAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateAddOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateAddOptions&text=CertificateAddOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,CertificateAddHeaders>> addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)"
  desc: "Adds a Certificate to the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateAddHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateAddHeaders&text=CertificateAddHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletion(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletion(String thumbprintAlgorithm, String thumbprint)"
  name: "cancelDeletion(String thumbprintAlgorithm, String thumbprint)"
  nameWithType: "Certificates.cancelDeletion(String thumbprintAlgorithm, String thumbprint)"
  summary: "Cancels a failed deletion of a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate being deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void cancelDeletion(String thumbprintAlgorithm, String thumbprint)"
  desc: "Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate."
- uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletion(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  name: "cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  nameWithType: "Certificates.cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  summary: "Cancels a failed deletion of a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate being deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateCancelDeletionOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions&text=CertificateCancelDeletionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  desc: "Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate."
- uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)"
  name: "cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)"
  nameWithType: "Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)"
  summary: "Cancels a failed deletion of a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate being deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)"
  desc: "Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  name: "cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  nameWithType: "Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  summary: "Cancels a failed deletion of a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate being deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateCancelDeletionOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions&text=CertificateCancelDeletionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  desc: "Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, ServiceCallback<Void> serviceCallback)"
  name: "cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Cancels a failed deletion of a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate being deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateCancelDeletionOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions&text=CertificateCancelDeletionOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)"
  name: "cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)"
  summary: "Cancels a failed deletion of a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate being deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)"
  desc: "Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)"
  name: "cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)"
  nameWithType: "Certificates.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)"
  summary: "Cancels a failed deletion of a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate being deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,CertificateCancelDeletionHeaders>> cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)"
  desc: "Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders&text=CertificateCancelDeletionHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  name: "cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  nameWithType: "Certificates.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  summary: "Cancels a failed deletion of a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate being deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateCancelDeletionOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions&text=CertificateCancelDeletionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,CertificateCancelDeletionHeaders>> cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  desc: "Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders&text=CertificateCancelDeletionHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.delete(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.delete(String thumbprintAlgorithm, String thumbprint)"
  name: "delete(String thumbprintAlgorithm, String thumbprint)"
  nameWithType: "Certificates.delete(String thumbprintAlgorithm, String thumbprint)"
  summary: "Deletes a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to be deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String thumbprintAlgorithm, String thumbprint)"
  desc: "Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate."
- uid: "com.microsoft.azure.batch.protocol.Certificates.delete(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)"
  name: "delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)"
  nameWithType: "Certificates.delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)"
  summary: "Deletes a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to be deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateDeleteOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions&text=CertificateDeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)"
  desc: "Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate."
- uid: "com.microsoft.azure.batch.protocol.Certificates.deleteAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint)"
  name: "deleteAsync(String thumbprintAlgorithm, String thumbprint)"
  nameWithType: "Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint)"
  summary: "Deletes a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to be deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint)"
  desc: "Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.deleteAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)"
  name: "deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)"
  nameWithType: "Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)"
  summary: "Deletes a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to be deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateDeleteOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions&text=CertificateDeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)"
  desc: "Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.deleteAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, ServiceCallback<Void> serviceCallback)"
  name: "deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Deletes a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to be deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateDeleteOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions&text=CertificateDeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.deleteAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)"
  name: "deleteAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)"
  summary: "Deletes a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to be deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)"
  desc: "Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)"
  name: "deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)"
  nameWithType: "Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)"
  summary: "Deletes a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to be deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,CertificateDeleteHeaders>> deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)"
  desc: "Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders&text=CertificateDeleteHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)"
  name: "deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)"
  nameWithType: "Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)"
  summary: "Deletes a Certificate from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to be deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateDeleteOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions&text=CertificateDeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,CertificateDeleteHeaders>> deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)"
  desc: "Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders&text=CertificateDeleteHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.get(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.get(String thumbprintAlgorithm, String thumbprint)"
  name: "get(String thumbprintAlgorithm, String thumbprint)"
  nameWithType: "Certificates.get(String thumbprintAlgorithm, String thumbprint)"
  summary: "Gets information about the specified Certificate."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to get."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Certificate get(String thumbprintAlgorithm, String thumbprint)"
  desc: "Gets information about the specified Certificate."
  returns:
    description: "the Certificate object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Certificates.get(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)"
  name: "get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)"
  nameWithType: "Certificates.get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)"
  summary: "Gets information about the specified Certificate."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to get."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateGetOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateGetOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateGetOptions&text=CertificateGetOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Certificate get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)"
  desc: "Gets information about the specified Certificate."
  returns:
    description: "the Certificate object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Certificates.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.getAsync(String thumbprintAlgorithm, String thumbprint)"
  name: "getAsync(String thumbprintAlgorithm, String thumbprint)"
  nameWithType: "Certificates.getAsync(String thumbprintAlgorithm, String thumbprint)"
  summary: "Gets information about the specified Certificate."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to get."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint)"
  desc: "Gets information about the specified Certificate."
  returns:
    description: "the observable to the Certificate object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)"
  name: "getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)"
  nameWithType: "Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)"
  summary: "Gets information about the specified Certificate."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to get."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateGetOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateGetOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateGetOptions&text=CertificateGetOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)"
  desc: "Gets information about the specified Certificate."
  returns:
    description: "the observable to the Certificate object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.Certificate>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, ServiceCallback<Certificate> serviceCallback)"
  name: "getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, ServiceCallback<Certificate> serviceCallback)"
  nameWithType: "Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, ServiceCallback<Certificate> serviceCallback)"
  summary: "Gets information about the specified Certificate."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to get."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateGetOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateGetOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateGetOptions&text=CertificateGetOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, ServiceCallback<Certificate> serviceCallback)"
  desc: "Gets information about the specified Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.getAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.Certificate>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Certificate> serviceCallback)"
  name: "getAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Certificate> serviceCallback)"
  nameWithType: "Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Certificate> serviceCallback)"
  summary: "Gets information about the specified Certificate."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to get."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Certificate> serviceCallback)"
  desc: "Gets information about the specified Certificate."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)"
  name: "getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)"
  nameWithType: "Certificates.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)"
  summary: "Gets information about the specified Certificate."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to get."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Certificate,CertificateGetHeaders>> getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)"
  desc: "Gets information about the specified Certificate."
  returns:
    description: "the observable to the Certificate object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateGetHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateGetHeaders&text=CertificateGetHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)"
  name: "getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)"
  nameWithType: "Certificates.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)"
  summary: "Gets information about the specified Certificate."
  modifiers:
  - "abstract"
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate to get."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateGetOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateGetOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateGetOptions&text=CertificateGetOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Certificate,CertificateGetHeaders>> getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)"
  desc: "Gets information about the specified Certificate."
  returns:
    description: "the observable to the Certificate object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateGetHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateGetHeaders&text=CertificateGetHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.list()"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.list()"
  name: "list()"
  nameWithType: "Certificates.list()"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedList<Certificate> list()"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the PagedList&lt;Certificate&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.list(com.microsoft.azure.batch.protocol.models.CertificateListOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.list(CertificateListOptions certificateListOptions)"
  name: "list(CertificateListOptions certificateListOptions)"
  nameWithType: "Certificates.list(CertificateListOptions certificateListOptions)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "certificateListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateListOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateListOptions&text=CertificateListOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<Certificate> list(CertificateListOptions certificateListOptions)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the PagedList&lt;Certificate&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listAsync()"
  name: "listAsync()"
  nameWithType: "Certificates.listAsync()"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<Page<Certificate>> listAsync()"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the observable to the PagedList&lt;Certificate&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listAsync(ListOperationCallback<Certificate> serviceCallback)"
  name: "listAsync(ListOperationCallback<Certificate> serviceCallback)"
  nameWithType: "Certificates.listAsync(ListOperationCallback<Certificate> serviceCallback)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<Certificate>> listAsync(ListOperationCallback<Certificate> serviceCallback)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listAsync(com.microsoft.azure.batch.protocol.models.CertificateListOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listAsync(CertificateListOptions certificateListOptions)"
  name: "listAsync(CertificateListOptions certificateListOptions)"
  nameWithType: "Certificates.listAsync(CertificateListOptions certificateListOptions)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "certificateListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateListOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateListOptions&text=CertificateListOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<Certificate>> listAsync(CertificateListOptions certificateListOptions)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the observable to the PagedList&lt;Certificate&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listAsync(com.microsoft.azure.batch.protocol.models.CertificateListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listAsync(CertificateListOptions certificateListOptions, ListOperationCallback<Certificate> serviceCallback)"
  name: "listAsync(CertificateListOptions certificateListOptions, ListOperationCallback<Certificate> serviceCallback)"
  nameWithType: "Certificates.listAsync(CertificateListOptions certificateListOptions, ListOperationCallback<Certificate> serviceCallback)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "certificateListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateListOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateListOptions&text=CertificateListOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<Certificate>> listAsync(CertificateListOptions certificateListOptions, ListOperationCallback<Certificate> serviceCallback)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listNext(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listNext(String nextPageLink)"
  name: "listNext(String nextPageLink)"
  nameWithType: "Certificates.listNext(String nextPageLink)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<Certificate> listNext(String nextPageLink)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the PagedList&lt;Certificate&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listNext(String nextPageLink, CertificateListNextOptions certificateListNextOptions)"
  name: "listNext(String nextPageLink, CertificateListNextOptions certificateListNextOptions)"
  nameWithType: "Certificates.listNext(String nextPageLink, CertificateListNextOptions certificateListNextOptions)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateListNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateListNextOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateListNextOptions&text=CertificateListNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<Certificate> listNext(String nextPageLink, CertificateListNextOptions certificateListNextOptions)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the PagedList&lt;Certificate&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listNextAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listNextAsync(String nextPageLink)"
  name: "listNextAsync(String nextPageLink)"
  nameWithType: "Certificates.listNextAsync(String nextPageLink)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<Certificate>> listNextAsync(String nextPageLink)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the observable to the PagedList&lt;Certificate&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)"
  name: "listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)"
  nameWithType: "Certificates.listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateListNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateListNextOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateListNextOptions&text=CertificateListNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<Certificate>> listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the observable to the PagedList&lt;Certificate&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)"
  name: "listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)"
  nameWithType: "Certificates.listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateListNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateListNextOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateListNextOptions&text=CertificateListNextOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ServiceFuture object tracking the Retrofit calls"
    name: "serviceFuture"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<Certificate>> listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listNextAsync(String nextPageLink, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)"
  name: "listNextAsync(String nextPageLink, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)"
  nameWithType: "Certificates.listNextAsync(String nextPageLink, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ServiceFuture object tracking the Retrofit calls"
    name: "serviceFuture"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<Certificate>> listNextAsync(String nextPageLink, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync(String nextPageLink)"
  name: "listNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "Certificates.listNextWithServiceResponseAsync(String nextPageLink)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<Certificate>,CertificateListHeaders>> listNextWithServiceResponseAsync(String nextPageLink)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the observable to the PagedList&lt;Certificate&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateListHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateListHeaders&text=CertificateListHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)"
  name: "listNextWithServiceResponseAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)"
  nameWithType: "Certificates.listNextWithServiceResponseAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateListNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateListNextOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateListNextOptions&text=CertificateListNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<Certificate>,CertificateListHeaders>> listNextWithServiceResponseAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the observable to the PagedList&lt;Certificate&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateListHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateListHeaders&text=CertificateListHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync()"
  name: "listWithServiceResponseAsync()"
  nameWithType: "Certificates.listWithServiceResponseAsync()"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<Certificate>,CertificateListHeaders>> listWithServiceResponseAsync()"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the observable to the PagedList&lt;Certificate&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateListHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateListHeaders&text=CertificateListHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.CertificateListOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync(CertificateListOptions certificateListOptions)"
  name: "listWithServiceResponseAsync(CertificateListOptions certificateListOptions)"
  nameWithType: "Certificates.listWithServiceResponseAsync(CertificateListOptions certificateListOptions)"
  summary: "Lists all of the Certificates that have been added to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "certificateListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateListOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateListOptions&text=CertificateListOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<Certificate>,CertificateListHeaders>> listWithServiceResponseAsync(CertificateListOptions certificateListOptions)"
  desc: "Lists all of the Certificates that have been added to the specified Account."
  returns:
    description: "the observable to the PagedList&lt;Certificate&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateListHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateListHeaders&text=CertificateListHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in Certificates."
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:9.0.0
