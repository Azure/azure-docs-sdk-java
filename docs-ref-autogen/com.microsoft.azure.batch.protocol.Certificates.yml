### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.Certificates
  id: Certificates
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol
  children:
  - com.microsoft.azure.batch.protocol.Certificates.add(com.microsoft.azure.batch.protocol.models.CertificateAddParameter)
  - com.microsoft.azure.batch.protocol.Certificates.add(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions)
  - com.microsoft.azure.batch.protocol.Certificates.addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter)
  - com.microsoft.azure.batch.protocol.Certificates.addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions)
  - com.microsoft.azure.batch.protocol.Certificates.addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Certificates.addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter)
  - com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions)
  - com.microsoft.azure.batch.protocol.Certificates.cancelDeletion(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.Certificates.cancelDeletion(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)
  - com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)
  - com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)
  - com.microsoft.azure.batch.protocol.Certificates.delete(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.Certificates.delete(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions)
  - com.microsoft.azure.batch.protocol.Certificates.deleteAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.Certificates.deleteAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions)
  - com.microsoft.azure.batch.protocol.Certificates.deleteAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Certificates.deleteAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions)
  - com.microsoft.azure.batch.protocol.Certificates.get(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.Certificates.get(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions)
  - com.microsoft.azure.batch.protocol.Certificates.getAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.Certificates.getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions)
  - com.microsoft.azure.batch.protocol.Certificates.getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  - com.microsoft.azure.batch.protocol.Certificates.getAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  - com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions)
  - com.microsoft.azure.batch.protocol.Certificates.list()
  - com.microsoft.azure.batch.protocol.Certificates.list(com.microsoft.azure.batch.protocol.models.CertificateListOptions)
  - com.microsoft.azure.batch.protocol.Certificates.listAsync()
  - com.microsoft.azure.batch.protocol.Certificates.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  - com.microsoft.azure.batch.protocol.Certificates.listAsync(com.microsoft.azure.batch.protocol.models.CertificateListOptions)
  - com.microsoft.azure.batch.protocol.Certificates.listAsync(com.microsoft.azure.batch.protocol.models.CertificateListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  - com.microsoft.azure.batch.protocol.Certificates.listNext(java.lang.String)
  - com.microsoft.azure.batch.protocol.Certificates.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions)
  - com.microsoft.azure.batch.protocol.Certificates.listNextAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Certificates.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions)
  - com.microsoft.azure.batch.protocol.Certificates.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  - com.microsoft.azure.batch.protocol.Certificates.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  - com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions)
  - com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.CertificateListOptions)
  langs:
  - java
  name: Certificates
  nameWithType: Certificates
  fullName: com.microsoft.azure.batch.protocol.Certificates
  type: Interface
  package: com.microsoft.azure.batch.protocol
  summary: An instance of this class provides access to all the operations defined in Certificates.
  syntax:
    content: public interface Certificates
- uid: com.microsoft.azure.batch.protocol.Certificates.add(com.microsoft.azure.batch.protocol.models.CertificateAddParameter)
  id: add(com.microsoft.azure.batch.protocol.models.CertificateAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: add(CertificateAddParameter certificate)
  nameWithType: Certificates.add(CertificateAddParameter certificate)
  fullName: com.microsoft.azure.batch.protocol.Certificates.add(CertificateAddParameter certificate)
  overload: com.microsoft.azure.batch.protocol.Certificates.add*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Certificate to the specified Account.
  syntax:
    content: public abstract void add(CertificateAddParameter certificate)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models.CertificateAddParameter
      description: The Certificate to be added.
- uid: com.microsoft.azure.batch.protocol.Certificates.add(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions)
  id: add(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  nameWithType: Certificates.add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.add*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Certificate to the specified Account.
  syntax:
    content: public abstract void add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models.CertificateAddParameter
      description: The Certificate to be added.
    - id: certificateAddOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateAddOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Certificates.addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter)
  id: addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: addAsync(CertificateAddParameter certificate)
  nameWithType: Certificates.addAsync(CertificateAddParameter certificate)
  fullName: com.microsoft.azure.batch.protocol.Certificates.addAsync(CertificateAddParameter certificate)
  overload: com.microsoft.azure.batch.protocol.Certificates.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Certificate to the specified Account.
  syntax:
    content: public abstract Observable<Void> addAsync(CertificateAddParameter certificate)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models.CertificateAddParameter
      description: The Certificate to be added.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions)
  id: addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  nameWithType: Certificates.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Certificate to the specified Account.
  syntax:
    content: public abstract Observable<Void> addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models.CertificateAddParameter
      description: The Certificate to be added.
    - id: certificateAddOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateAddOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Certificates.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Certificates.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Certificates.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Certificate to the specified Account.
  syntax:
    content: public abstract ServiceFuture<Void> addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models.CertificateAddParameter
      description: The Certificate to be added.
    - id: certificateAddOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateAddOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Certificates.addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: addAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: addAsync(CertificateAddParameter certificate, ServiceCallback<Void> serviceCallback)
  nameWithType: Certificates.addAsync(CertificateAddParameter certificate, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Certificates.addAsync(CertificateAddParameter certificate, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Certificates.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Certificate to the specified Account.
  syntax:
    content: public abstract ServiceFuture<Void> addAsync(CertificateAddParameter certificate, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models.CertificateAddParameter
      description: The Certificate to be added.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter)
  id: addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: addWithServiceResponseAsync(CertificateAddParameter certificate)
  nameWithType: Certificates.addWithServiceResponseAsync(CertificateAddParameter certificate)
  fullName: com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync(CertificateAddParameter certificate)
  overload: com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Certificate to the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,CertificateAddHeaders>> addWithServiceResponseAsync(CertificateAddParameter certificate)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models.CertificateAddParameter
      description: The Certificate to be added.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateAddHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions)
  id: addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.CertificateAddParameter,com.microsoft.azure.batch.protocol.models.CertificateAddOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  nameWithType: Certificates.addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Certificate to the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,CertificateAddHeaders>> addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models.CertificateAddParameter
      description: The Certificate to be added.
    - id: certificateAddOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateAddOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateAddHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.cancelDeletion(java.lang.String,java.lang.String)
  id: cancelDeletion(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: cancelDeletion(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.cancelDeletion(String thumbprintAlgorithm, String thumbprint)
  fullName: com.microsoft.azure.batch.protocol.Certificates.cancelDeletion(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.Certificates.cancelDeletion*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate.
  syntax:
    content: public abstract void cancelDeletion(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate being deleted.
- uid: com.microsoft.azure.batch.protocol.Certificates.cancelDeletion(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)
  id: cancelDeletion(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  nameWithType: Certificates.cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.cancelDeletion*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate.
  syntax:
    content: public abstract void cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate being deleted.
    - id: certificateCancelDeletionOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String)
  id: cancelDeletionAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate.
  syntax:
    content: public abstract Observable<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate being deleted.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)
  id: cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  nameWithType: Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate.
  syntax:
    content: public abstract Observable<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate being deleted.
    - id: certificateCancelDeletionOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate.
  syntax:
    content: public abstract ServiceFuture<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate being deleted.
    - id: certificateCancelDeletionOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)
  nameWithType: Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate.
  syntax:
    content: public abstract ServiceFuture<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate being deleted.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync(java.lang.String,java.lang.String)
  id: cancelDeletionWithServiceResponseAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,CertificateCancelDeletionHeaders>> cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate being deleted.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)
  id: cancelDeletionWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  nameWithType: Certificates.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,CertificateCancelDeletionHeaders>> cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate being deleted.
    - id: certificateCancelDeletionOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: delete(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.delete(String thumbprintAlgorithm, String thumbprint)
  fullName: com.microsoft.azure.batch.protocol.Certificates.delete(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.Certificates.delete*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate.
  syntax:
    content: public abstract void delete(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to be deleted.
- uid: com.microsoft.azure.batch.protocol.Certificates.delete(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions)
  id: delete(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  nameWithType: Certificates.delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.delete*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate.
  syntax:
    content: public abstract void delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to be deleted.
    - id: certificateDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Certificates.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: deleteAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: com.microsoft.azure.batch.protocol.Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.Certificates.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate.
  syntax:
    content: public abstract Observable<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to be deleted.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.deleteAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions)
  id: deleteAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  nameWithType: Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate.
  syntax:
    content: public abstract Observable<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to be deleted.
    - id: certificateDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.deleteAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: deleteAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Certificates.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate.
  syntax:
    content: public abstract ServiceFuture<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to be deleted.
    - id: certificateDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Certificates.deleteAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: deleteAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: deleteAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)
  nameWithType: Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Certificates.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate.
  syntax:
    content: public abstract ServiceFuture<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to be deleted.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithServiceResponseAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,CertificateDeleteHeaders>> deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to be deleted.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions)
  id: deleteWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  nameWithType: Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Certificate from the specified Account. You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,CertificateDeleteHeaders>> deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to be deleted.
    - id: certificateDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.get(java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: get(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.get(String thumbprintAlgorithm, String thumbprint)
  fullName: com.microsoft.azure.batch.protocol.Certificates.get(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.Certificates.get*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Certificate.
  syntax:
    content: public abstract Certificate get(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to get.
    return:
      type: com.microsoft.azure.batch.protocol.models.Certificate
      description: the Certificate object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.get(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions)
  id: get(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  nameWithType: Certificates.get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.get*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Certificate.
  syntax:
    content: public abstract Certificate get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to get.
    - id: certificateGetOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateGetOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.batch.protocol.models.Certificate
      description: the Certificate object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.getAsync(java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: getAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.getAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: com.microsoft.azure.batch.protocol.Certificates.getAsync(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.Certificates.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Certificate.
  syntax:
    content: public abstract Observable<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to get.
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the observable to the Certificate object
- uid: com.microsoft.azure.batch.protocol.Certificates.getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions)
  id: getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  nameWithType: Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Certificate.
  syntax:
    content: public abstract Observable<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to get.
    - id: certificateGetOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateGetOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the observable to the Certificate object
- uid: com.microsoft.azure.batch.protocol.Certificates.getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  id: getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, ServiceCallback<Certificate> serviceCallback)
  nameWithType: Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, ServiceCallback<Certificate> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, ServiceCallback<Certificate> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Certificates.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Certificate.
  syntax:
    content: public abstract ServiceFuture<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, ServiceCallback<Certificate> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to get.
    - id: certificateGetOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateGetOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Certificates.getAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  id: getAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: getAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Certificate> serviceCallback)
  nameWithType: Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Certificate> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Certificate> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Certificates.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Certificate.
  syntax:
    content: public abstract ServiceFuture<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Certificate> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to get.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync(java.lang.String,java.lang.String)
  id: getWithServiceResponseAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Certificate.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Certificate,CertificateGetHeaders>> getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to get.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.Certificate,com.microsoft.azure.batch.protocol.models.CertificateGetHeaders>>
      description: the observable to the Certificate object
- uid: com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions)
  id: getWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  nameWithType: Certificates.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Certificate.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Certificate,CertificateGetHeaders>> getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: java.lang.String
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
    - id: thumbprint
      type: java.lang.String
      description: The thumbprint of the Certificate to get.
    - id: certificateGetOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateGetOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.Certificate,com.microsoft.azure.batch.protocol.models.CertificateGetHeaders>>
      description: the observable to the Certificate object
- uid: com.microsoft.azure.batch.protocol.Certificates.list()
  id: list()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: list()
  nameWithType: Certificates.list()
  fullName: com.microsoft.azure.batch.protocol.Certificates.list()
  overload: com.microsoft.azure.batch.protocol.Certificates.list*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract PagedList<Certificate> list()
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the PagedList&lt;Certificate&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.list(com.microsoft.azure.batch.protocol.models.CertificateListOptions)
  id: list(com.microsoft.azure.batch.protocol.models.CertificateListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: list(CertificateListOptions certificateListOptions)
  nameWithType: Certificates.list(CertificateListOptions certificateListOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.list(CertificateListOptions certificateListOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.list*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract PagedList<Certificate> list(CertificateListOptions certificateListOptions)
    parameters:
    - id: certificateListOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateListOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the PagedList&lt;Certificate&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.listAsync()
  id: listAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listAsync()
  nameWithType: Certificates.listAsync()
  fullName: com.microsoft.azure.batch.protocol.Certificates.listAsync()
  overload: com.microsoft.azure.batch.protocol.Certificates.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract Observable<Page<Certificate>> listAsync()
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.Certificate>>
      description: the observable to the PagedList&lt;Certificate&gt; object
- uid: com.microsoft.azure.batch.protocol.Certificates.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  id: listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listAsync(ListOperationCallback<Certificate> serviceCallback)
  nameWithType: Certificates.listAsync(ListOperationCallback<Certificate> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Certificates.listAsync(ListOperationCallback<Certificate> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Certificates.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<Certificate>> listAsync(ListOperationCallback<Certificate> serviceCallback)
    parameters:
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Certificates.listAsync(com.microsoft.azure.batch.protocol.models.CertificateListOptions)
  id: listAsync(com.microsoft.azure.batch.protocol.models.CertificateListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listAsync(CertificateListOptions certificateListOptions)
  nameWithType: Certificates.listAsync(CertificateListOptions certificateListOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.listAsync(CertificateListOptions certificateListOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract Observable<Page<Certificate>> listAsync(CertificateListOptions certificateListOptions)
    parameters:
    - id: certificateListOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateListOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.Certificate>>
      description: the observable to the PagedList&lt;Certificate&gt; object
- uid: com.microsoft.azure.batch.protocol.Certificates.listAsync(com.microsoft.azure.batch.protocol.models.CertificateListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  id: listAsync(com.microsoft.azure.batch.protocol.models.CertificateListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listAsync(CertificateListOptions certificateListOptions, ListOperationCallback<Certificate> serviceCallback)
  nameWithType: Certificates.listAsync(CertificateListOptions certificateListOptions, ListOperationCallback<Certificate> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Certificates.listAsync(CertificateListOptions certificateListOptions, ListOperationCallback<Certificate> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Certificates.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<Certificate>> listAsync(CertificateListOptions certificateListOptions, ListOperationCallback<Certificate> serviceCallback)
    parameters:
    - id: certificateListOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateListOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Certificates.listNext(java.lang.String)
  id: listNext(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listNext(String nextPageLink)
  nameWithType: Certificates.listNext(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Certificates.listNext(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Certificates.listNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract PagedList<Certificate> listNext(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the PagedList&lt;Certificate&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions)
  id: listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listNext(String nextPageLink, CertificateListNextOptions certificateListNextOptions)
  nameWithType: Certificates.listNext(String nextPageLink, CertificateListNextOptions certificateListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.listNext(String nextPageLink, CertificateListNextOptions certificateListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.listNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract PagedList<Certificate> listNext(String nextPageLink, CertificateListNextOptions certificateListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: certificateListNextOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateListNextOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the PagedList&lt;Certificate&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Certificates.listNextAsync(java.lang.String)
  id: listNextAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listNextAsync(String nextPageLink)
  nameWithType: Certificates.listNextAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Certificates.listNextAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Certificates.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract Observable<Page<Certificate>> listNextAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.Certificate>>
      description: the observable to the PagedList&lt;Certificate&gt; object
- uid: com.microsoft.azure.batch.protocol.Certificates.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions)
  id: listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)
  nameWithType: Certificates.listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract Observable<Page<Certificate>> listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: certificateListNextOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateListNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.Certificate>>
      description: the observable to the PagedList&lt;Certificate&gt; object
- uid: com.microsoft.azure.batch.protocol.Certificates.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  id: listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)
  nameWithType: Certificates.listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Certificates.listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Certificates.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<Certificate>> listNextAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: certificateListNextOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateListNextOptions
      description: Additional parameters for the operation
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Certificates.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  id: listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listNextAsync(String nextPageLink, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)
  nameWithType: Certificates.listNextAsync(String nextPageLink, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Certificates.listNextAsync(String nextPageLink, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Certificates.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<Certificate>> listNextAsync(String nextPageLink, ServiceFuture<List<Certificate>> serviceFuture, ListOperationCallback<Certificate> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync(java.lang.String)
  id: listNextWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listNextWithServiceResponseAsync(String nextPageLink)
  nameWithType: Certificates.listNextWithServiceResponseAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<Certificate>,CertificateListHeaders>> listNextWithServiceResponseAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.Certificate>,com.microsoft.azure.batch.protocol.models.CertificateListHeaders>>
      description: the observable to the PagedList&lt;Certificate&gt; object
- uid: com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions)
  id: listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listNextWithServiceResponseAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)
  nameWithType: Certificates.listNextWithServiceResponseAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<Certificate>,CertificateListHeaders>> listNextWithServiceResponseAsync(String nextPageLink, CertificateListNextOptions certificateListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: certificateListNextOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateListNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.Certificate>,com.microsoft.azure.batch.protocol.models.CertificateListHeaders>>
      description: the observable to the PagedList&lt;Certificate&gt; object
- uid: com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync()
  id: listWithServiceResponseAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listWithServiceResponseAsync()
  nameWithType: Certificates.listWithServiceResponseAsync()
  fullName: com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<Certificate>,CertificateListHeaders>> listWithServiceResponseAsync()
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.Certificate>,com.microsoft.azure.batch.protocol.models.CertificateListHeaders>>
      description: the observable to the PagedList&lt;Certificate&gt; object
- uid: com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.CertificateListOptions)
  id: listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.CertificateListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Certificates
  langs:
  - java
  name: listWithServiceResponseAsync(CertificateListOptions certificateListOptions)
  nameWithType: Certificates.listWithServiceResponseAsync(CertificateListOptions certificateListOptions)
  fullName: com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync(CertificateListOptions certificateListOptions)
  overload: com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Certificates that have been added to the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<Certificate>,CertificateListHeaders>> listWithServiceResponseAsync(CertificateListOptions certificateListOptions)
    parameters:
    - id: certificateListOptions
      type: com.microsoft.azure.batch.protocol.models.CertificateListOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.Certificate>,com.microsoft.azure.batch.protocol.models.CertificateListHeaders>>
      description: the observable to the PagedList&lt;Certificate&gt; object
references:
- uid: com.microsoft.azure.batch.protocol.models.CertificateAddParameter
  name: CertificateAddParameter
  nameWithType: CertificateAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.CertificateAddParameter
- uid: com.microsoft.azure.batch.protocol.Certificates.add*
  name: add
  nameWithType: Certificates.add
  fullName: com.microsoft.azure.batch.protocol.Certificates.add
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Certificates.addAsync*
  name: addAsync
  nameWithType: Certificates.addAsync
  fullName: com.microsoft.azure.batch.protocol.Certificates.addAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<java.lang.Void>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateAddHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.CertificateAddHeaders
    name: CertificateAddHeaders
    fullName: com.microsoft.azure.batch.protocol.models.CertificateAddHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync*
  name: addWithServiceResponseAsync
  nameWithType: Certificates.addWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.CertificateAddOptions
  name: CertificateAddOptions
  nameWithType: CertificateAddOptions
  fullName: com.microsoft.azure.batch.protocol.models.CertificateAddOptions
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.Certificate>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.Certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Certificates.list*
  name: list
  nameWithType: Certificates.list
  fullName: com.microsoft.azure.batch.protocol.Certificates.list
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.Certificate>
  spec.java:
  - uid: com.microsoft.azure.ListOperationCallback
    name: ListOperationCallback
    fullName: com.microsoft.azure.ListOperationCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.Certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.Certificate>>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.Certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Certificates.listAsync*
  name: listAsync
  nameWithType: Certificates.listAsync
  fullName: com.microsoft.azure.batch.protocol.Certificates.listAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.Certificate>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.Certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.Certificate>,com.microsoft.azure.batch.protocol.models.CertificateListHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.Certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.CertificateListHeaders
    name: CertificateListHeaders
    fullName: com.microsoft.azure.batch.protocol.models.CertificateListHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync*
  name: listWithServiceResponseAsync
  nameWithType: Certificates.listWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.CertificateListOptions
  name: CertificateListOptions
  nameWithType: CertificateListOptions
  fullName: com.microsoft.azure.batch.protocol.models.CertificateListOptions
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.Certificates.cancelDeletion*
  name: cancelDeletion
  nameWithType: Certificates.cancelDeletion
  fullName: com.microsoft.azure.batch.protocol.Certificates.cancelDeletion
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync*
  name: cancelDeletionAsync
  nameWithType: Certificates.cancelDeletionAsync
  fullName: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders
    name: CertificateCancelDeletionHeaders
    fullName: com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync*
  name: cancelDeletionWithServiceResponseAsync
  nameWithType: Certificates.cancelDeletionWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions
  name: CertificateCancelDeletionOptions
  nameWithType: CertificateCancelDeletionOptions
  fullName: com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions
- uid: com.microsoft.azure.batch.protocol.Certificates.delete*
  name: delete
  nameWithType: Certificates.delete
  fullName: com.microsoft.azure.batch.protocol.Certificates.delete
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Certificates.deleteAsync*
  name: deleteAsync
  nameWithType: Certificates.deleteAsync
  fullName: com.microsoft.azure.batch.protocol.Certificates.deleteAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders
    name: CertificateDeleteHeaders
    fullName: com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync*
  name: deleteWithServiceResponseAsync
  nameWithType: Certificates.deleteWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions
  name: CertificateDeleteOptions
  nameWithType: CertificateDeleteOptions
  fullName: com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions
- uid: com.microsoft.azure.batch.protocol.models.Certificate
  name: Certificate
  nameWithType: Certificate
  fullName: com.microsoft.azure.batch.protocol.models.Certificate
- uid: com.microsoft.azure.batch.protocol.Certificates.get*
  name: get
  nameWithType: Certificates.get
  fullName: com.microsoft.azure.batch.protocol.Certificates.get
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.Certificate>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.Certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.Certificate>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.Certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Certificates.getAsync*
  name: getAsync
  nameWithType: Certificates.getAsync
  fullName: com.microsoft.azure.batch.protocol.Certificates.getAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.batch.protocol.models.Certificate>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.Certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.Certificate,com.microsoft.azure.batch.protocol.models.CertificateGetHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.Certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.CertificateGetHeaders
    name: CertificateGetHeaders
    fullName: com.microsoft.azure.batch.protocol.models.CertificateGetHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: Certificates.getWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.CertificateGetOptions
  name: CertificateGetOptions
  nameWithType: CertificateGetOptions
  fullName: com.microsoft.azure.batch.protocol.models.CertificateGetOptions
- uid: com.microsoft.azure.batch.protocol.Certificates.listNext*
  name: listNext
  nameWithType: Certificates.listNext
  fullName: com.microsoft.azure.batch.protocol.Certificates.listNext
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Certificates.listNextAsync*
  name: listNextAsync
  nameWithType: Certificates.listNextAsync
  fullName: com.microsoft.azure.batch.protocol.Certificates.listNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync*
  name: listNextWithServiceResponseAsync
  nameWithType: Certificates.listNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.CertificateListNextOptions
  name: CertificateListNextOptions
  nameWithType: CertificateListNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.CertificateListNextOptions
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.microsoft.rest.ServiceCallback
  name: ServiceCallback
  nameWithType: ServiceCallback
  fullName: com.microsoft.rest.ServiceCallback
- uid: com.microsoft.rest.ServiceFuture
  name: ServiceFuture
  nameWithType: ServiceFuture
  fullName: com.microsoft.rest.ServiceFuture
- uid: rx.Observable
  name: Observable
  nameWithType: Observable
  fullName: rx.Observable
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateAddHeaders
  name: Void,CertificateAddHeaders
  nameWithType: Void,CertificateAddHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateAddHeaders
- uid: com.microsoft.rest.ServiceResponseWithHeaders
  name: ServiceResponseWithHeaders
  nameWithType: ServiceResponseWithHeaders
  fullName: com.microsoft.rest.ServiceResponseWithHeaders
- uid: com.microsoft.azure.PagedList
  name: PagedList
  nameWithType: PagedList
  fullName: com.microsoft.azure.PagedList
- uid: com.microsoft.azure.ListOperationCallback
  name: ListOperationCallback
  nameWithType: ListOperationCallback
  fullName: com.microsoft.azure.ListOperationCallback
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.Page
  name: Page
  nameWithType: Page
  fullName: com.microsoft.azure.Page
- uid: com.microsoft.azure.batch.protocol.models.Certificate>,com.microsoft.azure.batch.protocol.models.CertificateListHeaders
  name: Certificate>,CertificateListHeaders
  nameWithType: Certificate>,CertificateListHeaders
  fullName: com.microsoft.azure.batch.protocol.models.Certificate>,com.microsoft.azure.batch.protocol.models.CertificateListHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders
  name: Void,CertificateCancelDeletionHeaders
  nameWithType: Void,CertificateCancelDeletionHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders
  name: Void,CertificateDeleteHeaders
  nameWithType: Void,CertificateDeleteHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders
- uid: com.microsoft.azure.batch.protocol.models.Certificate,com.microsoft.azure.batch.protocol.models.CertificateGetHeaders
  name: Certificate,CertificateGetHeaders
  nameWithType: Certificate,CertificateGetHeaders
  fullName: com.microsoft.azure.batch.protocol.models.Certificate,com.microsoft.azure.batch.protocol.models.CertificateGetHeaders
