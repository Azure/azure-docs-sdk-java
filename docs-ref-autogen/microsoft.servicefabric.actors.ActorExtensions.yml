### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.actors.ActorExtensions.getActorId(T actor)
  name: getActorId(T actor)
  nameWithType: ActorExtensions.getActorId(T actor)
  parameters:
  - description: <p>Actor object to get ActorId for. </p>
    name: actor
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  returns:
    description: >-
      <p>

        <xref uid="microsoft.servicefabric.actors.ActorId" data-throw-if-not-resolved="false" data-raw-source="ActorId"></xref> for the actor. </p>
    type: static&lt;T extends <xref href="microsoft.servicefabric.actors.Actor?alt=microsoft.servicefabric.actors.Actor&text=Actor" data-throw-if-not-resolved="False"/>&gt; <xref href="microsoft.servicefabric.actors.ActorId?alt=microsoft.servicefabric.actors.ActorId&text=ActorId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets <xref uid="microsoft.servicefabric.actors.ActorId" data-throw-if-not-resolved="false" data-raw-source="ActorId"></xref> for the actor.</p>

    <p></p>
  syntax: public static static<T extends Actor> ActorId getActorId(T actor)
  uid: microsoft.servicefabric.actors.ActorExtensions.getActorId(T)
- fullName: microsoft.servicefabric.actors.ActorExtensions.getActorReference(Actor actor)
  name: getActorReference(Actor actor)
  nameWithType: ActorExtensions.getActorReference(Actor actor)
  parameters:
  - description: <p>Actor object to get ActorReference for. </p>
    name: actor
    type: <xref href="microsoft.servicefabric.actors.Actor?alt=microsoft.servicefabric.actors.Actor&text=Actor" data-throw-if-not-resolved="False"/>
  returns:
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ActorReference"></xref> for the actor. </p>
    type: <xref href="microsoft.servicefabric.actors.FabricActorReference?alt=microsoft.servicefabric.actors.FabricActorReference&text=FabricActorReference" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ActorReference"></xref> for the actor.</p>

    <p></p>
  syntax: public static FabricActorReference getActorReference(Actor actor)
  uid: microsoft.servicefabric.actors.ActorExtensions.getActorReference(Actor)
nameWithType: ActorExtensions
syntax: public class ActorExtensions
type: class
uid: microsoft.servicefabric.actors.ActorExtensions
fullName: microsoft.servicefabric.actors.ActorExtensions
name: ActorExtensions
package: microsoft.servicefabric.actors
summary: <p>Class containing extension methods for Actors. </p>
metadata: {}
