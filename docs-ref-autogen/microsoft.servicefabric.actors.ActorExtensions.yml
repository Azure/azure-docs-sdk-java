### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.ActorExtensions
  id: ActorExtensions
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors.ActorExtensions.getActorId(T)
  - microsoft.servicefabric.actors.ActorExtensions.getActorReference(Actor)
  href: microsoft.servicefabric.actors.ActorExtensions.yml
  langs:
  - java
  name: ActorExtensions
  nameWithType: ActorExtensions
  fullName: microsoft.servicefabric.actors.ActorExtensions
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorExtensions.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorExtensions.java
    startLine: 5
  package: microsoft.servicefabric.actors
  summary: "<p>Class containing extension methods for Actors. </p>"
  syntax:
    content: public class ActorExtensions
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.actors.ActorExtensions.getActorId(T)
  id: getActorId(T)
  parent: microsoft.servicefabric.actors.ActorExtensions
  href: microsoft.servicefabric.actors.ActorExtensions.yml
  langs:
  - java
  name: getActorId(T actor)
  nameWithType: ActorExtensions.getActorId(T actor)
  fullName: microsoft.servicefabric.actors.ActorExtensions.getActorId(T actor)
  overload: microsoft.servicefabric.actors.ActorExtensions.getActorId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorExtensions.java
    startLine: 15
  package: microsoft.servicefabric.actors
  summary: "<p>Gets <xref uid=\"microsoft.servicefabric.actors.ActorId\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ActorId\"></xref> for the actor.</p>\r\n<p></p>"
  syntax:
    content: public static static<T extends Actor> ActorId getActorId(T actor)
    parameters:
    - id: actor
      type: 8ce1ecb9
      description: <p>Actor object to get ActorId for. </p>
    return:
      type: 1e2c6103microsoft.servicefabric.actors.Actor410a1f1cmicrosoft.servicefabric.actors.ActorId
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors.ActorId" data-throw-if-not-resolved="false" data-raw-source="ActorId"></xref> for the actor. </p>
- uid: microsoft.servicefabric.actors.ActorExtensions.getActorReference(Actor)
  id: getActorReference(Actor)
  parent: microsoft.servicefabric.actors.ActorExtensions
  href: microsoft.servicefabric.actors.ActorExtensions.yml
  langs:
  - java
  name: getActorReference(Actor actor)
  nameWithType: ActorExtensions.getActorReference(Actor actor)
  fullName: microsoft.servicefabric.actors.ActorExtensions.getActorReference(Actor actor)
  overload: microsoft.servicefabric.actors.ActorExtensions.getActorReference*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorExtensions.java
    startLine: 26
  package: microsoft.servicefabric.actors
  summary: "<p>Gets <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ActorReference\"></xref> for the actor.</p>\r\n<p></p>"
  syntax:
    content: public static FabricActorReference getActorReference(Actor actor)
    parameters:
    - id: actor
      type: microsoft.servicefabric.actors.Actor
      description: <p>Actor object to get ActorReference for. </p>
    return:
      type: microsoft.servicefabric.actors.FabricActorReference
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ActorReference"></xref> for the actor. </p>
references:
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: 1e2c6103microsoft.servicefabric.actors.Actor410a1f1cmicrosoft.servicefabric.actors.ActorId
  spec.java:
  - name: 'static<T extends '
    fullName: 'static<T extends '
  - uid: microsoft.servicefabric.actors.Actor
    name: Actor
    fullName: microsoft.servicefabric.actors.Actor
    href: microsoft.servicefabric.actors.Actor.yml
  - name: '> '
    fullName: '> '
  - uid: microsoft.servicefabric.actors.ActorId
    name: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    href: microsoft.servicefabric.actors.ActorId.yml
- uid: microsoft.servicefabric.actors.ActorExtensions.getActorId*
  name: getActorId
  nameWithType: ActorExtensions.getActorId
  fullName: microsoft.servicefabric.actors.ActorExtensions.getActorId
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors.ActorExtensions.getActorReference*
  name: getActorReference
  nameWithType: ActorExtensions.getActorReference
  fullName: microsoft.servicefabric.actors.ActorExtensions.getActorReference
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors.Actor
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors.Actor.yml
  name: Actor
  nameWithType: Actor
  fullName: microsoft.servicefabric.actors.Actor
  type: Interface
  summary: "<p>Base interface for inheriting reliable actor interfaces. </p>"
  syntax:
    content: public interface Actor
- uid: microsoft.servicefabric.actors.ActorId
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors.ActorId.yml
  name: ActorId
  nameWithType: ActorId
  fullName: microsoft.servicefabric.actors.ActorId
  type: Class
  summary: "<p>ActorId represents identity of an actor within an actor service. The actors can be identified by <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.String\"></xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.UUID\"></xref> or long. </p>"
  syntax:
    content: public class ActorId
- uid: microsoft.servicefabric.actors.FabricActorReference
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors.FabricActorReference.yml
  name: FabricActorReference
  nameWithType: FabricActorReference
  fullName: microsoft.servicefabric.actors.FabricActorReference
  type: Class
  summary: "<p>Encapsulation of a reference to an actor for serialization. </p>"
  syntax:
    content: public class FabricActorReference
