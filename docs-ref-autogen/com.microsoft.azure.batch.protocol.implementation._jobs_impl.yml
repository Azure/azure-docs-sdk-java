items:
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  id: _jobs_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  children:
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.add(JobAddParameter)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.add(JobAddParameter,JobAddOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync(JobAddParameter)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync(JobAddParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync(JobAddParameter,JobAddOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync(JobAddParameter,JobAddOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.addWithServiceResponseAsync(JobAddParameter)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.addWithServiceResponseAsync(JobAddParameter,JobAddOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.delete(String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.delete(String,JobDeleteOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync(String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync(String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync(String,JobDeleteOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync(String,JobDeleteOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteWithServiceResponseAsync(String,JobDeleteOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.disable(String,DisableJobOption)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.disable(String,DisableJobOption,JobDisableOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync(String,DisableJobOption)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync(String,DisableJobOption,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync(String,DisableJobOption,JobDisableOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync(String,DisableJobOption,JobDisableOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableWithServiceResponseAsync(String,DisableJobOption)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableWithServiceResponseAsync(String,DisableJobOption,JobDisableOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.enable(String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.enable(String,JobEnableOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync(String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync(String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync(String,JobEnableOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync(String,JobEnableOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableWithServiceResponseAsync(String,JobEnableOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.get(String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.get(String,JobGetOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatistics()
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync()
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions,final ServiceCallback<JobStatistics>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync(String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync(String,final ServiceCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync(String,JobGetOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync(String,JobGetOptions,final ServiceCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.getWithServiceResponseAsync(String,JobGetOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.JobsImpl(Retrofit,BatchServiceClientImpl)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.list()
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.list(final JobListOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync()
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync(final JobListOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync(final JobListOptions,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync(final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobSchedule(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobSchedule(final String,final JobListFromJobScheduleOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync(final String,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNext(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNext(final String,final JobListFromJobScheduleNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextSinglePageAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextSinglePageAsync(final String,final JobListFromJobScheduleNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextWithServiceResponseAsync(final String,final JobListFromJobScheduleNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleSinglePageAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleSinglePageAsync(final String,final JobListFromJobScheduleOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleWithServiceResponseAsync(final String,final JobListFromJobScheduleOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNext(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNext(final String,final JobListNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync(final String,final JobListNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync(final String,final JobListNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextSinglePageAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextSinglePageAsync(final String,final JobListNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextWithServiceResponseAsync(final String,final JobListNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatus(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatus(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync(final String,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNext(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNext(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync(final String,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusSinglePageAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusSinglePageAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listSinglePageAsync()
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listSinglePageAsync(final JobListOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.listWithServiceResponseAsync(final JobListOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.patch(String,JobPatchParameter)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.patch(String,JobPatchParameter,JobPatchOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync(String,JobPatchParameter)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync(String,JobPatchParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync(String,JobPatchParameter,JobPatchOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync(String,JobPatchParameter,JobPatchOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchWithServiceResponseAsync(String,JobPatchParameter)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchWithServiceResponseAsync(String,JobPatchParameter,JobPatchOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminate(String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminate(String,String,JobTerminateOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync(String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync(String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync(String,String,JobTerminateOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync(String,String,JobTerminateOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateWithServiceResponseAsync(String,String,JobTerminateOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.update(String,JobUpdateParameter)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.update(String,JobUpdateParameter,JobUpdateOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync(String,JobUpdateParameter)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync(String,JobUpdateParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync(String,JobUpdateParameter,JobUpdateOptions)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync(String,JobUpdateParameter,JobUpdateOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateWithServiceResponseAsync(String,JobUpdateParameter)
  - com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateWithServiceResponseAsync(String,JobUpdateParameter,JobUpdateOptions)
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: JobsImpl
  nameWithType: JobsImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.JobsImpl
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
      branch: master
      repo: https://github.com/Azure/azure-batch-sdk-for-java
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 84
  package: com.microsoft.azure.batch.protocol.implementation
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._jobs" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: &o1
    content: public class JobsImpl implements Jobs
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.batch.protocol._jobs
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.add(JobAddParameter)
  id: add(JobAddParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: add(JobAddParameter job)
  nameWithType: JobsImpl.add(JobAddParameter job)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.add(JobAddParameter job)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.add*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1963
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public void add(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.add(JobAddParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.add(JobAddParameter,JobAddOptions)
  id: add(JobAddParameter,JobAddOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: add(JobAddParameter job, JobAddOptions jobAddOptions)
  nameWithType: JobsImpl.add(JobAddParameter job, JobAddOptions jobAddOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.add(JobAddParameter job, JobAddOptions jobAddOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.add*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2046
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public void add(JobAddParameter job, JobAddOptions jobAddOptions)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models._job_add_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.add(JobAddParameter,JobAddOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync(JobAddParameter)
  id: addAsync(JobAddParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: addAsync(JobAddParameter job)
  nameWithType: JobsImpl.addAsync(JobAddParameter job)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.addAsync(JobAddParameter job)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1988
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addAsync(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.addAsync(JobAddParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync(JobAddParameter,final ServiceCallback<Void>)
  id: addAsync(JobAddParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: addAsync(JobAddParameter job, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.addAsync(JobAddParameter job, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.addAsync(JobAddParameter job, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1976
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addAsync(JobAddParameter job, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.addAsync(JobAddParameter,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync(JobAddParameter,JobAddOptions)
  id: addAsync(JobAddParameter,JobAddOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  nameWithType: JobsImpl.addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2073
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models._job_add_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.addAsync(JobAddParameter,JobAddOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync(JobAddParameter,JobAddOptions,final ServiceCallback<Void>)
  id: addAsync(JobAddParameter,JobAddOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: addAsync(JobAddParameter job, JobAddOptions jobAddOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.addAsync(JobAddParameter job, JobAddOptions jobAddOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.addAsync(JobAddParameter job, JobAddOptions jobAddOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2060
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addAsync(JobAddParameter job, JobAddOptions jobAddOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models._job_add_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.addAsync(JobAddParameter,JobAddOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addWithServiceResponseAsync(JobAddParameter)
  id: addWithServiceResponseAsync(JobAddParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: addWithServiceResponseAsync(JobAddParameter job)
  nameWithType: JobsImpl.addWithServiceResponseAsync(JobAddParameter job)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobAddHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.addWithServiceResponseAsync(JobAddParameter job)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2005
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobAddHeaders>> addWithServiceResponseAsync(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_add_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.addWithServiceResponseAsync(JobAddParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addWithServiceResponseAsync(JobAddParameter,JobAddOptions)
  id: addWithServiceResponseAsync(JobAddParameter,JobAddOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  nameWithType: JobsImpl.addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobAddHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2091
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobAddHeaders>> addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models._job_add_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_add_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.addWithServiceResponseAsync(JobAddParameter,JobAddOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.delete(String)
  id: delete(String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: delete(String jobId)
  nameWithType: JobsImpl.delete(String jobId)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.delete(String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.delete*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 350
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public void delete(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.delete(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.delete(String,JobDeleteOptions)
  id: delete(String,JobDeleteOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: delete(String jobId, JobDeleteOptions jobDeleteOptions)
  nameWithType: JobsImpl.delete(String jobId, JobDeleteOptions jobDeleteOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.delete(String jobId, JobDeleteOptions jobDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.delete*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 444
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public void delete(String jobId, JobDeleteOptions jobDeleteOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._job_delete_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.delete(String,JobDeleteOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync(String)
  id: deleteAsync(String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: deleteAsync(String jobId)
  nameWithType: JobsImpl.deleteAsync(String jobId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.deleteAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 375
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.deleteAsync(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync(String,final ServiceCallback<Void>)
  id: deleteAsync(String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: deleteAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.deleteAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.deleteAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 363
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String jobId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.deleteAsync(String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync(String,JobDeleteOptions)
  id: deleteAsync(String,JobDeleteOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  nameWithType: JobsImpl.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 471
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._job_delete_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.deleteAsync(String,JobDeleteOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync(String,JobDeleteOptions,final ServiceCallback<Void>)
  id: deleteAsync(String,JobDeleteOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 458
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._job_delete_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.deleteAsync(String,JobDeleteOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteWithServiceResponseAsync(String)
  id: deleteWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: deleteWithServiceResponseAsync(String jobId)
  nameWithType: JobsImpl.deleteWithServiceResponseAsync(String jobId)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobDeleteHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.deleteWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 392
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobDeleteHeaders>> deleteWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_delete_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.deleteWithServiceResponseAsync(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteWithServiceResponseAsync(String,JobDeleteOptions)
  id: deleteWithServiceResponseAsync(String,JobDeleteOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  nameWithType: JobsImpl.deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobDeleteHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 489
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobDeleteHeaders>> deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._job_delete_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_delete_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.deleteWithServiceResponseAsync(String,JobDeleteOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disable(String,DisableJobOption)
  id: disable(String,DisableJobOption)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: disable(String jobId, DisableJobOption disableTasks)
  nameWithType: JobsImpl.disable(String jobId, DisableJobOption disableTasks)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.disable(String jobId, DisableJobOption disableTasks)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disable*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1271
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public void disable(String jobId, DisableJobOption disableTasks)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
  overridden: com.microsoft.azure.batch.protocol._jobs.disable(String,DisableJobOption)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disable(String,DisableJobOption,JobDisableOptions)
  id: disable(String,DisableJobOption,JobDisableOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: JobsImpl.disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disable*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1374
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public void disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models._job_disable_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.disable(String,DisableJobOption,JobDisableOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync(String,DisableJobOption)
  id: disableAsync(String,DisableJobOption)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: disableAsync(String jobId, DisableJobOption disableTasks)
  nameWithType: JobsImpl.disableAsync(String jobId, DisableJobOption disableTasks)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.disableAsync(String jobId, DisableJobOption disableTasks)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1298
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public Observable<Void> disableAsync(String jobId, DisableJobOption disableTasks)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.disableAsync(String,DisableJobOption)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync(String,DisableJobOption,final ServiceCallback<Void>)
  id: disableAsync(String,DisableJobOption,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: disableAsync(String jobId, DisableJobOption disableTasks, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.disableAsync(String jobId, DisableJobOption disableTasks, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.disableAsync(String jobId, DisableJobOption disableTasks, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1285
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> disableAsync(String jobId, DisableJobOption disableTasks, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.disableAsync(String,DisableJobOption,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync(String,DisableJobOption,JobDisableOptions)
  id: disableAsync(String,DisableJobOption,JobDisableOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: JobsImpl.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1403
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public Observable<Void> disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models._job_disable_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.disableAsync(String,DisableJobOption,JobDisableOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync(String,DisableJobOption,JobDisableOptions,final ServiceCallback<Void>)
  id: disableAsync(String,DisableJobOption,JobDisableOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1389
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models._job_disable_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.disableAsync(String,DisableJobOption,JobDisableOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableWithServiceResponseAsync(String,DisableJobOption)
  id: disableWithServiceResponseAsync(String,DisableJobOption)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
  nameWithType: JobsImpl.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobDisableHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1316
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobDisableHeaders>> disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_disable_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.disableWithServiceResponseAsync(String,DisableJobOption)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableWithServiceResponseAsync(String,DisableJobOption,JobDisableOptions)
  id: disableWithServiceResponseAsync(String,DisableJobOption,JobDisableOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: JobsImpl.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobDisableHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1422
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobDisableHeaders>> disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models._job_disable_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_disable_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.disableWithServiceResponseAsync(String,DisableJobOption,JobDisableOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enable(String)
  id: enable(String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: enable(String jobId)
  nameWithType: JobsImpl.enable(String jobId)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.enable(String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enable*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1509
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public void enable(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.enable(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enable(String,JobEnableOptions)
  id: enable(String,JobEnableOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: enable(String jobId, JobEnableOptions jobEnableOptions)
  nameWithType: JobsImpl.enable(String jobId, JobEnableOptions jobEnableOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.enable(String jobId, JobEnableOptions jobEnableOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enable*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1603
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public void enable(String jobId, JobEnableOptions jobEnableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models._job_enable_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.enable(String,JobEnableOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync(String)
  id: enableAsync(String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: enableAsync(String jobId)
  nameWithType: JobsImpl.enableAsync(String jobId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.enableAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1534
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public Observable<Void> enableAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.enableAsync(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync(String,final ServiceCallback<Void>)
  id: enableAsync(String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: enableAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.enableAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.enableAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1522
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> enableAsync(String jobId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.enableAsync(String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync(String,JobEnableOptions)
  id: enableAsync(String,JobEnableOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: enableAsync(String jobId, JobEnableOptions jobEnableOptions)
  nameWithType: JobsImpl.enableAsync(String jobId, JobEnableOptions jobEnableOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.enableAsync(String jobId, JobEnableOptions jobEnableOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1630
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public Observable<Void> enableAsync(String jobId, JobEnableOptions jobEnableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models._job_enable_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.enableAsync(String,JobEnableOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync(String,JobEnableOptions,final ServiceCallback<Void>)
  id: enableAsync(String,JobEnableOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: enableAsync(String jobId, JobEnableOptions jobEnableOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.enableAsync(String jobId, JobEnableOptions jobEnableOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.enableAsync(String jobId, JobEnableOptions jobEnableOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1617
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> enableAsync(String jobId, JobEnableOptions jobEnableOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models._job_enable_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.enableAsync(String,JobEnableOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableWithServiceResponseAsync(String)
  id: enableWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: enableWithServiceResponseAsync(String jobId)
  nameWithType: JobsImpl.enableWithServiceResponseAsync(String jobId)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobEnableHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.enableWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1551
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobEnableHeaders>> enableWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_enable_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.enableWithServiceResponseAsync(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableWithServiceResponseAsync(String,JobEnableOptions)
  id: enableWithServiceResponseAsync(String,JobEnableOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
  nameWithType: JobsImpl.enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobEnableHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1648
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobEnableHeaders>> enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models._job_enable_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_enable_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.enableWithServiceResponseAsync(String,JobEnableOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.get(String)
  id: get(String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: get(String jobId)
  nameWithType: JobsImpl.get(String jobId)
  fullName: CloudJob com.microsoft.azure.batch.protocol.implementation.JobsImpl.get(String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 571
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public CloudJob get(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._cloud_job
      description: <p>the CloudJob object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.get(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.get(String,JobGetOptions)
  id: get(String,JobGetOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: get(String jobId, JobGetOptions jobGetOptions)
  nameWithType: JobsImpl.get(String jobId, JobGetOptions jobGetOptions)
  fullName: CloudJob com.microsoft.azure.batch.protocol.implementation.JobsImpl.get(String jobId, JobGetOptions jobGetOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 664
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public CloudJob get(String jobId, JobGetOptions jobGetOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._cloud_job
      description: <p>the CloudJob object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.get(String,JobGetOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatistics()
  id: getAllLifetimeStatistics()
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getAllLifetimeStatistics()
  nameWithType: JobsImpl.getAllLifetimeStatistics()
  fullName: JobStatistics com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAllLifetimeStatistics()
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatistics*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 177
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public JobStatistics getAllLifetimeStatistics()
    return:
      type: com.microsoft.azure.batch.protocol.models._job_statistics
      description: <p>the JobStatistics object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatistics()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: JobsImpl.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  fullName: JobStatistics com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatistics*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 253
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public JobStatistics getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._job_statistics
      description: <p>the JobStatistics object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync()
  id: getAllLifetimeStatisticsAsync()
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getAllLifetimeStatisticsAsync()
  nameWithType: JobsImpl.getAllLifetimeStatisticsAsync()
  fullName: Observable<JobStatistics> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAllLifetimeStatisticsAsync()
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 200
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public Observable<JobStatistics> getAllLifetimeStatisticsAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
      description: <p>the observable to the JobStatistics object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatisticsAsync()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics>)
  id: getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  nameWithType: JobsImpl.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  fullName: ServiceFuture<JobStatistics> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 189
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<JobStatistics> getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: JobsImpl.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  fullName: Observable<JobStatistics> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 278
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public Observable<JobStatistics> getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
      description: <p>the observable to the JobStatistics object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions,final ServiceCallback<JobStatistics>)
  id: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions,final ServiceCallback<JobStatistics>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  nameWithType: JobsImpl.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  fullName: ServiceFuture<JobStatistics> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 266
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<JobStatistics> getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions,final ServiceCallback<JobStatistics>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsWithServiceResponseAsync()
  id: getAllLifetimeStatisticsWithServiceResponseAsync()
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getAllLifetimeStatisticsWithServiceResponseAsync()
  nameWithType: JobsImpl.getAllLifetimeStatisticsWithServiceResponseAsync()
  fullName: Observable<ServiceResponseWithHeaders<JobStatistics, JobGetAllLifetimeStatisticsHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAllLifetimeStatisticsWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 216
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<JobStatistics, JobGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync()
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._job_statisticsb33c76fccom.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_headerse7daa122
      description: <p>the observable to the JobStatistics object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatisticsWithServiceResponseAsync()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: JobsImpl.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  fullName: Observable<ServiceResponseWithHeaders<JobStatistics, JobGetAllLifetimeStatisticsHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 295
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<JobStatistics, JobGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._job_statisticsb33c76fccom.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_headerse7daa122
      description: <p>the observable to the JobStatistics object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync(String)
  id: getAsync(String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getAsync(String jobId)
  nameWithType: JobsImpl.getAsync(String jobId)
  fullName: Observable<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 594
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public Observable<CloudJob> getAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the observable to the CloudJob object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getAsync(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync(String,final ServiceCallback<CloudJob>)
  id: getAsync(String,final ServiceCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getAsync(String jobId, final ServiceCallback<CloudJob> serviceCallback)
  nameWithType: JobsImpl.getAsync(String jobId, final ServiceCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAsync(String jobId, final ServiceCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 583
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CloudJob> getAsync(String jobId, final ServiceCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getAsync(String,final ServiceCallback<CloudJob>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync(String,JobGetOptions)
  id: getAsync(String,JobGetOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getAsync(String jobId, JobGetOptions jobGetOptions)
  nameWithType: JobsImpl.getAsync(String jobId, JobGetOptions jobGetOptions)
  fullName: Observable<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAsync(String jobId, JobGetOptions jobGetOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 689
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public Observable<CloudJob> getAsync(String jobId, JobGetOptions jobGetOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the observable to the CloudJob object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getAsync(String,JobGetOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync(String,JobGetOptions,final ServiceCallback<CloudJob>)
  id: getAsync(String,JobGetOptions,final ServiceCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getAsync(String jobId, JobGetOptions jobGetOptions, final ServiceCallback<CloudJob> serviceCallback)
  nameWithType: JobsImpl.getAsync(String jobId, JobGetOptions jobGetOptions, final ServiceCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAsync(String jobId, JobGetOptions jobGetOptions, final ServiceCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 677
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CloudJob> getAsync(String jobId, JobGetOptions jobGetOptions, final ServiceCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getAsync(String,JobGetOptions,final ServiceCallback<CloudJob>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getWithServiceResponseAsync(String)
  id: getWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String jobId)
  nameWithType: JobsImpl.getWithServiceResponseAsync(String jobId)
  fullName: Observable<ServiceResponseWithHeaders<CloudJob, JobGetHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 610
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<CloudJob, JobGetHeaders>> getWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._cloud_jobb33c76fccom.microsoft.azure.batch.protocol.models._job_get_headerse7daa122
      description: <p>the observable to the CloudJob object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getWithServiceResponseAsync(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getWithServiceResponseAsync(String,JobGetOptions)
  id: getWithServiceResponseAsync(String,JobGetOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
  nameWithType: JobsImpl.getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
  fullName: Observable<ServiceResponseWithHeaders<CloudJob, JobGetHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 706
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<CloudJob, JobGetHeaders>> getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._cloud_jobb33c76fccom.microsoft.azure.batch.protocol.models._job_get_headerse7daa122
      description: <p>the observable to the CloudJob object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.getWithServiceResponseAsync(String,JobGetOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.JobsImpl(Retrofit,BatchServiceClientImpl)
  id: JobsImpl(Retrofit,BatchServiceClientImpl)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: JobsImpl(Retrofit retrofit, BatchServiceClientImpl client)
  nameWithType: JobsImpl.JobsImpl(Retrofit retrofit, BatchServiceClientImpl client)
  fullName: com.microsoft.azure.batch.protocol.implementation.JobsImpl.JobsImpl(Retrofit retrofit, BatchServiceClientImpl client)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.JobsImpl*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 96
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Initializes an instance of <xref href="com.microsoft.azure.batch.protocol.implementation._jobs_impl" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public JobsImpl(Retrofit retrofit, BatchServiceClientImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.list()
  id: list()
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: list()
  nameWithType: JobsImpl.list()
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.list()
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2149
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> list()
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.list()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.list(final JobListOptions)
  id: list(final JobListOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: list(final JobListOptions jobListOptions)
  nameWithType: JobsImpl.list(final JobListOptions jobListOptions)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.list(final JobListOptions jobListOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2260
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> list(final JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.list(final JobListOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync()
  id: listAsync()
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listAsync()
  nameWithType: JobsImpl.listAsync()
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listAsync()
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2184
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listAsync()
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listAsync()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync(final JobListOptions)
  id: listAsync(final JobListOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listAsync(final JobListOptions jobListOptions)
  nameWithType: JobsImpl.listAsync(final JobListOptions jobListOptions)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listAsync(final JobListOptions jobListOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2311
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listAsync(final JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listAsync(final JobListOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync(final JobListOptions,final ListOperationCallback<CloudJob>)
  id: listAsync(final JobListOptions,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listAsync(final JobListOptions jobListOptions, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: JobsImpl.listAsync(final JobListOptions jobListOptions, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listAsync(final JobListOptions jobListOptions, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2285
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listAsync(final JobListOptions jobListOptions, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listAsync(final JobListOptions,final ListOperationCallback<CloudJob>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync(final ListOperationCallback<CloudJob>)
  id: listAsync(final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listAsync(final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: JobsImpl.listAsync(final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listAsync(final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2166
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listAsync(final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listAsync(final ListOperationCallback<CloudJob>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobSchedule(final String)
  id: listFromJobSchedule(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobSchedule(final String jobScheduleId)
  nameWithType: JobsImpl.listFromJobSchedule(final String jobScheduleId)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobSchedule(final String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobSchedule*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2427
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> listFromJobSchedule(final String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobSchedule(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobSchedule(final String,final JobListFromJobScheduleOptions)
  id: listFromJobSchedule(final String,final JobListFromJobScheduleOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobSchedule(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: JobsImpl.listFromJobSchedule(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobSchedule(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobSchedule*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2546
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> listFromJobSchedule(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobSchedule(final String,final JobListFromJobScheduleOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync(final String)
  id: listFromJobScheduleAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleAsync(final String jobScheduleId)
  nameWithType: JobsImpl.listFromJobScheduleAsync(final String jobScheduleId)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleAsync(final String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2464
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listFromJobScheduleAsync(final String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions)
  id: listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: JobsImpl.listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2599
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions,final ListOperationCallback<CloudJob>)
  id: listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: JobsImpl.listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2572
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions,final ListOperationCallback<CloudJob>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync(final String,final ListOperationCallback<CloudJob>)
  id: listFromJobScheduleAsync(final String,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleAsync(final String jobScheduleId, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: JobsImpl.listFromJobScheduleAsync(final String jobScheduleId, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleAsync(final String jobScheduleId, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2445
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listFromJobScheduleAsync(final String jobScheduleId, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleAsync(final String,final ListOperationCallback<CloudJob>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNext(final String)
  id: listFromJobScheduleNext(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleNext(final String nextPageLink)
  nameWithType: JobsImpl.listFromJobScheduleNext(final String nextPageLink)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNext(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3263
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> listFromJobScheduleNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNext(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNext(final String,final JobListFromJobScheduleNextOptions)
  id: listFromJobScheduleNext(final String,final JobListFromJobScheduleNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleNext(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: JobsImpl.listFromJobScheduleNext(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNext(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3376
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> listFromJobScheduleNext(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNext(final String,final JobListFromJobScheduleNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync(final String)
  id: listFromJobScheduleNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleNextAsync(final String nextPageLink)
  nameWithType: JobsImpl.listFromJobScheduleNextAsync(final String nextPageLink)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3301
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listFromJobScheduleNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNextAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions)
  id: listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: JobsImpl.listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3416
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  id: listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: JobsImpl.listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3396
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  id: listFromJobScheduleNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: JobsImpl.listFromJobScheduleNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3282
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listFromJobScheduleNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextSinglePageAsync(final String)
  id: listFromJobScheduleNextSinglePageAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleNextSinglePageAsync(final String nextPageLink)
  nameWithType: JobsImpl.listFromJobScheduleNextSinglePageAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNextSinglePageAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3339
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleNextSinglePageAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
      description: <p>the PagedList&lt;CloudJob&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextSinglePageAsync(final String,final JobListFromJobScheduleNextOptions)
  id: listFromJobScheduleNextSinglePageAsync(final String,final JobListFromJobScheduleNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleNextSinglePageAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: JobsImpl.listFromJobScheduleNextSinglePageAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNextSinglePageAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3456
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;CloudJob&gt;, JobListFromJobScheduleHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleNextSinglePageAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. ServiceResponseWithHeaders&lt;PageImpl&lt;CloudJob&gt;, JobListFromJobScheduleHeaders&gt; * </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
      description: <p>the PagedList&lt;CloudJob&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextWithServiceResponseAsync(final String)
  id: listFromJobScheduleNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: JobsImpl.listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3318
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNextWithServiceResponseAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextWithServiceResponseAsync(final String,final JobListFromJobScheduleNextOptions)
  id: listFromJobScheduleNextWithServiceResponseAsync(final String,final JobListFromJobScheduleNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: JobsImpl.listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3434
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNextWithServiceResponseAsync(final String,final JobListFromJobScheduleNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleSinglePageAsync(final String)
  id: listFromJobScheduleSinglePageAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleSinglePageAsync(final String jobScheduleId)
  nameWithType: JobsImpl.listFromJobScheduleSinglePageAsync(final String jobScheduleId)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleSinglePageAsync(final String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2502
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleSinglePageAsync(final String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
      description: <p>the PagedList&lt;CloudJob&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleSinglePageAsync(final String,final JobListFromJobScheduleOptions)
  id: listFromJobScheduleSinglePageAsync(final String,final JobListFromJobScheduleOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleSinglePageAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: JobsImpl.listFromJobScheduleSinglePageAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleSinglePageAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2646
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;CloudJob&gt;, JobListFromJobScheduleHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleSinglePageAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. ServiceResponseWithHeaders&lt;PageImpl&lt;CloudJob&gt;, JobListFromJobScheduleHeaders&gt; * </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
      description: <p>the PagedList&lt;CloudJob&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleWithServiceResponseAsync(final String)
  id: listFromJobScheduleWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId)
  nameWithType: JobsImpl.listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2481
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleWithServiceResponseAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleWithServiceResponseAsync(final String,final JobListFromJobScheduleOptions)
  id: listFromJobScheduleWithServiceResponseAsync(final String,final JobListFromJobScheduleOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: JobsImpl.listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2617
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleWithServiceResponseAsync(final String,final JobListFromJobScheduleOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNext(final String)
  id: listNext(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listNext(final String nextPageLink)
  nameWithType: JobsImpl.listNext(final String nextPageLink)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNext(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3018
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> listNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listNext(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNext(final String,final JobListNextOptions)
  id: listNext(final String,final JobListNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listNext(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  nameWithType: JobsImpl.listNext(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNext(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3131
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> listNext(final String nextPageLink, final JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listNext(final String,final JobListNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync(final String)
  id: listNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink)
  nameWithType: JobsImpl.listNextAsync(final String nextPageLink)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3056
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listNextAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync(final String,final JobListNextOptions)
  id: listNextAsync(final String,final JobListNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  nameWithType: JobsImpl.listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3171
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listNextAsync(final String,final JobListNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync(final String,final JobListNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  id: listNextAsync(final String,final JobListNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: JobsImpl.listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3151
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listNextAsync(final String,final JobListNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  id: listNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: JobsImpl.listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3037
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextSinglePageAsync(final String)
  id: listNextSinglePageAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listNextSinglePageAsync(final String nextPageLink)
  nameWithType: JobsImpl.listNextSinglePageAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNextSinglePageAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3094
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listNextSinglePageAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
      description: <p>the PagedList&lt;CloudJob&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextSinglePageAsync(final String,final JobListNextOptions)
  id: listNextSinglePageAsync(final String,final JobListNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listNextSinglePageAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  nameWithType: JobsImpl.listNextSinglePageAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNextSinglePageAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3211
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;CloudJob&gt;, JobListHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listNextSinglePageAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. ServiceResponseWithHeaders&lt;PageImpl&lt;CloudJob&gt;, JobListHeaders&gt; * </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
      description: <p>the PagedList&lt;CloudJob&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextWithServiceResponseAsync(final String)
  id: listNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: JobsImpl.listNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3073
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listNextWithServiceResponseAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextWithServiceResponseAsync(final String,final JobListNextOptions)
  id: listNextWithServiceResponseAsync(final String,final JobListNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  nameWithType: JobsImpl.listNextWithServiceResponseAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNextWithServiceResponseAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3189
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listNextWithServiceResponseAsync(final String,final JobListNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatus(final String)
  id: listPreparationAndReleaseTaskStatus(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatus(final String jobId)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatus(final String jobId)
  fullName: PagedList<JobPreparationAndReleaseTaskExecutionInformation> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatus(final String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatus*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2721
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatus(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatus(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  id: listPreparationAndReleaseTaskStatus(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatus(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatus(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: PagedList<JobPreparationAndReleaseTaskExecutionInformation> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatus(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatus*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2844
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatus(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync(final String)
  id: listPreparationAndReleaseTaskStatusAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusAsync(final String jobId)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusAsync(final String jobId)
  fullName: Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusAsync(final String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2760
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  id: listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2899
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  id: listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2871
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync(final String,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  id: listPreparationAndReleaseTaskStatusAsync(final String,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusAsync(final String jobId, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusAsync(final String jobId, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusAsync(final String jobId, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2740
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(final String jobId, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusAsync(final String,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNext(final String)
  id: listPreparationAndReleaseTaskStatusNext(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNext(final String nextPageLink)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNext(final String nextPageLink)
  fullName: PagedList<JobPreparationAndReleaseTaskExecutionInformation> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNext(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3509
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatusNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNext(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNext(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  id: listPreparationAndReleaseTaskStatusNext(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNext(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNext(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: PagedList<JobPreparationAndReleaseTaskExecutionInformation> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNext(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3627
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatusNext(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNext(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync(final String)
  id: listPreparationAndReleaseTaskStatusNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  fullName: Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3549
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNextAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  id: listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3669
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  id: listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3648
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync(final String,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  id: listPreparationAndReleaseTaskStatusNextAsync(final String,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3529
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String)
  id: listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String nextPageLink)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3589
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  id: listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3711
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;JobPreparationAndReleaseTaskExecutionInformation&gt;, JobListPreparationAndReleaseTaskStatusHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusNextSinglePageAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. ServiceResponseWithHeaders&lt;PageImpl&lt;JobPreparationAndReleaseTaskExecutionInformation&gt;, JobListPreparationAndReleaseTaskStatusHeaders&gt; * </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String)
  id: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3567
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  id: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 3688
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusSinglePageAsync(final String)
  id: listPreparationAndReleaseTaskStatusSinglePageAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusSinglePageAsync(final String jobId)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusSinglePageAsync(final String jobId)
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusSinglePageAsync(final String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2800
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusSinglePageAsync(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusSinglePageAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  id: listPreparationAndReleaseTaskStatusSinglePageAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusSinglePageAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusSinglePageAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusSinglePageAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2948
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;JobPreparationAndReleaseTaskExecutionInformation&gt;, JobListPreparationAndReleaseTaskStatusHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusSinglePageAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. ServiceResponseWithHeaders&lt;PageImpl&lt;JobPreparationAndReleaseTaskExecutionInformation&gt;, JobListPreparationAndReleaseTaskStatusHeaders&gt; * </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String)
  id: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId)
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2778
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  id: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2918
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listSinglePageAsync()
  id: listSinglePageAsync()
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listSinglePageAsync()
  nameWithType: JobsImpl.listSinglePageAsync()
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listSinglePageAsync()
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2220
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listSinglePageAsync()
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
      description: <p>the PagedList&lt;CloudJob&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listSinglePageAsync(final JobListOptions)
  id: listSinglePageAsync(final JobListOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listSinglePageAsync(final JobListOptions jobListOptions)
  nameWithType: JobsImpl.listSinglePageAsync(final JobListOptions jobListOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listSinglePageAsync(final JobListOptions jobListOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2356
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;CloudJob&gt;, JobListHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listSinglePageAsync(final JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
      description: <p>the PagedList&lt;CloudJob&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listWithServiceResponseAsync()
  id: listWithServiceResponseAsync()
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listWithServiceResponseAsync()
  nameWithType: JobsImpl.listWithServiceResponseAsync()
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2200
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listWithServiceResponseAsync()
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listWithServiceResponseAsync()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listWithServiceResponseAsync(final JobListOptions)
  id: listWithServiceResponseAsync(final JobListOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: listWithServiceResponseAsync(final JobListOptions jobListOptions)
  nameWithType: JobsImpl.listWithServiceResponseAsync(final JobListOptions jobListOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listWithServiceResponseAsync(final JobListOptions jobListOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 2328
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listWithServiceResponseAsync(final JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.listWithServiceResponseAsync(final JobListOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patch(String,JobPatchParameter)
  id: patch(String,JobPatchParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: patch(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: JobsImpl.patch(String jobId, JobPatchParameter jobPatchParameter)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.patch(String jobId, JobPatchParameter jobPatchParameter)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patch*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 797
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public void patch(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.patch(String,JobPatchParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patch(String,JobPatchParameter,JobPatchOptions)
  id: patch(String,JobPatchParameter,JobPatchOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  nameWithType: JobsImpl.patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patch*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 899
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public void patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models._job_patch_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.patch(String,JobPatchParameter,JobPatchOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync(String,JobPatchParameter)
  id: patchAsync(String,JobPatchParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: JobsImpl.patchAsync(String jobId, JobPatchParameter jobPatchParameter)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.patchAsync(String jobId, JobPatchParameter jobPatchParameter)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 824
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.patchAsync(String,JobPatchParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync(String,JobPatchParameter,final ServiceCallback<Void>)
  id: patchAsync(String,JobPatchParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.patchAsync(String jobId, JobPatchParameter jobPatchParameter, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.patchAsync(String jobId, JobPatchParameter jobPatchParameter, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 811
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.patchAsync(String,JobPatchParameter,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync(String,JobPatchParameter,JobPatchOptions)
  id: patchAsync(String,JobPatchParameter,JobPatchOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  nameWithType: JobsImpl.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 928
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models._job_patch_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.patchAsync(String,JobPatchParameter,JobPatchOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync(String,JobPatchParameter,JobPatchOptions,final ServiceCallback<Void>)
  id: patchAsync(String,JobPatchParameter,JobPatchOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 914
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models._job_patch_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.patchAsync(String,JobPatchParameter,JobPatchOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchWithServiceResponseAsync(String,JobPatchParameter)
  id: patchWithServiceResponseAsync(String,JobPatchParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: JobsImpl.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobPatchHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 842
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobPatchHeaders>> patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_patch_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.patchWithServiceResponseAsync(String,JobPatchParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchWithServiceResponseAsync(String,JobPatchParameter,JobPatchOptions)
  id: patchWithServiceResponseAsync(String,JobPatchParameter,JobPatchOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  nameWithType: JobsImpl.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobPatchHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 947
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobPatchHeaders>> patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models._job_patch_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_patch_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.patchWithServiceResponseAsync(String,JobPatchParameter,JobPatchOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminate(String)
  id: terminate(String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: terminate(String jobId)
  nameWithType: JobsImpl.terminate(String jobId)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.terminate(String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminate*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1730
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public void terminate(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.terminate(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminate(String,String,JobTerminateOptions)
  id: terminate(String,String,JobTerminateOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  nameWithType: JobsImpl.terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminate*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1828
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public void terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: terminateReason
      type: "26831127"
      description: <p>The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'. </p>
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models._job_terminate_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.terminate(String,String,JobTerminateOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync(String)
  id: terminateAsync(String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: terminateAsync(String jobId)
  nameWithType: JobsImpl.terminateAsync(String jobId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.terminateAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1755
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> terminateAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.terminateAsync(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync(String,final ServiceCallback<Void>)
  id: terminateAsync(String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: terminateAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.terminateAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.terminateAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1743
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> terminateAsync(String jobId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.terminateAsync(String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync(String,String,JobTerminateOptions)
  id: terminateAsync(String,String,JobTerminateOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  nameWithType: JobsImpl.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1857
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: terminateReason
      type: "26831127"
      description: <p>The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'. </p>
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models._job_terminate_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.terminateAsync(String,String,JobTerminateOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync(String,String,JobTerminateOptions,final ServiceCallback<Void>)
  id: terminateAsync(String,String,JobTerminateOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1843
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: terminateReason
      type: "26831127"
      description: <p>The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'. </p>
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models._job_terminate_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.terminateAsync(String,String,JobTerminateOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateWithServiceResponseAsync(String)
  id: terminateWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: terminateWithServiceResponseAsync(String jobId)
  nameWithType: JobsImpl.terminateWithServiceResponseAsync(String jobId)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobTerminateHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.terminateWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1772
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobTerminateHeaders>> terminateWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_terminate_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.terminateWithServiceResponseAsync(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateWithServiceResponseAsync(String,String,JobTerminateOptions)
  id: terminateWithServiceResponseAsync(String,String,JobTerminateOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  nameWithType: JobsImpl.terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobTerminateHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1876
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobTerminateHeaders>> terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: terminateReason
      type: "26831127"
      description: <p>The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'. </p>
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models._job_terminate_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_terminate_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.terminateWithServiceResponseAsync(String,String,JobTerminateOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.update(String,JobUpdateParameter)
  id: update(String,JobUpdateParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: update(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: JobsImpl.update(String jobId, JobUpdateParameter jobUpdateParameter)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.update(String jobId, JobUpdateParameter jobUpdateParameter)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.update*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1034
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public void update(String jobId, JobUpdateParameter jobUpdateParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.update(String,JobUpdateParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.update(String,JobUpdateParameter,JobUpdateOptions)
  id: update(String,JobUpdateParameter,JobUpdateOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: JobsImpl.update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.update*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1136
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public void update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models._job_update_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.update(String,JobUpdateParameter,JobUpdateOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync(String,JobUpdateParameter)
  id: updateAsync(String,JobUpdateParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: JobsImpl.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1061
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.updateAsync(String,JobUpdateParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync(String,JobUpdateParameter,final ServiceCallback<Void>)
  id: updateAsync(String,JobUpdateParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1048
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.updateAsync(String,JobUpdateParameter,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync(String,JobUpdateParameter,JobUpdateOptions)
  id: updateAsync(String,JobUpdateParameter,JobUpdateOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: JobsImpl.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1165
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models._job_update_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.updateAsync(String,JobUpdateParameter,JobUpdateOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync(String,JobUpdateParameter,JobUpdateOptions,final ServiceCallback<Void>)
  id: updateAsync(String,JobUpdateParameter,JobUpdateOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsImpl.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1151
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models._job_update_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.updateAsync(String,JobUpdateParameter,JobUpdateOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateWithServiceResponseAsync(String,JobUpdateParameter)
  id: updateWithServiceResponseAsync(String,JobUpdateParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: JobsImpl.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobUpdateHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1079
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobUpdateHeaders>> updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_update_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.updateWithServiceResponseAsync(String,JobUpdateParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateWithServiceResponseAsync(String,JobUpdateParameter,JobUpdateOptions)
  id: updateWithServiceResponseAsync(String,JobUpdateParameter,JobUpdateOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  langs:
  - java
  name: updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: JobsImpl.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobUpdateHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/JobsImpl.java
    startLine: 1184
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobUpdateHeaders>> updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models._job_update_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_update_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._jobs.updateWithServiceResponseAsync(String,JobUpdateParameter,JobUpdateOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.JobsImpl*
  name: JobsImpl
  nameWithType: JobsImpl.JobsImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.JobsImpl.JobsImpl
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: c8683d81
  spec.java:
  - name: BatchErrorException
    fullName: BatchErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatistics*
  name: getAllLifetimeStatistics
  nameWithType: JobsImpl.getAllLifetimeStatistics
  fullName: JobStatistics com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAllLifetimeStatistics
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 897eb10acom.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models._job_statistics
    name: JobStatistics
    fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
    href: com.microsoft.azure.batch.protocol.models._job_statistics.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models._job_statistics
    name: JobStatistics
    fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
    href: com.microsoft.azure.batch.protocol.models._job_statistics.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsAsync*
  name: getAllLifetimeStatisticsAsync
  nameWithType: JobsImpl.getAllLifetimeStatisticsAsync
  fullName: ServiceFuture<JobStatistics> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAllLifetimeStatisticsAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models._job_statistics
    name: JobStatistics
    fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
    href: com.microsoft.azure.batch.protocol.models._job_statistics.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models._job_statisticsb33c76fccom.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models._job_statistics
    name: JobStatistics
    fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
    href: com.microsoft.azure.batch.protocol.models._job_statistics.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_headers
    name: JobGetAllLifetimeStatisticsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders
    href: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAllLifetimeStatisticsWithServiceResponseAsync*
  name: getAllLifetimeStatisticsWithServiceResponseAsync
  nameWithType: JobsImpl.getAllLifetimeStatisticsWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<JobStatistics, JobGetAllLifetimeStatisticsHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAllLifetimeStatisticsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.delete*
  name: delete
  nameWithType: JobsImpl.delete
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.delete
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 1c186eb5
  spec.java:
  - name: final ServiceCallback<Void>
    fullName: final ServiceCallback<Void>
- uid: aa81d378
  spec.java:
  - name: ServiceFuture<Void>
    fullName: ServiceFuture<Void>
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteAsync*
  name: deleteAsync
  nameWithType: JobsImpl.deleteAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.deleteAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._job_delete_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._job_delete_headers
    name: JobDeleteHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobDeleteHeaders
    href: com.microsoft.azure.batch.protocol.models._job_delete_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.deleteWithServiceResponseAsync*
  name: deleteWithServiceResponseAsync
  nameWithType: JobsImpl.deleteWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, JobDeleteHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.deleteWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.get*
  name: get
  nameWithType: JobsImpl.get
  fullName: CloudJob com.microsoft.azure.batch.protocol.implementation.JobsImpl.get
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 897eb10acom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_job
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models._cloud_job.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_job
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models._cloud_job.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getAsync*
  name: getAsync
  nameWithType: JobsImpl.getAsync
  fullName: ServiceFuture<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_job
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models._cloud_job.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models._cloud_jobb33c76fccom.microsoft.azure.batch.protocol.models._job_get_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_job
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models._cloud_job.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models._job_get_headers
    name: JobGetHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobGetHeaders
    href: com.microsoft.azure.batch.protocol.models._job_get_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: JobsImpl.getWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<CloudJob, JobGetHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.getWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patch*
  name: patch
  nameWithType: JobsImpl.patch
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.patch
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchAsync*
  name: patchAsync
  nameWithType: JobsImpl.patchAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.patchAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._job_patch_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._job_patch_headers
    name: JobPatchHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobPatchHeaders
    href: com.microsoft.azure.batch.protocol.models._job_patch_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.patchWithServiceResponseAsync*
  name: patchWithServiceResponseAsync
  nameWithType: JobsImpl.patchWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, JobPatchHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.patchWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.update*
  name: update
  nameWithType: JobsImpl.update
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.update
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateAsync*
  name: updateAsync
  nameWithType: JobsImpl.updateAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.updateAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._job_update_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._job_update_headers
    name: JobUpdateHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobUpdateHeaders
    href: com.microsoft.azure.batch.protocol.models._job_update_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.updateWithServiceResponseAsync*
  name: updateWithServiceResponseAsync
  nameWithType: JobsImpl.updateWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, JobUpdateHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.updateWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disable*
  name: disable
  nameWithType: JobsImpl.disable
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.disable
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableAsync*
  name: disableAsync
  nameWithType: JobsImpl.disableAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.disableAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._job_disable_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._job_disable_headers
    name: JobDisableHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobDisableHeaders
    href: com.microsoft.azure.batch.protocol.models._job_disable_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.disableWithServiceResponseAsync*
  name: disableWithServiceResponseAsync
  nameWithType: JobsImpl.disableWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, JobDisableHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.disableWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enable*
  name: enable
  nameWithType: JobsImpl.enable
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.enable
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableAsync*
  name: enableAsync
  nameWithType: JobsImpl.enableAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.enableAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._job_enable_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._job_enable_headers
    name: JobEnableHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobEnableHeaders
    href: com.microsoft.azure.batch.protocol.models._job_enable_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.enableWithServiceResponseAsync*
  name: enableWithServiceResponseAsync
  nameWithType: JobsImpl.enableWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, JobEnableHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.enableWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminate*
  name: terminate
  nameWithType: JobsImpl.terminate
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.terminate
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateAsync*
  name: terminateAsync
  nameWithType: JobsImpl.terminateAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.terminateAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._job_terminate_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._job_terminate_headers
    name: JobTerminateHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobTerminateHeaders
    href: com.microsoft.azure.batch.protocol.models._job_terminate_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.terminateWithServiceResponseAsync*
  name: terminateWithServiceResponseAsync
  nameWithType: JobsImpl.terminateWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, JobTerminateHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.terminateWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.add*
  name: add
  nameWithType: JobsImpl.add
  fullName: void com.microsoft.azure.batch.protocol.implementation.JobsImpl.add
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addAsync*
  name: addAsync
  nameWithType: JobsImpl.addAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.JobsImpl.addAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._job_add_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._job_add_headers
    name: JobAddHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobAddHeaders
    href: com.microsoft.azure.batch.protocol.models._job_add_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.addWithServiceResponseAsync*
  name: addWithServiceResponseAsync
  nameWithType: JobsImpl.addWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, JobAddHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.addWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_job
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models._cloud_job.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.list*
  name: list
  nameWithType: JobsImpl.list
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.list
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_job
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models._cloud_job.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_job
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models._cloud_job.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listAsync*
  name: listAsync
  nameWithType: JobsImpl.listAsync
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_job
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models._cloud_job.yml
  - name: '>>'
    fullName: '>>'
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_job
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models._cloud_job.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models._job_list_headers
    name: JobListHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobListHeaders
    href: com.microsoft.azure.batch.protocol.models._job_list_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listWithServiceResponseAsync*
  name: listWithServiceResponseAsync
  nameWithType: JobsImpl.listWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: JobsImpl.listSinglePageAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listSinglePageAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._job_list_options
    name: JobListOptions
    fullName: com.microsoft.azure.batch.protocol.models.JobListOptions
    href: com.microsoft.azure.batch.protocol.models._job_list_options.yml
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobSchedule*
  name: listFromJobSchedule
  nameWithType: JobsImpl.listFromJobSchedule
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobSchedule
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleAsync*
  name: listFromJobScheduleAsync
  nameWithType: JobsImpl.listFromJobScheduleAsync
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_job
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models._cloud_job.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headers
    name: JobListFromJobScheduleHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders
    href: com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleWithServiceResponseAsync*
  name: listFromJobScheduleWithServiceResponseAsync
  nameWithType: JobsImpl.listFromJobScheduleWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleSinglePageAsync*
  name: listFromJobScheduleSinglePageAsync
  nameWithType: JobsImpl.listFromJobScheduleSinglePageAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleSinglePageAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options
    name: JobListFromJobScheduleOptions
    fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
    href: com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options.yml
- uid: 36b27be0com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    href: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatus*
  name: listPreparationAndReleaseTaskStatus
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatus
  fullName: PagedList<JobPreparationAndReleaseTaskExecutionInformation> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatus
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 3c4303efcom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    href: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    href: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusAsync*
  name: listPreparationAndReleaseTaskStatusAsync
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusAsync
  fullName: ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 32da0907com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    href: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information.yml
  - name: '>>'
    fullName: '>>'
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    href: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headers
    name: JobListPreparationAndReleaseTaskStatusHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders
    href: com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync*
  name: listPreparationAndReleaseTaskStatusWithServiceResponseAsync
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusSinglePageAsync*
  name: listPreparationAndReleaseTaskStatusSinglePageAsync
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusSinglePageAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusSinglePageAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options
    name: JobListPreparationAndReleaseTaskStatusOptions
    fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
    href: com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options.yml
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNext*
  name: listNext
  nameWithType: JobsImpl.listNext
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNext
  package: com.microsoft.azure.batch.protocol.implementation
- uid: bd82102acom.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_job
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models._cloud_job.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextAsync*
  name: listNextAsync
  nameWithType: JobsImpl.listNextAsync
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNextAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextWithServiceResponseAsync*
  name: listNextWithServiceResponseAsync
  nameWithType: JobsImpl.listNextWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: JobsImpl.listNextSinglePageAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listNextSinglePageAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._job_list_next_options
    name: JobListNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.JobListNextOptions
    href: com.microsoft.azure.batch.protocol.models._job_list_next_options.yml
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNext*
  name: listFromJobScheduleNext
  nameWithType: JobsImpl.listFromJobScheduleNext
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNext
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextAsync*
  name: listFromJobScheduleNextAsync
  nameWithType: JobsImpl.listFromJobScheduleNextAsync
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNextAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextWithServiceResponseAsync*
  name: listFromJobScheduleNextWithServiceResponseAsync
  nameWithType: JobsImpl.listFromJobScheduleNextWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listFromJobScheduleNextSinglePageAsync*
  name: listFromJobScheduleNextSinglePageAsync
  nameWithType: JobsImpl.listFromJobScheduleNextSinglePageAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listFromJobScheduleNextSinglePageAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options
    name: JobListFromJobScheduleNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
    href: com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options.yml
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNext*
  name: listPreparationAndReleaseTaskStatusNext
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNext
  fullName: PagedList<JobPreparationAndReleaseTaskExecutionInformation> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNext
  package: com.microsoft.azure.batch.protocol.implementation
- uid: bd82102acom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    href: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextAsync*
  name: listPreparationAndReleaseTaskStatusNextAsync
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNextAsync
  fullName: ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNextAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync*
  name: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl.listPreparationAndReleaseTaskStatusNextSinglePageAsync*
  name: listPreparationAndReleaseTaskStatusNextSinglePageAsync
  nameWithType: JobsImpl.listPreparationAndReleaseTaskStatusNextSinglePageAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.implementation.JobsImpl.listPreparationAndReleaseTaskStatusNextSinglePageAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options
    name: JobListPreparationAndReleaseTaskStatusNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
    href: com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options.yml
- uid: com.microsoft.azure.batch.protocol._jobs
  parent: com.microsoft.azure.batch.protocol
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: Jobs
  nameWithType: Jobs
  fullName: com.microsoft.azure.batch.protocol.Jobs
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._jobs" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public interface Jobs
- uid: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl.yml
  name: BatchServiceClientImpl
  nameWithType: BatchServiceClientImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.BatchServiceClientImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref href="com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax:
    content: public class BatchServiceClientImpl implements BatchServiceClient
- uid: com.microsoft.azure.batch.protocol.implementation._jobs_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._jobs_impl.yml
  name: JobsImpl
  nameWithType: JobsImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.JobsImpl
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._jobs" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: *o1
- uid: com.microsoft.azure.batch.protocol.models._job_statistics
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_statistics.yml
  name: JobStatistics
  nameWithType: JobStatistics
  fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
  type: Class
  summary: <p>Resource usage statistics for a job. </p>
  syntax:
    content: public class JobStatistics
- uid: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatistics()
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getAllLifetimeStatistics()
  nameWithType: Jobs.getAllLifetimeStatistics()
  fullName: JobStatistics com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics()
  type: Method
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public JobStatistics getAllLifetimeStatistics()
    return:
      type: com.microsoft.azure.batch.protocol.models._job_statistics
      description: <p>the JobStatistics object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  nameWithType: Jobs.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  fullName: ServiceFuture<JobStatistics> com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  type: Method
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<JobStatistics> getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatisticsAsync()
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getAllLifetimeStatisticsAsync()
  nameWithType: Jobs.getAllLifetimeStatisticsAsync()
  fullName: Observable<JobStatistics> com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync()
  type: Method
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public Observable<JobStatistics> getAllLifetimeStatisticsAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
      description: <p>the observable to the JobStatistics object </p>
- uid: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_headers.yml
  name: JobGetAllLifetimeStatisticsHeaders
  nameWithType: JobGetAllLifetimeStatisticsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders
  type: Class
  summary: <p>Defines headers for GetAllLifetimeStatistics operation. </p>
  syntax:
    content: public class JobGetAllLifetimeStatisticsHeaders
- uid: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatisticsWithServiceResponseAsync()
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getAllLifetimeStatisticsWithServiceResponseAsync()
  nameWithType: Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()
  fullName: Observable<ServiceResponseWithHeaders<JobStatistics, JobGetAllLifetimeStatisticsHeaders>> com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()
  type: Method
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<JobStatistics, JobGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync()
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._job_statisticsb33c76fccom.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_headerse7daa122
      description: <p>the observable to the JobStatistics object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: Jobs.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  fullName: JobStatistics com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  type: Method
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public JobStatistics getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._job_statistics
      description: <p>the JobStatistics object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_options.yml
  name: JobGetAllLifetimeStatisticsOptions
  nameWithType: JobGetAllLifetimeStatisticsOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
  type: Class
  summary: <p>Additional parameters for the Job_getAllLifetimeStatistics operation. </p>
  syntax:
    content: public class JobGetAllLifetimeStatisticsOptions
- uid: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions,final ServiceCallback<JobStatistics>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  nameWithType: Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  fullName: ServiceFuture<JobStatistics> com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  type: Method
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<JobStatistics> getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  fullName: Observable<JobStatistics> com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  type: Method
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public Observable<JobStatistics> getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._job_statisticsa08ddfce
      description: <p>the observable to the JobStatistics object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  fullName: Observable<ServiceResponseWithHeaders<JobStatistics, JobGetAllLifetimeStatisticsHeaders>> com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  type: Method
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<JobStatistics, JobGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._job_statisticsb33c76fccom.microsoft.azure.batch.protocol.models._job_get_all_lifetime_statistics_headerse7daa122
      description: <p>the observable to the JobStatistics object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.delete(String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: delete(String jobId)
  nameWithType: Jobs.delete(String jobId)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.delete(String jobId)
  type: Method
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public void delete(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.deleteAsync(String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: deleteAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.deleteAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String jobId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.deleteAsync(String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: deleteAsync(String jobId)
  nameWithType: Jobs.deleteAsync(String jobId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId)
  type: Method
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_delete_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_delete_headers.yml
  name: JobDeleteHeaders
  nameWithType: JobDeleteHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobDeleteHeaders
  type: Class
  summary: <p>Defines headers for Delete operation. </p>
  syntax:
    content: public class JobDeleteHeaders
- uid: com.microsoft.azure.batch.protocol._jobs.deleteWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: deleteWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.deleteWithServiceResponseAsync(String jobId)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobDeleteHeaders>> com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(String jobId)
  type: Method
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobDeleteHeaders>> deleteWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_delete_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.delete(String,JobDeleteOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: delete(String jobId, JobDeleteOptions jobDeleteOptions)
  nameWithType: Jobs.delete(String jobId, JobDeleteOptions jobDeleteOptions)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.delete(String jobId, JobDeleteOptions jobDeleteOptions)
  type: Method
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public void delete(String jobId, JobDeleteOptions jobDeleteOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._job_delete_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._job_delete_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_delete_options.yml
  name: JobDeleteOptions
  nameWithType: JobDeleteOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
  type: Class
  summary: <p>Additional parameters for the Job_delete operation. </p>
  syntax:
    content: public class JobDeleteOptions
- uid: com.microsoft.azure.batch.protocol._jobs.deleteAsync(String,JobDeleteOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._job_delete_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.deleteAsync(String,JobDeleteOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  nameWithType: Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  type: Method
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._job_delete_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.deleteWithServiceResponseAsync(String,JobDeleteOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  nameWithType: Jobs.deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobDeleteHeaders>> com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  type: Method
  summary: >-
    <p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobDeleteHeaders>> deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._job_delete_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_delete_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._cloud_job
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._cloud_job.yml
  name: CloudJob
  nameWithType: CloudJob
  fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  type: Class
  summary: <p>An Azure Batch job. </p>
  syntax:
    content: public class CloudJob
- uid: com.microsoft.azure.batch.protocol._jobs.get(String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: get(String jobId)
  nameWithType: Jobs.get(String jobId)
  fullName: CloudJob com.microsoft.azure.batch.protocol.Jobs.get(String jobId)
  type: Method
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public CloudJob get(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._cloud_job
      description: <p>the CloudJob object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.getAsync(String,final ServiceCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getAsync(String jobId, final ServiceCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.getAsync(String jobId, final ServiceCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<CloudJob> com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId, final ServiceCallback<CloudJob> serviceCallback)
  type: Method
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CloudJob> getAsync(String jobId, final ServiceCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.getAsync(String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getAsync(String jobId)
  nameWithType: Jobs.getAsync(String jobId)
  fullName: Observable<CloudJob> com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId)
  type: Method
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public Observable<CloudJob> getAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the observable to the CloudJob object </p>
- uid: com.microsoft.azure.batch.protocol.models._job_get_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_get_headers.yml
  name: JobGetHeaders
  nameWithType: JobGetHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobGetHeaders
  type: Class
  summary: <p>Defines headers for Get operation. </p>
  syntax:
    content: public class JobGetHeaders
- uid: com.microsoft.azure.batch.protocol._jobs.getWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.getWithServiceResponseAsync(String jobId)
  fullName: Observable<ServiceResponseWithHeaders<CloudJob, JobGetHeaders>> com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(String jobId)
  type: Method
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<CloudJob, JobGetHeaders>> getWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._cloud_jobb33c76fccom.microsoft.azure.batch.protocol.models._job_get_headerse7daa122
      description: <p>the observable to the CloudJob object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.get(String,JobGetOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: get(String jobId, JobGetOptions jobGetOptions)
  nameWithType: Jobs.get(String jobId, JobGetOptions jobGetOptions)
  fullName: CloudJob com.microsoft.azure.batch.protocol.Jobs.get(String jobId, JobGetOptions jobGetOptions)
  type: Method
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public CloudJob get(String jobId, JobGetOptions jobGetOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._cloud_job
      description: <p>the CloudJob object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_get_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_get_options.yml
  name: JobGetOptions
  nameWithType: JobGetOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobGetOptions
  type: Class
  summary: <p>Additional parameters for the Job_get operation. </p>
  syntax:
    content: public class JobGetOptions
- uid: com.microsoft.azure.batch.protocol._jobs.getAsync(String,JobGetOptions,final ServiceCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getAsync(String jobId, JobGetOptions jobGetOptions, final ServiceCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.getAsync(String jobId, JobGetOptions jobGetOptions, final ServiceCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<CloudJob> com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId, JobGetOptions jobGetOptions, final ServiceCallback<CloudJob> serviceCallback)
  type: Method
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CloudJob> getAsync(String jobId, JobGetOptions jobGetOptions, final ServiceCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.getAsync(String,JobGetOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getAsync(String jobId, JobGetOptions jobGetOptions)
  nameWithType: Jobs.getAsync(String jobId, JobGetOptions jobGetOptions)
  fullName: Observable<CloudJob> com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId, JobGetOptions jobGetOptions)
  type: Method
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public Observable<CloudJob> getAsync(String jobId, JobGetOptions jobGetOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the observable to the CloudJob object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.getWithServiceResponseAsync(String,JobGetOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
  nameWithType: Jobs.getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
  fullName: Observable<ServiceResponseWithHeaders<CloudJob, JobGetHeaders>> com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
  type: Method
  summary: >-
    <p>Gets information about the specified job.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<CloudJob, JobGetHeaders>> getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models._job_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._cloud_jobb33c76fccom.microsoft.azure.batch.protocol.models._job_get_headerse7daa122
      description: <p>the observable to the CloudJob object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.patch(String,JobPatchParameter)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: patch(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: Jobs.patch(String jobId, JobPatchParameter jobPatchParameter)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.patch(String jobId, JobPatchParameter jobPatchParameter)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public void patch(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_patch_parameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_patch_parameter.yml
  name: JobPatchParameter
  nameWithType: JobPatchParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter
  type: Class
  summary: <p>The set of changes to be made to a job. </p>
  syntax:
    content: public class JobPatchParameter
- uid: com.microsoft.azure.batch.protocol._jobs.patchAsync(String,JobPatchParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.patchAsync(String,JobPatchParameter)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_patch_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_patch_headers.yml
  name: JobPatchHeaders
  nameWithType: JobPatchHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobPatchHeaders
  type: Class
  summary: <p>Defines headers for Patch operation. </p>
  syntax:
    content: public class JobPatchHeaders
- uid: com.microsoft.azure.batch.protocol._jobs.patchWithServiceResponseAsync(String,JobPatchParameter)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobPatchHeaders>> com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobPatchHeaders>> patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_patch_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.patch(String,JobPatchParameter,JobPatchOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  nameWithType: Jobs.patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public void patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models._job_patch_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._job_patch_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_patch_options.yml
  name: JobPatchOptions
  nameWithType: JobPatchOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobPatchOptions
  type: Class
  summary: <p>Additional parameters for the Job_patch operation. </p>
  syntax:
    content: public class JobPatchOptions
- uid: com.microsoft.azure.batch.protocol._jobs.patchAsync(String,JobPatchParameter,JobPatchOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models._job_patch_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.patchAsync(String,JobPatchParameter,JobPatchOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  nameWithType: Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models._job_patch_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.patchWithServiceResponseAsync(String,JobPatchParameter,JobPatchOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  nameWithType: Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobPatchHeaders>> com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobPatchHeaders>> patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models._job_patch_parameter
      description: <p>The parameters for the request. </p>
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models._job_patch_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_patch_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.update(String,JobUpdateParameter)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: update(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public void update(String jobId, JobUpdateParameter jobUpdateParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_update_parameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_update_parameter.yml
  name: JobUpdateParameter
  nameWithType: JobUpdateParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
  type: Class
  summary: <p>The set of changes to be made to a job. </p>
  syntax:
    content: public class JobUpdateParameter
- uid: com.microsoft.azure.batch.protocol._jobs.updateAsync(String,JobUpdateParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.updateAsync(String,JobUpdateParameter)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_update_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_update_headers.yml
  name: JobUpdateHeaders
  nameWithType: JobUpdateHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobUpdateHeaders
  type: Class
  summary: <p>Defines headers for Update operation. </p>
  syntax:
    content: public class JobUpdateHeaders
- uid: com.microsoft.azure.batch.protocol._jobs.updateWithServiceResponseAsync(String,JobUpdateParameter)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobUpdateHeaders>> com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobUpdateHeaders>> updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_update_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.update(String,JobUpdateParameter,JobUpdateOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public void update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models._job_update_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._job_update_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_update_options.yml
  name: JobUpdateOptions
  nameWithType: JobUpdateOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
  type: Class
  summary: <p>Additional parameters for the Job_update operation. </p>
  syntax:
    content: public class JobUpdateOptions
- uid: com.microsoft.azure.batch.protocol._jobs.updateAsync(String,JobUpdateParameter,JobUpdateOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models._job_update_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.updateAsync(String,JobUpdateParameter,JobUpdateOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models._job_update_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.updateWithServiceResponseAsync(String,JobUpdateParameter,JobUpdateOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobUpdateHeaders>> com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  type: Method
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updateable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobUpdateHeaders>> updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models._job_update_parameter
      description: <p>The parameters for the request. </p>
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models._job_update_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_update_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.disable(String,DisableJobOption)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: disable(String jobId, DisableJobOption disableTasks)
  nameWithType: Jobs.disable(String jobId, DisableJobOption disableTasks)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.disable(String jobId, DisableJobOption disableTasks)
  type: Method
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public void disable(String jobId, DisableJobOption disableTasks)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
- uid: com.microsoft.azure.batch.protocol.models._disable_job_option
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._disable_job_option.yml
  name: DisableJobOption
  nameWithType: DisableJobOption
  fullName: com.microsoft.azure.batch.protocol.models.DisableJobOption
  type: Enum
  summary: <p>Defines values for <xref href="com.microsoft.azure.batch.protocol.models._disable_job_option" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public enum DisableJobOption
- uid: com.microsoft.azure.batch.protocol._jobs.disableAsync(String,DisableJobOption,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: disableAsync(String jobId, DisableJobOption disableTasks, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.disableAsync(String jobId, DisableJobOption disableTasks, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> disableAsync(String jobId, DisableJobOption disableTasks, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.disableAsync(String,DisableJobOption)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: disableAsync(String jobId, DisableJobOption disableTasks)
  nameWithType: Jobs.disableAsync(String jobId, DisableJobOption disableTasks)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks)
  type: Method
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public Observable<Void> disableAsync(String jobId, DisableJobOption disableTasks)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_disable_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_disable_headers.yml
  name: JobDisableHeaders
  nameWithType: JobDisableHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobDisableHeaders
  type: Class
  summary: <p>Defines headers for Disable operation. </p>
  syntax:
    content: public class JobDisableHeaders
- uid: com.microsoft.azure.batch.protocol._jobs.disableWithServiceResponseAsync(String,DisableJobOption)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
  nameWithType: Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobDisableHeaders>> com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
  type: Method
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobDisableHeaders>> disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_disable_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.disable(String,DisableJobOption,JobDisableOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: Jobs.disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  type: Method
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public void disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models._job_disable_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._job_disable_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_disable_options.yml
  name: JobDisableOptions
  nameWithType: JobDisableOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobDisableOptions
  type: Class
  summary: <p>Additional parameters for the Job_disable operation. </p>
  syntax:
    content: public class JobDisableOptions
- uid: com.microsoft.azure.batch.protocol._jobs.disableAsync(String,DisableJobOption,JobDisableOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models._job_disable_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.disableAsync(String,DisableJobOption,JobDisableOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  type: Method
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public Observable<Void> disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models._job_disable_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.disableWithServiceResponseAsync(String,DisableJobOption,JobDisableOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobDisableHeaders>> com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  type: Method
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobDisableHeaders>> disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models._disable_job_option
      description: "<p>What to do with active tasks associated with the job. requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate - Terminate running tasks. The tasks will not run again. wait - Allow currently running tasks to complete. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models._job_disable_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_disable_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.enable(String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: enable(String jobId)
  nameWithType: Jobs.enable(String jobId)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.enable(String jobId)
  type: Method
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public void enable(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.enableAsync(String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: enableAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.enableAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> enableAsync(String jobId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.enableAsync(String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: enableAsync(String jobId)
  nameWithType: Jobs.enableAsync(String jobId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId)
  type: Method
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public Observable<Void> enableAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_enable_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_enable_headers.yml
  name: JobEnableHeaders
  nameWithType: JobEnableHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobEnableHeaders
  type: Class
  summary: <p>Defines headers for Enable operation. </p>
  syntax:
    content: public class JobEnableHeaders
- uid: com.microsoft.azure.batch.protocol._jobs.enableWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: enableWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.enableWithServiceResponseAsync(String jobId)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobEnableHeaders>> com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(String jobId)
  type: Method
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobEnableHeaders>> enableWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_enable_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.enable(String,JobEnableOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: enable(String jobId, JobEnableOptions jobEnableOptions)
  nameWithType: Jobs.enable(String jobId, JobEnableOptions jobEnableOptions)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.enable(String jobId, JobEnableOptions jobEnableOptions)
  type: Method
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public void enable(String jobId, JobEnableOptions jobEnableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models._job_enable_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._job_enable_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_enable_options.yml
  name: JobEnableOptions
  nameWithType: JobEnableOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobEnableOptions
  type: Class
  summary: <p>Additional parameters for the Job_enable operation. </p>
  syntax:
    content: public class JobEnableOptions
- uid: com.microsoft.azure.batch.protocol._jobs.enableAsync(String,JobEnableOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: enableAsync(String jobId, JobEnableOptions jobEnableOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> enableAsync(String jobId, JobEnableOptions jobEnableOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models._job_enable_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.enableAsync(String,JobEnableOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: enableAsync(String jobId, JobEnableOptions jobEnableOptions)
  nameWithType: Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions)
  type: Method
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public Observable<Void> enableAsync(String jobId, JobEnableOptions jobEnableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models._job_enable_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.enableWithServiceResponseAsync(String,JobEnableOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
  nameWithType: Jobs.enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobEnableHeaders>> com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
  type: Method
  summary: >-
    <p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 7 days. Therefore, if you enable a job containing active tasks which were added more than 7 days ago, those tasks will not run.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobEnableHeaders>> enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models._job_enable_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_enable_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.terminate(String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: terminate(String jobId)
  nameWithType: Jobs.terminate(String jobId)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.terminate(String jobId)
  type: Method
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public void terminate(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.terminateAsync(String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: terminateAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.terminateAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> terminateAsync(String jobId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.terminateAsync(String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: terminateAsync(String jobId)
  nameWithType: Jobs.terminateAsync(String jobId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId)
  type: Method
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> terminateAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_terminate_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_terminate_headers.yml
  name: JobTerminateHeaders
  nameWithType: JobTerminateHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobTerminateHeaders
  type: Class
  summary: <p>Defines headers for Terminate operation. </p>
  syntax:
    content: public class JobTerminateHeaders
- uid: com.microsoft.azure.batch.protocol._jobs.terminateWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: terminateWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.terminateWithServiceResponseAsync(String jobId)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobTerminateHeaders>> com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(String jobId)
  type: Method
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobTerminateHeaders>> terminateWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_terminate_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.terminate(String,String,JobTerminateOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  nameWithType: Jobs.terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  type: Method
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public void terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: terminateReason
      type: "26831127"
      description: <p>The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'. </p>
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models._job_terminate_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._job_terminate_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_terminate_options.yml
  name: JobTerminateOptions
  nameWithType: JobTerminateOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
  type: Class
  summary: <p>Additional parameters for the Job_terminate operation. </p>
  syntax:
    content: public class JobTerminateOptions
- uid: com.microsoft.azure.batch.protocol._jobs.terminateAsync(String,String,JobTerminateOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: terminateReason
      type: "26831127"
      description: <p>The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'. </p>
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models._job_terminate_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.terminateAsync(String,String,JobTerminateOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  nameWithType: Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  type: Method
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: terminateReason
      type: "26831127"
      description: <p>The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'. </p>
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models._job_terminate_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.terminateWithServiceResponseAsync(String,String,JobTerminateOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  nameWithType: Jobs.terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobTerminateHeaders>> com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  type: Method
  summary: >-
    <p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any active or running tasks associated with the job, and runs any required Job Release tasks. The job then moves into the completed state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobTerminateHeaders>> terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: terminateReason
      type: "26831127"
      description: <p>The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'. </p>
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models._job_terminate_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_terminate_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.add(JobAddParameter)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: add(JobAddParameter job)
  nameWithType: Jobs.add(JobAddParameter job)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.add(JobAddParameter job)
  type: Method
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public void add(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_add_parameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_add_parameter.yml
  name: JobAddParameter
  nameWithType: JobAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter
  type: Class
  summary: <p>An Azure Batch job to add. </p>
  syntax:
    content: public class JobAddParameter
- uid: com.microsoft.azure.batch.protocol._jobs.addAsync(JobAddParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: addAsync(JobAddParameter job, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.addAsync(JobAddParameter job, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addAsync(JobAddParameter job, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.addAsync(JobAddParameter)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: addAsync(JobAddParameter job)
  nameWithType: Jobs.addAsync(JobAddParameter job)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job)
  type: Method
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addAsync(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_add_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_add_headers.yml
  name: JobAddHeaders
  nameWithType: JobAddHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobAddHeaders
  type: Class
  summary: <p>Defines headers for Add operation. </p>
  syntax:
    content: public class JobAddHeaders
- uid: com.microsoft.azure.batch.protocol._jobs.addWithServiceResponseAsync(JobAddParameter)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: addWithServiceResponseAsync(JobAddParameter job)
  nameWithType: Jobs.addWithServiceResponseAsync(JobAddParameter job)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobAddHeaders>> com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(JobAddParameter job)
  type: Method
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobAddHeaders>> addWithServiceResponseAsync(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_add_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.add(JobAddParameter,JobAddOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: add(JobAddParameter job, JobAddOptions jobAddOptions)
  nameWithType: Jobs.add(JobAddParameter job, JobAddOptions jobAddOptions)
  fullName: void com.microsoft.azure.batch.protocol.Jobs.add(JobAddParameter job, JobAddOptions jobAddOptions)
  type: Method
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public void add(JobAddParameter job, JobAddOptions jobAddOptions)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models._job_add_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._job_add_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_add_options.yml
  name: JobAddOptions
  nameWithType: JobAddOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobAddOptions
  type: Class
  summary: <p>Additional parameters for the Job_add operation. </p>
  syntax:
    content: public class JobAddOptions
- uid: com.microsoft.azure.batch.protocol._jobs.addAsync(JobAddParameter,JobAddOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: addAsync(JobAddParameter job, JobAddOptions jobAddOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addAsync(JobAddParameter job, JobAddOptions jobAddOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models._job_add_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.addAsync(JobAddParameter,JobAddOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  nameWithType: Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  type: Method
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models._job_add_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.addWithServiceResponseAsync(JobAddParameter,JobAddOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  nameWithType: Jobs.addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, JobAddHeaders>> com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  type: Method
  summary: >-
    <p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobAddHeaders>> addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models._job_add_parameter
      description: <p>The job to be added. </p>
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models._job_add_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._job_add_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.list()
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: list()
  nameWithType: Jobs.list()
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.Jobs.list()
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> list()
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listAsync(final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listAsync(final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listAsync(final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listAsync(final ListOperationCallback<CloudJob> serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listAsync(final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listAsync()
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listAsync()
  nameWithType: Jobs.listAsync()
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listAsync()
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listAsync()
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol.models._job_list_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_list_headers.yml
  name: JobListHeaders
  nameWithType: JobListHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobListHeaders
  type: Class
  summary: <p>Defines headers for List operation. </p>
  syntax:
    content: public class JobListHeaders
- uid: com.microsoft.azure.batch.protocol._jobs.listWithServiceResponseAsync()
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listWithServiceResponseAsync()
  nameWithType: Jobs.listWithServiceResponseAsync()
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync()
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listWithServiceResponseAsync()
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.list(final JobListOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: list(final JobListOptions jobListOptions)
  nameWithType: Jobs.list(final JobListOptions jobListOptions)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.Jobs.list(final JobListOptions jobListOptions)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> list(final JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_list_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_list_options.yml
  name: JobListOptions
  nameWithType: JobListOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListOptions
  type: Class
  summary: <p>Additional parameters for the Job_list operation. </p>
  syntax:
    content: public class JobListOptions
- uid: com.microsoft.azure.batch.protocol._jobs.listAsync(final JobListOptions,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listAsync(final JobListOptions jobListOptions, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listAsync(final JobListOptions jobListOptions, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listAsync(final JobListOptions jobListOptions, final ListOperationCallback<CloudJob> serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listAsync(final JobListOptions jobListOptions, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listAsync(final JobListOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listAsync(final JobListOptions jobListOptions)
  nameWithType: Jobs.listAsync(final JobListOptions jobListOptions)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listAsync(final JobListOptions jobListOptions)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listAsync(final JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listWithServiceResponseAsync(final JobListOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listWithServiceResponseAsync(final JobListOptions jobListOptions)
  nameWithType: Jobs.listWithServiceResponseAsync(final JobListOptions jobListOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync(final JobListOptions jobListOptions)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listWithServiceResponseAsync(final JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobSchedule(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobSchedule(final String jobScheduleId)
  nameWithType: Jobs.listFromJobSchedule(final String jobScheduleId)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(final String jobScheduleId)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> listFromJobSchedule(final String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleAsync(final String,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleAsync(final String jobScheduleId, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listFromJobScheduleAsync(final String jobScheduleId, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String jobScheduleId, final ListOperationCallback<CloudJob> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listFromJobScheduleAsync(final String jobScheduleId, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleAsync(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleAsync(final String jobScheduleId)
  nameWithType: Jobs.listFromJobScheduleAsync(final String jobScheduleId)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String jobScheduleId)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listFromJobScheduleAsync(final String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headers.yml
  name: JobListFromJobScheduleHeaders
  nameWithType: JobListFromJobScheduleHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders
  type: Class
  summary: <p>Defines headers for ListFromJobSchedule operation. </p>
  syntax:
    content: public class JobListFromJobScheduleHeaders
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId)
  nameWithType: Jobs.listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobSchedule(final String,final JobListFromJobScheduleOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobSchedule(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: Jobs.listFromJobSchedule(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> listFromJobSchedule(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options.yml
  name: JobListFromJobScheduleOptions
  nameWithType: JobListFromJobScheduleOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
  type: Class
  summary: <p>Additional parameters for the Job_listFromJobSchedule operation. </p>
  syntax:
    content: public class JobListFromJobScheduleOptions
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions, final ListOperationCallback<CloudJob> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: Jobs.listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleWithServiceResponseAsync(final String,final JobListFromJobScheduleOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: Jobs.listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information.yml
  name: JobPreparationAndReleaseTaskExecutionInformation
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation
  fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
  type: Class
  summary: <p>The status of the Job Preparation and Job Release tasks on a compute node. </p>
  syntax:
    content: public class JobPreparationAndReleaseTaskExecutionInformation
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatus(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatus(final String jobId)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatus(final String jobId)
  fullName: PagedList<JobPreparationAndReleaseTaskExecutionInformation> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(final String jobId)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusAsync(final String,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusAsync(final String jobId, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(final String jobId, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusAsync(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusAsync(final String jobId)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId)
  fullName: Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
- uid: com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headers.yml
  name: JobListPreparationAndReleaseTaskStatusHeaders
  nameWithType: JobListPreparationAndReleaseTaskStatusHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders
  type: Class
  summary: <p>Defines headers for ListPreparationAndReleaseTaskStatus operation. </p>
  syntax:
    content: public class JobListPreparationAndReleaseTaskStatusHeaders
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId)
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatus(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatus(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatus(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: PagedList<JobPreparationAndReleaseTaskExecutionInformation> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options.yml
  name: JobListPreparationAndReleaseTaskStatusOptions
  nameWithType: JobListPreparationAndReleaseTaskStatusOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
  type: Class
  summary: <p>Additional parameters for the Job_listPreparationAndReleaseTaskStatus operation. </p>
  syntax:
    content: public class JobListPreparationAndReleaseTaskStatusOptions
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listNext(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listNext(final String nextPageLink)
  nameWithType: Jobs.listNext(final String nextPageLink)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.Jobs.listNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> listNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listNextAsync(final String nextPageLink)
  nameWithType: Jobs.listNextAsync(final String nextPageLink)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: Jobs.listNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listNext(final String,final JobListNextOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listNext(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  nameWithType: Jobs.listNext(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.Jobs.listNext(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> listNext(final String nextPageLink, final JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_list_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_list_next_options.yml
  name: JobListNextOptions
  nameWithType: JobListNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListNextOptions
  type: Class
  summary: <p>Additional parameters for the listNext operation. </p>
  syntax:
    content: public class JobListNextOptions
- uid: com.microsoft.azure.batch.protocol._jobs.listNextAsync(final String,final JobListNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listNextAsync(final String,final JobListNextOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  nameWithType: Jobs.listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listNextWithServiceResponseAsync(final String,final JobListNextOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listNextWithServiceResponseAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  nameWithType: Jobs.listNextWithServiceResponseAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  type: Method
  summary: >-
    <p>Lists all of the jobs in the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNext(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleNext(final String nextPageLink)
  nameWithType: Jobs.listFromJobScheduleNext(final String nextPageLink)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> listFromJobScheduleNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listFromJobScheduleNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listFromJobScheduleNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleNextAsync(final String nextPageLink)
  nameWithType: Jobs.listFromJobScheduleNextAsync(final String nextPageLink)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listFromJobScheduleNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: Jobs.listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNext(final String,final JobListFromJobScheduleNextOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleNext(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: Jobs.listFromJobScheduleNext(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: PagedList<CloudJob> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudJob> listFromJobScheduleNext(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options.yml
  name: JobListFromJobScheduleNextOptions
  nameWithType: JobListFromJobScheduleNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
  type: Class
  summary: <p>Additional parameters for the listFromJobScheduleNext operation. </p>
  syntax:
    content: public class JobListFromJobScheduleNextOptions
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: ServiceFuture<List<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudJob>> listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_joba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: Jobs.listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: Observable<Page<CloudJob>> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudJob>> listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_jobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listFromJobScheduleNextWithServiceResponseAsync(final String,final JobListFromJobScheduleNextOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: Jobs.listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  type: Method
  summary: >-
    <p>Lists the jobs that have been created under the specified job schedule.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_job8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_from_job_schedule_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNext(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusNext(final String nextPageLink)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNext(final String nextPageLink)
  fullName: PagedList<JobPreparationAndReleaseTaskExecutionInformation> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatusNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  fullName: Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNext(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusNext(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNext(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: PagedList<JobPreparationAndReleaseTaskExecutionInformation> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatusNext(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options.yml
  name: JobListPreparationAndReleaseTaskStatusNextOptions
  nameWithType: JobListPreparationAndReleaseTaskStatusNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
  type: Class
  summary: <p>Additional parameters for the listPreparationAndReleaseTaskStatusNext operation. </p>
  syntax:
    content: public class JobListPreparationAndReleaseTaskStatusNextOptions
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_informatione7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  parent: com.microsoft.azure.batch.protocol._jobs
  href: com.microsoft.azure.batch.protocol._jobs.yml
  name: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  type: Method
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._job_preparation_and_release_task_execution_information8135b5ebcom.microsoft.azure.batch.protocol.models._job_list_preparation_and_release_task_status_headerse7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
- uid: com.microsoft.azure.batch.protocol.models._batch_error_exception
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._batch_error_exception.yml
  name: BatchErrorException
  nameWithType: BatchErrorException
  fullName: com.microsoft.azure.batch.protocol.models.BatchErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref href="com.microsoft.azure.batch.protocol.models._batch_error" data-throw-if-not-resolved="false"></xref> information. </p>
  syntax:
    content: public class BatchErrorException
- uid: com.microsoft.azure.batch.protocol.models._page_impl
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  name: PageImpl<T>
  nameWithType: PageImpl<T>
  fullName: com.microsoft.azure.batch.protocol.models.PageImpl<T>
  type: Class
  summary: >-
    <p>An instance of this class defines a page of Azure resources and a link to get the next page of resources, if any.</p>

    <p></p>
  syntax:
    content: public class PageImpl<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>type of Azure resource </p>
