### YamlMime:JavaMember
uid: "com.azure.containers.containerregistry.implementation.authentication.TokenServiceImpl.getAcrRefreshTokenAsync*"
fullName: "com.azure.containers.containerregistry.implementation.authentication.TokenServiceImpl.getAcrRefreshTokenAsync"
name: "getAcrRefreshTokenAsync"
nameWithType: "TokenServiceImpl.getAcrRefreshTokenAsync"
members:
- uid: "com.azure.containers.containerregistry.implementation.authentication.TokenServiceImpl.getAcrRefreshTokenAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.containers.containerregistry.implementation.authentication.TokenServiceImpl.getAcrRefreshTokenAsync(String aadAccessToken, String serviceName)"
  name: "getAcrRefreshTokenAsync(String aadAccessToken, String serviceName)"
  nameWithType: "TokenServiceImpl.getAcrRefreshTokenAsync(String aadAccessToken, String serviceName)"
  summary: "Gets an ACR refresh token."
  parameters:
  - description: "Given the ACR access token."
    name: "aadAccessToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Given the ACR service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AccessToken> getAcrRefreshTokenAsync(String aadAccessToken, String serviceName)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.credential.AccessToken?alt=com.azure.core.credential.AccessToken&text=AccessToken\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.containers.containerregistry.implementation.authentication"
artifact: com.azure:azure-containers-containerregistry:1.0.0
