### YamlMime:JavaType
uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile"
fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile"
name: "ContainerServiceNetworkProfile"
nameWithType: "ContainerServiceNetworkProfile"
summary: "Profile of network configuration."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ContainerServiceNetworkProfile"
constructors:
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.ContainerServiceNetworkProfile()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.ContainerServiceNetworkProfile()"
  name: "ContainerServiceNetworkProfile()"
  nameWithType: "ContainerServiceNetworkProfile.ContainerServiceNetworkProfile()"
  syntax: "public ContainerServiceNetworkProfile()"
methods:
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.dnsServiceIp()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.dnsServiceIp()"
  name: "dnsServiceIp()"
  nameWithType: "ContainerServiceNetworkProfile.dnsServiceIp()"
  summary: "Get the dnsServiceIp property: An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
  syntax: "public String dnsServiceIp()"
  returns:
    description: "the dnsServiceIp value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.dockerBridgeCidr()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.dockerBridgeCidr()"
  name: "dockerBridgeCidr()"
  nameWithType: "ContainerServiceNetworkProfile.dockerBridgeCidr()"
  summary: "Get the dockerBridgeCidr property: A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
  syntax: "public String dockerBridgeCidr()"
  returns:
    description: "the dockerBridgeCidr value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.ipFamilies()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.ipFamilies()"
  name: "ipFamilies()"
  nameWithType: "ContainerServiceNetworkProfile.ipFamilies()"
  summary: "Get the ipFamilies property: The IP families used to specify IP versions available to the cluster. IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6."
  syntax: "public List<IpFamily> ipFamilies()"
  returns:
    description: "the ipFamilies value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.IpFamily?alt=com.azure.resourcemanager.containerservice.models.IpFamily&text=IpFamily\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.loadBalancerProfile()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.loadBalancerProfile()"
  name: "loadBalancerProfile()"
  nameWithType: "ContainerServiceNetworkProfile.loadBalancerProfile()"
  summary: "Get the loadBalancerProfile property: Profile of the cluster load balancer."
  syntax: "public ManagedClusterLoadBalancerProfile loadBalancerProfile()"
  returns:
    description: "the loadBalancerProfile value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterLoadBalancerProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterLoadBalancerProfile&text=ManagedClusterLoadBalancerProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.loadBalancerSku()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.loadBalancerSku()"
  name: "loadBalancerSku()"
  nameWithType: "ContainerServiceNetworkProfile.loadBalancerSku()"
  summary: "Get the loadBalancerSku property: The load balancer sku for the managed cluster. The default is 'standard'. See \\[Azure Load Balancer SKUs\\](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs."
  syntax: "public LoadBalancerSku loadBalancerSku()"
  returns:
    description: "the loadBalancerSku value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.LoadBalancerSku?alt=com.azure.resourcemanager.containerservice.models.LoadBalancerSku&text=LoadBalancerSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.natGatewayProfile()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.natGatewayProfile()"
  name: "natGatewayProfile()"
  nameWithType: "ContainerServiceNetworkProfile.natGatewayProfile()"
  summary: "Get the natGatewayProfile property: Profile of the cluster NAT gateway."
  syntax: "public ManagedClusterNatGatewayProfile natGatewayProfile()"
  returns:
    description: "the natGatewayProfile value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterNatGatewayProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterNatGatewayProfile&text=ManagedClusterNatGatewayProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.networkMode()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.networkMode()"
  name: "networkMode()"
  nameWithType: "ContainerServiceNetworkProfile.networkMode()"
  summary: "Get the networkMode property: The network mode Azure CNI is configured with. This cannot be specified if networkPlugin is anything other than 'azure'."
  syntax: "public NetworkMode networkMode()"
  returns:
    description: "the networkMode value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.NetworkMode?alt=com.azure.resourcemanager.containerservice.models.NetworkMode&text=NetworkMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.networkPlugin()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.networkPlugin()"
  name: "networkPlugin()"
  nameWithType: "ContainerServiceNetworkProfile.networkPlugin()"
  summary: "Get the networkPlugin property: Network plugin used for building the Kubernetes network."
  syntax: "public NetworkPlugin networkPlugin()"
  returns:
    description: "the networkPlugin value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.NetworkPlugin?alt=com.azure.resourcemanager.containerservice.models.NetworkPlugin&text=NetworkPlugin\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.networkPolicy()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.networkPolicy()"
  name: "networkPolicy()"
  nameWithType: "ContainerServiceNetworkProfile.networkPolicy()"
  summary: "Get the networkPolicy property: Network policy used for building the Kubernetes network."
  syntax: "public NetworkPolicy networkPolicy()"
  returns:
    description: "the networkPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.NetworkPolicy?alt=com.azure.resourcemanager.containerservice.models.NetworkPolicy&text=NetworkPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.outboundType()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.outboundType()"
  name: "outboundType()"
  nameWithType: "ContainerServiceNetworkProfile.outboundType()"
  summary: "Get the outboundType property: The outbound (egress) routing method. This can only be set at cluster creation time and cannot be changed later. For more information see \\[egress outbound type\\](https://docs.microsoft.com/azure/aks/egress-outboundtype)."
  syntax: "public OutboundType outboundType()"
  returns:
    description: "the outboundType value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OutboundType?alt=com.azure.resourcemanager.containerservice.models.OutboundType&text=OutboundType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.podCidr()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.podCidr()"
  name: "podCidr()"
  nameWithType: "ContainerServiceNetworkProfile.podCidr()"
  summary: "Get the podCidr property: A CIDR notation IP range from which to assign pod IPs when kubenet is used."
  syntax: "public String podCidr()"
  returns:
    description: "the podCidr value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.podCidrs()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.podCidrs()"
  name: "podCidrs()"
  nameWithType: "ContainerServiceNetworkProfile.podCidrs()"
  summary: "Get the podCidrs property: The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking."
  syntax: "public List<String> podCidrs()"
  returns:
    description: "the podCidrs value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.serviceCidr()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.serviceCidr()"
  name: "serviceCidr()"
  nameWithType: "ContainerServiceNetworkProfile.serviceCidr()"
  summary: "Get the serviceCidr property: A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
  syntax: "public String serviceCidr()"
  returns:
    description: "the serviceCidr value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.serviceCidrs()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.serviceCidrs()"
  name: "serviceCidrs()"
  nameWithType: "ContainerServiceNetworkProfile.serviceCidrs()"
  summary: "Get the serviceCidrs property: The CIDR notation IP ranges from which to assign service cluster IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges."
  syntax: "public List<String> serviceCidrs()"
  returns:
    description: "the serviceCidrs value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.validate()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.validate()"
  name: "validate()"
  nameWithType: "ContainerServiceNetworkProfile.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withDnsServiceIp(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withDnsServiceIp(String dnsServiceIp)"
  name: "withDnsServiceIp(String dnsServiceIp)"
  nameWithType: "ContainerServiceNetworkProfile.withDnsServiceIp(String dnsServiceIp)"
  summary: "Set the dnsServiceIp property: An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
  parameters:
  - description: "the dnsServiceIp value to set."
    name: "dnsServiceIp"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withDnsServiceIp(String dnsServiceIp)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withDockerBridgeCidr(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withDockerBridgeCidr(String dockerBridgeCidr)"
  name: "withDockerBridgeCidr(String dockerBridgeCidr)"
  nameWithType: "ContainerServiceNetworkProfile.withDockerBridgeCidr(String dockerBridgeCidr)"
  summary: "Set the dockerBridgeCidr property: A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
  parameters:
  - description: "the dockerBridgeCidr value to set."
    name: "dockerBridgeCidr"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withDockerBridgeCidr(String dockerBridgeCidr)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withIpFamilies(java.util.List<com.azure.resourcemanager.containerservice.models.IpFamily>)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withIpFamilies(List<IpFamily> ipFamilies)"
  name: "withIpFamilies(List<IpFamily> ipFamilies)"
  nameWithType: "ContainerServiceNetworkProfile.withIpFamilies(List<IpFamily> ipFamilies)"
  summary: "Set the ipFamilies property: The IP families used to specify IP versions available to the cluster. IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6."
  parameters:
  - description: "the ipFamilies value to set."
    name: "ipFamilies"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.IpFamily?alt=com.azure.resourcemanager.containerservice.models.IpFamily&text=IpFamily\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ContainerServiceNetworkProfile withIpFamilies(List<IpFamily> ipFamilies)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withLoadBalancerProfile(com.azure.resourcemanager.containerservice.models.ManagedClusterLoadBalancerProfile)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withLoadBalancerProfile(ManagedClusterLoadBalancerProfile loadBalancerProfile)"
  name: "withLoadBalancerProfile(ManagedClusterLoadBalancerProfile loadBalancerProfile)"
  nameWithType: "ContainerServiceNetworkProfile.withLoadBalancerProfile(ManagedClusterLoadBalancerProfile loadBalancerProfile)"
  summary: "Set the loadBalancerProfile property: Profile of the cluster load balancer."
  parameters:
  - description: "the loadBalancerProfile value to set."
    name: "loadBalancerProfile"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterLoadBalancerProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterLoadBalancerProfile&text=ManagedClusterLoadBalancerProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withLoadBalancerProfile(ManagedClusterLoadBalancerProfile loadBalancerProfile)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withLoadBalancerSku(com.azure.resourcemanager.containerservice.models.LoadBalancerSku)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withLoadBalancerSku(LoadBalancerSku loadBalancerSku)"
  name: "withLoadBalancerSku(LoadBalancerSku loadBalancerSku)"
  nameWithType: "ContainerServiceNetworkProfile.withLoadBalancerSku(LoadBalancerSku loadBalancerSku)"
  summary: "Set the loadBalancerSku property: The load balancer sku for the managed cluster. The default is 'standard'. See \\[Azure Load Balancer SKUs\\](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs."
  parameters:
  - description: "the loadBalancerSku value to set."
    name: "loadBalancerSku"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.LoadBalancerSku?alt=com.azure.resourcemanager.containerservice.models.LoadBalancerSku&text=LoadBalancerSku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withLoadBalancerSku(LoadBalancerSku loadBalancerSku)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withNatGatewayProfile(com.azure.resourcemanager.containerservice.models.ManagedClusterNatGatewayProfile)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withNatGatewayProfile(ManagedClusterNatGatewayProfile natGatewayProfile)"
  name: "withNatGatewayProfile(ManagedClusterNatGatewayProfile natGatewayProfile)"
  nameWithType: "ContainerServiceNetworkProfile.withNatGatewayProfile(ManagedClusterNatGatewayProfile natGatewayProfile)"
  summary: "Set the natGatewayProfile property: Profile of the cluster NAT gateway."
  parameters:
  - description: "the natGatewayProfile value to set."
    name: "natGatewayProfile"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterNatGatewayProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterNatGatewayProfile&text=ManagedClusterNatGatewayProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withNatGatewayProfile(ManagedClusterNatGatewayProfile natGatewayProfile)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withNetworkMode(com.azure.resourcemanager.containerservice.models.NetworkMode)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withNetworkMode(NetworkMode networkMode)"
  name: "withNetworkMode(NetworkMode networkMode)"
  nameWithType: "ContainerServiceNetworkProfile.withNetworkMode(NetworkMode networkMode)"
  summary: "Set the networkMode property: The network mode Azure CNI is configured with. This cannot be specified if networkPlugin is anything other than 'azure'."
  parameters:
  - description: "the networkMode value to set."
    name: "networkMode"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.NetworkMode?alt=com.azure.resourcemanager.containerservice.models.NetworkMode&text=NetworkMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withNetworkMode(NetworkMode networkMode)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withNetworkPlugin(com.azure.resourcemanager.containerservice.models.NetworkPlugin)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withNetworkPlugin(NetworkPlugin networkPlugin)"
  name: "withNetworkPlugin(NetworkPlugin networkPlugin)"
  nameWithType: "ContainerServiceNetworkProfile.withNetworkPlugin(NetworkPlugin networkPlugin)"
  summary: "Set the networkPlugin property: Network plugin used for building the Kubernetes network."
  parameters:
  - description: "the networkPlugin value to set."
    name: "networkPlugin"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.NetworkPlugin?alt=com.azure.resourcemanager.containerservice.models.NetworkPlugin&text=NetworkPlugin\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withNetworkPlugin(NetworkPlugin networkPlugin)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withNetworkPolicy(com.azure.resourcemanager.containerservice.models.NetworkPolicy)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withNetworkPolicy(NetworkPolicy networkPolicy)"
  name: "withNetworkPolicy(NetworkPolicy networkPolicy)"
  nameWithType: "ContainerServiceNetworkProfile.withNetworkPolicy(NetworkPolicy networkPolicy)"
  summary: "Set the networkPolicy property: Network policy used for building the Kubernetes network."
  parameters:
  - description: "the networkPolicy value to set."
    name: "networkPolicy"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.NetworkPolicy?alt=com.azure.resourcemanager.containerservice.models.NetworkPolicy&text=NetworkPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withNetworkPolicy(NetworkPolicy networkPolicy)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withOutboundType(com.azure.resourcemanager.containerservice.models.OutboundType)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withOutboundType(OutboundType outboundType)"
  name: "withOutboundType(OutboundType outboundType)"
  nameWithType: "ContainerServiceNetworkProfile.withOutboundType(OutboundType outboundType)"
  summary: "Set the outboundType property: The outbound (egress) routing method. This can only be set at cluster creation time and cannot be changed later. For more information see \\[egress outbound type\\](https://docs.microsoft.com/azure/aks/egress-outboundtype)."
  parameters:
  - description: "the outboundType value to set."
    name: "outboundType"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OutboundType?alt=com.azure.resourcemanager.containerservice.models.OutboundType&text=OutboundType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withOutboundType(OutboundType outboundType)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withPodCidr(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withPodCidr(String podCidr)"
  name: "withPodCidr(String podCidr)"
  nameWithType: "ContainerServiceNetworkProfile.withPodCidr(String podCidr)"
  summary: "Set the podCidr property: A CIDR notation IP range from which to assign pod IPs when kubenet is used."
  parameters:
  - description: "the podCidr value to set."
    name: "podCidr"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withPodCidr(String podCidr)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withPodCidrs(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withPodCidrs(List<String> podCidrs)"
  name: "withPodCidrs(List<String> podCidrs)"
  nameWithType: "ContainerServiceNetworkProfile.withPodCidrs(List<String> podCidrs)"
  summary: "Set the podCidrs property: The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking."
  parameters:
  - description: "the podCidrs value to set."
    name: "podCidrs"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ContainerServiceNetworkProfile withPodCidrs(List<String> podCidrs)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withServiceCidr(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withServiceCidr(String serviceCidr)"
  name: "withServiceCidr(String serviceCidr)"
  nameWithType: "ContainerServiceNetworkProfile.withServiceCidr(String serviceCidr)"
  summary: "Set the serviceCidr property: A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
  parameters:
  - description: "the serviceCidr value to set."
    name: "serviceCidr"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withServiceCidr(String serviceCidr)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withServiceCidrs(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile.withServiceCidrs(List<String> serviceCidrs)"
  name: "withServiceCidrs(List<String> serviceCidrs)"
  nameWithType: "ContainerServiceNetworkProfile.withServiceCidrs(List<String> serviceCidrs)"
  summary: "Set the serviceCidrs property: The CIDR notation IP ranges from which to assign service cluster IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges."
  parameters:
  - description: "the serviceCidrs value to set."
    name: "serviceCidrs"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ContainerServiceNetworkProfile withServiceCidrs(List<String> serviceCidrs)"
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.containerservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.14.0
