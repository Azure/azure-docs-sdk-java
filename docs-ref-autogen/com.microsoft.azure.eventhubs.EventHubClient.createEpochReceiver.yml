### YamlMime:JavaMember
uid: "com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver*"
fullName: "com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver"
name: "createEpochReceiver"
nameWithType: "EventHubClient.createEpochReceiver"
members:
- uid: "com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(java.lang.String,java.lang.String,com.microsoft.azure.eventhubs.EventPosition,long)"
  fullName: "com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(String consumerGroupName, String partitionId, EventPosition eventPosition, long epoch)"
  name: "createEpochReceiver(String consumerGroupName, String partitionId, EventPosition eventPosition, long epoch)"
  nameWithType: "EventHubClient.createEpochReceiver(String consumerGroupName, String partitionId, EventPosition eventPosition, long epoch)"
  summary: "Create a Epoch based EventHub receiver with given partition id and start receiving from the beginning of the partition stream. The receiver is created for a specific EventHub Partition from the specific consumer group.\n\nIt is important to pay attention to the following when creating epoch based receiver:\n\n *  Ownership enforcement - Once you created an epoch based receiver, you cannot create a non-epoch receiver to the same consumerGroup-Partition combo until all receivers to the combo are closed.\n *  Ownership stealing - If a receiver with higher epoch value is created for a consumerGroup-Partition combo, any older epoch receiver to that combo will be force closed.\n *  Any receiver closed due to lost of ownership to a consumerGroup-Partition combo will get ReceiverDisconnectedException for all operations from that receiver."
  parameters:
  - description: "the consumer group name that this receiver should be grouped under."
    name: "consumerGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition Id that the receiver belongs to. All data received will be from this partition only."
    name: "partitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the position to start receiving the events from. See <xref uid=\"com.microsoft.azure.eventhubs.EventPosition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventPosition\"></xref>"
    name: "eventPosition"
    type: "<xref href=\"com.microsoft.azure.eventhubs.EventPosition?alt=com.microsoft.azure.eventhubs.EventPosition&text=EventPosition\" data-throw-if-not-resolved=\"False\" />"
  - description: "an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership."
    name: "epoch"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<PartitionReceiver> createEpochReceiver(String consumerGroupName, String partitionId, EventPosition eventPosition, long epoch)"
  exceptions:
  - description: "if Service Bus service encountered problems during the operation."
    type: "<xref href=\"com.microsoft.azure.eventhubs.EventHubException?alt=com.microsoft.azure.eventhubs.EventHubException&text=EventHubException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "a CompletableFuture that would result in a PartitionReceiver when it is completed."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.eventhubs.PartitionReceiver?alt=com.microsoft.azure.eventhubs.PartitionReceiver&text=PartitionReceiver\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(java.lang.String,java.lang.String,com.microsoft.azure.eventhubs.EventPosition,long,com.microsoft.azure.eventhubs.ReceiverOptions)"
  fullName: "com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(String consumerGroupName, String partitionId, EventPosition eventPosition, long epoch, ReceiverOptions receiverOptions)"
  name: "createEpochReceiver(String consumerGroupName, String partitionId, EventPosition eventPosition, long epoch, ReceiverOptions receiverOptions)"
  nameWithType: "EventHubClient.createEpochReceiver(String consumerGroupName, String partitionId, EventPosition eventPosition, long epoch, ReceiverOptions receiverOptions)"
  summary: "Create a Epoch based EventHub receiver with given partition id and start receiving from the beginning of the partition stream. The receiver is created for a specific EventHub Partition from the specific consumer group.\n\nIt is important to pay attention to the following when creating epoch based receiver:\n\n *  Ownership enforcement - Once you created an epoch based receiver, you cannot create a non-epoch receiver to the same consumerGroup-Partition combo until all receivers to the combo are closed.\n *  Ownership stealing - If a receiver with higher epoch value is created for a consumerGroup-Partition combo, any older epoch receiver to that combo will be force closed.\n *  Any receiver closed due to lost of ownership to a consumerGroup-Partition combo will get ReceiverDisconnectedException for all operations from that receiver."
  parameters:
  - description: "the consumer group name that this receiver should be grouped under."
    name: "consumerGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition Id that the receiver belongs to. All data received will be from this partition only."
    name: "partitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the position to start receiving the events from. See <xref uid=\"com.microsoft.azure.eventhubs.EventPosition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventPosition\"></xref>"
    name: "eventPosition"
    type: "<xref href=\"com.microsoft.azure.eventhubs.EventPosition?alt=com.microsoft.azure.eventhubs.EventPosition&text=EventPosition\" data-throw-if-not-resolved=\"False\" />"
  - description: "an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership."
    name: "epoch"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "the set of options to enable on the event hubs receiver"
    name: "receiverOptions"
    type: "<xref href=\"com.microsoft.azure.eventhubs.ReceiverOptions?alt=com.microsoft.azure.eventhubs.ReceiverOptions&text=ReceiverOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<PartitionReceiver> createEpochReceiver(String consumerGroupName, String partitionId, EventPosition eventPosition, long epoch, ReceiverOptions receiverOptions)"
  exceptions:
  - description: "if Service Bus service encountered problems during the operation."
    type: "<xref href=\"com.microsoft.azure.eventhubs.EventHubException?alt=com.microsoft.azure.eventhubs.EventHubException&text=EventHubException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "a CompletableFuture that would result in a PartitionReceiver when it is completed."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.eventhubs.PartitionReceiver?alt=com.microsoft.azure.eventhubs.PartitionReceiver&text=PartitionReceiver\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.eventhubs"
artifact: com.microsoft.azure:azure-eventhubs:3.2.2
