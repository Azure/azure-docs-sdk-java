### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.JobSpecification"
fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification"
name: "JobSpecification"
nameWithType: "JobSpecification"
summary: "Specifies details of the Jobs to be created on a schedule."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class JobSpecification"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.JobSpecification()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.JobSpecification()"
  name: "JobSpecification()"
  nameWithType: "JobSpecification.JobSpecification()"
  syntax: "public JobSpecification()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.commonEnvironmentSettings()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.commonEnvironmentSettings()"
  name: "commonEnvironmentSettings()"
  nameWithType: "JobSpecification.commonEnvironmentSettings()"
  summary: "Get individual Tasks can override an environment setting specified here by specifying the same setting name with a different value."
  syntax: "public List<EnvironmentSetting> commonEnvironmentSettings()"
  desc: "Get individual Tasks can override an environment setting specified here by specifying the same setting name with a different value."
  returns:
    description: "the commonEnvironmentSettings value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.EnvironmentSetting?alt=com.microsoft.azure.batch.protocol.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.constraints()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.constraints()"
  name: "constraints()"
  nameWithType: "JobSpecification.constraints()"
  summary: "Get the constraints value."
  syntax: "public JobConstraints constraints()"
  desc: "Get the constraints value."
  returns:
    description: "the constraints value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.displayName()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.displayName()"
  name: "displayName()"
  nameWithType: "JobSpecification.displayName()"
  summary: "Get the name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  syntax: "public String displayName()"
  desc: "Get the name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the displayName value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.jobManagerTask()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.jobManagerTask()"
  name: "jobManagerTask()"
  nameWithType: "JobSpecification.jobManagerTask()"
  summary: "Get if the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job using the Task API."
  syntax: "public JobManagerTask jobManagerTask()"
  desc: "Get if the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job using the Task API. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job."
  returns:
    description: "the jobManagerTask value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobManagerTask?alt=com.microsoft.azure.batch.protocol.models.JobManagerTask&text=JobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.jobPreparationTask()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.jobPreparationTask()"
  name: "jobPreparationTask()"
  nameWithType: "JobSpecification.jobPreparationTask()"
  summary: "Get if a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
  syntax: "public JobPreparationTask jobPreparationTask()"
  desc: "Get if a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
  returns:
    description: "the jobPreparationTask value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationTask?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTask&text=JobPreparationTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.jobReleaseTask()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.jobReleaseTask()"
  name: "jobReleaseTask()"
  nameWithType: "JobSpecification.jobReleaseTask()"
  summary: "Get the primary purpose of the Job Release Task is to undo changes to Nodes made by the Job Preparation Task."
  syntax: "public JobReleaseTask jobReleaseTask()"
  desc: "Get the primary purpose of the Job Release Task is to undo changes to Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation. A Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Compute Nodes that have run the Job Preparation Task."
  returns:
    description: "the jobReleaseTask value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.metadata()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.metadata()"
  name: "metadata()"
  nameWithType: "JobSpecification.metadata()"
  summary: "Get the Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  syntax: "public List<MetadataItem> metadata()"
  desc: "Get the Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  returns:
    description: "the metadata value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.networkConfiguration()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.networkConfiguration()"
  name: "networkConfiguration()"
  nameWithType: "JobSpecification.networkConfiguration()"
  summary: "Get the network<wbr>Configuration value."
  syntax: "public JobNetworkConfiguration networkConfiguration()"
  desc: "Get the networkConfiguration value."
  returns:
    description: "the networkConfiguration value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration?alt=com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration&text=JobNetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.onAllTasksComplete()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.onAllTasksComplete()"
  name: "onAllTasksComplete()"
  nameWithType: "JobSpecification.onAllTasksComplete()"
  summary: "Get note that if a Job contains no Tasks, then all Tasks are considered complete."
  syntax: "public OnAllTasksComplete onAllTasksComplete()"
  desc: "Get note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction. Possible values include: 'noAction', 'terminateJob'."
  returns:
    description: "the onAllTasksComplete value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.onTaskFailure()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.onTaskFailure()"
  name: "onTaskFailure()"
  nameWithType: "JobSpecification.onTaskFailure()"
  summary: "Get the default is noaction."
  syntax: "public OnTaskFailure onTaskFailure()"
  desc: "Get the default is noaction. Possible values include: 'noAction', 'performExitOptionsJobAction'."
  returns:
    description: "the onTaskFailure value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.OnTaskFailure?alt=com.microsoft.azure.batch.protocol.models.OnTaskFailure&text=OnTaskFailure\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.poolInfo()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.poolInfo()"
  name: "poolInfo()"
  nameWithType: "JobSpecification.poolInfo()"
  summary: "Get the pool<wbr>Info value."
  syntax: "public PoolInformation poolInfo()"
  desc: "Get the poolInfo value."
  returns:
    description: "the poolInfo value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.priority()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.priority()"
  name: "priority()"
  nameWithType: "JobSpecification.priority()"
  summary: "Get priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority."
  syntax: "public Integer priority()"
  desc: "Get priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0. This priority is used as the default for all Jobs under the Job Schedule. You can update a Job's priority after it has been created using by using the update Job API."
  returns:
    description: "the priority value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.usesTaskDependencies()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.usesTaskDependencies()"
  name: "usesTaskDependencies()"
  nameWithType: "JobSpecification.usesTaskDependencies()"
  summary: "Get the uses<wbr>Task<wbr>Dependencies value."
  syntax: "public Boolean usesTaskDependencies()"
  desc: "Get the usesTaskDependencies value."
  returns:
    description: "the usesTaskDependencies value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withCommonEnvironmentSettings(java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  name: "withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  nameWithType: "JobSpecification.withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  summary: "Set individual Tasks can override an environment setting specified here by specifying the same setting name with a different value."
  parameters:
  - description: "the commonEnvironmentSettings value to set"
    name: "commonEnvironmentSettings"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.EnvironmentSetting?alt=com.microsoft.azure.batch.protocol.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JobSpecification withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  desc: "Set individual Tasks can override an environment setting specified here by specifying the same setting name with a different value."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withConstraints(com.microsoft.azure.batch.protocol.models.JobConstraints)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withConstraints(JobConstraints constraints)"
  name: "withConstraints(JobConstraints constraints)"
  nameWithType: "JobSpecification.withConstraints(JobConstraints constraints)"
  summary: "Set the constraints value."
  parameters:
  - description: "the constraints value to set"
    name: "constraints"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobSpecification withConstraints(JobConstraints constraints)"
  desc: "Set the constraints value."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withDisplayName(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withDisplayName(String displayName)"
  name: "withDisplayName(String displayName)"
  nameWithType: "JobSpecification.withDisplayName(String displayName)"
  summary: "Set the name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  parameters:
  - description: "the displayName value to set"
    name: "displayName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobSpecification withDisplayName(String displayName)"
  desc: "Set the name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withJobManagerTask(com.microsoft.azure.batch.protocol.models.JobManagerTask)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withJobManagerTask(JobManagerTask jobManagerTask)"
  name: "withJobManagerTask(JobManagerTask jobManagerTask)"
  nameWithType: "JobSpecification.withJobManagerTask(JobManagerTask jobManagerTask)"
  summary: "Set if the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job using the Task API."
  parameters:
  - description: "the jobManagerTask value to set"
    name: "jobManagerTask"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobManagerTask?alt=com.microsoft.azure.batch.protocol.models.JobManagerTask&text=JobManagerTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobSpecification withJobManagerTask(JobManagerTask jobManagerTask)"
  desc: "Set if the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job using the Task API. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withJobPreparationTask(com.microsoft.azure.batch.protocol.models.JobPreparationTask)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withJobPreparationTask(JobPreparationTask jobPreparationTask)"
  name: "withJobPreparationTask(JobPreparationTask jobPreparationTask)"
  nameWithType: "JobSpecification.withJobPreparationTask(JobPreparationTask jobPreparationTask)"
  summary: "Set if a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
  parameters:
  - description: "the jobPreparationTask value to set"
    name: "jobPreparationTask"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationTask?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTask&text=JobPreparationTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobSpecification withJobPreparationTask(JobPreparationTask jobPreparationTask)"
  desc: "Set if a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withJobReleaseTask(com.microsoft.azure.batch.protocol.models.JobReleaseTask)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withJobReleaseTask(JobReleaseTask jobReleaseTask)"
  name: "withJobReleaseTask(JobReleaseTask jobReleaseTask)"
  nameWithType: "JobSpecification.withJobReleaseTask(JobReleaseTask jobReleaseTask)"
  summary: "Set the primary purpose of the Job Release Task is to undo changes to Nodes made by the Job Preparation Task."
  parameters:
  - description: "the jobReleaseTask value to set"
    name: "jobReleaseTask"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobSpecification withJobReleaseTask(JobReleaseTask jobReleaseTask)"
  desc: "Set the primary purpose of the Job Release Task is to undo changes to Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation. A Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Compute Nodes that have run the Job Preparation Task."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withMetadata(List<MetadataItem> metadata)"
  name: "withMetadata(List<MetadataItem> metadata)"
  nameWithType: "JobSpecification.withMetadata(List<MetadataItem> metadata)"
  summary: "Set the Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  parameters:
  - description: "the metadata value to set"
    name: "metadata"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JobSpecification withMetadata(List<MetadataItem> metadata)"
  desc: "Set the Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withNetworkConfiguration(com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)"
  name: "withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)"
  nameWithType: "JobSpecification.withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)"
  summary: "Set the network<wbr>Configuration value."
  parameters:
  - description: "the networkConfiguration value to set"
    name: "networkConfiguration"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration?alt=com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration&text=JobNetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobSpecification withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)"
  desc: "Set the networkConfiguration value."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withOnAllTasksComplete(com.microsoft.azure.batch.protocol.models.OnAllTasksComplete)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)"
  name: "withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)"
  nameWithType: "JobSpecification.withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)"
  summary: "Set note that if a Job contains no Tasks, then all Tasks are considered complete."
  parameters:
  - description: "the onAllTasksComplete value to set"
    name: "onAllTasksComplete"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobSpecification withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)"
  desc: "Set note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction. Possible values include: 'noAction', 'terminateJob'."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withOnTaskFailure(com.microsoft.azure.batch.protocol.models.OnTaskFailure)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withOnTaskFailure(OnTaskFailure onTaskFailure)"
  name: "withOnTaskFailure(OnTaskFailure onTaskFailure)"
  nameWithType: "JobSpecification.withOnTaskFailure(OnTaskFailure onTaskFailure)"
  summary: "Set the default is noaction."
  parameters:
  - description: "the onTaskFailure value to set"
    name: "onTaskFailure"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.OnTaskFailure?alt=com.microsoft.azure.batch.protocol.models.OnTaskFailure&text=OnTaskFailure\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobSpecification withOnTaskFailure(OnTaskFailure onTaskFailure)"
  desc: "Set the default is noaction. Possible values include: 'noAction', 'performExitOptionsJobAction'."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withPoolInfo(com.microsoft.azure.batch.protocol.models.PoolInformation)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withPoolInfo(PoolInformation poolInfo)"
  name: "withPoolInfo(PoolInformation poolInfo)"
  nameWithType: "JobSpecification.withPoolInfo(PoolInformation poolInfo)"
  summary: "Set the pool<wbr>Info value."
  parameters:
  - description: "the poolInfo value to set"
    name: "poolInfo"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobSpecification withPoolInfo(PoolInformation poolInfo)"
  desc: "Set the poolInfo value."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withPriority(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withPriority(Integer priority)"
  name: "withPriority(Integer priority)"
  nameWithType: "JobSpecification.withPriority(Integer priority)"
  summary: "Set priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority."
  parameters:
  - description: "the priority value to set"
    name: "priority"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobSpecification withPriority(Integer priority)"
  desc: "Set priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0. This priority is used as the default for all Jobs under the Job Schedule. You can update a Job's priority after it has been created using by using the update Job API."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.withUsesTaskDependencies(java.lang.Boolean)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.withUsesTaskDependencies(Boolean usesTaskDependencies)"
  name: "withUsesTaskDependencies(Boolean usesTaskDependencies)"
  nameWithType: "JobSpecification.withUsesTaskDependencies(Boolean usesTaskDependencies)"
  summary: "Set the uses<wbr>Task<wbr>Dependencies value."
  parameters:
  - description: "the usesTaskDependencies value to set"
    name: "usesTaskDependencies"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobSpecification withUsesTaskDependencies(Boolean usesTaskDependencies)"
  desc: "Set the usesTaskDependencies value."
  returns:
    description: "the JobSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Specifies details of the Jobs to be created on a schedule."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
