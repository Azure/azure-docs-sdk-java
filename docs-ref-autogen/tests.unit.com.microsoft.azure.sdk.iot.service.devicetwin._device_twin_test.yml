items:
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  id: _device_twin_test
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  children:
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorCreatesTwin(@Mocked IotHubConnectionStringBuilder)
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorThrowsOnEmptyCS()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorThrowsOnImproperCS()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorThrowsOnNullCS()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinSucceeds()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsOnEmptyDeviceID()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsOnNullDevice()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsOnNullDeviceID()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsVerificationFailure()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfDeviceIDIsEmpty()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfDeviceIDIsNull()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfDeviceIsNull()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfJsonIsEmpty()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfJsonIsNull()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsIfDeviceIDIsEmpty()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsIfDeviceIDIsNull()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsIfDeviceIsNull()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsJsonIsEmpty()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsJsonIsNull()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinDoesNotThrowsIfOnlyDesiredHasValue()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinDoesNotThrowsIfOnlyTagsHasValue()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinSucceeds()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfBothDesiredAndTagsIsEmpty()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfDeviceIDIsEmpty()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfDeviceIDIsNull()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfDeviceIsNull()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfJsonIsEmpty()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfJsonIsNull()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsVerificationThrows()
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: DeviceTwinTest
  nameWithType: DeviceTwinTest
  fullName: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 29
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public class DeviceTwinTest
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedConnectionString()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedConnectionStringBuilder()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedDevice()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedExceptionManager()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedHttpRequest()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedHttpResponse()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedSasToken()
  - tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedTwinObject()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorCreatesTwin(@Mocked IotHubConnectionStringBuilder)
  id: constructorCreatesTwin(@Mocked IotHubConnectionStringBuilder)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: constructorCreatesTwin(@Mocked IotHubConnectionStringBuilder mockedConnectionStringBuilder)
  nameWithType: DeviceTwinTest.constructorCreatesTwin(@Mocked IotHubConnectionStringBuilder mockedConnectionStringBuilder)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.constructorCreatesTwin(@Mocked IotHubConnectionStringBuilder mockedConnectionStringBuilder)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorCreatesTwin*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 60
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void constructorCreatesTwin(@Mocked IotHubConnectionStringBuilder mockedConnectionStringBuilder)
    parameters:
    - id: mockedConnectionStringBuilder
      type: e69e3bb0com.microsoft.azure.sdk.iot.service._iot_hub_connection_string_builder
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorThrowsOnEmptyCS()
  id: constructorThrowsOnEmptyCS()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: constructorThrowsOnEmptyCS()
  nameWithType: DeviceTwinTest.constructorThrowsOnEmptyCS()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.constructorThrowsOnEmptyCS()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorThrowsOnEmptyCS*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 87
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void constructorThrowsOnEmptyCS()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorThrowsOnImproperCS()
  id: constructorThrowsOnImproperCS()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: constructorThrowsOnImproperCS()
  nameWithType: DeviceTwinTest.constructorThrowsOnImproperCS()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.constructorThrowsOnImproperCS()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorThrowsOnImproperCS*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 98
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void constructorThrowsOnImproperCS()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorThrowsOnNullCS()
  id: constructorThrowsOnNullCS()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: constructorThrowsOnNullCS()
  nameWithType: DeviceTwinTest.constructorThrowsOnNullCS()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.constructorThrowsOnNullCS()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorThrowsOnNullCS*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 76
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void constructorThrowsOnNullCS()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinSucceeds()
  id: getTwinSucceeds()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: getTwinSucceeds()
  nameWithType: DeviceTwinTest.getTwinSucceeds()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getTwinSucceeds()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinSucceeds*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 132
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void getTwinSucceeds()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsOnEmptyDeviceID()
  id: getTwinThrowsOnEmptyDeviceID()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: getTwinThrowsOnEmptyDeviceID()
  nameWithType: DeviceTwinTest.getTwinThrowsOnEmptyDeviceID()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getTwinThrowsOnEmptyDeviceID()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsOnEmptyDeviceID*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 194
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void getTwinThrowsOnEmptyDeviceID()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsOnNullDevice()
  id: getTwinThrowsOnNullDevice()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: getTwinThrowsOnNullDevice()
  nameWithType: DeviceTwinTest.getTwinThrowsOnNullDevice()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getTwinThrowsOnNullDevice()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsOnNullDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 183
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void getTwinThrowsOnNullDevice()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsOnNullDeviceID()
  id: getTwinThrowsOnNullDeviceID()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: getTwinThrowsOnNullDeviceID()
  nameWithType: DeviceTwinTest.getTwinThrowsOnNullDeviceID()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getTwinThrowsOnNullDeviceID()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsOnNullDeviceID*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 213
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void getTwinThrowsOnNullDeviceID()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsVerificationFailure()
  id: getTwinThrowsVerificationFailure()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: getTwinThrowsVerificationFailure()
  nameWithType: DeviceTwinTest.getTwinThrowsVerificationFailure()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getTwinThrowsVerificationFailure()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsVerificationFailure*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 234
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void getTwinThrowsVerificationFailure()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfDeviceIDIsEmpty()
  id: replaceDesiredPropertiesThrowsIfDeviceIDIsEmpty()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: replaceDesiredPropertiesThrowsIfDeviceIDIsEmpty()
  nameWithType: DeviceTwinTest.replaceDesiredPropertiesThrowsIfDeviceIDIsEmpty()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceDesiredPropertiesThrowsIfDeviceIDIsEmpty()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfDeviceIDIsEmpty*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 344
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void replaceDesiredPropertiesThrowsIfDeviceIDIsEmpty()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfDeviceIDIsNull()
  id: replaceDesiredPropertiesThrowsIfDeviceIDIsNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: replaceDesiredPropertiesThrowsIfDeviceIDIsNull()
  nameWithType: DeviceTwinTest.replaceDesiredPropertiesThrowsIfDeviceIDIsNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceDesiredPropertiesThrowsIfDeviceIDIsNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfDeviceIDIsNull*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 326
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void replaceDesiredPropertiesThrowsIfDeviceIDIsNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfDeviceIsNull()
  id: replaceDesiredPropertiesThrowsIfDeviceIsNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: replaceDesiredPropertiesThrowsIfDeviceIsNull()
  nameWithType: DeviceTwinTest.replaceDesiredPropertiesThrowsIfDeviceIsNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceDesiredPropertiesThrowsIfDeviceIsNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfDeviceIsNull*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 316
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void replaceDesiredPropertiesThrowsIfDeviceIsNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfJsonIsEmpty()
  id: replaceDesiredPropertiesThrowsIfJsonIsEmpty()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: replaceDesiredPropertiesThrowsIfJsonIsEmpty()
  nameWithType: DeviceTwinTest.replaceDesiredPropertiesThrowsIfJsonIsEmpty()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceDesiredPropertiesThrowsIfJsonIsEmpty()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfJsonIsEmpty*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 400
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void replaceDesiredPropertiesThrowsIfJsonIsEmpty()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfJsonIsNull()
  id: replaceDesiredPropertiesThrowsIfJsonIsNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: replaceDesiredPropertiesThrowsIfJsonIsNull()
  nameWithType: DeviceTwinTest.replaceDesiredPropertiesThrowsIfJsonIsNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceDesiredPropertiesThrowsIfJsonIsNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfJsonIsNull*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 365
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void replaceDesiredPropertiesThrowsIfJsonIsNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsIfDeviceIDIsEmpty()
  id: replaceTagsThrowsIfDeviceIDIsEmpty()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: replaceTagsThrowsIfDeviceIDIsEmpty()
  nameWithType: DeviceTwinTest.replaceTagsThrowsIfDeviceIDIsEmpty()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceTagsThrowsIfDeviceIDIsEmpty()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsIfDeviceIDIsEmpty*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 567
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void replaceTagsThrowsIfDeviceIDIsEmpty()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsIfDeviceIDIsNull()
  id: replaceTagsThrowsIfDeviceIDIsNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: replaceTagsThrowsIfDeviceIDIsNull()
  nameWithType: DeviceTwinTest.replaceTagsThrowsIfDeviceIDIsNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceTagsThrowsIfDeviceIDIsNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsIfDeviceIDIsNull*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 548
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void replaceTagsThrowsIfDeviceIDIsNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsIfDeviceIsNull()
  id: replaceTagsThrowsIfDeviceIsNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: replaceTagsThrowsIfDeviceIsNull()
  nameWithType: DeviceTwinTest.replaceTagsThrowsIfDeviceIsNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceTagsThrowsIfDeviceIsNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsIfDeviceIsNull*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 536
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void replaceTagsThrowsIfDeviceIsNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsJsonIsEmpty()
  id: replaceTagsThrowsJsonIsEmpty()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: replaceTagsThrowsJsonIsEmpty()
  nameWithType: DeviceTwinTest.replaceTagsThrowsJsonIsEmpty()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceTagsThrowsJsonIsEmpty()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsJsonIsEmpty*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 660
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void replaceTagsThrowsJsonIsEmpty()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsJsonIsNull()
  id: replaceTagsThrowsJsonIsNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: replaceTagsThrowsJsonIsNull()
  nameWithType: DeviceTwinTest.replaceTagsThrowsJsonIsNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceTagsThrowsJsonIsNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsJsonIsNull*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 628
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void replaceTagsThrowsJsonIsNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinDoesNotThrowsIfOnlyDesiredHasValue()
  id: updateTwinDoesNotThrowsIfOnlyDesiredHasValue()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: updateTwinDoesNotThrowsIfOnlyDesiredHasValue()
  nameWithType: DeviceTwinTest.updateTwinDoesNotThrowsIfOnlyDesiredHasValue()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinDoesNotThrowsIfOnlyDesiredHasValue()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinDoesNotThrowsIfOnlyDesiredHasValue*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 835
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void updateTwinDoesNotThrowsIfOnlyDesiredHasValue()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinDoesNotThrowsIfOnlyTagsHasValue()
  id: updateTwinDoesNotThrowsIfOnlyTagsHasValue()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: updateTwinDoesNotThrowsIfOnlyTagsHasValue()
  nameWithType: DeviceTwinTest.updateTwinDoesNotThrowsIfOnlyTagsHasValue()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinDoesNotThrowsIfOnlyTagsHasValue()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinDoesNotThrowsIfOnlyTagsHasValue*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 879
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void updateTwinDoesNotThrowsIfOnlyTagsHasValue()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinSucceeds()
  id: updateTwinSucceeds()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: updateTwinSucceeds()
  nameWithType: DeviceTwinTest.updateTwinSucceeds()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinSucceeds()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinSucceeds*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 715
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void updateTwinSucceeds()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfBothDesiredAndTagsIsEmpty()
  id: updateTwinThrowsIfBothDesiredAndTagsIsEmpty()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: updateTwinThrowsIfBothDesiredAndTagsIsEmpty()
  nameWithType: DeviceTwinTest.updateTwinThrowsIfBothDesiredAndTagsIsEmpty()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsIfBothDesiredAndTagsIsEmpty()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfBothDesiredAndTagsIsEmpty*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 810
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void updateTwinThrowsIfBothDesiredAndTagsIsEmpty()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfDeviceIDIsEmpty()
  id: updateTwinThrowsIfDeviceIDIsEmpty()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: updateTwinThrowsIfDeviceIDIsEmpty()
  nameWithType: DeviceTwinTest.updateTwinThrowsIfDeviceIDIsEmpty()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsIfDeviceIDIsEmpty()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfDeviceIDIsEmpty*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 789
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void updateTwinThrowsIfDeviceIDIsEmpty()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfDeviceIDIsNull()
  id: updateTwinThrowsIfDeviceIDIsNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: updateTwinThrowsIfDeviceIDIsNull()
  nameWithType: DeviceTwinTest.updateTwinThrowsIfDeviceIDIsNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsIfDeviceIDIsNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfDeviceIDIsNull*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 771
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void updateTwinThrowsIfDeviceIDIsNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfDeviceIsNull()
  id: updateTwinThrowsIfDeviceIsNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: updateTwinThrowsIfDeviceIsNull()
  nameWithType: DeviceTwinTest.updateTwinThrowsIfDeviceIsNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsIfDeviceIsNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfDeviceIsNull*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 761
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void updateTwinThrowsIfDeviceIsNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfJsonIsEmpty()
  id: updateTwinThrowsIfJsonIsEmpty()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: updateTwinThrowsIfJsonIsEmpty()
  nameWithType: DeviceTwinTest.updateTwinThrowsIfJsonIsEmpty()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsIfJsonIsEmpty()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfJsonIsEmpty*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 966
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void updateTwinThrowsIfJsonIsEmpty()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfJsonIsNull()
  id: updateTwinThrowsIfJsonIsNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: updateTwinThrowsIfJsonIsNull()
  nameWithType: DeviceTwinTest.updateTwinThrowsIfJsonIsNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsIfJsonIsNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfJsonIsNull*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 925
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void updateTwinThrowsIfJsonIsNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsVerificationThrows()
  id: updateTwinThrowsVerificationThrows()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.yml
  langs:
  - java
  name: updateTwinThrowsVerificationThrows()
  nameWithType: DeviceTwinTest.updateTwinThrowsVerificationThrows()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsVerificationThrows()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsVerificationThrows*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java
    startLine: 1007
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public void updateTwinThrowsVerificationThrows()
references:
- uid: e69e3bb0com.microsoft.azure.sdk.iot.service._iot_hub_connection_string_builder
  spec.java:
  - name: '@Mocked '
    fullName: '@Mocked '
  - uid: com.microsoft.azure.sdk.iot.service._iot_hub_connection_string_builder
    name: IotHubConnectionStringBuilder
    fullName: com.microsoft.azure.sdk.iot.service.IotHubConnectionStringBuilder
    href: com.microsoft.azure.sdk.iot.service._iot_hub_connection_string_builder.yml
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorCreatesTwin*
  name: constructorCreatesTwin
  nameWithType: DeviceTwinTest.constructorCreatesTwin
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.constructorCreatesTwin
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorThrowsOnNullCS*
  name: constructorThrowsOnNullCS
  nameWithType: DeviceTwinTest.constructorThrowsOnNullCS
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.constructorThrowsOnNullCS
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorThrowsOnEmptyCS*
  name: constructorThrowsOnEmptyCS
  nameWithType: DeviceTwinTest.constructorThrowsOnEmptyCS
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.constructorThrowsOnEmptyCS
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.constructorThrowsOnImproperCS*
  name: constructorThrowsOnImproperCS
  nameWithType: DeviceTwinTest.constructorThrowsOnImproperCS
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.constructorThrowsOnImproperCS
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinSucceeds*
  name: getTwinSucceeds
  nameWithType: DeviceTwinTest.getTwinSucceeds
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getTwinSucceeds
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsOnNullDevice*
  name: getTwinThrowsOnNullDevice
  nameWithType: DeviceTwinTest.getTwinThrowsOnNullDevice
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getTwinThrowsOnNullDevice
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsOnEmptyDeviceID*
  name: getTwinThrowsOnEmptyDeviceID
  nameWithType: DeviceTwinTest.getTwinThrowsOnEmptyDeviceID
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getTwinThrowsOnEmptyDeviceID
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsOnNullDeviceID*
  name: getTwinThrowsOnNullDeviceID
  nameWithType: DeviceTwinTest.getTwinThrowsOnNullDeviceID
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getTwinThrowsOnNullDeviceID
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.getTwinThrowsVerificationFailure*
  name: getTwinThrowsVerificationFailure
  nameWithType: DeviceTwinTest.getTwinThrowsVerificationFailure
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getTwinThrowsVerificationFailure
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfDeviceIsNull*
  name: replaceDesiredPropertiesThrowsIfDeviceIsNull
  nameWithType: DeviceTwinTest.replaceDesiredPropertiesThrowsIfDeviceIsNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceDesiredPropertiesThrowsIfDeviceIsNull
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfDeviceIDIsNull*
  name: replaceDesiredPropertiesThrowsIfDeviceIDIsNull
  nameWithType: DeviceTwinTest.replaceDesiredPropertiesThrowsIfDeviceIDIsNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceDesiredPropertiesThrowsIfDeviceIDIsNull
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfDeviceIDIsEmpty*
  name: replaceDesiredPropertiesThrowsIfDeviceIDIsEmpty
  nameWithType: DeviceTwinTest.replaceDesiredPropertiesThrowsIfDeviceIDIsEmpty
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceDesiredPropertiesThrowsIfDeviceIDIsEmpty
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfJsonIsNull*
  name: replaceDesiredPropertiesThrowsIfJsonIsNull
  nameWithType: DeviceTwinTest.replaceDesiredPropertiesThrowsIfJsonIsNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceDesiredPropertiesThrowsIfJsonIsNull
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceDesiredPropertiesThrowsIfJsonIsEmpty*
  name: replaceDesiredPropertiesThrowsIfJsonIsEmpty
  nameWithType: DeviceTwinTest.replaceDesiredPropertiesThrowsIfJsonIsEmpty
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceDesiredPropertiesThrowsIfJsonIsEmpty
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsIfDeviceIsNull*
  name: replaceTagsThrowsIfDeviceIsNull
  nameWithType: DeviceTwinTest.replaceTagsThrowsIfDeviceIsNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceTagsThrowsIfDeviceIsNull
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsIfDeviceIDIsNull*
  name: replaceTagsThrowsIfDeviceIDIsNull
  nameWithType: DeviceTwinTest.replaceTagsThrowsIfDeviceIDIsNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceTagsThrowsIfDeviceIDIsNull
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsIfDeviceIDIsEmpty*
  name: replaceTagsThrowsIfDeviceIDIsEmpty
  nameWithType: DeviceTwinTest.replaceTagsThrowsIfDeviceIDIsEmpty
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceTagsThrowsIfDeviceIDIsEmpty
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsJsonIsNull*
  name: replaceTagsThrowsJsonIsNull
  nameWithType: DeviceTwinTest.replaceTagsThrowsJsonIsNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceTagsThrowsJsonIsNull
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.replaceTagsThrowsJsonIsEmpty*
  name: replaceTagsThrowsJsonIsEmpty
  nameWithType: DeviceTwinTest.replaceTagsThrowsJsonIsEmpty
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.replaceTagsThrowsJsonIsEmpty
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinSucceeds*
  name: updateTwinSucceeds
  nameWithType: DeviceTwinTest.updateTwinSucceeds
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinSucceeds
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfDeviceIsNull*
  name: updateTwinThrowsIfDeviceIsNull
  nameWithType: DeviceTwinTest.updateTwinThrowsIfDeviceIsNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsIfDeviceIsNull
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfDeviceIDIsNull*
  name: updateTwinThrowsIfDeviceIDIsNull
  nameWithType: DeviceTwinTest.updateTwinThrowsIfDeviceIDIsNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsIfDeviceIDIsNull
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfDeviceIDIsEmpty*
  name: updateTwinThrowsIfDeviceIDIsEmpty
  nameWithType: DeviceTwinTest.updateTwinThrowsIfDeviceIDIsEmpty
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsIfDeviceIDIsEmpty
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfBothDesiredAndTagsIsEmpty*
  name: updateTwinThrowsIfBothDesiredAndTagsIsEmpty
  nameWithType: DeviceTwinTest.updateTwinThrowsIfBothDesiredAndTagsIsEmpty
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsIfBothDesiredAndTagsIsEmpty
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinDoesNotThrowsIfOnlyDesiredHasValue*
  name: updateTwinDoesNotThrowsIfOnlyDesiredHasValue
  nameWithType: DeviceTwinTest.updateTwinDoesNotThrowsIfOnlyDesiredHasValue
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinDoesNotThrowsIfOnlyDesiredHasValue
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinDoesNotThrowsIfOnlyTagsHasValue*
  name: updateTwinDoesNotThrowsIfOnlyTagsHasValue
  nameWithType: DeviceTwinTest.updateTwinDoesNotThrowsIfOnlyTagsHasValue
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinDoesNotThrowsIfOnlyTagsHasValue
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfJsonIsNull*
  name: updateTwinThrowsIfJsonIsNull
  nameWithType: DeviceTwinTest.updateTwinThrowsIfJsonIsNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsIfJsonIsNull
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsIfJsonIsEmpty*
  name: updateTwinThrowsIfJsonIsEmpty
  nameWithType: DeviceTwinTest.updateTwinThrowsIfJsonIsEmpty
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsIfJsonIsEmpty
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.updateTwinThrowsVerificationThrows*
  name: updateTwinThrowsVerificationThrows
  nameWithType: DeviceTwinTest.updateTwinThrowsVerificationThrows
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.updateTwinThrowsVerificationThrows
  package: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedConnectionString()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedConnectionStringBuilder()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedDevice()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedExceptionManager()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedHttpRequest()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedHttpResponse()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedSasToken()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_test.mockedTwinObject()
- uid: com.microsoft.azure.sdk.iot.service._iot_hub_connection_string_builder
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._iot_hub_connection_string_builder.yml
  name: IotHubConnectionStringBuilder
  nameWithType: IotHubConnectionStringBuilder
  fullName: com.microsoft.azure.sdk.iot.service.IotHubConnectionStringBuilder
  type: Class
  summary: <p>Provide static constructors to create <xref href="com.microsoft.azure.sdk.iot.service._iot_hub_connection_string" data-throw-if-not-resolved="false"></xref> object </p>
  syntax:
    content: public class IotHubConnectionStringBuilder
- uid: com.microsoft.azure.sdk.iot.service._iot_hub_connection_string
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._iot_hub_connection_string.yml
  name: IotHubConnectionString
  nameWithType: IotHubConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
  type: Class
  summary: <p>Expose all connections string properties and methods for user, device and connection string serialization. </p>
  syntax:
    content: public class IotHubConnectionString
- uid: com.microsoft.azure.sdk.iot.service.auth._iot_hub_service_sas_token
  parent: com.microsoft.azure.sdk.iot.service.auth
  href: com.microsoft.azure.sdk.iot.service.auth._iot_hub_service_sas_token.yml
  name: IotHubServiceSasToken
  nameWithType: IotHubServiceSasToken
  fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubServiceSasToken
  type: Class
  summary: <p>Grants device access to an IoT Hub for the specified amount of time. </p>
  syntax:
    content: public class IotHubServiceSasToken
- uid: com.microsoft.azure.sdk.iot.service.transport.http._http_request
  parent: com.microsoft.azure.sdk.iot.service.transport.http
  href: com.microsoft.azure.sdk.iot.service.transport.http._http_request.yml
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest
  type: Class
  syntax:
    content: public class HttpRequest
- uid: com.microsoft.azure.sdk.iot.service.transport.http._http_response
  parent: com.microsoft.azure.sdk.iot.service.transport.http
  href: com.microsoft.azure.sdk.iot.service.transport.http._http_response.yml
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpResponse
  type: Class
  summary: <p>An HTTPS response. Contains the status code, body, header fields, and error reason (if any). </p>
  syntax:
    content: public class HttpResponse
- uid: com.microsoft.azure.sdk.iot.service.exceptions._iot_hub_exception_manager
  parent: com.microsoft.azure.sdk.iot.service.exceptions
  href: com.microsoft.azure.sdk.iot.service.exceptions._iot_hub_exception_manager.yml
  name: IotHubExceptionManager
  nameWithType: IotHubExceptionManager
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubExceptionManager
  type: Class
  summary: <p>Provide static function to verify results and throw appropriate exception. </p>
  syntax:
    content: public class IotHubExceptionManager
- uid: com.microsoft.azure.sdk.iot.deps.serializer._twin
  parent: com.microsoft.azure.sdk.iot.deps.serializer
  href: com.microsoft.azure.sdk.iot.deps.serializer._twin.yml
  name: Twin
  nameWithType: Twin
  fullName: com.microsoft.azure.sdk.iot.deps.serializer.Twin
  type: Class
  summary: >-
    <p>

      <xref href="com.microsoft.azure.sdk.iot.deps.serializer._twin" data-throw-if-not-resolved="false"></xref> Representation including the twin collection and Json serializer and deserializer. </p>
  syntax:
    content: public class Twin
- uid: com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_device
  parent: com.microsoft.azure.sdk.iot.service.devicetwin
  href: com.microsoft.azure.sdk.iot.service.devicetwin._device_twin_device.yml
  name: DeviceTwinDevice
  nameWithType: DeviceTwinDevice
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  type: Class
  syntax:
    content: public class DeviceTwinDevice
