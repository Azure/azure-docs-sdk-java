### YamlMime:JavaMember
uid: "com.azure.data.schemaregistry.implementation.SchemasImpl.getByIdWithResponseAsync*"
fullName: "com.azure.data.schemaregistry.implementation.SchemasImpl.getByIdWithResponseAsync"
name: "getByIdWithResponseAsync"
nameWithType: "SchemasImpl.getByIdWithResponseAsync"
members:
- uid: "com.azure.data.schemaregistry.implementation.SchemasImpl.getByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.data.schemaregistry.implementation.SchemasImpl.getByIdWithResponseAsync(String id, Context context)"
  name: "getByIdWithResponseAsync(String id, Context context)"
  nameWithType: "SchemasImpl.getByIdWithResponseAsync(String id, Context context)"
  summary: "Gets a registered schema by its unique ID. Azure Schema Registry guarantees that ID is unique within a namespace. Operation response type is based on serialization of schema requested."
  parameters:
  - description: "References specific schema in registry namespace."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SchemasGetByIdResponse> getByIdWithResponseAsync(String id, Context context)"
  returns:
    description: "a registered schema by its unique ID."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.implementation.models.SchemasGetByIdResponse?alt=com.azure.data.schemaregistry.implementation.models.SchemasGetByIdResponse&text=SchemasGetByIdResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.data.schemaregistry.implementation"
artifact: com.azure:azure-data-schemaregistry:1.0.0
