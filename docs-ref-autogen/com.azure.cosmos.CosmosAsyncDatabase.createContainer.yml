### YamlMime:JavaMember
uid: "com.azure.cosmos.CosmosAsyncDatabase.createContainer*"
fullName: "com.azure.cosmos.CosmosAsyncDatabase.createContainer"
name: "createContainer"
nameWithType: "CosmosAsyncDatabase.createContainer"
members:
- uid: "com.azure.cosmos.CosmosAsyncDatabase.createContainer(com.azure.cosmos.models.CosmosContainerProperties)"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase.createContainer(CosmosContainerProperties containerProperties)"
  name: "createContainer(CosmosContainerProperties containerProperties)"
  nameWithType: "CosmosAsyncDatabase.createContainer(CosmosContainerProperties containerProperties)"
  summary: "Creates a Cosmos container.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a cosmos container response with the created container. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  parameters:
  - description: "the container properties."
    name: "containerProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosContainerResponse> createContainer(CosmosContainerProperties containerProperties)"
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single cosmos container response with\n the created container or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncDatabase.createContainer(com.azure.cosmos.models.CosmosContainerProperties,com.azure.cosmos.models.CosmosContainerRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase.createContainer(CosmosContainerProperties containerProperties, CosmosContainerRequestOptions options)"
  name: "createContainer(CosmosContainerProperties containerProperties, CosmosContainerRequestOptions options)"
  nameWithType: "CosmosAsyncDatabase.createContainer(CosmosContainerProperties containerProperties, CosmosContainerRequestOptions options)"
  summary: "Creates a Cosmos container.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a cosmos container response with the created container. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  parameters:
  - description: "the containerProperties."
    name: "containerProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "the cosmos container request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerRequestOptions?alt=com.azure.cosmos.models.CosmosContainerRequestOptions&text=CosmosContainerRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosContainerResponse> createContainer(CosmosContainerProperties containerProperties, CosmosContainerRequestOptions options)"
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the cosmos container response with the\n created container or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncDatabase.createContainer(com.azure.cosmos.models.CosmosContainerProperties,com.azure.cosmos.models.ThroughputProperties)"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase.createContainer(CosmosContainerProperties containerProperties, ThroughputProperties throughputProperties)"
  name: "createContainer(CosmosContainerProperties containerProperties, ThroughputProperties throughputProperties)"
  nameWithType: "CosmosAsyncDatabase.createContainer(CosmosContainerProperties containerProperties, ThroughputProperties throughputProperties)"
  summary: "Creates a Cosmos container with custom throughput properties.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a cosmos container response with the created container. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  parameters:
  - description: "the container properties."
    name: "containerProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "the throughput properties for the container."
    name: "throughputProperties"
    type: "<xref href=\"com.azure.cosmos.models.ThroughputProperties?alt=com.azure.cosmos.models.ThroughputProperties&text=ThroughputProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosContainerResponse> createContainer(CosmosContainerProperties containerProperties, ThroughputProperties throughputProperties)"
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single cosmos container response with\n the created container or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncDatabase.createContainer(com.azure.cosmos.models.CosmosContainerProperties,com.azure.cosmos.models.ThroughputProperties,com.azure.cosmos.models.CosmosContainerRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase.createContainer(CosmosContainerProperties containerProperties, ThroughputProperties throughputProperties, CosmosContainerRequestOptions options)"
  name: "createContainer(CosmosContainerProperties containerProperties, ThroughputProperties throughputProperties, CosmosContainerRequestOptions options)"
  nameWithType: "CosmosAsyncDatabase.createContainer(CosmosContainerProperties containerProperties, ThroughputProperties throughputProperties, CosmosContainerRequestOptions options)"
  summary: "Creates a container."
  parameters:
  - description: "the container properties."
    name: "containerProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "the throughput properties."
    name: "throughputProperties"
    type: "<xref href=\"com.azure.cosmos.models.ThroughputProperties?alt=com.azure.cosmos.models.ThroughputProperties&text=ThroughputProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "the request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerRequestOptions?alt=com.azure.cosmos.models.CosmosContainerRequestOptions&text=CosmosContainerRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosContainerResponse> createContainer(CosmosContainerProperties containerProperties, ThroughputProperties throughputProperties, CosmosContainerRequestOptions options)"
  returns:
    description: "the mono."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncDatabase.createContainer(java.lang.String,java.lang.String)"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase.createContainer(String id, String partitionKeyPath)"
  name: "createContainer(String id, String partitionKeyPath)"
  nameWithType: "CosmosAsyncDatabase.createContainer(String id, String partitionKeyPath)"
  summary: "Creates a Cosmos container.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a cosmos container response with the created container. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  parameters:
  - description: "the cosmos container id."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition key path."
    name: "partitionKeyPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosContainerResponse> createContainer(String id, String partitionKeyPath)"
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the cosmos container response with the\n created container or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncDatabase.createContainer(java.lang.String,java.lang.String,com.azure.cosmos.models.ThroughputProperties)"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase.createContainer(String id, String partitionKeyPath, ThroughputProperties throughputProperties)"
  name: "createContainer(String id, String partitionKeyPath, ThroughputProperties throughputProperties)"
  nameWithType: "CosmosAsyncDatabase.createContainer(String id, String partitionKeyPath, ThroughputProperties throughputProperties)"
  summary: "Creates a Cosmos container.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a cosmos container response with the created container. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  parameters:
  - description: "the cosmos container id."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition key path."
    name: "partitionKeyPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the throughput properties for the container."
    name: "throughputProperties"
    type: "<xref href=\"com.azure.cosmos.models.ThroughputProperties?alt=com.azure.cosmos.models.ThroughputProperties&text=ThroughputProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosContainerResponse> createContainer(String id, String partitionKeyPath, ThroughputProperties throughputProperties)"
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the cosmos container response with the\n created container or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.11.0
