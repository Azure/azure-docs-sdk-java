### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient"
fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient"
name: "ResourceProvidersClient"
nameWithType: "ResourceProvidersClient"
summary: "An instance of this class provides access to all the operations defined in Resource<wbr>Providers<wbr>Client."
syntax: "public interface ResourceProvidersClient"
methods:
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailability(com.azure.resourcemanager.appservice.models.ResourceNameAvailabilityRequest)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailability(ResourceNameAvailabilityRequest request)"
  name: "checkNameAvailability(ResourceNameAvailabilityRequest request)"
  nameWithType: "ResourceProvidersClient.checkNameAvailability(ResourceNameAvailabilityRequest request)"
  summary: "Description for Check if a resource name is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name availability request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ResourceNameAvailabilityRequest?alt=com.azure.resourcemanager.appservice.models.ResourceNameAvailabilityRequest&text=ResourceNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ResourceNameAvailabilityInner checkNameAvailability(ResourceNameAvailabilityRequest request)"
  desc: "Description for Check if a resource name is available."
  returns:
    description: "information regarding availability of a resource name."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ResourceNameAvailabilityInner?alt=com.azure.resourcemanager.appservice.fluent.models.ResourceNameAvailabilityInner&text=ResourceNameAvailabilityInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailabilityAsync(com.azure.resourcemanager.appservice.models.ResourceNameAvailabilityRequest)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailabilityAsync(ResourceNameAvailabilityRequest request)"
  name: "checkNameAvailabilityAsync(ResourceNameAvailabilityRequest request)"
  nameWithType: "ResourceProvidersClient.checkNameAvailabilityAsync(ResourceNameAvailabilityRequest request)"
  summary: "Description for Check if a resource name is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name availability request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ResourceNameAvailabilityRequest?alt=com.azure.resourcemanager.appservice.models.ResourceNameAvailabilityRequest&text=ResourceNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ResourceNameAvailabilityInner> checkNameAvailabilityAsync(ResourceNameAvailabilityRequest request)"
  desc: "Description for Check if a resource name is available."
  returns:
    description: "information regarding availability of a resource name on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ResourceNameAvailabilityInner?alt=com.azure.resourcemanager.appservice.fluent.models.ResourceNameAvailabilityInner&text=ResourceNameAvailabilityInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailabilityWithResponse(com.azure.resourcemanager.appservice.models.ResourceNameAvailabilityRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailabilityWithResponse(ResourceNameAvailabilityRequest request, Context context)"
  name: "checkNameAvailabilityWithResponse(ResourceNameAvailabilityRequest request, Context context)"
  nameWithType: "ResourceProvidersClient.checkNameAvailabilityWithResponse(ResourceNameAvailabilityRequest request, Context context)"
  summary: "Description for Check if a resource name is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name availability request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ResourceNameAvailabilityRequest?alt=com.azure.resourcemanager.appservice.models.ResourceNameAvailabilityRequest&text=ResourceNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ResourceNameAvailabilityInner> checkNameAvailabilityWithResponse(ResourceNameAvailabilityRequest request, Context context)"
  desc: "Description for Check if a resource name is available."
  returns:
    description: "information regarding availability of a resource name along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ResourceNameAvailabilityInner?alt=com.azure.resourcemanager.appservice.fluent.models.ResourceNameAvailabilityInner&text=ResourceNameAvailabilityInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailabilityWithResponseAsync(com.azure.resourcemanager.appservice.models.ResourceNameAvailabilityRequest)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailabilityWithResponseAsync(ResourceNameAvailabilityRequest request)"
  name: "checkNameAvailabilityWithResponseAsync(ResourceNameAvailabilityRequest request)"
  nameWithType: "ResourceProvidersClient.checkNameAvailabilityWithResponseAsync(ResourceNameAvailabilityRequest request)"
  summary: "Description for Check if a resource name is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name availability request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ResourceNameAvailabilityRequest?alt=com.azure.resourcemanager.appservice.models.ResourceNameAvailabilityRequest&text=ResourceNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<ResourceNameAvailabilityInner>> checkNameAvailabilityWithResponseAsync(ResourceNameAvailabilityRequest request)"
  desc: "Description for Check if a resource name is available."
  returns:
    description: "information regarding availability of a resource name along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n     completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ResourceNameAvailabilityInner?alt=com.azure.resourcemanager.appservice.fluent.models.ResourceNameAvailabilityInner&text=ResourceNameAvailabilityInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getPublishingUser()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getPublishingUser()"
  name: "getPublishingUser()"
  nameWithType: "ResourceProvidersClient.getPublishingUser()"
  summary: "Description for Gets publishing user."
  modifiers:
  - "abstract"
  syntax: "public abstract UserInner getPublishingUser()"
  desc: "Description for Gets publishing user."
  returns:
    description: "user credentials used for publishing activity."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.UserInner?alt=com.azure.resourcemanager.appservice.fluent.models.UserInner&text=UserInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getPublishingUserAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getPublishingUserAsync()"
  name: "getPublishingUserAsync()"
  nameWithType: "ResourceProvidersClient.getPublishingUserAsync()"
  summary: "Description for Gets publishing user."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<UserInner> getPublishingUserAsync()"
  desc: "Description for Gets publishing user."
  returns:
    description: "user credentials used for publishing activity on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.UserInner?alt=com.azure.resourcemanager.appservice.fluent.models.UserInner&text=UserInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getPublishingUserWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getPublishingUserWithResponse(Context context)"
  name: "getPublishingUserWithResponse(Context context)"
  nameWithType: "ResourceProvidersClient.getPublishingUserWithResponse(Context context)"
  summary: "Description for Gets publishing user."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<UserInner> getPublishingUserWithResponse(Context context)"
  desc: "Description for Gets publishing user."
  returns:
    description: "user credentials used for publishing activity along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.UserInner?alt=com.azure.resourcemanager.appservice.fluent.models.UserInner&text=UserInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getPublishingUserWithResponseAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getPublishingUserWithResponseAsync()"
  name: "getPublishingUserWithResponseAsync()"
  nameWithType: "ResourceProvidersClient.getPublishingUserWithResponseAsync()"
  summary: "Description for Gets publishing user."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<Response<UserInner>> getPublishingUserWithResponseAsync()"
  desc: "Description for Gets publishing user."
  returns:
    description: "user credentials used for publishing activity along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n     <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.UserInner?alt=com.azure.resourcemanager.appservice.fluent.models.UserInner&text=UserInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSourceControl(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSourceControl(String sourceControlType)"
  name: "getSourceControl(String sourceControlType)"
  nameWithType: "ResourceProvidersClient.getSourceControl(String sourceControlType)"
  summary: "Description for Gets source control token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Type of source control."
    name: "sourceControlType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SourceControlInner getSourceControl(String sourceControlType)"
  desc: "Description for Gets source control token."
  returns:
    description: "the source control OAuth token."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSourceControlAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSourceControlAsync(String sourceControlType)"
  name: "getSourceControlAsync(String sourceControlType)"
  nameWithType: "ResourceProvidersClient.getSourceControlAsync(String sourceControlType)"
  summary: "Description for Gets source control token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Type of source control."
    name: "sourceControlType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<SourceControlInner> getSourceControlAsync(String sourceControlType)"
  desc: "Description for Gets source control token."
  returns:
    description: "the source control OAuth token on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSourceControlWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSourceControlWithResponse(String sourceControlType, Context context)"
  name: "getSourceControlWithResponse(String sourceControlType, Context context)"
  nameWithType: "ResourceProvidersClient.getSourceControlWithResponse(String sourceControlType, Context context)"
  summary: "Description for Gets source control token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Type of source control."
    name: "sourceControlType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SourceControlInner> getSourceControlWithResponse(String sourceControlType, Context context)"
  desc: "Description for Gets source control token."
  returns:
    description: "the source control OAuth token along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSourceControlWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSourceControlWithResponseAsync(String sourceControlType)"
  name: "getSourceControlWithResponseAsync(String sourceControlType)"
  nameWithType: "ResourceProvidersClient.getSourceControlWithResponseAsync(String sourceControlType)"
  summary: "Description for Gets source control token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Type of source control."
    name: "sourceControlType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<SourceControlInner>> getSourceControlWithResponseAsync(String sourceControlType)"
  desc: "Description for Gets source control token."
  returns:
    description: "the source control OAuth token along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSubscriptionDeploymentLocations()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSubscriptionDeploymentLocations()"
  name: "getSubscriptionDeploymentLocations()"
  nameWithType: "ResourceProvidersClient.getSubscriptionDeploymentLocations()"
  summary: "Description for Gets list of available geo regions plus ministamps."
  modifiers:
  - "abstract"
  syntax: "public abstract DeploymentLocationsInner getSubscriptionDeploymentLocations()"
  desc: "Description for Gets list of available geo regions plus ministamps."
  returns:
    description: "list of available locations (regions or App Service Environments) for deployment of App Service\n     resources."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.DeploymentLocationsInner?alt=com.azure.resourcemanager.appservice.fluent.models.DeploymentLocationsInner&text=DeploymentLocationsInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSubscriptionDeploymentLocationsAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSubscriptionDeploymentLocationsAsync()"
  name: "getSubscriptionDeploymentLocationsAsync()"
  nameWithType: "ResourceProvidersClient.getSubscriptionDeploymentLocationsAsync()"
  summary: "Description for Gets list of available geo regions plus ministamps."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<DeploymentLocationsInner> getSubscriptionDeploymentLocationsAsync()"
  desc: "Description for Gets list of available geo regions plus ministamps."
  returns:
    description: "list of available locations (regions or App Service Environments) for deployment of App Service resources\n     on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.DeploymentLocationsInner?alt=com.azure.resourcemanager.appservice.fluent.models.DeploymentLocationsInner&text=DeploymentLocationsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSubscriptionDeploymentLocationsWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSubscriptionDeploymentLocationsWithResponse(Context context)"
  name: "getSubscriptionDeploymentLocationsWithResponse(Context context)"
  nameWithType: "ResourceProvidersClient.getSubscriptionDeploymentLocationsWithResponse(Context context)"
  summary: "Description for Gets list of available geo regions plus ministamps."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DeploymentLocationsInner> getSubscriptionDeploymentLocationsWithResponse(Context context)"
  desc: "Description for Gets list of available geo regions plus ministamps."
  returns:
    description: "list of available locations (regions or App Service Environments) for deployment of App Service resources\n     along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.DeploymentLocationsInner?alt=com.azure.resourcemanager.appservice.fluent.models.DeploymentLocationsInner&text=DeploymentLocationsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSubscriptionDeploymentLocationsWithResponseAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.getSubscriptionDeploymentLocationsWithResponseAsync()"
  name: "getSubscriptionDeploymentLocationsWithResponseAsync()"
  nameWithType: "ResourceProvidersClient.getSubscriptionDeploymentLocationsWithResponseAsync()"
  summary: "Description for Gets list of available geo regions plus ministamps."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<Response<DeploymentLocationsInner>> getSubscriptionDeploymentLocationsWithResponseAsync()"
  desc: "Description for Gets list of available geo regions plus ministamps."
  returns:
    description: "list of available locations (regions or App Service Environments) for deployment of App Service resources\n     along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.DeploymentLocationsInner?alt=com.azure.resourcemanager.appservice.fluent.models.DeploymentLocationsInner&text=DeploymentLocationsInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.list()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.list()"
  name: "list()"
  nameWithType: "ResourceProvidersClient.list()"
  summary: "Description for Gets a list of meters for a given location."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<BillingMeterInner> list()"
  desc: "Description for Gets a list of meters for a given location."
  returns:
    description: "collection of Billing Meters as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.BillingMeterInner?alt=com.azure.resourcemanager.appservice.fluent.models.BillingMeterInner&text=BillingMeterInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.list(String billingLocation, String osType, Context context)"
  name: "list(String billingLocation, String osType, Context context)"
  nameWithType: "ResourceProvidersClient.list(String billingLocation, String osType, Context context)"
  summary: "Description for Gets a list of meters for a given location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Azure Location of billable resource."
    name: "billingLocation"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "App Service OS type meters used for."
    name: "osType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<BillingMeterInner> list(String billingLocation, String osType, Context context)"
  desc: "Description for Gets a list of meters for a given location."
  returns:
    description: "collection of Billing Meters as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.BillingMeterInner?alt=com.azure.resourcemanager.appservice.fluent.models.BillingMeterInner&text=BillingMeterInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listAsync()"
  name: "listAsync()"
  nameWithType: "ResourceProvidersClient.listAsync()"
  summary: "Description for Gets a list of meters for a given location."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<BillingMeterInner> listAsync()"
  desc: "Description for Gets a list of meters for a given location."
  returns:
    description: "collection of Billing Meters as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.BillingMeterInner?alt=com.azure.resourcemanager.appservice.fluent.models.BillingMeterInner&text=BillingMeterInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listAsync(String billingLocation, String osType)"
  name: "listAsync(String billingLocation, String osType)"
  nameWithType: "ResourceProvidersClient.listAsync(String billingLocation, String osType)"
  summary: "Description for Gets a list of meters for a given location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Azure Location of billable resource."
    name: "billingLocation"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "App Service OS type meters used for."
    name: "osType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<BillingMeterInner> listAsync(String billingLocation, String osType)"
  desc: "Description for Gets a list of meters for a given location."
  returns:
    description: "collection of Billing Meters as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.BillingMeterInner?alt=com.azure.resourcemanager.appservice.fluent.models.BillingMeterInner&text=BillingMeterInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listCustomHostnameSites()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listCustomHostnameSites()"
  name: "listCustomHostnameSites()"
  nameWithType: "ResourceProvidersClient.listCustomHostnameSites()"
  summary: "Get custom hostnames under this subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<CustomHostnameSitesInner> listCustomHostnameSites()"
  desc: "Get custom hostnames under this subscription."
  returns:
    description: "custom hostnames under this subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.CustomHostnameSitesInner?alt=com.azure.resourcemanager.appservice.fluent.models.CustomHostnameSitesInner&text=CustomHostnameSitesInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listCustomHostnameSites(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listCustomHostnameSites(String hostname, Context context)"
  name: "listCustomHostnameSites(String hostname, Context context)"
  nameWithType: "ResourceProvidersClient.listCustomHostnameSites(String hostname, Context context)"
  summary: "Get custom hostnames under this subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Specific hostname."
    name: "hostname"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<CustomHostnameSitesInner> listCustomHostnameSites(String hostname, Context context)"
  desc: "Get custom hostnames under this subscription."
  returns:
    description: "custom hostnames under this subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.CustomHostnameSitesInner?alt=com.azure.resourcemanager.appservice.fluent.models.CustomHostnameSitesInner&text=CustomHostnameSitesInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listCustomHostnameSitesAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listCustomHostnameSitesAsync()"
  name: "listCustomHostnameSitesAsync()"
  nameWithType: "ResourceProvidersClient.listCustomHostnameSitesAsync()"
  summary: "Get custom hostnames under this subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<CustomHostnameSitesInner> listCustomHostnameSitesAsync()"
  desc: "Get custom hostnames under this subscription."
  returns:
    description: "custom hostnames under this subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.CustomHostnameSitesInner?alt=com.azure.resourcemanager.appservice.fluent.models.CustomHostnameSitesInner&text=CustomHostnameSitesInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listCustomHostnameSitesAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listCustomHostnameSitesAsync(String hostname)"
  name: "listCustomHostnameSitesAsync(String hostname)"
  nameWithType: "ResourceProvidersClient.listCustomHostnameSitesAsync(String hostname)"
  summary: "Get custom hostnames under this subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Specific hostname."
    name: "hostname"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<CustomHostnameSitesInner> listCustomHostnameSitesAsync(String hostname)"
  desc: "Get custom hostnames under this subscription."
  returns:
    description: "custom hostnames under this subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.CustomHostnameSitesInner?alt=com.azure.resourcemanager.appservice.fluent.models.CustomHostnameSitesInner&text=CustomHostnameSitesInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegions()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegions()"
  name: "listGeoRegions()"
  nameWithType: "ResourceProvidersClient.listGeoRegions()"
  summary: "Description for Get a list of available geographical regions."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<GeoRegionInner> listGeoRegions()"
  desc: "Description for Get a list of available geographical regions."
  returns:
    description: "collection of geographical regions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.GeoRegionInner?alt=com.azure.resourcemanager.appservice.fluent.models.GeoRegionInner&text=GeoRegionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegions(com.azure.resourcemanager.appservice.models.SkuName,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegions(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled, Context context)"
  name: "listGeoRegions(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled, Context context)"
  nameWithType: "ResourceProvidersClient.listGeoRegions(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled, Context context)"
  summary: "Description for Get a list of available geographical regions."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of SKU used to filter the regions."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.SkuName?alt=com.azure.resourcemanager.appservice.models.SkuName&text=SkuName\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify &lt;code&gt;true&lt;/code&gt; if you want to filter to only regions that\n     support Linux workers."
    name: "linuxWorkersEnabled"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  - description: "Specify &lt;code&gt;true&lt;/code&gt; if you want to filter to only regions that\n     support Xenon workers."
    name: "xenonWorkersEnabled"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  - description: "Specify &lt;code&gt;true&lt;/code&gt; if you want to filter to only regions\n     that support Linux Consumption Workers."
    name: "linuxDynamicWorkersEnabled"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<GeoRegionInner> listGeoRegions(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled, Context context)"
  desc: "Description for Get a list of available geographical regions."
  returns:
    description: "collection of geographical regions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.GeoRegionInner?alt=com.azure.resourcemanager.appservice.fluent.models.GeoRegionInner&text=GeoRegionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegionsAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegionsAsync()"
  name: "listGeoRegionsAsync()"
  nameWithType: "ResourceProvidersClient.listGeoRegionsAsync()"
  summary: "Description for Get a list of available geographical regions."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<GeoRegionInner> listGeoRegionsAsync()"
  desc: "Description for Get a list of available geographical regions."
  returns:
    description: "collection of geographical regions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.GeoRegionInner?alt=com.azure.resourcemanager.appservice.fluent.models.GeoRegionInner&text=GeoRegionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegionsAsync(com.azure.resourcemanager.appservice.models.SkuName,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegionsAsync(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled)"
  name: "listGeoRegionsAsync(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled)"
  nameWithType: "ResourceProvidersClient.listGeoRegionsAsync(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled)"
  summary: "Description for Get a list of available geographical regions."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of SKU used to filter the regions."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.SkuName?alt=com.azure.resourcemanager.appservice.models.SkuName&text=SkuName\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify &lt;code&gt;true&lt;/code&gt; if you want to filter to only regions that\n     support Linux workers."
    name: "linuxWorkersEnabled"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  - description: "Specify &lt;code&gt;true&lt;/code&gt; if you want to filter to only regions that\n     support Xenon workers."
    name: "xenonWorkersEnabled"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  - description: "Specify &lt;code&gt;true&lt;/code&gt; if you want to filter to only regions\n     that support Linux Consumption Workers."
    name: "linuxDynamicWorkersEnabled"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public abstract PagedFlux<GeoRegionInner> listGeoRegionsAsync(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled)"
  desc: "Description for Get a list of available geographical regions."
  returns:
    description: "collection of geographical regions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.GeoRegionInner?alt=com.azure.resourcemanager.appservice.fluent.models.GeoRegionInner&text=GeoRegionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listPremierAddOnOffers()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listPremierAddOnOffers()"
  name: "listPremierAddOnOffers()"
  nameWithType: "ResourceProvidersClient.listPremierAddOnOffers()"
  summary: "Description for List all premier add-on offers."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<PremierAddOnOfferInner> listPremierAddOnOffers()"
  desc: "Description for List all premier add-on offers."
  returns:
    description: "collection of premier add-on offers as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.PremierAddOnOfferInner?alt=com.azure.resourcemanager.appservice.fluent.models.PremierAddOnOfferInner&text=PremierAddOnOfferInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listPremierAddOnOffers(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listPremierAddOnOffers(Context context)"
  name: "listPremierAddOnOffers(Context context)"
  nameWithType: "ResourceProvidersClient.listPremierAddOnOffers(Context context)"
  summary: "Description for List all premier add-on offers."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PremierAddOnOfferInner> listPremierAddOnOffers(Context context)"
  desc: "Description for List all premier add-on offers."
  returns:
    description: "collection of premier add-on offers as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.PremierAddOnOfferInner?alt=com.azure.resourcemanager.appservice.fluent.models.PremierAddOnOfferInner&text=PremierAddOnOfferInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listPremierAddOnOffersAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listPremierAddOnOffersAsync()"
  name: "listPremierAddOnOffersAsync()"
  nameWithType: "ResourceProvidersClient.listPremierAddOnOffersAsync()"
  summary: "Description for List all premier add-on offers."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<PremierAddOnOfferInner> listPremierAddOnOffersAsync()"
  desc: "Description for List all premier add-on offers."
  returns:
    description: "collection of premier add-on offers as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.PremierAddOnOfferInner?alt=com.azure.resourcemanager.appservice.fluent.models.PremierAddOnOfferInner&text=PremierAddOnOfferInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSiteIdentifiersAssignedToHostname(com.azure.resourcemanager.appservice.fluent.models.NameIdentifierInner)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSiteIdentifiersAssignedToHostname(NameIdentifierInner nameIdentifier)"
  name: "listSiteIdentifiersAssignedToHostname(NameIdentifierInner nameIdentifier)"
  nameWithType: "ResourceProvidersClient.listSiteIdentifiersAssignedToHostname(NameIdentifierInner nameIdentifier)"
  summary: "Description for List all apps that are assigned to a hostname."
  modifiers:
  - "abstract"
  parameters:
  - description: "Hostname information."
    name: "nameIdentifier"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.NameIdentifierInner?alt=com.azure.resourcemanager.appservice.fluent.models.NameIdentifierInner&text=NameIdentifierInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<IdentifierInner> listSiteIdentifiersAssignedToHostname(NameIdentifierInner nameIdentifier)"
  desc: "Description for List all apps that are assigned to a hostname."
  returns:
    description: "collection of identifiers as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.IdentifierInner?alt=com.azure.resourcemanager.appservice.fluent.models.IdentifierInner&text=IdentifierInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSiteIdentifiersAssignedToHostname(com.azure.resourcemanager.appservice.fluent.models.NameIdentifierInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSiteIdentifiersAssignedToHostname(NameIdentifierInner nameIdentifier, Context context)"
  name: "listSiteIdentifiersAssignedToHostname(NameIdentifierInner nameIdentifier, Context context)"
  nameWithType: "ResourceProvidersClient.listSiteIdentifiersAssignedToHostname(NameIdentifierInner nameIdentifier, Context context)"
  summary: "Description for List all apps that are assigned to a hostname."
  modifiers:
  - "abstract"
  parameters:
  - description: "Hostname information."
    name: "nameIdentifier"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.NameIdentifierInner?alt=com.azure.resourcemanager.appservice.fluent.models.NameIdentifierInner&text=NameIdentifierInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<IdentifierInner> listSiteIdentifiersAssignedToHostname(NameIdentifierInner nameIdentifier, Context context)"
  desc: "Description for List all apps that are assigned to a hostname."
  returns:
    description: "collection of identifiers as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.IdentifierInner?alt=com.azure.resourcemanager.appservice.fluent.models.IdentifierInner&text=IdentifierInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSiteIdentifiersAssignedToHostnameAsync(com.azure.resourcemanager.appservice.fluent.models.NameIdentifierInner)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSiteIdentifiersAssignedToHostnameAsync(NameIdentifierInner nameIdentifier)"
  name: "listSiteIdentifiersAssignedToHostnameAsync(NameIdentifierInner nameIdentifier)"
  nameWithType: "ResourceProvidersClient.listSiteIdentifiersAssignedToHostnameAsync(NameIdentifierInner nameIdentifier)"
  summary: "Description for List all apps that are assigned to a hostname."
  modifiers:
  - "abstract"
  parameters:
  - description: "Hostname information."
    name: "nameIdentifier"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.NameIdentifierInner?alt=com.azure.resourcemanager.appservice.fluent.models.NameIdentifierInner&text=NameIdentifierInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<IdentifierInner> listSiteIdentifiersAssignedToHostnameAsync(NameIdentifierInner nameIdentifier)"
  desc: "Description for List all apps that are assigned to a hostname."
  returns:
    description: "collection of identifiers as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.IdentifierInner?alt=com.azure.resourcemanager.appservice.fluent.models.IdentifierInner&text=IdentifierInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSkus()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSkus()"
  name: "listSkus()"
  nameWithType: "ResourceProvidersClient.listSkus()"
  summary: "Description for List all SKUs."
  modifiers:
  - "abstract"
  syntax: "public abstract SkuInfosInner listSkus()"
  desc: "Description for List all SKUs."
  returns:
    description: "collection of SKU information."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SkuInfosInner?alt=com.azure.resourcemanager.appservice.fluent.models.SkuInfosInner&text=SkuInfosInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSkusAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSkusAsync()"
  name: "listSkusAsync()"
  nameWithType: "ResourceProvidersClient.listSkusAsync()"
  summary: "Description for List all SKUs."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<SkuInfosInner> listSkusAsync()"
  desc: "Description for List all SKUs."
  returns:
    description: "collection of SKU information on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SkuInfosInner?alt=com.azure.resourcemanager.appservice.fluent.models.SkuInfosInner&text=SkuInfosInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSkusWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSkusWithResponse(Context context)"
  name: "listSkusWithResponse(Context context)"
  nameWithType: "ResourceProvidersClient.listSkusWithResponse(Context context)"
  summary: "Description for List all SKUs."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SkuInfosInner> listSkusWithResponse(Context context)"
  desc: "Description for List all SKUs."
  returns:
    description: "collection of SKU information along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SkuInfosInner?alt=com.azure.resourcemanager.appservice.fluent.models.SkuInfosInner&text=SkuInfosInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSkusWithResponseAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSkusWithResponseAsync()"
  name: "listSkusWithResponseAsync()"
  nameWithType: "ResourceProvidersClient.listSkusWithResponseAsync()"
  summary: "Description for List all SKUs."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<Response<SkuInfosInner>> listSkusWithResponseAsync()"
  desc: "Description for List all SKUs."
  returns:
    description: "collection of SKU information along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SkuInfosInner?alt=com.azure.resourcemanager.appservice.fluent.models.SkuInfosInner&text=SkuInfosInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSourceControls()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSourceControls()"
  name: "listSourceControls()"
  nameWithType: "ResourceProvidersClient.listSourceControls()"
  summary: "Description for Gets the source controls available for Azure websites."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<SourceControlInner> listSourceControls()"
  desc: "Description for Gets the source controls available for Azure websites."
  returns:
    description: "collection of source controls as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSourceControls(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSourceControls(Context context)"
  name: "listSourceControls(Context context)"
  nameWithType: "ResourceProvidersClient.listSourceControls(Context context)"
  summary: "Description for Gets the source controls available for Azure websites."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<SourceControlInner> listSourceControls(Context context)"
  desc: "Description for Gets the source controls available for Azure websites."
  returns:
    description: "collection of source controls as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSourceControlsAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listSourceControlsAsync()"
  name: "listSourceControlsAsync()"
  nameWithType: "ResourceProvidersClient.listSourceControlsAsync()"
  summary: "Description for Gets the source controls available for Azure websites."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<SourceControlInner> listSourceControlsAsync()"
  desc: "Description for Gets the source controls available for Azure websites."
  returns:
    description: "collection of source controls as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.move(java.lang.String,com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.move(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  name: "move(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  nameWithType: "ResourceProvidersClient.move(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  summary: "Description for Move resources between resource groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Object that represents the resource to move."
    name: "moveResourceEnvelope"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope?alt=com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope&text=CsmMoveResourceEnvelope\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void move(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  desc: "Description for Move resources between resource groups."
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.moveAsync(java.lang.String,com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.moveAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  name: "moveAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  nameWithType: "ResourceProvidersClient.moveAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  summary: "Description for Move resources between resource groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Object that represents the resource to move."
    name: "moveResourceEnvelope"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope?alt=com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope&text=CsmMoveResourceEnvelope\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> moveAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  desc: "Description for Move resources between resource groups."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.moveWithResponse(java.lang.String,com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.moveWithResponse(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope, Context context)"
  name: "moveWithResponse(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope, Context context)"
  nameWithType: "ResourceProvidersClient.moveWithResponse(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope, Context context)"
  summary: "Description for Move resources between resource groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Object that represents the resource to move."
    name: "moveResourceEnvelope"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope?alt=com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope&text=CsmMoveResourceEnvelope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> moveWithResponse(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope, Context context)"
  desc: "Description for Move resources between resource groups."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.moveWithResponseAsync(java.lang.String,com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.moveWithResponseAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  name: "moveWithResponseAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  nameWithType: "ResourceProvidersClient.moveWithResponseAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  summary: "Description for Move resources between resource groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Object that represents the resource to move."
    name: "moveResourceEnvelope"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope?alt=com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope&text=CsmMoveResourceEnvelope\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> moveWithResponseAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  desc: "Description for Move resources between resource groups."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updatePublishingUser(com.azure.resourcemanager.appservice.fluent.models.UserInner)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updatePublishingUser(UserInner userDetails)"
  name: "updatePublishingUser(UserInner userDetails)"
  nameWithType: "ResourceProvidersClient.updatePublishingUser(UserInner userDetails)"
  summary: "Description for Updates publishing user."
  modifiers:
  - "abstract"
  parameters:
  - description: "Details of publishing user."
    name: "userDetails"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.UserInner?alt=com.azure.resourcemanager.appservice.fluent.models.UserInner&text=UserInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract UserInner updatePublishingUser(UserInner userDetails)"
  desc: "Description for Updates publishing user."
  returns:
    description: "user credentials used for publishing activity."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.UserInner?alt=com.azure.resourcemanager.appservice.fluent.models.UserInner&text=UserInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updatePublishingUserAsync(com.azure.resourcemanager.appservice.fluent.models.UserInner)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updatePublishingUserAsync(UserInner userDetails)"
  name: "updatePublishingUserAsync(UserInner userDetails)"
  nameWithType: "ResourceProvidersClient.updatePublishingUserAsync(UserInner userDetails)"
  summary: "Description for Updates publishing user."
  modifiers:
  - "abstract"
  parameters:
  - description: "Details of publishing user."
    name: "userDetails"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.UserInner?alt=com.azure.resourcemanager.appservice.fluent.models.UserInner&text=UserInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<UserInner> updatePublishingUserAsync(UserInner userDetails)"
  desc: "Description for Updates publishing user."
  returns:
    description: "user credentials used for publishing activity on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.UserInner?alt=com.azure.resourcemanager.appservice.fluent.models.UserInner&text=UserInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updatePublishingUserWithResponse(com.azure.resourcemanager.appservice.fluent.models.UserInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updatePublishingUserWithResponse(UserInner userDetails, Context context)"
  name: "updatePublishingUserWithResponse(UserInner userDetails, Context context)"
  nameWithType: "ResourceProvidersClient.updatePublishingUserWithResponse(UserInner userDetails, Context context)"
  summary: "Description for Updates publishing user."
  modifiers:
  - "abstract"
  parameters:
  - description: "Details of publishing user."
    name: "userDetails"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.UserInner?alt=com.azure.resourcemanager.appservice.fluent.models.UserInner&text=UserInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<UserInner> updatePublishingUserWithResponse(UserInner userDetails, Context context)"
  desc: "Description for Updates publishing user."
  returns:
    description: "user credentials used for publishing activity along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.UserInner?alt=com.azure.resourcemanager.appservice.fluent.models.UserInner&text=UserInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updatePublishingUserWithResponseAsync(com.azure.resourcemanager.appservice.fluent.models.UserInner)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updatePublishingUserWithResponseAsync(UserInner userDetails)"
  name: "updatePublishingUserWithResponseAsync(UserInner userDetails)"
  nameWithType: "ResourceProvidersClient.updatePublishingUserWithResponseAsync(UserInner userDetails)"
  summary: "Description for Updates publishing user."
  modifiers:
  - "abstract"
  parameters:
  - description: "Details of publishing user."
    name: "userDetails"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.UserInner?alt=com.azure.resourcemanager.appservice.fluent.models.UserInner&text=UserInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<UserInner>> updatePublishingUserWithResponseAsync(UserInner userDetails)"
  desc: "Description for Updates publishing user."
  returns:
    description: "user credentials used for publishing activity along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n     <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.UserInner?alt=com.azure.resourcemanager.appservice.fluent.models.UserInner&text=UserInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updateSourceControl(java.lang.String,com.azure.resourcemanager.appservice.fluent.models.SourceControlInner)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updateSourceControl(String sourceControlType, SourceControlInner requestMessage)"
  name: "updateSourceControl(String sourceControlType, SourceControlInner requestMessage)"
  nameWithType: "ResourceProvidersClient.updateSourceControl(String sourceControlType, SourceControlInner requestMessage)"
  summary: "Description for Updates source control token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Type of source control."
    name: "sourceControlType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Source control token information."
    name: "requestMessage"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SourceControlInner updateSourceControl(String sourceControlType, SourceControlInner requestMessage)"
  desc: "Description for Updates source control token."
  returns:
    description: "the source control OAuth token."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updateSourceControlAsync(java.lang.String,com.azure.resourcemanager.appservice.fluent.models.SourceControlInner)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updateSourceControlAsync(String sourceControlType, SourceControlInner requestMessage)"
  name: "updateSourceControlAsync(String sourceControlType, SourceControlInner requestMessage)"
  nameWithType: "ResourceProvidersClient.updateSourceControlAsync(String sourceControlType, SourceControlInner requestMessage)"
  summary: "Description for Updates source control token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Type of source control."
    name: "sourceControlType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Source control token information."
    name: "requestMessage"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<SourceControlInner> updateSourceControlAsync(String sourceControlType, SourceControlInner requestMessage)"
  desc: "Description for Updates source control token."
  returns:
    description: "the source control OAuth token on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updateSourceControlWithResponse(java.lang.String,com.azure.resourcemanager.appservice.fluent.models.SourceControlInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updateSourceControlWithResponse(String sourceControlType, SourceControlInner requestMessage, Context context)"
  name: "updateSourceControlWithResponse(String sourceControlType, SourceControlInner requestMessage, Context context)"
  nameWithType: "ResourceProvidersClient.updateSourceControlWithResponse(String sourceControlType, SourceControlInner requestMessage, Context context)"
  summary: "Description for Updates source control token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Type of source control."
    name: "sourceControlType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Source control token information."
    name: "requestMessage"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SourceControlInner> updateSourceControlWithResponse(String sourceControlType, SourceControlInner requestMessage, Context context)"
  desc: "Description for Updates source control token."
  returns:
    description: "the source control OAuth token along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updateSourceControlWithResponseAsync(java.lang.String,com.azure.resourcemanager.appservice.fluent.models.SourceControlInner)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.updateSourceControlWithResponseAsync(String sourceControlType, SourceControlInner requestMessage)"
  name: "updateSourceControlWithResponseAsync(String sourceControlType, SourceControlInner requestMessage)"
  nameWithType: "ResourceProvidersClient.updateSourceControlWithResponseAsync(String sourceControlType, SourceControlInner requestMessage)"
  summary: "Description for Updates source control token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Type of source control."
    name: "sourceControlType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Source control token information."
    name: "requestMessage"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<SourceControlInner>> updateSourceControlWithResponseAsync(String sourceControlType, SourceControlInner requestMessage)"
  desc: "Description for Updates source control token."
  returns:
    description: "the source control OAuth token along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.SourceControlInner?alt=com.azure.resourcemanager.appservice.fluent.models.SourceControlInner&text=SourceControlInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validate(java.lang.String,com.azure.resourcemanager.appservice.fluent.models.ValidateRequestInner)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validate(String resourceGroupName, ValidateRequestInner validateRequest)"
  name: "validate(String resourceGroupName, ValidateRequestInner validateRequest)"
  nameWithType: "ResourceProvidersClient.validate(String resourceGroupName, ValidateRequestInner validateRequest)"
  summary: "Description for Validate if a resource can be created."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Request with the resources to validate."
    name: "validateRequest"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateRequestInner?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateRequestInner&text=ValidateRequestInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ValidateResponseInner validate(String resourceGroupName, ValidateRequestInner validateRequest)"
  desc: "Description for Validate if a resource can be created."
  returns:
    description: "describes the result of resource validation."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateResponseInner?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateResponseInner&text=ValidateResponseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateAsync(java.lang.String,com.azure.resourcemanager.appservice.fluent.models.ValidateRequestInner)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateAsync(String resourceGroupName, ValidateRequestInner validateRequest)"
  name: "validateAsync(String resourceGroupName, ValidateRequestInner validateRequest)"
  nameWithType: "ResourceProvidersClient.validateAsync(String resourceGroupName, ValidateRequestInner validateRequest)"
  summary: "Description for Validate if a resource can be created."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Request with the resources to validate."
    name: "validateRequest"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateRequestInner?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateRequestInner&text=ValidateRequestInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ValidateResponseInner> validateAsync(String resourceGroupName, ValidateRequestInner validateRequest)"
  desc: "Description for Validate if a resource can be created."
  returns:
    description: "describes the result of resource validation on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateResponseInner?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateResponseInner&text=ValidateResponseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateMove(java.lang.String,com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateMove(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  name: "validateMove(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  nameWithType: "ResourceProvidersClient.validateMove(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  summary: "Description for Validate whether a resource can be moved."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Object that represents the resource to move."
    name: "moveResourceEnvelope"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope?alt=com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope&text=CsmMoveResourceEnvelope\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void validateMove(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  desc: "Description for Validate whether a resource can be moved."
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateMoveAsync(java.lang.String,com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateMoveAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  name: "validateMoveAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  nameWithType: "ResourceProvidersClient.validateMoveAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  summary: "Description for Validate whether a resource can be moved."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Object that represents the resource to move."
    name: "moveResourceEnvelope"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope?alt=com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope&text=CsmMoveResourceEnvelope\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> validateMoveAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  desc: "Description for Validate whether a resource can be moved."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateMoveWithResponse(java.lang.String,com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateMoveWithResponse(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope, Context context)"
  name: "validateMoveWithResponse(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope, Context context)"
  nameWithType: "ResourceProvidersClient.validateMoveWithResponse(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope, Context context)"
  summary: "Description for Validate whether a resource can be moved."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Object that represents the resource to move."
    name: "moveResourceEnvelope"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope?alt=com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope&text=CsmMoveResourceEnvelope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> validateMoveWithResponse(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope, Context context)"
  desc: "Description for Validate whether a resource can be moved."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateMoveWithResponseAsync(java.lang.String,com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateMoveWithResponseAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  name: "validateMoveWithResponseAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  nameWithType: "ResourceProvidersClient.validateMoveWithResponseAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  summary: "Description for Validate whether a resource can be moved."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Object that represents the resource to move."
    name: "moveResourceEnvelope"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope?alt=com.azure.resourcemanager.appservice.models.CsmMoveResourceEnvelope&text=CsmMoveResourceEnvelope\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> validateMoveWithResponseAsync(String resourceGroupName, CsmMoveResourceEnvelope moveResourceEnvelope)"
  desc: "Description for Validate whether a resource can be moved."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateWithResponse(java.lang.String,com.azure.resourcemanager.appservice.fluent.models.ValidateRequestInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateWithResponse(String resourceGroupName, ValidateRequestInner validateRequest, Context context)"
  name: "validateWithResponse(String resourceGroupName, ValidateRequestInner validateRequest, Context context)"
  nameWithType: "ResourceProvidersClient.validateWithResponse(String resourceGroupName, ValidateRequestInner validateRequest, Context context)"
  summary: "Description for Validate if a resource can be created."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Request with the resources to validate."
    name: "validateRequest"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateRequestInner?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateRequestInner&text=ValidateRequestInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ValidateResponseInner> validateWithResponse(String resourceGroupName, ValidateRequestInner validateRequest, Context context)"
  desc: "Description for Validate if a resource can be created."
  returns:
    description: "describes the result of resource validation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateResponseInner?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateResponseInner&text=ValidateResponseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateWithResponseAsync(java.lang.String,com.azure.resourcemanager.appservice.fluent.models.ValidateRequestInner)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.validateWithResponseAsync(String resourceGroupName, ValidateRequestInner validateRequest)"
  name: "validateWithResponseAsync(String resourceGroupName, ValidateRequestInner validateRequest)"
  nameWithType: "ResourceProvidersClient.validateWithResponseAsync(String resourceGroupName, ValidateRequestInner validateRequest)"
  summary: "Description for Validate if a resource can be created."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Request with the resources to validate."
    name: "validateRequest"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateRequestInner?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateRequestInner&text=ValidateRequestInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<ValidateResponseInner>> validateWithResponseAsync(String resourceGroupName, ValidateRequestInner validateRequest)"
  desc: "Description for Validate if a resource can be created."
  returns:
    description: "describes the result of resource validation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n     <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateResponseInner?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateResponseInner&text=ValidateResponseInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnet(com.azure.resourcemanager.appservice.models.VnetParameters)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnet(VnetParameters parameters)"
  name: "verifyHostingEnvironmentVnet(VnetParameters parameters)"
  nameWithType: "ResourceProvidersClient.verifyHostingEnvironmentVnet(VnetParameters parameters)"
  summary: "Description for Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules."
  modifiers:
  - "abstract"
  parameters:
  - description: "VNET information."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VnetParameters?alt=com.azure.resourcemanager.appservice.models.VnetParameters&text=VnetParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract VnetValidationFailureDetailsInner verifyHostingEnvironmentVnet(VnetParameters parameters)"
  desc: "Description for Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules."
  returns:
    description: "a class that describes the reason for a validation failure."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetValidationFailureDetailsInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetValidationFailureDetailsInner&text=VnetValidationFailureDetailsInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnetAsync(com.azure.resourcemanager.appservice.models.VnetParameters)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnetAsync(VnetParameters parameters)"
  name: "verifyHostingEnvironmentVnetAsync(VnetParameters parameters)"
  nameWithType: "ResourceProvidersClient.verifyHostingEnvironmentVnetAsync(VnetParameters parameters)"
  summary: "Description for Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules."
  modifiers:
  - "abstract"
  parameters:
  - description: "VNET information."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VnetParameters?alt=com.azure.resourcemanager.appservice.models.VnetParameters&text=VnetParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<VnetValidationFailureDetailsInner> verifyHostingEnvironmentVnetAsync(VnetParameters parameters)"
  desc: "Description for Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules."
  returns:
    description: "a class that describes the reason for a validation failure on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetValidationFailureDetailsInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetValidationFailureDetailsInner&text=VnetValidationFailureDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnetWithResponse(com.azure.resourcemanager.appservice.models.VnetParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnetWithResponse(VnetParameters parameters, Context context)"
  name: "verifyHostingEnvironmentVnetWithResponse(VnetParameters parameters, Context context)"
  nameWithType: "ResourceProvidersClient.verifyHostingEnvironmentVnetWithResponse(VnetParameters parameters, Context context)"
  summary: "Description for Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules."
  modifiers:
  - "abstract"
  parameters:
  - description: "VNET information."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VnetParameters?alt=com.azure.resourcemanager.appservice.models.VnetParameters&text=VnetParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<VnetValidationFailureDetailsInner> verifyHostingEnvironmentVnetWithResponse(VnetParameters parameters, Context context)"
  desc: "Description for Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules."
  returns:
    description: "a class that describes the reason for a validation failure along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetValidationFailureDetailsInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetValidationFailureDetailsInner&text=VnetValidationFailureDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnetWithResponseAsync(com.azure.resourcemanager.appservice.models.VnetParameters)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnetWithResponseAsync(VnetParameters parameters)"
  name: "verifyHostingEnvironmentVnetWithResponseAsync(VnetParameters parameters)"
  nameWithType: "ResourceProvidersClient.verifyHostingEnvironmentVnetWithResponseAsync(VnetParameters parameters)"
  summary: "Description for Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules."
  modifiers:
  - "abstract"
  parameters:
  - description: "VNET information."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VnetParameters?alt=com.azure.resourcemanager.appservice.models.VnetParameters&text=VnetParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<VnetValidationFailureDetailsInner>> verifyHostingEnvironmentVnetWithResponseAsync(VnetParameters parameters)"
  desc: "Description for Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules."
  returns:
    description: "a class that describes the reason for a validation failure along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n     completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetValidationFailureDetailsInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetValidationFailureDetailsInner&text=VnetValidationFailureDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ResourceProvidersClient."
metadata: {}
package: "com.azure.resourcemanager.appservice.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.19.0
