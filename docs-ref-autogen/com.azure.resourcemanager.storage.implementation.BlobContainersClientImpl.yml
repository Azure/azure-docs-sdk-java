### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  id: BlobContainersClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation
  children:
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHold(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldWithResponse(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.delete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.get(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lease(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.LeaseContainerRequest)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.LeaseContainerRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.LeaseContainerRequest)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.list(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.list(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListContainersInclude,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.listAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.listAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListContainersInclude)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHold(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldWithResponse(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  langs:
  - java
  name: BlobContainersClientImpl
  nameWithType: BlobContainersClientImpl
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  type: Class
  package: com.azure.resourcemanager.storage.implementation
  summary: An instance of this class provides access to all the operations defined in BlobContainersClient.
  syntax:
    content: public final class BlobContainersClientImpl implements BlobContainersClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.storage.fluent.BlobContainersClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.BlobContainersClientImpl(com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl)
  id: BlobContainersClientImpl(com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: BlobContainersClientImpl(StorageManagementClientImpl client)
  nameWithType: BlobContainersClientImpl.BlobContainersClientImpl(StorageManagementClientImpl client)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.BlobContainersClientImpl(StorageManagementClientImpl client)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.BlobContainersClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.storage.implementation
  summary: Initializes an instance of BlobContainersClientImpl.
  syntax:
    content: " BlobContainersClientImpl(StorageManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHold(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: clearLegalHold(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: clearLegalHold(String resourceGroupName, String accountName, String containerName, List<String> tags)
  nameWithType: BlobContainersClientImpl.clearLegalHold(String resourceGroupName, String accountName, String containerName, List<String> tags)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHold(String resourceGroupName, String accountName, String containerName, List<String> tags)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHold*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
  syntax:
    content: public LegalHoldInner clearLegalHold(String resourceGroupName, String accountName, String containerName, List<String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: tags
      type: java.util.List<java.lang.String>
      description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.LegalHoldInner
      description: the LegalHold property of a blob container.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: clearLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: clearLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  nameWithType: BlobContainersClientImpl.clearLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
  syntax:
    content: public Mono<LegalHoldInner> clearLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: tags
      type: java.util.List<java.lang.String>
      description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.LegalHoldInner>
      description: the LegalHold property of a blob container.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldWithResponse(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: clearLegalHoldWithResponse(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: clearLegalHoldWithResponse(String resourceGroupName, String accountName, String containerName, List<String> tags, Context context)
  nameWithType: BlobContainersClientImpl.clearLegalHoldWithResponse(String resourceGroupName, String accountName, String containerName, List<String> tags, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldWithResponse(String resourceGroupName, String accountName, String containerName, List<String> tags, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
  syntax:
    content: public Response<LegalHoldInner> clearLegalHoldWithResponse(String resourceGroupName, String accountName, String containerName, List<String> tags, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: tags
      type: java.util.List<java.lang.String>
      description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.LegalHoldInner>
      description: the LegalHold property of a blob container.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: clearLegalHoldWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: clearLegalHoldWithResponseAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  nameWithType: BlobContainersClientImpl.clearLegalHoldWithResponseAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldWithResponseAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
  syntax:
    content: public Mono<Response<LegalHoldInner>> clearLegalHoldWithResponseAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: tags
      type: java.util.List<java.lang.String>
      description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.LegalHoldInner>>
      description: the LegalHold property of a blob container.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  id: create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: create(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  nameWithType: BlobContainersClientImpl.create(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.create(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.create*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container.
  syntax:
    content: public BlobContainerInner create(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: blobContainer
      type: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
      description: Properties of the blob container, including Id, resource name, resource type, Etag.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
      description: properties of the blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  id: createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: createAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  nameWithType: BlobContainersClientImpl.createAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container.
  syntax:
    content: public Mono<BlobContainerInner> createAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: blobContainer
      type: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
      description: Properties of the blob container, including Id, resource name, resource type, Etag.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.BlobContainerInner>
      description: properties of the blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String)
  id: createOrUpdateImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: createOrUpdateImmutabilityPolicy(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainersClientImpl.createOrUpdateImmutabilityPolicy(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicy(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicy*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation.
  syntax:
    content: public ImmutabilityPolicyInner createOrUpdateImmutabilityPolicy(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  id: createOrUpdateImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: createOrUpdateImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation.
  syntax:
    content: public Mono<ImmutabilityPolicyInner> createOrUpdateImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
  id: createOrUpdateImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: createOrUpdateImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  nameWithType: BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation.
  syntax:
    content: public Mono<ImmutabilityPolicyInner> createOrUpdateImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    - id: immutabilityPeriodSinceCreationInDays
      type: java.lang.Integer
      description: >-
        The immutability period for the blobs in the container since the
             policy creation, in days.
    - id: allowProtectedAppendWrites
      type: java.lang.Boolean
      description: >-
        This property can only be changed for unlocked time-based retention policies.
             When enabled, new blocks can be written to an append blob while maintaining immutability protection and
             compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property
             cannot be changed with ExtendImmutabilityPolicy API.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,com.azure.core.util.Context)
  id: createOrUpdateImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: createOrUpdateImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites, Context context)
  nameWithType: BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation.
  syntax:
    content: public Response<ImmutabilityPolicyInner> createOrUpdateImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    - id: immutabilityPeriodSinceCreationInDays
      type: java.lang.Integer
      description: >-
        The immutability period for the blobs in the container since the
             policy creation, in days.
    - id: allowProtectedAppendWrites
      type: java.lang.Boolean
      description: >-
        This property can only be changed for unlocked time-based retention policies.
             When enabled, new blocks can be written to an append blob while maintaining immutability protection and
             compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property
             cannot be changed with ExtendImmutabilityPolicy API.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
  id: createOrUpdateImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: createOrUpdateImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  nameWithType: BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation.
  syntax:
    content: public Mono<BlobContainersCreateOrUpdateImmutabilityPolicyResponse> createOrUpdateImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    - id: immutabilityPeriodSinceCreationInDays
      type: java.lang.Integer
      description: >-
        The immutability period for the blobs in the container since the
             policy creation, in days.
    - id: allowProtectedAppendWrites
      type: java.lang.Boolean
      description: >-
        This property can only be changed for unlocked time-based retention policies.
             When enabled, new blocks can be written to an append blob while maintaining immutability protection and
             compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property
             cannot be changed with ExtendImmutabilityPolicy API.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner,com.azure.core.util.Context)
  id: createWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: createWithResponse(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer, Context context)
  nameWithType: BlobContainersClientImpl.createWithResponse(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createWithResponse(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container.
  syntax:
    content: public Response<BlobContainerInner> createWithResponse(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: blobContainer
      type: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
      description: Properties of the blob container, including Id, resource name, resource type, Etag.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.BlobContainerInner>
      description: properties of the blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  id: createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: createWithResponseAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  nameWithType: BlobContainersClientImpl.createWithResponseAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createWithResponseAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container.
  syntax:
    content: public Mono<Response<BlobContainerInner>> createWithResponseAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: blobContainer
      type: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
      description: Properties of the blob container, including Id, resource name, resource type, Etag.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.BlobContainerInner>>
      description: properties of the blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.delete(java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainersClientImpl.delete(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.delete(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Deletes specified container under its account.
  syntax:
    content: public void delete(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainersClientImpl.deleteAsync(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteAsync(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Deletes specified container under its account.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: deleteImmutabilityPolicy(String resourceGroupName, String accountName, String containerName, String ifMatch)
  nameWithType: BlobContainersClientImpl.deleteImmutabilityPolicy(String resourceGroupName, String accountName, String containerName, String ifMatch)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicy(String resourceGroupName, String accountName, String containerName, String ifMatch)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicy*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, the only way is to delete the container after deleting all expired blobs inside the policy locked container.
  syntax:
    content: public ImmutabilityPolicyInner deleteImmutabilityPolicy(String resourceGroupName, String accountName, String containerName, String ifMatch)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: deleteImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  nameWithType: BlobContainersClientImpl.deleteImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, the only way is to delete the container after deleting all expired blobs inside the policy locked container.
  syntax:
    content: public Mono<ImmutabilityPolicyInner> deleteImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: deleteImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Context context)
  nameWithType: BlobContainersClientImpl.deleteImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, the only way is to delete the container after deleting all expired blobs inside the policy locked container.
  syntax:
    content: public Response<ImmutabilityPolicyInner> deleteImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: deleteImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  nameWithType: BlobContainersClientImpl.deleteImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, the only way is to delete the container after deleting all expired blobs inside the policy locked container.
  syntax:
    content: public Mono<BlobContainersDeleteImmutabilityPolicyResponse> deleteImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.BlobContainersDeleteImmutabilityPolicyResponse>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: deleteWithResponse(String resourceGroupName, String accountName, String containerName, Context context)
  nameWithType: BlobContainersClientImpl.deleteWithResponse(String resourceGroupName, String accountName, String containerName, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteWithResponse(String resourceGroupName, String accountName, String containerName, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Deletes specified container under its account.
  syntax:
    content: public Response<Void> deleteWithResponse(String resourceGroupName, String accountName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainersClientImpl.deleteWithResponseAsync(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteWithResponseAsync(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Deletes specified container under its account.
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: extendImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: extendImmutabilityPolicy(String resourceGroupName, String accountName, String containerName, String ifMatch)
  nameWithType: BlobContainersClientImpl.extendImmutabilityPolicy(String resourceGroupName, String accountName, String containerName, String ifMatch)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicy(String resourceGroupName, String accountName, String containerName, String ifMatch)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicy*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
  syntax:
    content: public ImmutabilityPolicyInner extendImmutabilityPolicy(String resourceGroupName, String accountName, String containerName, String ifMatch)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  nameWithType: BlobContainersClientImpl.extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
  syntax:
    content: public Mono<ImmutabilityPolicyInner> extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
  id: extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  nameWithType: BlobContainersClientImpl.extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
  syntax:
    content: public Mono<ImmutabilityPolicyInner> extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    - id: immutabilityPeriodSinceCreationInDays
      type: java.lang.Integer
      description: >-
        The immutability period for the blobs in the container since the
             policy creation, in days.
    - id: allowProtectedAppendWrites
      type: java.lang.Boolean
      description: >-
        This property can only be changed for unlocked time-based retention policies.
             When enabled, new blocks can be written to an append blob while maintaining immutability protection and
             compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property
             cannot be changed with ExtendImmutabilityPolicy API.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,com.azure.core.util.Context)
  id: extendImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: extendImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites, Context context)
  nameWithType: BlobContainersClientImpl.extendImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
  syntax:
    content: public Response<ImmutabilityPolicyInner> extendImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    - id: immutabilityPeriodSinceCreationInDays
      type: java.lang.Integer
      description: >-
        The immutability period for the blobs in the container since the
             policy creation, in days.
    - id: allowProtectedAppendWrites
      type: java.lang.Boolean
      description: >-
        This property can only be changed for unlocked time-based retention policies.
             When enabled, new blocks can be written to an append blob while maintaining immutability protection and
             compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property
             cannot be changed with ExtendImmutabilityPolicy API.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
  id: extendImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: extendImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  nameWithType: BlobContainersClientImpl.extendImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
  syntax:
    content: public Mono<BlobContainersExtendImmutabilityPolicyResponse> extendImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch, Integer immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    - id: immutabilityPeriodSinceCreationInDays
      type: java.lang.Integer
      description: >-
        The immutability period for the blobs in the container since the
             policy creation, in days.
    - id: allowProtectedAppendWrites
      type: java.lang.Boolean
      description: >-
        This property can only be changed for unlocked time-based retention policies.
             When enabled, new blocks can be written to an append blob while maintaining immutability protection and
             compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property
             cannot be changed with ExtendImmutabilityPolicy API.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.BlobContainersExtendImmutabilityPolicyResponse>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.get(java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: get(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainersClientImpl.get(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.get(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.get*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets properties of a specified container.
  syntax:
    content: public BlobContainerInner get(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
      description: properties of a specified container.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: getAsync(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainersClientImpl.getAsync(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getAsync(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets properties of a specified container.
  syntax:
    content: public Mono<BlobContainerInner> getAsync(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.BlobContainerInner>
      description: properties of a specified container.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String)
  id: getImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: getImmutabilityPolicy(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainersClientImpl.getImmutabilityPolicy(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicy(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicy*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets the existing immutability policy along with the corresponding ETag in response headers and body.
  syntax:
    content: public ImmutabilityPolicyInner getImmutabilityPolicy(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner
      description: the existing immutability policy along with the corresponding ETag in response headers and body.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainersClientImpl.getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets the existing immutability policy along with the corresponding ETag in response headers and body.
  syntax:
    content: public Mono<ImmutabilityPolicyInner> getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the existing immutability policy along with the corresponding ETag in response headers and body.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  nameWithType: BlobContainersClientImpl.getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets the existing immutability policy along with the corresponding ETag in response headers and body.
  syntax:
    content: public Mono<ImmutabilityPolicyInner> getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the existing immutability policy along with the corresponding ETag in response headers and body.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: getImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Context context)
  nameWithType: BlobContainersClientImpl.getImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets the existing immutability policy along with the corresponding ETag in response headers and body.
  syntax:
    content: public Response<ImmutabilityPolicyInner> getImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the existing immutability policy along with the corresponding ETag in response headers and body.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: getImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  nameWithType: BlobContainersClientImpl.getImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets the existing immutability policy along with the corresponding ETag in response headers and body.
  syntax:
    content: public Mono<BlobContainersGetImmutabilityPolicyResponse> getImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.BlobContainersGetImmutabilityPolicyResponse>
      description: the existing immutability policy along with the corresponding ETag in response headers and body.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String accountName, String containerName, Context context)
  nameWithType: BlobContainersClientImpl.getWithResponse(String resourceGroupName, String accountName, String containerName, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getWithResponse(String resourceGroupName, String accountName, String containerName, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets properties of a specified container.
  syntax:
    content: public Response<BlobContainerInner> getWithResponse(String resourceGroupName, String accountName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.BlobContainerInner>
      description: properties of a specified container.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainersClientImpl.getWithResponseAsync(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getWithResponseAsync(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets properties of a specified container.
  syntax:
    content: public Mono<Response<BlobContainerInner>> getWithResponseAsync(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.BlobContainerInner>>
      description: properties of a specified container.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lease(java.lang.String,java.lang.String,java.lang.String)
  id: lease(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: lease(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainersClientImpl.lease(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lease(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lease*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.
  syntax:
    content: public LeaseContainerResponseInner lease(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner
      description: lease Container response schema.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: leaseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: leaseAsync(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainersClientImpl.leaseAsync(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseAsync(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.
  syntax:
    content: public Mono<LeaseContainerResponseInner> leaseAsync(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner>
      description: lease Container response schema.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.LeaseContainerRequest)
  id: leaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.LeaseContainerRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: leaseAsync(String resourceGroupName, String accountName, String containerName, LeaseContainerRequest parameters)
  nameWithType: BlobContainersClientImpl.leaseAsync(String resourceGroupName, String accountName, String containerName, LeaseContainerRequest parameters)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseAsync(String resourceGroupName, String accountName, String containerName, LeaseContainerRequest parameters)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.
  syntax:
    content: public Mono<LeaseContainerResponseInner> leaseAsync(String resourceGroupName, String accountName, String containerName, LeaseContainerRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.LeaseContainerRequest
      description: Lease Container request schema.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner>
      description: lease Container response schema.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.LeaseContainerRequest,com.azure.core.util.Context)
  id: leaseWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.LeaseContainerRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: leaseWithResponse(String resourceGroupName, String accountName, String containerName, LeaseContainerRequest parameters, Context context)
  nameWithType: BlobContainersClientImpl.leaseWithResponse(String resourceGroupName, String accountName, String containerName, LeaseContainerRequest parameters, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseWithResponse(String resourceGroupName, String accountName, String containerName, LeaseContainerRequest parameters, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.
  syntax:
    content: public Response<LeaseContainerResponseInner> leaseWithResponse(String resourceGroupName, String accountName, String containerName, LeaseContainerRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.LeaseContainerRequest
      description: Lease Container request schema.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner>
      description: lease Container response schema.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.LeaseContainerRequest)
  id: leaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.LeaseContainerRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: leaseWithResponseAsync(String resourceGroupName, String accountName, String containerName, LeaseContainerRequest parameters)
  nameWithType: BlobContainersClientImpl.leaseWithResponseAsync(String resourceGroupName, String accountName, String containerName, LeaseContainerRequest parameters)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseWithResponseAsync(String resourceGroupName, String accountName, String containerName, LeaseContainerRequest parameters)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.
  syntax:
    content: public Mono<Response<LeaseContainerResponseInner>> leaseWithResponseAsync(String resourceGroupName, String accountName, String containerName, LeaseContainerRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.LeaseContainerRequest
      description: Lease Container request schema.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner>>
      description: lease Container response schema.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.list(java.lang.String,java.lang.String)
  id: list(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: list(String resourceGroupName, String accountName)
  nameWithType: BlobContainersClientImpl.list(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.list(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.
  syntax:
    content: public PagedIterable<ListContainerItemInner> list(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner>
      description: response schema.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.list(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListContainersInclude,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListContainersInclude,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: list(String resourceGroupName, String accountName, String maxpagesize, String filter, ListContainersInclude include, Context context)
  nameWithType: BlobContainersClientImpl.list(String resourceGroupName, String accountName, String maxpagesize, String filter, ListContainersInclude include, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.list(String resourceGroupName, String accountName, String maxpagesize, String filter, ListContainersInclude include, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.
  syntax:
    content: public PagedIterable<ListContainerItemInner> list(String resourceGroupName, String accountName, String maxpagesize, String filter, ListContainersInclude include, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: maxpagesize
      type: java.lang.String
      description: Optional. Specified maximum number of containers that can be included in the list.
    - id: filter
      type: java.lang.String
      description: Optional. When specified, only container names starting with the filter will be listed.
    - id: include
      type: com.azure.resourcemanager.storage.models.ListContainersInclude
      description: Optional, used to include the properties for soft deleted blob containers.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner>
      description: response schema.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.listAsync(java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: listAsync(String resourceGroupName, String accountName)
  nameWithType: BlobContainersClientImpl.listAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.listAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.
  syntax:
    content: public PagedFlux<ListContainerItemInner> listAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner>
      description: response schema.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.listAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListContainersInclude)
  id: listAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListContainersInclude)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: listAsync(String resourceGroupName, String accountName, String maxpagesize, String filter, ListContainersInclude include)
  nameWithType: BlobContainersClientImpl.listAsync(String resourceGroupName, String accountName, String maxpagesize, String filter, ListContainersInclude include)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.listAsync(String resourceGroupName, String accountName, String maxpagesize, String filter, ListContainersInclude include)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.
  syntax:
    content: public PagedFlux<ListContainerItemInner> listAsync(String resourceGroupName, String accountName, String maxpagesize, String filter, ListContainersInclude include)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: maxpagesize
      type: java.lang.String
      description: Optional. Specified maximum number of containers that can be included in the list.
    - id: filter
      type: java.lang.String
      description: Optional. When specified, only container names starting with the filter will be listed.
    - id: include
      type: com.azure.resourcemanager.storage.models.ListContainersInclude
      description: Optional, used to include the properties for soft deleted blob containers.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner>
      description: response schema.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: lockImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: lockImmutabilityPolicy(String resourceGroupName, String accountName, String containerName, String ifMatch)
  nameWithType: BlobContainersClientImpl.lockImmutabilityPolicy(String resourceGroupName, String accountName, String containerName, String ifMatch)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicy(String resourceGroupName, String accountName, String containerName, String ifMatch)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicy*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.
  syntax:
    content: public ImmutabilityPolicyInner lockImmutabilityPolicy(String resourceGroupName, String accountName, String containerName, String ifMatch)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: lockImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: lockImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  nameWithType: BlobContainersClientImpl.lockImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.
  syntax:
    content: public Mono<ImmutabilityPolicyInner> lockImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: lockImmutabilityPolicyWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: lockImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Context context)
  nameWithType: BlobContainersClientImpl.lockImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.
  syntax:
    content: public Response<ImmutabilityPolicyInner> lockImmutabilityPolicyWithResponse(String resourceGroupName, String accountName, String containerName, String ifMatch, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: lockImmutabilityPolicyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: lockImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  nameWithType: BlobContainersClientImpl.lockImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.
  syntax:
    content: public Mono<BlobContainersLockImmutabilityPolicyResponse> lockImmutabilityPolicyWithResponseAsync(String resourceGroupName, String accountName, String containerName, String ifMatch)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: ifMatch
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.BlobContainersLockImmutabilityPolicyResponse>
      description: the ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHold(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: setLegalHold(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: setLegalHold(String resourceGroupName, String accountName, String containerName, List<String> tags)
  nameWithType: BlobContainersClientImpl.setLegalHold(String resourceGroupName, String accountName, String containerName, List<String> tags)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHold(String resourceGroupName, String accountName, String containerName, List<String> tags)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHold*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.
  syntax:
    content: public LegalHoldInner setLegalHold(String resourceGroupName, String accountName, String containerName, List<String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: tags
      type: java.util.List<java.lang.String>
      description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.LegalHoldInner
      description: the LegalHold property of a blob container.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: setLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: setLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  nameWithType: BlobContainersClientImpl.setLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.
  syntax:
    content: public Mono<LegalHoldInner> setLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: tags
      type: java.util.List<java.lang.String>
      description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.LegalHoldInner>
      description: the LegalHold property of a blob container.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldWithResponse(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: setLegalHoldWithResponse(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: setLegalHoldWithResponse(String resourceGroupName, String accountName, String containerName, List<String> tags, Context context)
  nameWithType: BlobContainersClientImpl.setLegalHoldWithResponse(String resourceGroupName, String accountName, String containerName, List<String> tags, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldWithResponse(String resourceGroupName, String accountName, String containerName, List<String> tags, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.
  syntax:
    content: public Response<LegalHoldInner> setLegalHoldWithResponse(String resourceGroupName, String accountName, String containerName, List<String> tags, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: tags
      type: java.util.List<java.lang.String>
      description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.LegalHoldInner>
      description: the LegalHold property of a blob container.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: setLegalHoldWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: setLegalHoldWithResponseAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  nameWithType: BlobContainersClientImpl.setLegalHoldWithResponseAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldWithResponseAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.
  syntax:
    content: public Mono<Response<LegalHoldInner>> setLegalHoldWithResponseAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: tags
      type: java.util.List<java.lang.String>
      description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.LegalHoldInner>>
      description: the LegalHold property of a blob container.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  id: update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  nameWithType: BlobContainersClientImpl.update(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.update(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn't already exist.
  syntax:
    content: public BlobContainerInner update(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: blobContainer
      type: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
      description: Properties of the blob container, including Id, resource name, resource type, Etag.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
      description: properties of the blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  id: updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: updateAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  nameWithType: BlobContainersClientImpl.updateAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn't already exist.
  syntax:
    content: public Mono<BlobContainerInner> updateAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: blobContainer
      type: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
      description: Properties of the blob container, including Id, resource name, resource type, Etag.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.BlobContainerInner>
      description: properties of the blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner,com.azure.core.util.Context)
  id: updateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: updateWithResponse(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer, Context context)
  nameWithType: BlobContainersClientImpl.updateWithResponse(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateWithResponse(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer, Context context)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn't already exist.
  syntax:
    content: public Response<BlobContainerInner> updateWithResponse(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: blobContainer
      type: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
      description: Properties of the blob container, including Id, resource name, resource type, Etag.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.BlobContainerInner>
      description: properties of the blob container, including Id, resource name, resource type, Etag.
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.BlobContainerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  nameWithType: BlobContainersClientImpl.updateWithResponseAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateWithResponseAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
  overload: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn't already exist.
  syntax:
    content: public Mono<Response<BlobContainerInner>> updateWithResponseAsync(String resourceGroupName, String accountName, String containerName, BlobContainerInner blobContainer)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: blobContainer
      type: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
      description: Properties of the blob container, including Id, resource name, resource type, Etag.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.BlobContainerInner>>
      description: properties of the blob container, including Id, resource name, resource type, Etag.
references:
- uid: com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl
  name: StorageManagementClientImpl
  nameWithType: StorageManagementClientImpl
  fullName: com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.BlobContainersClientImpl*
  name: BlobContainersClientImpl
  nameWithType: BlobContainersClientImpl.BlobContainersClientImpl
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.BlobContainersClientImpl
  package: com.azure.resourcemanager.storage.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.storage.models.ListContainersInclude
  name: ListContainersInclude
  nameWithType: ListContainersInclude
  fullName: com.azure.resourcemanager.storage.models.ListContainersInclude
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner
    name: ListContainerItemInner
    fullName: com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.listAsync*
  name: listAsync
  nameWithType: BlobContainersClientImpl.listAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.listAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner
    name: ListContainerItemInner
    fullName: com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.list*
  name: list
  nameWithType: BlobContainersClientImpl.list
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.list
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
  name: BlobContainerInner
  nameWithType: BlobContainerInner
  fullName: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.BlobContainerInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
    name: BlobContainerInner
    fullName: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: BlobContainersClientImpl.createWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.BlobContainerInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
    name: BlobContainerInner
    fullName: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createAsync*
  name: createAsync
  nameWithType: BlobContainersClientImpl.createAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.create*
  name: create
  nameWithType: BlobContainersClientImpl.create
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.create
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.BlobContainerInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
    name: BlobContainerInner
    fullName: com.azure.resourcemanager.storage.fluent.models.BlobContainerInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createWithResponse*
  name: createWithResponse
  nameWithType: BlobContainersClientImpl.createWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: BlobContainersClientImpl.updateWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateAsync*
  name: updateAsync
  nameWithType: BlobContainersClientImpl.updateAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.update*
  name: update
  nameWithType: BlobContainersClientImpl.update
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.update
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateWithResponse*
  name: updateWithResponse
  nameWithType: BlobContainersClientImpl.updateWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.updateWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: BlobContainersClientImpl.getWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getAsync*
  name: getAsync
  nameWithType: BlobContainersClientImpl.getAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.get*
  name: get
  nameWithType: BlobContainersClientImpl.get
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.get
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getWithResponse*
  name: getWithResponse
  nameWithType: BlobContainersClientImpl.getWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: BlobContainersClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: BlobContainersClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.delete*
  name: delete
  nameWithType: BlobContainersClientImpl.delete
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.delete
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: BlobContainersClientImpl.deleteWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.LegalHoldInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.LegalHoldInner
    name: LegalHoldInner
    fullName: com.azure.resourcemanager.storage.fluent.models.LegalHoldInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldWithResponseAsync*
  name: setLegalHoldWithResponseAsync
  nameWithType: BlobContainersClientImpl.setLegalHoldWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.LegalHoldInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.LegalHoldInner
    name: LegalHoldInner
    fullName: com.azure.resourcemanager.storage.fluent.models.LegalHoldInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldAsync*
  name: setLegalHoldAsync
  nameWithType: BlobContainersClientImpl.setLegalHoldAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.models.LegalHoldInner
  name: LegalHoldInner
  nameWithType: LegalHoldInner
  fullName: com.azure.resourcemanager.storage.fluent.models.LegalHoldInner
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHold*
  name: setLegalHold
  nameWithType: BlobContainersClientImpl.setLegalHold
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHold
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.LegalHoldInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.LegalHoldInner
    name: LegalHoldInner
    fullName: com.azure.resourcemanager.storage.fluent.models.LegalHoldInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldWithResponse*
  name: setLegalHoldWithResponse
  nameWithType: BlobContainersClientImpl.setLegalHoldWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.setLegalHoldWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldWithResponseAsync*
  name: clearLegalHoldWithResponseAsync
  nameWithType: BlobContainersClientImpl.clearLegalHoldWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldAsync*
  name: clearLegalHoldAsync
  nameWithType: BlobContainersClientImpl.clearLegalHoldAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHold*
  name: clearLegalHold
  nameWithType: BlobContainersClientImpl.clearLegalHold
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHold
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldWithResponse*
  name: clearLegalHoldWithResponse
  nameWithType: BlobContainersClientImpl.clearLegalHoldWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.clearLegalHoldWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse
    name: BlobContainersCreateOrUpdateImmutabilityPolicyResponse
    fullName: com.azure.resourcemanager.storage.models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponseAsync*
  name: createOrUpdateImmutabilityPolicyWithResponseAsync
  nameWithType: BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner
    name: ImmutabilityPolicyInner
    fullName: com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync*
  name: createOrUpdateImmutabilityPolicyAsync
  nameWithType: BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner
  name: ImmutabilityPolicyInner
  nameWithType: ImmutabilityPolicyInner
  fullName: com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicy*
  name: createOrUpdateImmutabilityPolicy
  nameWithType: BlobContainersClientImpl.createOrUpdateImmutabilityPolicy
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicy
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner
    name: ImmutabilityPolicyInner
    fullName: com.azure.resourcemanager.storage.fluent.models.ImmutabilityPolicyInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponse*
  name: createOrUpdateImmutabilityPolicyWithResponse
  nameWithType: BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.createOrUpdateImmutabilityPolicyWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.BlobContainersGetImmutabilityPolicyResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.models.BlobContainersGetImmutabilityPolicyResponse
    name: BlobContainersGetImmutabilityPolicyResponse
    fullName: com.azure.resourcemanager.storage.models.BlobContainersGetImmutabilityPolicyResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyWithResponseAsync*
  name: getImmutabilityPolicyWithResponseAsync
  nameWithType: BlobContainersClientImpl.getImmutabilityPolicyWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyAsync*
  name: getImmutabilityPolicyAsync
  nameWithType: BlobContainersClientImpl.getImmutabilityPolicyAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicy*
  name: getImmutabilityPolicy
  nameWithType: BlobContainersClientImpl.getImmutabilityPolicy
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicy
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyWithResponse*
  name: getImmutabilityPolicyWithResponse
  nameWithType: BlobContainersClientImpl.getImmutabilityPolicyWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.getImmutabilityPolicyWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.BlobContainersDeleteImmutabilityPolicyResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.models.BlobContainersDeleteImmutabilityPolicyResponse
    name: BlobContainersDeleteImmutabilityPolicyResponse
    fullName: com.azure.resourcemanager.storage.models.BlobContainersDeleteImmutabilityPolicyResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyWithResponseAsync*
  name: deleteImmutabilityPolicyWithResponseAsync
  nameWithType: BlobContainersClientImpl.deleteImmutabilityPolicyWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyAsync*
  name: deleteImmutabilityPolicyAsync
  nameWithType: BlobContainersClientImpl.deleteImmutabilityPolicyAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicy*
  name: deleteImmutabilityPolicy
  nameWithType: BlobContainersClientImpl.deleteImmutabilityPolicy
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicy
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyWithResponse*
  name: deleteImmutabilityPolicyWithResponse
  nameWithType: BlobContainersClientImpl.deleteImmutabilityPolicyWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.deleteImmutabilityPolicyWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.BlobContainersLockImmutabilityPolicyResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.models.BlobContainersLockImmutabilityPolicyResponse
    name: BlobContainersLockImmutabilityPolicyResponse
    fullName: com.azure.resourcemanager.storage.models.BlobContainersLockImmutabilityPolicyResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyWithResponseAsync*
  name: lockImmutabilityPolicyWithResponseAsync
  nameWithType: BlobContainersClientImpl.lockImmutabilityPolicyWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyAsync*
  name: lockImmutabilityPolicyAsync
  nameWithType: BlobContainersClientImpl.lockImmutabilityPolicyAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicy*
  name: lockImmutabilityPolicy
  nameWithType: BlobContainersClientImpl.lockImmutabilityPolicy
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicy
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyWithResponse*
  name: lockImmutabilityPolicyWithResponse
  nameWithType: BlobContainersClientImpl.lockImmutabilityPolicyWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lockImmutabilityPolicyWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.BlobContainersExtendImmutabilityPolicyResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.models.BlobContainersExtendImmutabilityPolicyResponse
    name: BlobContainersExtendImmutabilityPolicyResponse
    fullName: com.azure.resourcemanager.storage.models.BlobContainersExtendImmutabilityPolicyResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyWithResponseAsync*
  name: extendImmutabilityPolicyWithResponseAsync
  nameWithType: BlobContainersClientImpl.extendImmutabilityPolicyWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyAsync*
  name: extendImmutabilityPolicyAsync
  nameWithType: BlobContainersClientImpl.extendImmutabilityPolicyAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicy*
  name: extendImmutabilityPolicy
  nameWithType: BlobContainersClientImpl.extendImmutabilityPolicy
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicy
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyWithResponse*
  name: extendImmutabilityPolicyWithResponse
  nameWithType: BlobContainersClientImpl.extendImmutabilityPolicyWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.extendImmutabilityPolicyWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.models.LeaseContainerRequest
  name: LeaseContainerRequest
  nameWithType: LeaseContainerRequest
  fullName: com.azure.resourcemanager.storage.models.LeaseContainerRequest
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner
    name: LeaseContainerResponseInner
    fullName: com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseWithResponseAsync*
  name: leaseWithResponseAsync
  nameWithType: BlobContainersClientImpl.leaseWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner
    name: LeaseContainerResponseInner
    fullName: com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseAsync*
  name: leaseAsync
  nameWithType: BlobContainersClientImpl.leaseAsync
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner
  name: LeaseContainerResponseInner
  nameWithType: LeaseContainerResponseInner
  fullName: com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lease*
  name: lease
  nameWithType: BlobContainersClientImpl.lease
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.lease
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner
    name: LeaseContainerResponseInner
    fullName: com.azure.resourcemanager.storage.fluent.models.LeaseContainerResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseWithResponse*
  name: leaseWithResponse
  nameWithType: BlobContainersClientImpl.leaseWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.BlobContainersClientImpl.leaseWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.BlobContainersClient
  name: BlobContainersClient
  nameWithType: BlobContainersClient
  fullName: com.azure.resourcemanager.storage.fluent.BlobContainersClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner
  name: ListContainerItemInner
  nameWithType: ListContainerItemInner
  fullName: com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.resourcemanager.storage.models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse
  name: BlobContainersCreateOrUpdateImmutabilityPolicyResponse
  nameWithType: BlobContainersCreateOrUpdateImmutabilityPolicyResponse
  fullName: com.azure.resourcemanager.storage.models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse
- uid: com.azure.resourcemanager.storage.models.BlobContainersGetImmutabilityPolicyResponse
  name: BlobContainersGetImmutabilityPolicyResponse
  nameWithType: BlobContainersGetImmutabilityPolicyResponse
  fullName: com.azure.resourcemanager.storage.models.BlobContainersGetImmutabilityPolicyResponse
- uid: com.azure.resourcemanager.storage.models.BlobContainersDeleteImmutabilityPolicyResponse
  name: BlobContainersDeleteImmutabilityPolicyResponse
  nameWithType: BlobContainersDeleteImmutabilityPolicyResponse
  fullName: com.azure.resourcemanager.storage.models.BlobContainersDeleteImmutabilityPolicyResponse
- uid: com.azure.resourcemanager.storage.models.BlobContainersLockImmutabilityPolicyResponse
  name: BlobContainersLockImmutabilityPolicyResponse
  nameWithType: BlobContainersLockImmutabilityPolicyResponse
  fullName: com.azure.resourcemanager.storage.models.BlobContainersLockImmutabilityPolicyResponse
- uid: com.azure.resourcemanager.storage.models.BlobContainersExtendImmutabilityPolicyResponse
  name: BlobContainersExtendImmutabilityPolicyResponse
  nameWithType: BlobContainersExtendImmutabilityPolicyResponse
  fullName: com.azure.resourcemanager.storage.models.BlobContainersExtendImmutabilityPolicyResponse
