### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  id: NodeUpdateUserParameter
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.NodeUpdateUserParameter()
  - com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.expiryTime()
  - com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.password()
  - com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.sshPublicKey()
  - com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withExpiryTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withPassword(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withSshPublicKey(java.lang.String)
  langs:
  - java
  name: NodeUpdateUserParameter
  nameWithType: NodeUpdateUserParameter
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: The set of changes to be made to a user Account on a Compute Node.
  syntax:
    content: public class NodeUpdateUserParameter
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.NodeUpdateUserParameter()
  id: NodeUpdateUserParameter()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  langs:
  - java
  name: NodeUpdateUserParameter()
  nameWithType: NodeUpdateUserParameter.NodeUpdateUserParameter()
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.NodeUpdateUserParameter()
  overload: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.NodeUpdateUserParameter*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public NodeUpdateUserParameter()
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.expiryTime()
  id: expiryTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  langs:
  - java
  name: expiryTime()
  nameWithType: NodeUpdateUserParameter.expiryTime()
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.expiryTime()
  overload: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.expiryTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if omitted, the default is 1 day from the current time. For Linux Compute Nodes, the expiryTime has a precision up to a day.
  syntax:
    content: public DateTime expiryTime()
    return:
      type: org.joda.time.DateTime
      description: the expiryTime value
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.password()
  id: password()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  langs:
  - java
  name: password()
  nameWithType: NodeUpdateUserParameter.password()
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.password()
  overload: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.password*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the password is required for Windows Compute Nodes (those created with 'cloudServiceConfiguration', or created with 'virtualMachineConfiguration' using a Windows Image reference). For Linux Compute Nodes, the password can optionally be specified along with the sshPublicKey property. If omitted, any existing password is removed.
  syntax:
    content: public String password()
    return:
      type: java.lang.String
      description: the password value
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.sshPublicKey()
  id: sshPublicKey()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  langs:
  - java
  name: sshPublicKey()
  nameWithType: NodeUpdateUserParameter.sshPublicKey()
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.sshPublicKey()
  overload: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.sshPublicKey*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the public key should be compatible with OpenSSH encoding and should be base 64 encoded. This property can be specified only for Linux Compute Nodes. If this is specified for a Windows Compute Node, then the Batch service rejects the request; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). If omitted, any existing SSH public key is removed.
  syntax:
    content: public String sshPublicKey()
    return:
      type: java.lang.String
      description: the sshPublicKey value
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withExpiryTime(org.joda.time.DateTime)
  id: withExpiryTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  langs:
  - java
  name: withExpiryTime(DateTime expiryTime)
  nameWithType: NodeUpdateUserParameter.withExpiryTime(DateTime expiryTime)
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withExpiryTime(DateTime expiryTime)
  overload: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withExpiryTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if omitted, the default is 1 day from the current time. For Linux Compute Nodes, the expiryTime has a precision up to a day.
  syntax:
    content: public NodeUpdateUserParameter withExpiryTime(DateTime expiryTime)
    parameters:
    - id: expiryTime
      type: org.joda.time.DateTime
      description: the expiryTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: the NodeUpdateUserParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withPassword(java.lang.String)
  id: withPassword(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  langs:
  - java
  name: withPassword(String password)
  nameWithType: NodeUpdateUserParameter.withPassword(String password)
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withPassword(String password)
  overload: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withPassword*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the password is required for Windows Compute Nodes (those created with 'cloudServiceConfiguration', or created with 'virtualMachineConfiguration' using a Windows Image reference). For Linux Compute Nodes, the password can optionally be specified along with the sshPublicKey property. If omitted, any existing password is removed.
  syntax:
    content: public NodeUpdateUserParameter withPassword(String password)
    parameters:
    - id: password
      type: java.lang.String
      description: the password value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: the NodeUpdateUserParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withSshPublicKey(java.lang.String)
  id: withSshPublicKey(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  langs:
  - java
  name: withSshPublicKey(String sshPublicKey)
  nameWithType: NodeUpdateUserParameter.withSshPublicKey(String sshPublicKey)
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withSshPublicKey(String sshPublicKey)
  overload: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withSshPublicKey*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the public key should be compatible with OpenSSH encoding and should be base 64 encoded. This property can be specified only for Linux Compute Nodes. If this is specified for a Windows Compute Node, then the Batch service rejects the request; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). If omitted, any existing SSH public key is removed.
  syntax:
    content: public NodeUpdateUserParameter withSshPublicKey(String sshPublicKey)
    parameters:
    - id: sshPublicKey
      type: java.lang.String
      description: the sshPublicKey value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: the NodeUpdateUserParameter object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.NodeUpdateUserParameter*
  name: NodeUpdateUserParameter
  nameWithType: NodeUpdateUserParameter.NodeUpdateUserParameter
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.NodeUpdateUserParameter
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.password*
  name: password
  nameWithType: NodeUpdateUserParameter.password
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.password
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withPassword*
  name: withPassword
  nameWithType: NodeUpdateUserParameter.withPassword
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withPassword
  package: com.microsoft.azure.batch.protocol.models
- uid: org.joda.time.DateTime
  spec.java:
  - uid: org.joda.time.DateTime
    name: DateTime
    fullName: org.joda.time.DateTime
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.expiryTime*
  name: expiryTime
  nameWithType: NodeUpdateUserParameter.expiryTime
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.expiryTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withExpiryTime*
  name: withExpiryTime
  nameWithType: NodeUpdateUserParameter.withExpiryTime
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withExpiryTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.sshPublicKey*
  name: sshPublicKey
  nameWithType: NodeUpdateUserParameter.sshPublicKey
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.sshPublicKey
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withSshPublicKey*
  name: withSshPublicKey
  nameWithType: NodeUpdateUserParameter.withSshPublicKey
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.withSshPublicKey
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
