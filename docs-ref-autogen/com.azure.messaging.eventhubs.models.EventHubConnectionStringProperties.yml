### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.models.EventHubConnectionStringProperties"
fullName: "com.azure.messaging.eventhubs.models.EventHubConnectionStringProperties"
name: "EventHubConnectionStringProperties"
nameWithType: "EventHubConnectionStringProperties"
summary: "A utility class that parses a connection string into sections. An Event Hubs connection string is a set of key-value pairs separated by semi-colon. A typical example is `\"Endpoint=sb://foo.EventHub.windows.net/;SharedAccessKeyName=someKeyName;SharedAccessKey=someKeyValue\"`.\n\nA connection may have the following sections:\n\n *  Endpoint, which is mandatory. The hostname part of it is the \"Fully qualified namespace\".\n *  SharedAccessKeyName and SharedAccessKey, optional, used to authenticate the access to the EventHub.\n *  SharedAccessSignature, optional, an alternative way to authenticate the access to the EventHub.\n *  EntityPath, optional, the queue name or the topic name under the service namespace\n\nWhen you have an Event Hubs connection string, you can use <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubClientBuilder#connectionString(String)\"></xref> to build a client. If you'd like to use a <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> to access an Event Hub, you can use this utility class to get the fully qualified namespace and entity path from the connection string and then use <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubClientBuilder#credential(String, String, TokenCredential)\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EventHubConnectionStringProperties"
methods:
- "com.azure.messaging.eventhubs.models.EventHubConnectionStringProperties.getEndpoint()"
- "com.azure.messaging.eventhubs.models.EventHubConnectionStringProperties.getEntityPath()"
- "com.azure.messaging.eventhubs.models.EventHubConnectionStringProperties.getFullyQualifiedNamespace()"
- "com.azure.messaging.eventhubs.models.EventHubConnectionStringProperties.getSharedAccessKey()"
- "com.azure.messaging.eventhubs.models.EventHubConnectionStringProperties.getSharedAccessKeyName()"
- "com.azure.messaging.eventhubs.models.EventHubConnectionStringProperties.parse(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.messaging.eventhubs.models"
artifact: com.azure:azure-messaging-eventhubs:5.10.3
