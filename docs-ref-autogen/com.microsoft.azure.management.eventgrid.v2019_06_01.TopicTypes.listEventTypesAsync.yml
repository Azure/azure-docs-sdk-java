### YamlMime:JavaMember
nameWithType: TopicTypes.listEventTypesAsync
type: method
members:
- fullName: com.microsoft.azure.management.eventgrid.v2019_06_01.TopicTypes.listEventTypesAsync(String topicTypeName)
  name: listEventTypesAsync(String topicTypeName)
  nameWithType: TopicTypes.listEventTypesAsync(String topicTypeName)
  parameters:
  - description: <p>Name of the topic type. </p>
    name: topicTypeName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.eventgrid.v2019_06_01.EventType?alt=com.microsoft.azure.management.eventgrid.v2019_06_01.EventType&text=EventType" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>List event types. List event types for a topic type.</p>

    <p></p>
  syntax: public Observable<EventType> listEventTypesAsync(String topicTypeName)
  uid: com.microsoft.azure.management.eventgrid.v2019_06_01.TopicTypes.listEventTypesAsync(String)
uid: com.microsoft.azure.management.eventgrid.v2019_06_01.TopicTypes.listEventTypesAsync*
fullName: com.microsoft.azure.management.eventgrid.v2019_06_01.TopicTypes.listEventTypesAsync(String topicTypeName)
name: listEventTypesAsync(String topicTypeName)
package: com.microsoft.azure.management.eventgrid.v2019_06_01
metadata: {}
