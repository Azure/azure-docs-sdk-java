### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  id: "ShareFileSasPermission"
  parent: "com.azure.storage.file.share.sas"
  children:
  - "com.azure.storage.file.share.sas.ShareFileSasPermission.ShareFileSasPermission()"
  - "com.azure.storage.file.share.sas.ShareFileSasPermission.hasCreatePermission()"
  - "com.azure.storage.file.share.sas.ShareFileSasPermission.hasDeletePermission()"
  - "com.azure.storage.file.share.sas.ShareFileSasPermission.hasReadPermission()"
  - "com.azure.storage.file.share.sas.ShareFileSasPermission.hasWritePermission()"
  - "com.azure.storage.file.share.sas.ShareFileSasPermission.parse(java.lang.String)"
  - "com.azure.storage.file.share.sas.ShareFileSasPermission.setCreatePermission(boolean)"
  - "com.azure.storage.file.share.sas.ShareFileSasPermission.setDeletePermission(boolean)"
  - "com.azure.storage.file.share.sas.ShareFileSasPermission.setReadPermission(boolean)"
  - "com.azure.storage.file.share.sas.ShareFileSasPermission.setWritePermission(boolean)"
  - "com.azure.storage.file.share.sas.ShareFileSasPermission.toString()"
  langs:
  - "java"
  name: "ShareFileSasPermission"
  nameWithType: "ShareFileSasPermission"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  type: "Class"
  package: "com.azure.storage.file.share.sas"
  summary: "Constructs a string representing the permissions granted by a Service SAS to a file. Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the values are set, this should be serialized with <xref uid=\"com.azure.storage.file.share.sas.ShareFileSasPermission.toString()\" data-throw-if-not-resolved=\"false\">toString()</xref> and set as the permissions field on <xref uid=\"com.azure.storage.file.share.sas.ShareServiceSasSignatureValues.setPermissions(com.azure.storage.file.share.sas.ShareFileSasPermission)\" data-throw-if-not-resolved=\"false\">ShareServiceSasSignatureValues</xref>.\n\nIt is possible to construct the permissions string without this class, but the order of the permissions is particular and this class guarantees correctness."
  syntax:
    content: "public final class ShareFileSasPermission"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.ShareFileSasPermission()"
  id: "ShareFileSasPermission()"
  parent: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  langs:
  - "java"
  name: "ShareFileSasPermission()"
  nameWithType: "ShareFileSasPermission.ShareFileSasPermission()"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.ShareFileSasPermission()"
  overload: "com.azure.storage.file.share.sas.ShareFileSasPermission.ShareFileSasPermission*"
  type: "Constructor"
  package: "com.azure.storage.file.share.sas"
  summary: "Initializes an `ShareFileSasPermission` object with all fields set to false."
  syntax:
    content: "public ShareFileSasPermission()"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasCreatePermission()"
  id: "hasCreatePermission()"
  parent: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  langs:
  - "java"
  name: "hasCreatePermission()"
  nameWithType: "ShareFileSasPermission.hasCreatePermission()"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasCreatePermission()"
  overload: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasCreatePermission*"
  type: "Method"
  package: "com.azure.storage.file.share.sas"
  summary: "Gets the create permission status."
  syntax:
    content: "public boolean hasCreatePermission()"
    return:
      type: "boolean"
      description: "<code>true</code> if SAS can create a new file or copy a file to a new file. <code>false</code>, otherwise."
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasDeletePermission()"
  id: "hasDeletePermission()"
  parent: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  langs:
  - "java"
  name: "hasDeletePermission()"
  nameWithType: "ShareFileSasPermission.hasDeletePermission()"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasDeletePermission()"
  overload: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasDeletePermission*"
  type: "Method"
  package: "com.azure.storage.file.share.sas"
  summary: "Gets the delete permission status."
  syntax:
    content: "public boolean hasDeletePermission()"
    return:
      type: "boolean"
      description: "<code>true</code> if SAS can delete a file. <code>false</code>, otherwise."
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasReadPermission()"
  id: "hasReadPermission()"
  parent: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  langs:
  - "java"
  name: "hasReadPermission()"
  nameWithType: "ShareFileSasPermission.hasReadPermission()"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasReadPermission()"
  overload: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasReadPermission*"
  type: "Method"
  package: "com.azure.storage.file.share.sas"
  summary: "Gets the read permission status."
  syntax:
    content: "public boolean hasReadPermission()"
    return:
      type: "boolean"
      description: "<code>true</code> if the SAS can read the content, properties, and metadata for a file. Can use the file as\n the source of a copy operation. <code>false</code>, otherwise."
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasWritePermission()"
  id: "hasWritePermission()"
  parent: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  langs:
  - "java"
  name: "hasWritePermission()"
  nameWithType: "ShareFileSasPermission.hasWritePermission()"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasWritePermission()"
  overload: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasWritePermission*"
  type: "Method"
  package: "com.azure.storage.file.share.sas"
  summary: "Gets the write permission status."
  syntax:
    content: "public boolean hasWritePermission()"
    return:
      type: "boolean"
      description: "<code>true</code> if SAS can write content, properties, or metadata to the file. Or, use the file as the\n destination of a copy operation. <code>false</code>, otherwise."
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.parse(java.lang.String)"
  id: "parse(java.lang.String)"
  parent: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  langs:
  - "java"
  name: "parse(String permString)"
  nameWithType: "ShareFileSasPermission.parse(String permString)"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.parse(String permString)"
  overload: "com.azure.storage.file.share.sas.ShareFileSasPermission.parse*"
  type: "Method"
  package: "com.azure.storage.file.share.sas"
  summary: "Creates an `ShareFileSasPermission` from the specified permissions string. This method will throw an `IllegalArgumentException` if it encounters a character that does not correspond to a valid permission."
  syntax:
    content: "public static ShareFileSasPermission parse(String permString)"
    parameters:
    - id: "permString"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the <code>ShareFileSasPermission</code>."
    return:
      type: "com.azure.storage.file.share.sas.ShareFileSasPermission"
      description: "A <code>ShareFileSasPermission</code> generated from the given <code>String</code>."
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.setCreatePermission(boolean)"
  id: "setCreatePermission(boolean)"
  parent: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  langs:
  - "java"
  name: "setCreatePermission(boolean hasCreatePermission)"
  nameWithType: "ShareFileSasPermission.setCreatePermission(boolean hasCreatePermission)"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.setCreatePermission(boolean hasCreatePermission)"
  overload: "com.azure.storage.file.share.sas.ShareFileSasPermission.setCreatePermission*"
  type: "Method"
  package: "com.azure.storage.file.share.sas"
  summary: "Sets the create permission status."
  syntax:
    content: "public ShareFileSasPermission setCreatePermission(boolean hasCreatePermission)"
    parameters:
    - id: "hasCreatePermission"
      type: "boolean"
      description: "<code>true</code> if SAS can create a new file or copy a file to a new file. <code>false</code>,\n otherwise."
    return:
      type: "com.azure.storage.file.share.sas.ShareFileSasPermission"
      description: "the updated ShareFileSasPermission object"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.setDeletePermission(boolean)"
  id: "setDeletePermission(boolean)"
  parent: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  langs:
  - "java"
  name: "setDeletePermission(boolean hasDeletePermission)"
  nameWithType: "ShareFileSasPermission.setDeletePermission(boolean hasDeletePermission)"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.setDeletePermission(boolean hasDeletePermission)"
  overload: "com.azure.storage.file.share.sas.ShareFileSasPermission.setDeletePermission*"
  type: "Method"
  package: "com.azure.storage.file.share.sas"
  summary: "Sets the delete permission status."
  syntax:
    content: "public ShareFileSasPermission setDeletePermission(boolean hasDeletePermission)"
    parameters:
    - id: "hasDeletePermission"
      type: "boolean"
      description: "<code>true</code> if SAS can delete a file. <code>false</code>, otherwise."
    return:
      type: "com.azure.storage.file.share.sas.ShareFileSasPermission"
      description: "the updated ShareFileSasPermission object"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.setReadPermission(boolean)"
  id: "setReadPermission(boolean)"
  parent: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  langs:
  - "java"
  name: "setReadPermission(boolean hasReadPermission)"
  nameWithType: "ShareFileSasPermission.setReadPermission(boolean hasReadPermission)"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.setReadPermission(boolean hasReadPermission)"
  overload: "com.azure.storage.file.share.sas.ShareFileSasPermission.setReadPermission*"
  type: "Method"
  package: "com.azure.storage.file.share.sas"
  summary: "Sets the read permission status."
  syntax:
    content: "public ShareFileSasPermission setReadPermission(boolean hasReadPermission)"
    parameters:
    - id: "hasReadPermission"
      type: "boolean"
      description: "<code>true</code> if the SAS can read the content, properties, and metadata for a file. Can\n use the file as the source of a copy operation. <code>false</code>, otherwise."
    return:
      type: "com.azure.storage.file.share.sas.ShareFileSasPermission"
      description: "the updated ShareFileSasPermission object"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.setWritePermission(boolean)"
  id: "setWritePermission(boolean)"
  parent: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  langs:
  - "java"
  name: "setWritePermission(boolean hasWritePermission)"
  nameWithType: "ShareFileSasPermission.setWritePermission(boolean hasWritePermission)"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.setWritePermission(boolean hasWritePermission)"
  overload: "com.azure.storage.file.share.sas.ShareFileSasPermission.setWritePermission*"
  type: "Method"
  package: "com.azure.storage.file.share.sas"
  summary: "Sets the write permission status."
  syntax:
    content: "public ShareFileSasPermission setWritePermission(boolean hasWritePermission)"
    parameters:
    - id: "hasWritePermission"
      type: "boolean"
      description: "<code>true</code> if SAS can write content, properties, or metadata to the file. Or, use the\n file as the destination of a copy operation. <code>false</code>, otherwise."
    return:
      type: "com.azure.storage.file.share.sas.ShareFileSasPermission"
      description: "the updated ShareFileSasPermission object"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.toString()"
  id: "toString()"
  parent: "com.azure.storage.file.share.sas.ShareFileSasPermission"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "ShareFileSasPermission.toString()"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.toString()"
  overload: "com.azure.storage.file.share.sas.ShareFileSasPermission.toString*"
  type: "Method"
  package: "com.azure.storage.file.share.sas"
  summary: "Converts the given permissions to a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>. Using this method will guarantee the permissions are in an order accepted by the service."
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the <code>ShareFileSasPermission</code>."
references:
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.ShareFileSasPermission*"
  name: "ShareFileSasPermission"
  nameWithType: "ShareFileSasPermission.ShareFileSasPermission"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.ShareFileSasPermission"
  package: "com.azure.storage.file.share.sas"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.parse*"
  name: "parse"
  nameWithType: "ShareFileSasPermission.parse"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.parse"
  package: "com.azure.storage.file.share.sas"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasReadPermission*"
  name: "hasReadPermission"
  nameWithType: "ShareFileSasPermission.hasReadPermission"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasReadPermission"
  package: "com.azure.storage.file.share.sas"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.setReadPermission*"
  name: "setReadPermission"
  nameWithType: "ShareFileSasPermission.setReadPermission"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.setReadPermission"
  package: "com.azure.storage.file.share.sas"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasCreatePermission*"
  name: "hasCreatePermission"
  nameWithType: "ShareFileSasPermission.hasCreatePermission"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasCreatePermission"
  package: "com.azure.storage.file.share.sas"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.setCreatePermission*"
  name: "setCreatePermission"
  nameWithType: "ShareFileSasPermission.setCreatePermission"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.setCreatePermission"
  package: "com.azure.storage.file.share.sas"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasWritePermission*"
  name: "hasWritePermission"
  nameWithType: "ShareFileSasPermission.hasWritePermission"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasWritePermission"
  package: "com.azure.storage.file.share.sas"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.setWritePermission*"
  name: "setWritePermission"
  nameWithType: "ShareFileSasPermission.setWritePermission"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.setWritePermission"
  package: "com.azure.storage.file.share.sas"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasDeletePermission*"
  name: "hasDeletePermission"
  nameWithType: "ShareFileSasPermission.hasDeletePermission"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasDeletePermission"
  package: "com.azure.storage.file.share.sas"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.setDeletePermission*"
  name: "setDeletePermission"
  nameWithType: "ShareFileSasPermission.setDeletePermission"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.setDeletePermission"
  package: "com.azure.storage.file.share.sas"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.toString*"
  name: "toString"
  nameWithType: "ShareFileSasPermission.toString"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.toString"
  package: "com.azure.storage.file.share.sas"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
