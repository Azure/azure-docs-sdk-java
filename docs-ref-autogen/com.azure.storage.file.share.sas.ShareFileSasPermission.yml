### YamlMime:JavaType
uid: "com.azure.storage.file.share.sas.ShareFileSasPermission"
fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission"
name: "ShareFileSasPermission"
nameWithType: "ShareFileSasPermission"
summary: "Constructs a string representing the permissions granted by a Service SAS to a file."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ShareFileSasPermission"
constructors:
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.ShareFileSasPermission()"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.ShareFileSasPermission()"
  name: "ShareFileSasPermission()"
  nameWithType: "ShareFileSasPermission.ShareFileSasPermission()"
  summary: "Initializes an `ShareFileSasPermission` object with all fields set to false."
  syntax: "public ShareFileSasPermission()"
  desc: "Initializes an `ShareFileSasPermission` object with all fields set to false."
methods:
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasCreatePermission()"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasCreatePermission()"
  name: "hasCreatePermission()"
  nameWithType: "ShareFileSasPermission.hasCreatePermission()"
  summary: "Gets the create permission status."
  syntax: "public boolean hasCreatePermission()"
  desc: "Gets the create permission status."
  returns:
    description: "<code>true</code> if SAS can create a new file or copy a file to a new file. <code>false</code>, otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasDeletePermission()"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasDeletePermission()"
  name: "hasDeletePermission()"
  nameWithType: "ShareFileSasPermission.hasDeletePermission()"
  summary: "Gets the delete permission status."
  syntax: "public boolean hasDeletePermission()"
  desc: "Gets the delete permission status."
  returns:
    description: "<code>true</code> if SAS can delete a file. <code>false</code>, otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasReadPermission()"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasReadPermission()"
  name: "hasReadPermission()"
  nameWithType: "ShareFileSasPermission.hasReadPermission()"
  summary: "Gets the read permission status."
  syntax: "public boolean hasReadPermission()"
  desc: "Gets the read permission status."
  returns:
    description: "<code>true</code> if the SAS can read the content, properties, and metadata for a file. Can use the file as\n the source of a copy operation. <code>false</code>, otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasWritePermission()"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.hasWritePermission()"
  name: "hasWritePermission()"
  nameWithType: "ShareFileSasPermission.hasWritePermission()"
  summary: "Gets the write permission status."
  syntax: "public boolean hasWritePermission()"
  desc: "Gets the write permission status."
  returns:
    description: "<code>true</code> if SAS can write content, properties, or metadata to the file. Or, use the file as the\n destination of a copy operation. <code>false</code>, otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.parse(java.lang.String)"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.parse(String permissionString)"
  name: "parse(String permissionString)"
  nameWithType: "ShareFileSasPermission.parse(String permissionString)"
  summary: "Creates an `ShareFileSasPermission` from the specified permissions string."
  modifiers:
  - "static"
  parameters:
  - description: "A <code>String</code> which represents the <code>ShareFileSasPermission</code>."
    name: "permissionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ShareFileSasPermission parse(String permissionString)"
  desc: "Creates an `ShareFileSasPermission` from the specified permissions string. This method will throw an `IllegalArgumentException` if it encounters a character that does not correspond to a valid permission."
  returns:
    description: "A <code>ShareFileSasPermission</code> generated from the given <code>String</code>."
    type: "<xref href=\"com.azure.storage.file.share.sas.ShareFileSasPermission?alt=com.azure.storage.file.share.sas.ShareFileSasPermission&text=ShareFileSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.setCreatePermission(boolean)"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.setCreatePermission(boolean hasCreatePermission)"
  name: "setCreatePermission(boolean hasCreatePermission)"
  nameWithType: "ShareFileSasPermission.setCreatePermission(boolean hasCreatePermission)"
  summary: "Sets the create permission status."
  parameters:
  - description: "<code>true</code> if SAS can create a new file or copy a file to a new file. <code>false</code>,\n otherwise."
    name: "hasCreatePermission"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ShareFileSasPermission setCreatePermission(boolean hasCreatePermission)"
  desc: "Sets the create permission status."
  returns:
    description: "the updated ShareFileSasPermission object"
    type: "<xref href=\"com.azure.storage.file.share.sas.ShareFileSasPermission?alt=com.azure.storage.file.share.sas.ShareFileSasPermission&text=ShareFileSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.setDeletePermission(boolean)"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.setDeletePermission(boolean hasDeletePermission)"
  name: "setDeletePermission(boolean hasDeletePermission)"
  nameWithType: "ShareFileSasPermission.setDeletePermission(boolean hasDeletePermission)"
  summary: "Sets the delete permission status."
  parameters:
  - description: "<code>true</code> if SAS can delete a file. <code>false</code>, otherwise."
    name: "hasDeletePermission"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ShareFileSasPermission setDeletePermission(boolean hasDeletePermission)"
  desc: "Sets the delete permission status."
  returns:
    description: "the updated ShareFileSasPermission object"
    type: "<xref href=\"com.azure.storage.file.share.sas.ShareFileSasPermission?alt=com.azure.storage.file.share.sas.ShareFileSasPermission&text=ShareFileSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.setReadPermission(boolean)"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.setReadPermission(boolean hasReadPermission)"
  name: "setReadPermission(boolean hasReadPermission)"
  nameWithType: "ShareFileSasPermission.setReadPermission(boolean hasReadPermission)"
  summary: "Sets the read permission status."
  parameters:
  - description: "<code>true</code> if the SAS can read the content, properties, and metadata for a file. Can\n use the file as the source of a copy operation. <code>false</code>, otherwise."
    name: "hasReadPermission"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ShareFileSasPermission setReadPermission(boolean hasReadPermission)"
  desc: "Sets the read permission status."
  returns:
    description: "the updated ShareFileSasPermission object"
    type: "<xref href=\"com.azure.storage.file.share.sas.ShareFileSasPermission?alt=com.azure.storage.file.share.sas.ShareFileSasPermission&text=ShareFileSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.setWritePermission(boolean)"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.setWritePermission(boolean hasWritePermission)"
  name: "setWritePermission(boolean hasWritePermission)"
  nameWithType: "ShareFileSasPermission.setWritePermission(boolean hasWritePermission)"
  summary: "Sets the write permission status."
  parameters:
  - description: "<code>true</code> if SAS can write content, properties, or metadata to the file. Or, use the\n file as the destination of a copy operation. <code>false</code>, otherwise."
    name: "hasWritePermission"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ShareFileSasPermission setWritePermission(boolean hasWritePermission)"
  desc: "Sets the write permission status."
  returns:
    description: "the updated ShareFileSasPermission object"
    type: "<xref href=\"com.azure.storage.file.share.sas.ShareFileSasPermission?alt=com.azure.storage.file.share.sas.ShareFileSasPermission&text=ShareFileSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.sas.ShareFileSasPermission.toString()"
  fullName: "com.azure.storage.file.share.sas.ShareFileSasPermission.toString()"
  name: "toString()"
  nameWithType: "ShareFileSasPermission.toString()"
  summary: "Converts the given permissions to a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>."
  overridden: "java.lang.Object.toString()"
  syntax: "public String toString()"
  desc: "Converts the given permissions to a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>. Using this method will guarantee the permissions are in an order accepted by the service."
  returns:
    description: "A <code>String</code> which represents the <code>ShareFileSasPermission</code>."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Constructs a string representing the permissions granted by a Service SAS to a file. Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the values are set, this should be serialized with <xref uid=\"com.azure.storage.file.share.sas.ShareFileSasPermission.toString()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"toString()\"></xref> and set as the permissions field on <xref uid=\"com.azure.storage.file.share.sas.ShareServiceSasSignatureValues.setPermissions(com.azure.storage.file.share.sas.ShareFileSasPermission)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareServiceSasSignatureValues\"></xref>.\n\nIt is possible to construct the permissions string without this class, but the order of the permissions is particular and this class guarantees correctness."
metadata: {}
package: "com.azure.storage.file.share.sas"
artifact: com.azure:azure-storage-file-share:12.15.0
