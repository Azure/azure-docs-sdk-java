### YamlMime:JavaType
uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues"
fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues"
name: "TableAccountSasSignatureValues"
nameWithType: "TableAccountSasSignatureValues"
summary: "Used to initialize parameters for a Shared Access Signature (SAS) for an Azure Storage account."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TableAccountSasSignatureValues"
constructors:
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.TableAccountSasSignatureValues(java.time.OffsetDateTime,com.azure.data.tables.sas.TableAccountSasPermission,com.azure.data.tables.sas.TableAccountSasService,com.azure.data.tables.sas.TableAccountSasResourceType)"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.TableAccountSasSignatureValues(OffsetDateTime expiryTime, TableAccountSasPermission permissions, TableAccountSasService services, TableAccountSasResourceType resourceTypes)"
  name: "TableAccountSasSignatureValues(OffsetDateTime expiryTime, TableAccountSasPermission permissions, TableAccountSasService services, TableAccountSasResourceType resourceTypes)"
  nameWithType: "TableAccountSasSignatureValues.TableAccountSasSignatureValues(OffsetDateTime expiryTime, TableAccountSasPermission permissions, TableAccountSasService services, TableAccountSasResourceType resourceTypes)"
  summary: "Initializes a new <xref uid=\"com.azure.data.tables.sas.TableAccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableAccountSasSignatureValues\"></xref> object."
  parameters:
  - description: "The time after which the SAS will no longer work."
    name: "expiryTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.data.tables.sas.TableAccountSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"account permissions\"></xref> allowed by the SAS."
    name: "permissions"
    type: "<xref href=\"com.azure.data.tables.sas.TableAccountSasPermission?alt=com.azure.data.tables.sas.TableAccountSasPermission&text=TableAccountSasPermission\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.data.tables.sas.TableAccountSasService\" data-throw-if-not-resolved=\"false\" data-raw-source=\"account services\"></xref> targeted by the SAS."
    name: "services"
    type: "<xref href=\"com.azure.data.tables.sas.TableAccountSasService?alt=com.azure.data.tables.sas.TableAccountSasService&text=TableAccountSasService\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.data.tables.sas.TableAccountSasResourceType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"account resource types\"></xref> targeted by the SAS."
    name: "resourceTypes"
    type: "<xref href=\"com.azure.data.tables.sas.TableAccountSasResourceType?alt=com.azure.data.tables.sas.TableAccountSasResourceType&text=TableAccountSasResourceType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableAccountSasSignatureValues(OffsetDateTime expiryTime, TableAccountSasPermission permissions, TableAccountSasService services, TableAccountSasResourceType resourceTypes)"
  desc: "Initializes a new <xref uid=\"com.azure.data.tables.sas.TableAccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableAccountSasSignatureValues\"></xref> object."
methods:
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getExpiryTime()"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getExpiryTime()"
  name: "getExpiryTime()"
  nameWithType: "TableAccountSasSignatureValues.getExpiryTime()"
  summary: "Get The time after which the SAS will no longer work."
  syntax: "public OffsetDateTime getExpiryTime()"
  desc: "Get The time after which the SAS will no longer work."
  returns:
    description: "The time after which the SAS will no longer work."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getPermissions()"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getPermissions()"
  name: "getPermissions()"
  nameWithType: "TableAccountSasSignatureValues.getPermissions()"
  summary: "Gets the operations the SAS user may perform."
  syntax: "public String getPermissions()"
  desc: "Gets the operations the SAS user may perform. Please refer to <xref uid=\"com.azure.data.tables.sas.TableAccountSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableAccountSasPermission\"></xref> to help determine which permissions are allowed."
  returns:
    description: "The operations the SAS user may perform."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getProtocol()"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getProtocol()"
  name: "getProtocol()"
  nameWithType: "TableAccountSasSignatureValues.getProtocol()"
  summary: "Get the <xref uid=\"com.azure.data.tables.sas.TableSasProtocol\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasProtocol\"></xref> which determines the HTTP protocol that will be used."
  syntax: "public TableSasProtocol getProtocol()"
  desc: "Get the <xref uid=\"com.azure.data.tables.sas.TableSasProtocol\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasProtocol\"></xref> which determines the HTTP protocol that will be used."
  returns:
    description: "The <xref uid=\"com.azure.data.tables.sas.TableSasProtocol\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasProtocol\"></xref>."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasProtocol?alt=com.azure.data.tables.sas.TableSasProtocol&text=TableSasProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getResourceTypes()"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getResourceTypes()"
  name: "getResourceTypes()"
  nameWithType: "TableAccountSasSignatureValues.getResourceTypes()"
  summary: "Get the resource types accessible with this SAS."
  syntax: "public String getResourceTypes()"
  desc: "Get the resource types accessible with this SAS. Please refer to <xref uid=\"com.azure.data.tables.sas.TableAccountSasResourceType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableAccountSasResourceType\"></xref> to help determine the resource types that are accessible."
  returns:
    description: "The resource types accessible with this SAS."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getSasIpRange()"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getSasIpRange()"
  name: "getSasIpRange()"
  nameWithType: "TableAccountSasSignatureValues.getSasIpRange()"
  summary: "Get the <xref uid=\"com.azure.data.tables.sas.TableSasIpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasIpRange\"></xref> which determines the IP ranges that are allowed to use the SAS."
  syntax: "public TableSasIpRange getSasIpRange()"
  desc: "Get the <xref uid=\"com.azure.data.tables.sas.TableSasIpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasIpRange\"></xref> which determines the IP ranges that are allowed to use the SAS."
  returns:
    description: "The <xref uid=\"com.azure.data.tables.sas.TableSasIpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasIpRange\"></xref>."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasIpRange?alt=com.azure.data.tables.sas.TableSasIpRange&text=TableSasIpRange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getServices()"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getServices()"
  name: "getServices()"
  nameWithType: "TableAccountSasSignatureValues.getServices()"
  summary: "Get the services accessible with this SAS."
  syntax: "public String getServices()"
  desc: "Get the services accessible with this SAS. Please refer to <xref uid=\"com.azure.data.tables.sas.TableAccountSasService\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableAccountSasService\"></xref> to help determine which services are accessible."
  returns:
    description: "The services accessible with this SAS."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getStartTime()"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getStartTime()"
  name: "getStartTime()"
  nameWithType: "TableAccountSasSignatureValues.getStartTime()"
  summary: "Get when the SAS will take effect."
  syntax: "public OffsetDateTime getStartTime()"
  desc: "Get when the SAS will take effect."
  returns:
    description: "When the SAS will take effect."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getVersion()"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.getVersion()"
  name: "getVersion()"
  nameWithType: "TableAccountSasSignatureValues.getVersion()"
  summary: "Get the service version that is targeted, if `null` or empty the latest service version targeted by the library will be used."
  syntax: "public String getVersion()"
  desc: "Get the service version that is targeted, if `null` or empty the latest service version targeted by the library will be used."
  returns:
    description: "The service version that is targeted."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.setProtocol(com.azure.data.tables.sas.TableSasProtocol)"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.setProtocol(TableSasProtocol protocol)"
  name: "setProtocol(TableSasProtocol protocol)"
  nameWithType: "TableAccountSasSignatureValues.setProtocol(TableSasProtocol protocol)"
  summary: "Sets the <xref uid=\"com.azure.data.tables.sas.TableSasProtocol\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasProtocol\"></xref> which determines the HTTP protocol that will be used."
  parameters:
  - description: "The <xref uid=\"com.azure.data.tables.sas.TableSasProtocol\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasProtocol\"></xref> to set."
    name: "protocol"
    type: "<xref href=\"com.azure.data.tables.sas.TableSasProtocol?alt=com.azure.data.tables.sas.TableSasProtocol&text=TableSasProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableAccountSasSignatureValues setProtocol(TableSasProtocol protocol)"
  desc: "Sets the <xref uid=\"com.azure.data.tables.sas.TableSasProtocol\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasProtocol\"></xref> which determines the HTTP protocol that will be used."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableAccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableAccountSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableAccountSasSignatureValues?alt=com.azure.data.tables.sas.TableAccountSasSignatureValues&text=TableAccountSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.setSasIpRange(com.azure.data.tables.sas.TableSasIpRange)"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.setSasIpRange(TableSasIpRange sasIpRange)"
  name: "setSasIpRange(TableSasIpRange sasIpRange)"
  nameWithType: "TableAccountSasSignatureValues.setSasIpRange(TableSasIpRange sasIpRange)"
  summary: "Sets the <xref uid=\"com.azure.data.tables.sas.TableSasIpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasIpRange\"></xref> which determines the IP ranges that are allowed to use the SAS."
  parameters:
  - description: "The <xref uid=\"com.azure.data.tables.sas.TableSasIpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"allowed IP range\"></xref> to set."
    name: "sasIpRange"
    type: "<xref href=\"com.azure.data.tables.sas.TableSasIpRange?alt=com.azure.data.tables.sas.TableSasIpRange&text=TableSasIpRange\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableAccountSasSignatureValues setSasIpRange(TableSasIpRange sasIpRange)"
  desc: "Sets the <xref uid=\"com.azure.data.tables.sas.TableSasIpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasIpRange\"></xref> which determines the IP ranges that are allowed to use the SAS."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableAccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableAccountSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableAccountSasSignatureValues?alt=com.azure.data.tables.sas.TableAccountSasSignatureValues&text=TableAccountSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.setStartTime(java.time.OffsetDateTime)"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.setStartTime(OffsetDateTime startTime)"
  name: "setStartTime(OffsetDateTime startTime)"
  nameWithType: "TableAccountSasSignatureValues.setStartTime(OffsetDateTime startTime)"
  summary: "Sets when the SAS will take effect."
  parameters:
  - description: "The start time to set."
    name: "startTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableAccountSasSignatureValues setStartTime(OffsetDateTime startTime)"
  desc: "Sets when the SAS will take effect."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableAccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableAccountSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableAccountSasSignatureValues?alt=com.azure.data.tables.sas.TableAccountSasSignatureValues&text=TableAccountSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableAccountSasSignatureValues.setVersion(java.lang.String)"
  fullName: "com.azure.data.tables.sas.TableAccountSasSignatureValues.setVersion(String version)"
  name: "setVersion(String version)"
  nameWithType: "TableAccountSasSignatureValues.setVersion(String version)"
  summary: "Sets the service version that is targeted."
  parameters:
  - description: "The target version to set."
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableAccountSasSignatureValues setVersion(String version)"
  desc: "Sets the service version that is targeted. Leave this `null` or empty to target the version used by the library."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableAccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableAccountSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableAccountSasSignatureValues?alt=com.azure.data.tables.sas.TableAccountSasSignatureValues&text=TableAccountSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Used to initialize parameters for a Shared Access Signature (SAS) for an Azure Storage account. Once all the values here are set, use the `generateAccountSas()` method on the desired service client to obtain a representation of the SAS which can then be applied to a new client using the `sasToken(String)` method on the desired client builder."
metadata: {}
package: "com.azure.data.tables.sas"
artifact: com.azure:azure-data-tables:12.3.3
