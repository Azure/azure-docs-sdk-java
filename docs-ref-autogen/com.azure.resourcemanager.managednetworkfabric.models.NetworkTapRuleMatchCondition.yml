### YamlMime:JavaType
uid: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition"
fullName: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition"
name: "NetworkTapRuleMatchCondition"
nameWithType: "NetworkTapRuleMatchCondition"
summary: "Defines the match condition that is supported to filter the traffic."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions?alt=com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions&text=CommonMatchConditions\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.ipCondition()?alt=com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.ipCondition&text=ipCondition\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.protocolTypes()?alt=com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.protocolTypes&text=protocolTypes\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.validate()?alt=com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.vlanMatchCondition()?alt=com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.vlanMatchCondition&text=vlanMatchCondition\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.withIpCondition(com.azure.resourcemanager.managednetworkfabric.models.IpMatchCondition)?alt=com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.withIpCondition&text=withIpCondition\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.withProtocolTypes(java.util.List<java.lang.String>)?alt=com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.withProtocolTypes&text=withProtocolTypes\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.withVlanMatchCondition(com.azure.resourcemanager.managednetworkfabric.models.VlanMatchCondition)?alt=com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.withVlanMatchCondition&text=withVlanMatchCondition\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **NetworkTapRuleMatchCondition**</br> extends <xref href=\"com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions?alt=com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions&text=CommonMatchConditions\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.NetworkTapRuleMatchCondition()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.NetworkTapRuleMatchCondition()"
  name: "NetworkTapRuleMatchCondition()"
  nameWithType: "NetworkTapRuleMatchCondition.NetworkTapRuleMatchCondition()"
  summary: "Creates an instance of Network<wbr>Tap<wbr>Rule<wbr>Match<wbr>Condition class."
  syntax: "public NetworkTapRuleMatchCondition()"
  desc: "Creates an instance of NetworkTapRuleMatchCondition class."
methods:
- uid: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.encapsulationType()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.encapsulationType()"
  name: "encapsulationType()"
  nameWithType: "NetworkTapRuleMatchCondition.encapsulationType()"
  summary: "Get the encapsulation<wbr>Type property: Encapsulation Type."
  syntax: "public EncapsulationType encapsulationType()"
  desc: "Get the encapsulationType property: Encapsulation Type."
  returns:
    description: "the encapsulationType value."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.EncapsulationType?alt=com.azure.resourcemanager.managednetworkfabric.models.EncapsulationType&text=EncapsulationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.portCondition()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.portCondition()"
  name: "portCondition()"
  nameWithType: "NetworkTapRuleMatchCondition.portCondition()"
  summary: "Get the port<wbr>Condition property: Defines the port condition that needs to be matched."
  syntax: "public PortCondition portCondition()"
  desc: "Get the portCondition property: Defines the port condition that needs to be matched."
  returns:
    description: "the portCondition value."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.PortCondition?alt=com.azure.resourcemanager.managednetworkfabric.models.PortCondition&text=PortCondition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.validate()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.validate()"
  name: "validate()"
  nameWithType: "NetworkTapRuleMatchCondition.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.withEncapsulationType(com.azure.resourcemanager.managednetworkfabric.models.EncapsulationType)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.withEncapsulationType(EncapsulationType encapsulationType)"
  name: "withEncapsulationType(EncapsulationType encapsulationType)"
  nameWithType: "NetworkTapRuleMatchCondition.withEncapsulationType(EncapsulationType encapsulationType)"
  summary: "Set the encapsulation<wbr>Type property: Encapsulation Type."
  parameters:
  - description: "the encapsulationType value to set."
    name: "encapsulationType"
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.EncapsulationType?alt=com.azure.resourcemanager.managednetworkfabric.models.EncapsulationType&text=EncapsulationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkTapRuleMatchCondition withEncapsulationType(EncapsulationType encapsulationType)"
  desc: "Set the encapsulationType property: Encapsulation Type."
  returns:
    description: "the NetworkTapRuleMatchCondition object itself."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition?alt=com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition&text=NetworkTapRuleMatchCondition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.withIpCondition(com.azure.resourcemanager.managednetworkfabric.models.IpMatchCondition)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.withIpCondition(IpMatchCondition ipCondition)"
  name: "withIpCondition(IpMatchCondition ipCondition)"
  nameWithType: "NetworkTapRuleMatchCondition.withIpCondition(IpMatchCondition ipCondition)"
  summary: "Set the ip<wbr>Condition property: IP condition that needs to be matched."
  overridden: "com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.withIpCondition(com.azure.resourcemanager.managednetworkfabric.models.IpMatchCondition)"
  parameters:
  - name: "ipCondition"
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.IpMatchCondition?alt=com.azure.resourcemanager.managednetworkfabric.models.IpMatchCondition&text=IpMatchCondition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkTapRuleMatchCondition withIpCondition(IpMatchCondition ipCondition)"
  desc: "Set the ipCondition property: IP condition that needs to be matched."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition?alt=com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition&text=NetworkTapRuleMatchCondition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.withPortCondition(com.azure.resourcemanager.managednetworkfabric.models.PortCondition)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.withPortCondition(PortCondition portCondition)"
  name: "withPortCondition(PortCondition portCondition)"
  nameWithType: "NetworkTapRuleMatchCondition.withPortCondition(PortCondition portCondition)"
  summary: "Set the port<wbr>Condition property: Defines the port condition that needs to be matched."
  parameters:
  - description: "the portCondition value to set."
    name: "portCondition"
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.PortCondition?alt=com.azure.resourcemanager.managednetworkfabric.models.PortCondition&text=PortCondition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkTapRuleMatchCondition withPortCondition(PortCondition portCondition)"
  desc: "Set the portCondition property: Defines the port condition that needs to be matched."
  returns:
    description: "the NetworkTapRuleMatchCondition object itself."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition?alt=com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition&text=NetworkTapRuleMatchCondition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.withProtocolTypes(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.withProtocolTypes(List<String> protocolTypes)"
  name: "withProtocolTypes(List<String> protocolTypes)"
  nameWithType: "NetworkTapRuleMatchCondition.withProtocolTypes(List<String> protocolTypes)"
  summary: "Set the protocol<wbr>Types property: List of the protocols that need to be matched."
  overridden: "com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.withProtocolTypes(java.util.List<java.lang.String>)"
  parameters:
  - name: "protocolTypes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public NetworkTapRuleMatchCondition withProtocolTypes(List<String> protocolTypes)"
  desc: "Set the protocolTypes property: List of the protocols that need to be matched."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition?alt=com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition&text=NetworkTapRuleMatchCondition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.withVlanMatchCondition(com.azure.resourcemanager.managednetworkfabric.models.VlanMatchCondition)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition.withVlanMatchCondition(VlanMatchCondition vlanMatchCondition)"
  name: "withVlanMatchCondition(VlanMatchCondition vlanMatchCondition)"
  nameWithType: "NetworkTapRuleMatchCondition.withVlanMatchCondition(VlanMatchCondition vlanMatchCondition)"
  summary: "Set the vlan<wbr>Match<wbr>Condition property: Vlan match condition that needs to be matched."
  overridden: "com.azure.resourcemanager.managednetworkfabric.models.CommonMatchConditions.withVlanMatchCondition(com.azure.resourcemanager.managednetworkfabric.models.VlanMatchCondition)"
  parameters:
  - name: "vlanMatchCondition"
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.VlanMatchCondition?alt=com.azure.resourcemanager.managednetworkfabric.models.VlanMatchCondition&text=VlanMatchCondition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkTapRuleMatchCondition withVlanMatchCondition(VlanMatchCondition vlanMatchCondition)"
  desc: "Set the vlanMatchCondition property: Vlan match condition that needs to be matched."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition?alt=com.azure.resourcemanager.managednetworkfabric.models.NetworkTapRuleMatchCondition&text=NetworkTapRuleMatchCondition\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines the match condition that is supported to filter the traffic."
metadata: {}
package: "com.azure.resourcemanager.managednetworkfabric.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-managednetworkfabric:1.0.0
