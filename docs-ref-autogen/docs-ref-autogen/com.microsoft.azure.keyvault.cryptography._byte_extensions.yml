### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.keyvault.cryptography._byte_extensions
  id: _byte_extensions
  parent: com.microsoft.azure.keyvault.cryptography
  children:
  - com.microsoft.azure.keyvault.cryptography._byte_extensions.or(byte [],byte [])
  - com.microsoft.azure.keyvault.cryptography._byte_extensions.or(byte [],byte [],int)
  - com.microsoft.azure.keyvault.cryptography._byte_extensions.sequenceEqualConstantTime(byte [],byte [])
  - com.microsoft.azure.keyvault.cryptography._byte_extensions.xor(byte [],byte [])
  - com.microsoft.azure.keyvault.cryptography._byte_extensions.zero(byte [])
  href: com.microsoft.azure.keyvault.cryptography._byte_extensions.yml
  langs:
  - java
  name: ByteExtensions
  nameWithType: ByteExtensions
  fullName: com.microsoft.azure.keyvault.cryptography.ByteExtensions
  type: Class
  source:
    remote: &o0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/ByteExtensions.java
      branch: bb950b2a0255c017040501de0c19e4849361ca1d
      repo: https://github.com/Azure/azure-keyvault-java
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/ByteExtensions.java
    startLine: 10
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public class ByteExtensions
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.keyvault.cryptography._byte_extensions.or(byte [],byte [])
  id: or(byte [],byte [])
  parent: com.microsoft.azure.keyvault.cryptography._byte_extensions
  href: com.microsoft.azure.keyvault.cryptography._byte_extensions.yml
  langs:
  - java
  name: or(byte[] self, byte[] other)
  nameWithType: ByteExtensions.or(byte[] self, byte[] other)
  fullName: static byte [] com.microsoft.azure.keyvault.cryptography.ByteExtensions.or(byte[] self, byte[] other)
  overload: com.microsoft.azure.keyvault.cryptography._byte_extensions.or*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/ByteExtensions.java
    startLine: 12
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public static byte [] or(byte[] self, byte[] other)
    parameters:
    - id: self
      type: ccd9418d
    - id: other
      type: ccd9418d
    return:
      type: ccd9418d
- uid: com.microsoft.azure.keyvault.cryptography._byte_extensions.or(byte [],byte [],int)
  id: or(byte [],byte [],int)
  parent: com.microsoft.azure.keyvault.cryptography._byte_extensions
  href: com.microsoft.azure.keyvault.cryptography._byte_extensions.yml
  langs:
  - java
  name: or(byte[] self, byte[] other, int offset)
  nameWithType: ByteExtensions.or(byte[] self, byte[] other, int offset)
  fullName: static byte [] com.microsoft.azure.keyvault.cryptography.ByteExtensions.or(byte[] self, byte[] other, int offset)
  overload: com.microsoft.azure.keyvault.cryptography._byte_extensions.or*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/ByteExtensions.java
    startLine: 17
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public static byte [] or(byte[] self, byte[] other, int offset)
    parameters:
    - id: self
      type: ccd9418d
    - id: other
      type: ccd9418d
    - id: offset
      type: f75371fa
    return:
      type: ccd9418d
- uid: com.microsoft.azure.keyvault.cryptography._byte_extensions.sequenceEqualConstantTime(byte [],byte [])
  id: sequenceEqualConstantTime(byte [],byte [])
  parent: com.microsoft.azure.keyvault.cryptography._byte_extensions
  href: com.microsoft.azure.keyvault.cryptography._byte_extensions.yml
  langs:
  - java
  name: sequenceEqualConstantTime(byte[] self, byte[] other)
  nameWithType: ByteExtensions.sequenceEqualConstantTime(byte[] self, byte[] other)
  fullName: static boolean com.microsoft.azure.keyvault.cryptography.ByteExtensions.sequenceEqualConstantTime(byte[] self, byte[] other)
  overload: com.microsoft.azure.keyvault.cryptography._byte_extensions.sequenceEqualConstantTime*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/ByteExtensions.java
    startLine: 80
  package: com.microsoft.azure.keyvault.cryptography
  summary: >-
    <p>Compares two byte arrays in constant time.</p>

    <p></p>
  syntax:
    content: public static boolean sequenceEqualConstantTime(byte[] self, byte[] other)
    parameters:
    - id: self
      type: ccd9418d
      description: <p>The first byte array to compare </p>
    - id: other
      type: ccd9418d
      description: <p>The second byte array to compare </p>
    return:
      type: 4fc6e284
      description: <p>True if the two byte arrays are equal. </p>
- uid: com.microsoft.azure.keyvault.cryptography._byte_extensions.xor(byte [],byte [])
  id: xor(byte [],byte [])
  parent: com.microsoft.azure.keyvault.cryptography._byte_extensions
  href: com.microsoft.azure.keyvault.cryptography._byte_extensions.yml
  langs:
  - java
  name: xor(byte[] self, byte[] other)
  nameWithType: ByteExtensions.xor(byte[] self, byte[] other)
  fullName: static byte [] com.microsoft.azure.keyvault.cryptography.ByteExtensions.xor(byte[] self, byte[] other)
  overload: com.microsoft.azure.keyvault.cryptography._byte_extensions.xor*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/ByteExtensions.java
    startLine: 38
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public static byte [] xor(byte[] self, byte[] other)
    parameters:
    - id: self
      type: ccd9418d
    - id: other
      type: ccd9418d
    return:
      type: ccd9418d
- uid: com.microsoft.azure.keyvault.cryptography._byte_extensions.zero(byte [])
  id: zero(byte [])
  parent: com.microsoft.azure.keyvault.cryptography._byte_extensions
  href: com.microsoft.azure.keyvault.cryptography._byte_extensions.yml
  langs:
  - java
  name: zero(byte[] self)
  nameWithType: ByteExtensions.zero(byte[] self)
  fullName: static void com.microsoft.azure.keyvault.cryptography.ByteExtensions.zero(byte[] self)
  overload: com.microsoft.azure.keyvault.cryptography._byte_extensions.zero*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/ByteExtensions.java
    startLine: 63
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public static void zero(byte[] self)
    parameters:
    - id: self
      type: ccd9418d
references:
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.keyvault.cryptography._byte_extensions.or*
  name: or
  nameWithType: ByteExtensions.or
  fullName: static byte [] com.microsoft.azure.keyvault.cryptography.ByteExtensions.or
  package: com.microsoft.azure.keyvault.cryptography
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.keyvault.cryptography._byte_extensions.xor*
  name: xor
  nameWithType: ByteExtensions.xor
  fullName: static byte [] com.microsoft.azure.keyvault.cryptography.ByteExtensions.xor
  package: com.microsoft.azure.keyvault.cryptography
- uid: com.microsoft.azure.keyvault.cryptography._byte_extensions.zero*
  name: zero
  nameWithType: ByteExtensions.zero
  fullName: static void com.microsoft.azure.keyvault.cryptography.ByteExtensions.zero
  package: com.microsoft.azure.keyvault.cryptography
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.keyvault.cryptography._byte_extensions.sequenceEqualConstantTime*
  name: sequenceEqualConstantTime
  nameWithType: ByteExtensions.sequenceEqualConstantTime
  fullName: static boolean com.microsoft.azure.keyvault.cryptography.ByteExtensions.sequenceEqualConstantTime
  package: com.microsoft.azure.keyvault.cryptography
