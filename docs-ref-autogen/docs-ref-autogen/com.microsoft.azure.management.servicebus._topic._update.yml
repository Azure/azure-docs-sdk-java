### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.servicebus._topic._update
  id: _update
  parent: com.microsoft.azure.management.servicebus
  href: com.microsoft.azure.management.servicebus._topic._update.yml
  langs:
  - java
  name: Topic.Update
  nameWithType: Topic.Update
  fullName: com.microsoft.azure.management.servicebus.Topic.Update
  type: Interface
  source:
    remote:
      path: azure-mgmt-servicebus/src/main/java/com/microsoft/azure/management/servicebus/Topic.java
      branch: 880e2022bf46b71f481107effb7c878a9ae065dd
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-servicebus/src/main/java/com/microsoft/azure/management/servicebus/Topic.java
    startLine: 304
  package: com.microsoft.azure.management.servicebus
  summary: <p>The template for a Service Bus topic update operation, containing all the settings that can be modified. </p>
  syntax:
    content: public interface Update extends Appliable<Topic>,Topic.UpdateStages.WithSize,Topic.UpdateStages.WithDeleteOnIdle,Topic.UpdateStages.WithDefaultMessageTTL,Topic.UpdateStages.WithExpressMessage,Topic.UpdateStages.WithMessageBatching,Topic.UpdateStages.WithDuplicateMessageDetection,Topic.UpdateStages.WithSubscription,Topic.UpdateStages.WithAuthorizationRule
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model._appliable.apply()
  - com.microsoft.azure.management.resources.fluentcore.model._appliable.applyAsync()
  - com.microsoft.azure.management.resources.fluentcore.model._appliable.applyAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_default_message_t_t_l.withDefaultMessageTTL(Period)
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_delete_on_idle.withDeleteOnIdleDurationInMinutes(int)
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_duplicate_message_detection.withDuplicateMessageDetectionHistoryDuration(Period)
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_express_message.withExpressMessage()
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_message_batching.withMessageBatching()
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.withNewListenRule(String)
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.withNewManageRule(String)
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.withNewSendRule(String)
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_subscription.withNewSubscription(String)
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.withoutAuthorizationRule(String)
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_duplicate_message_detection.withoutDuplicateMessageDetection()
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_express_message.withoutExpressMessage()
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_message_batching.withoutMessageBatching()
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_subscription.withoutSubscription(String)
  - com.microsoft.azure.management.servicebus._topic._update_stages._with_size.withSizeInMB(long)
references:
- uid: com.microsoft.azure.management.resources.fluentcore.model._appliable.apply()
  parent: com.microsoft.azure.management.resources.fluentcore.model._appliable
  href: com.microsoft.azure.management.resources.fluentcore.model._appliable.yml
  name: apply()
  nameWithType: Appliable<T>.apply()
  fullName: T com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.apply()
  type: Method
  summary: >-
    <p>Execute the update request.</p>

    <p></p>
  syntax:
    content: public T apply()
    return:
      type: 8ce1ecb9
      description: <p>the updated resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._appliable.applyAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model._appliable
  href: com.microsoft.azure.management.resources.fluentcore.model._appliable.yml
  name: applyAsync()
  nameWithType: Appliable<T>.applyAsync()
  fullName: Observable<T> com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.applyAsync()
  type: Method
  summary: >-
    <p>Execute the update request asynchronously.</p>

    <p></p>
  syntax:
    content: public Observable<T> applyAsync()
    return:
      type: c4094ba1
      description: <p>the handle to the REST call </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._appliable.applyAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model._appliable
  href: com.microsoft.azure.management.resources.fluentcore.model._appliable.yml
  name: applyAsync(final ServiceCallback<T> callback)
  nameWithType: Appliable<T>.applyAsync(final ServiceCallback<T> callback)
  fullName: ServiceFuture<T> com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.applyAsync(final ServiceCallback<T> callback)
  type: Method
  summary: >-
    <p>Execute the update request asynchronously.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<T> applyAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback for success and failure </p>
    return:
      type: c0371a4e
      description: <p>the handle to the REST call </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model._indexable
  href: com.microsoft.azure.management.resources.fluentcore.model._indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: String com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_default_message_t_t_l.withDefaultMessageTTL(Period)
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_default_message_t_t_l
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_default_message_t_t_l.yml
  name: withDefaultMessageTTL(Period ttl)
  nameWithType: Topic.UpdateStages.WithDefaultMessageTTL.withDefaultMessageTTL(Period ttl)
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithDefaultMessageTTL.withDefaultMessageTTL(Period ttl)
  type: Method
  summary: >-
    <p>Specifies the duration after which the message expires.</p>

    <p></p>
  syntax:
    content: public Update withDefaultMessageTTL(Period ttl)
    parameters:
    - id: ttl
      type: "6e600119"
      description: <p>time to live duration </p>
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>the next stage of topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_delete_on_idle.withDeleteOnIdleDurationInMinutes(int)
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_delete_on_idle
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_delete_on_idle.yml
  name: withDeleteOnIdleDurationInMinutes(int durationInMinutes)
  nameWithType: Topic.UpdateStages.WithDeleteOnIdle.withDeleteOnIdleDurationInMinutes(int durationInMinutes)
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithDeleteOnIdle.withDeleteOnIdleDurationInMinutes(int durationInMinutes)
  type: Method
  summary: >-
    <p>The idle interval after which the topic is automatically deleted.</p>

    <p></p>
  syntax:
    content: public Update withDeleteOnIdleDurationInMinutes(int durationInMinutes)
    parameters:
    - id: durationInMinutes
      type: f75371fa
      description: <p>idle duration in minutes </p>
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>the next stage of topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_duplicate_message_detection.withDuplicateMessageDetectionHistoryDuration(Period)
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_duplicate_message_detection
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_duplicate_message_detection.yml
  name: withDuplicateMessageDetectionHistoryDuration(Period duration)
  nameWithType: Topic.UpdateStages.WithDuplicateMessageDetection.withDuplicateMessageDetectionHistoryDuration(Period duration)
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithDuplicateMessageDetection.withDuplicateMessageDetectionHistoryDuration(Period duration)
  type: Method
  summary: >-
    <p>Specifies the duration of the duplicate message detection history.</p>

    <p></p>
  syntax:
    content: public Update withDuplicateMessageDetectionHistoryDuration(Period duration)
    parameters:
    - id: duration
      type: "6e600119"
      description: <p>duration of the history </p>
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>the next stage of topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_express_message.withExpressMessage()
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_express_message
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_express_message.yml
  name: withExpressMessage()
  nameWithType: Topic.UpdateStages.WithExpressMessage.withExpressMessage()
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithExpressMessage.withExpressMessage()
  type: Method
  summary: >-
    <p>Specifies that messages in this topic are express hence they can be cached in memory for some time before storing it in messaging store.</p>

    <p></p>
  syntax:
    content: public Update withExpressMessage()
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>the next stage of topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_message_batching.withMessageBatching()
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_message_batching
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_message_batching.yml
  name: withMessageBatching()
  nameWithType: Topic.UpdateStages.WithMessageBatching.withMessageBatching()
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithMessageBatching.withMessageBatching()
  type: Method
  summary: >-
    <p>Specifies that service bus can batch multiple message when it write messages to or delete messages from it's internal store. This increases the throughput.</p>

    <p></p>
  syntax:
    content: public Update withMessageBatching()
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>the next stage of topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.withNewListenRule(String)
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.yml
  name: withNewListenRule(String name)
  nameWithType: Topic.UpdateStages.WithAuthorizationRule.withNewListenRule(String name)
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithAuthorizationRule.withNewListenRule(String name)
  type: Method
  summary: >-
    <p>Creates a listen authorization rule for the topic.</p>

    <p></p>
  syntax:
    content: public Update withNewListenRule(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>rule name </p>
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>next stage of the topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.withNewManageRule(String)
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.yml
  name: withNewManageRule(String name)
  nameWithType: Topic.UpdateStages.WithAuthorizationRule.withNewManageRule(String name)
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithAuthorizationRule.withNewManageRule(String name)
  type: Method
  summary: >-
    <p>Creates a manage authorization rule for the topic.</p>

    <p></p>
  syntax:
    content: public Update withNewManageRule(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>rule name </p>
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>next stage of the topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.withNewSendRule(String)
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.yml
  name: withNewSendRule(String name)
  nameWithType: Topic.UpdateStages.WithAuthorizationRule.withNewSendRule(String name)
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithAuthorizationRule.withNewSendRule(String name)
  type: Method
  summary: >-
    <p>Creates a send authorization rule for the topic.</p>

    <p></p>
  syntax:
    content: public Update withNewSendRule(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>rule name </p>
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>next stage of the topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_subscription.withNewSubscription(String)
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_subscription
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_subscription.yml
  name: withNewSubscription(String name)
  nameWithType: Topic.UpdateStages.WithSubscription.withNewSubscription(String name)
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithSubscription.withNewSubscription(String name)
  type: Method
  summary: >-
    <p>Creates a subscription entity for the Service Bus topic.</p>

    <p></p>
  syntax:
    content: public Update withNewSubscription(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>queue name </p>
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>next stage of the Service Bus topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.withoutAuthorizationRule(String)
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.yml
  name: withoutAuthorizationRule(String name)
  nameWithType: Topic.UpdateStages.WithAuthorizationRule.withoutAuthorizationRule(String name)
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithAuthorizationRule.withoutAuthorizationRule(String name)
  type: Method
  summary: >-
    <p>Removes an authorization rule for the topic.</p>

    <p></p>
  syntax:
    content: public Update withoutAuthorizationRule(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>rule name </p>
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>next stage of the topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_duplicate_message_detection.withoutDuplicateMessageDetection()
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_duplicate_message_detection
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_duplicate_message_detection.yml
  name: withoutDuplicateMessageDetection()
  nameWithType: Topic.UpdateStages.WithDuplicateMessageDetection.withoutDuplicateMessageDetection()
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithDuplicateMessageDetection.withoutDuplicateMessageDetection()
  type: Method
  summary: >-
    <p>Specifies that duplicate message detection needs to be disabled.</p>

    <p></p>
  syntax:
    content: public Update withoutDuplicateMessageDetection()
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>the next stage of topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_express_message.withoutExpressMessage()
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_express_message
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_express_message.yml
  name: withoutExpressMessage()
  nameWithType: Topic.UpdateStages.WithExpressMessage.withoutExpressMessage()
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithExpressMessage.withoutExpressMessage()
  type: Method
  summary: >-
    <p>Specifies that messages in this topic are not express hence they should be cached in memory.</p>

    <p></p>
  syntax:
    content: public Update withoutExpressMessage()
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>the next stage of topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_message_batching.withoutMessageBatching()
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_message_batching
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_message_batching.yml
  name: withoutMessageBatching()
  nameWithType: Topic.UpdateStages.WithMessageBatching.withoutMessageBatching()
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithMessageBatching.withoutMessageBatching()
  type: Method
  summary: >-
    <p>Specifies that batching of messages should be disabled when Service Bus write messages to or delete messages from it's internal store.</p>

    <p></p>
  syntax:
    content: public Update withoutMessageBatching()
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>the next stage of topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_subscription.withoutSubscription(String)
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_subscription
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_subscription.yml
  name: withoutSubscription(String name)
  nameWithType: Topic.UpdateStages.WithSubscription.withoutSubscription(String name)
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithSubscription.withoutSubscription(String name)
  type: Method
  summary: >-
    <p>Removes a subscription entity associated with the Service Bus topic.</p>

    <p></p>
  syntax:
    content: public Update withoutSubscription(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>subscription name </p>
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>next stage of the Service Bus topic update </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_size.withSizeInMB(long)
  parent: com.microsoft.azure.management.servicebus._topic._update_stages._with_size
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_size.yml
  name: withSizeInMB(long sizeInMB)
  nameWithType: Topic.UpdateStages.WithSize.withSizeInMB(long sizeInMB)
  fullName: Update com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithSize.withSizeInMB(long sizeInMB)
  type: Method
  summary: >-
    <p>Specifies the maximum size of memory allocated for the topic.</p>

    <p></p>
  syntax:
    content: public Update withSizeInMB(long sizeInMB)
    parameters:
    - id: sizeInMB
      type: 0364520f
      description: <p>size in MB </p>
    return:
      type: com.microsoft.azure.management.servicebus._topic._update
      description: <p>the next stage of topic update </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._appliable
  parent: com.microsoft.azure.management.resources.fluentcore.model
  href: com.microsoft.azure.management.resources.fluentcore.model._appliable.yml
  name: Appliable<T>
  nameWithType: Appliable<T>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>
  type: Interface
  summary: >-
    <p>The base interface for all template interfaces that support update operations.</p>

    <p></p>
  syntax:
    content: public interface Appliable<T> extends Indexable
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the resource returned from the update. </p>
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_size
  parent: com.microsoft.azure.management.servicebus
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_size.yml
  name: Topic.UpdateStages.WithSize
  nameWithType: Topic.UpdateStages.WithSize
  fullName: com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithSize
  type: Interface
  summary: <p>The stage of the topic definition allowing to specify size. </p>
  syntax:
    content: public interface WithSize
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_delete_on_idle
  parent: com.microsoft.azure.management.servicebus
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_delete_on_idle.yml
  name: Topic.UpdateStages.WithDeleteOnIdle
  nameWithType: Topic.UpdateStages.WithDeleteOnIdle
  fullName: com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithDeleteOnIdle
  type: Interface
  summary: <p>The stage of the topic definition allowing to define auto delete behaviour. </p>
  syntax:
    content: public interface WithDeleteOnIdle
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_default_message_t_t_l
  parent: com.microsoft.azure.management.servicebus
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_default_message_t_t_l.yml
  name: Topic.UpdateStages.WithDefaultMessageTTL
  nameWithType: Topic.UpdateStages.WithDefaultMessageTTL
  fullName: com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithDefaultMessageTTL
  type: Interface
  summary: <p>The stage of the topic definition allowing to define default TTL for messages. </p>
  syntax:
    content: public interface WithDefaultMessageTTL
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_express_message
  parent: com.microsoft.azure.management.servicebus
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_express_message.yml
  name: Topic.UpdateStages.WithExpressMessage
  nameWithType: Topic.UpdateStages.WithExpressMessage
  fullName: com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithExpressMessage
  type: Interface
  summary: <p>The stage of the topic definition allowing to mark it as either holding regular or express messages. </p>
  syntax:
    content: public interface WithExpressMessage
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_message_batching
  parent: com.microsoft.azure.management.servicebus
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_message_batching.yml
  name: Topic.UpdateStages.WithMessageBatching
  nameWithType: Topic.UpdateStages.WithMessageBatching
  fullName: com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithMessageBatching
  type: Interface
  summary: <p>The stage of the topic definition allowing configure message batching behaviour. </p>
  syntax:
    content: public interface WithMessageBatching
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_duplicate_message_detection
  parent: com.microsoft.azure.management.servicebus
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_duplicate_message_detection.yml
  name: Topic.UpdateStages.WithDuplicateMessageDetection
  nameWithType: Topic.UpdateStages.WithDuplicateMessageDetection
  fullName: com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithDuplicateMessageDetection
  type: Interface
  summary: <p>The stage of the topic definition allowing to specify duration of the duplicate message detection history. </p>
  syntax:
    content: public interface WithDuplicateMessageDetection
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_subscription
  parent: com.microsoft.azure.management.servicebus
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_subscription.yml
  name: Topic.UpdateStages.WithSubscription
  nameWithType: Topic.UpdateStages.WithSubscription
  fullName: com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithSubscription
  type: Interface
  summary: <p>The stage of the Service Bus namespace update allowing to manage subscriptions for the topic. </p>
  syntax:
    content: public interface WithSubscription
- uid: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule
  parent: com.microsoft.azure.management.servicebus
  href: com.microsoft.azure.management.servicebus._topic._update_stages._with_authorization_rule.yml
  name: Topic.UpdateStages.WithAuthorizationRule
  nameWithType: Topic.UpdateStages.WithAuthorizationRule
  fullName: com.microsoft.azure.management.servicebus.Topic.UpdateStages.WithAuthorizationRule
  type: Interface
  summary: <p>The stage of the topic definition allowing to add an authorization rule for accessing the topic. </p>
  syntax:
    content: public interface WithAuthorizationRule
