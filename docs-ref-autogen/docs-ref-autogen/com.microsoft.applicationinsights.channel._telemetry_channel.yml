### YamlMime:ManagedReference
items:
- uid: com.microsoft.applicationinsights.channel._telemetry_channel
  id: _telemetry_channel
  parent: com.microsoft.applicationinsights.channel
  children:
  - com.microsoft.applicationinsights.channel._telemetry_channel.flush()
  - com.microsoft.applicationinsights.channel._telemetry_channel.isDeveloperMode()
  - com.microsoft.applicationinsights.channel._telemetry_channel.send(Telemetry)
  - com.microsoft.applicationinsights.channel._telemetry_channel.setDeveloperMode(boolean)
  - com.microsoft.applicationinsights.channel._telemetry_channel.setSampler(TelemetrySampler)
  - com.microsoft.applicationinsights.channel._telemetry_channel.stop(long,TimeUnit)
  href: com.microsoft.applicationinsights.channel._telemetry_channel.yml
  langs:
  - java
  name: TelemetryChannel
  nameWithType: TelemetryChannel
  fullName: com.microsoft.applicationinsights.channel.TelemetryChannel
  type: Interface
  source:
    remote: &o0
      path: core/src/main/java/com/microsoft/applicationinsights/channel/TelemetryChannel.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: core/src/main/java/com/microsoft/applicationinsights/channel/TelemetryChannel.java
    startLine: 30
  package: com.microsoft.applicationinsights.channel
  summary: <p>Represents a communication channel for sending telemetry to Azure Application Insights. </p>
  syntax:
    content: public interface TelemetryChannel
- uid: com.microsoft.applicationinsights.channel._telemetry_channel.flush()
  id: flush()
  parent: com.microsoft.applicationinsights.channel._telemetry_channel
  href: com.microsoft.applicationinsights.channel._telemetry_channel.yml
  langs:
  - java
  name: flush()
  nameWithType: TelemetryChannel.flush()
  fullName: void com.microsoft.applicationinsights.channel.TelemetryChannel.flush()
  overload: com.microsoft.applicationinsights.channel._telemetry_channel.flush*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/channel/TelemetryChannel.java
    startLine: 60
  package: com.microsoft.applicationinsights.channel
  summary: <p>Flushes the data that the channel might have internally. </p>
  syntax:
    content: public void flush()
- uid: com.microsoft.applicationinsights.channel._telemetry_channel.isDeveloperMode()
  id: isDeveloperMode()
  parent: com.microsoft.applicationinsights.channel._telemetry_channel
  href: com.microsoft.applicationinsights.channel._telemetry_channel.yml
  langs:
  - java
  name: isDeveloperMode()
  nameWithType: TelemetryChannel.isDeveloperMode()
  fullName: boolean com.microsoft.applicationinsights.channel.TelemetryChannel.isDeveloperMode()
  overload: com.microsoft.applicationinsights.channel._telemetry_channel.isDeveloperMode*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/channel/TelemetryChannel.java
    startLine: 36
  package: com.microsoft.applicationinsights.channel
  summary: <p>Gets value indicating whether this channel is in developer mode. </p>
  syntax:
    content: public boolean isDeveloperMode()
    return:
      type: 4fc6e284
      description: <p>The developer mode. </p>
- uid: com.microsoft.applicationinsights.channel._telemetry_channel.send(Telemetry)
  id: send(Telemetry)
  parent: com.microsoft.applicationinsights.channel._telemetry_channel
  href: com.microsoft.applicationinsights.channel._telemetry_channel.yml
  langs:
  - java
  name: send(Telemetry item)
  nameWithType: TelemetryChannel.send(Telemetry item)
  fullName: void com.microsoft.applicationinsights.channel.TelemetryChannel.send(Telemetry item)
  overload: com.microsoft.applicationinsights.channel._telemetry_channel.send*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/channel/TelemetryChannel.java
    startLine: 48
  package: com.microsoft.applicationinsights.channel
  summary: <p>Sends a Telemetry instance through the channel. </p>
  syntax:
    content: public void send(Telemetry item)
    parameters:
    - id: item
      type: com.microsoft.applicationinsights.telemetry._telemetry
      description: <p>The Telemetry item to send. </p>
- uid: com.microsoft.applicationinsights.channel._telemetry_channel.setDeveloperMode(boolean)
  id: setDeveloperMode(boolean)
  parent: com.microsoft.applicationinsights.channel._telemetry_channel
  href: com.microsoft.applicationinsights.channel._telemetry_channel.yml
  langs:
  - java
  name: setDeveloperMode(boolean value)
  nameWithType: TelemetryChannel.setDeveloperMode(boolean value)
  fullName: void com.microsoft.applicationinsights.channel.TelemetryChannel.setDeveloperMode(boolean value)
  overload: com.microsoft.applicationinsights.channel._telemetry_channel.setDeveloperMode*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/channel/TelemetryChannel.java
    startLine: 42
  package: com.microsoft.applicationinsights.channel
  summary: <p>Sets value indicating whether this channel is in developer mode. </p>
  syntax:
    content: public void setDeveloperMode(boolean value)
    parameters:
    - id: value
      type: 4fc6e284
      description: <p>True for applying develoer mode </p>
- uid: com.microsoft.applicationinsights.channel._telemetry_channel.setSampler(TelemetrySampler)
  id: setSampler(TelemetrySampler)
  parent: com.microsoft.applicationinsights.channel._telemetry_channel
  href: com.microsoft.applicationinsights.channel._telemetry_channel.yml
  langs:
  - java
  name: setSampler(TelemetrySampler telemetrySampler)
  nameWithType: TelemetryChannel.setSampler(TelemetrySampler telemetrySampler)
  fullName: void com.microsoft.applicationinsights.channel.TelemetryChannel.setSampler(TelemetrySampler telemetrySampler)
  overload: com.microsoft.applicationinsights.channel._telemetry_channel.setSampler*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/channel/TelemetryChannel.java
    startLine: 66
  package: com.microsoft.applicationinsights.channel
  summary: <p>Sets an optional Sampler that can sample out telemetries </p>
  syntax:
    content: public void setSampler(TelemetrySampler telemetrySampler)
    parameters:
    - id: telemetrySampler
      type: com.microsoft.applicationinsights.channel._telemetry_sampler
      description: <p>- The sampler </p>
- uid: com.microsoft.applicationinsights.channel._telemetry_channel.stop(long,TimeUnit)
  id: stop(long,TimeUnit)
  parent: com.microsoft.applicationinsights.channel._telemetry_channel
  href: com.microsoft.applicationinsights.channel._telemetry_channel.yml
  langs:
  - java
  name: stop(long timeout, TimeUnit timeUnit)
  nameWithType: TelemetryChannel.stop(long timeout, TimeUnit timeUnit)
  fullName: void com.microsoft.applicationinsights.channel.TelemetryChannel.stop(long timeout, TimeUnit timeUnit)
  overload: com.microsoft.applicationinsights.channel._telemetry_channel.stop*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/channel/TelemetryChannel.java
    startLine: 55
  package: com.microsoft.applicationinsights.channel
  summary: <p>Stops on going work </p>
  syntax:
    content: public void stop(long timeout, TimeUnit timeUnit)
    parameters:
    - id: timeout
      type: 0364520f
      description: <p>Time to try and stop </p>
    - id: timeUnit
      type: 02b8628b
      description: <p>The units of the 'timeout' parameter </p>
references:
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.applicationinsights.channel._telemetry_channel.isDeveloperMode*
  name: isDeveloperMode
  nameWithType: TelemetryChannel.isDeveloperMode
  fullName: boolean com.microsoft.applicationinsights.channel.TelemetryChannel.isDeveloperMode
  package: com.microsoft.applicationinsights.channel
- uid: com.microsoft.applicationinsights.channel._telemetry_channel.setDeveloperMode*
  name: setDeveloperMode
  nameWithType: TelemetryChannel.setDeveloperMode
  fullName: void com.microsoft.applicationinsights.channel.TelemetryChannel.setDeveloperMode
  package: com.microsoft.applicationinsights.channel
- uid: com.microsoft.applicationinsights.channel._telemetry_channel.send*
  name: send
  nameWithType: TelemetryChannel.send
  fullName: void com.microsoft.applicationinsights.channel.TelemetryChannel.send
  package: com.microsoft.applicationinsights.channel
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: 02b8628b
  spec.java:
  - name: TimeUnit
    fullName: TimeUnit
- uid: com.microsoft.applicationinsights.channel._telemetry_channel.stop*
  name: stop
  nameWithType: TelemetryChannel.stop
  fullName: void com.microsoft.applicationinsights.channel.TelemetryChannel.stop
  package: com.microsoft.applicationinsights.channel
- uid: com.microsoft.applicationinsights.channel._telemetry_channel.flush*
  name: flush
  nameWithType: TelemetryChannel.flush
  fullName: void com.microsoft.applicationinsights.channel.TelemetryChannel.flush
  package: com.microsoft.applicationinsights.channel
- uid: com.microsoft.applicationinsights.channel._telemetry_channel.setSampler*
  name: setSampler
  nameWithType: TelemetryChannel.setSampler
  fullName: void com.microsoft.applicationinsights.channel.TelemetryChannel.setSampler
  package: com.microsoft.applicationinsights.channel
- uid: com.microsoft.applicationinsights.telemetry._telemetry
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: Telemetry
  nameWithType: Telemetry
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry
  type: Interface
  summary: <p>The base telemetry type interface for application insights. </p>
  syntax:
    content: public interface Telemetry extends JsonSerializable
- uid: com.microsoft.applicationinsights.channel._telemetry_sampler
  parent: com.microsoft.applicationinsights.channel
  href: com.microsoft.applicationinsights.channel._telemetry_sampler.yml
  name: TelemetrySampler
  nameWithType: TelemetrySampler
  fullName: com.microsoft.applicationinsights.channel.TelemetrySampler
  type: Interface
  summary: <p>Telemetry Sampler might be used to reduce the amount of telemetries that are sent by the SDK. Sampling reduces the volume of telemetry without affecting your statistics. It keeps together related data points so that you can navigate between them when diagnosing a problem. In the portal, the total counts are multiplied to compensate for the sampling. </p>
  syntax:
    content: public interface TelemetrySampler
