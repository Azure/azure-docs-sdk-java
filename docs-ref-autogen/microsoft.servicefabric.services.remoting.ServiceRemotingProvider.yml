### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingProvider
  id: ServiceRemotingProvider
  parent: microsoft.servicefabric.services.remoting
  children:
  - microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
  - microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingListener(ServiceContext,Service)
  - microsoft.servicefabric.services.remoting.ServiceRemotingProvider.getProvider(Class<?>)
  href: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.yml
  langs:
  - java
  name: ServiceRemotingProvider
  nameWithType: ServiceRemotingProvider
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingProvider
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingProvider.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingProvider.java
    startLine: 14
  package: microsoft.servicefabric.services.remoting
  summary: "<p>This is a base type that sets the default service remoting provider to use for remoting the service interfaces. </p>"
  syntax: &o1
    content: public class ServiceRemotingProvider
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
  id: createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.yml
  langs:
  - java
  name: createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  nameWithType: ServiceRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingClientFactory*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingProvider.java
    startLine: 19
  package: microsoft.servicefabric.services.remoting
  syntax:
    content: public abstract ServiceRemotingClientFactory createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
    parameters:
    - id: callbackClient
      type: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
    return:
      type: 13c86962microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingListener(ServiceContext,Service)
  id: createServiceRemotingListener(ServiceContext,Service)
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.yml
  langs:
  - java
  name: createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  nameWithType: ServiceRemotingProvider.createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingListener*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingProvider.java
    startLine: 15
  package: microsoft.servicefabric.services.remoting
  syntax:
    content: public abstract ServiceRemotingListener createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
    parameters:
    - id: serviceContext
      type: system.fabric.ServiceContext
    - id: serviceImplementation
      type: microsoft.servicefabric.services.remoting.Service
    return:
      type: 13c86962microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.getProvider(Class<?>)
  id: getProvider(Class<?>)
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.yml
  langs:
  - java
  name: getProvider(Class<?> type)
  nameWithType: ServiceRemotingProvider.getProvider(Class<?> type)
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.getProvider(Class<?> type)
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.getProvider*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingProvider.java
    startLine: 22
  package: microsoft.servicefabric.services.remoting
  syntax:
    content: public static ServiceRemotingProvider getProvider(Class<?> type)
    parameters:
    - id: type
      type: a19781f8
    return:
      type: microsoft.servicefabric.services.remoting.ServiceRemotingProvider
references:
- uid: 13c86962microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
  spec.java:
  - name: 'abstract '
    fullName: 'abstract '
  - uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
    name: ServiceRemotingListener
    fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
    href: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener.yml
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingListener*
  name: createServiceRemotingListener
  nameWithType: ServiceRemotingProvider.createServiceRemotingListener
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingListener
  package: microsoft.servicefabric.services.remoting
- uid: 13c86962microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  spec.java:
  - name: 'abstract '
    fullName: 'abstract '
  - uid: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
    name: ServiceRemotingClientFactory
    fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
    href: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory.yml
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingClientFactory*
  name: createServiceRemotingClientFactory
  nameWithType: ServiceRemotingProvider.createServiceRemotingClientFactory
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingClientFactory
  package: microsoft.servicefabric.services.remoting
- uid: a19781f8
  spec.java:
  - name: Class<?>
    fullName: Class<?>
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.getProvider*
  name: getProvider
  nameWithType: ServiceRemotingProvider.getProvider
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.getProvider
  package: microsoft.servicefabric.services.remoting
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  parent: microsoft.servicefabric.services.remoting.fabrictransport
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  name: FabricTransportServiceRemotingProvider
  nameWithType: FabricTransportServiceRemotingProvider
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  type: Class
  summary: "<p>Sets Fabric TCP transport as the default service remoting transport provider in the assembly. </p>"
  syntax:
    content: public class FabricTransportServiceRemotingProvider extends ServiceRemotingProvider
- uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
  parent: microsoft.servicefabric.services.remoting.runtime
  href: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener.yml
  name: ServiceRemotingListener
  nameWithType: ServiceRemotingListener
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
  type: Interface
  summary: "<p>Defines a base communication interface that enables interface remoting for stateless and stateful services. </p>"
  syntax:
    content: public interface ServiceRemotingListener extends CommunicationListener
- uid: system.fabric.ServiceContext
  parent: system.fabric
  href: system.fabric.ServiceContext.yml
  name: ServiceContext
  nameWithType: ServiceContext
  fullName: system.fabric.ServiceContext
  type: Class
  summary: "<p>Represents the service context that the service is operating under. </p>"
  syntax:
    content: public class ServiceContext
- uid: microsoft.servicefabric.services.remoting.Service
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting.Service.yml
  name: Service
  nameWithType: Service
  fullName: microsoft.servicefabric.services.remoting.Service
  type: Interface
  summary: "<p>This is the marker interface for enabling interface Remoting for services. An <xref uid=\"microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener\"></xref> provides remoting for all interfaces implemented by the service that derive from this interface. The remoted interfaces can be accessed via Proxy on the client side. </p>"
  syntax:
    content: public interface Service
- uid: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory.yml
  name: ServiceRemotingClientFactory
  nameWithType: ServiceRemotingClientFactory
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  type: Interface
  summary: "<p>Defines the interface that must be implemented for providing the remoting communication client factory. </p>"
  syntax:
    content: public interface ServiceRemotingClientFactory extends CommunicationClientFactory<ServiceRemotingClient>
- uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
  parent: microsoft.servicefabric.services.remoting.runtime
  href: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient.yml
  name: ServiceRemotingCallbackClient
  nameWithType: ServiceRemotingCallbackClient
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
  type: Interface
  summary: "<p>Defines the interface that must be implemented for providing callback mechanism from the remoting listener to the client. </p>"
  syntax:
    content: public interface ServiceRemotingCallbackClient
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingProvider
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.yml
  name: ServiceRemotingProvider
  nameWithType: ServiceRemotingProvider
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingProvider
  type: Class
  summary: "<p>This is a base type that sets the default service remoting provider to use for remoting the service interfaces. </p>"
  syntax: *o1
