### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithCertificate<ParentT>.withExistingAppServiceCertificateOrder(AppServiceCertificateOrder certificateOrder)
  name: withExistingAppServiceCertificateOrder(AppServiceCertificateOrder certificateOrder)
  nameWithType: HostNameSslBinding.DefinitionStages.WithCertificate<ParentT>.withExistingAppServiceCertificateOrder(AppServiceCertificateOrder certificateOrder)
  parameters:
  - description: <p>the ready-to-use certificate order </p>
    name: certificateOrder
    type: <xref href="com.microsoft.azure.management.appservice.AppServiceCertificateOrder?alt=com.microsoft.azure.management.appservice.AppServiceCertificateOrder&text=AppServiceCertificateOrder" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithSslType?alt=com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithSslType&text=HostNameSslBinding.DefinitionStages.WithSslType" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: <p>Specifies a ready-to-use certificate order to use. This is usually useful for reusing wildcard certificates. </p>
  syntax: public WithSslType<ParentT> withExistingAppServiceCertificateOrder(AppServiceCertificateOrder certificateOrder)
  uid: com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithCertificate.withExistingAppServiceCertificateOrder(AppServiceCertificateOrder)
- fullName: com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithCertificate<ParentT>.withExistingCertificate(String certificateName)
  name: withExistingCertificate(String certificateName)
  nameWithType: HostNameSslBinding.DefinitionStages.WithCertificate<ParentT>.withExistingCertificate(String certificateName)
  parameters:
  - description: <p>the name of the certificate </p>
    name: certificateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithSslType?alt=com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithSslType&text=HostNameSslBinding.DefinitionStages.WithSslType" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: <p>Use an existing certificate in the resource group. </p>
  syntax: public WithSslType<ParentT> withExistingCertificate(String certificateName)
  uid: com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithCertificate.withExistingCertificate(String)
- fullName: com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithCertificate<ParentT>.withNewStandardSslCertificateOrder(String certificateOrderName)
  name: withNewStandardSslCertificateOrder(String certificateOrderName)
  nameWithType: HostNameSslBinding.DefinitionStages.WithCertificate<ParentT>.withNewStandardSslCertificateOrder(String certificateOrderName)
  parameters:
  - description: <p>the name of the certificate order </p>
    name: certificateOrderName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithKeyVault?alt=com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithKeyVault&text=HostNameSslBinding.DefinitionStages.WithKeyVault" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: <p>Places a new App Service certificate order to use for the hostname. </p>
  syntax: public WithKeyVault<ParentT> withNewStandardSslCertificateOrder(String certificateOrderName)
  uid: com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithCertificate.withNewStandardSslCertificateOrder(String)
- fullName: com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithCertificate<ParentT>.withPfxCertificateToUpload(File pfxFile, String password)
  name: withPfxCertificateToUpload(File pfxFile, String password)
  nameWithType: HostNameSslBinding.DefinitionStages.WithCertificate<ParentT>.withPfxCertificateToUpload(File pfxFile, String password)
  parameters:
  - description: <p>the PFX certificate file to upload </p>
    name: pfxFile
    type: <xref href="File?alt=File&text=File" data-throw-if-not-resolved="False"/>
  - description: <p>the password to the certificate </p>
    name: password
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithSslType?alt=com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithSslType&text=HostNameSslBinding.DefinitionStages.WithSslType" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: <p>Uploads a PFX certificate. </p>
  syntax: public WithSslType<ParentT> withPfxCertificateToUpload(File pfxFile, String password)
  uid: com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithCertificate.withPfxCertificateToUpload(File,String)
nameWithType: HostNameSslBinding.DefinitionStages.WithCertificate<ParentT>
syntax: public interface WithCertificate<ParentT>
type: interface
typeParameters:
- description: <p>the stage of the parent definition to return to after attaching this definition </p>
  name: ParentT
uid: com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithCertificate
fullName: com.microsoft.azure.management.appservice.HostNameSslBinding.DefinitionStages.WithCertificate<ParentT>
name: HostNameSslBinding.DefinitionStages.WithCertificate<ParentT>
package: com.microsoft.azure.management.appservice
summary: <p>The stage of a hostname SSL binding definition allowing certificate information to be specified. </p>
metadata: {}
