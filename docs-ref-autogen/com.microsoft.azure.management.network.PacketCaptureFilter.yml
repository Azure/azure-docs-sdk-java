### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.network.PacketCaptureFilter
  id: PacketCaptureFilter
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network
  children:
  - com.microsoft.azure.management.network.PacketCaptureFilter.PacketCaptureFilter()
  - com.microsoft.azure.management.network.PacketCaptureFilter.localIPAddress()
  - com.microsoft.azure.management.network.PacketCaptureFilter.localPort()
  - com.microsoft.azure.management.network.PacketCaptureFilter.protocol()
  - com.microsoft.azure.management.network.PacketCaptureFilter.remoteIPAddress()
  - com.microsoft.azure.management.network.PacketCaptureFilter.remotePort()
  - com.microsoft.azure.management.network.PacketCaptureFilter.withLocalIPAddress(java.lang.String)
  - com.microsoft.azure.management.network.PacketCaptureFilter.withLocalPort(java.lang.String)
  - com.microsoft.azure.management.network.PacketCaptureFilter.withProtocol(com.microsoft.azure.management.network.PcProtocol)
  - com.microsoft.azure.management.network.PacketCaptureFilter.withRemoteIPAddress(java.lang.String)
  - com.microsoft.azure.management.network.PacketCaptureFilter.withRemotePort(java.lang.String)
  langs:
  - java
  name: PacketCaptureFilter
  nameWithType: PacketCaptureFilter
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter
  type: Class
  package: com.microsoft.azure.management.network
  summary: Filter that is applied to packet capture request. Multiple filters can be applied.
  syntax:
    content: public class PacketCaptureFilter
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.PacketCaptureFilter()
  id: PacketCaptureFilter()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.PacketCaptureFilter
  langs:
  - java
  name: PacketCaptureFilter()
  nameWithType: PacketCaptureFilter.PacketCaptureFilter()
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.PacketCaptureFilter()
  overload: com.microsoft.azure.management.network.PacketCaptureFilter.PacketCaptureFilter*
  type: Constructor
  package: com.microsoft.azure.management.network
  syntax:
    content: public PacketCaptureFilter()
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.localIPAddress()
  id: localIPAddress()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.PacketCaptureFilter
  langs:
  - java
  name: localIPAddress()
  nameWithType: PacketCaptureFilter.localIPAddress()
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.localIPAddress()
  overload: com.microsoft.azure.management.network.PacketCaptureFilter.localIPAddress*
  type: Method
  package: com.microsoft.azure.management.network
  summary: 'Get local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.'
  syntax:
    content: public String localIPAddress()
    return:
      type: java.lang.String
      description: the localIPAddress value
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.localPort()
  id: localPort()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.PacketCaptureFilter
  langs:
  - java
  name: localPort()
  nameWithType: PacketCaptureFilter.localPort()
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.localPort()
  overload: com.microsoft.azure.management.network.PacketCaptureFilter.localPort*
  type: Method
  package: com.microsoft.azure.management.network
  summary: 'Get local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.'
  syntax:
    content: public String localPort()
    return:
      type: java.lang.String
      description: the localPort value
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.protocol()
  id: protocol()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.PacketCaptureFilter
  langs:
  - java
  name: protocol()
  nameWithType: PacketCaptureFilter.protocol()
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.protocol()
  overload: com.microsoft.azure.management.network.PacketCaptureFilter.protocol*
  type: Method
  package: com.microsoft.azure.management.network
  summary: "Get protocol to be filtered on. Possible values include: 'TCP', 'UDP', 'Any'."
  syntax:
    content: public PcProtocol protocol()
    return:
      type: com.microsoft.azure.management.network.PcProtocol
      description: the protocol value
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.remoteIPAddress()
  id: remoteIPAddress()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.PacketCaptureFilter
  langs:
  - java
  name: remoteIPAddress()
  nameWithType: PacketCaptureFilter.remoteIPAddress()
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.remoteIPAddress()
  overload: com.microsoft.azure.management.network.PacketCaptureFilter.remoteIPAddress*
  type: Method
  package: com.microsoft.azure.management.network
  summary: 'Get local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.'
  syntax:
    content: public String remoteIPAddress()
    return:
      type: java.lang.String
      description: the remoteIPAddress value
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.remotePort()
  id: remotePort()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.PacketCaptureFilter
  langs:
  - java
  name: remotePort()
  nameWithType: PacketCaptureFilter.remotePort()
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.remotePort()
  overload: com.microsoft.azure.management.network.PacketCaptureFilter.remotePort*
  type: Method
  package: com.microsoft.azure.management.network
  summary: 'Get remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.'
  syntax:
    content: public String remotePort()
    return:
      type: java.lang.String
      description: the remotePort value
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalIPAddress(java.lang.String)
  id: withLocalIPAddress(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.PacketCaptureFilter
  langs:
  - java
  name: withLocalIPAddress(String localIPAddress)
  nameWithType: PacketCaptureFilter.withLocalIPAddress(String localIPAddress)
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalIPAddress(String localIPAddress)
  overload: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalIPAddress*
  type: Method
  package: com.microsoft.azure.management.network
  summary: 'Set local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.'
  syntax:
    content: public PacketCaptureFilter withLocalIPAddress(String localIPAddress)
    parameters:
    - id: localIPAddress
      type: java.lang.String
      description: the localIPAddress value to set
    return:
      type: com.microsoft.azure.management.network.PacketCaptureFilter
      description: the PacketCaptureFilter object itself.
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalPort(java.lang.String)
  id: withLocalPort(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.PacketCaptureFilter
  langs:
  - java
  name: withLocalPort(String localPort)
  nameWithType: PacketCaptureFilter.withLocalPort(String localPort)
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalPort(String localPort)
  overload: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalPort*
  type: Method
  package: com.microsoft.azure.management.network
  summary: 'Set local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.'
  syntax:
    content: public PacketCaptureFilter withLocalPort(String localPort)
    parameters:
    - id: localPort
      type: java.lang.String
      description: the localPort value to set
    return:
      type: com.microsoft.azure.management.network.PacketCaptureFilter
      description: the PacketCaptureFilter object itself.
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.withProtocol(com.microsoft.azure.management.network.PcProtocol)
  id: withProtocol(com.microsoft.azure.management.network.PcProtocol)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.PacketCaptureFilter
  langs:
  - java
  name: withProtocol(PcProtocol protocol)
  nameWithType: PacketCaptureFilter.withProtocol(PcProtocol protocol)
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withProtocol(PcProtocol protocol)
  overload: com.microsoft.azure.management.network.PacketCaptureFilter.withProtocol*
  type: Method
  package: com.microsoft.azure.management.network
  summary: "Set protocol to be filtered on. Possible values include: 'TCP', 'UDP', 'Any'."
  syntax:
    content: public PacketCaptureFilter withProtocol(PcProtocol protocol)
    parameters:
    - id: protocol
      type: com.microsoft.azure.management.network.PcProtocol
      description: the protocol value to set
    return:
      type: com.microsoft.azure.management.network.PacketCaptureFilter
      description: the PacketCaptureFilter object itself.
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.withRemoteIPAddress(java.lang.String)
  id: withRemoteIPAddress(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.PacketCaptureFilter
  langs:
  - java
  name: withRemoteIPAddress(String remoteIPAddress)
  nameWithType: PacketCaptureFilter.withRemoteIPAddress(String remoteIPAddress)
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withRemoteIPAddress(String remoteIPAddress)
  overload: com.microsoft.azure.management.network.PacketCaptureFilter.withRemoteIPAddress*
  type: Method
  package: com.microsoft.azure.management.network
  summary: 'Set local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.'
  syntax:
    content: public PacketCaptureFilter withRemoteIPAddress(String remoteIPAddress)
    parameters:
    - id: remoteIPAddress
      type: java.lang.String
      description: the remoteIPAddress value to set
    return:
      type: com.microsoft.azure.management.network.PacketCaptureFilter
      description: the PacketCaptureFilter object itself.
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.withRemotePort(java.lang.String)
  id: withRemotePort(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.PacketCaptureFilter
  langs:
  - java
  name: withRemotePort(String remotePort)
  nameWithType: PacketCaptureFilter.withRemotePort(String remotePort)
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withRemotePort(String remotePort)
  overload: com.microsoft.azure.management.network.PacketCaptureFilter.withRemotePort*
  type: Method
  package: com.microsoft.azure.management.network
  summary: 'Set remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.'
  syntax:
    content: public PacketCaptureFilter withRemotePort(String remotePort)
    parameters:
    - id: remotePort
      type: java.lang.String
      description: the remotePort value to set
    return:
      type: com.microsoft.azure.management.network.PacketCaptureFilter
      description: the PacketCaptureFilter object itself.
references:
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.PacketCaptureFilter*
  name: PacketCaptureFilter
  nameWithType: PacketCaptureFilter.PacketCaptureFilter
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.PacketCaptureFilter
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.PcProtocol
  name: PcProtocol
  nameWithType: PcProtocol
  fullName: com.microsoft.azure.management.network.PcProtocol
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.protocol*
  name: protocol
  nameWithType: PacketCaptureFilter.protocol
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.protocol
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.withProtocol*
  name: withProtocol
  nameWithType: PacketCaptureFilter.withProtocol
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withProtocol
  package: com.microsoft.azure.management.network
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.localIPAddress*
  name: localIPAddress
  nameWithType: PacketCaptureFilter.localIPAddress
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.localIPAddress
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalIPAddress*
  name: withLocalIPAddress
  nameWithType: PacketCaptureFilter.withLocalIPAddress
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalIPAddress
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.remoteIPAddress*
  name: remoteIPAddress
  nameWithType: PacketCaptureFilter.remoteIPAddress
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.remoteIPAddress
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.withRemoteIPAddress*
  name: withRemoteIPAddress
  nameWithType: PacketCaptureFilter.withRemoteIPAddress
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withRemoteIPAddress
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.localPort*
  name: localPort
  nameWithType: PacketCaptureFilter.localPort
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.localPort
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalPort*
  name: withLocalPort
  nameWithType: PacketCaptureFilter.withLocalPort
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalPort
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.remotePort*
  name: remotePort
  nameWithType: PacketCaptureFilter.remotePort
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.remotePort
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.PacketCaptureFilter.withRemotePort*
  name: withRemotePort
  nameWithType: PacketCaptureFilter.withRemotePort
  fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withRemotePort
  package: com.microsoft.azure.management.network
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
