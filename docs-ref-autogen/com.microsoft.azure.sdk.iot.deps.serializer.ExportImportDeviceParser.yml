### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser"
fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser"
name: "ExportImportDeviceParser"
nameWithType: "ExportImportDeviceParser"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ExportImportDeviceParser"
constructors:
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.ExportImportDeviceParser()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.ExportImportDeviceParser()"
  name: "ExportImportDeviceParser()"
  nameWithType: "ExportImportDeviceParser.ExportImportDeviceParser()"
  summary: "Empty constructor: Used only to keep GSON happy."
  syntax: "public ExportImportDeviceParser()"
  desc: "Empty constructor: Used only to keep GSON happy."
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.ExportImportDeviceParser(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.ExportImportDeviceParser(String json)"
  name: "ExportImportDeviceParser(String json)"
  nameWithType: "ExportImportDeviceParser.ExportImportDeviceParser(String json)"
  summary: "Constructor for an Export<wbr>Import<wbr>Device<wbr>Parser that is built using the provided json"
  parameters:
  - description: "the json string to build the ExportImportDeviceParser out of"
    name: "json"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExportImportDeviceParser(String json)"
  desc: "Constructor for an ExportImportDeviceParser that is built using the provided json"
methods:
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getAuthentication()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getAuthentication()"
  name: "getAuthentication()"
  nameWithType: "ExportImportDeviceParser.getAuthentication()"
  summary: "Getter for authentication"
  deprecatedTag: "as of Deps version 0.7.1, please use <xref uid=\"com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getAuthenticationFinal()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getAuthenticationFinal()\"></xref>"
  syntax: "@Deprecated\npublic AuthenticationParser getAuthentication()"
  desc: "Getter for authentication"
  hasDeprecatedTag: true
  returns:
    description: "The value of authentication"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.AuthenticationParser?alt=com.microsoft.azure.sdk.iot.deps.serializer.AuthenticationParser&text=AuthenticationParser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getAuthenticationFinal()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getAuthenticationFinal()"
  name: "getAuthenticationFinal()"
  nameWithType: "ExportImportDeviceParser.getAuthenticationFinal()"
  summary: "Getter for authentication"
  modifiers:
  - "final"
  syntax: "public final AuthenticationParser getAuthenticationFinal()"
  desc: "Getter for authentication"
  returns:
    description: "The value of authentication"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.AuthenticationParser?alt=com.microsoft.azure.sdk.iot.deps.serializer.AuthenticationParser&text=AuthenticationParser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getETag()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getETag()"
  name: "getETag()"
  nameWithType: "ExportImportDeviceParser.getETag()"
  summary: "Getter for e<wbr>Tag"
  syntax: "public String getETag()"
  desc: "Getter for eTag"
  returns:
    description: "The value of eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getId()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getId()"
  name: "getId()"
  nameWithType: "ExportImportDeviceParser.getId()"
  summary: "Getter for id"
  deprecatedTag: "as of Deps version 0.7.1, please use <xref uid=\"com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getIdFinal()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getIdFinal()\"></xref>"
  syntax: "@Deprecated\npublic String getId()"
  desc: "Getter for id"
  hasDeprecatedTag: true
  returns:
    description: "The value of id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getIdFinal()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getIdFinal()"
  name: "getIdFinal()"
  nameWithType: "ExportImportDeviceParser.getIdFinal()"
  summary: "Getter for id"
  modifiers:
  - "final"
  syntax: "public final String getIdFinal()"
  desc: "Getter for id"
  returns:
    description: "The value of id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getImportMode()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getImportMode()"
  name: "getImportMode()"
  nameWithType: "ExportImportDeviceParser.getImportMode()"
  summary: "Getter for import<wbr>Mode"
  syntax: "public String getImportMode()"
  desc: "Getter for importMode"
  returns:
    description: "The value of importMode"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getModuleId()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getModuleId()"
  name: "getModuleId()"
  nameWithType: "ExportImportDeviceParser.getModuleId()"
  summary: "Gets the module<wbr>Id for this parser."
  modifiers:
  - "final"
  syntax: "public final String getModuleId()"
  desc: "Gets the moduleId for this parser."
  returns:
    description: "the moduleId for this parser."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getStatus()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getStatus()"
  name: "getStatus()"
  nameWithType: "ExportImportDeviceParser.getStatus()"
  summary: "Getter for status"
  syntax: "public String getStatus()"
  desc: "Getter for status"
  returns:
    description: "The value of status"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getStatusReason()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getStatusReason()"
  name: "getStatusReason()"
  nameWithType: "ExportImportDeviceParser.getStatusReason()"
  summary: "Getter for status<wbr>Reason"
  syntax: "public String getStatusReason()"
  desc: "Getter for statusReason"
  returns:
    description: "The value of statusReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getTags()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.getTags()"
  name: "getTags()"
  nameWithType: "ExportImportDeviceParser.getTags()"
  syntax: "public TwinCollection getTags()"
  returns:
    description: "the tags"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection?alt=com.microsoft.azure.sdk.iot.deps.twin.TwinCollection&text=TwinCollection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setAuthentication(com.microsoft.azure.sdk.iot.deps.serializer.AuthenticationParser)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setAuthentication(AuthenticationParser authentication)"
  name: "setAuthentication(AuthenticationParser authentication)"
  nameWithType: "ExportImportDeviceParser.setAuthentication(AuthenticationParser authentication)"
  summary: "Setter for authentication"
  parameters:
  - description: "the authentication to set"
    name: "authentication"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.AuthenticationParser?alt=com.microsoft.azure.sdk.iot.deps.serializer.AuthenticationParser&text=AuthenticationParser\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setAuthentication(AuthenticationParser authentication)"
  exceptions:
  - description: "if authentication is null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Setter for authentication"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setETag(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setETag(String eTag)"
  name: "setETag(String eTag)"
  nameWithType: "ExportImportDeviceParser.setETag(String eTag)"
  summary: "Setter for e<wbr>Tag"
  parameters:
  - description: "the value to set eTag to"
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setETag(String eTag)"
  desc: "Setter for eTag"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setId(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setId(String id)"
  name: "setId(String id)"
  nameWithType: "ExportImportDeviceParser.setId(String id)"
  summary: "Setter for id"
  parameters:
  - description: "the value to set id to"
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setId(String id)"
  exceptions:
  - description: "if id is null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Setter for id"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setImportMode(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setImportMode(String importMode)"
  name: "setImportMode(String importMode)"
  nameWithType: "ExportImportDeviceParser.setImportMode(String importMode)"
  summary: "Setter for Import<wbr>Mode"
  parameters:
  - description: "the value to set ImportMode to"
    name: "importMode"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setImportMode(String importMode)"
  desc: "Setter for ImportMode"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setModuleId(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setModuleId(String moduleId)"
  name: "setModuleId(String moduleId)"
  nameWithType: "ExportImportDeviceParser.setModuleId(String moduleId)"
  summary: "Sets the module Id for this parser."
  modifiers:
  - "final"
  parameters:
  - description: "the module Id for this parser."
    name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final void setModuleId(String moduleId)"
  desc: "Sets the module Id for this parser."
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setStatus(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setStatus(String status)"
  name: "setStatus(String status)"
  nameWithType: "ExportImportDeviceParser.setStatus(String status)"
  summary: "Setter for Status"
  parameters:
  - description: "the value to set Status to"
    name: "status"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setStatus(String status)"
  desc: "Setter for Status"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setStatusReason(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setStatusReason(String statusReason)"
  name: "setStatusReason(String statusReason)"
  nameWithType: "ExportImportDeviceParser.setStatusReason(String statusReason)"
  summary: "Setter for Status<wbr>Reason"
  parameters:
  - description: "the value to set StatusReason to"
    name: "statusReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setStatusReason(String statusReason)"
  desc: "Setter for StatusReason"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setTags(com.microsoft.azure.sdk.iot.deps.twin.TwinCollection)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.setTags(TwinCollection tags)"
  name: "setTags(TwinCollection tags)"
  nameWithType: "ExportImportDeviceParser.setTags(TwinCollection tags)"
  parameters:
  - description: "the tags to set"
    name: "tags"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection?alt=com.microsoft.azure.sdk.iot.deps.twin.TwinCollection&text=TwinCollection\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setTags(TwinCollection tags)"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.toJson()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ExportImportDeviceParser.toJson()"
  name: "toJson()"
  nameWithType: "ExportImportDeviceParser.toJson()"
  summary: "Converts this into json and returns it"
  syntax: "public String toJson()"
  desc: "Converts this into json and returns it"
  returns:
    description: "the json representation of this"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.deps.serializer"
artifact: com.microsoft.azure.sdk.iot:iot-deps:0.12.0
