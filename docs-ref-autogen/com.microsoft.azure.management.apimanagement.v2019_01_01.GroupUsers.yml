### YamlMime:JavaType
uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.GroupUsers"
fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.GroupUsers"
name: "GroupUsers"
nameWithType: "GroupUsers"
summary: "Type representing Group<wbr>Users."
syntax: "public interface GroupUsers extends SupportsCreating<GroupUserContract.DefinitionStages.Blank>, HasInner<GroupUsersInner>"
methods:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.GroupUsers.checkEntityExistsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.GroupUsers.checkEntityExistsAsync(String resourceGroupName, String serviceName, String groupId, String userId)"
  name: "checkEntityExistsAsync(String resourceGroupName, String serviceName, String groupId, String userId)"
  nameWithType: "GroupUsers.checkEntityExistsAsync(String resourceGroupName, String serviceName, String groupId, String userId)"
  summary: "Checks that user entity specified by identifier is associated with the group entity."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Group identifier. Must be unique in the current API Management service instance."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "User identifier. Must be unique in the current API Management service instance."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Boolean> checkEntityExistsAsync(String resourceGroupName, String serviceName, String groupId, String userId)"
  desc: "Checks that user entity specified by identifier is associated with the group entity."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.GroupUsers.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.GroupUsers.deleteAsync(String resourceGroupName, String serviceName, String groupId, String userId)"
  name: "deleteAsync(String resourceGroupName, String serviceName, String groupId, String userId)"
  nameWithType: "GroupUsers.deleteAsync(String resourceGroupName, String serviceName, String groupId, String userId)"
  summary: "Remove existing user from existing group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Group identifier. Must be unique in the current API Management service instance."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "User identifier. Must be unique in the current API Management service instance."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable deleteAsync(String resourceGroupName, String serviceName, String groupId, String userId)"
  desc: "Remove existing user from existing group."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.GroupUsers.listAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.GroupUsers.listAsync(String resourceGroupName, String serviceName, String groupId)"
  name: "listAsync(String resourceGroupName, String serviceName, String groupId)"
  nameWithType: "GroupUsers.listAsync(String resourceGroupName, String serviceName, String groupId)"
  summary: "Lists a collection of user entities associated with the group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Group identifier. Must be unique in the current API Management service instance."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<GroupUserContract> listAsync(String resourceGroupName, String serviceName, String groupId)"
  desc: "Lists a collection of user entities associated with the group."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.GroupUserContract?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.GroupUserContract&text=GroupUserContract\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Type representing GroupUsers."
implements:
- "<xref href=\"com.microsoft.azure.arm.collection.SupportsCreating?alt=com.microsoft.azure.arm.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.GroupUserContract.DefinitionStages.Blank?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.GroupUserContract.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.GroupUsersInner?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.GroupUsersInner&text=GroupUsersInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.apimanagement.v2019_01_01"
artifact: com.microsoft.azure.apimanagement.v2019_01_01:azure-mgmt-apimanagement:1.0.0-beta-1
