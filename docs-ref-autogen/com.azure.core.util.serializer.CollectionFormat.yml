### YamlMime:JavaEnum
uid: "com.azure.core.util.serializer.CollectionFormat"
fullName: "com.azure.core.util.serializer.CollectionFormat"
name: "CollectionFormat"
nameWithType: "CollectionFormat"
summary: "Swagger collection format to use for joining <xref uid=\"java.util.List\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.List\"></xref> parameters in paths, queries, and headers. See [ https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md\\#fixed-fields-7][https_github.com_swagger-api_swagger-spec_blob_master_versions_2.0.md_fixed-fields-7].\n\n\n[https_github.com_swagger-api_swagger-spec_blob_master_versions_2.0.md_fixed-fields-7]: https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#fixed-fields-7"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum CollectionFormat extends Enum<CollectionFormat>"
fields:
- uid: "com.azure.core.util.serializer.CollectionFormat.CSV"
  fullName: "com.azure.core.util.serializer.CollectionFormat.CSV"
  name: "CSV"
  nameWithType: "CollectionFormat.CSV"
  summary: "Comma separated values. E.g. foo,bar"
- uid: "com.azure.core.util.serializer.CollectionFormat.MULTI"
  fullName: "com.azure.core.util.serializer.CollectionFormat.MULTI"
  name: "MULTI"
  nameWithType: "CollectionFormat.MULTI"
  summary: "Corresponds to multiple parameter instances instead of multiple values for a single instance. E.g. foo=bar&foo=baz"
- uid: "com.azure.core.util.serializer.CollectionFormat.PIPES"
  fullName: "com.azure.core.util.serializer.CollectionFormat.PIPES"
  name: "PIPES"
  nameWithType: "CollectionFormat.PIPES"
  summary: "Pipe(|) separated values. E.g. foo|bar"
- uid: "com.azure.core.util.serializer.CollectionFormat.SSV"
  fullName: "com.azure.core.util.serializer.CollectionFormat.SSV"
  name: "SSV"
  nameWithType: "CollectionFormat.SSV"
  summary: "Space separated values. E.g. foo bar"
- uid: "com.azure.core.util.serializer.CollectionFormat.TSV"
  fullName: "com.azure.core.util.serializer.CollectionFormat.TSV"
  name: "TSV"
  nameWithType: "CollectionFormat.TSV"
  summary: "Tab separated values. E.g. foo\\\\tbar"
methods:
- uid: "com.azure.core.util.serializer.CollectionFormat.getDelimiter()"
  fullName: "com.azure.core.util.serializer.CollectionFormat.getDelimiter()"
  name: "getDelimiter()"
  nameWithType: "CollectionFormat.getDelimiter()"
  summary: "Gets the delimiter used to join a list of parameters."
  syntax: "public String getDelimiter()"
  returns:
    description: "the delimiter of the current collection format."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.serializer.CollectionFormat.valueOf(java.lang.String)"
  fullName: "com.azure.core.util.serializer.CollectionFormat.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "CollectionFormat.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CollectionFormat valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.core.util.serializer.CollectionFormat?alt=com.azure.core.util.serializer.CollectionFormat&text=CollectionFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.serializer.CollectionFormat.values()"
  fullName: "com.azure.core.util.serializer.CollectionFormat.values()"
  name: "values()"
  nameWithType: "CollectionFormat.values()"
  syntax: "public static CollectionFormat[] values()"
  returns:
    type: "<xref href=\"com.azure.core.util.serializer.CollectionFormat?alt=com.azure.core.util.serializer.CollectionFormat&text=CollectionFormat\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.azure.core.util.serializer"
artifact: com.azure:azure-core:1.12.0
