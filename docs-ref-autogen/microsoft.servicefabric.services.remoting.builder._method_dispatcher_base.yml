items:
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  id: _method_dispatcher_base
  parent: microsoft.servicefabric.services.remoting.builder
  children:
  - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWith(CompletableFuture<?>)
  - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWithResult(int,CompletableFuture<TRetval>)
  - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseBody(int,Object)
  - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseMessageBody(Object)
  - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatch(Object,int,Object)
  - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatchAsync(Object,int,Object)
  - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getInterfaceId()
  - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getMethodName(int)
  - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getRequestMessageBodyValue(Object)
  - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.initialize(int,Map<Integer, String>)
  - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatch(int,Object,Object)
  - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatchAsync(int,Object,Object)
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: MethodDispatcherBase
  nameWithType: MethodDispatcherBase
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 12
  package: microsoft.servicefabric.services.remoting.builder
  summary: <p>The base class used by remoting code generator to generate the type that dispatches requests from the client to the right interface and method of the remoted object. </p>
  syntax:
    content: public class MethodDispatcherBase implements MethodDispatcher
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.services.remoting._method_dispatcher
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWith(CompletableFuture<?>)
  id: continueWith(CompletableFuture<?>)
  parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: continueWith(CompletableFuture<?> future)
  nameWithType: MethodDispatcherBase.continueWith(CompletableFuture<?> future)
  fullName: CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWith(CompletableFuture<?> future)
  overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWith*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 113
  package: microsoft.servicefabric.services.remoting.builder
  summary: >-
    <p>Internal - used by <xref href="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false"></xref> remoting</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<Object> continueWith(CompletableFuture<?> future)
    parameters:
    - id: future
      type: 16409f84
      description: <p>continuation future </p>
    return:
      type: 55aa5245
      description: <p>A <ref refid="" kindref="compound">java.util.concurrent.CompletableFuture</ref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWithResult(int,CompletableFuture<TRetval>)
  id: continueWithResult(int,CompletableFuture<TRetval>)
  parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: continueWithResult(int methodId, CompletableFuture<TRetval> future)
  nameWithType: MethodDispatcherBase.continueWithResult(int methodId, CompletableFuture<TRetval> future)
  fullName: protected<TRetval> CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWithResult(int methodId, CompletableFuture<TRetval> future)
  overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWithResult*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 96
  package: microsoft.servicefabric.services.remoting.builder
  summary: >-
    <p>Internal - used by <xref href="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false"></xref> remoting</p>

    <p></p>
  syntax:
    content: protected <TRetval> CompletableFuture<Object> continueWithResult(int methodId, CompletableFuture<TRetval> future)
    parameters:
    - id: methodId
      type: f75371fa
      description: <p>method id </p>
    - id: future
      type: 77318c5d
      description: <p>continuation future </p>
    return:
      type: d2898f57
      description: <p>A <ref refid="" kindref="compound">java.util.concurrent.CompletableFuture</ref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseBody(int,Object)
  id: createResponseBody(int,Object)
  parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: createResponseBody(int methodId, Object returnValue)
  nameWithType: MethodDispatcherBase.createResponseBody(int methodId, Object returnValue)
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseBody(int methodId, Object returnValue)
  overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseBody*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 162
  package: microsoft.servicefabric.services.remoting.builder
  summary: >-
    <p>This method is implemented by the generated method dispatcher to create the response from the specified return value as a result of dispatching the method to the remoted object.</p>

    <p></p>
  syntax:
    content: protected abstract Object createResponseBody(int methodId, Object returnValue)
    parameters:
    - id: methodId
      type: f75371fa
      description: <p>Id of the method. </p>
    - id: returnValue
      type: "79317049"
      description: <p>The returned value from the method. </p>
    return:
      type: 1377799a
      description: <p>A <ref refid="" kindref="compound">Object</ref> that represents the response body to be sent back to the client. </p>
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseMessageBody(Object)
  id: createResponseMessageBody(Object)
  parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: createResponseMessageBody(Object responseMessageBodyValue)
  nameWithType: MethodDispatcherBase.createResponseMessageBody(Object responseMessageBodyValue)
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseMessageBody(Object responseMessageBodyValue)
  overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseMessageBody*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 167
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: protected abstract Object createResponseMessageBody(Object responseMessageBodyValue)
    parameters:
    - id: responseMessageBodyValue
      type: "79317049"
    return:
      type: 1377799a
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatch(Object,int,Object)
  id: dispatch(Object,int,Object)
  parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: dispatch(Object objectImplementation, int methodId, Object requestMsgBody)
  nameWithType: MethodDispatcherBase.dispatch(Object objectImplementation, int methodId, Object requestMsgBody)
  fullName: void microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatch(Object objectImplementation, int methodId, Object requestMsgBody)
  overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatch*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 77
  package: microsoft.servicefabric.services.remoting.builder
  summary: >-
    <p>This method is used to dispatch one way messages to the specified methodId of the interface implemented by the remoted object.</p>

    <p></p>
  syntax:
    content: public void dispatch(Object objectImplementation, int methodId, Object requestMsgBody)
    parameters:
    - id: objectImplementation
      type: "79317049"
      description: <p>remoted object Implementation. </p>
    - id: methodId
      type: f75371fa
      description: <p>methodId of the interface implemented by the remoted object. </p>
    - id: requestMsgBody
      type: "79317049"
      description: <p>message body. </p>
  overridden: microsoft.servicefabric.services.remoting._method_dispatcher.dispatch(Object,int,Object)
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatchAsync(Object,int,Object)
  id: dispatchAsync(Object,int,Object)
  parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: dispatchAsync(Object objectImplementation, int methodId, Object requestMsgBody)
  nameWithType: MethodDispatcherBase.dispatchAsync(Object objectImplementation, int methodId, Object requestMsgBody)
  fullName: CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatchAsync(Object objectImplementation, int methodId, Object requestMsgBody)
  overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatchAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 51
  package: microsoft.servicefabric.services.remoting.builder
  summary: >-
    <p>This method is implemented by the generated method dispatcher to dispatch request to the specified methodId of the interface implemented by the remoted object.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Object> dispatchAsync(Object objectImplementation, int methodId, Object requestMsgBody)
    parameters:
    - id: objectImplementation
      type: "79317049"
      description: <p>The remoted object instance </p>
    - id: methodId
      type: f75371fa
      description: <p>id of the method </p>
    - id: requestMsgBody
      type: "79317049"
      description: <p>The request body </p>
    return:
      type: 55aa5245
      description: <p>A <ref refid="" kindref="compound">java.util.concurrent.CompletableFuture</ref> that represents outstanding operation. The result of the task is the return value from the method. </p>
  overridden: microsoft.servicefabric.services.remoting._method_dispatcher.dispatchAsync(Object,int,Object)
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getInterfaceId()
  id: getInterfaceId()
  parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: getInterfaceId()
  nameWithType: MethodDispatcherBase.getInterfaceId()
  fullName: int microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getInterfaceId()
  overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getInterfaceId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 28
  package: microsoft.servicefabric.services.remoting.builder
  summary: >-
    <p>Interface Id is used to identify remoting Interfaces.</p>

    <p></p>
  syntax:
    content: public int getInterfaceId()
    return:
      type: f75371fa
      description: <p>interface id. </p>
  overridden: microsoft.servicefabric.services.remoting._method_dispatcher.getInterfaceId()
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getMethodName(int)
  id: getMethodName(int)
  parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: getMethodName(int methodId)
  nameWithType: MethodDispatcherBase.getMethodName(int methodId)
  fullName: String microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getMethodName(int methodId)
  overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getMethodName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 33
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: public String getMethodName(int methodId)
    parameters:
    - id: methodId
      type: f75371fa
    return:
      type: "26831127"
  overridden: microsoft.servicefabric.services.remoting._method_dispatcher.getMethodName(int)
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getRequestMessageBodyValue(Object)
  id: getRequestMessageBodyValue(Object)
  parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: getRequestMessageBodyValue(Object requestMessageBody)
  nameWithType: MethodDispatcherBase.getRequestMessageBodyValue(Object requestMessageBody)
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getRequestMessageBodyValue(Object requestMessageBody)
  overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getRequestMessageBodyValue*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 165
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: protected abstract Object getRequestMessageBodyValue(Object requestMessageBody)
    parameters:
    - id: requestMessageBody
      type: "79317049"
    return:
      type: 1377799a
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.initialize(int,Map<Integer, String>)
  id: initialize(int,Map<Integer, String>)
  parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: initialize(int interfaceId, Map<Integer, String> methodNameMap)
  nameWithType: MethodDispatcherBase.initialize(int interfaceId, Map<Integer, String> methodNameMap)
  fullName: void microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.initialize(int interfaceId, Map<Integer, String> methodNameMap)
  overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.initialize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 16
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: public void initialize(int interfaceId, Map<Integer, String> methodNameMap)
    parameters:
    - id: interfaceId
      type: f75371fa
    - id: methodNameMap
      type: 5188bed5
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatch(int,Object,Object)
  id: onDispatch(int,Object,Object)
  parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: onDispatch(int methodId, Object remotedObject, Object requestBody)
  nameWithType: MethodDispatcherBase.onDispatch(int methodId, Object remotedObject, Object requestBody)
  fullName: abstract void microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatch(int methodId, Object remotedObject, Object requestBody)
  overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatch*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 150
  package: microsoft.servicefabric.services.remoting.builder
  summary: >-
    <p>This method is implemented by the generated method dispatcher to dispatch one way messages to the specified methodId of the interface implemented by the remoted object.</p>

    <p></p>
  syntax:
    content: protected abstract void onDispatch(int methodId, Object remotedObject, Object requestBody)
    parameters:
    - id: methodId
      type: f75371fa
      description: <p>Id of the method. </p>
    - id: remotedObject
      type: "79317049"
      description: <p>The remoted object instance. </p>
    - id: requestBody
      type: "79317049"
      description: <p>message body </p>
    return:
      type: 5beb11ad
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatchAsync(int,Object,Object)
  id: onDispatchAsync(int,Object,Object)
  parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
  langs:
  - java
  name: onDispatchAsync(int methodId, Object remotedObject, Object requestBody)
  nameWithType: MethodDispatcherBase.onDispatchAsync(int methodId, Object remotedObject, Object requestBody)
  fullName: abstract CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatchAsync(int methodId, Object remotedObject, Object requestBody)
  overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatchAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
    startLine: 137
  package: microsoft.servicefabric.services.remoting.builder
  summary: >-
    <p>This method is implemented by the generated method dispatcher to dispatch request to the specified methodId of the interface implemented by the remoted object.</p>

    <p></p>
  syntax:
    content: protected abstract CompletableFuture<Object> onDispatchAsync(int methodId, Object remotedObject, Object requestBody)
    parameters:
    - id: methodId
      type: f75371fa
      description: <p>id of the method </p>
    - id: remotedObject
      type: "79317049"
      description: <p>the remoted object instance </p>
    - id: requestBody
      type: "79317049"
      description: <p>The request body </p>
    return:
      type: "55e17007"
      description: <p>A <ref refid="" kindref="compound">java.util.concurrent.CompletableFuture</ref> that represents outstanding operation. The result of the task is the return value from the method. </p>
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 5188bed5
  spec.java:
  - name: Map<Integer, String>
    fullName: Map<Integer, String>
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.initialize*
  name: initialize
  nameWithType: MethodDispatcherBase.initialize
  fullName: void microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.initialize
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getInterfaceId*
  name: getInterfaceId
  nameWithType: MethodDispatcherBase.getInterfaceId
  fullName: int microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getInterfaceId
  package: microsoft.servicefabric.services.remoting.builder
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getMethodName*
  name: getMethodName
  nameWithType: MethodDispatcherBase.getMethodName
  fullName: String microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getMethodName
  package: microsoft.servicefabric.services.remoting.builder
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: 55aa5245
  spec.java:
  - name: CompletableFuture<Object>
    fullName: CompletableFuture<Object>
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatchAsync*
  name: dispatchAsync
  nameWithType: MethodDispatcherBase.dispatchAsync
  fullName: CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatchAsync
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatch*
  name: dispatch
  nameWithType: MethodDispatcherBase.dispatch
  fullName: void microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatch
  package: microsoft.servicefabric.services.remoting.builder
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWith*
  name: continueWith
  nameWithType: MethodDispatcherBase.continueWith
  fullName: CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWith
  package: microsoft.servicefabric.services.remoting.builder
- uid: "55e17007"
  spec.java:
  - name: abstract CompletableFuture<Object>
    fullName: abstract CompletableFuture<Object>
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatchAsync*
  name: onDispatchAsync
  nameWithType: MethodDispatcherBase.onDispatchAsync
  fullName: abstract CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatchAsync
  package: microsoft.servicefabric.services.remoting.builder
- uid: 5beb11ad
  spec.java:
  - name: abstract void
    fullName: abstract void
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatch*
  name: onDispatch
  nameWithType: MethodDispatcherBase.onDispatch
  fullName: abstract void microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatch
  package: microsoft.servicefabric.services.remoting.builder
- uid: 1377799a
  spec.java:
  - name: abstract Object
    fullName: abstract Object
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseBody*
  name: createResponseBody
  nameWithType: MethodDispatcherBase.createResponseBody
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseBody
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getRequestMessageBodyValue*
  name: getRequestMessageBodyValue
  nameWithType: MethodDispatcherBase.getRequestMessageBodyValue
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getRequestMessageBodyValue
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseMessageBody*
  name: createResponseMessageBody
  nameWithType: MethodDispatcherBase.createResponseMessageBody
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseMessageBody
  package: microsoft.servicefabric.services.remoting.builder
- uid: 77318c5d
  spec.java:
  - name: CompletableFuture<TRetval>
    fullName: CompletableFuture<TRetval>
- uid: d2898f57
  spec.java:
  - name: <TRetval> CompletableFuture<Object>
    fullName: <TRetval> CompletableFuture<Object>
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWithResult*
  name: continueWithResult
  nameWithType: MethodDispatcherBase.continueWithResult
  fullName: protected<TRetval> CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWithResult
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.services.remoting._method_dispatcher
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting._method_dispatcher.yml
  name: MethodDispatcher
  nameWithType: MethodDispatcher
  fullName: microsoft.servicefabric.services.remoting.MethodDispatcher
  type: Interface
  syntax:
    content: public interface MethodDispatcher
- uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base_with_serializer
  parent: microsoft.servicefabric.services.remoting.builder
  href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base_with_serializer.yml
  name: MethodDispatcherBaseWithSerializer
  nameWithType: MethodDispatcherBaseWithSerializer
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer
  type: Class
  syntax:
    content: public class MethodDispatcherBaseWithSerializer
- uid: microsoft.servicefabric.services.remoting._method_dispatcher.getInterfaceId()
  parent: microsoft.servicefabric.services.remoting._method_dispatcher
  href: microsoft.servicefabric.services.remoting._method_dispatcher.yml
  name: getInterfaceId()
  nameWithType: MethodDispatcher.getInterfaceId()
  fullName: int microsoft.servicefabric.services.remoting.MethodDispatcher.getInterfaceId()
  type: Method
  syntax:
    content: public int getInterfaceId()
    return:
      type: f75371fa
- uid: microsoft.servicefabric.services.remoting._method_dispatcher.getMethodName(int)
  parent: microsoft.servicefabric.services.remoting._method_dispatcher
  href: microsoft.servicefabric.services.remoting._method_dispatcher.yml
  name: getMethodName(int methodId)
  nameWithType: MethodDispatcher.getMethodName(int methodId)
  fullName: String microsoft.servicefabric.services.remoting.MethodDispatcher.getMethodName(int methodId)
  type: Method
  syntax:
    content: public String getMethodName(int methodId)
    parameters:
    - id: methodId
      type: f75371fa
    return:
      type: "26831127"
- uid: microsoft.servicefabric.services.remoting._method_dispatcher.dispatchAsync(Object,int,Object)
  parent: microsoft.servicefabric.services.remoting._method_dispatcher
  href: microsoft.servicefabric.services.remoting._method_dispatcher.yml
  name: dispatchAsync(Object objectImplementation, int methodId, Object requestBody)
  nameWithType: MethodDispatcher.dispatchAsync(Object objectImplementation, int methodId, Object requestBody)
  fullName: CompletableFuture<Object> microsoft.servicefabric.services.remoting.MethodDispatcher.dispatchAsync(Object objectImplementation, int methodId, Object requestBody)
  type: Method
  syntax:
    content: public CompletableFuture<Object> dispatchAsync(Object objectImplementation, int methodId, Object requestBody)
    parameters:
    - id: objectImplementation
      type: "79317049"
    - id: methodId
      type: f75371fa
    - id: requestBody
      type: "79317049"
    return:
      type: 55aa5245
- uid: microsoft.servicefabric.services.remoting._method_dispatcher.dispatch(Object,int,Object)
  parent: microsoft.servicefabric.services.remoting._method_dispatcher
  href: microsoft.servicefabric.services.remoting._method_dispatcher.yml
  name: dispatch(Object objectImplementation, int methodId, Object requestBody)
  nameWithType: MethodDispatcher.dispatch(Object objectImplementation, int methodId, Object requestBody)
  fullName: void microsoft.servicefabric.services.remoting.MethodDispatcher.dispatch(Object objectImplementation, int methodId, Object requestBody)
  type: Method
  syntax:
    content: public void dispatch(Object objectImplementation, int methodId, Object requestBody)
    parameters:
    - id: objectImplementation
      type: "79317049"
    - id: methodId
      type: f75371fa
    - id: requestBody
      type: "79317049"
- uid: microsoft.servicefabric.services.remoting._service
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting._service.yml
  name: Service
  nameWithType: Service
  fullName: microsoft.servicefabric.services.remoting.Service
  type: Interface
  summary: <p>This is the marker interface for enabling interface Remoting for services. An <xref href="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false"></xref> provides remoting for all interfaces implemented by the service that derive from this interface. The remoted interfaces can be accessed via Proxy on the client side. </p>
  syntax:
    content: public interface Service
