### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.Filters"
fullName: "com.azure.resourcemanager.mediaservices.models.Filters"
name: "Filters"
nameWithType: "Filters"
summary: "Describes all the filtering operations, such as de-interlacing, rotation etc."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Filters"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.Filters.Filters()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Filters.Filters()"
  name: "Filters()"
  nameWithType: "Filters.Filters()"
  syntax: "public Filters()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.Filters.crop()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Filters.crop()"
  name: "crop()"
  nameWithType: "Filters.crop()"
  summary: "Get the crop property: The parameters for the rectangular window with which to crop the input video."
  syntax: "public Rectangle crop()"
  desc: "Get the crop property: The parameters for the rectangular window with which to crop the input video."
  returns:
    description: "the crop value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Rectangle?alt=com.azure.resourcemanager.mediaservices.models.Rectangle&text=Rectangle\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Filters.deinterlace()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Filters.deinterlace()"
  name: "deinterlace()"
  nameWithType: "Filters.deinterlace()"
  summary: "Get the deinterlace property: The de-interlacing settings."
  syntax: "public Deinterlace deinterlace()"
  desc: "Get the deinterlace property: The de-interlacing settings."
  returns:
    description: "the deinterlace value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Deinterlace?alt=com.azure.resourcemanager.mediaservices.models.Deinterlace&text=Deinterlace\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Filters.overlays()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Filters.overlays()"
  name: "overlays()"
  nameWithType: "Filters.overlays()"
  summary: "Get the overlays property: The properties of overlays to be applied to the input video."
  syntax: "public List<Overlay> overlays()"
  desc: "Get the overlays property: The properties of overlays to be applied to the input video. These could be audio, image or video overlays."
  returns:
    description: "the overlays value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.Overlay?alt=com.azure.resourcemanager.mediaservices.models.Overlay&text=Overlay\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Filters.rotation()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Filters.rotation()"
  name: "rotation()"
  nameWithType: "Filters.rotation()"
  summary: "Get the rotation property: The rotation, if any, to be applied to the input video, before it is encoded."
  syntax: "public Rotation rotation()"
  desc: "Get the rotation property: The rotation, if any, to be applied to the input video, before it is encoded. Default is Auto."
  returns:
    description: "the rotation value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Rotation?alt=com.azure.resourcemanager.mediaservices.models.Rotation&text=Rotation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Filters.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Filters.validate()"
  name: "validate()"
  nameWithType: "Filters.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.Filters.withCrop(com.azure.resourcemanager.mediaservices.models.Rectangle)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Filters.withCrop(Rectangle crop)"
  name: "withCrop(Rectangle crop)"
  nameWithType: "Filters.withCrop(Rectangle crop)"
  summary: "Set the crop property: The parameters for the rectangular window with which to crop the input video."
  parameters:
  - description: "the crop value to set."
    name: "crop"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Rectangle?alt=com.azure.resourcemanager.mediaservices.models.Rectangle&text=Rectangle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Filters withCrop(Rectangle crop)"
  desc: "Set the crop property: The parameters for the rectangular window with which to crop the input video."
  returns:
    description: "the Filters object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Filters?alt=com.azure.resourcemanager.mediaservices.models.Filters&text=Filters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Filters.withDeinterlace(com.azure.resourcemanager.mediaservices.models.Deinterlace)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Filters.withDeinterlace(Deinterlace deinterlace)"
  name: "withDeinterlace(Deinterlace deinterlace)"
  nameWithType: "Filters.withDeinterlace(Deinterlace deinterlace)"
  summary: "Set the deinterlace property: The de-interlacing settings."
  parameters:
  - description: "the deinterlace value to set."
    name: "deinterlace"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Deinterlace?alt=com.azure.resourcemanager.mediaservices.models.Deinterlace&text=Deinterlace\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Filters withDeinterlace(Deinterlace deinterlace)"
  desc: "Set the deinterlace property: The de-interlacing settings."
  returns:
    description: "the Filters object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Filters?alt=com.azure.resourcemanager.mediaservices.models.Filters&text=Filters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Filters.withOverlays(java.util.List<com.azure.resourcemanager.mediaservices.models.Overlay>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Filters.withOverlays(List<Overlay> overlays)"
  name: "withOverlays(List<Overlay> overlays)"
  nameWithType: "Filters.withOverlays(List<Overlay> overlays)"
  summary: "Set the overlays property: The properties of overlays to be applied to the input video."
  parameters:
  - description: "the overlays value to set."
    name: "overlays"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.Overlay?alt=com.azure.resourcemanager.mediaservices.models.Overlay&text=Overlay\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Filters withOverlays(List<Overlay> overlays)"
  desc: "Set the overlays property: The properties of overlays to be applied to the input video. These could be audio, image or video overlays."
  returns:
    description: "the Filters object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Filters?alt=com.azure.resourcemanager.mediaservices.models.Filters&text=Filters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Filters.withRotation(com.azure.resourcemanager.mediaservices.models.Rotation)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Filters.withRotation(Rotation rotation)"
  name: "withRotation(Rotation rotation)"
  nameWithType: "Filters.withRotation(Rotation rotation)"
  summary: "Set the rotation property: The rotation, if any, to be applied to the input video, before it is encoded."
  parameters:
  - description: "the rotation value to set."
    name: "rotation"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Rotation?alt=com.azure.resourcemanager.mediaservices.models.Rotation&text=Rotation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Filters withRotation(Rotation rotation)"
  desc: "Set the rotation property: The rotation, if any, to be applied to the input video, before it is encoded. Default is Auto."
  returns:
    description: "the Filters object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Filters?alt=com.azure.resourcemanager.mediaservices.models.Filters&text=Filters\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media before encoding."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0
