### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription"
  id: "LinkSubscription"
  parent: "com.azure.core.amqp.implementation"
  children:
  - "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.dispose()"
  - "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.getLink()"
  - "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.getSubscription()"
  langs:
  - "java"
  name: "ReactorSession.LinkSubscription<T>"
  nameWithType: "ReactorSession.LinkSubscription<T>"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription<T>"
  type: "Class"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "private static final class ReactorSession.LinkSubscription<T> implements Disposable"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  implements:
  - "reactor.core.Disposable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.LinkSubscription(T,reactor.core.Disposable)"
  id: "LinkSubscription(T,reactor.core.Disposable)"
  parent: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription"
  langs:
  - "java"
  name: "LinkSubscription(T link, Disposable subscription)"
  nameWithType: "ReactorSession.LinkSubscription<T>.LinkSubscription(T link, Disposable subscription)"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription<T>.LinkSubscription(T link, Disposable subscription)"
  overload: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.LinkSubscription*"
  type: "Constructor"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "private LinkSubscription(T link, Disposable subscription)"
    parameters:
    - id: "link"
      type: "T"
    - id: "subscription"
      type: "reactor.core.Disposable"
- uid: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.dispose()"
  id: "dispose()"
  parent: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription"
  langs:
  - "java"
  name: "dispose()"
  nameWithType: "ReactorSession.LinkSubscription<T>.dispose()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription<T>.dispose()"
  overload: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.dispose*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public void dispose()"
- uid: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.getLink()"
  id: "getLink()"
  parent: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription"
  langs:
  - "java"
  name: "getLink()"
  nameWithType: "ReactorSession.LinkSubscription<T>.getLink()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription<T>.getLink()"
  overload: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.getLink*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public T getLink()"
    return:
      type: "T"
- uid: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.getSubscription()"
  id: "getSubscription()"
  parent: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription"
  langs:
  - "java"
  name: "getSubscription()"
  nameWithType: "ReactorSession.LinkSubscription<T>.getSubscription()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription<T>.getSubscription()"
  overload: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.getSubscription*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public Disposable getSubscription()"
    return:
      type: "reactor.core.Disposable"
references:
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "reactor.core.Disposable"
  spec.java:
  - uid: "reactor.core.Disposable"
    name: "Disposable"
    fullName: "reactor.core.Disposable"
- uid: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.LinkSubscription*"
  name: "LinkSubscription"
  nameWithType: "ReactorSession.LinkSubscription<T>.LinkSubscription"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription<T>.LinkSubscription"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.getSubscription*"
  name: "getSubscription"
  nameWithType: "ReactorSession.LinkSubscription<T>.getSubscription"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription<T>.getSubscription"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.getLink*"
  name: "getLink"
  nameWithType: "ReactorSession.LinkSubscription<T>.getLink"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription<T>.getLink"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription.dispose*"
  name: "dispose"
  nameWithType: "ReactorSession.LinkSubscription<T>.dispose"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription<T>.dispose"
  package: "com.azure.core.amqp.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
