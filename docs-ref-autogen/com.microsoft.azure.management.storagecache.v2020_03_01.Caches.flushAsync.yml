### YamlMime:JavaMember
uid: "com.microsoft.azure.management.storagecache.v2020_03_01.Caches.flushAsync*"
fullName: "com.microsoft.azure.management.storagecache.v2020_03_01.Caches.flushAsync"
name: "flushAsync"
nameWithType: "Caches.flushAsync"
members:
- uid: "com.microsoft.azure.management.storagecache.v2020_03_01.Caches.flushAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.storagecache.v2020_03_01.Caches.flushAsync(String resourceGroupName, String cacheName)"
  name: "flushAsync(String resourceGroupName, String cacheName)"
  nameWithType: "Caches.flushAsync(String resourceGroupName, String cacheName)"
  summary: "Tells a Cache to write all dirty data to the Storage Target(s). During the flush, clients will see errors returned until the flush is complete."
  parameters:
  - description: "Target resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of Cache. Length of name must be not greater than 80 and chars must be in list of [-0-9a-zA-Z_] char class."
    name: "cacheName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Object> flushAsync(String resourceGroupName, String cacheName)"
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.storagecache.v2020_03_01"
artifact: com.microsoft.azure.storagecache.v2020_03_01:azure-mgmt-storagecache:1.0.0-beta
