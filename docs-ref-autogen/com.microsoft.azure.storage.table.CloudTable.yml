### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.table.CloudTable.CloudTable(final StorageUri uri)
  name: CloudTable(final StorageUri uri)
  nameWithType: CloudTable.CloudTable(final StorageUri uri)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the absolute URI of the table.</p>
    name: uri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified table URI. The table URI must include a SAS token.</p>

    <p></p>
  syntax: public CloudTable(final StorageUri uri)
  uid: com.microsoft.azure.storage.table.CloudTable.CloudTable(final StorageUri)
- fullName: com.microsoft.azure.storage.table.CloudTable.CloudTable(final StorageUri uri, final StorageCredentials credentials)
  name: CloudTable(final StorageUri uri, final StorageCredentials credentials)
  nameWithType: CloudTable.CloudTable(final StorageUri uri, final StorageCredentials credentials)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the absolute StorageUri of the table. </p>
    name: uri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access.</p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified table StorageUri and credentials.</p>

    <p></p>
  syntax: public CloudTable(final StorageUri uri, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.table.CloudTable.CloudTable(final StorageUri,final StorageCredentials)
- fullName: com.microsoft.azure.storage.table.CloudTable.CloudTable(final String tableName, final CloudTableClient client)
  name: CloudTable(final String tableName, final CloudTableClient client)
  nameWithType: CloudTable.CloudTable(final String tableName, final CloudTableClient client)
  parameters:
  - description: <p>A <code>String</code> which represents the name of the table, which must adhere to table naming rules. The table name should not include any path separator characters (/). Table names are case insensitive, must be unique within an account and must be between 3-63 characters long. Table names must start with an cannot begin with a numeric character and may only contain alphanumeric characters. Some table names are reserved, including "table". </p>
    name: tableName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> object that represents the associated service client, and that specifies the endpoint for the Table service.</p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.table.CloudTableClient?alt=com.microsoft.azure.storage.table.CloudTableClient&text=CloudTableClient" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI constructed based on the tableName is invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified name and client.</p>

    <p></p>
  syntax: protected CloudTable(final String tableName, final CloudTableClient client)
  uid: com.microsoft.azure.storage.table.CloudTable.CloudTable(final String,final CloudTableClient)
- fullName: com.microsoft.azure.storage.table.CloudTable.CloudTable(final URI uri)
  name: CloudTable(final URI uri)
  nameWithType: CloudTable.CloudTable(final URI uri)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the absolute URI of the table.</p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified table URI. The table URI must include a SAS token.</p>

    <p></p>
  syntax: public CloudTable(final URI uri)
  uid: com.microsoft.azure.storage.table.CloudTable.CloudTable(final URI)
- fullName: com.microsoft.azure.storage.table.CloudTable.CloudTable(final URI uri, final StorageCredentials credentials)
  name: CloudTable(final URI uri, final StorageCredentials credentials)
  nameWithType: CloudTable.CloudTable(final URI uri, final StorageCredentials credentials)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the absolute URI of the table. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access.</p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified table URI and credentials.</p>

    <p></p>
  syntax: public CloudTable(final URI uri, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.table.CloudTable.CloudTable(final URI,final StorageCredentials)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.table.CloudTable.create()
  name: create()
  nameWithType: CloudTable.create()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Creates the table in the storage service with default request options. </p>

    <p>This method invokes the <a href="http://msdn.microsoft.com/en-us/library/azure/dd135729.aspx">Create Table</a> REST API to create the specified table, using the Table service endpoint and storage account credentials of this instance.</p>

    <p></p>
  syntax: public void create()
  uid: com.microsoft.azure.storage.table.CloudTable.create()
- fullName: com.microsoft.azure.storage.table.CloudTable.create(TableRequestOptions options, OperationContext opContext)
  name: create(TableRequestOptions options, OperationContext opContext)
  nameWithType: CloudTable.create(TableRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. Specify <code>null</code> to use the request options specified on the <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>. </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object for tracking the current operation. Specify <code>null</code> to safely ignore operation context.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If an error occurs accessing the storage service, or because the table cannot be created, or already exists. </p>
  summary: >-
    <p>Creates the table in the storage service, using the specified <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> and <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref>. </p>

    <p>This method invokes the <a href="http://msdn.microsoft.com/en-us/library/azure/dd135729.aspx">Create Table</a> REST API to create the specified table, using the Table service endpoint and storage account credentials of this instance.</p>

    <p>Use the <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> to override execution options such as the timeout or retry policy for the operation.</p>

    <p></p>
  syntax: public void create(TableRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.create(TableRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.table.CloudTable.createIfNotExists()
  name: createIfNotExists()
  nameWithType: CloudTable.createIfNotExists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the table is created in the storage service; otherwise <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates the table in the storage service using default request options if it does not already exist.</p>

    <p></p>
  syntax: public boolean createIfNotExists()
  uid: com.microsoft.azure.storage.table.CloudTable.createIfNotExists()
- fullName: com.microsoft.azure.storage.table.CloudTable.createIfNotExists(TableRequestOptions options, OperationContext opContext)
  name: createIfNotExists(TableRequestOptions options, OperationContext opContext)
  nameWithType: CloudTable.createIfNotExists(TableRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the table did not already exist and was created; otherwise <code>false</code> .</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates the table in the storage service with the specified request options and operation context, if it does not already exist.</p>

    <p></p>
  syntax: public boolean createIfNotExists(TableRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.createIfNotExists(TableRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.table.CloudTable.delete()
  name: delete()
  nameWithType: CloudTable.delete()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Deletes the table from the storage service.</p>

    <p></p>
  syntax: public void delete()
  uid: com.microsoft.azure.storage.table.CloudTable.delete()
- fullName: com.microsoft.azure.storage.table.CloudTable.delete(TableRequestOptions options, OperationContext opContext)
  name: delete(TableRequestOptions options, OperationContext opContext)
  nameWithType: CloudTable.delete(TableRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Deletes the table from the storage service, using the specified request options and operation context.</p>

    <p></p>
  syntax: public void delete(TableRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.delete(TableRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.table.CloudTable.deleteIfExists()
  name: deleteIfExists()
  nameWithType: CloudTable.deleteIfExists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the table existed in the storage service and has been deleted; otherwise <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the table from the storage service, if it exists.</p>

    <p></p>
  syntax: public boolean deleteIfExists()
  uid: com.microsoft.azure.storage.table.CloudTable.deleteIfExists()
- fullName: com.microsoft.azure.storage.table.CloudTable.deleteIfExists(TableRequestOptions options, OperationContext opContext)
  name: deleteIfExists(TableRequestOptions options, OperationContext opContext)
  nameWithType: CloudTable.deleteIfExists(TableRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>A value of <code>true</code> if the table existed in the storage service and has been deleted, otherwise <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the table from the storage service using the specified request options and operation context, if it exists.</p>

    <p></p>
  syntax: public boolean deleteIfExists(TableRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.deleteIfExists(TableRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.table.CloudTable.downloadPermissions()
  name: downloadPermissions()
  nameWithType: CloudTable.downloadPermissions()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.table.TablePermissions" data-throw-if-not-resolved="false" data-raw-source="TablePermissions"></xref> object that represents the container's permissions.</p>
    type: <xref href="com.microsoft.azure.storage.table.TablePermissions?alt=com.microsoft.azure.storage.table.TablePermissions&text=TablePermissions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads the permission settings for the table.</p>

    <p></p>
  syntax: public TablePermissions downloadPermissions()
  uid: com.microsoft.azure.storage.table.CloudTable.downloadPermissions()
- fullName: com.microsoft.azure.storage.table.CloudTable.downloadPermissions(TableRequestOptions options, OperationContext opContext)
  name: downloadPermissions(TableRequestOptions options, OperationContext opContext)
  nameWithType: CloudTable.downloadPermissions(TableRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.table.TablePermissions" data-throw-if-not-resolved="false" data-raw-source="TablePermissions"></xref> object that represents the table's permissions.</p>
    type: <xref href="com.microsoft.azure.storage.table.TablePermissions?alt=com.microsoft.azure.storage.table.TablePermissions&text=TablePermissions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads the permissions settings for the table using the specified request options and operation context.</p>

    <p></p>
  syntax: public TablePermissions downloadPermissions(TableRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.downloadPermissions(TableRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.table.CloudTable.execute(final TableBatchOperation batch)
  name: execute(final TableBatchOperation batch)
  nameWithType: CloudTable.execute(final TableBatchOperation batch)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.storage.table.TableBatchOperation" data-throw-if-not-resolved="false" data-raw-source="TableBatchOperation"></xref> object representing the operations to execute on the table.</p>
    name: batch
    type: final <xref href="com.microsoft.azure.storage.table.TableBatchOperation?alt=com.microsoft.azure.storage.table.TableBatchOperation&text=TableBatchOperation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs accessing the storage service, or the operation fails. </p>
  returns:
    description: <p>A <code>java.util.ArrayList</code> of <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> that contains the results, in order, of each <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> in the <xref uid="com.microsoft.azure.storage.table.TableBatchOperation" data-throw-if-not-resolved="false" data-raw-source="TableBatchOperation"></xref> on the named table.</p>
    type: ArrayList&lt;<xref href="com.microsoft.azure.storage.table.TableResult?alt=com.microsoft.azure.storage.table.TableResult&text=TableResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Executes the specified batch operation on a table as an atomic operation. A batch operation may contain up to 100 individual table operations, with the requirement that each operation entity must have same partition key. Only one retrieve operation is allowed per batch. Note that the total payload of a batch operation is limited to 4MB. </p>

    <p>This method invokes an <a href="http://msdn.microsoft.com/en-us/library/azure/dd894038.aspx">Entity Group Transaction</a> on the REST API to execute the specified batch operation on the table as an atomic unit, using the Table service endpoint and storage account credentials of this instance.</p>

    <p></p>
  syntax: public ArrayList<TableResult> execute(final TableBatchOperation batch)
  uid: com.microsoft.azure.storage.table.CloudTable.execute(final TableBatchOperation)
- fullName: com.microsoft.azure.storage.table.CloudTable.execute(final TableBatchOperation batch, TableRequestOptions options, OperationContext opContext)
  name: execute(final TableBatchOperation batch, TableRequestOptions options, OperationContext opContext)
  nameWithType: CloudTable.execute(final TableBatchOperation batch, TableRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.storage.table.TableBatchOperation" data-throw-if-not-resolved="false" data-raw-source="TableBatchOperation"></xref> object representing the operations to execute on the table. </p>
    name: batch
    type: final <xref href="com.microsoft.azure.storage.table.TableBatchOperation?alt=com.microsoft.azure.storage.table.TableBatchOperation&text=TableBatchOperation" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. Specify <code>null</code> to use the request options specified on the <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>. </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object for tracking the current operation. Specify <code>null</code> to safely ignore operation context.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs accessing the storage service, or the operation fails. </p>
  returns:
    description: <p>A <code>java.util.ArrayList</code> of <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> that contains the results, in order, of each <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> in the <xref uid="com.microsoft.azure.storage.table.TableBatchOperation" data-throw-if-not-resolved="false" data-raw-source="TableBatchOperation"></xref> on the named table.</p>
    type: ArrayList&lt;<xref href="com.microsoft.azure.storage.table.TableResult?alt=com.microsoft.azure.storage.table.TableResult&text=TableResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Executes the specified batch operation on a table as an atomic operation, using the specified <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> and <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref>. A batch operation may contain up to 100 individual table operations, with the requirement that each operation entity must have same partition key. Only one retrieve operation is allowed per batch. Note that the total payload of a batch operation is limited to 4MB. </p>

    <p>This method invokes an <a href="http://msdn.microsoft.com/en-us/library/azure/dd894038.aspx">Entity Group Transaction</a> on the REST API to execute the specified batch operation on the table as an atomic unit, using the Table service endpoint and storage account credentials of this instance.</p>

    <p>Use the <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> to override execution options such as the timeout or retry policy for the operation.</p>

    <p></p>
  syntax: public ArrayList<TableResult> execute(final TableBatchOperation batch, TableRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.execute(final TableBatchOperation,TableRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation operation)
  name: execute(final TableOperation operation)
  nameWithType: CloudTable.execute(final TableOperation operation)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> object representing the operation to execute on the table.</p>
    name: operation
    type: final <xref href="com.microsoft.azure.storage.table.TableOperation?alt=com.microsoft.azure.storage.table.TableOperation&text=TableOperation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs accessing the storage service, or the operation fails. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> containing the result of executing the <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> on the table.</p>
    type: <xref href="com.microsoft.azure.storage.table.TableResult?alt=com.microsoft.azure.storage.table.TableResult&text=TableResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Executes the operation on a table. </p>

    <p>This method will invoke the <a href="http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx">Table Service REST API</a> to execute the specified operation on the table, using the Table service endpoint and storage account credentials of this instance.</p>

    <p></p>
  syntax: public TableResult execute(final TableOperation operation)
  uid: com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)
- fullName: com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation operation, final TableRequestOptions options, final OperationContext opContext)
  name: execute(final TableOperation operation, final TableRequestOptions options, final OperationContext opContext)
  nameWithType: CloudTable.execute(final TableOperation operation, final TableRequestOptions options, final OperationContext opContext)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> object representing the operation to execute on the table. </p>
    name: operation
    type: final <xref href="com.microsoft.azure.storage.table.TableOperation?alt=com.microsoft.azure.storage.table.TableOperation&text=TableOperation" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. Specify <code>null</code> to use the request options specified on the <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>. </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object for tracking the current operation. Specify <code>null</code> to safely ignore operation context.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs accessing the storage service, or the operation fails. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> containing the result of executing the <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> on the table.</p>
    type: <xref href="com.microsoft.azure.storage.table.TableResult?alt=com.microsoft.azure.storage.table.TableResult&text=TableResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Executes the operation on a table, using the specified <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> and <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref>. </p>

    <p>This method will invoke the <a href="http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx">Table Service REST API</a> to execute the specified operation on the table, using the Table service endpoint and storage account credentials of this instance.</p>

    <p>Use the <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> to override execution options such as the timeout or retry policy for the operation.</p>

    <p></p>
  syntax: public TableResult execute(final TableOperation operation, final TableRequestOptions options, final OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation,final TableRequestOptions,final OperationContext)
- fullName: com.microsoft.azure.storage.table.CloudTable.execute(final TableQuery<?> query, final EntityResolver<R> resolver)
  name: execute(final TableQuery<?> query, final EntityResolver<R> resolver)
  nameWithType: CloudTable.execute(final TableQuery<?> query, final EntityResolver<R> resolver)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableQuery" data-throw-if-not-resolved="false" data-raw-source="TableQuery"></xref> instance specifying the table to query and the query parameters to use. </p>
    name: query
    type: final <xref href="com.microsoft.azure.storage.table.TableQuery?alt=com.microsoft.azure.storage.table.TableQuery&text=TableQuery" data-throw-if-not-resolved="False"/>&lt;?&gt;
  - description: <p>An <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> instance which creates a projection of the table query result entities into the specified type <code>R</code>.</p>
    name: resolver
    type: final <xref href="com.microsoft.azure.storage.table.EntityResolver?alt=com.microsoft.azure.storage.table.EntityResolver&text=EntityResolver" data-throw-if-not-resolved="False"/>&lt;R&gt;
  returns:
    description: <p>A collection implementing the <code>Iterable</code> interface containing the projection into type <code>R</code> of the results of executing the query. </p>
    type: <xref href="%3CR%3E+Iterable%3CR%3E?alt=%3CR%3E+Iterable%3CR%3E&text=%3CR%3E+Iterable%3CR%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Executes a query, applying the specified <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> to the result. </p>

    <p>This method will invoke a <a href="http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx">Query Entities</a> operation on the <a href="http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx">Table Service REST API</a> to query the table, using the Table service endpoint and storage account credentials of this instance.</p>

    <p></p>
  syntax: public <R> Iterable<R> execute(final TableQuery<?> query, final EntityResolver<R> resolver)
  uid: com.microsoft.azure.storage.table.CloudTable.execute(final TableQuery<?>,final EntityResolver<R>)
- fullName: com.microsoft.azure.storage.table.CloudTable.execute(final TableQuery<?> query, final EntityResolver<R> resolver, final TableRequestOptions options, final OperationContext opContext)
  name: execute(final TableQuery<?> query, final EntityResolver<R> resolver, final TableRequestOptions options, final OperationContext opContext)
  nameWithType: CloudTable.execute(final TableQuery<?> query, final EntityResolver<R> resolver, final TableRequestOptions options, final OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableQuery" data-throw-if-not-resolved="false" data-raw-source="TableQuery"></xref> instance specifying the table to query and the query parameters to use. </p>
    name: query
    type: final <xref href="com.microsoft.azure.storage.table.TableQuery?alt=com.microsoft.azure.storage.table.TableQuery&text=TableQuery" data-throw-if-not-resolved="False"/>&lt;?&gt;
  - description: <p>An <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> instance which creates a projection of the table query result entities into the specified type <code>R</code>. </p>
    name: resolver
    type: final <xref href="com.microsoft.azure.storage.table.EntityResolver?alt=com.microsoft.azure.storage.table.EntityResolver&text=EntityResolver" data-throw-if-not-resolved="False"/>&lt;R&gt;
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. Specify <code>null</code> to use the request options specified on the <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>. </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object for tracking the current operation. Specify <code>null</code> to safely ignore operation context.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A collection implementing the <code>Iterable</code> interface containing the projection into type <code>R</code> of the results of executing the query. </p>
    type: <xref href="%3CR%3E+Iterable%3CR%3E?alt=%3CR%3E+Iterable%3CR%3E&text=%3CR%3E+Iterable%3CR%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Executes a query, applying the specified <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> to the result, using the specified <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> and <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref>. </p>

    <p>This method will invoke a <a href="http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx">Query Entities</a> operation on the <a href="http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx">Table Service REST API</a> to query the table, using the Table service endpoint and storage account credentials of this instance.</p>

    <p>Use the <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> to override execution options such as the timeout or retry policy for the operation.</p>

    <p></p>
  syntax: public <R> Iterable<R> execute(final TableQuery<?> query, final EntityResolver<R> resolver, final TableRequestOptions options, final OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.execute(final TableQuery<?>,final EntityResolver<R>,final TableRequestOptions,final OperationContext)
- fullName: com.microsoft.azure.storage.table.CloudTable.execute(final TableQuery<T> query)
  name: execute(final TableQuery<T> query)
  nameWithType: CloudTable.execute(final TableQuery<T> query)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableQuery" data-throw-if-not-resolved="false" data-raw-source="TableQuery"></xref> instance specifying the table to query and the query parameters to use, specialized for a type T implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref>.</p>
    name: query
    type: final <xref href="com.microsoft.azure.storage.table.TableQuery?alt=com.microsoft.azure.storage.table.TableQuery&text=TableQuery" data-throw-if-not-resolved="False"/>&lt;T&gt;
  returns:
    description: <p>A collection implementing the <code>Iterable</code> interface specialized for type T of the results of executing the query. </p>
    type: '&lt;T extends <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>&gt; Iterable&lt;T&gt;'
  summary: >-
    <p>Executes a query. </p>

    <p>This method will invoke a <a href="http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx">Query Entities</a> operation on the <a href="http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx">Table Service REST API</a> to query the table, using the Table service endpoint and storage account credentials of this instance.</p>

    <p></p>
  syntax: public <T extends TableEntity> Iterable<T> execute(final TableQuery<T> query)
  uid: com.microsoft.azure.storage.table.CloudTable.execute(final TableQuery<T>)
- fullName: com.microsoft.azure.storage.table.CloudTable.execute(final TableQuery<T> query, final TableRequestOptions options, final OperationContext opContext)
  name: execute(final TableQuery<T> query, final TableRequestOptions options, final OperationContext opContext)
  nameWithType: CloudTable.execute(final TableQuery<T> query, final TableRequestOptions options, final OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableQuery" data-throw-if-not-resolved="false" data-raw-source="TableQuery"></xref> instance specifying the table to query and the query parameters to use, specialized for a type T implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref>. </p>
    name: query
    type: final <xref href="com.microsoft.azure.storage.table.TableQuery?alt=com.microsoft.azure.storage.table.TableQuery&text=TableQuery" data-throw-if-not-resolved="False"/>&lt;T&gt;
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. Specify <code>null</code> to use the request options specified on the <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>. </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object for tracking the current operation. Specify <code>null</code> to safely ignore operation context.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A collection implementing the <code>Iterable</code> interface specialized for type T of the results of executing the query. </p>
    type: '&lt;T extends <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>&gt; Iterable&lt;T&gt;'
  summary: >-
    <p>Executes a query, using the specified <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> and <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref>. </p>

    <p>This method will invoke a <a href="http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx">Query Entities</a> operation on the <a href="http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx">Table Service REST API</a> to query the table, using the Table service endpoint and storage account credentials of this instance.</p>

    <p>Use the <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> to override execution options such as the timeout or retry policy for the operation.</p>

    <p></p>
  syntax: public <T extends TableEntity> Iterable<T> execute(final TableQuery<T> query, final TableRequestOptions options, final OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.execute(final TableQuery<T>,final TableRequestOptions,final OperationContext)
- fullName: com.microsoft.azure.storage.table.CloudTable.executeSegmented(final TableQuery<?> query, final EntityResolver<R> resolver, final ResultContinuation continuationToken)
  name: executeSegmented(final TableQuery<?> query, final EntityResolver<R> resolver, final ResultContinuation continuationToken)
  nameWithType: CloudTable.executeSegmented(final TableQuery<?> query, final EntityResolver<R> resolver, final ResultContinuation continuationToken)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableQuery" data-throw-if-not-resolved="false" data-raw-source="TableQuery"></xref> instance specifying the table to query and the query parameters to use. </p>
    name: query
    type: final <xref href="com.microsoft.azure.storage.table.TableQuery?alt=com.microsoft.azure.storage.table.TableQuery&text=TableQuery" data-throw-if-not-resolved="False"/>&lt;?&gt;
  - description: <p>An <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> instance which creates a projection of the table query result entities into the specified type <code>R</code>. </p>
    name: resolver
    type: final <xref href="com.microsoft.azure.storage.table.EntityResolver?alt=com.microsoft.azure.storage.table.EntityResolver&text=EntityResolver" data-throw-if-not-resolved="False"/>&lt;R&gt;
  - description: <p>A <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object representing a continuation token from the server when the operation returns a partial result. Specify <code>null</code> on the initial call. Call the <xref uid="com.microsoft.azure.storage.ResultSegment.getContinuationToken()" data-throw-if-not-resolved="false" data-raw-source="ResultSegment#getContinuationToken()"></xref> method on the result to obtain the <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object to use in the next call to resume the query.</p>
    name: continuationToken
    type: final <xref href="com.microsoft.azure.storage.ResultContinuation?alt=com.microsoft.azure.storage.ResultContinuation&text=ResultContinuation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if a storage service error occurred during the operation. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> containing the projection into type <code>R</code> of the results of executing the query.</p>
    type: '&lt;R&gt; <xref href="com.microsoft.azure.storage.ResultSegment?alt=com.microsoft.azure.storage.ResultSegment&text=ResultSegment" data-throw-if-not-resolved="False"/>&lt;R&gt;'
  summary: >-
    <p>Executes a query in segmented mode with the specified <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> continuation token, applying the <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> to the result. Executing a query with  allows the query to be resumed after returning partial results, using information returned by the server in the <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> object. </p>

    <p>This method will invoke a <a href="http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx">Query Entities</a> operation on the <a href="http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx">Table Service REST API</a> to query the table, using the Table service endpoint and storage account credentials of this instance.</p>

    <p></p>
  syntax: public <R> ResultSegment<R> executeSegmented(final TableQuery<?> query, final EntityResolver<R> resolver, final ResultContinuation continuationToken)
  uid: com.microsoft.azure.storage.table.CloudTable.executeSegmented(final TableQuery<?>,final EntityResolver<R>,final ResultContinuation)
- fullName: com.microsoft.azure.storage.table.CloudTable.executeSegmented(final TableQuery<?> query, final EntityResolver<R> resolver, final ResultContinuation continuationToken, final TableRequestOptions options, final OperationContext opContext)
  name: executeSegmented(final TableQuery<?> query, final EntityResolver<R> resolver, final ResultContinuation continuationToken, final TableRequestOptions options, final OperationContext opContext)
  nameWithType: CloudTable.executeSegmented(final TableQuery<?> query, final EntityResolver<R> resolver, final ResultContinuation continuationToken, final TableRequestOptions options, final OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableQuery" data-throw-if-not-resolved="false" data-raw-source="TableQuery"></xref> instance specifying the table to query and the query parameters to use. </p>
    name: query
    type: final <xref href="com.microsoft.azure.storage.table.TableQuery?alt=com.microsoft.azure.storage.table.TableQuery&text=TableQuery" data-throw-if-not-resolved="False"/>&lt;?&gt;
  - description: <p>An <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> instance which creates a projection of the table query result entities into the specified type <code>R</code>. </p>
    name: resolver
    type: final <xref href="com.microsoft.azure.storage.table.EntityResolver?alt=com.microsoft.azure.storage.table.EntityResolver&text=EntityResolver" data-throw-if-not-resolved="False"/>&lt;R&gt;
  - description: <p>A <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object representing a continuation token from the server when the operation returns a partial result. Specify <code>null</code> on the initial call. Call the <xref uid="com.microsoft.azure.storage.ResultSegment.getContinuationToken()" data-throw-if-not-resolved="false" data-raw-source="ResultSegment#getContinuationToken()"></xref> method on the result to obtain the <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object to use in the next call to resume the query. </p>
    name: continuationToken
    type: final <xref href="com.microsoft.azure.storage.ResultContinuation?alt=com.microsoft.azure.storage.ResultContinuation&text=ResultContinuation" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. Specify <code>null</code> to use the request options specified on the <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>. </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object for tracking the current operation. Specify <code>null</code> to safely ignore operation context.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if a storage service error occurred during the operation. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> containing the projection into type <code>R</code> of the results of executing the query.</p>
    type: '&lt;R&gt; <xref href="com.microsoft.azure.storage.ResultSegment?alt=com.microsoft.azure.storage.ResultSegment&text=ResultSegment" data-throw-if-not-resolved="False"/>&lt;R&gt;'
  summary: >-
    <p>Executes a query in segmented mode with the specified <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> continuation token, using the specified <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> and <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref>, applying the <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> to the result. Executing a query with  allows the query to be resumed after returning partial results, using information returned by the server in the <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> object. </p>

    <p>This method will invoke a <a href="http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx">Query Entities</a> operation on the <a href="http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx">Table Service REST API</a> to query the table, using the Table service endpoint and storage account credentials of this instance.</p>

    <p>Use the <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> to override execution options such as the timeout or retry policy for the operation.</p>

    <p></p>
  syntax: public <R> ResultSegment<R> executeSegmented(final TableQuery<?> query, final EntityResolver<R> resolver, final ResultContinuation continuationToken, final TableRequestOptions options, final OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.executeSegmented(final TableQuery<?>,final EntityResolver<R>,final ResultContinuation,final TableRequestOptions,final OperationContext)
- fullName: com.microsoft.azure.storage.table.CloudTable.executeSegmented(final TableQuery<T> query, final ResultContinuation continuationToken)
  name: executeSegmented(final TableQuery<T> query, final ResultContinuation continuationToken)
  nameWithType: CloudTable.executeSegmented(final TableQuery<T> query, final ResultContinuation continuationToken)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableQuery" data-throw-if-not-resolved="false" data-raw-source="TableQuery"></xref> instance specifying the table to query and the query parameters to use, specialized for a type T implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref>. </p>
    name: query
    type: final <xref href="com.microsoft.azure.storage.table.TableQuery?alt=com.microsoft.azure.storage.table.TableQuery&text=TableQuery" data-throw-if-not-resolved="False"/>&lt;T&gt;
  - description: <p>A <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object representing a continuation token from the server when the operation returns a partial result. Specify <code>null</code> on the initial call. Call the <xref uid="com.microsoft.azure.storage.ResultSegment.getContinuationToken()" data-throw-if-not-resolved="false" data-raw-source="ResultSegment#getContinuationToken()"></xref> method on the result to obtain the <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object to use in the next call to resume the query.</p>
    name: continuationToken
    type: final <xref href="com.microsoft.azure.storage.ResultContinuation?alt=com.microsoft.azure.storage.ResultContinuation&text=ResultContinuation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if a storage service error occurred during the operation. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> specialized for type T of the results of executing the query.</p>
    type: '&lt;T extends <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>&gt; <xref href="com.microsoft.azure.storage.ResultSegment?alt=com.microsoft.azure.storage.ResultSegment&text=ResultSegment" data-throw-if-not-resolved="False"/>&lt;T&gt;'
  summary: >-
    <p>Executes a query in segmented mode with a <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> continuation token. Executing a query with  allows the query to be resumed after returning partial results, using information returned by the server in the <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> object. </p>

    <p>This method will invoke a <a href="http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx">Query Entities</a> operation on the <a href="http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx">Table Service REST API</a> to query the table, using the Table service endpoint and storage account credentials of this instance.</p>

    <p></p>
  syntax: public <T extends TableEntity> ResultSegment<T> executeSegmented(final TableQuery<T> query, final ResultContinuation continuationToken)
  uid: com.microsoft.azure.storage.table.CloudTable.executeSegmented(final TableQuery<T>,final ResultContinuation)
- fullName: com.microsoft.azure.storage.table.CloudTable.executeSegmented(final TableQuery<T> query, final ResultContinuation continuationToken, final TableRequestOptions options, final OperationContext opContext)
  name: executeSegmented(final TableQuery<T> query, final ResultContinuation continuationToken, final TableRequestOptions options, final OperationContext opContext)
  nameWithType: CloudTable.executeSegmented(final TableQuery<T> query, final ResultContinuation continuationToken, final TableRequestOptions options, final OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableQuery" data-throw-if-not-resolved="false" data-raw-source="TableQuery"></xref> instance specifying the table to query and the query parameters to use, specialized for a type T implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref>. </p>
    name: query
    type: final <xref href="com.microsoft.azure.storage.table.TableQuery?alt=com.microsoft.azure.storage.table.TableQuery&text=TableQuery" data-throw-if-not-resolved="False"/>&lt;T&gt;
  - description: <p>A <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object representing a continuation token from the server when the operation returns a partial result. Specify <code>null</code> on the initial call. Call the <xref uid="com.microsoft.azure.storage.ResultSegment.getContinuationToken()" data-throw-if-not-resolved="false" data-raw-source="ResultSegment#getContinuationToken()"></xref> method on the result to obtain the <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object to use in the next call to resume the query. </p>
    name: continuationToken
    type: final <xref href="com.microsoft.azure.storage.ResultContinuation?alt=com.microsoft.azure.storage.ResultContinuation&text=ResultContinuation" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. Specify <code>null</code> to use the request options specified on the <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>. </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object for tracking the current operation. Specify <code>null</code> to safely ignore operation context.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if a storage service error occurred during the operation. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> specialized for type T of the results of executing the query.</p>
    type: '&lt;T extends <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>&gt; <xref href="com.microsoft.azure.storage.ResultSegment?alt=com.microsoft.azure.storage.ResultSegment&text=ResultSegment" data-throw-if-not-resolved="False"/>&lt;T&gt;'
  summary: >-
    <p>Executes a query in segmented mode with a <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> continuation token, using the specified <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> and <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref>. Executing a query with  allows the query to be resumed after returning partial results, using information returned by the server in the <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> object. </p>

    <p>This method will invoke a <a href="http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx">Query Entities</a> operation on the <a href="http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx">Table Service REST API</a> to query the table, using the Table service endpoint and storage account credentials of this instance.</p>

    <p>Use the <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> to override execution options such as the timeout or retry policy for the operation.</p>

    <p></p>
  syntax: public <T extends TableEntity> ResultSegment<T> executeSegmented(final TableQuery<T> query, final ResultContinuation continuationToken, final TableRequestOptions options, final OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.executeSegmented(final TableQuery<T>,final ResultContinuation,final TableRequestOptions,final OperationContext)
- fullName: com.microsoft.azure.storage.table.CloudTable.exists()
  name: exists()
  nameWithType: CloudTable.exists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the table exists in the storage service; otherwise <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a value that indicates whether the table exists in the storage service.</p>

    <p></p>
  syntax: public boolean exists()
  uid: com.microsoft.azure.storage.table.CloudTable.exists()
- fullName: com.microsoft.azure.storage.table.CloudTable.exists(TableRequestOptions options, OperationContext opContext)
  name: exists(TableRequestOptions options, OperationContext opContext)
  nameWithType: CloudTable.exists(TableRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the table exists in the storage service, otherwise <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a value that indicates whether the table exists in the storage service, using the specified request options and operation context.</p>

    <p></p>
  syntax: public boolean exists(TableRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.exists(TableRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature(final SharedAccessTablePolicy policy, final String accessPolicyIdentifier, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey)
  name: generateSharedAccessSignature(final SharedAccessTablePolicy policy, final String accessPolicyIdentifier, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey)
  nameWithType: CloudTable.generateSharedAccessSignature(final SharedAccessTablePolicy policy, final String accessPolicyIdentifier, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.SharedAccessTablePolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessTablePolicy"></xref> object which represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.table.SharedAccessTablePolicy?alt=com.microsoft.azure.storage.table.SharedAccessTablePolicy&text=SharedAccessTablePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents a table-level access policy. </p>
    name: accessPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the starting partition key. </p>
    name: startPartitionKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the starting row key. </p>
    name: startRowKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the ending partition key. </p>
    name: endPartitionKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the ending end key.</p>
    name: endRowKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If an invalid key was passed. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If an unexpected value is passed. </p>
  returns:
    description: <p>A <code>String</code> containing the shared access signature for the table.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a shared access signature for the table.</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessTablePolicy policy, final String accessPolicyIdentifier, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey)
  uid: com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature(final SharedAccessTablePolicy,final String,final String,final String,final String,final String)
- fullName: com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature(final SharedAccessTablePolicy policy, final String accessPolicyIdentifier, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey, final IPRange ipRange, final SharedAccessProtocols protocols)
  name: generateSharedAccessSignature(final SharedAccessTablePolicy policy, final String accessPolicyIdentifier, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey, final IPRange ipRange, final SharedAccessProtocols protocols)
  nameWithType: CloudTable.generateSharedAccessSignature(final SharedAccessTablePolicy policy, final String accessPolicyIdentifier, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey, final IPRange ipRange, final SharedAccessProtocols protocols)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.SharedAccessTablePolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessTablePolicy"></xref> object which represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.table.SharedAccessTablePolicy?alt=com.microsoft.azure.storage.table.SharedAccessTablePolicy&text=SharedAccessTablePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents a table-level access policy. </p>
    name: accessPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the starting partition key. </p>
    name: startPartitionKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the starting row key. </p>
    name: startRowKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the ending partition key. </p>
    name: endPartitionKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the ending end key. </p>
    name: endRowKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.IPRange" data-throw-if-not-resolved="false" data-raw-source="IPRange"></xref> object containing the range of allowed IP addresses. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.SharedAccessProtocols" data-throw-if-not-resolved="false" data-raw-source="SharedAccessProtocols"></xref> representing the allowed Internet protocols.</p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If an invalid key was passed. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If an unexpected value is passed. </p>
  returns:
    description: <p>A <code>String</code> containing the shared access signature for the table.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a shared access signature for the table.</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessTablePolicy policy, final String accessPolicyIdentifier, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey, final IPRange ipRange, final SharedAccessProtocols protocols)
  uid: com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature(final SharedAccessTablePolicy,final String,final String,final String,final String,final String,final IPRange,final SharedAccessProtocols)
- fullName: com.microsoft.azure.storage.table.CloudTable.getName()
  name: getName()
  nameWithType: CloudTable.getName()
  returns:
    description: <p>A <code>String</code> object that represents the name of the table. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the name of the table.</p>

    <p></p>
  syntax: public String getName()
  uid: com.microsoft.azure.storage.table.CloudTable.getName()
- fullName: com.microsoft.azure.storage.table.CloudTable.getServiceClient()
  name: getServiceClient()
  nameWithType: CloudTable.getServiceClient()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> object that represents the service client associated with this table. </p>
    type: <xref href="com.microsoft.azure.storage.table.CloudTableClient?alt=com.microsoft.azure.storage.table.CloudTableClient&text=CloudTableClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the table service client associated with this queue.</p>

    <p></p>
  syntax: public CloudTableClient getServiceClient()
  uid: com.microsoft.azure.storage.table.CloudTable.getServiceClient()
- fullName: com.microsoft.azure.storage.table.CloudTable.getStorageUri()
  name: getStorageUri()
  nameWithType: CloudTable.getStorageUri()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> that represents the list of URIs for all locations.. </p>
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of URIs for all locations.</p>

    <p></p>
  syntax: public final StorageUri getStorageUri()
  uid: com.microsoft.azure.storage.table.CloudTable.getStorageUri()
- fullName: com.microsoft.azure.storage.table.CloudTable.getUri()
  name: getUri()
  nameWithType: CloudTable.getUri()
  returns:
    description: <p>A <code>java.net.URI</code> object that represents the URI for this table. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the absolute URI for this table.</p>

    <p></p>
  syntax: public URI getUri()
  uid: com.microsoft.azure.storage.table.CloudTable.getUri()
- fullName: com.microsoft.azure.storage.table.CloudTable.uploadPermissions(final TablePermissions permissions)
  name: uploadPermissions(final TablePermissions permissions)
  nameWithType: CloudTable.uploadPermissions(final TablePermissions permissions)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TablePermissions" data-throw-if-not-resolved="false" data-raw-source="TablePermissions"></xref> object that represents the permissions to upload.</p>
    name: permissions
    type: final <xref href="com.microsoft.azure.storage.table.TablePermissions?alt=com.microsoft.azure.storage.table.TablePermissions&text=TablePermissions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the table's permissions.</p>

    <p></p>
  syntax: public void uploadPermissions(final TablePermissions permissions)
  uid: com.microsoft.azure.storage.table.CloudTable.uploadPermissions(final TablePermissions)
- fullName: com.microsoft.azure.storage.table.CloudTable.uploadPermissions(final TablePermissions permissions, TableRequestOptions options, OperationContext opContext)
  name: uploadPermissions(final TablePermissions permissions, TableRequestOptions options, OperationContext opContext)
  nameWithType: CloudTable.uploadPermissions(final TablePermissions permissions, TableRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TablePermissions" data-throw-if-not-resolved="false" data-raw-source="TablePermissions"></xref> object that represents the permissions to upload. </p>
    name: permissions
    type: final <xref href="com.microsoft.azure.storage.table.TablePermissions?alt=com.microsoft.azure.storage.table.TablePermissions&text=TablePermissions" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the table's permissions using the specified request options and operation context.</p>

    <p></p>
  syntax: public void uploadPermissions(final TablePermissions permissions, TableRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.table.CloudTable.uploadPermissions(final TablePermissions,TableRequestOptions,OperationContext)
nameWithType: CloudTable
syntax: public class CloudTable
type: class
uid: com.microsoft.azure.storage.table.CloudTable
fullName: com.microsoft.azure.storage.table.CloudTable
name: CloudTable
package: com.microsoft.azure.storage.table
summary: <p>Represents a table in the Microsoft Azure Table service. </p>
metadata: {}
