### YamlMime:JavaType
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset"
name: "StandardEncoderPreset"
nameWithType: "StandardEncoderPreset"
summary: "Describes all the settings to be used when encoding the input video with the Standard Encoder."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Preset?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class StandardEncoderPreset extends Preset"
constructors:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.StandardEncoderPreset()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.StandardEncoderPreset()"
  name: "StandardEncoderPreset()"
  nameWithType: "StandardEncoderPreset.StandardEncoderPreset()"
  syntax: "public StandardEncoderPreset()"
methods:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.codecs()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.codecs()"
  name: "codecs()"
  nameWithType: "StandardEncoderPreset.codecs()"
  summary: "Get the list of codecs to be used when encoding the input video."
  syntax: "public List<Codec> codecs()"
  desc: "Get the list of codecs to be used when encoding the input video."
  returns:
    description: "the codecs value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Codec?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Codec&text=Codec\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.filters()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.filters()"
  name: "filters()"
  nameWithType: "StandardEncoderPreset.filters()"
  summary: "Get one or more filtering operations that are applied to the input media before encoding."
  syntax: "public Filters filters()"
  desc: "Get one or more filtering operations that are applied to the input media before encoding."
  returns:
    description: "the filters value"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Filters?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Filters&text=Filters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.formats()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.formats()"
  name: "formats()"
  nameWithType: "StandardEncoderPreset.formats()"
  summary: "Get the list of outputs to be produced by the encoder."
  syntax: "public List<Format> formats()"
  desc: "Get the list of outputs to be produced by the encoder."
  returns:
    description: "the formats value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Format?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Format&text=Format\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.withCodecs(java.util.List<com.microsoft.azure.management.mediaservices.v2020_05_01.Codec>)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.withCodecs(List<Codec> codecs)"
  name: "withCodecs(List<Codec> codecs)"
  nameWithType: "StandardEncoderPreset.withCodecs(List<Codec> codecs)"
  summary: "Set the list of codecs to be used when encoding the input video."
  parameters:
  - description: "the codecs value to set"
    name: "codecs"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Codec?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Codec&text=Codec\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public StandardEncoderPreset withCodecs(List<Codec> codecs)"
  desc: "Set the list of codecs to be used when encoding the input video."
  returns:
    description: "the StandardEncoderPreset object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset&text=StandardEncoderPreset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.withFilters(com.microsoft.azure.management.mediaservices.v2020_05_01.Filters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.withFilters(Filters filters)"
  name: "withFilters(Filters filters)"
  nameWithType: "StandardEncoderPreset.withFilters(Filters filters)"
  summary: "Set one or more filtering operations that are applied to the input media before encoding."
  parameters:
  - description: "the filters value to set"
    name: "filters"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Filters?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Filters&text=Filters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StandardEncoderPreset withFilters(Filters filters)"
  desc: "Set one or more filtering operations that are applied to the input media before encoding."
  returns:
    description: "the StandardEncoderPreset object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset&text=StandardEncoderPreset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.withFormats(java.util.List<com.microsoft.azure.management.mediaservices.v2020_05_01.Format>)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset.withFormats(List<Format> formats)"
  name: "withFormats(List<Format> formats)"
  nameWithType: "StandardEncoderPreset.withFormats(List<Format> formats)"
  summary: "Set the list of outputs to be produced by the encoder."
  parameters:
  - description: "the formats value to set"
    name: "formats"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Format?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Format&text=Format\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public StandardEncoderPreset withFormats(List<Format> formats)"
  desc: "Set the list of outputs to be produced by the encoder."
  returns:
    description: "the StandardEncoderPreset object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.StandardEncoderPreset&text=StandardEncoderPreset\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes all the settings to be used when encoding the input video with the Standard Encoder."
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
