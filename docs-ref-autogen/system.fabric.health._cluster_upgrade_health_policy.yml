items:
- uid: system.fabric.health._cluster_upgrade_health_policy
  id: _cluster_upgrade_health_policy
  parent: system.fabric.health
  children:
  - system.fabric.health._cluster_upgrade_health_policy.getMaxPercentDeltaUnhealthyNodes()
  - system.fabric.health._cluster_upgrade_health_policy.getMaxPercentUpgradeDomainDeltaUnhealthyNodes()
  - system.fabric.health._cluster_upgrade_health_policy.setMaxPercentDeltaUnhealthyNodes(byte)
  - system.fabric.health._cluster_upgrade_health_policy.setMaxPercentUpgradeDomainDeltaUnhealthyNodes(byte)
  - system.fabric.health._cluster_upgrade_health_policy.toNative(PinCollection)
  href: system.fabric.health._cluster_upgrade_health_policy.yml
  langs:
  - java
  name: ClusterUpgradeHealthPolicy
  nameWithType: ClusterUpgradeHealthPolicy
  fullName: system.fabric.health.ClusterUpgradeHealthPolicy
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterUpgradeHealthPolicy.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterUpgradeHealthPolicy.java
    startLine: 12
  package: system.fabric.health
  summary: >-
    <p>Defines a health policy used to evaluate the health of the cluster specific to cluster upgrade. </p>

    <p>

      <bold>Remarks:</bold>Itâ€™s used together with <xref href="system.fabric._cluster_health_policy" data-throw-if-not-resolved="false"></xref> to evaluate cluster health and determine whether the monitored cluster upgrade is successful or needs to be rolled back. </p>
  syntax:
    content: public class ClusterUpgradeHealthPolicy
  inheritance:
  - java.lang.Object
- uid: system.fabric.health._cluster_upgrade_health_policy.getMaxPercentDeltaUnhealthyNodes()
  id: getMaxPercentDeltaUnhealthyNodes()
  parent: system.fabric.health._cluster_upgrade_health_policy
  href: system.fabric.health._cluster_upgrade_health_policy.yml
  langs:
  - java
  name: getMaxPercentDeltaUnhealthyNodes()
  nameWithType: ClusterUpgradeHealthPolicy.getMaxPercentDeltaUnhealthyNodes()
  fullName: byte system.fabric.health.ClusterUpgradeHealthPolicy.getMaxPercentDeltaUnhealthyNodes()
  overload: system.fabric.health._cluster_upgrade_health_policy.getMaxPercentDeltaUnhealthyNodes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterUpgradeHealthPolicy.java
    startLine: 45
  package: system.fabric.health
  summary: >-
    <p>Gets the maximum allowed percentage of nodes health degradation allowed during cluster upgrades.</p>

    <p>

      <bold>Remarks:</bold>The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. The default value is 10%. </p>
  syntax:
    content: public byte getMaxPercentDeltaUnhealthyNodes()
    return:
      type: d357ea40
      description: <p>The maximum allowed percentage of delta health degradation. Allowed values are integer values from zero to 100. </p>
- uid: system.fabric.health._cluster_upgrade_health_policy.getMaxPercentUpgradeDomainDeltaUnhealthyNodes()
  id: getMaxPercentUpgradeDomainDeltaUnhealthyNodes()
  parent: system.fabric.health._cluster_upgrade_health_policy
  href: system.fabric.health._cluster_upgrade_health_policy.yml
  langs:
  - java
  name: getMaxPercentUpgradeDomainDeltaUnhealthyNodes()
  nameWithType: ClusterUpgradeHealthPolicy.getMaxPercentUpgradeDomainDeltaUnhealthyNodes()
  fullName: byte system.fabric.health.ClusterUpgradeHealthPolicy.getMaxPercentUpgradeDomainDeltaUnhealthyNodes()
  overload: system.fabric.health._cluster_upgrade_health_policy.getMaxPercentUpgradeDomainDeltaUnhealthyNodes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterUpgradeHealthPolicy.java
    startLine: 89
  package: system.fabric.health
  summary: >-
    <p>Gets the maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.</p>

    <p>

      <bold>Remarks:</bold>The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits. The default value is 15%. </p>
  syntax:
    content: public byte getMaxPercentUpgradeDomainDeltaUnhealthyNodes()
    return:
      type: d357ea40
      description: <p>The maximum allowed percentage of upgrade domain delta health degradation. Allowed values are integer values from zero to 100. </p>
- uid: system.fabric.health._cluster_upgrade_health_policy.setMaxPercentDeltaUnhealthyNodes(byte)
  id: setMaxPercentDeltaUnhealthyNodes(byte)
  parent: system.fabric.health._cluster_upgrade_health_policy
  href: system.fabric.health._cluster_upgrade_health_policy.yml
  langs:
  - java
  name: setMaxPercentDeltaUnhealthyNodes(byte maxPercentDeltaUnhealthyNodes)
  nameWithType: ClusterUpgradeHealthPolicy.setMaxPercentDeltaUnhealthyNodes(byte maxPercentDeltaUnhealthyNodes)
  fullName: void system.fabric.health.ClusterUpgradeHealthPolicy.setMaxPercentDeltaUnhealthyNodes(byte maxPercentDeltaUnhealthyNodes)
  overload: system.fabric.health._cluster_upgrade_health_policy.setMaxPercentDeltaUnhealthyNodes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterUpgradeHealthPolicy.java
    startLine: 65
  package: system.fabric.health
  summary: >-
    <p>Sets the maximum allowed percentage of nodes health degradation allowed during cluster upgrades.</p>

    <p>

      <bold>Remarks:</bold>The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. The default value is 10%. </p>

    <p></p>
  syntax:
    content: public void setMaxPercentDeltaUnhealthyNodes(byte maxPercentDeltaUnhealthyNodes)
    parameters:
    - id: maxPercentDeltaUnhealthyNodes
      type: d357ea40
      description: <p>The maximum allowed percentage of delta health degradation. Allowed values are integer values from zero to 100. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>The specified value was outside the range of integer values from zero to 100. </p>
- uid: system.fabric.health._cluster_upgrade_health_policy.setMaxPercentUpgradeDomainDeltaUnhealthyNodes(byte)
  id: setMaxPercentUpgradeDomainDeltaUnhealthyNodes(byte)
  parent: system.fabric.health._cluster_upgrade_health_policy
  href: system.fabric.health._cluster_upgrade_health_policy.yml
  langs:
  - java
  name: setMaxPercentUpgradeDomainDeltaUnhealthyNodes(byte maxPercentUpgradeDomainDeltaUnhealthyNodes)
  nameWithType: ClusterUpgradeHealthPolicy.setMaxPercentUpgradeDomainDeltaUnhealthyNodes(byte maxPercentUpgradeDomainDeltaUnhealthyNodes)
  fullName: void system.fabric.health.ClusterUpgradeHealthPolicy.setMaxPercentUpgradeDomainDeltaUnhealthyNodes(byte maxPercentUpgradeDomainDeltaUnhealthyNodes)
  overload: system.fabric.health._cluster_upgrade_health_policy.setMaxPercentUpgradeDomainDeltaUnhealthyNodes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterUpgradeHealthPolicy.java
    startLine: 110
  package: system.fabric.health
  summary: >-
    <p>Sets the maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.</p>

    <p>

      <bold>Remarks:</bold>The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits. The default value is 15%. </p>

    <p></p>
  syntax:
    content: public void setMaxPercentUpgradeDomainDeltaUnhealthyNodes(byte maxPercentUpgradeDomainDeltaUnhealthyNodes)
    parameters:
    - id: maxPercentUpgradeDomainDeltaUnhealthyNodes
      type: d357ea40
      description: <p>The maximum allowed percentage of upgrade domain delta health degradation. Allowed values are integer values from zero to 100. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>The specified value was outside the range of integer values from zero to 100. </p>
- uid: system.fabric.health._cluster_upgrade_health_policy.toNative(PinCollection)
  id: toNative(PinCollection)
  parent: system.fabric.health._cluster_upgrade_health_policy
  href: system.fabric.health._cluster_upgrade_health_policy.yml
  langs:
  - java
  name: toNative(PinCollection pinCollection)
  nameWithType: ClusterUpgradeHealthPolicy.toNative(PinCollection pinCollection)
  fullName: long system.fabric.health.ClusterUpgradeHealthPolicy.toNative(PinCollection pinCollection)
  overload: system.fabric.health._cluster_upgrade_health_policy.toNative*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterUpgradeHealthPolicy.java
    startLine: 26
  package: system.fabric.health
  syntax:
    content: public long toNative(PinCollection pinCollection)
    parameters:
    - id: pinCollection
      type: system.fabric._pin_collection
    return:
      type: 0364520f
references:
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric.health._cluster_upgrade_health_policy.toNative*
  name: toNative
  nameWithType: ClusterUpgradeHealthPolicy.toNative
  fullName: long system.fabric.health.ClusterUpgradeHealthPolicy.toNative
  package: system.fabric.health
- uid: d357ea40
  spec.java:
  - name: byte
    fullName: byte
- uid: system.fabric.health._cluster_upgrade_health_policy.getMaxPercentDeltaUnhealthyNodes*
  name: getMaxPercentDeltaUnhealthyNodes
  nameWithType: ClusterUpgradeHealthPolicy.getMaxPercentDeltaUnhealthyNodes
  fullName: byte system.fabric.health.ClusterUpgradeHealthPolicy.getMaxPercentDeltaUnhealthyNodes
  package: system.fabric.health
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: system.fabric.health._cluster_upgrade_health_policy.setMaxPercentDeltaUnhealthyNodes*
  name: setMaxPercentDeltaUnhealthyNodes
  nameWithType: ClusterUpgradeHealthPolicy.setMaxPercentDeltaUnhealthyNodes
  fullName: void system.fabric.health.ClusterUpgradeHealthPolicy.setMaxPercentDeltaUnhealthyNodes
  package: system.fabric.health
- uid: system.fabric.health._cluster_upgrade_health_policy.getMaxPercentUpgradeDomainDeltaUnhealthyNodes*
  name: getMaxPercentUpgradeDomainDeltaUnhealthyNodes
  nameWithType: ClusterUpgradeHealthPolicy.getMaxPercentUpgradeDomainDeltaUnhealthyNodes
  fullName: byte system.fabric.health.ClusterUpgradeHealthPolicy.getMaxPercentUpgradeDomainDeltaUnhealthyNodes
  package: system.fabric.health
- uid: system.fabric.health._cluster_upgrade_health_policy.setMaxPercentUpgradeDomainDeltaUnhealthyNodes*
  name: setMaxPercentUpgradeDomainDeltaUnhealthyNodes
  nameWithType: ClusterUpgradeHealthPolicy.setMaxPercentUpgradeDomainDeltaUnhealthyNodes
  fullName: void system.fabric.health.ClusterUpgradeHealthPolicy.setMaxPercentUpgradeDomainDeltaUnhealthyNodes
  package: system.fabric.health
- uid: system.fabric._pin_collection
  parent: system.fabric
  href: system.fabric._pin_collection.yml
  name: PinCollection
  nameWithType: PinCollection
  fullName: system.fabric.PinCollection
  type: Class
  syntax:
    content: public class PinCollection
- uid: system.fabric._cluster_health_policy
  parent: system.fabric
  href: system.fabric._cluster_health_policy.yml
  name: ClusterHealthPolicy
  nameWithType: ClusterHealthPolicy
  fullName: system.fabric.ClusterHealthPolicy
  type: Class
  summary: <p>Defines a health policy used to evaluate the health of the cluster or of a cluster node. </p>
  syntax:
    content: public class ClusterHealthPolicy
