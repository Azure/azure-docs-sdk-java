### YamlMime:JavaMember
uid: "com.azure.data.tables.models.TableServiceCorsRule.setAllowedMethods*"
fullName: "com.azure.data.tables.models.TableServiceCorsRule.setAllowedMethods"
name: "setAllowedMethods"
nameWithType: "TableServiceCorsRule.setAllowedMethods"
members:
- uid: "com.azure.data.tables.models.TableServiceCorsRule.setAllowedMethods(java.lang.String)"
  fullName: "com.azure.data.tables.models.TableServiceCorsRule.setAllowedMethods(String allowedMethods)"
  name: "setAllowedMethods(String allowedMethods)"
  nameWithType: "TableServiceCorsRule.setAllowedMethods(String allowedMethods)"
  summary: "Set the allowedMethods property: The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated)."
  parameters:
  - description: "The <code>allowedMethods</code> to set."
    name: "allowedMethods"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceCorsRule setAllowedMethods(String allowedMethods)"
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.models.TableServiceCorsRule\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceCorsRule\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.models.TableServiceCorsRule?alt=com.azure.data.tables.models.TableServiceCorsRule&text=TableServiceCorsRule\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.data.tables.models"
artifact: com.azure:azure-data-tables:12.2.1
