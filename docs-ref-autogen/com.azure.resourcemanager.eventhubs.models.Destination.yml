### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventhubs.models.Destination"
fullName: "com.azure.resourcemanager.eventhubs.models.Destination"
name: "Destination"
nameWithType: "Destination"
summary: "Capture storage details for capture description."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Destination"
constructors:
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.Destination()"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.Destination()"
  name: "Destination()"
  nameWithType: "Destination.Destination()"
  syntax: "public Destination()"
methods:
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.archiveNameFormat()"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.archiveNameFormat()"
  name: "archiveNameFormat()"
  nameWithType: "Destination.archiveNameFormat()"
  summary: "Get the archiveNameFormat property: Blob naming convention for archive, e.g. \\{Namespace\\}/\\{EventHub\\}/\\{PartitionId\\}/\\{Year\\}/\\{Month\\}/\\{Day\\}/\\{Hour\\}/\\{Minute\\}/\\{Second\\}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order."
  syntax: "public String archiveNameFormat()"
  returns:
    description: "the archiveNameFormat value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.blobContainer()"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.blobContainer()"
  name: "blobContainer()"
  nameWithType: "Destination.blobContainer()"
  summary: "Get the blobContainer property: Blob container Name."
  syntax: "public String blobContainer()"
  returns:
    description: "the blobContainer value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.dataLakeAccountName()"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.dataLakeAccountName()"
  name: "dataLakeAccountName()"
  nameWithType: "Destination.dataLakeAccountName()"
  summary: "Get the dataLakeAccountName property: The Azure Data Lake Store name for the captured events."
  syntax: "public String dataLakeAccountName()"
  returns:
    description: "the dataLakeAccountName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.dataLakeFolderPath()"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.dataLakeFolderPath()"
  name: "dataLakeFolderPath()"
  nameWithType: "Destination.dataLakeFolderPath()"
  summary: "Get the dataLakeFolderPath property: The destination folder path for the captured events."
  syntax: "public String dataLakeFolderPath()"
  returns:
    description: "the dataLakeFolderPath value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.dataLakeSubscriptionId()"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.dataLakeSubscriptionId()"
  name: "dataLakeSubscriptionId()"
  nameWithType: "Destination.dataLakeSubscriptionId()"
  summary: "Get the dataLakeSubscriptionId property: Subscription Id of Azure Data Lake Store."
  syntax: "public UUID dataLakeSubscriptionId()"
  returns:
    description: "the dataLakeSubscriptionId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.name()"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.name()"
  name: "name()"
  nameWithType: "Destination.name()"
  summary: "Get the name property: Name for capture destination."
  syntax: "public String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.storageAccountResourceId()"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.storageAccountResourceId()"
  name: "storageAccountResourceId()"
  nameWithType: "Destination.storageAccountResourceId()"
  summary: "Get the storageAccountResourceId property: Resource id of the storage account to be used to create the blobs."
  syntax: "public String storageAccountResourceId()"
  returns:
    description: "the storageAccountResourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.validate()"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.validate()"
  name: "validate()"
  nameWithType: "Destination.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.withArchiveNameFormat(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.withArchiveNameFormat(String archiveNameFormat)"
  name: "withArchiveNameFormat(String archiveNameFormat)"
  nameWithType: "Destination.withArchiveNameFormat(String archiveNameFormat)"
  summary: "Set the archiveNameFormat property: Blob naming convention for archive, e.g. \\{Namespace\\}/\\{EventHub\\}/\\{PartitionId\\}/\\{Year\\}/\\{Month\\}/\\{Day\\}/\\{Hour\\}/\\{Minute\\}/\\{Second\\}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order."
  parameters:
  - description: "the archiveNameFormat value to set."
    name: "archiveNameFormat"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Destination withArchiveNameFormat(String archiveNameFormat)"
  returns:
    description: "the Destination object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.Destination?alt=com.azure.resourcemanager.eventhubs.models.Destination&text=Destination\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.withBlobContainer(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.withBlobContainer(String blobContainer)"
  name: "withBlobContainer(String blobContainer)"
  nameWithType: "Destination.withBlobContainer(String blobContainer)"
  summary: "Set the blobContainer property: Blob container Name."
  parameters:
  - description: "the blobContainer value to set."
    name: "blobContainer"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Destination withBlobContainer(String blobContainer)"
  returns:
    description: "the Destination object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.Destination?alt=com.azure.resourcemanager.eventhubs.models.Destination&text=Destination\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.withDataLakeAccountName(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.withDataLakeAccountName(String dataLakeAccountName)"
  name: "withDataLakeAccountName(String dataLakeAccountName)"
  nameWithType: "Destination.withDataLakeAccountName(String dataLakeAccountName)"
  summary: "Set the dataLakeAccountName property: The Azure Data Lake Store name for the captured events."
  parameters:
  - description: "the dataLakeAccountName value to set."
    name: "dataLakeAccountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Destination withDataLakeAccountName(String dataLakeAccountName)"
  returns:
    description: "the Destination object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.Destination?alt=com.azure.resourcemanager.eventhubs.models.Destination&text=Destination\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.withDataLakeFolderPath(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.withDataLakeFolderPath(String dataLakeFolderPath)"
  name: "withDataLakeFolderPath(String dataLakeFolderPath)"
  nameWithType: "Destination.withDataLakeFolderPath(String dataLakeFolderPath)"
  summary: "Set the dataLakeFolderPath property: The destination folder path for the captured events."
  parameters:
  - description: "the dataLakeFolderPath value to set."
    name: "dataLakeFolderPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Destination withDataLakeFolderPath(String dataLakeFolderPath)"
  returns:
    description: "the Destination object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.Destination?alt=com.azure.resourcemanager.eventhubs.models.Destination&text=Destination\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.withDataLakeSubscriptionId(java.util.UUID)"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.withDataLakeSubscriptionId(UUID dataLakeSubscriptionId)"
  name: "withDataLakeSubscriptionId(UUID dataLakeSubscriptionId)"
  nameWithType: "Destination.withDataLakeSubscriptionId(UUID dataLakeSubscriptionId)"
  summary: "Set the dataLakeSubscriptionId property: Subscription Id of Azure Data Lake Store."
  parameters:
  - description: "the dataLakeSubscriptionId value to set."
    name: "dataLakeSubscriptionId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Destination withDataLakeSubscriptionId(UUID dataLakeSubscriptionId)"
  returns:
    description: "the Destination object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.Destination?alt=com.azure.resourcemanager.eventhubs.models.Destination&text=Destination\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.withName(String name)"
  name: "withName(String name)"
  nameWithType: "Destination.withName(String name)"
  summary: "Set the name property: Name for capture destination."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Destination withName(String name)"
  returns:
    description: "the Destination object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.Destination?alt=com.azure.resourcemanager.eventhubs.models.Destination&text=Destination\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.Destination.withStorageAccountResourceId(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventhubs.models.Destination.withStorageAccountResourceId(String storageAccountResourceId)"
  name: "withStorageAccountResourceId(String storageAccountResourceId)"
  nameWithType: "Destination.withStorageAccountResourceId(String storageAccountResourceId)"
  summary: "Set the storageAccountResourceId property: Resource id of the storage account to be used to create the blobs."
  parameters:
  - description: "the storageAccountResourceId value to set."
    name: "storageAccountResourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Destination withStorageAccountResourceId(String storageAccountResourceId)"
  returns:
    description: "the Destination object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.Destination?alt=com.azure.resourcemanager.eventhubs.models.Destination&text=Destination\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.eventhubs.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventhubs:2.14.0
