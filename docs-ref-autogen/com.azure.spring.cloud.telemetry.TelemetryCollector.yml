### YamlMime:JavaType
uid: "com.azure.spring.cloud.telemetry.TelemetryCollector"
fullName: "com.azure.spring.cloud.telemetry.TelemetryCollector"
name: "TelemetryCollector"
nameWithType: "TelemetryCollector"
summary: "Collect service name and subscription, then return properties could be sent directly."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TelemetryCollector"
methods:
- "com.azure.spring.cloud.telemetry.TelemetryCollector.addProperty(java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.spring.cloud.telemetry.TelemetryCollector.addService(java.lang.String)"
- "com.azure.spring.cloud.telemetry.TelemetryCollector.getInstance()"
- "com.azure.spring.cloud.telemetry.TelemetryCollector.getName()"
- "com.azure.spring.cloud.telemetry.TelemetryCollector.getProperties()"
- "com.azure.spring.cloud.telemetry.TelemetryCollector.setSubscription(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.spring.cloud.telemetry"
artifact: com.azure.spring:azure-spring-cloud-telemetry:2.0.0
