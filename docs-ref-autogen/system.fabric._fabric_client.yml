### YamlMime:ManagedReference
items:
- uid: system.fabric._fabric_client
  id: _fabric_client
  parent: system.fabric
  children:
  - system.fabric._fabric_client.close()
  - system.fabric._fabric_client.createNativeClient(String [])
  - system.fabric._fabric_client.FabricClient()
  - system.fabric._fabric_client.FabricClient(FabricClientRole)
  - system.fabric._fabric_client.FabricClient(FabricClientSettings)
  - system.fabric._fabric_client.FabricClient(FabricClientSettings,String [])
  - system.fabric._fabric_client.FabricClient(SecurityCredentials,FabricClientSettings,String [])
  - system.fabric._fabric_client.FabricClient(SecurityCredentials,String [])
  - system.fabric._fabric_client.FabricClient(String [])
  - system.fabric._fabric_client.getClientConnectionObservable()
  - system.fabric._fabric_client.getClientDisconnectionObservable()
  - system.fabric._fabric_client.getCredential()
  - system.fabric._fabric_client.getHostEndpoints()
  - system.fabric._fabric_client.getSettings()
  - system.fabric._fabric_client.registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String>)
  - system.fabric._fabric_client.updateSecurityCredentials(SecurityCredentials)
  - system.fabric._fabric_client.UpdateSettings(FabricClientSettings)
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: FabricClient
  nameWithType: FabricClient
  fullName: system.fabric.FabricClient
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 40
  package: system.fabric
  summary: "<p>Client for a Service Fabric cluster. </p>\r\n<p>\r\n  <b>Remarks:</b>It is highly recommended that you share FabricClients as much as possible. This is because the FabricClient has multiple optimizations such as caching and batching that you would not be able to fully utilize otherwise. </p>"
  syntax: &o1
    content: public class FabricClient
  inheritance:
  - java.lang.Object
  - AutoCloseable
- uid: system.fabric._fabric_client.close()
  id: close()
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: close()
  nameWithType: FabricClient.close()
  fullName: system.fabric.FabricClient.close()
  overload: system.fabric._fabric_client.close*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 483
  package: system.fabric
  syntax:
    content: public void close()
- uid: system.fabric._fabric_client.createNativeClient(String [])
  id: createNativeClient(String [])
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: createNativeClient(String[] hostEndPoints)
  nameWithType: FabricClient.createNativeClient(String[] hostEndPoints)
  fullName: system.fabric.FabricClient.createNativeClient(String[] hostEndPoints)
  overload: system.fabric._fabric_client.createNativeClient*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 415
  package: system.fabric
  syntax:
    content: public void createNativeClient(String[] hostEndPoints)
    parameters:
    - id: hostEndPoints
      type: 1bb63ab0
- uid: system.fabric._fabric_client.FabricClient()
  id: FabricClient()
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: FabricClient()
  nameWithType: FabricClient.FabricClient()
  fullName: system.fabric.FabricClient.FabricClient()
  overload: system.fabric._fabric_client.FabricClient*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 214
  package: system.fabric
  summary: "<p>Initializes a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> class.</p>\r\n<p>\r\n  <b>Remarks:</b>If the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> is on the same cluster as the service, then use a Local <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>. Local <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> is a feature of Service Fabric that allows the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> to connect to the local Gateway Service instead of choosing from a list. This way, your client can bypass an extra network hop. In case a service is resolving another service partition in the same cluster, then it is recommended that you use Local <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> , as it enables automatic load balancing and improves performance. </p>"
  syntax:
    content: public FabricClient()
- uid: system.fabric._fabric_client.FabricClient(FabricClientRole)
  id: FabricClient(FabricClientRole)
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: FabricClient(FabricClientRole clientRole)
  nameWithType: FabricClient.FabricClient(FabricClientRole clientRole)
  fullName: system.fabric.FabricClient.FabricClient(FabricClientRole clientRole)
  overload: system.fabric._fabric_client.FabricClient*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 225
  package: system.fabric
  summary: "<p>Initializes a new instance of the <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">FabricClient</xref> class with the specified fabric client role.</p>\r\n<p></p>"
  syntax:
    content: public FabricClient(FabricClientRole clientRole)
    parameters:
    - id: clientRole
      type: system.fabric._fabric_client_role
      description: <p>The fabric client role </p>
- uid: system.fabric._fabric_client.FabricClient(FabricClientSettings)
  id: FabricClient(FabricClientSettings)
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: FabricClient(FabricClientSettings settings)
  nameWithType: FabricClient.FabricClient(FabricClientSettings settings)
  fullName: system.fabric.FabricClient.FabricClient(FabricClientSettings settings)
  overload: system.fabric._fabric_client.FabricClient*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 243
  package: system.fabric
  summary: "<p>Initializes a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> class with the desired fabric client settings. If the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> is on the same cluster as the service, then use a Local <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>. Local <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> is a feature of Service Fabric that allows the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> to connect to the local Gateway Service instead of choosing from a list. This way, your client can bypass an extra network hop. In case a service is resolving another service partition in the same cluster, then it is recommended that you use Local <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>, as it enables automatic load balancing and improves performance.</p>\r\n<p></p>"
  syntax:
    content: public FabricClient(FabricClientSettings settings)
    parameters:
    - id: settings
      type: system.fabric._fabric_client_settings
      description: <p>The fabric client settings used by the fabric client. </p>
- uid: system.fabric._fabric_client.FabricClient(FabricClientSettings,String [])
  id: FabricClient(FabricClientSettings,String [])
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: FabricClient(FabricClientSettings settings, String[] hostEndpoints)
  nameWithType: FabricClient.FabricClient(FabricClientSettings settings, String[] hostEndpoints)
  fullName: system.fabric.FabricClient.FabricClient(FabricClientSettings settings, String[] hostEndpoints)
  overload: system.fabric._fabric_client.FabricClient*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 284
  package: system.fabric
  summary: "<p>Initializes a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> class with given Service Fabric Gateway addresses (hostEndpoints) and the desired fabric client settings.</p>\r\n<p></p>"
  syntax:
    content: public FabricClient(FabricClientSettings settings, String[] hostEndpoints)
    parameters:
    - id: settings
      type: system.fabric._fabric_client_settings
      description: <p>The fabric client settings. </p>
    - id: hostEndpoints
      type: 1bb63ab0
      description: <p>Defines the set of Gateway addresses the <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> can use to connect to the cluster. </p>
- uid: system.fabric._fabric_client.FabricClient(SecurityCredentials,FabricClientSettings,String [])
  id: FabricClient(SecurityCredentials,FabricClientSettings,String [])
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: FabricClient(SecurityCredentials credential, FabricClientSettings settings, String[] hostEndpoints)
  nameWithType: FabricClient.FabricClient(SecurityCredentials credential, FabricClientSettings settings, String[] hostEndpoints)
  fullName: system.fabric.FabricClient.FabricClient(SecurityCredentials credential, FabricClientSettings settings, String[] hostEndpoints)
  overload: system.fabric._fabric_client.FabricClient*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 301
  package: system.fabric
  summary: "<p>Initializes a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> class with given Service Fabric Gateway addresses (hostEndpoints), security credentials and fabric client settings.</p>\r\n<p></p>"
  syntax:
    content: public FabricClient(SecurityCredentials credential, FabricClientSettings settings, String[] hostEndpoints)
    parameters:
    - id: credential
      type: system.fabric._security_credentials
      description: >-
        <p>

          <xref uid="system.fabric._security_credentials" data-throw-if-not-resolved="false">system.fabric.SecurityCredentials</xref> defines the security settings for the <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>. </p>
    - id: settings
      type: system.fabric._fabric_client_settings
      description: <p>The fabric client settings. </p>
    - id: hostEndpoints
      type: 1bb63ab0
      description: <p>Defines the set of Gateway addresses the <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> can use to connect to the cluster. </p>
- uid: system.fabric._fabric_client.FabricClient(SecurityCredentials,String [])
  id: FabricClient(SecurityCredentials,String [])
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: FabricClient(SecurityCredentials credential, String[] hostEndpoints)
  nameWithType: FabricClient.FabricClient(SecurityCredentials credential, String[] hostEndpoints)
  fullName: system.fabric.FabricClient.FabricClient(SecurityCredentials credential, String[] hostEndpoints)
  overload: system.fabric._fabric_client.FabricClient*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 270
  package: system.fabric
  summary: "<p>Initializes a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> class with given Service Fabric Gateway addresses (hostEndpoints) and security credentials.</p>\r\n<p></p>"
  syntax:
    content: public FabricClient(SecurityCredentials credential, String[] hostEndpoints)
    parameters:
    - id: credential
      type: system.fabric._security_credentials
      description: >-
        <p>

          <xref uid="system.fabric._security_credentials" data-throw-if-not-resolved="false">system.fabric.SecurityCredentials</xref> defines the security settings for the <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>. </p>
    - id: hostEndpoints
      type: 1bb63ab0
      description: <p>Defines the set of Gateway addresses the <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> can use to connect to the cluster. </p>
- uid: system.fabric._fabric_client.FabricClient(String [])
  id: FabricClient(String [])
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: FabricClient(String[] hostEndpoints)
  nameWithType: FabricClient.FabricClient(String[] hostEndpoints)
  fullName: system.fabric.FabricClient.FabricClient(String[] hostEndpoints)
  overload: system.fabric._fabric_client.FabricClient*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 255
  package: system.fabric
  summary: "<p>Initializes a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> class with given Service Fabric Gateway addresses (hostEndpoints).</p>\r\n<p></p>"
  syntax:
    content: public FabricClient(String[] hostEndpoints)
    parameters:
    - id: hostEndpoints
      type: 1bb63ab0
      description: <p>Defines the set of Gateway addresses the <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> can use to connect to the cluster. </p>
- uid: system.fabric._fabric_client.getClientConnectionObservable()
  id: getClientConnectionObservable()
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: getClientConnectionObservable()
  nameWithType: FabricClient.getClientConnectionObservable()
  fullName: system.fabric.FabricClient.getClientConnectionObservable()
  overload: system.fabric._fabric_client.getClientConnectionObservable*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 192
  package: system.fabric
  syntax:
    content: public Observable<GatewayInformation> getClientConnectionObservable()
    return:
      type: system.fabric._observable78504a52system.fabric._gateway_informationa08ddfce
- uid: system.fabric._fabric_client.getClientDisconnectionObservable()
  id: getClientDisconnectionObservable()
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: getClientDisconnectionObservable()
  nameWithType: FabricClient.getClientDisconnectionObservable()
  fullName: system.fabric.FabricClient.getClientDisconnectionObservable()
  overload: system.fabric._fabric_client.getClientDisconnectionObservable*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 196
  package: system.fabric
  syntax:
    content: public Observable<GatewayInformation> getClientDisconnectionObservable()
    return:
      type: system.fabric._observable78504a52system.fabric._gateway_informationa08ddfce
- uid: system.fabric._fabric_client.getCredential()
  id: getCredential()
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: getCredential()
  nameWithType: FabricClient.getCredential()
  fullName: system.fabric.FabricClient.getCredential()
  overload: system.fabric._fabric_client.getCredential*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 106
  package: system.fabric
  syntax:
    content: public SecurityCredentials getCredential()
    return:
      type: system.fabric._security_credentials
- uid: system.fabric._fabric_client.getHostEndpoints()
  id: getHostEndpoints()
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: getHostEndpoints()
  nameWithType: FabricClient.getHostEndpoints()
  fullName: system.fabric.FabricClient.getHostEndpoints()
  overload: system.fabric._fabric_client.getHostEndpoints*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 110
  package: system.fabric
  syntax:
    content: public String [] getHostEndpoints()
    return:
      type: 1bb63ab0
- uid: system.fabric._fabric_client.getSettings()
  id: getSettings()
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: getSettings()
  nameWithType: FabricClient.getSettings()
  fullName: system.fabric.FabricClient.getSettings()
  overload: system.fabric._fabric_client.getSettings*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 397
  package: system.fabric
  summary: "<p>Gets the fabric client settings.</p>\r\n<p></p>"
  syntax:
    content: public FabricClientSettings getSettings()
    return:
      type: system.fabric._fabric_client_settings
      description: <p>The fabric client settings. </p>
- uid: system.fabric._fabric_client.registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String>)
  id: registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String>)
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String> callback)
  nameWithType: FabricClient.registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String> callback)
  fullName: system.fabric.FabricClient.registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String> callback)
  overload: system.fabric._fabric_client.registerOnClaimsRetrievalCallback*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 546
  package: system.fabric
  summary: "<p>Registers the claims token retrieval callback for the ClaimsRetrieval event </p>"
  syntax:
    content: public void registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String> callback)
    parameters:
    - id: callback
      type: 8ead6242system.fabric._fabric_client5119e283
      description: <p>function which takes <xref uid="" data-throw-if-not-resolved="false">system.fabric.security.AzureActiveDirectoryMetadata</xref> as input which is required for acquiring a claims token from Azure Active Directory and returns claims token. </p>
- uid: system.fabric._fabric_client.updateSecurityCredentials(SecurityCredentials)
  id: updateSecurityCredentials(SecurityCredentials)
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: updateSecurityCredentials(SecurityCredentials credentials)
  nameWithType: FabricClient.updateSecurityCredentials(SecurityCredentials credentials)
  fullName: system.fabric.FabricClient.updateSecurityCredentials(SecurityCredentials credentials)
  overload: system.fabric._fabric_client.updateSecurityCredentials*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 317
  package: system.fabric
  summary: "<p>Updates the fabric client security credentials.</p>\r\n<p></p>"
  syntax:
    content: public void updateSecurityCredentials(SecurityCredentials credentials)
    parameters:
    - id: credentials
      type: system.fabric._security_credentials
      description: <p>The new security credentials to be used. </p>
- uid: system.fabric._fabric_client.UpdateSettings(FabricClientSettings)
  id: UpdateSettings(FabricClientSettings)
  parent: system.fabric._fabric_client
  href: system.fabric._fabric_client.yml
  langs:
  - java
  name: UpdateSettings(FabricClientSettings settings)
  nameWithType: FabricClient.UpdateSettings(FabricClientSettings settings)
  fullName: system.fabric.FabricClient.UpdateSettings(FabricClientSettings settings)
  overload: system.fabric._fabric_client.UpdateSettings*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
    startLine: 305
  package: system.fabric
  syntax:
    content: public void UpdateSettings(FabricClientSettings settings)
    parameters:
    - id: settings
      type: system.fabric._fabric_client_settings
references:
- uid: system.fabric._fabric_client.getCredential*
  name: getCredential
  nameWithType: FabricClient.getCredential
  fullName: system.fabric.FabricClient.getCredential
  package: system.fabric
- uid: 1bb63ab0
  spec.java:
  - name: String []
    fullName: String []
- uid: system.fabric._fabric_client.getHostEndpoints*
  name: getHostEndpoints
  nameWithType: FabricClient.getHostEndpoints
  fullName: system.fabric.FabricClient.getHostEndpoints
  package: system.fabric
- uid: system.fabric._observable78504a52system.fabric._gateway_informationa08ddfce
  spec.java:
  - uid: system.fabric._observable
    name: Observable
    fullName: system.fabric.Observable
    href: system.fabric._observable.yml
  - name: <
    fullName: <
  - uid: system.fabric._gateway_information
    name: GatewayInformation
    fullName: system.fabric.GatewayInformation
    href: system.fabric._gateway_information.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric._fabric_client.getClientConnectionObservable*
  name: getClientConnectionObservable
  nameWithType: FabricClient.getClientConnectionObservable
  fullName: system.fabric.FabricClient.getClientConnectionObservable
  package: system.fabric
- uid: system.fabric._fabric_client.getClientDisconnectionObservable*
  name: getClientDisconnectionObservable
  nameWithType: FabricClient.getClientDisconnectionObservable
  fullName: system.fabric.FabricClient.getClientDisconnectionObservable
  package: system.fabric
- uid: system.fabric._fabric_client.FabricClient*
  name: FabricClient
  nameWithType: FabricClient.FabricClient
  fullName: system.fabric.FabricClient.FabricClient
  package: system.fabric
- uid: system.fabric._fabric_client.UpdateSettings*
  name: UpdateSettings
  nameWithType: FabricClient.UpdateSettings
  fullName: system.fabric.FabricClient.UpdateSettings
  package: system.fabric
- uid: system.fabric._fabric_client.updateSecurityCredentials*
  name: updateSecurityCredentials
  nameWithType: FabricClient.updateSecurityCredentials
  fullName: system.fabric.FabricClient.updateSecurityCredentials
  package: system.fabric
- uid: system.fabric._fabric_client.getSettings*
  name: getSettings
  nameWithType: FabricClient.getSettings
  fullName: system.fabric.FabricClient.getSettings
  package: system.fabric
- uid: system.fabric._fabric_client.createNativeClient*
  name: createNativeClient
  nameWithType: FabricClient.createNativeClient
  fullName: system.fabric.FabricClient.createNativeClient
  package: system.fabric
- uid: system.fabric._fabric_client.close*
  name: close
  nameWithType: FabricClient.close
  fullName: system.fabric.FabricClient.close
  package: system.fabric
- uid: 8ead6242system.fabric._fabric_client5119e283
  spec.java:
  - name: BiFunction<
    fullName: BiFunction<
  - uid: system.fabric._fabric_client
    name: FabricClient
    fullName: system.fabric.FabricClient
    href: system.fabric._fabric_client.yml
  - name: ', AzureActiveDirectoryMetadata, String>'
    fullName: ', AzureActiveDirectoryMetadata, String>'
- uid: system.fabric._fabric_client.registerOnClaimsRetrievalCallback*
  name: registerOnClaimsRetrievalCallback
  nameWithType: FabricClient.registerOnClaimsRetrievalCallback
  fullName: system.fabric.FabricClient.registerOnClaimsRetrievalCallback
  package: system.fabric
- uid: system.fabric._fabric_client
  parent: system.fabric
  href: system.fabric._fabric_client.yml
  name: FabricClient
  nameWithType: FabricClient
  fullName: system.fabric.FabricClient
  type: Class
  summary: >-
    <p>Client for a Service Fabric cluster. </p>

    <p>

      <b>Remarks:</b>It is highly recommended that you share FabricClients as much as possible. This is because the FabricClient has multiple optimizations such as caching and batching that you would not be able to fully utilize otherwise. </p>
  syntax: *o1
- uid: system.fabric._observable
  parent: system.fabric
  href: system.fabric._observable.yml
  name: Observable<T>
  nameWithType: Observable<T>
  fullName: system.fabric.Observable<T>
  type: Class
  summary: <p>This class represents an observable object </p>
  syntax:
    content: public class Observable<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>Takes a template parameter T. </p>
- uid: system.fabric._gateway_information
  parent: system.fabric
  href: system.fabric._gateway_information.yml
  name: GatewayInformation
  nameWithType: GatewayInformation
  fullName: system.fabric.GatewayInformation
  type: Class
  summary: <p>Contains information identifying a Service Fabric node in the cluster. </p>
  syntax:
    content: public class GatewayInformation
- uid: system.fabric._security_credentials
  parent: system.fabric
  href: system.fabric._security_credentials.yml
  name: SecurityCredentials
  nameWithType: SecurityCredentials
  fullName: system.fabric.SecurityCredentials
  type: Class
  summary: <p>An abstract base class for types that represent security credentials. </p>
  syntax:
    content: public class SecurityCredentials
- uid: system.fabric._fabric_client_settings
  parent: system.fabric
  href: system.fabric._fabric_client_settings.yml
  name: FabricClientSettings
  nameWithType: FabricClientSettings
  fullName: system.fabric.FabricClientSettings
  type: Class
  summary: <p>Represents the configuration settings for the <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> class. </p>
  syntax:
    content: public class FabricClientSettings
- uid: system.fabric._fabric_client_role
  parent: system.fabric
  href: system.fabric._fabric_client_role.yml
  name: FabricClientRole
  nameWithType: FabricClientRole
  fullName: system.fabric.FabricClientRole
  type: Enum
  summary: <p>Represents the fabric client security role. </p>
  syntax:
    content: public enum FabricClientRole
