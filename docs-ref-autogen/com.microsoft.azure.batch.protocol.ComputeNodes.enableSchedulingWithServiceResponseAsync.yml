### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync*"
fullName: "com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync"
name: "enableSchedulingWithServiceResponseAsync"
nameWithType: "ComputeNodes.enableSchedulingWithServiceResponseAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)"
  name: "enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)"
  nameWithType: "ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)"
  summary: "Enables Task scheduling on the specified Compute Node. You can enable Task scheduling on a Compute Node only if its current scheduling state is disabled."
  parameters:
  - description: "The ID of the Pool that contains the Compute Node."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Compute Node on which you want to enable Task scheduling."
    name: "nodeId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeEnableSchedulingHeaders>> enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders&text=ComputeNodeEnableSchedulingHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions)"
  fullName: "com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)"
  name: "enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)"
  nameWithType: "ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)"
  summary: "Enables Task scheduling on the specified Compute Node. You can enable Task scheduling on a Compute Node only if its current scheduling state is disabled."
  parameters:
  - description: "The ID of the Pool that contains the Compute Node."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Compute Node on which you want to enable Task scheduling."
    name: "nodeId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "computeNodeEnableSchedulingOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions&text=ComputeNodeEnableSchedulingOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeEnableSchedulingHeaders>> enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders&text=ComputeNodeEnableSchedulingHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:9.0.0
