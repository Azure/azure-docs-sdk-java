### YamlMime:JavaType
uid: "com.azure.cosmos.CosmosAsyncUser"
fullName: "com.azure.cosmos.CosmosAsyncUser"
name: "CosmosAsyncUser"
nameWithType: "CosmosAsyncUser"
summary: "The type Cosmos async user."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **CosmosAsyncUser**"
methods:
- uid: "com.azure.cosmos.CosmosAsyncUser.createPermission(com.azure.cosmos.models.CosmosPermissionProperties,com.azure.cosmos.models.CosmosPermissionRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncUser.createPermission(CosmosPermissionProperties permissionProperties, CosmosPermissionRequestOptions options)"
  name: "createPermission(CosmosPermissionProperties permissionProperties, CosmosPermissionRequestOptions options)"
  nameWithType: "CosmosAsyncUser.createPermission(CosmosPermissionProperties permissionProperties, CosmosPermissionRequestOptions options)"
  summary: "Creates a permission."
  parameters:
  - description: "the permission properties to create."
    name: "permissionProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPermissionProperties?alt=com.azure.cosmos.models.CosmosPermissionProperties&text=CosmosPermissionProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "the request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPermissionRequestOptions?alt=com.azure.cosmos.models.CosmosPermissionRequestOptions&text=CosmosPermissionRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosPermissionResponse> createPermission(CosmosPermissionProperties permissionProperties, CosmosPermissionRequestOptions options)"
  desc: "Creates a permission.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a single resource response with the created permission. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  returns:
    description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single resource response with the created permission or an error."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.cosmos.models.CosmosPermissionResponse?alt=com.azure.cosmos.models.CosmosPermissionResponse&text=CosmosPermissionResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncUser.delete()"
  fullName: "com.azure.cosmos.CosmosAsyncUser.delete()"
  name: "delete()"
  nameWithType: "CosmosAsyncUser.delete()"
  summary: "Delete a cosmos user"
  syntax: "public Mono<CosmosUserResponse> delete()"
  desc: "Delete a cosmos user"
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single resource response with the deleted user or an error."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.cosmos.models.CosmosUserResponse?alt=com.azure.cosmos.models.CosmosUserResponse&text=CosmosUserResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncUser.getId()"
  fullName: "com.azure.cosmos.CosmosAsyncUser.getId()"
  name: "getId()"
  nameWithType: "CosmosAsyncUser.getId()"
  summary: "Get the id of the <xref uid=\"com.azure.cosmos.CosmosAsyncUser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosAsyncUser\"></xref>"
  syntax: "public String getId()"
  desc: "Get the id of the <xref uid=\"com.azure.cosmos.CosmosAsyncUser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosAsyncUser\"></xref>"
  returns:
    description: "the id of the <xref uid=\"com.azure.cosmos.CosmosAsyncUser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosAsyncUser\"></xref>"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.cosmos.CosmosAsyncUser.getPermission(java.lang.String)"
  fullName: "com.azure.cosmos.CosmosAsyncUser.getPermission(String id)"
  name: "getPermission(String id)"
  nameWithType: "CosmosAsyncUser.getPermission(String id)"
  summary: "Get cosmos permission without making a call to backend"
  parameters:
  - description: "the id"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public CosmosAsyncPermission getPermission(String id)"
  desc: "Get cosmos permission without making a call to backend"
  returns:
    description: "the cosmos permission"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncPermission?alt=com.azure.cosmos.CosmosAsyncPermission&text=CosmosAsyncPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosAsyncUser.queryPermissions(java.lang.String)"
  fullName: "com.azure.cosmos.CosmosAsyncUser.queryPermissions(String query)"
  name: "queryPermissions(String query)"
  nameWithType: "CosmosAsyncUser.queryPermissions(String query)"
  summary: "Query for permissions."
  parameters:
  - description: "the query."
    name: "query"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public CosmosPagedFlux<CosmosPermissionProperties> queryPermissions(String query)"
  desc: "Query for permissions.\n\nAfter subscription the operation will be performed. The <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will contain one or several feed response pages of the obtained permissions. In case of failure the <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will error."
  returns:
    description: "a <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> containing one or several feed response pages of the obtained permissions or\n an error."
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosPermissionProperties?alt=com.azure.cosmos.models.CosmosPermissionProperties&text=CosmosPermissionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncUser.queryPermissions(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncUser.queryPermissions(String query, CosmosQueryRequestOptions options)"
  name: "queryPermissions(String query, CosmosQueryRequestOptions options)"
  nameWithType: "CosmosAsyncUser.queryPermissions(String query, CosmosQueryRequestOptions options)"
  summary: "Query for permissions."
  parameters:
  - description: "the query."
    name: "query"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the query request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosPagedFlux<CosmosPermissionProperties> queryPermissions(String query, CosmosQueryRequestOptions options)"
  desc: "Query for permissions.\n\nAfter subscription the operation will be performed. The <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will contain one or several feed response pages of the obtained permissions. In case of failure the <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will error."
  returns:
    description: "a <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> containing one or several feed response pages of the obtained permissions or\n an error."
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosPermissionProperties?alt=com.azure.cosmos.models.CosmosPermissionProperties&text=CosmosPermissionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncUser.read()"
  fullName: "com.azure.cosmos.CosmosAsyncUser.read()"
  name: "read()"
  nameWithType: "CosmosAsyncUser.read()"
  summary: "Reads a cosmos user"
  syntax: "public Mono<CosmosUserResponse> read()"
  desc: "Reads a cosmos user"
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single resource response with the read user or an error."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.cosmos.models.CosmosUserResponse?alt=com.azure.cosmos.models.CosmosUserResponse&text=CosmosUserResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncUser.readAllPermissions()"
  fullName: "com.azure.cosmos.CosmosAsyncUser.readAllPermissions()"
  name: "readAllPermissions()"
  nameWithType: "CosmosAsyncUser.readAllPermissions()"
  summary: "Reads all permissions."
  syntax: "public CosmosPagedFlux<CosmosPermissionProperties> readAllPermissions()"
  desc: "Reads all permissions.\n\nAfter subscription the operation will be performed. The <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will contain one or several feed response pages of the read permissions. In case of failure the <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will error."
  returns:
    description: "a <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> containing one or several feed response pages of the read permissions or an\n error."
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosPermissionProperties?alt=com.azure.cosmos.models.CosmosPermissionProperties&text=CosmosPermissionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncUser.replace(com.azure.cosmos.models.CosmosUserProperties)"
  fullName: "com.azure.cosmos.CosmosAsyncUser.replace(CosmosUserProperties userProperties)"
  name: "replace(CosmosUserProperties userProperties)"
  nameWithType: "CosmosAsyncUser.replace(CosmosUserProperties userProperties)"
  summary: "Replace a cosmos user"
  parameters:
  - description: "the user properties to use"
    name: "userProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosUserProperties?alt=com.azure.cosmos.models.CosmosUserProperties&text=CosmosUserProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosUserResponse> replace(CosmosUserProperties userProperties)"
  desc: "Replace a cosmos user"
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single resource response with the replaced user or an error."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.cosmos.models.CosmosUserResponse?alt=com.azure.cosmos.models.CosmosUserResponse&text=CosmosUserResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncUser.upsertPermission(com.azure.cosmos.models.CosmosPermissionProperties,com.azure.cosmos.models.CosmosPermissionRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncUser.upsertPermission(CosmosPermissionProperties permissionProperties, CosmosPermissionRequestOptions options)"
  name: "upsertPermission(CosmosPermissionProperties permissionProperties, CosmosPermissionRequestOptions options)"
  nameWithType: "CosmosAsyncUser.upsertPermission(CosmosPermissionProperties permissionProperties, CosmosPermissionRequestOptions options)"
  summary: "Upserts a permission."
  parameters:
  - description: "the permission properties to upsert."
    name: "permissionProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPermissionProperties?alt=com.azure.cosmos.models.CosmosPermissionProperties&text=CosmosPermissionProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "the request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPermissionRequestOptions?alt=com.azure.cosmos.models.CosmosPermissionRequestOptions&text=CosmosPermissionRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosPermissionResponse> upsertPermission(CosmosPermissionProperties permissionProperties, CosmosPermissionRequestOptions options)"
  desc: "Upserts a permission.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a single resource response with the upserted permission. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  returns:
    description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single resource response with the upserted permission or an error."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.cosmos.models.CosmosPermissionResponse?alt=com.azure.cosmos.models.CosmosPermissionResponse&text=CosmosPermissionResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "The type Cosmos async user."
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.44.0
