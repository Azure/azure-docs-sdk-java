### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.table.QueryTableOperation
  id: QueryTableOperation
  parent: com.microsoft.azure.storage.table
  children:
  - com.microsoft.azure.storage.table.QueryTableOperation.getClazzType()
  - com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey()
  - com.microsoft.azure.storage.table.QueryTableOperation.getResolver()
  - com.microsoft.azure.storage.table.QueryTableOperation.getRowKey()
  - com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve()
  - com.microsoft.azure.storage.table.QueryTableOperation.parseResponse(final InputStream,final int,String,final OperationContext,final TableRequestOptions)
  - com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve(final CloudTableClient,final String,final TableRequestOptions,final OperationContext)
  - com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation()
  - com.microsoft.azure.storage.table.QueryTableOperation.setClazzType(final Class<? extends TableEntity>)
  - com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey(final String)
  - com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve(boolean)
  - com.microsoft.azure.storage.table.QueryTableOperation.setResolver(final EntityResolver<?>)
  - com.microsoft.azure.storage.table.QueryTableOperation.setRowKey(final String)
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: QueryTableOperation
  nameWithType: QueryTableOperation
  fullName: com.microsoft.azure.storage.table.QueryTableOperation
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
      branch: legacy-master
      repo: https://github.com/azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 38
  package: com.microsoft.azure.storage.table
  summary: "<p>A class that extends <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> to implement a query to retrieve a single table entity. To execute a <xref uid=\"com.microsoft.azure.storage.table.QueryTableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryTableOperation\"></xref> instance, call the  method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance. This operation can be executed directly or as part of a <xref uid=\"com.microsoft.azure.storage.table.TableBatchOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableBatchOperation\"></xref>. If the <xref uid=\"com.microsoft.azure.storage.table.QueryTableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryTableOperation\"></xref> returns an entity result, it is stored in the corresponding <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableResult\"></xref> returned by the  method. </p>"
  syntax: &o1
    content: public class QueryTableOperation extends TableOperation
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.storage.table.TableOperation
  inheritedMembers:
  - com.microsoft.azure.storage.table.TableOperation.delete(final TableEntity)
  - com.microsoft.azure.storage.table.TableOperation.execute(final CloudTableClient,final String,TableRequestOptions,OperationContext)
  - com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity(boolean,final String)
  - com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable(final String)
  - com.microsoft.azure.storage.table.TableOperation.getEchoContent()
  - com.microsoft.azure.storage.table.TableOperation.getEntity()
  - com.microsoft.azure.storage.table.TableOperation.getOperationType()
  - com.microsoft.azure.storage.table.TableOperation.insert(final TableEntity)
  - com.microsoft.azure.storage.table.TableOperation.insert(final TableEntity,boolean)
  - com.microsoft.azure.storage.table.TableOperation.insertOrMerge(final TableEntity)
  - com.microsoft.azure.storage.table.TableOperation.insertOrReplace(final TableEntity)
  - com.microsoft.azure.storage.table.TableOperation.merge(final TableEntity)
  - com.microsoft.azure.storage.table.TableOperation.replace(final TableEntity)
  - com.microsoft.azure.storage.table.TableOperation.retrieve(final String,final String,final Class<? extends TableEntity>)
  - com.microsoft.azure.storage.table.TableOperation.retrieve(final String,final String,final EntityResolver<?>)
  - com.microsoft.azure.storage.table.TableOperation.setEchoContent(boolean)
  - com.microsoft.azure.storage.table.TableOperation.setEntity(final TableEntity)
  - com.microsoft.azure.storage.table.TableOperation.TableOperation()
  - com.microsoft.azure.storage.table.TableOperation.TableOperation(final TableEntity,final TableOperationType)
  - com.microsoft.azure.storage.table.TableOperation.TableOperation(final TableEntity,final TableOperationType,final boolean)
- uid: com.microsoft.azure.storage.table.QueryTableOperation.getClazzType()
  id: getClazzType()
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: getClazzType()
  nameWithType: QueryTableOperation.getClazzType()
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.getClazzType()
  overload: com.microsoft.azure.storage.table.QueryTableOperation.getClazzType*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 109
  package: com.microsoft.azure.storage.table
  summary: "<p>Reserved for internal use. Gets the class type of the entity returned by the query.</p>\r\n<p></p>"
  syntax:
    content: protected Class<? extends TableEntity> getClazzType()
    return:
      type: 9f0d1dfbcom.microsoft.azure.storage.table.TableEntitya08ddfce
      description: <p>The <code>java.lang.Class</code> implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> that represents the entity type for the query. </p>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey()
  id: getPartitionKey()
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: getPartitionKey()
  nameWithType: QueryTableOperation.getPartitionKey()
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey()
  overload: com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 78
  package: com.microsoft.azure.storage.table
  summary: "<p>Gets the PartitionKey value for the entity to retrieve.</p>\r\n<p></p>"
  syntax:
    content: public String getPartitionKey()
    return:
      type: "26831127"
      description: <p>A <code>String</code> containing the PartitionKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.getResolver()
  id: getResolver()
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: getResolver()
  nameWithType: QueryTableOperation.getResolver()
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.getResolver()
  overload: com.microsoft.azure.storage.table.QueryTableOperation.getResolver*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 88
  package: com.microsoft.azure.storage.table
  summary: "<p>Gets the resolver to project the entity retrieved as a particular type.</p>\r\n<p></p>"
  syntax:
    content: public EntityResolver<?> getResolver()
    return:
      type: com.microsoft.azure.storage.table.EntityResolver7e6ad1eb
      description: <p>The <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> instance. </p>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.getRowKey()
  id: getRowKey()
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: getRowKey()
  nameWithType: QueryTableOperation.getRowKey()
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.getRowKey()
  overload: com.microsoft.azure.storage.table.QueryTableOperation.getRowKey*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 98
  package: com.microsoft.azure.storage.table
  summary: "<p>Gets the RowKey value for the entity to retrieve.</p>\r\n<p></p>"
  syntax:
    content: public String getRowKey()
    return:
      type: "26831127"
      description: <p>A <code>String</code> containing the RowKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve()
  id: isPrimaryOnlyRetrieve()
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: isPrimaryOnlyRetrieve()
  nameWithType: QueryTableOperation.isPrimaryOnlyRetrieve()
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve()
  overload: com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 297
  package: com.microsoft.azure.storage.table
  syntax:
    content: protected final boolean isPrimaryOnlyRetrieve()
    return:
      type: 4dda0764
      description: <p>the isPrimaryOnlyRetrieve </p>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.parseResponse(final InputStream,final int,String,final OperationContext,final TableRequestOptions)
  id: parseResponse(final InputStream,final int,String,final OperationContext,final TableRequestOptions)
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: parseResponse(final InputStream inStream, final int httpStatusCode, String etagFromHeader, final OperationContext opContext, final TableRequestOptions options)
  nameWithType: QueryTableOperation.parseResponse(final InputStream inStream, final int httpStatusCode, String etagFromHeader, final OperationContext opContext, final TableRequestOptions options)
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.parseResponse(final InputStream inStream, final int httpStatusCode, String etagFromHeader, final OperationContext opContext, final TableRequestOptions options)
  overload: com.microsoft.azure.storage.table.QueryTableOperation.parseResponse*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 139
  package: com.microsoft.azure.storage.table
  summary: "<p>Reserved for internal use. Parses the table operation response into a <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableResult\"></xref> to return.</p>\r\n<p></p>"
  syntax:
    content: protected TableResult parseResponse(final InputStream inStream, final int httpStatusCode, String etagFromHeader, final OperationContext opContext, final TableRequestOptions options)
    parameters:
    - id: inStream
      type: ac354e53
      description: <p>An <code>InputStream</code> containing the response to a query operation. </p>
    - id: httpStatusCode
      type: cd225469
      description: <p>The HTTP status code returned from the operation request. </p>
    - id: etagFromHeader
      type: "26831127"
      description: <p>The <code>String</code> containing the Etag returned with the operation response. </p>
    - id: opContext
      type: 93de0ef9com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. </p>
    - id: options
      type: 93de0ef9com.microsoft.azure.storage.table.TableRequestOptions
    return:
      type: com.microsoft.azure.storage.table.TableResult
      description: <p>The <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> representing the result of the query operation.</p>
  exceptions:
  - type: 84fa3863
    description: <p>if an error occurs in object construction. </p>
  - type: "81e09942"
    description: <p>if an error occurs in reflection on an object type. </p>
  - type: ca4f407a
    description: <p>if an error occurs in the storage operation. </p>
  - type: cbf33bbe
    description: <p>if an error occurs while accessing the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> with Json. </p>
  - type: a667ba4c
    description: <p>if an error occurs while parsing the Json, if Json is used. </p>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve(final CloudTableClient,final String,final TableRequestOptions,final OperationContext)
  id: performRetrieve(final CloudTableClient,final String,final TableRequestOptions,final OperationContext)
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: performRetrieve(final CloudTableClient client, final String tableName, final TableRequestOptions options, final OperationContext opContext)
  nameWithType: QueryTableOperation.performRetrieve(final CloudTableClient client, final String tableName, final TableRequestOptions options, final OperationContext opContext)
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve(final CloudTableClient client, final String tableName, final TableRequestOptions options, final OperationContext opContext)
  overload: com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 172
  package: com.microsoft.azure.storage.table
  summary: "<p>Reserved for internal use. Performs a retrieve operation on the specified table, using the specified <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableRequestOptions\"></xref> and <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationContext\"></xref>. </p>\r\n<p>This method will invoke the Storage Service REST API to execute this table operation, using the Table service endpoint and storage account credentials in the <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> object.</p>\r\n<p></p>"
  syntax:
    content: protected TableResult performRetrieve(final CloudTableClient client, final String tableName, final TableRequestOptions options, final OperationContext opContext)
    parameters:
    - id: client
      type: 93de0ef9com.microsoft.azure.storage.table.CloudTableClient
      description: <p>A <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance specifying the Table service endpoint and storage account credentials to use. </p>
    - id: tableName
      type: 3d93591e
      description: <p>A <code>String</code> containing the name of the table to query. </p>
    - id: options
      type: 93de0ef9com.microsoft.azure.storage.table.TableRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. </p>
    - id: opContext
      type: 93de0ef9com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object for tracking the current operation.</p>
    return:
      type: com.microsoft.azure.storage.table.TableResult
      description: <p>A <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> containing the results of executing the query operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>if an error occurs in the storage operation. </p>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation()
  id: QueryTableOperation()
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: QueryTableOperation()
  nameWithType: QueryTableOperation.QueryTableOperation()
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation()
  overload: com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 52
  package: com.microsoft.azure.storage.table
  summary: "<p>Default constructor. </p>"
  syntax:
    content: protected QueryTableOperation()
- uid: com.microsoft.azure.storage.table.QueryTableOperation.setClazzType(final Class<? extends TableEntity>)
  id: setClazzType(final Class<? extends TableEntity>)
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: setClazzType(final Class<? extends TableEntity> clazzType)
  nameWithType: QueryTableOperation.setClazzType(final Class<? extends TableEntity> clazzType)
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.setClazzType(final Class<? extends TableEntity> clazzType)
  overload: com.microsoft.azure.storage.table.QueryTableOperation.setClazzType*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 257
  package: com.microsoft.azure.storage.table
  summary: "<p>Reserved for internal use. Sets the class type of the entity returned by the query.</p>\r\n<p></p>"
  syntax:
    content: protected void setClazzType(final Class<? extends TableEntity> clazzType)
    parameters:
    - id: clazzType
      type: f6d66785com.microsoft.azure.storage.table.TableEntitya08ddfce
      description: <p>The <code>java.lang.Class</code> implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> that represents the entity type for the query. </p>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey(final String)
  id: setPartitionKey(final String)
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: setPartitionKey(final String partitionKey)
  nameWithType: QueryTableOperation.setPartitionKey(final String partitionKey)
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey(final String partitionKey)
  overload: com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 269
  package: com.microsoft.azure.storage.table
  summary: "<p>Reserved for internal use. Sets the PartitionKey value for the entity to retrieve.</p>\r\n<p></p>"
  syntax:
    content: protected void setPartitionKey(final String partitionKey)
    parameters:
    - id: partitionKey
      type: 3d93591e
      description: <p>A <code>String</code> containing the PartitionKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve(boolean)
  id: setPrimaryOnlyRetrieve(boolean)
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: setPrimaryOnlyRetrieve(boolean isPrimaryOnlyRetrieve)
  nameWithType: QueryTableOperation.setPrimaryOnlyRetrieve(boolean isPrimaryOnlyRetrieve)
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve(boolean isPrimaryOnlyRetrieve)
  overload: com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 305
  package: com.microsoft.azure.storage.table
  syntax:
    content: protected void setPrimaryOnlyRetrieve(boolean isPrimaryOnlyRetrieve)
    parameters:
    - id: isPrimaryOnlyRetrieve
      type: 4fc6e284
      description: <p>the isPrimaryOnlyRetrieve to set </p>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.setResolver(final EntityResolver<?>)
  id: setResolver(final EntityResolver<?>)
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: setResolver(final EntityResolver<?> resolver)
  nameWithType: QueryTableOperation.setResolver(final EntityResolver<?> resolver)
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.setResolver(final EntityResolver<?> resolver)
  overload: com.microsoft.azure.storage.table.QueryTableOperation.setResolver*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 279
  package: com.microsoft.azure.storage.table
  summary: "<p>Reserved for internal use. Sets the resolver to project the entity retrieved as a particular type.</p>\r\n<p></p>"
  syntax:
    content: protected void setResolver(final EntityResolver<?> resolver)
    parameters:
    - id: resolver
      type: 93de0ef9com.microsoft.azure.storage.table.EntityResolver7e6ad1eb
      description: <p>The <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> instance to use. </p>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.setRowKey(final String)
  id: setRowKey(final String)
  parent: com.microsoft.azure.storage.table.QueryTableOperation
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  langs:
  - java
  name: setRowKey(final String rowKey)
  nameWithType: QueryTableOperation.setRowKey(final String rowKey)
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.setRowKey(final String rowKey)
  overload: com.microsoft.azure.storage.table.QueryTableOperation.setRowKey*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/QueryTableOperation.java
    startLine: 290
  package: com.microsoft.azure.storage.table
  summary: "<p>Reserved for internal use. Sets the RowKey value for the entity to retrieve.</p>\r\n<p></p>"
  syntax:
    content: protected void setRowKey(final String rowKey)
    parameters:
    - id: rowKey
      type: 3d93591e
      description: <p>A <code>String</code> containing the RowKey value for the entity. </p>
references:
- uid: com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation*
  name: QueryTableOperation
  nameWithType: QueryTableOperation.QueryTableOperation
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation
  package: com.microsoft.azure.storage.table
- uid: 9f0d1dfbcom.microsoft.azure.storage.table.TableEntitya08ddfce
  spec.java:
  - name: 'Class<? extends '
    fullName: 'Class<? extends '
  - uid: com.microsoft.azure.storage.table.TableEntity
    name: TableEntity
    fullName: com.microsoft.azure.storage.table.TableEntity
    href: com.microsoft.azure.storage.table.TableEntity.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.table.QueryTableOperation.getClazzType*
  name: getClazzType
  nameWithType: QueryTableOperation.getClazzType
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.getClazzType
  package: com.microsoft.azure.storage.table
- uid: 84fa3863
  spec.java:
  - name: InstantiationException
    fullName: InstantiationException
- uid: "81e09942"
  spec.java:
  - name: IllegalAccessException
    fullName: IllegalAccessException
- uid: ca4f407a
  spec.java:
  - name: StorageException
    fullName: StorageException
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: a667ba4c
  spec.java:
  - name: JsonParseException
    fullName: JsonParseException
- uid: ac354e53
  spec.java:
  - name: final InputStream
    fullName: final InputStream
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 93de0ef9com.microsoft.azure.storage.OperationContext
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.OperationContext
    name: OperationContext
    fullName: com.microsoft.azure.storage.OperationContext
    href: com.microsoft.azure.storage.OperationContext.yml
- uid: 93de0ef9com.microsoft.azure.storage.table.TableRequestOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.table.TableRequestOptions
    name: TableRequestOptions
    fullName: com.microsoft.azure.storage.table.TableRequestOptions
    href: com.microsoft.azure.storage.table.TableRequestOptions.yml
- uid: com.microsoft.azure.storage.table.QueryTableOperation.parseResponse*
  name: parseResponse
  nameWithType: QueryTableOperation.parseResponse
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.parseResponse
  package: com.microsoft.azure.storage.table
- uid: 93de0ef9com.microsoft.azure.storage.table.CloudTableClient
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.table.CloudTableClient
    name: CloudTableClient
    fullName: com.microsoft.azure.storage.table.CloudTableClient
    href: com.microsoft.azure.storage.table.CloudTableClient.yml
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve*
  name: performRetrieve
  nameWithType: QueryTableOperation.performRetrieve
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve
  package: com.microsoft.azure.storage.table
- uid: f6d66785com.microsoft.azure.storage.table.TableEntitya08ddfce
  spec.java:
  - name: 'final Class<? extends '
    fullName: 'final Class<? extends '
  - uid: com.microsoft.azure.storage.table.TableEntity
    name: TableEntity
    fullName: com.microsoft.azure.storage.table.TableEntity
    href: com.microsoft.azure.storage.table.TableEntity.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.table.QueryTableOperation.setClazzType*
  name: setClazzType
  nameWithType: QueryTableOperation.setClazzType
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.setClazzType
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey*
  name: setPartitionKey
  nameWithType: QueryTableOperation.setPartitionKey
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey
  package: com.microsoft.azure.storage.table
- uid: 93de0ef9com.microsoft.azure.storage.table.EntityResolver7e6ad1eb
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.table.EntityResolver
    name: EntityResolver
    fullName: com.microsoft.azure.storage.table.EntityResolver
    href: com.microsoft.azure.storage.table.EntityResolver.yml
  - name: <?>
    fullName: <?>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.setResolver*
  name: setResolver
  nameWithType: QueryTableOperation.setResolver
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.setResolver
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.QueryTableOperation.setRowKey*
  name: setRowKey
  nameWithType: QueryTableOperation.setRowKey
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.setRowKey
  package: com.microsoft.azure.storage.table
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve*
  name: isPrimaryOnlyRetrieve
  nameWithType: QueryTableOperation.isPrimaryOnlyRetrieve
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve
  package: com.microsoft.azure.storage.table
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve*
  name: setPrimaryOnlyRetrieve
  nameWithType: QueryTableOperation.setPrimaryOnlyRetrieve
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey*
  name: getPartitionKey
  nameWithType: QueryTableOperation.getPartitionKey
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.EntityResolver7e6ad1eb
  spec.java:
  - uid: com.microsoft.azure.storage.table.EntityResolver
    name: EntityResolver
    fullName: com.microsoft.azure.storage.table.EntityResolver
    href: com.microsoft.azure.storage.table.EntityResolver.yml
  - name: <?>
    fullName: <?>
- uid: com.microsoft.azure.storage.table.QueryTableOperation.getResolver*
  name: getResolver
  nameWithType: QueryTableOperation.getResolver
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.getResolver
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.QueryTableOperation.getRowKey*
  name: getRowKey
  nameWithType: QueryTableOperation.getRowKey
  fullName: com.microsoft.azure.storage.table.QueryTableOperation.getRowKey
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableOperation.delete(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: delete(final TableEntity entity)
  nameWithType: TableOperation.delete(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableOperation.delete(final TableEntity entity)
  type: Method
  summary: "<p>A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instance to delete the specified entity from Microsoft Azure storage. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTable#execute(TableOperation)\"></xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance with the</p>\r\n<p></p>"
  syntax:
    content: public static TableOperation delete(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    return:
      type: com.microsoft.azure.storage.table.TableOperation
      description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to insert the table entity. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.execute(final CloudTableClient,final String,TableRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: execute(final CloudTableClient client, final String tableName, TableRequestOptions options, OperationContext opContext)
  nameWithType: TableOperation.execute(final CloudTableClient client, final String tableName, TableRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.table.TableOperation.execute(final CloudTableClient client, final String tableName, TableRequestOptions options, OperationContext opContext)
  type: Method
  summary: "<p>Reserved for internal use. Execute this table operation on the specified table, using the specified <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableRequestOptions\"></xref> and <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationContext\"></xref>. </p>\r\n<p>This method will invoke the Storage Service REST API to execute this table operation, using the Table service endpoint and storage account credentials in the <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> object.</p>\r\n<p></p>"
  syntax:
    content: protected TableResult execute(final CloudTableClient client, final String tableName, TableRequestOptions options, OperationContext opContext)
    parameters:
    - id: client
      type: 93de0ef9com.microsoft.azure.storage.table.CloudTableClient
      description: <p>A <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance specifying the Table service endpoint, storage account credentials, and any additional query parameters. </p>
    - id: tableName
      type: 3d93591e
      description: <p>A <code>String</code> which specifies the name of the table. </p>
    - id: options
      type: com.microsoft.azure.storage.table.TableRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object for tracking the current operation.</p>
    return:
      type: com.microsoft.azure.storage.table.TableResult
      description: <p>A <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> which represents the results of executing the operation.</p>
- uid: com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity(boolean,final String)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: generateRequestIdentity(boolean isSingleIndexEntry, final String entryName)
  nameWithType: TableOperation.generateRequestIdentity(boolean isSingleIndexEntry, final String entryName)
  fullName: com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity(boolean isSingleIndexEntry, final String entryName)
  type: Method
  summary: "<p>Reserved for internal use. Generates the request identity, consisting of the specified entry name, or the PartitionKey and RowKey pair from the operation, to identify the operation target.</p>\r\n<p></p>"
  syntax:
    content: protected String generateRequestIdentity(boolean isSingleIndexEntry, final String entryName)
    parameters:
    - id: isSingleIndexEntry
      type: 4fc6e284
      description: <p>Pass <code>true</code> to use the specified <code>entryName</code> parameter, or <code>false</code> to use PartitionKey and RowKey values from the operation as the request identity. </p>
    - id: entryName
      type: 3d93591e
      description: <p>The entry name to use as the request identity if the <code>isSingleIndexEntry</code> parameter is <code>true</code>. </p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents the formatted request identity string. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable(final String)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: generateRequestIdentityWithTable(final String tableName)
  nameWithType: TableOperation.generateRequestIdentityWithTable(final String tableName)
  fullName: com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable(final String tableName)
  type: Method
  summary: "<p>Reserved for internal use. Generates the request identity string for the specified table. The request identity string combines the table name with the PartitionKey and RowKey from the operation to identify specific table entities. This request identity is already UrlEncoded.</p>\r\n<p></p>"
  syntax:
    content: protected String generateRequestIdentityWithTable(final String tableName)
    parameters:
    - id: tableName
      type: 3d93591e
      description: <p>A <code>String</code> which specifies the name of the table. </p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents the formatted request identity string for the specified table. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.getEchoContent()
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: getEchoContent()
  nameWithType: TableOperation.getEchoContent()
  fullName: com.microsoft.azure.storage.table.TableOperation.getEchoContent()
  type: Method
  summary: "<p>Gets the boolean representing whether the message payload should be returned in the response.</p>\r\n<p></p>"
  syntax:
    content: protected boolean getEchoContent()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the message payload should be returned in the response; otherwise <code>false</code></p>
- uid: com.microsoft.azure.storage.table.TableOperation.getEntity()
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: getEntity()
  nameWithType: TableOperation.getEntity()
  fullName: com.microsoft.azure.storage.table.TableOperation.getEntity()
  type: Method
  summary: "<p>Reserved for internal use. Gets the table entity associated with this operation.</p>\r\n<p></p>"
  syntax:
    content: protected synchronized final TableEntity getEntity()
    return:
      type: 381eaeebcom.microsoft.azure.storage.table.TableEntity
      description: <p>The <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> instance associated with this operation. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.getOperationType()
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: getOperationType()
  nameWithType: TableOperation.getOperationType()
  fullName: com.microsoft.azure.storage.table.TableOperation.getOperationType()
  type: Method
  summary: "<p>Reserved for internal use. Gets the operation type for this operation.</p>\r\n<p></p>"
  syntax:
    content: protected synchronized final TableOperationType getOperationType()
    return:
      type: 5e042f60
      description: <p>the opType The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TableOperationType"></xref> instance associated with this operation. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.insert(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: insert(final TableEntity entity)
  nameWithType: TableOperation.insert(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableOperation.insert(final TableEntity entity)
  type: Method
  summary: "<p>A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instance to insert the specified entity into Microsoft Azure storage. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTable#execute(TableOperation)\"></xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance with the</p>\r\n<p></p>"
  syntax:
    content: public static TableOperation insert(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    return:
      type: com.microsoft.azure.storage.table.TableOperation
      description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to insert the table entity. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.insert(final TableEntity,boolean)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: insert(final TableEntity entity, boolean echoContent)
  nameWithType: TableOperation.insert(final TableEntity entity, boolean echoContent)
  fullName: com.microsoft.azure.storage.table.TableOperation.insert(final TableEntity entity, boolean echoContent)
  type: Method
  summary: "<p>A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instance to insert the specified entity into Microsoft Azure storage. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTable#execute(TableOperation)\"></xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance with the</p>\r\n<p></p>"
  syntax:
    content: public static TableOperation insert(final TableEntity entity, boolean echoContent)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    - id: echoContent
      type: 4fc6e284
      description: <p>The boolean representing whether the message payload should be returned in the response. </p>
    return:
      type: com.microsoft.azure.storage.table.TableOperation
      description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to insert the table entity. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.insertOrMerge(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: insertOrMerge(final TableEntity entity)
  nameWithType: TableOperation.insertOrMerge(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableOperation.insertOrMerge(final TableEntity entity)
  type: Method
  summary: "<p>A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instance to merge the specified entity into Microsoft Azure storage, or insert it if it does not exist. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTable#execute(TableOperation)\"></xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance with the table name and the <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> as arguments.</p>\r\n<p></p>"
  syntax:
    content: public static TableOperation insertOrMerge(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    return:
      type: com.microsoft.azure.storage.table.TableOperation
      description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance for inserting or merging the table entity. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.insertOrReplace(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: insertOrReplace(final TableEntity entity)
  nameWithType: TableOperation.insertOrReplace(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableOperation.insertOrReplace(final TableEntity entity)
  type: Method
  summary: "<p>A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instance to replace the specified entity in Microsoft Azure storage, or insert it if it does not exist. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTable#execute(TableOperation)\"></xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance with the table name and the <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> as arguments.</p>\r\n<p></p>"
  syntax:
    content: public static TableOperation insertOrReplace(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    return:
      type: com.microsoft.azure.storage.table.TableOperation
      description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance for inserting or replacing the table entity. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.merge(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: merge(final TableEntity entity)
  nameWithType: TableOperation.merge(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableOperation.merge(final TableEntity entity)
  type: Method
  summary: "<p>A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instance to merge the specified table entity into Microsoft Azure storage. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTable#execute(TableOperation)\"></xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance with the</p>\r\n<p></p>"
  syntax:
    content: public static TableOperation merge(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    return:
      type: com.microsoft.azure.storage.table.TableOperation
      description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance for merging the table entity. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.replace(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: replace(final TableEntity entity)
  nameWithType: TableOperation.replace(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableOperation.replace(final TableEntity entity)
  type: Method
  summary: "<p>A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instance to replace the specified table entity. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTable#execute(TableOperation)\"></xref> method.</p>\r\n<p></p>"
  syntax:
    content: public static TableOperation replace(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    return:
      type: com.microsoft.azure.storage.table.TableOperation
      description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance for replacing the table entity. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.retrieve(final String,final String,final Class<? extends TableEntity>)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: retrieve(final String partitionKey, final String rowKey, final Class<? extends TableEntity> clazzType)
  nameWithType: TableOperation.retrieve(final String partitionKey, final String rowKey, final Class<? extends TableEntity> clazzType)
  fullName: com.microsoft.azure.storage.table.TableOperation.retrieve(final String partitionKey, final String rowKey, final Class<? extends TableEntity> clazzType)
  type: Method
  summary: "<p>A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instance to retrieve the specified table entity and return it as the specified type. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTable#execute(TableOperation)\"></xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance with the</p>\r\n<p></p>"
  syntax:
    content: public static TableOperation retrieve(final String partitionKey, final String rowKey, final Class<? extends TableEntity> clazzType)
    parameters:
    - id: partitionKey
      type: 3d93591e
      description: <p>A <code>String</code> which specifies the PartitionKey value for the entity to retrieve. </p>
    - id: rowKey
      type: 3d93591e
      description: <p>A <code>String</code> which specifies the RowKey value for the entity to retrieve. </p>
    - id: clazzType
      type: f6d66785com.microsoft.azure.storage.table.TableEntitya08ddfce
      description: <p>The class type of the table entity object to retrieve. </p>
    return:
      type: com.microsoft.azure.storage.table.TableOperation
      description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance for retrieving the table entity. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.retrieve(final String,final String,final EntityResolver<?>)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: retrieve(final String partitionKey, final String rowKey, final EntityResolver<?> resolver)
  nameWithType: TableOperation.retrieve(final String partitionKey, final String rowKey, final EntityResolver<?> resolver)
  fullName: com.microsoft.azure.storage.table.TableOperation.retrieve(final String partitionKey, final String rowKey, final EntityResolver<?> resolver)
  type: Method
  summary: "<p>A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instance to retrieve the specified table entity and return a projection of it using the specified resolver. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTable#execute(TableOperation)\"></xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance with the table name and the <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> as arguments.</p>\r\n<p></p>"
  syntax:
    content: public static TableOperation retrieve(final String partitionKey, final String rowKey, final EntityResolver<?> resolver)
    parameters:
    - id: partitionKey
      type: 3d93591e
      description: <p>A <code>String</code> which specifies the PartitionKey value for the entity to retrieve. </p>
    - id: rowKey
      type: 3d93591e
      description: <p>A <code>String</code> which specifies the RowKey value for the entity to retrieve. </p>
    - id: resolver
      type: 93de0ef9com.microsoft.azure.storage.table.EntityResolver7e6ad1eb
      description: <p>The implementation of <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> to use to project the result entity as type T. </p>
    return:
      type: com.microsoft.azure.storage.table.TableOperation
      description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance for retrieving the table entity. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.setEchoContent(boolean)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: setEchoContent(boolean echoContent)
  nameWithType: TableOperation.setEchoContent(boolean echoContent)
  fullName: com.microsoft.azure.storage.table.TableOperation.setEchoContent(boolean echoContent)
  type: Method
  summary: "<p>Sets the boolean representing whether the message payload should be returned in the response.</p>\r\n<p></p>"
  syntax:
    content: protected void setEchoContent(boolean echoContent)
    parameters:
    - id: echoContent
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the message payload should be returned in the response; otherwise <code>false</code>. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.setEntity(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: setEntity(final TableEntity entity)
  nameWithType: TableOperation.setEntity(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableOperation.setEntity(final TableEntity entity)
  type: Method
  summary: "<p>Reserved for internal use. Sets the <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> instance for the table operation.</p>\r\n<p></p>"
  syntax:
    content: protected synchronized final void setEntity(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> instance to set. </p>
    return:
      type: 8d07681d
- uid: com.microsoft.azure.storage.table.TableOperation.TableOperation()
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: TableOperation()
  nameWithType: TableOperation.TableOperation()
  fullName: com.microsoft.azure.storage.table.TableOperation.TableOperation()
  type: Constructor
  summary: "<p>Nullary Default Constructor. </p>"
  syntax:
    content: protected TableOperation()
- uid: com.microsoft.azure.storage.table.TableOperation.TableOperation(final TableEntity,final TableOperationType)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: TableOperation(final TableEntity entity, final TableOperationType opType)
  nameWithType: TableOperation.TableOperation(final TableEntity entity, final TableOperationType opType)
  fullName: com.microsoft.azure.storage.table.TableOperation.TableOperation(final TableEntity entity, final TableOperationType opType)
  type: Constructor
  summary: "<p>Reserved for internal use. Constructs a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> with the specified table entity and operation type.</p>\r\n<p></p>"
  syntax:
    content: protected TableOperation(final TableEntity entity, final TableOperationType opType)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    - id: opType
      type: ad32c68e
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TableOperationType"></xref> enumeration value for the operation type. </p>
- uid: com.microsoft.azure.storage.table.TableOperation.TableOperation(final TableEntity,final TableOperationType,final boolean)
  parent: com.microsoft.azure.storage.table.TableOperation
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: TableOperation(final TableEntity entity, final TableOperationType opType, final boolean echoContent)
  nameWithType: TableOperation.TableOperation(final TableEntity entity, final TableOperationType opType, final boolean echoContent)
  fullName: com.microsoft.azure.storage.table.TableOperation.TableOperation(final TableEntity entity, final TableOperationType opType, final boolean echoContent)
  type: Constructor
  summary: "<p>Reserved for internal use. Constructs a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> with the specified table entity and operation type.</p>\r\n<p></p>"
  syntax:
    content: protected TableOperation(final TableEntity entity, final TableOperationType opType, final boolean echoContent)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    - id: opType
      type: ad32c68e
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TableOperationType"></xref> enumeration value for the operation type. </p>
    - id: echoContent
      type: 4dda0764
      description: <p>The boolean representing whether the message payload should be returned in the response. </p>
- uid: com.microsoft.azure.storage.table.TableOperation
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: TableOperation
  nameWithType: TableOperation
  fullName: com.microsoft.azure.storage.table.TableOperation
  type: Class
  summary: "<p>A class which represents a single table operation. </p>\r\n<p>Use the static factory methods to construct <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instances for operations on tables that insert, update, merge, delete, replace or retrieve table entities. To execute a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instance, call the  method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance. A <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> may be executed directly or as part of a <xref uid=\"com.microsoft.azure.storage.table.TableBatchOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableBatchOperation\"></xref>. If a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> returns an entity result, it is stored in the corresponding <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableResult\"></xref> returned by the  method. </p>"
  syntax:
    content: public class TableOperation
- uid: com.microsoft.azure.storage.table.EntityResolver
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.EntityResolver.yml
  name: EntityResolver<T>
  nameWithType: EntityResolver<T>
  fullName: com.microsoft.azure.storage.table.EntityResolver<T>
  type: Interface
  summary: "<p>An interface to perform client side projection on a retrieved entity. An <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityResolver\"></xref> instance must implement a  method projecting the entity data represented by the parameters passed in as a new instance of the type specified by the type parameter. </p>\r\n<p>This interface is useful for converting directly from table entity data to a client object type without requiring a separate table entity class type that deserializes every property individually. For example, a client can perform a client side projection of a <em>Customer</em> entity by simply returning the  for the <em>CustomerName</em> property of each entity. The result of this projection will be a collection of s containing each customer name.</p>\r\n<p></p>"
  syntax:
    content: public interface EntityResolver<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>The type of the object that the resolver produces. </p>
- uid: com.microsoft.azure.storage.table.TableEntity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableEntity.yml
  name: TableEntity
  nameWithType: TableEntity
  fullName: com.microsoft.azure.storage.table.TableEntity
  type: Interface
  summary: "<p>An interface required for table entity types. The <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> interface declares getter and setter methods for the common entity properties, and  and  methods for serialization and deserialization of all entity properties using a property map. Create classes implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity. </p>\r\n<p>The Storage client library includes two implementations of <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> that provide for simple property access and serialization: </p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> and provides a simple property map to store and retrieve properties. Use a <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties. You can also use this type to perform bulk table updates of heterogeneous entities without losing property information. </p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> is an implementation of <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> that uses reflection-based serialization and deserialization behavior in its  and  methods. <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref>-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically. </p>\r\n<p>Any class that implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> by invoking the static methods  in  and  in . The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically. When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data. The reflection code looks for getter and setter methods in pairs of the form </p>\r\n<p></p>\r\n<p>and </p>\r\n<p></p>\r\n<p>where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property. See the table in the class description for <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> for a map of property types to their Java equivalents. The <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention. Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotations are case sensitive for matching property names with reflection. Use the <xref uid=\"com.microsoft.azure.storage.table.Ignore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Ignore\"></xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization. Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation in a subclass that uses the reflection methods. </p>\r\n<p></p>"
  syntax:
    content: public interface TableEntity
- uid: com.microsoft.azure.storage.table.TableResult
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableResult.yml
  name: TableResult
  nameWithType: TableResult
  fullName: com.microsoft.azure.storage.table.TableResult
  type: Class
  summary: "<p>A class which represents the result of a table operation. The <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableResult\"></xref> class encapsulates the HTTP response and any table entity results returned by the Storage Service REST API operation called for a particular <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref>. </p>"
  syntax:
    content: public class TableResult
- uid: com.microsoft.azure.storage.OperationContext
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.OperationContext.yml
  name: OperationContext
  nameWithType: OperationContext
  fullName: com.microsoft.azure.storage.OperationContext
  type: Class
  summary: "<p>Represents the current logical operation. A logical operation may have a one-to-many relationship with multiple individual physical requests. </p>"
  syntax:
    content: public class OperationContext
- uid: com.microsoft.azure.storage.table.TableRequestOptions
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableRequestOptions.yml
  name: TableRequestOptions
  nameWithType: TableRequestOptions
  fullName: com.microsoft.azure.storage.table.TableRequestOptions
  type: Class
  summary: "<p>Represents a set of timeout, payload format, and retry policy options that may be specified for a table operation request. </p>"
  syntax:
    content: public class TableRequestOptions
- uid: com.microsoft.azure.storage.StorageException
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.StorageException.yml
  name: StorageException
  nameWithType: StorageException
  fullName: com.microsoft.azure.storage.StorageException
  type: Class
  summary: "<p>Represents an exception for the Microsoft Azure storage service. </p>"
  syntax:
    content: public class StorageException
- uid: com.microsoft.azure.storage.table.CloudTableClient
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.CloudTableClient.yml
  name: CloudTableClient
  nameWithType: CloudTableClient
  fullName: com.microsoft.azure.storage.table.CloudTableClient
  type: Class
  summary: "<p>Provides a service client for accessing the Microsoft Azure Table service. </p>\r\n<p>The <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> class encapsulates the base URI for the Table service endpoint and the credentials for accessing the storage account, and provides methods to create, delete, list, and query tables, as well as methods to execute operations and queries on table entities. These methods invoke Storage Service REST API operations to make the requests and obtain the results that are returned. </p>\r\n<p>A Table service endpoint is the base URI for Table service resources, including the DNS name of the storage account: <br /><br />\r\n For more information, see the MSDN topic <a href=\"http://msdn.microsoft.com/en-us/library/azure/dd179360.aspx\">Addressing Table Service Resources</a>. </p>\r\n<p>The credentials can be a combination of the storage account name and a key, or a shared access signature. For more information, see the MSDN topic <a href=\"http://msdn.microsoft.com/en-us/library/azure/hh225339.aspx\">Authenticating Access to Your Storage Account</a>. </p>"
  syntax:
    content: public class CloudTableClient extends ServiceClient
- uid: com.microsoft.azure.storage.table.QueryTableOperation
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  name: QueryTableOperation
  nameWithType: QueryTableOperation
  fullName: com.microsoft.azure.storage.table.QueryTableOperation
  type: Class
  summary: "<p>A class that extends <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> to implement a query to retrieve a single table entity. To execute a <xref uid=\"com.microsoft.azure.storage.table.QueryTableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryTableOperation\"></xref> instance, call the  method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance. This operation can be executed directly or as part of a <xref uid=\"com.microsoft.azure.storage.table.TableBatchOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableBatchOperation\"></xref>. If the <xref uid=\"com.microsoft.azure.storage.table.QueryTableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryTableOperation\"></xref> returns an entity result, it is stored in the corresponding <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableResult\"></xref> returned by the  method. </p>"
  syntax: *o1
- uid: com.microsoft.azure.storage.core.StorageRequest
  parent: com.microsoft.azure.storage.core
  href: com.microsoft.azure.storage.core.StorageRequest.yml
  name: StorageRequest<C,P,R>
  nameWithType: StorageRequest<C,P,R>
  fullName: com.microsoft.azure.storage.core.StorageRequest<C,P,R>
  type: Class
  summary: "<p>RESERVED FOR INTERNAL USE. A class which encapsulate the execution of a given storage operation.</p>\r\n<p></p>"
  syntax:
    content: public class StorageRequest<C,P,R>
    typeParameters:
    - id: C
      type: 37f8610d
      description: <p>The service client type </p>
    - id: P
      type: db9ec244
      description: <p>The type of the parent object, i.e. CloudBlobContainer for downloadAttributes etc. </p>
    - id: R
      type: d4d3e1e1
      description: <p>The type of the expected result </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  name: TableBatchOperation
  nameWithType: TableBatchOperation
  fullName: com.microsoft.azure.storage.table.TableBatchOperation
  type: Class
  summary: "<p>A class which represents a batch operation. A batch operation is a collection of table operations which are executed by the Storage Service REST API as a single atomic operation, by invoking an <a href=\"http://msdn.microsoft.com/en-us/library/azure/dd894038.aspx\">Entity Group Transaction</a>. </p>\r\n<p>A batch operation may contain up to 100 individual table operations, with the requirement that each operation entity must have same partition key. A batch with a retrieve operation cannot contain any other operations. Note that the total payload of a batch operation is limited to 4MB. </p>"
  syntax:
    content: public class TableBatchOperation
