### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation()
  name: QueryTableOperation()
  nameWithType: QueryTableOperation.QueryTableOperation()
  summary: <p>Default constructor. </p>
  syntax: protected QueryTableOperation()
  uid: com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.table.TableOperation?alt=com.microsoft.azure.storage.table.TableOperation&text=TableOperation" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.storage.table.TableOperation.delete(final TableEntity)
- com.microsoft.azure.storage.table.TableOperation.execute(final CloudTableClient,final String,TableRequestOptions,OperationContext)
- com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity(boolean,final String)
- com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable(final String)
- com.microsoft.azure.storage.table.TableOperation.getEchoContent()
- com.microsoft.azure.storage.table.TableOperation.getEntity()
- com.microsoft.azure.storage.table.TableOperation.getOperationType()
- com.microsoft.azure.storage.table.TableOperation.insert(final TableEntity)
- com.microsoft.azure.storage.table.TableOperation.insert(final TableEntity,boolean)
- com.microsoft.azure.storage.table.TableOperation.insertOrMerge(final TableEntity)
- com.microsoft.azure.storage.table.TableOperation.insertOrReplace(final TableEntity)
- com.microsoft.azure.storage.table.TableOperation.merge(final TableEntity)
- com.microsoft.azure.storage.table.TableOperation.replace(final TableEntity)
- com.microsoft.azure.storage.table.TableOperation.retrieve(final String,final String,final Class<? extends TableEntity>)
- com.microsoft.azure.storage.table.TableOperation.retrieve(final String,final String,final EntityResolver<?>)
- com.microsoft.azure.storage.table.TableOperation.setEchoContent(boolean)
- com.microsoft.azure.storage.table.TableOperation.setEntity(final TableEntity)
- com.microsoft.azure.storage.table.TableOperation.TableOperation()
- com.microsoft.azure.storage.table.TableOperation.TableOperation(final TableEntity,final TableOperationType)
- com.microsoft.azure.storage.table.TableOperation.TableOperation(final TableEntity,final TableOperationType,final boolean)
methods:
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.getClazzType()
  name: getClazzType()
  nameWithType: QueryTableOperation.getClazzType()
  returns:
    description: <p>The <code>java.lang.Class</code> implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> that represents the entity type for the query. </p>
    type: Class&lt;? extends <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Reserved for internal use. Gets the class type of the entity returned by the query.</p>

    <p></p>
  syntax: protected Class<? extends TableEntity> getClazzType()
  uid: com.microsoft.azure.storage.table.QueryTableOperation.getClazzType()
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey()
  name: getPartitionKey()
  nameWithType: QueryTableOperation.getPartitionKey()
  returns:
    description: <p>A <code>String</code> containing the PartitionKey value for the entity. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the PartitionKey value for the entity to retrieve.</p>

    <p></p>
  syntax: public String getPartitionKey()
  uid: com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey()
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.getResolver()
  name: getResolver()
  nameWithType: QueryTableOperation.getResolver()
  returns:
    description: <p>The <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> instance. </p>
    type: <xref href="com.microsoft.azure.storage.table.EntityResolver?alt=com.microsoft.azure.storage.table.EntityResolver&text=EntityResolver" data-throw-if-not-resolved="False"/>&lt;?&gt;
  summary: >-
    <p>Gets the resolver to project the entity retrieved as a particular type.</p>

    <p></p>
  syntax: public EntityResolver<?> getResolver()
  uid: com.microsoft.azure.storage.table.QueryTableOperation.getResolver()
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.getRowKey()
  name: getRowKey()
  nameWithType: QueryTableOperation.getRowKey()
  returns:
    description: <p>A <code>String</code> containing the RowKey value for the entity. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the RowKey value for the entity to retrieve.</p>

    <p></p>
  syntax: public String getRowKey()
  uid: com.microsoft.azure.storage.table.QueryTableOperation.getRowKey()
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve()
  name: isPrimaryOnlyRetrieve()
  nameWithType: QueryTableOperation.isPrimaryOnlyRetrieve()
  returns:
    description: <p>the isPrimaryOnlyRetrieve </p>
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  syntax: protected final boolean isPrimaryOnlyRetrieve()
  uid: com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve()
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.parseResponse(final InputStream inStream, final int httpStatusCode, String etagFromHeader, final OperationContext opContext, final TableRequestOptions options)
  name: parseResponse(final InputStream inStream, final int httpStatusCode, String etagFromHeader, final OperationContext opContext, final TableRequestOptions options)
  nameWithType: QueryTableOperation.parseResponse(final InputStream inStream, final int httpStatusCode, String etagFromHeader, final OperationContext opContext, final TableRequestOptions options)
  parameters:
  - description: <p>An <code>InputStream</code> containing the response to a query operation. </p>
    name: inStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>The HTTP status code returned from the operation request. </p>
    name: httpStatusCode
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>The <code>String</code> containing the Etag returned with the operation response. </p>
    name: etagFromHeader
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  - name: options
    type: final <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InstantiationException?alt=InstantiationException&text=InstantiationException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs in object construction. </p>
  - type: <xref href="IllegalAccessException?alt=IllegalAccessException&text=IllegalAccessException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs in reflection on an object type. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs in the storage operation. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs while accessing the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> with Json. </p>
  - type: <xref href="JsonParseException?alt=JsonParseException&text=JsonParseException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs while parsing the Json, if Json is used. </p>
  returns:
    description: <p>The <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> representing the result of the query operation.</p>
    type: <xref href="com.microsoft.azure.storage.table.TableResult?alt=com.microsoft.azure.storage.table.TableResult&text=TableResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Parses the table operation response into a <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> to return.</p>

    <p></p>
  syntax: protected TableResult parseResponse(final InputStream inStream, final int httpStatusCode, String etagFromHeader, final OperationContext opContext, final TableRequestOptions options)
  uid: com.microsoft.azure.storage.table.QueryTableOperation.parseResponse(final InputStream,final int,String,final OperationContext,final TableRequestOptions)
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve(final CloudTableClient client, final String tableName, final TableRequestOptions options, final OperationContext opContext)
  name: performRetrieve(final CloudTableClient client, final String tableName, final TableRequestOptions options, final OperationContext opContext)
  nameWithType: QueryTableOperation.performRetrieve(final CloudTableClient client, final String tableName, final TableRequestOptions options, final OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance specifying the Table service endpoint and storage account credentials to use. </p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.table.CloudTableClient?alt=com.microsoft.azure.storage.table.CloudTableClient&text=CloudTableClient" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> containing the name of the table to query. </p>
    name: tableName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object for tracking the current operation.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs in the storage operation. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> containing the results of executing the query operation.</p>
    type: <xref href="com.microsoft.azure.storage.table.TableResult?alt=com.microsoft.azure.storage.table.TableResult&text=TableResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Performs a retrieve operation on the specified table, using the specified <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> and <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref>. </p>

    <p>This method will invoke the Storage Service REST API to execute this table operation, using the Table service endpoint and storage account credentials in the <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> object.</p>

    <p></p>
  syntax: protected TableResult performRetrieve(final CloudTableClient client, final String tableName, final TableRequestOptions options, final OperationContext opContext)
  uid: com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve(final CloudTableClient,final String,final TableRequestOptions,final OperationContext)
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.setClazzType(final Class<? extends TableEntity> clazzType)
  name: setClazzType(final Class<? extends TableEntity> clazzType)
  nameWithType: QueryTableOperation.setClazzType(final Class<? extends TableEntity> clazzType)
  parameters:
  - description: <p>The <code>java.lang.Class</code> implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> that represents the entity type for the query. </p>
    name: clazzType
    type: final Class&lt;? extends <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Reserved for internal use. Sets the class type of the entity returned by the query.</p>

    <p></p>
  syntax: protected void setClazzType(final Class<? extends TableEntity> clazzType)
  uid: com.microsoft.azure.storage.table.QueryTableOperation.setClazzType(final Class<? extends TableEntity>)
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey(final String partitionKey)
  name: setPartitionKey(final String partitionKey)
  nameWithType: QueryTableOperation.setPartitionKey(final String partitionKey)
  parameters:
  - description: <p>A <code>String</code> containing the PartitionKey value for the entity. </p>
    name: partitionKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Sets the PartitionKey value for the entity to retrieve.</p>

    <p></p>
  syntax: protected void setPartitionKey(final String partitionKey)
  uid: com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey(final String)
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve(boolean isPrimaryOnlyRetrieve)
  name: setPrimaryOnlyRetrieve(boolean isPrimaryOnlyRetrieve)
  nameWithType: QueryTableOperation.setPrimaryOnlyRetrieve(boolean isPrimaryOnlyRetrieve)
  parameters:
  - description: <p>the isPrimaryOnlyRetrieve to set </p>
    name: isPrimaryOnlyRetrieve
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: protected void setPrimaryOnlyRetrieve(boolean isPrimaryOnlyRetrieve)
  uid: com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve(boolean)
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.setResolver(final EntityResolver<?> resolver)
  name: setResolver(final EntityResolver<?> resolver)
  nameWithType: QueryTableOperation.setResolver(final EntityResolver<?> resolver)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> instance to use. </p>
    name: resolver
    type: final <xref href="com.microsoft.azure.storage.table.EntityResolver?alt=com.microsoft.azure.storage.table.EntityResolver&text=EntityResolver" data-throw-if-not-resolved="False"/>&lt;?&gt;
  summary: >-
    <p>Reserved for internal use. Sets the resolver to project the entity retrieved as a particular type.</p>

    <p></p>
  syntax: protected void setResolver(final EntityResolver<?> resolver)
  uid: com.microsoft.azure.storage.table.QueryTableOperation.setResolver(final EntityResolver<?>)
- fullName: com.microsoft.azure.storage.table.QueryTableOperation.setRowKey(final String rowKey)
  name: setRowKey(final String rowKey)
  nameWithType: QueryTableOperation.setRowKey(final String rowKey)
  parameters:
  - description: <p>A <code>String</code> containing the RowKey value for the entity. </p>
    name: rowKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Sets the RowKey value for the entity to retrieve.</p>

    <p></p>
  syntax: protected void setRowKey(final String rowKey)
  uid: com.microsoft.azure.storage.table.QueryTableOperation.setRowKey(final String)
nameWithType: QueryTableOperation
syntax: public class QueryTableOperation extends TableOperation
type: class
uid: com.microsoft.azure.storage.table.QueryTableOperation
fullName: com.microsoft.azure.storage.table.QueryTableOperation
name: QueryTableOperation
package: com.microsoft.azure.storage.table
summary: <p>A class that extends <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> to implement a query to retrieve a single table entity. To execute a <xref uid="com.microsoft.azure.storage.table.QueryTableOperation" data-throw-if-not-resolved="false" data-raw-source="QueryTableOperation"></xref> instance, call the  method on a <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance. This operation can be executed directly or as part of a <xref uid="com.microsoft.azure.storage.table.TableBatchOperation" data-throw-if-not-resolved="false" data-raw-source="TableBatchOperation"></xref>. If the <xref uid="com.microsoft.azure.storage.table.QueryTableOperation" data-throw-if-not-resolved="false" data-raw-source="QueryTableOperation"></xref> returns an entity result, it is stored in the corresponding <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> returned by the  method. </p>
metadata: {}
