items:
- uid: system.fabric._cancellation_token
  id: _cancellation_token
  parent: system.fabric
  children:
  - system.fabric._cancellation_token.getDefault()
  - system.fabric._cancellation_token.isCancelled()
  - system.fabric._cancellation_token.throwIfCancellationRequested()
  href: system.fabric._cancellation_token.yml
  langs:
  - java
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
    startLine: 15
  package: system.fabric
  summary: <p>A <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref href="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false"></xref> object, which manages cancellation tokens retrieved from its <xref href="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false"></xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref href="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false"></xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax: &o1
    content: public class CancellationToken
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - system.fabric._cancellation_token.cancel()
  - system.fabric._cancellation_token.CancellationToken()
- uid: system.fabric._cancellation_token.getDefault()
  id: getDefault()
  parent: system.fabric._cancellation_token
  href: system.fabric._cancellation_token.yml
  langs:
  - java
  name: getDefault()
  nameWithType: CancellationToken.getDefault()
  fullName: static CancellationToken system.fabric.CancellationToken.getDefault()
  overload: system.fabric._cancellation_token.getDefault*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
    startLine: 41
  package: system.fabric
  summary: >-
    <p>Creates and returns a Cancellation token object. This method should be used when the <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> doesn't support cancellation. Only Cancellation tokens created through <xref href="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false"></xref> supports cancellations.</p>

    <p></p>
  syntax:
    content: public static CancellationToken getDefault()
    return:
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref>

        </p>
- uid: system.fabric._cancellation_token.isCancelled()
  id: isCancelled()
  parent: system.fabric._cancellation_token
  href: system.fabric._cancellation_token.yml
  langs:
  - java
  name: isCancelled()
  nameWithType: CancellationToken.isCancelled()
  fullName: boolean system.fabric.CancellationToken.isCancelled()
  overload: system.fabric._cancellation_token.isCancelled*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
    startLine: 30
  package: system.fabric
  summary: >-
    <p>Gets whether cancellation has been requested for this token.</p>

    <p></p>
  syntax:
    content: public boolean isCancelled()
    return:
      type: 4fc6e284
      description: <p>boolean cancellation status </p>
- uid: system.fabric._cancellation_token.throwIfCancellationRequested()
  id: throwIfCancellationRequested()
  parent: system.fabric._cancellation_token
  href: system.fabric._cancellation_token.yml
  langs:
  - java
  name: throwIfCancellationRequested()
  nameWithType: CancellationToken.throwIfCancellationRequested()
  fullName: void system.fabric.CancellationToken.throwIfCancellationRequested()
  overload: system.fabric._cancellation_token.throwIfCancellationRequested*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
    startLine: 48
  package: system.fabric
  summary: <p>Throws a CancellationException if this token has had cancellation requested. </p>
  syntax:
    content: public void throwIfCancellationRequested()
references:
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: system.fabric._cancellation_token.isCancelled*
  name: isCancelled
  nameWithType: CancellationToken.isCancelled
  fullName: boolean system.fabric.CancellationToken.isCancelled
  package: system.fabric
- uid: system.fabric._cancellation_token.throwIfCancellationRequested*
  name: throwIfCancellationRequested
  nameWithType: CancellationToken.throwIfCancellationRequested
  fullName: void system.fabric.CancellationToken.throwIfCancellationRequested
  package: system.fabric
- uid: system.fabric._cancellation_token.getDefault*
  name: getDefault
  nameWithType: CancellationToken.getDefault
  fullName: static CancellationToken system.fabric.CancellationToken.getDefault
  package: system.fabric
- uid: system.fabric._cancellation_token.cancel()
- uid: system.fabric._cancellation_token.CancellationToken()
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref href="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false"></xref> object, which manages cancellation tokens retrieved from its <xref href="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false"></xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref href="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false"></xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax: *o1
- uid: system.fabric._cancellation_token_source.getToken()
  parent: system.fabric._cancellation_token_source
  href: system.fabric._cancellation_token_source.yml
  name: getToken()
  nameWithType: CancellationTokenSource.getToken()
  fullName: CancellationToken system.fabric.CancellationTokenSource.getToken()
  type: Method
  summary: >-
    <p>Returns the cancellation token which is being by this <ref refid="" kindref="compound">system.fabric.CancellationTokenSource</ref> object.</p>

    <p></p>
  syntax:
    content: public CancellationToken getToken()
    return:
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref>

        </p>
- uid: system.fabric._cancellation_token_source
  parent: system.fabric
  href: system.fabric._cancellation_token_source.yml
  name: CancellationTokenSource
  nameWithType: CancellationTokenSource
  fullName: system.fabric.CancellationTokenSource
  type: Class
  summary: <p>A <xref href="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false"></xref> is used to create <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object and manage it. </p>
  syntax:
    content: public class CancellationTokenSource
- uid: system.fabric._cancellation_token_source.cancel()
  parent: system.fabric._cancellation_token_source
  href: system.fabric._cancellation_token_source.yml
  name: cancel()
  nameWithType: CancellationTokenSource.cancel()
  fullName: void system.fabric.CancellationTokenSource.cancel()
  type: Method
  summary: <p>Requests cancel on the <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> being managed by this object. </p>
  syntax:
    content: public void cancel()
