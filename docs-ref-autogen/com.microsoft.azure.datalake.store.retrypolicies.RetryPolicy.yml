### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy
  id: RetryPolicy
  parent: com.microsoft.azure.datalake.store.retrypolicies
  children:
  - com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy.shouldRetry(int,Exception)
  href: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy.yml
  langs:
  - java
  name: RetryPolicy
  nameWithType: RetryPolicy
  fullName: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy
  type: Interface
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/datalake/store/retrypolicies/RetryPolicy.java
      branch: master
      repo: https://github.com/azure/azure-data-lake-store-java
    path: src/main/java/com/microsoft/azure/datalake/store/retrypolicies/RetryPolicy.java
    startLine: 14
  package: com.microsoft.azure.datalake.store.retrypolicies
  summary: "<p>the RetryPolicy controls whether a failed request should be retried, and how long to wait before retrying. </p>\r\n<p>Implementations of this interface implement different retry policies. </p>"
  syntax:
    content: public interface RetryPolicy
- uid: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy.shouldRetry(int,Exception)
  id: shouldRetry(int,Exception)
  parent: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy
  href: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy.yml
  langs:
  - java
  name: shouldRetry(int httpResponseCode, Exception lastException)
  nameWithType: RetryPolicy.shouldRetry(int httpResponseCode, Exception lastException)
  fullName: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy.shouldRetry(int httpResponseCode, Exception lastException)
  overload: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy.shouldRetry*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/retrypolicies/RetryPolicy.java
    startLine: 27
  package: com.microsoft.azure.datalake.store.retrypolicies
  summary: "<p>boolean indicating whether a failed request should be retried. Implementations can use the HTTP response code and any exceptions from the last failure to decide whether to retry. </p>\r\n<p>If the retry policy requires a wait before the next try, then the<code>shouldRetry \r\n    </code> method should wait for the appropriate time before responding back. i.e., there is not an explicit contract for waits, but it is implicit in the time taken by the<code>shouldRetry \r\n    </code> method to return. </p>\r\n<p></p>"
  syntax:
    content: public boolean shouldRetry(int httpResponseCode, Exception lastException)
    parameters:
    - id: httpResponseCode
      type: f75371fa
      description: <p>the HTTP response code received </p>
    - id: lastException
      type: 8a99d4b0
      description: <p>any exceptions encountered while processing the last request </p>
    return:
      type: 4fc6e284
      description: <p>boolean indicating whether the request should be retried </p>
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 8a99d4b0
  spec.java:
  - name: Exception
    fullName: Exception
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy.shouldRetry*
  name: shouldRetry
  nameWithType: RetryPolicy.shouldRetry
  fullName: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy.shouldRetry
  package: com.microsoft.azure.datalake.store.retrypolicies
- uid: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicy
  parent: com.microsoft.azure.datalake.store.retrypolicies
  href: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicy.yml
  name: ExponentialBackoffPolicy
  nameWithType: ExponentialBackoffPolicy
  fullName: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicy
  type: Class
  summary: "<p>implements different retry decisions based on the error.</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>For nonretryable errors (3xx, most 4xx, and some 5xx return codes), do no retry. </p>\r\n    </li>\r\n    <li>\r\n      <p>For throttling error, do a retry with exponential backoff </p>\r\n    </li>\r\n    <li>\r\n      <p>for all other errors, do a retry with linear backoff </p>\r\n    </li>\r\n  </ul>\r\n</p>"
  syntax:
    content: public class ExponentialBackoffPolicy implements RetryPolicy
- uid: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI
  parent: com.microsoft.azure.datalake.store.retrypolicies
  href: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI.yml
  name: ExponentialBackoffPolicyforMSI
  nameWithType: ExponentialBackoffPolicyforMSI
  fullName: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI
  type: Class
  summary: "<p>implements different retry decisions based on the error.</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>For nonretryable errors (3xx, most 4xx, and some 5xx return codes), do no retry. </p>\r\n    </li>\r\n    <li>\r\n      <p>For throttling error, do a retry with exponential backoff </p>\r\n    </li>\r\n    <li>\r\n      <p>for all other errors, do a retry with linear backoff </p>\r\n    </li>\r\n  </ul>\r\n</p>"
  syntax:
    content: public class ExponentialBackoffPolicyforMSI implements RetryPolicy
- uid: com.microsoft.azure.datalake.store.retrypolicies.NonIdempotentRetryPolicy
  parent: com.microsoft.azure.datalake.store.retrypolicies
  href: com.microsoft.azure.datalake.store.retrypolicies.NonIdempotentRetryPolicy.yml
  name: NonIdempotentRetryPolicy
  nameWithType: NonIdempotentRetryPolicy
  fullName: com.microsoft.azure.datalake.store.retrypolicies.NonIdempotentRetryPolicy
  type: Class
  summary: "<p>No retry ever. Always returns false, indicating that erequest should not be retried.</p>\r\n<p>This should be used when retrying is not safe, and user wants at-most-once semantics with the call. This is useful for non-idempotent methods, where the error returned by the last call does not conclusively indicate success or failure of the call. For example, if an append times out but succeeds on the back-end , then retrying it may append the data twice to the file. </p>"
  syntax:
    content: public class NonIdempotentRetryPolicy implements RetryPolicy
- uid: com.microsoft.azure.datalake.store.retrypolicies.NoRetryPolicy
  parent: com.microsoft.azure.datalake.store.retrypolicies
  href: com.microsoft.azure.datalake.store.retrypolicies.NoRetryPolicy.yml
  name: NoRetryPolicy
  nameWithType: NoRetryPolicy
  fullName: com.microsoft.azure.datalake.store.retrypolicies.NoRetryPolicy
  type: Class
  summary: "<p>No retry ever. Always returns false, indicating that erequest should not be retried.</p>\r\n<p>This should be used when retrying is not safe, and user wants at-most-once semantics with the call. This is useful for non-idempotent methods, where the error returned by the last call does not conclusively indicate success or failure of the call. For example, if an append times out but succeeds on the back-end , then retrying it may append the data twice to the file. </p>"
  syntax:
    content: public class NoRetryPolicy implements RetryPolicy
- uid: com.microsoft.azure.datalake.store.retrypolicies.NoRetryPolicy.shouldRetry(int,Exception)
  parent: com.microsoft.azure.datalake.store.retrypolicies.NoRetryPolicy
  href: com.microsoft.azure.datalake.store.retrypolicies.NoRetryPolicy.yml
  name: shouldRetry(int httpResponseCode, Exception lastException)
  nameWithType: NoRetryPolicy.shouldRetry(int httpResponseCode, Exception lastException)
  fullName: com.microsoft.azure.datalake.store.retrypolicies.NoRetryPolicy.shouldRetry(int httpResponseCode, Exception lastException)
  type: Method
  summary: "<p>boolean indicating whether a failed request should be retried. Implementations can use the HTTP response code and any exceptions from the last failure to decide whether to retry. </p>\r\n<p>If the retry policy requires a wait before the next try, then the<code>shouldRetry \r\n    </code> method should wait for the appropriate time before responding back. i.e., there is not an explicit contract for waits, but it is implicit in the time taken by the<code>shouldRetry \r\n    </code> method to return. </p>\r\n<p></p>"
  syntax:
    content: public boolean shouldRetry(int httpResponseCode, Exception lastException)
    parameters:
    - id: httpResponseCode
      type: f75371fa
      description: <p>the HTTP response code received </p>
    - id: lastException
      type: 8a99d4b0
      description: <p>any exceptions encountered while processing the last request </p>
    return:
      type: 4fc6e284
      description: <p>boolean indicating whether the request should be retried </p>
- uid: com.microsoft.azure.datalake.store.retrypolicies.NonIdempotentRetryPolicy.shouldRetry(int,Exception)
  parent: com.microsoft.azure.datalake.store.retrypolicies.NonIdempotentRetryPolicy
  href: com.microsoft.azure.datalake.store.retrypolicies.NonIdempotentRetryPolicy.yml
  name: shouldRetry(int httpResponseCode, Exception lastException)
  nameWithType: NonIdempotentRetryPolicy.shouldRetry(int httpResponseCode, Exception lastException)
  fullName: com.microsoft.azure.datalake.store.retrypolicies.NonIdempotentRetryPolicy.shouldRetry(int httpResponseCode, Exception lastException)
  type: Method
  summary: "<p>boolean indicating whether a failed request should be retried. Implementations can use the HTTP response code and any exceptions from the last failure to decide whether to retry. </p>\r\n<p>If the retry policy requires a wait before the next try, then the<code>shouldRetry \r\n    </code> method should wait for the appropriate time before responding back. i.e., there is not an explicit contract for waits, but it is implicit in the time taken by the<code>shouldRetry \r\n    </code> method to return. </p>\r\n<p></p>"
  syntax:
    content: public boolean shouldRetry(int httpResponseCode, Exception lastException)
    parameters:
    - id: httpResponseCode
      type: f75371fa
      description: <p>the HTTP response code received </p>
    - id: lastException
      type: 8a99d4b0
      description: <p>any exceptions encountered while processing the last request </p>
    return:
      type: 4fc6e284
      description: <p>boolean indicating whether the request should be retried </p>
- uid: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI.shouldRetry(int,Exception)
  parent: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI
  href: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI.yml
  name: shouldRetry(int httpResponseCode, Exception lastException)
  nameWithType: ExponentialBackoffPolicyforMSI.shouldRetry(int httpResponseCode, Exception lastException)
  fullName: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI.shouldRetry(int httpResponseCode, Exception lastException)
  type: Method
  summary: "<p>boolean indicating whether a failed request should be retried. Implementations can use the HTTP response code and any exceptions from the last failure to decide whether to retry. </p>\r\n<p>If the retry policy requires a wait before the next try, then the<code>shouldRetry \r\n    </code> method should wait for the appropriate time before responding back. i.e., there is not an explicit contract for waits, but it is implicit in the time taken by the<code>shouldRetry \r\n    </code> method to return. </p>\r\n<p></p>"
  syntax:
    content: public boolean shouldRetry(int httpResponseCode, Exception lastException)
    parameters:
    - id: httpResponseCode
      type: f75371fa
      description: <p>the HTTP response code received </p>
    - id: lastException
      type: 8a99d4b0
      description: <p>any exceptions encountered while processing the last request </p>
    return:
      type: 4fc6e284
      description: <p>boolean indicating whether the request should be retried </p>
- uid: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicy.shouldRetry(int,Exception)
  parent: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicy
  href: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicy.yml
  name: shouldRetry(int httpResponseCode, Exception lastException)
  nameWithType: ExponentialBackoffPolicy.shouldRetry(int httpResponseCode, Exception lastException)
  fullName: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicy.shouldRetry(int httpResponseCode, Exception lastException)
  type: Method
  summary: "<p>boolean indicating whether a failed request should be retried. Implementations can use the HTTP response code and any exceptions from the last failure to decide whether to retry. </p>\r\n<p>If the retry policy requires a wait before the next try, then the<code>shouldRetry \r\n    </code> method should wait for the appropriate time before responding back. i.e., there is not an explicit contract for waits, but it is implicit in the time taken by the<code>shouldRetry \r\n    </code> method to return. </p>\r\n<p></p>"
  syntax:
    content: public boolean shouldRetry(int httpResponseCode, Exception lastException)
    parameters:
    - id: httpResponseCode
      type: f75371fa
      description: <p>the HTTP response code received </p>
    - id: lastException
      type: 8a99d4b0
      description: <p>any exceptions encountered while processing the last request </p>
    return:
      type: 4fc6e284
      description: <p>boolean indicating whether the request should be retried </p>
