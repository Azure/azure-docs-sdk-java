### YamlMime:JavaType
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview"
name: "LiveEventPreview"
nameWithType: "LiveEventPreview"
summary: "Live event preview settings."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **LiveEventPreview**"
constructors:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.LiveEventPreview()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.LiveEventPreview()"
  name: "LiveEventPreview()"
  nameWithType: "LiveEventPreview.LiveEventPreview()"
  syntax: "public LiveEventPreview()"
methods:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.accessControl()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.accessControl()"
  name: "accessControl()"
  nameWithType: "LiveEventPreview.accessControl()"
  summary: "Get the access control for live event preview."
  syntax: "public LiveEventPreviewAccessControl accessControl()"
  desc: "Get the access control for live event preview."
  returns:
    description: "the accessControl value"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreviewAccessControl?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreviewAccessControl&text=LiveEventPreviewAccessControl\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.alternativeMediaId()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.alternativeMediaId()"
  name: "alternativeMediaId()"
  nameWithType: "LiveEventPreview.alternativeMediaId()"
  summary: "Get an alternative media identifier associated with the streaming locator created for the preview."
  syntax: "public String alternativeMediaId()"
  desc: "Get an alternative media identifier associated with the streaming locator created for the preview. This value is specified at creation time and cannot be updated. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field."
  returns:
    description: "the alternativeMediaId value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.endpoints()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.endpoints()"
  name: "endpoints()"
  nameWithType: "LiveEventPreview.endpoints()"
  summary: "Get the endpoints for preview."
  syntax: "public List<LiveEventEndpoint> endpoints()"
  desc: "Get the endpoints for preview. Do not share the preview URL with the live event audience."
  returns:
    description: "the endpoints value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventEndpoint?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventEndpoint&text=LiveEventEndpoint\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.previewLocator()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.previewLocator()"
  name: "previewLocator()"
  nameWithType: "LiveEventPreview.previewLocator()"
  summary: "Get the identifier of the preview locator in Guid format."
  syntax: "public String previewLocator()"
  desc: "Get the identifier of the preview locator in Guid format. Specifying this at creation time allows the caller to know the preview locator url before the event is created. If omitted, the service will generate a random identifier. This value cannot be updated once the live event is created."
  returns:
    description: "the previewLocator value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.streamingPolicyName()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.streamingPolicyName()"
  name: "streamingPolicyName()"
  nameWithType: "LiveEventPreview.streamingPolicyName()"
  summary: "Get the name of streaming policy used for the live event preview."
  syntax: "public String streamingPolicyName()"
  desc: "Get the name of streaming policy used for the live event preview. This value is specified at creation time and cannot be updated."
  returns:
    description: "the streamingPolicyName value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.withAccessControl(com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreviewAccessControl)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.withAccessControl(LiveEventPreviewAccessControl accessControl)"
  name: "withAccessControl(LiveEventPreviewAccessControl accessControl)"
  nameWithType: "LiveEventPreview.withAccessControl(LiveEventPreviewAccessControl accessControl)"
  summary: "Set the access control for live event preview."
  parameters:
  - description: "the accessControl value to set"
    name: "accessControl"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreviewAccessControl?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreviewAccessControl&text=LiveEventPreviewAccessControl\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LiveEventPreview withAccessControl(LiveEventPreviewAccessControl accessControl)"
  desc: "Set the access control for live event preview."
  returns:
    description: "the LiveEventPreview object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview&text=LiveEventPreview\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.withAlternativeMediaId(java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.withAlternativeMediaId(String alternativeMediaId)"
  name: "withAlternativeMediaId(String alternativeMediaId)"
  nameWithType: "LiveEventPreview.withAlternativeMediaId(String alternativeMediaId)"
  summary: "Set an alternative media identifier associated with the streaming locator created for the preview."
  parameters:
  - description: "the alternativeMediaId value to set"
    name: "alternativeMediaId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LiveEventPreview withAlternativeMediaId(String alternativeMediaId)"
  desc: "Set an alternative media identifier associated with the streaming locator created for the preview. This value is specified at creation time and cannot be updated. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field."
  returns:
    description: "the LiveEventPreview object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview&text=LiveEventPreview\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.withEndpoints(java.util.List<com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventEndpoint>)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.withEndpoints(List<LiveEventEndpoint> endpoints)"
  name: "withEndpoints(List<LiveEventEndpoint> endpoints)"
  nameWithType: "LiveEventPreview.withEndpoints(List<LiveEventEndpoint> endpoints)"
  summary: "Set the endpoints for preview."
  parameters:
  - description: "the endpoints value to set"
    name: "endpoints"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventEndpoint?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventEndpoint&text=LiveEventEndpoint\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public LiveEventPreview withEndpoints(List<LiveEventEndpoint> endpoints)"
  desc: "Set the endpoints for preview. Do not share the preview URL with the live event audience."
  returns:
    description: "the LiveEventPreview object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview&text=LiveEventPreview\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.withPreviewLocator(java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.withPreviewLocator(String previewLocator)"
  name: "withPreviewLocator(String previewLocator)"
  nameWithType: "LiveEventPreview.withPreviewLocator(String previewLocator)"
  summary: "Set the identifier of the preview locator in Guid format."
  parameters:
  - description: "the previewLocator value to set"
    name: "previewLocator"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LiveEventPreview withPreviewLocator(String previewLocator)"
  desc: "Set the identifier of the preview locator in Guid format. Specifying this at creation time allows the caller to know the preview locator url before the event is created. If omitted, the service will generate a random identifier. This value cannot be updated once the live event is created."
  returns:
    description: "the LiveEventPreview object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview&text=LiveEventPreview\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.withStreamingPolicyName(java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview.withStreamingPolicyName(String streamingPolicyName)"
  name: "withStreamingPolicyName(String streamingPolicyName)"
  nameWithType: "LiveEventPreview.withStreamingPolicyName(String streamingPolicyName)"
  summary: "Set the name of streaming policy used for the live event preview."
  parameters:
  - description: "the streamingPolicyName value to set"
    name: "streamingPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LiveEventPreview withStreamingPolicyName(String streamingPolicyName)"
  desc: "Set the name of streaming policy used for the live event preview. This value is specified at creation time and cannot be updated."
  returns:
    description: "the LiveEventPreview object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview&text=LiveEventPreview\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Live event preview settings."
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
