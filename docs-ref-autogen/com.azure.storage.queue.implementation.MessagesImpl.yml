### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.queue.implementation.MessagesImpl"
  id: "MessagesImpl"
  parent: "com.azure.storage.queue.implementation"
  children:
  - "com.azure.storage.queue.implementation.MessagesImpl.MessagesImpl(com.azure.storage.queue.implementation.AzureQueueStorageImpl)"
  - "com.azure.storage.queue.implementation.MessagesImpl.clearWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.queue.implementation.MessagesImpl.clearWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.queue.implementation.MessagesImpl.dequeueWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.queue.implementation.MessagesImpl.dequeueWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.queue.implementation.MessagesImpl.enqueueWithRestResponseAsync(java.lang.String,com.azure.storage.queue.implementation.models.QueueMessage,com.azure.core.util.Context)"
  - "com.azure.storage.queue.implementation.MessagesImpl.enqueueWithRestResponseAsync(java.lang.String,com.azure.storage.queue.implementation.models.QueueMessage,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.queue.implementation.MessagesImpl.peekWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.queue.implementation.MessagesImpl.peekWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "MessagesImpl"
  nameWithType: "MessagesImpl"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl"
  type: "Class"
  package: "com.azure.storage.queue.implementation"
  summary: "An instance of this class provides access to all the operations defined in Messages."
  syntax:
    content: "public final class MessagesImpl"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.MessagesImpl(com.azure.storage.queue.implementation.AzureQueueStorageImpl)"
  id: "MessagesImpl(com.azure.storage.queue.implementation.AzureQueueStorageImpl)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl"
  langs:
  - "java"
  name: "MessagesImpl(AzureQueueStorageImpl client)"
  nameWithType: "MessagesImpl.MessagesImpl(AzureQueueStorageImpl client)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.MessagesImpl(AzureQueueStorageImpl client)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.MessagesImpl*"
  type: "Constructor"
  package: "com.azure.storage.queue.implementation"
  summary: "Initializes an instance of MessagesImpl."
  syntax:
    content: "public MessagesImpl(AzureQueueStorageImpl client)"
    parameters:
    - id: "client"
      type: "com.azure.storage.queue.implementation.AzureQueueStorageImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.azure.storage.queue.implementation.MessagesImpl.clearWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "clearWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl"
  langs:
  - "java"
  name: "clearWithRestResponseAsync(String queueName, Context context)"
  nameWithType: "MessagesImpl.clearWithRestResponseAsync(String queueName, Context context)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.clearWithRestResponseAsync(String queueName, Context context)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.clearWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.queue.implementation"
  summary: "The Clear operation deletes all messages from the specified queue."
  syntax:
    content: "public Mono<MessagesClearResponse> clearWithRestResponseAsync(String queueName, Context context)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
      description: "The queue name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesClearResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.queue.implementation.MessagesImpl.clearWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "clearWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl"
  langs:
  - "java"
  name: "clearWithRestResponseAsync(String queueName, Integer timeout, String requestId, Context context)"
  nameWithType: "MessagesImpl.clearWithRestResponseAsync(String queueName, Integer timeout, String requestId, Context context)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.clearWithRestResponseAsync(String queueName, Integer timeout, String requestId, Context context)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.clearWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.queue.implementation"
  summary: "The Clear operation deletes all messages from the specified queue."
  syntax:
    content: "public Mono<MessagesClearResponse> clearWithRestResponseAsync(String queueName, Integer timeout, String requestId, Context context)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
      description: "The queue name."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations&gt;Setting Timeouts for Queue Service Operations.&lt;/a&gt;."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesClearResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.queue.implementation.MessagesImpl.dequeueWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "dequeueWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl"
  langs:
  - "java"
  name: "dequeueWithRestResponseAsync(String queueName, Context context)"
  nameWithType: "MessagesImpl.dequeueWithRestResponseAsync(String queueName, Context context)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.dequeueWithRestResponseAsync(String queueName, Context context)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.dequeueWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.queue.implementation"
  summary: "The Dequeue operation retrieves one or more messages from the front of the queue."
  syntax:
    content: "public Mono<MessagesDequeueResponse> dequeueWithRestResponseAsync(String queueName, Context context)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
      description: "The queue name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesDequeueResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.queue.implementation.MessagesImpl.dequeueWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "dequeueWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl"
  langs:
  - "java"
  name: "dequeueWithRestResponseAsync(String queueName, Integer numberOfMessages, Integer visibilitytimeout, Integer timeout, String requestId, Context context)"
  nameWithType: "MessagesImpl.dequeueWithRestResponseAsync(String queueName, Integer numberOfMessages, Integer visibilitytimeout, Integer timeout, String requestId, Context context)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.dequeueWithRestResponseAsync(String queueName, Integer numberOfMessages, Integer visibilitytimeout, Integer timeout, String requestId, Context context)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.dequeueWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.queue.implementation"
  summary: "The Dequeue operation retrieves one or more messages from the front of the queue."
  syntax:
    content: "public Mono<MessagesDequeueResponse> dequeueWithRestResponseAsync(String queueName, Integer numberOfMessages, Integer visibilitytimeout, Integer timeout, String requestId, Context context)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
      description: "The queue name."
    - id: "numberOfMessages"
      type: "java.lang.Integer"
      description: "Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32. If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation."
    - id: "visibilitytimeout"
      type: "java.lang.Integer"
      description: "Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry time."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations&gt;Setting Timeouts for Queue Service Operations.&lt;/a&gt;."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesDequeueResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.queue.implementation.MessagesImpl.enqueueWithRestResponseAsync(java.lang.String,com.azure.storage.queue.implementation.models.QueueMessage,com.azure.core.util.Context)"
  id: "enqueueWithRestResponseAsync(java.lang.String,com.azure.storage.queue.implementation.models.QueueMessage,com.azure.core.util.Context)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl"
  langs:
  - "java"
  name: "enqueueWithRestResponseAsync(String queueName, QueueMessage queueMessage, Context context)"
  nameWithType: "MessagesImpl.enqueueWithRestResponseAsync(String queueName, QueueMessage queueMessage, Context context)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.enqueueWithRestResponseAsync(String queueName, QueueMessage queueMessage, Context context)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.enqueueWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.queue.implementation"
  summary: "The Enqueue operation adds a new message to the back of the message queue. A visibility timeout can also be specified to make the message invisible until the visibility timeout expires. A message must be in a format that can be included in an XML request with UTF-8 encoding. The encoded message can be up to 64 KB in size for versions 2011-08-18 and newer, or 8 KB in size for previous versions."
  syntax:
    content: "public Mono<MessagesEnqueueResponse> enqueueWithRestResponseAsync(String queueName, QueueMessage queueMessage, Context context)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
      description: "The queue name."
    - id: "queueMessage"
      type: "com.azure.storage.queue.implementation.models.QueueMessage"
      description: "A Message object which can be stored in a Queue."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesEnqueueResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.queue.implementation.MessagesImpl.enqueueWithRestResponseAsync(java.lang.String,com.azure.storage.queue.implementation.models.QueueMessage,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "enqueueWithRestResponseAsync(java.lang.String,com.azure.storage.queue.implementation.models.QueueMessage,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl"
  langs:
  - "java"
  name: "enqueueWithRestResponseAsync(String queueName, QueueMessage queueMessage, Integer visibilitytimeout, Integer messageTimeToLive, Integer timeout, String requestId, Context context)"
  nameWithType: "MessagesImpl.enqueueWithRestResponseAsync(String queueName, QueueMessage queueMessage, Integer visibilitytimeout, Integer messageTimeToLive, Integer timeout, String requestId, Context context)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.enqueueWithRestResponseAsync(String queueName, QueueMessage queueMessage, Integer visibilitytimeout, Integer messageTimeToLive, Integer timeout, String requestId, Context context)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.enqueueWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.queue.implementation"
  summary: "The Enqueue operation adds a new message to the back of the message queue. A visibility timeout can also be specified to make the message invisible until the visibility timeout expires. A message must be in a format that can be included in an XML request with UTF-8 encoding. The encoded message can be up to 64 KB in size for versions 2011-08-18 and newer, or 8 KB in size for previous versions."
  syntax:
    content: "public Mono<MessagesEnqueueResponse> enqueueWithRestResponseAsync(String queueName, QueueMessage queueMessage, Integer visibilitytimeout, Integer messageTimeToLive, Integer timeout, String requestId, Context context)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
      description: "The queue name."
    - id: "queueMessage"
      type: "com.azure.storage.queue.implementation.models.QueueMessage"
      description: "A Message object which can be stored in a Queue."
    - id: "visibilitytimeout"
      type: "java.lang.Integer"
      description: "Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry time."
    - id: "messageTimeToLive"
      type: "java.lang.Integer"
      description: "Optional. Specifies the time-to-live interval for the message, in seconds. Prior to version 2017-07-29, the maximum time-to-live allowed is 7 days. For version 2017-07-29 or later, the maximum time-to-live can be any positive number, as well as -1 indicating that the message does not expire. If this parameter is omitted, the default time-to-live is 7 days."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations&gt;Setting Timeouts for Queue Service Operations.&lt;/a&gt;."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesEnqueueResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.queue.implementation.MessagesImpl.peekWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "peekWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl"
  langs:
  - "java"
  name: "peekWithRestResponseAsync(String queueName, Context context)"
  nameWithType: "MessagesImpl.peekWithRestResponseAsync(String queueName, Context context)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.peekWithRestResponseAsync(String queueName, Context context)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.peekWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.queue.implementation"
  summary: "The Peek operation retrieves one or more messages from the front of the queue, but does not alter the visibility of the message."
  syntax:
    content: "public Mono<MessagesPeekResponse> peekWithRestResponseAsync(String queueName, Context context)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
      description: "The queue name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesPeekResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.queue.implementation.MessagesImpl.peekWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "peekWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl"
  langs:
  - "java"
  name: "peekWithRestResponseAsync(String queueName, Integer numberOfMessages, Integer timeout, String requestId, Context context)"
  nameWithType: "MessagesImpl.peekWithRestResponseAsync(String queueName, Integer numberOfMessages, Integer timeout, String requestId, Context context)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.peekWithRestResponseAsync(String queueName, Integer numberOfMessages, Integer timeout, String requestId, Context context)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.peekWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.queue.implementation"
  summary: "The Peek operation retrieves one or more messages from the front of the queue, but does not alter the visibility of the message."
  syntax:
    content: "public Mono<MessagesPeekResponse> peekWithRestResponseAsync(String queueName, Integer numberOfMessages, Integer timeout, String requestId, Context context)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
      description: "The queue name."
    - id: "numberOfMessages"
      type: "java.lang.Integer"
      description: "Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32. If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations&gt;Setting Timeouts for Queue Service Operations.&lt;/a&gt;."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesPeekResponse>"
      description: "a Mono which performs the network request upon subscription."
references:
- uid: "com.azure.storage.queue.implementation.AzureQueueStorageImpl"
  name: "AzureQueueStorageImpl"
  nameWithType: "AzureQueueStorageImpl"
  fullName: "com.azure.storage.queue.implementation.AzureQueueStorageImpl"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.MessagesImpl*"
  name: "MessagesImpl"
  nameWithType: "MessagesImpl.MessagesImpl"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.MessagesImpl"
  package: "com.azure.storage.queue.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesDequeueResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.queue.implementation.models.MessagesDequeueResponse"
    name: "MessagesDequeueResponse"
    fullName: "com.azure.storage.queue.implementation.models.MessagesDequeueResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.dequeueWithRestResponseAsync*"
  name: "dequeueWithRestResponseAsync"
  nameWithType: "MessagesImpl.dequeueWithRestResponseAsync"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.dequeueWithRestResponseAsync"
  package: "com.azure.storage.queue.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesClearResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.queue.implementation.models.MessagesClearResponse"
    name: "MessagesClearResponse"
    fullName: "com.azure.storage.queue.implementation.models.MessagesClearResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.clearWithRestResponseAsync*"
  name: "clearWithRestResponseAsync"
  nameWithType: "MessagesImpl.clearWithRestResponseAsync"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.clearWithRestResponseAsync"
  package: "com.azure.storage.queue.implementation"
- uid: "com.azure.storage.queue.implementation.models.QueueMessage"
  name: "QueueMessage"
  nameWithType: "QueueMessage"
  fullName: "com.azure.storage.queue.implementation.models.QueueMessage"
- uid: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesEnqueueResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.queue.implementation.models.MessagesEnqueueResponse"
    name: "MessagesEnqueueResponse"
    fullName: "com.azure.storage.queue.implementation.models.MessagesEnqueueResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.enqueueWithRestResponseAsync*"
  name: "enqueueWithRestResponseAsync"
  nameWithType: "MessagesImpl.enqueueWithRestResponseAsync"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.enqueueWithRestResponseAsync"
  package: "com.azure.storage.queue.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesPeekResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.queue.implementation.models.MessagesPeekResponse"
    name: "MessagesPeekResponse"
    fullName: "com.azure.storage.queue.implementation.models.MessagesPeekResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.peekWithRestResponseAsync*"
  name: "peekWithRestResponseAsync"
  nameWithType: "MessagesImpl.peekWithRestResponseAsync"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.peekWithRestResponseAsync"
  package: "com.azure.storage.queue.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService"
  name: "MessagesImpl.MessagesService"
  nameWithType: "MessagesImpl.MessagesService"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.queue.implementation.models.MessagesDequeueResponse"
  name: "MessagesDequeueResponse"
  nameWithType: "MessagesDequeueResponse"
  fullName: "com.azure.storage.queue.implementation.models.MessagesDequeueResponse"
- uid: "com.azure.storage.queue.implementation.models.MessagesClearResponse"
  name: "MessagesClearResponse"
  nameWithType: "MessagesClearResponse"
  fullName: "com.azure.storage.queue.implementation.models.MessagesClearResponse"
- uid: "com.azure.storage.queue.implementation.models.MessagesEnqueueResponse"
  name: "MessagesEnqueueResponse"
  nameWithType: "MessagesEnqueueResponse"
  fullName: "com.azure.storage.queue.implementation.models.MessagesEnqueueResponse"
- uid: "com.azure.storage.queue.implementation.models.MessagesPeekResponse"
  name: "MessagesPeekResponse"
  nameWithType: "MessagesPeekResponse"
  fullName: "com.azure.storage.queue.implementation.models.MessagesPeekResponse"
