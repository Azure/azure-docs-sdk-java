### YamlMime:JavaMember
uid: "com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainerWithResponse*"
fullName: "com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainerWithResponse"
name: "undeleteBlobContainerWithResponse"
nameWithType: "BlobServiceAsyncClient.undeleteBlobContainerWithResponse"
members:
- uid: "com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainerWithResponse(com.azure.storage.blob.options.UndeleteBlobContainerOptions)"
  fullName: "com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainerWithResponse(UndeleteBlobContainerOptions options)"
  name: "undeleteBlobContainerWithResponse(UndeleteBlobContainerOptions options)"
  nameWithType: "BlobServiceAsyncClient.undeleteBlobContainerWithResponse(UndeleteBlobContainerOptions options)"
  summary: "Restores a previously deleted container. The restored container will be renamed to the `destinationContainerName` if provided in `options`. Otherwise `deletedContainerName` is used as destination container name. If the container associated with provided `destinationContainerName` already exists, this call will result in a 409 (conflict). This API is only functional if Container Soft Delete is enabled for the storage account associated with the container.\n\n**Code Samples**\n\n```java\nListBlobContainersOptions listBlobContainersOptions = new ListBlobContainersOptions();\n listBlobContainersOptions.getDetails().setRetrieveDeleted(true);\n client.listBlobContainers(listBlobContainersOptions).flatMap(\n     deletedContainer -> {\n         Mono<BlobContainerAsyncClient> blobContainerClient = client.undeleteBlobContainerWithResponse(\n             new UndeleteBlobContainerOptions(deletedContainer.getName(), deletedContainer.getVersion())\n                 .setDestinationContainerName(deletedContainer.getName() + \"V2\"))\n             .map(Response::getValue);\n         return blobContainerClient;\n     }\n ).then().block();\n```"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.UndeleteBlobContainerOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UndeleteBlobContainerOptions\"></xref>."
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.UndeleteBlobContainerOptions?alt=com.azure.storage.blob.options.UndeleteBlobContainerOptions&text=UndeleteBlobContainerOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BlobContainerAsyncClient>> undeleteBlobContainerWithResponse(UndeleteBlobContainerOptions options)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains a <xref uid=\"com.azure.storage.blob.BlobContainerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerAsyncClient\"></xref> used to interact with the restored container."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.BlobContainerAsyncClient?alt=com.azure.storage.blob.BlobContainerAsyncClient&text=BlobContainerAsyncClient\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob"
artifact: com.azure:azure-storage-blob:12.10.0
