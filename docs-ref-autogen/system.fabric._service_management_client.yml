items:
- uid: system.fabric._service_management_client
  id: _service_management_client
  parent: system.fabric
  children:
  - system.fabric._service_management_client.close()
  - system.fabric._service_management_client.createService(ServiceDescription)
  - system.fabric._service_management_client.createService(ServiceDescription,Duration)
  - system.fabric._service_management_client.createServiceFromTemplate(URI,URI,String,long,byte [])
  - system.fabric._service_management_client.createServiceFromTemplate(URI,URI,String,long,byte [],Duration)
  - system.fabric._service_management_client.deleteService(URI)
  - system.fabric._service_management_client.deleteService(URI,Duration)
  - system.fabric._service_management_client.getServiceDescription(URI)
  - system.fabric._service_management_client.getServiceDescription(URI,Duration)
  - system.fabric._service_management_client.getServiceManifest(String,String,String)
  - system.fabric._service_management_client.getServiceManifest(String,String,String,Duration)
  - system.fabric._service_management_client.getServiceNotificationFilterMatched()
  - system.fabric._service_management_client.registerServiceNotificationFilter(URI,NotificationFilterFlags)
  - system.fabric._service_management_client.registerServiceNotificationFilter(URI,NotificationFilterFlags,Duration)
  - system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler(URI,long,ServicePartitionResolutionChangeHandler)
  - system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler(URI,ServicePartitionResolutionChangeHandler)
  - system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler(URI,String,ServicePartitionResolutionChangeHandler)
  - system.fabric._service_management_client.removeReplica(String,UUID,long,boolean)
  - system.fabric._service_management_client.removeReplica(String,UUID,long,boolean,Duration)
  - system.fabric._service_management_client.resolveServicePartitionAsync(URI)
  - system.fabric._service_management_client.resolveServicePartitionAsync(URI,Duration)
  - system.fabric._service_management_client.resolveServicePartitionAsync(URI,long)
  - system.fabric._service_management_client.resolveServicePartitionAsync(URI,long,Duration)
  - system.fabric._service_management_client.resolveServicePartitionAsync(URI,long,ResolvedServicePartition)
  - system.fabric._service_management_client.resolveServicePartitionAsync(URI,long,ResolvedServicePartition,Duration)
  - system.fabric._service_management_client.resolveServicePartitionAsync(URI,ResolvedServicePartition)
  - system.fabric._service_management_client.resolveServicePartitionAsync(URI,ResolvedServicePartition,Duration)
  - system.fabric._service_management_client.resolveServicePartitionAsync(URI,String)
  - system.fabric._service_management_client.resolveServicePartitionAsync(URI,String,Duration)
  - system.fabric._service_management_client.resolveServicePartitionAsync(URI,String,ResolvedServicePartition)
  - system.fabric._service_management_client.resolveServicePartitionAsync(URI,String,ResolvedServicePartition,Duration)
  - system.fabric._service_management_client.restartReplica(String,UUID,long)
  - system.fabric._service_management_client.restartReplica(String,UUID,long,Duration)
  - system.fabric._service_management_client.unRegisterServiceNotificationFilter(long)
  - system.fabric._service_management_client.unRegisterServiceNotificationFilter(long,Duration)
  - system.fabric._service_management_client.unRegisterServicePartitionResolutionChangeHandler(long)
  - system.fabric._service_management_client.updateService(URI,ServiceUpdateDescription)
  - system.fabric._service_management_client.updateService(URI,ServiceUpdateDescription,Duration)
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: ServiceManagementClient
  nameWithType: ServiceManagementClient
  fullName: system.fabric.ServiceManagementClient
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 19
  package: system.fabric
  syntax:
    content: public class ServiceManagementClient
  inheritance:
  - java.lang.Object
  - AutoCloseable
  inheritedMembers:
  - system.fabric._service_management_client.beginCreateService(long,int,long,long,NativeAsyncCallback)
  - system.fabric._service_management_client.beginCreateServiceFromTemplate(long,String,String,String,long,long,long,NativeAsyncCallback)
  - system.fabric._service_management_client.beginDeleteService(long,String,long,NativeAsyncCallback)
  - system.fabric._service_management_client.beginGetServiceDescription(long,String,long,NativeAsyncCallback)
  - system.fabric._service_management_client.beginGetServiceManifest(long,String,String,String,long,NativeAsyncCallback)
  - system.fabric._service_management_client.beginRegisterServiceNotificationFilter(long,String,int,long,NativeAsyncCallback)
  - system.fabric._service_management_client.beginRemoveReplica(long,String,String,long,boolean,long,NativeAsyncCallback)
  - system.fabric._service_management_client.beginResolveServicePartitionWithLongKey(long,String,int,long,long,long,NativeAsyncCallback)
  - system.fabric._service_management_client.beginResolveServicePartitionWithStringKey(long,String,int,String,long,long,NativeAsyncCallback)
  - system.fabric._service_management_client.beginRestartReplica(long,String,String,long,long,NativeAsyncCallback)
  - system.fabric._service_management_client.beginUnRegisterServiceNotificationFilter(long,long,long,NativeAsyncCallback)
  - system.fabric._service_management_client.beginUpdateService(long,int,String,long,long,NativeAsyncCallback)
  - system.fabric._service_management_client.createNativeServicePartitionResolutionChangeHandler(ServicePartitionResolutionChangeHandlerBroker)
  - system.fabric._service_management_client.defaultDurationInMilliSeconds()
  - system.fabric._service_management_client.endCreateService(long,long)
  - system.fabric._service_management_client.endCreateServiceFromTemplate(long,long)
  - system.fabric._service_management_client.endDeleteService(long,long)
  - system.fabric._service_management_client.endGetServiceDescription(long,long)
  - system.fabric._service_management_client.endGetServiceManifest(long,long)
  - system.fabric._service_management_client.endRegisterServiceNotificationFilter(long,long)
  - system.fabric._service_management_client.endRemoveReplica(long,long)
  - system.fabric._service_management_client.endResolveServicePartition(long,long)
  - system.fabric._service_management_client.endRestartReplica(long,long)
  - system.fabric._service_management_client.endUnRegisterServiceNotificationFilter(long,long)
  - system.fabric._service_management_client.endUpdateService(long,long)
  - system.fabric._service_management_client.fClient()
  - system.fabric._service_management_client.getManagementClient(long)
  - system.fabric._service_management_client.mgmtClientPtr()
  - system.fabric._service_management_client.onServiceNotificationFilterMatched(ServiceNotification)
  - system.fabric._service_management_client.registerServicePartitionResolutionChangeHandlerWithLongKey(long,String,int,long,long,long)
  - system.fabric._service_management_client.registerServicePartitionResolutionChangeHandlerWithStringKey(long,String,int,String,long,long)
  - system.fabric._service_management_client.release(long)
  - system.fabric._service_management_client.ServiceManagementClient(FabricClient)
  - system.fabric._service_management_client.unRegisterServicePartitionResolutionChangeHandler(long,long)
- uid: system.fabric._service_management_client.close()
  id: close()
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: close()
  nameWithType: ServiceManagementClient.close()
  fullName: void system.fabric.ServiceManagementClient.close()
  overload: system.fabric._service_management_client.close*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1434
  package: system.fabric
  syntax:
    content: public void close()
- uid: system.fabric._service_management_client.createService(ServiceDescription)
  id: createService(ServiceDescription)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: createService(ServiceDescription servicedesc)
  nameWithType: ServiceManagementClient.createService(ServiceDescription servicedesc)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.createService(ServiceDescription servicedesc)
  overload: system.fabric._service_management_client.createService*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 205
  package: system.fabric
  summary: >-
    <p>Instantiates a service with specified description.</p>

    <p>

      <bold>Remarks:</bold>Service Fabric name will be implicitly created if it does not already exist. </p>
  syntax:
    content: public CompletableFuture createService(ServiceDescription servicedesc)
    parameters:
    - id: servicedesc
      type: system.fabric._service_description
      description: <p>The configuration for the service. </p>
    return:
      type: 5f2aaa64
      description: <p>The instantiated service. </p>
- uid: system.fabric._service_management_client.createService(ServiceDescription,Duration)
  id: createService(ServiceDescription,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: createService(ServiceDescription servicedesc, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.createService(ServiceDescription servicedesc, Duration timeoutMilliSeconds)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.createService(ServiceDescription servicedesc, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.createService*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 223
  package: system.fabric
  summary: >-
    <p>Instantiates a service with specified description.</p>

    <p>

      <bold>Remarks:</bold>Service Fabric name will be implicitly created if it does not already exist. </p>
  syntax:
    content: public CompletableFuture createService(ServiceDescription servicedesc, Duration timeoutMilliSeconds)
    parameters:
    - id: servicedesc
      type: system.fabric._service_description
      description: <p>The configuration for the service. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 5f2aaa64
      description: <p>The instantiated service. </p>
- uid: system.fabric._service_management_client.createServiceFromTemplate(URI,URI,String,long,byte [])
  id: createServiceFromTemplate(URI,URI,String,long,byte [])
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData)
  nameWithType: ServiceManagementClient.createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData)
  overload: system.fabric._service_management_client.createServiceFromTemplate*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 267
  package: system.fabric
  summary: >-
    <p>Instantiates a service from the template specified in the Application Manifest.</p>

    <p>

      <bold>Remarks:</bold>Service Fabric name will be implicitly created if it does not already exist. </p>
  syntax:
    content: public CompletableFuture createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>The Service Fabric Name of the application under which the service will be created. </p>
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service. </p>
    - id: serviceTypeName
      type: "26831127"
      description: <p>The name of the service type. This has to be same as the ServiceTypeName specified in the Service Manifest. </p>
    - id: initializationDataSize
      type: 0364520f
      description: <p>initialization data size </p>
    - id: initializationData
      type: ccd9418d
      description: <p>The initialization data to be passed in to the new service. </p>
    return:
      type: 5f2aaa64
      description: <p>CompletableFuture </p>
- uid: system.fabric._service_management_client.createServiceFromTemplate(URI,URI,String,long,byte [],Duration)
  id: createServiceFromTemplate(URI,URI,String,long,byte [],Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData, Duration timeoutMilliSeconds)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.createServiceFromTemplate*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 305
  package: system.fabric
  summary: >-
    <p>Instantiates a service from the template specified in the Application Manifest.</p>

    <p>

      <bold>Remarks:</bold>Service Fabric name will be implicitly created if it does not already exist. </p>
  syntax:
    content: public CompletableFuture createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData, Duration timeoutMilliSeconds)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>The Service Fabric Name of the application under which the service will be created. </p>
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service. </p>
    - id: serviceTypeName
      type: "26831127"
      description: <p>The name of the service type. This has to be same as the ServiceTypeName specified in the Service Manifest. </p>
    - id: initializationDataSize
      type: 0364520f
      description: <p>initialization data size </p>
    - id: initializationData
      type: ccd9418d
      description: <p>The initialization data to be passed in to the new service. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 5f2aaa64
      description: <p>CompletableFuture </p>
- uid: system.fabric._service_management_client.deleteService(URI)
  id: deleteService(URI)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: deleteService(URI serviceName)
  nameWithType: ServiceManagementClient.deleteService(URI serviceName)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.deleteService(URI serviceName)
  overload: system.fabric._service_management_client.deleteService*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 350
  package: system.fabric
  summary: >-
    <p>Deletes the specified service instance.</p>

    <p>

      <bold>Remarks:</bold>Service Fabric name will be implicitly and recursively deleted if the application is Service Fabric managed. </p>
  syntax:
    content: public CompletableFuture deleteService(URI serviceName)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service. </p>
    return:
      type: 5f2aaa64
      description: <p>The deleted service instance. </p>
- uid: system.fabric._service_management_client.deleteService(URI,Duration)
  id: deleteService(URI,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: deleteService(URI serviceName, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.deleteService(URI serviceName, Duration timeoutMilliSeconds)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.deleteService(URI serviceName, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.deleteService*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 368
  package: system.fabric
  summary: >-
    <p>Deletes the specified service instance.</p>

    <p>

      <bold>Remarks:</bold>Service Fabric name will be implicitly and recursively deleted if the application is Service Fabric managed. </p>
  syntax:
    content: public CompletableFuture deleteService(URI serviceName, Duration timeoutMilliSeconds)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 5f2aaa64
      description: <p>The deleted service instance. </p>
- uid: system.fabric._service_management_client.getServiceDescription(URI)
  id: getServiceDescription(URI)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: getServiceDescription(URI serviceName)
  nameWithType: ServiceManagementClient.getServiceDescription(URI serviceName)
  fullName: CompletableFuture<ServiceDescription> system.fabric.ServiceManagementClient.getServiceDescription(URI serviceName)
  overload: system.fabric._service_management_client.getServiceDescription*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 400
  package: system.fabric
  summary: >-
    <p>Gets the Service Description for the specified service instance.</p>

    <p>

      <bold>Remarks:</bold>

      <ref refid="" kindref="compound">system.fabric.ServiceManagementClient#getServiceDescription(java.net.URI)</ref> is the most efficient way of determining whether a name is associated with a service. </p>
  syntax:
    content: public CompletableFuture<ServiceDescription> getServiceDescription(URI serviceName)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service. </p>
    return:
      type: 9cdf14d0system.fabric._service_descriptiona08ddfce
      description: <p>The Service Description for the specified service instance. </p>
- uid: system.fabric._service_management_client.getServiceDescription(URI,Duration)
  id: getServiceDescription(URI,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: getServiceDescription(URI serviceName, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.getServiceDescription(URI serviceName, Duration timeoutMilliSeconds)
  fullName: CompletableFuture<ServiceDescription> system.fabric.ServiceManagementClient.getServiceDescription(URI serviceName, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.getServiceDescription*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 419
  package: system.fabric
  summary: >-
    <p>Gets the Service Description for the specified service instance.</p>

    <p>

      <bold>Remarks:</bold>

      <ref refid="" kindref="compound">system.fabric.ServiceManagementClient#getServiceDescription(java.net.URI)</ref> is the most efficient way of determining whether a name is associated with a service. </p>
  syntax:
    content: public CompletableFuture<ServiceDescription> getServiceDescription(URI serviceName, Duration timeoutMilliSeconds)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 9cdf14d0system.fabric._service_descriptiona08ddfce
      description: <p>The Service Description for the specified service instance. </p>
- uid: system.fabric._service_management_client.getServiceManifest(String,String,String)
  id: getServiceManifest(String,String,String)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName)
  nameWithType: ServiceManagementClient.getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName)
  fullName: CompletableFuture<String> system.fabric.ServiceManagementClient.getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName)
  overload: system.fabric._service_management_client.getServiceManifest*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 990
  package: system.fabric
  summary: >-
    <p>Gets the provisioned service manifest document in the specified ApplicationTypeName and ApplicationTypeVersion.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<String> getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName)
    parameters:
    - id: applicationTypeName
      type: "26831127"
      description: <p>The name of the provisioned application manifest. </p>
    - id: applicationTypeVersion
      type: "26831127"
      description: <p>The version of the provisioned application manifest. </p>
    - id: serviceManifestName
      type: "26831127"
      description: <p>The name of the service manifest referenced in the application manifest. </p>
    return:
      type: 06be942d
      description: <p>The provisioned service manifest document. </p>
- uid: system.fabric._service_management_client.getServiceManifest(String,String,String,Duration)
  id: getServiceManifest(String,String,String,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, Duration timeoutMilliSeconds)
  fullName: CompletableFuture<String> system.fabric.ServiceManagementClient.getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.getServiceManifest*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1019
  package: system.fabric
  summary: >-
    <p>Gets the provisioned service manifest document in the specified ApplicationTypeName and ApplicationTypeVersion.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<String> getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, Duration timeoutMilliSeconds)
    parameters:
    - id: applicationTypeName
      type: "26831127"
      description: <p>The name of the provisioned application manifest. </p>
    - id: applicationTypeVersion
      type: "26831127"
      description: <p>The version of the provisioned application manifest. </p>
    - id: serviceManifestName
      type: "26831127"
      description: <p>The name of the service manifest referenced in the application manifest. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 06be942d
      description: <p>The provisioned service manifest document. </p>
- uid: system.fabric._service_management_client.getServiceNotificationFilterMatched()
  id: getServiceNotificationFilterMatched()
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: getServiceNotificationFilterMatched()
  nameWithType: ServiceManagementClient.getServiceNotificationFilterMatched()
  fullName: Observable<ServiceNotification> system.fabric.ServiceManagementClient.getServiceNotificationFilterMatched()
  overload: system.fabric._service_management_client.getServiceNotificationFilterMatched*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1324
  package: system.fabric
  syntax:
    content: public Observable<ServiceNotification> getServiceNotificationFilterMatched()
    return:
      type: system.fabric._observable78504a52system.fabric._service_notificationa08ddfce
- uid: system.fabric._service_management_client.registerServiceNotificationFilter(URI,NotificationFilterFlags)
  id: registerServiceNotificationFilter(URI,NotificationFilterFlags)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags)
  nameWithType: ServiceManagementClient.registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags)
  fullName: CompletableFuture<Long> system.fabric.ServiceManagementClient.registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags)
  overload: system.fabric._service_management_client.registerServiceNotificationFilter*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1235
  package: system.fabric
  summary: >-
    <p>Registers a Service Notification filter.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Long> registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags)
    parameters:
    - id: name
      type: "62304784"
      description: <p>The Description of which Service endpoint change events should be delivered to this client. </p>
    - id: notificationFilterFlags
      type: system.fabric._notification_filter_flags
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 30822cb1
      description: <p>The registered Service Notification filter. </p>
- uid: system.fabric._service_management_client.registerServiceNotificationFilter(URI,NotificationFilterFlags,Duration)
  id: registerServiceNotificationFilter(URI,NotificationFilterFlags,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags, Duration timeoutMilliSeconds)
  fullName: CompletableFuture<Long> system.fabric.ServiceManagementClient.registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.registerServiceNotificationFilter*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1258
  package: system.fabric
  summary: >-
    <p>Registers a Service Notification filter.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Long> registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags, Duration timeoutMilliSeconds)
    parameters:
    - id: name
      type: "62304784"
      description: <p>The Description of which Service endpoint change events should be delivered to this client. </p>
    - id: notificationFilterFlags
      type: system.fabric._notification_filter_flags
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The CompletableFuture that the operation is observing. It can be used to propagate notification that the operation should be canceled. </p>
    return:
      type: 30822cb1
      description: <p>The registered Service Notification filter. </p>
- uid: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler(URI,long,ServicePartitionResolutionChangeHandler)
  id: registerServicePartitionResolutionChangeHandler(URI,long,ServicePartitionResolutionChangeHandler)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: registerServicePartitionResolutionChangeHandler(URI serviceName, long partitionKey, ServicePartitionResolutionChangeHandler callback)
  nameWithType: ServiceManagementClient.registerServicePartitionResolutionChangeHandler(URI serviceName, long partitionKey, ServicePartitionResolutionChangeHandler callback)
  fullName: long system.fabric.ServiceManagementClient.registerServicePartitionResolutionChangeHandler(URI serviceName, long partitionKey, ServicePartitionResolutionChangeHandler callback)
  overload: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 490
  package: system.fabric
  summary: >-
    <p>Registers a handler to be raised when the accessibility information of a service partition changes.</p>

    <p>

      <bold>Remarks:</bold>Notification will include changes on partitionâ€™s endpoints or exceptions that occurred while the information was being updated. This overload is used for UniformInt64Range partitioned service instances. Returned Int64 is the callback handle identifier for the registration. Notifications is a mechanism that delivers notifications to userâ€™s code each time there is an service address change or an address resolution error related to a service partition the code has raised interest for. This way instead of resolving every time the current <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> becomes stale, program registers for updates. </p>
  syntax:
    content: public long registerServicePartitionResolutionChangeHandler(URI serviceName, long partitionKey, ServicePartitionResolutionChangeHandler callback)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service. </p>
    - id: partitionKey
      type: 0364520f
      description: <p>The partition key for the service partition. </p>
    - id: callback
      type: system.fabric._service_partition_resolution_change_handler
      description: <p>The function that will be called when a notification arrives. </p>
    return:
      type: 0364520f
      description: <p>The handler to be raised when the accessibility information of a service partition changes. </p>
- uid: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler(URI,ServicePartitionResolutionChangeHandler)
  id: registerServicePartitionResolutionChangeHandler(URI,ServicePartitionResolutionChangeHandler)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: registerServicePartitionResolutionChangeHandler(URI serviceName, ServicePartitionResolutionChangeHandler callback)
  nameWithType: ServiceManagementClient.registerServicePartitionResolutionChangeHandler(URI serviceName, ServicePartitionResolutionChangeHandler callback)
  fullName: long system.fabric.ServiceManagementClient.registerServicePartitionResolutionChangeHandler(URI serviceName, ServicePartitionResolutionChangeHandler callback)
  overload: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 456
  package: system.fabric
  summary: >-
    <p>Registers a handler to be raised when the accessibility information of a service partition changes.</p>

    <p>

      <bold>Remarks:</bold>Notification will include changes on partitionâ€™s endpoints or exceptions that occurred while the information was being updated. This overload is used for Singleton partitioned service instances. Returned Int64 is the callback handle identifier for the registration. Notifications is a mechanism that delivers notifications to userâ€™s code each time there is an service address change or an address resolution error related to a service partition the code has raised interest for. This way instead of resolving every time the current <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> becomes stale, program registers for updates. </p>
  syntax:
    content: public long registerServicePartitionResolutionChangeHandler(URI serviceName, ServicePartitionResolutionChangeHandler callback)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service. </p>
    - id: callback
      type: system.fabric._service_partition_resolution_change_handler
      description: <p>The function that will be called when a notification arrives. </p>
    return:
      type: 0364520f
      description: <p>The handler to be raised when the accessibility information of a service partition changes. </p>
- uid: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler(URI,String,ServicePartitionResolutionChangeHandler)
  id: registerServicePartitionResolutionChangeHandler(URI,String,ServicePartitionResolutionChangeHandler)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: registerServicePartitionResolutionChangeHandler(URI serviceName, String partitionKey, ServicePartitionResolutionChangeHandler callback)
  nameWithType: ServiceManagementClient.registerServicePartitionResolutionChangeHandler(URI serviceName, String partitionKey, ServicePartitionResolutionChangeHandler callback)
  fullName: long system.fabric.ServiceManagementClient.registerServicePartitionResolutionChangeHandler(URI serviceName, String partitionKey, ServicePartitionResolutionChangeHandler callback)
  overload: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 525
  package: system.fabric
  summary: >-
    <p>Registers a handler to be raised when the accessibility information of a service partition changes.</p>

    <p>

      <bold>Remarks:</bold>Notification will include changes on partitionâ€™s endpoints or exceptions that occurred while the information was being updated. This overload is used for Named partitioned service instances. Returned Int64 is the callback handle identifier for the registration. Notifications is a mechanism that delivers notifications to userâ€™s code each time there is an service address change or an address resolution error related to a service partition the code has raised interest for. This way instead of resolving every time the current <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> becomes stale, program registers for updates. </p>
  syntax:
    content: public long registerServicePartitionResolutionChangeHandler(URI serviceName, String partitionKey, ServicePartitionResolutionChangeHandler callback)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service. </p>
    - id: partitionKey
      type: "26831127"
      description: <p>The partition key for the service partition. </p>
    - id: callback
      type: system.fabric._service_partition_resolution_change_handler
      description: <p>The function that will be called when a notification arrives. </p>
    return:
      type: 0364520f
      description: <p>The handler to be raised when the accessibility information of a service partition changes. </p>
- uid: system.fabric._service_management_client.removeReplica(String,UUID,long,boolean)
  id: removeReplica(String,UUID,long,boolean)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove)
  nameWithType: ServiceManagementClient.removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove)
  overload: system.fabric._service_management_client.removeReplica*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1110
  package: system.fabric
  summary: >-
    <p>Removes a service replica.</p>

    <p></p>
  syntax:
    content: public CompletableFuture removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove)
    parameters:
    - id: nodeName
      type: "26831127"
      description: <p>The name of the node. </p>
    - id: partitionId
      type: add9545a
      description: <p>The partition identifier. </p>
    - id: replicaOrInstanceId
      type: 0364520f
      description: <p>The replica or instance identifier. </p>
    - id: forceRemove
      type: 4fc6e284
      description: <p>Flag indicating whether the replica should be removed forcefully. </p>
    return:
      type: 5f2aaa64
      description: <p>A CompletableFuture representing the operation. </p>
- uid: system.fabric._service_management_client.removeReplica(String,UUID,long,boolean,Duration)
  id: removeReplica(String,UUID,long,boolean,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove, Duration timeoutMilliSeconds)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.removeReplica*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1139
  package: system.fabric
  summary: >-
    <p>Removes a service replica.</p>

    <p></p>
  syntax:
    content: public CompletableFuture removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove, Duration timeoutMilliSeconds)
    parameters:
    - id: nodeName
      type: "26831127"
      description: <p>The name of the node. </p>
    - id: partitionId
      type: add9545a
      description: <p>The partition identifier. </p>
    - id: replicaOrInstanceId
      type: 0364520f
      description: <p>The replica or instance identifier. </p>
    - id: forceRemove
      type: 4fc6e284
      description: <p>Flag indicating whether the replica should be removed forcefully. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning </p>
    return:
      type: 5f2aaa64
      description: <p>A CompletableFuture representing the operation. </p>
- uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI)
  id: resolveServicePartitionAsync(URI)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: resolveServicePartitionAsync(URI serviceName)
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName)
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName)
  overload: system.fabric._service_management_client.resolveServicePartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 568
  package: system.fabric
  summary: >-
    <p>Queries the system for the set of endpoints the specified service partition is listening to.</p>

    <p>

      <bold>Remarks:</bold>This is a complaint based resolution API. The <ref refid="" kindref="compound">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(java.net.URI)</ref> will return a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the specified service partition. When this overload is used, the system will always return the closest <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition. Timeout for the operation will be set to the Naming "MaxOperationTimeout" parameter specified in the Cluster Manifest. </p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service instance. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>The set of endpoints the specified service partition is listening to. </p>
- uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI,Duration)
  id: resolveServicePartitionAsync(URI,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: resolveServicePartitionAsync(URI serviceName, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, Duration timeoutMilliSeconds)
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.resolveServicePartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 596
  package: system.fabric
  summary: >-
    <p>Queries the system for the set of endpoints the specified service partition is listening to.</p>

    <p>

      <bold>Remarks:</bold>This is a complaint based resolution API. The <ref refid="" kindref="compound">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(java.net.URI)</ref> will return a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the specified service partition. When this overload is used, the system will always return the closest <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition. Timeout for the operation will be set to the Naming "MaxOperationTimeout" parameter specified in the Cluster Manifest. </p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, Duration timeoutMilliSeconds)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service instance. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>The set of endpoints the specified service partition is listening to. </p>
- uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI,long)
  id: resolveServicePartitionAsync(URI,long)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: resolveServicePartitionAsync(URI serviceName, long partitionKey)
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey)
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey)
  overload: system.fabric._service_management_client.resolveServicePartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 701
  package: system.fabric
  summary: >-
    <p>Queries the system for the set of endpoints the specified service partition is listening to.</p>

    <p>

      <bold>Remarks:</bold>This is a complaint based resolution API. This method will return a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the specified service partition. When this overload is used, the system will always return the closest <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition. Timeout for the operation will be set to the Naming "MaxOperationTimeout" parameter specified in the Cluster Manifest. </p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, long partitionKey)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service instance. </p>
    - id: partitionKey
      type: 0364520f
      description: <p>The partition key for the service partition. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>The set of endpoints the specified service partition is listening to. </p>
- uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI,long,Duration)
  id: resolveServicePartitionAsync(URI,long,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: resolveServicePartitionAsync(URI serviceName, long partitionKey, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey, Duration timeoutMilliSeconds)
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.resolveServicePartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 732
  package: system.fabric
  summary: >-
    <p>Queries the system for the set of endpoints the specified service partition is listening to.</p>

    <p>

      <bold>Remarks:</bold>This is a complaint based resolution API. This method will return a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the specified service partition. When this overload is used, the system will always return the closest <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition. Timeout for the operation will be set to the Naming "MaxOperationTimeout" parameter specified in the Cluster Manifest. </p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, long partitionKey, Duration timeoutMilliSeconds)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service instance. </p>
    - id: partitionKey
      type: 0364520f
      description: <p>The partition key for the service partition. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>The set of endpoints the specified service partition is listening to. </p>
- uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI,long,ResolvedServicePartition)
  id: resolveServicePartitionAsync(URI,long,ResolvedServicePartition)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition)
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition)
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition)
  overload: system.fabric._service_management_client.resolveServicePartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 773
  package: system.fabric
  summary: >-
    <p>Queries the system for the set of endpoints the specified service partition is listening to.</p>

    <p>

      <bold>Remarks:</bold>This is a complaint based resolution API. This will return a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the specified service partition. When this overload is used, the system will return a more up-to-date <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> than the "previousResult" argument if it is available. Timeout for the operation will be set to the Naming "MaxOperationTimeout" parameter specified in the Cluster Manifest. PreviousResult argument enables the user to say "This is the previous list of endpoints for this Service partition. I have tried the endpoints and I believe they are stale. Return me a more up to date version of this set." In this case, the system will try to return a more up-to-date <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> in the most efficient way possible. If no newer version can be found, a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> with the same version will be returned.ResolveServicePartition can be called without the previousResult argument or previousResult argument set to null. As no prerequisite is specified, the system will return the closest copy of the <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition. </p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service instance. </p>
    - id: partitionKey
      type: 0364520f
      description: <p>The partition key for the service partition. </p>
    - id: partition
      type: system.fabric._resolved_service_partition
      description: <p>The Previous <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition that the user believes is stale. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>The set of endpoints the specified service partition is listening to. </p>
- uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI,long,ResolvedServicePartition,Duration)
  id: resolveServicePartitionAsync(URI,long,ResolvedServicePartition,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.resolveServicePartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 817
  package: system.fabric
  summary: >-
    <p>Queries the system for the set of endpoints the specified service partition is listening to.</p>

    <p>

      <bold>Remarks:</bold>This is a complaint based resolution API. This will return a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the specified service partition. When this overload is used, the system will return a more up-to-date <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> than the "previousResult" argument if it is available. Timeout for the operation will be set to the Naming "MaxOperationTimeout" parameter specified in the Cluster Manifest. PreviousResult argument enables the user to say "This is the previous list of endpoints for this Service partition. I have tried the endpoints and I believe they are stale. Return me a more up to date version of this set." In this case, the system will try to return a more up-to-date <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> in the most efficient way possible. If no newer version can be found, a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> with the same version will be returned.ResolveServicePartition can be called without the previousResult argument or previousResult argument set to null. As no prerequisite is specified, the system will return the closest copy of the <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition. </p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service instance. </p>
    - id: partitionKey
      type: 0364520f
      description: <p>The partition key for the service partition. </p>
    - id: partition
      type: system.fabric._resolved_service_partition
      description: <p>The Previous <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition that the user believes is stale. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>The set of endpoints the specified service partition is listening to. </p>
- uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI,ResolvedServicePartition)
  id: resolveServicePartitionAsync(URI,ResolvedServicePartition)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition)
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition)
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition)
  overload: system.fabric._service_management_client.resolveServicePartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 630
  package: system.fabric
  summary: >-
    <p>Queries the system for the set of endpoints the specified service partition is listening to.</p>

    <p>

      <bold>Remarks:</bold>A complaint based resolution API. This method will return a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the specified service partition. When this overload is used, the system will return a more up-to-date <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> than the "previousResult" argument if it is available. Timeout for the operation will be set to the Naming "MaxOperationTimeout" parameter specified in the Cluster Manifest. PreviousResult argument enables the user to say "This is the previous list of endpoints for this Service partition. I have tried the endpoints and I believe they are stale. Return me a more up to date version of this set." In this case, the system will try to return a more up-to-date <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> in the most efficient way possible. If no newer version can be found, a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> with the same version will be returned.ResolveServicePartition can be called without the previousResult argument or previousResult argument set to null. As no prerequisite is specified, the system will return the closest copy of the <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition. </p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service instance. </p>
    - id: partition
      type: system.fabric._resolved_service_partition
      description: <p>The Previous <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition that the user believes is stale. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>The set of endpoints the specified service partition is listening to. </p>
- uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI,ResolvedServicePartition,Duration)
  id: resolveServicePartitionAsync(URI,ResolvedServicePartition,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition, Duration timeoutMilliSeconds)
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.resolveServicePartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 671
  package: system.fabric
  summary: >-
    <p>Queries the system for the set of endpoints the specified service partition is listening to.</p>

    <p>

      <bold>Remarks:</bold>A complaint based resolution API. This method will return a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the specified service partition. When this overload is used, the system will return a more up-to-date <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> than the "previousResult" argument if it is available. Timeout for the operation will be set to the Naming "MaxOperationTimeout" parameter specified in the Cluster Manifest. PreviousResult argument enables the user to say "This is the previous list of endpoints for this Service partition. I have tried the endpoints and I believe they are stale. Return me a more up to date version of this set." In this case, the system will try to return a more up-to-date <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> in the most efficient way possible. If no newer version can be found, a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> with the same version will be returned.ResolveServicePartition can be called without the previousResult argument or previousResult argument set to null. As no prerequisite is specified, the system will return the closest copy of the <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition. </p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition, Duration timeoutMilliSeconds)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service instance. </p>
    - id: partition
      type: system.fabric._resolved_service_partition
      description: <p>The Previous <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition that the user believes is stale. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>The set of endpoints the specified service partition is listening to. </p>
- uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI,String)
  id: resolveServicePartitionAsync(URI,String)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: resolveServicePartitionAsync(URI serviceName, String partitionKey)
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey)
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey)
  overload: system.fabric._service_management_client.resolveServicePartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 848
  package: system.fabric
  summary: >-
    <p>Queries the system for the set of endpoints the specified service partition is listening to.</p>

    <p>

      <bold>Remarks:</bold>This is a complaint based resolution API. This will return a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the specified service partition. When this overload is used, the system will always return the closest <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition. Timeout for the operation will be set to the Naming "MaxOperationTimeout" parameter specified in the Cluster Manifest. </p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, String partitionKey)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service instance. </p>
    - id: partitionKey
      type: "26831127"
      description: <p>The partition key for the service partition. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>The set of endpoints the specified service partition is listening to. </p>
- uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI,String,Duration)
  id: resolveServicePartitionAsync(URI,String,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: resolveServicePartitionAsync(URI serviceName, String partitionKey, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey, Duration timeoutMilliSeconds)
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.resolveServicePartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 879
  package: system.fabric
  summary: >-
    <p>Queries the system for the set of endpoints the specified service partition is listening to.</p>

    <p>

      <bold>Remarks:</bold>This is a complaint based resolution API. This will return a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the specified service partition. When this overload is used, the system will always return the closest <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition. Timeout for the operation will be set to the Naming "MaxOperationTimeout" parameter specified in the Cluster Manifest. </p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, String partitionKey, Duration timeoutMilliSeconds)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service instance. </p>
    - id: partitionKey
      type: "26831127"
      description: <p>The partition key for the service partition. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>The set of endpoints the specified service partition is listening to. </p>
- uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI,String,ResolvedServicePartition)
  id: resolveServicePartitionAsync(URI,String,ResolvedServicePartition)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition)
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition)
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition)
  overload: system.fabric._service_management_client.resolveServicePartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 920
  package: system.fabric
  summary: >-
    <p>Queries the system for the set of endpoints the specified service partition is listening to.</p>

    <p>

      <bold>Remarks:</bold>This is a complaint based resolution API. This will return a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the specified service partition. When this overload is used, the system will return a more up-to-date <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> than the "previousResult" argument if it is available. Timeout for the operation will be set to the Naming "MaxOperationTimeout" parameter specified in the Cluster Manifest. The PreviousResult argument enables the user to say "This is the previous list of endpoints for this Service partition. I have tried the endpoints and I believe they are stale. Return me a more up to date version of this set." In this case, the system will try to return a more up-to-date <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> in the most efficient way possible. If no newer version can be found, a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> with the same version will be returned.ResolveServicePartition can be called without the previousResult argument or previousResult argument set to null. As no prerequisite is specified, the system will return the closest copy of the <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition. </p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service instance. </p>
    - id: partitionKey
      type: "26831127"
      description: <p>The partition key for the service partition. </p>
    - id: partition
      type: system.fabric._resolved_service_partition
      description: <p>The previous <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition that the user believes is stale. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>The set of endpoints the specified service partition is listening to. </p>
- uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI,String,ResolvedServicePartition,Duration)
  id: resolveServicePartitionAsync(URI,String,ResolvedServicePartition,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.resolveServicePartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 964
  package: system.fabric
  summary: >-
    <p>Queries the system for the set of endpoints the specified service partition is listening to.</p>

    <p>

      <bold>Remarks:</bold>This is a complaint based resolution API. This will return a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the specified service partition. When this overload is used, the system will return a more up-to-date <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> than the "previousResult" argument if it is available. Timeout for the operation will be set to the Naming "MaxOperationTimeout" parameter specified in the Cluster Manifest. The PreviousResult argument enables the user to say "This is the previous list of endpoints for this Service partition. I have tried the endpoints and I believe they are stale. Return me a more up to date version of this set." In this case, the system will try to return a more up-to-date <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> in the most efficient way possible. If no newer version can be found, a <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> with the same version will be returned.ResolveServicePartition can be called without the previousResult argument or previousResult argument set to null. As no prerequisite is specified, the system will return the closest copy of the <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition. </p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The Service Fabric Name of the service instance. </p>
    - id: partitionKey
      type: "26831127"
      description: <p>The partition key for the service partition. </p>
    - id: partition
      type: system.fabric._resolved_service_partition
      description: <p>The previous <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref> for the service partition that the user believes is stale. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>The set of endpoints the specified service partition is listening to. </p>
- uid: system.fabric._service_management_client.restartReplica(String,UUID,long)
  id: restartReplica(String,UUID,long)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId)
  nameWithType: ServiceManagementClient.restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId)
  overload: system.fabric._service_management_client.restartReplica*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1177
  package: system.fabric
  summary: >-
    <p>Restarts the service replica.</p>

    <p></p>
  syntax:
    content: public CompletableFuture restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId)
    parameters:
    - id: nodeName
      type: "26831127"
      description: <p>The name of the node. </p>
    - id: partitionId
      type: add9545a
      description: <p>The partition identifier. </p>
    - id: replicaOrInstanceId
      type: 0364520f
      description: <p>The instance identifier. </p>
    return:
      type: 5f2aaa64
      description: <p>The restarted service replica. </p>
- uid: system.fabric._service_management_client.restartReplica(String,UUID,long,Duration)
  id: restartReplica(String,UUID,long,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, Duration timeoutMilliSeconds)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.restartReplica*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1199
  package: system.fabric
  summary: >-
    <p>Restarts the service replica.</p>

    <p></p>
  syntax:
    content: public CompletableFuture restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, Duration timeoutMilliSeconds)
    parameters:
    - id: nodeName
      type: "26831127"
      description: <p>The name of the node. </p>
    - id: partitionId
      type: add9545a
      description: <p>The partition identifier. </p>
    - id: replicaOrInstanceId
      type: 0364520f
      description: <p>The instance identifier. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 5f2aaa64
      description: <p>The restarted service replica. </p>
- uid: system.fabric._service_management_client.unRegisterServiceNotificationFilter(long)
  id: unRegisterServiceNotificationFilter(long)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: unRegisterServiceNotificationFilter(long filterId)
  nameWithType: ServiceManagementClient.unRegisterServiceNotificationFilter(long filterId)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.unRegisterServiceNotificationFilter(long filterId)
  overload: system.fabric._service_management_client.unRegisterServiceNotificationFilter*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1284
  package: system.fabric
  summary: >-
    <p>Unregisters a Service Notification filter.</p>

    <p></p>
  syntax:
    content: public CompletableFuture unRegisterServiceNotificationFilter(long filterId)
    parameters:
    - id: filterId
      type: 0364520f
      description: <p>Identifies the filter to remove. </p>
    return:
      type: 5f2aaa64
      description: <p>The unregistered Service Notification filter. </p>
- uid: system.fabric._service_management_client.unRegisterServiceNotificationFilter(long,Duration)
  id: unRegisterServiceNotificationFilter(long,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: unRegisterServiceNotificationFilter(long filterId, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.unRegisterServiceNotificationFilter(long filterId, Duration timeoutMilliSeconds)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.unRegisterServiceNotificationFilter(long filterId, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.unRegisterServiceNotificationFilter*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1297
  package: system.fabric
  summary: >-
    <p>Unregisters a Service Notification filter.</p>

    <p></p>
  syntax:
    content: public CompletableFuture unRegisterServiceNotificationFilter(long filterId, Duration timeoutMilliSeconds)
    parameters:
    - id: filterId
      type: 0364520f
      description: <p>Identifies the filter to remove. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum time allowed for processing the request before TimeoutException is thrown. </p>
    return:
      type: 5f2aaa64
      description: <p>The unregistered Service Notification filter. </p>
- uid: system.fabric._service_management_client.unRegisterServicePartitionResolutionChangeHandler(long)
  id: unRegisterServicePartitionResolutionChangeHandler(long)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: unRegisterServicePartitionResolutionChangeHandler(long handlerId)
  nameWithType: ServiceManagementClient.unRegisterServicePartitionResolutionChangeHandler(long handlerId)
  fullName: void system.fabric.ServiceManagementClient.unRegisterServicePartitionResolutionChangeHandler(long handlerId)
  overload: system.fabric._service_management_client.unRegisterServicePartitionResolutionChangeHandler*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 547
  package: system.fabric
  summary: <p>Unregisters a change handler previously registered with <ref refid="" kindref="compound">system.fabric.ServiceManagementClient#registerServicePartitionResolutionChangeHandler(java.net.URI,system.fabric.ServicePartitionResolutionChangeHandler)</ref></p>
  syntax:
    content: public void unRegisterServicePartitionResolutionChangeHandler(long handlerId)
    parameters:
    - id: handlerId
      type: 0364520f
      description: <p>The callbackHandle identifier that will be removed. This is returned by the <ref refid="" kindref="compound">system.fabric.ServiceManagementClient#registerServicePartitionResolutionChangeHandler(java.net.URI,system.fabric.ServicePartitionResolutionChangeHandler)</ref> call. </p>
- uid: system.fabric._service_management_client.updateService(URI,ServiceUpdateDescription)
  id: updateService(URI,ServiceUpdateDescription)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription)
  nameWithType: ServiceManagementClient.updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription)
  overload: system.fabric._service_management_client.updateService*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1051
  package: system.fabric
  summary: >-
    <p>Updates a service with the specified description.</p>

    <p></p>
  syntax:
    content: public CompletableFuture updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The URI name of the service being updated </p>
    - id: serivceUpdateDescription
      type: system.fabric._service_update_description
      description: <p>The <xref href="system.fabric._service_update_description" data-throw-if-not-resolved="false"></xref> that specifies the updated configuration for the service. </p>
    return:
      type: 5f2aaa64
      description: <p>The updated service. </p>
- uid: system.fabric._service_management_client.updateService(URI,ServiceUpdateDescription,Duration)
  id: updateService(URI,ServiceUpdateDescription,Duration)
  parent: system.fabric._service_management_client
  href: system.fabric._service_management_client.yml
  langs:
  - java
  name: updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription, Duration timeoutMilliSeconds)
  nameWithType: ServiceManagementClient.updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription, Duration timeoutMilliSeconds)
  fullName: CompletableFuture system.fabric.ServiceManagementClient.updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription, Duration timeoutMilliSeconds)
  overload: system.fabric._service_management_client.updateService*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
    startLine: 1069
  package: system.fabric
  summary: >-
    <p>Updates a service with the specified description.</p>

    <p></p>
  syntax:
    content: public CompletableFuture updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription, Duration timeoutMilliSeconds)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The URI name of the service being updated </p>
    - id: serivceUpdateDescription
      type: system.fabric._service_update_description
      description: <p>The <xref href="system.fabric._service_update_description" data-throw-if-not-resolved="false"></xref> that specifies the updated configuration for the service. </p>
    - id: timeoutMilliSeconds
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 5f2aaa64
      description: <p>The updated service. </p>
references:
- uid: 5f2aaa64
  spec.java:
  - name: CompletableFuture
    fullName: CompletableFuture
- uid: system.fabric._service_management_client.createService*
  name: createService
  nameWithType: ServiceManagementClient.createService
  fullName: CompletableFuture system.fabric.ServiceManagementClient.createService
  package: system.fabric
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: system.fabric._service_management_client.createServiceFromTemplate*
  name: createServiceFromTemplate
  nameWithType: ServiceManagementClient.createServiceFromTemplate
  fullName: CompletableFuture system.fabric.ServiceManagementClient.createServiceFromTemplate
  package: system.fabric
- uid: system.fabric._service_management_client.deleteService*
  name: deleteService
  nameWithType: ServiceManagementClient.deleteService
  fullName: CompletableFuture system.fabric.ServiceManagementClient.deleteService
  package: system.fabric
- uid: 9cdf14d0system.fabric._service_descriptiona08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: system.fabric._service_description
    name: ServiceDescription
    fullName: system.fabric.ServiceDescription
    href: system.fabric._service_description.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric._service_management_client.getServiceDescription*
  name: getServiceDescription
  nameWithType: ServiceManagementClient.getServiceDescription
  fullName: CompletableFuture<ServiceDescription> system.fabric.ServiceManagementClient.getServiceDescription
  package: system.fabric
- uid: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler*
  name: registerServicePartitionResolutionChangeHandler
  nameWithType: ServiceManagementClient.registerServicePartitionResolutionChangeHandler
  fullName: long system.fabric.ServiceManagementClient.registerServicePartitionResolutionChangeHandler
  package: system.fabric
- uid: system.fabric._service_management_client.unRegisterServicePartitionResolutionChangeHandler*
  name: unRegisterServicePartitionResolutionChangeHandler
  nameWithType: ServiceManagementClient.unRegisterServicePartitionResolutionChangeHandler
  fullName: void system.fabric.ServiceManagementClient.unRegisterServicePartitionResolutionChangeHandler
  package: system.fabric
- uid: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: system.fabric._resolved_service_partition
    name: ResolvedServicePartition
    fullName: system.fabric.ResolvedServicePartition
    href: system.fabric._resolved_service_partition.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric._service_management_client.resolveServicePartitionAsync*
  name: resolveServicePartitionAsync
  nameWithType: ServiceManagementClient.resolveServicePartitionAsync
  fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync
  package: system.fabric
- uid: 06be942d
  spec.java:
  - name: CompletableFuture<String>
    fullName: CompletableFuture<String>
- uid: system.fabric._service_management_client.getServiceManifest*
  name: getServiceManifest
  nameWithType: ServiceManagementClient.getServiceManifest
  fullName: CompletableFuture<String> system.fabric.ServiceManagementClient.getServiceManifest
  package: system.fabric
- uid: system.fabric._service_management_client.updateService*
  name: updateService
  nameWithType: ServiceManagementClient.updateService
  fullName: CompletableFuture system.fabric.ServiceManagementClient.updateService
  package: system.fabric
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: system.fabric._service_management_client.removeReplica*
  name: removeReplica
  nameWithType: ServiceManagementClient.removeReplica
  fullName: CompletableFuture system.fabric.ServiceManagementClient.removeReplica
  package: system.fabric
- uid: system.fabric._service_management_client.restartReplica*
  name: restartReplica
  nameWithType: ServiceManagementClient.restartReplica
  fullName: CompletableFuture system.fabric.ServiceManagementClient.restartReplica
  package: system.fabric
- uid: 30822cb1
  spec.java:
  - name: CompletableFuture<Long>
    fullName: CompletableFuture<Long>
- uid: system.fabric._service_management_client.registerServiceNotificationFilter*
  name: registerServiceNotificationFilter
  nameWithType: ServiceManagementClient.registerServiceNotificationFilter
  fullName: CompletableFuture<Long> system.fabric.ServiceManagementClient.registerServiceNotificationFilter
  package: system.fabric
- uid: system.fabric._service_management_client.unRegisterServiceNotificationFilter*
  name: unRegisterServiceNotificationFilter
  nameWithType: ServiceManagementClient.unRegisterServiceNotificationFilter
  fullName: CompletableFuture system.fabric.ServiceManagementClient.unRegisterServiceNotificationFilter
  package: system.fabric
- uid: system.fabric._observable78504a52system.fabric._service_notificationa08ddfce
  spec.java:
  - uid: system.fabric._observable
    name: Observable
    fullName: system.fabric.Observable
    href: system.fabric._observable.yml
  - name: <
    fullName: <
  - uid: system.fabric._service_notification
    name: ServiceNotification
    fullName: system.fabric.ServiceNotification
    href: system.fabric._service_notification.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric._service_management_client.getServiceNotificationFilterMatched*
  name: getServiceNotificationFilterMatched
  nameWithType: ServiceManagementClient.getServiceNotificationFilterMatched
  fullName: Observable<ServiceNotification> system.fabric.ServiceManagementClient.getServiceNotificationFilterMatched
  package: system.fabric
- uid: system.fabric._service_management_client.close*
  name: close
  nameWithType: ServiceManagementClient.close
  fullName: void system.fabric.ServiceManagementClient.close
  package: system.fabric
- uid: system.fabric._service_management_client.beginCreateService(long,int,long,long,NativeAsyncCallback)
- uid: system.fabric._service_management_client.beginCreateServiceFromTemplate(long,String,String,String,long,long,long,NativeAsyncCallback)
- uid: system.fabric._service_management_client.beginDeleteService(long,String,long,NativeAsyncCallback)
- uid: system.fabric._service_management_client.beginGetServiceDescription(long,String,long,NativeAsyncCallback)
- uid: system.fabric._service_management_client.beginGetServiceManifest(long,String,String,String,long,NativeAsyncCallback)
- uid: system.fabric._service_management_client.beginRegisterServiceNotificationFilter(long,String,int,long,NativeAsyncCallback)
- uid: system.fabric._service_management_client.beginRemoveReplica(long,String,String,long,boolean,long,NativeAsyncCallback)
- uid: system.fabric._service_management_client.beginResolveServicePartitionWithLongKey(long,String,int,long,long,long,NativeAsyncCallback)
- uid: system.fabric._service_management_client.beginResolveServicePartitionWithStringKey(long,String,int,String,long,long,NativeAsyncCallback)
- uid: system.fabric._service_management_client.beginRestartReplica(long,String,String,long,long,NativeAsyncCallback)
- uid: system.fabric._service_management_client.beginUnRegisterServiceNotificationFilter(long,long,long,NativeAsyncCallback)
- uid: system.fabric._service_management_client.beginUpdateService(long,int,String,long,long,NativeAsyncCallback)
- uid: system.fabric._service_management_client.createNativeServicePartitionResolutionChangeHandler(ServicePartitionResolutionChangeHandlerBroker)
- uid: system.fabric._service_management_client.defaultDurationInMilliSeconds()
- uid: system.fabric._service_management_client.endCreateService(long,long)
- uid: system.fabric._service_management_client.endCreateServiceFromTemplate(long,long)
- uid: system.fabric._service_management_client.endDeleteService(long,long)
- uid: system.fabric._service_management_client.endGetServiceDescription(long,long)
- uid: system.fabric._service_management_client.endGetServiceManifest(long,long)
- uid: system.fabric._service_management_client.endRegisterServiceNotificationFilter(long,long)
- uid: system.fabric._service_management_client.endRemoveReplica(long,long)
- uid: system.fabric._service_management_client.endResolveServicePartition(long,long)
- uid: system.fabric._service_management_client.endRestartReplica(long,long)
- uid: system.fabric._service_management_client.endUnRegisterServiceNotificationFilter(long,long)
- uid: system.fabric._service_management_client.endUpdateService(long,long)
- uid: system.fabric._service_management_client.fClient()
- uid: system.fabric._service_management_client.getManagementClient(long)
- uid: system.fabric._service_management_client.mgmtClientPtr()
- uid: system.fabric._service_management_client.onServiceNotificationFilterMatched(ServiceNotification)
- uid: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandlerWithLongKey(long,String,int,long,long,long)
- uid: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandlerWithStringKey(long,String,int,String,long,long)
- uid: system.fabric._service_management_client.release(long)
- uid: system.fabric._service_management_client.ServiceManagementClient(FabricClient)
- uid: system.fabric._service_management_client.unRegisterServicePartitionResolutionChangeHandler(long,long)
- uid: system.fabric._fabric_client
  parent: system.fabric
  href: system.fabric._fabric_client.yml
  name: FabricClient
  nameWithType: FabricClient
  fullName: system.fabric.FabricClient
  type: Class
  summary: >-
    <p>Creates and manages Service Fabric services and other entities. </p>

    <p>

      <bold>Remarks:</bold>It is highly recommended that you share FabricClients as much as possible. This is because the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> has multiple optimizations such as caching and batching that you would not be able to fully utilize otherwise. </p>
  syntax:
    content: public class FabricClient
- uid: system.fabric._observable
  parent: system.fabric
  href: system.fabric._observable.yml
  name: Observable<T>
  nameWithType: Observable<T>
  fullName: system.fabric.Observable<T>
  type: Class
  syntax:
    content: public class Observable<T>
    typeParameters:
    - type: 8ce1ecb9
- uid: system.fabric._service_notification
  parent: system.fabric
  href: system.fabric._service_notification.yml
  name: ServiceNotification
  nameWithType: ServiceNotification
  fullName: system.fabric.ServiceNotification
  type: Class
  summary: <p>Represents a service notification containing details about a service whose replica or instance endpoints have changed. </p>
  syntax:
    content: public class ServiceNotification
- uid: system.fabric.interop._native_async_callback
  parent: system.fabric.interop
  href: system.fabric.interop._native_async_callback.yml
  name: NativeAsyncCallback
  nameWithType: NativeAsyncCallback
  fullName: system.fabric.interop.NativeAsyncCallback
  type: Interface
  syntax:
    content: public interface NativeAsyncCallback
- uid: system.fabric._service_description
  parent: system.fabric
  href: system.fabric._service_description.yml
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: system.fabric.ServiceDescription
  type: Class
  summary: <p>A <xref href="system.fabric._service_description" data-throw-if-not-resolved="false"></xref> contains all of the information necessary to create a service. </p>
  syntax:
    content: public class ServiceDescription
- uid: system.fabric._service_partition_resolution_change_handler_broker
  parent: system.fabric
  href: system.fabric._service_partition_resolution_change_handler_broker.yml
  name: ServicePartitionResolutionChangeHandlerBroker
  nameWithType: ServicePartitionResolutionChangeHandlerBroker
  fullName: system.fabric.ServicePartitionResolutionChangeHandlerBroker
  type: Class
  syntax:
    content: public class ServicePartitionResolutionChangeHandlerBroker
- uid: system.fabric._service_partition_resolution_change_handler
  parent: system.fabric
  href: system.fabric._service_partition_resolution_change_handler.yml
  name: ServicePartitionResolutionChangeHandler
  nameWithType: ServicePartitionResolutionChangeHandler
  fullName: system.fabric.ServicePartitionResolutionChangeHandler
  type: Interface
  syntax:
    content: public interface ServicePartitionResolutionChangeHandler
- uid: system.fabric._resolved_service_partition
  parent: system.fabric
  href: system.fabric._resolved_service_partition.yml
  name: ResolvedServicePartition
  nameWithType: ResolvedServicePartition
  fullName: system.fabric.ResolvedServicePartition
  type: Class
  summary: >-
    <p>Represents a data structure that contains information on the partitioning and set of endpoints to which the specified Service partition listens.</p>

    <p></p>
  syntax:
    content: public class ResolvedServicePartition
- uid: system.fabric._service_update_description
  parent: system.fabric
  href: system.fabric._service_update_description.yml
  name: ServiceUpdateDescription
  nameWithType: ServiceUpdateDescription
  fullName: system.fabric.ServiceUpdateDescription
  type: Class
  summary: <p>Modifies the <xref href="system.fabric._service_description" data-throw-if-not-resolved="false"></xref> of an existing service. </p>
  syntax:
    content: public class ServiceUpdateDescription
- uid: system.fabric._notification_filter_flags
  parent: system.fabric
  href: system.fabric._notification_filter_flags.yml
  name: NotificationFilterFlags
  nameWithType: NotificationFilterFlags
  fullName: system.fabric.NotificationFilterFlags
  type: Enum
  syntax:
    content: public enum NotificationFilterFlags
- uid: system.fabric._partition_key_type
  parent: system.fabric
  href: system.fabric._partition_key_type.yml
  name: PartitionKeyType
  nameWithType: PartitionKeyType
  fullName: system.fabric.PartitionKeyType
  type: Enum
  syntax:
    content: public enum PartitionKeyType
