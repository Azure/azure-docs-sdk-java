### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName)
  name: FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName)
  nameWithType: FabricServicePartitionClient<C>.FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName)
  parameters:
  - description: <p>Communication client factory </p>
    name: factory
    type: <xref href="microsoft.servicefabric.services.communication.client.CommunicationClientFactory?alt=microsoft.servicefabric.services.communication.client.CommunicationClientFactory&text=CommunicationClientFactory" data-throw-if-not-resolved="False"/>&lt;C&gt;
  - description: <p>Name of the service </p>
    name: serviceName
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Instantiates a service partition client that uses the specified communication client factory to create a client to talk to the service endpoint identified by the service uri argument.</p>

    <p></p>
  syntax: public FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName)
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.FabricServicePartitionClient(CommunicationClientFactory<C>,URI)
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey)
  name: FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey)
  nameWithType: FabricServicePartitionClient<C>.FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey)
  parameters:
  - description: <p>Communication client factory </p>
    name: factory
    type: <xref href="microsoft.servicefabric.services.communication.client.CommunicationClientFactory?alt=microsoft.servicefabric.services.communication.client.CommunicationClientFactory&text=CommunicationClientFactory" data-throw-if-not-resolved="False"/>&lt;C&gt;
  - description: <p>Name of the service </p>
    name: serviceName
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>The partition key used to identify the partition within the service. </p>
    name: partitionKey
    type: <xref href="microsoft.servicefabric.services.client.ServicePartitionKey?alt=microsoft.servicefabric.services.client.ServicePartitionKey&text=ServicePartitionKey" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Instantiates a service partition client that uses the specified communication client factory to create a client to talk to the service endpoint identified by the service uri, partitionkey arguments.</p>

    <p></p>
  syntax: public FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey)
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.FabricServicePartitionClient(CommunicationClientFactory<C>,URI,ServicePartitionKey)
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector)
  name: FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector)
  nameWithType: FabricServicePartitionClient<C>.FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector)
  parameters:
  - description: <p>Communication client factory </p>
    name: factory
    type: <xref href="microsoft.servicefabric.services.communication.client.CommunicationClientFactory?alt=microsoft.servicefabric.services.communication.client.CommunicationClientFactory&text=CommunicationClientFactory" data-throw-if-not-resolved="False"/>&lt;C&gt;
  - description: <p>Name of the service </p>
    name: serviceName
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>The partition key used to identify the partition within the service. </p>
    name: partitionKey
    type: <xref href="microsoft.servicefabric.services.client.ServicePartitionKey?alt=microsoft.servicefabric.services.client.ServicePartitionKey&text=ServicePartitionKey" data-throw-if-not-resolved="False"/>
  - description: <p>Target replica information </p>
    name: targetReplicaSelector
    type: <xref href="microsoft.servicefabric.services.communication.client.TargetReplicaSelector?alt=microsoft.servicefabric.services.communication.client.TargetReplicaSelector&text=TargetReplicaSelector" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Instantiates a service partition client that uses the specified communication client factory to create a client to talk to the service endpoint identified by the service uri, partitionkey and replica selector arguments.</p>

    <p></p>
  syntax: public FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector)
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.FabricServicePartitionClient(CommunicationClientFactory<C>,URI,ServicePartitionKey,TargetReplicaSelector)
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)
  name: FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)
  nameWithType: FabricServicePartitionClient<C>.FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)
  parameters:
  - description: <p>Communication client factory </p>
    name: factory
    type: <xref href="microsoft.servicefabric.services.communication.client.CommunicationClientFactory?alt=microsoft.servicefabric.services.communication.client.CommunicationClientFactory&text=CommunicationClientFactory" data-throw-if-not-resolved="False"/>&lt;C&gt;
  - description: <p>Name of the service </p>
    name: serviceName
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>The partition key used to identify the partition within the service. </p>
    name: partitionKey
    type: <xref href="microsoft.servicefabric.services.client.ServicePartitionKey?alt=microsoft.servicefabric.services.client.ServicePartitionKey&text=ServicePartitionKey" data-throw-if-not-resolved="False"/>
  - description: <p>Target replica information </p>
    name: targetReplicaSelector
    type: <xref href="microsoft.servicefabric.services.communication.client.TargetReplicaSelector?alt=microsoft.servicefabric.services.communication.client.TargetReplicaSelector&text=TargetReplicaSelector" data-throw-if-not-resolved="False"/>
  - description: <p>Listener in the replica to which the client should connect to </p>
    name: listenerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Instantiates a service partition client that uses the specified communication client factory to create a client to talk to the service endpoint identified by the service uri, partitionkey, replica and listener arguments.</p>

    <p></p>
  syntax: public FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.FabricServicePartitionClient(CommunicationClientFactory<C>,URI,ServicePartitionKey,TargetReplicaSelector,String)
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  name: FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: FabricServicePartitionClient<C>.FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  parameters:
  - description: <p>Communication client factory </p>
    name: factory
    type: <xref href="microsoft.servicefabric.services.communication.client.CommunicationClientFactory?alt=microsoft.servicefabric.services.communication.client.CommunicationClientFactory&text=CommunicationClientFactory" data-throw-if-not-resolved="False"/>&lt;C&gt;
  - description: <p>Name of the service </p>
    name: serviceName
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>The partition key used to identify the partition within the service. </p>
    name: partitionKey
    type: <xref href="microsoft.servicefabric.services.client.ServicePartitionKey?alt=microsoft.servicefabric.services.client.ServicePartitionKey&text=ServicePartitionKey" data-throw-if-not-resolved="False"/>
  - description: <p>Target replica information </p>
    name: targetReplicaSelector
    type: <xref href="microsoft.servicefabric.services.communication.client.TargetReplicaSelector?alt=microsoft.servicefabric.services.communication.client.TargetReplicaSelector&text=TargetReplicaSelector" data-throw-if-not-resolved="False"/>
  - description: <p>Listener in the replica to which the client should connect to </p>
    name: listenerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Retry policy for exceptions seen during communication </p>
    name: retrySettings
    type: <xref href="microsoft.servicefabric.services.communication.client.OperationRetrySettings?alt=microsoft.servicefabric.services.communication.client.OperationRetrySettings&text=OperationRetrySettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Instantiates a service partition client that uses the specified communication client factory to create a client to talk to the service endpoint identified by the service uri, partitionkey, replica and listener arguments.</p>

    <p></p>
  syntax: public FabricServicePartitionClient(CommunicationClientFactory<C> factory, URI serviceName, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.FabricServicePartitionClient(CommunicationClientFactory<C>,URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.services.communication.client.ServicePartitionClient?alt=microsoft.servicefabric.services.communication.client.ServicePartitionClient&text=ServicePartitionClient%3CTCommunicationClient%3E" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.getCommunicationClientFactory()
  name: getCommunicationClientFactory()
  nameWithType: FabricServicePartitionClient<C>.getCommunicationClientFactory()
  returns:
    description: <p>Communication client factory </p>
    type: <xref href="microsoft.servicefabric.services.communication.client.CommunicationClientFactory?alt=microsoft.servicefabric.services.communication.client.CommunicationClientFactory&text=CommunicationClientFactory" data-throw-if-not-resolved="False"/>&lt;C&gt;
  summary: >-
    <p>Gets the communication client factory</p>

    <p></p>
  syntax: public CommunicationClientFactory<C> getCommunicationClientFactory()
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.getCommunicationClientFactory()
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.getLastResolvedServicePartition()
  name: getLastResolvedServicePartition()
  nameWithType: FabricServicePartitionClient<C>.getLastResolvedServicePartition()
  returns:
    description: <p>true if a ResolvedServicePartition was set </p>
    type: <xref href="system.fabric.ResolvedServicePartition?alt=system.fabric.ResolvedServicePartition&text=ResolvedServicePartition" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the resolved service partition that was set on the client.</p>

    <p></p>
  syntax: public ResolvedServicePartition getLastResolvedServicePartition()
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.getLastResolvedServicePartition()
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.getListenerName()
  name: getListenerName()
  nameWithType: FabricServicePartitionClient<C>.getListenerName()
  returns:
    description: <p>Listener name </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the name of the listener in the replica to which the client should connect to.</p>

    <p></p>
  syntax: public String getListenerName()
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.getListenerName()
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.getPartitionKey()
  name: getPartitionKey()
  nameWithType: FabricServicePartitionClient<C>.getPartitionKey()
  returns:
    description: <p>Partition key </p>
    type: <xref href="microsoft.servicefabric.services.client.ServicePartitionKey?alt=microsoft.servicefabric.services.client.ServicePartitionKey&text=ServicePartitionKey" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the partition key.</p>

    <p></p>
  syntax: public ServicePartitionKey getPartitionKey()
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.getPartitionKey()
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.getServiceUri()
  name: getServiceUri()
  nameWithType: FabricServicePartitionClient<C>.getServiceUri()
  returns:
    description: <p>Name of the service </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the name of the service</p>

    <p></p>
  syntax: public URI getServiceUri()
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.getServiceUri()
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.getTargetReplicaSelector()
  name: getTargetReplicaSelector()
  nameWithType: FabricServicePartitionClient<C>.getTargetReplicaSelector()
  returns:
    description: <p>A <xref uid="microsoft.servicefabric.services.communication.client.TargetReplicaSelector" data-throw-if-not-resolved="false" data-raw-source="TargetReplicaSelector"></xref></p>
    type: <xref href="microsoft.servicefabric.services.communication.client.TargetReplicaSelector?alt=microsoft.servicefabric.services.communication.client.TargetReplicaSelector&text=TargetReplicaSelector" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about which replica in the partition the client should connect to.</p>

    <p></p>
  syntax: public TargetReplicaSelector getTargetReplicaSelector()
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.getTargetReplicaSelector()
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.invokeWithRetryAsync(Function<C, CompletableFuture<T>> func, CancellationToken cancellationToken, Class<?>... doNotRetryExceptionTypes)
  name: invokeWithRetryAsync(Function<C, CompletableFuture<T>> func, CancellationToken cancellationToken, Class<?>... doNotRetryExceptionTypes)
  nameWithType: FabricServicePartitionClient<C>.invokeWithRetryAsync(Function<C, CompletableFuture<T>> func, CancellationToken cancellationToken, Class<?>... doNotRetryExceptionTypes)
  parameters:
  - description: <p>Function being invoked </p>
    name: func
    type: <xref href="Function%3CC%2C+CompletableFuture%3CT%3E%3E?alt=Function%3CC%2C+CompletableFuture%3CT%3E%3E&text=Function%3CC%2C+CompletableFuture%3CT%3E%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Token to signal the cancellation of async operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  - description: <p>Exceptions for which the service partition client should not retry </p>
    name: doNotRetryExceptionTypes
    type: <xref href="Class%3C%3F%3E...?alt=Class%3C%3F%3E...&text=Class%3C%3F%3E..." data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is the result from the function given in the argument. </p>
    type: <xref href="%3CT%3E+CompletableFuture%3CT%3E?alt=%3CT%3E+CompletableFuture%3CT%3E&text=%3CT%3E+CompletableFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invokes the given Function, retrying for exceptions thrown other than the exceptions in the doNotRetryExceptionTypes. For exceptions that are not in doNotRetryExceptionTypes, CommunicationClientFactory's ReportOperationExceptionAsync() method controls if the exception should be retried or not.</p>

    <p></p>
  syntax: public <T> CompletableFuture<T> invokeWithRetryAsync(Function<C, CompletableFuture<T>> func, CancellationToken cancellationToken, Class<?>... doNotRetryExceptionTypes)
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.invokeWithRetryAsync(Function<C, CompletableFuture<T>>,CancellationToken,Class<?>...)
- fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C extends CommunicationClient>.invokeWithRetryAsync(Function<C, CompletableFuture<T>> func, Class<?>... doNotRetryExceptionTypes)
  name: invokeWithRetryAsync(Function<C, CompletableFuture<T>> func, Class<?>... doNotRetryExceptionTypes)
  nameWithType: FabricServicePartitionClient<C>.invokeWithRetryAsync(Function<C, CompletableFuture<T>> func, Class<?>... doNotRetryExceptionTypes)
  parameters:
  - description: <p>Function being invoked </p>
    name: func
    type: <xref href="Function%3CC%2C+CompletableFuture%3CT%3E%3E?alt=Function%3CC%2C+CompletableFuture%3CT%3E%3E&text=Function%3CC%2C+CompletableFuture%3CT%3E%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Exceptions for which the service partition client should not retry </p>
    name: doNotRetryExceptionTypes
    type: <xref href="Class%3C%3F%3E...?alt=Class%3C%3F%3E...&text=Class%3C%3F%3E..." data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is the result from the function given in the argument. </p>
    type: <xref href="%3CT%3E+CompletableFuture%3CT%3E?alt=%3CT%3E+CompletableFuture%3CT%3E&text=%3CT%3E+CompletableFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invokes the given Function, retrying for exceptions thrown other than the exceptions in the doNotRetryExceptionTypes. For exceptions that are not in doNotRetryExceptionTypes, CommunicationClientFactory's ReportOperationExceptionAsync() method controls if the exception should be retried or not.</p>

    <p></p>
  syntax: public <T> CompletableFuture<T> invokeWithRetryAsync(Function<C, CompletableFuture<T>> func, Class<?>... doNotRetryExceptionTypes)
  uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient.invokeWithRetryAsync(Function<C, CompletableFuture<T>>,Class<?>...)
nameWithType: FabricServicePartitionClient<C>
syntax: public class FabricServicePartitionClient<C extends CommunicationClient> implements ServicePartitionClient<C>
type: class
typeParameters:
- description: <p>type of Communication client </p>
  name: C
uid: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient
fullName: microsoft.servicefabric.services.communication.client.FabricServicePartitionClient<C>
name: FabricServicePartitionClient<C>
package: microsoft.servicefabric.services.communication.client
summary: >-
  <p>Specifies an instance of the communication client that can communicate with the replicas of a particular partition.</p>

  <p></p>
metadata: {}
