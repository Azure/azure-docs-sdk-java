### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient"
fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient"
name: "ServicePrincipalsServicePrincipalsClient"
nameWithType: "ServicePrincipalsServicePrincipalsClient"
summary: "An instance of this class provides access to all the operations defined in Service<wbr>Principals<wbr>Service<wbr>Principals<wbr>Client."
syntax: "public interface ServicePrincipalsServicePrincipalsClient"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.createServicePrincipal(com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.createServicePrincipal(MicrosoftGraphServicePrincipalInner body)"
  name: "createServicePrincipal(MicrosoftGraphServicePrincipalInner body)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.createServicePrincipal(MicrosoftGraphServicePrincipalInner body)"
  summary: "Add new entity to service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "New entity."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphServicePrincipalInner createServicePrincipal(MicrosoftGraphServicePrincipalInner body)"
  desc: "Add new entity to servicePrincipals."
  returns:
    description: "servicePrincipal."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.createServicePrincipalAsync(com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.createServicePrincipalAsync(MicrosoftGraphServicePrincipalInner body)"
  name: "createServicePrincipalAsync(MicrosoftGraphServicePrincipalInner body)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.createServicePrincipalAsync(MicrosoftGraphServicePrincipalInner body)"
  summary: "Add new entity to service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "New entity."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphServicePrincipalInner> createServicePrincipalAsync(MicrosoftGraphServicePrincipalInner body)"
  desc: "Add new entity to servicePrincipals."
  returns:
    description: "servicePrincipal on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.createServicePrincipalWithResponse(com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.createServicePrincipalWithResponse(MicrosoftGraphServicePrincipalInner body, Context context)"
  name: "createServicePrincipalWithResponse(MicrosoftGraphServicePrincipalInner body, Context context)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.createServicePrincipalWithResponse(MicrosoftGraphServicePrincipalInner body, Context context)"
  summary: "Add new entity to service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "New entity."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphServicePrincipalInner> createServicePrincipalWithResponse(MicrosoftGraphServicePrincipalInner body, Context context)"
  desc: "Add new entity to servicePrincipals."
  returns:
    description: "servicePrincipal along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.createServicePrincipalWithResponseAsync(com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.createServicePrincipalWithResponseAsync(MicrosoftGraphServicePrincipalInner body)"
  name: "createServicePrincipalWithResponseAsync(MicrosoftGraphServicePrincipalInner body)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.createServicePrincipalWithResponseAsync(MicrosoftGraphServicePrincipalInner body)"
  summary: "Add new entity to service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "New entity."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphServicePrincipalInner>> createServicePrincipalWithResponseAsync(MicrosoftGraphServicePrincipalInner body)"
  desc: "Add new entity to servicePrincipals."
  returns:
    description: "servicePrincipal along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.deleteServicePrincipal(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.deleteServicePrincipal(String servicePrincipalId)"
  name: "deleteServicePrincipal(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.deleteServicePrincipal(String servicePrincipalId)"
  summary: "Delete entity from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteServicePrincipal(String servicePrincipalId)"
  desc: "Delete entity from servicePrincipals."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.deleteServicePrincipalAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.deleteServicePrincipalAsync(String servicePrincipalId)"
  name: "deleteServicePrincipalAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.deleteServicePrincipalAsync(String servicePrincipalId)"
  summary: "Delete entity from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteServicePrincipalAsync(String servicePrincipalId)"
  desc: "Delete entity from servicePrincipals."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.deleteServicePrincipalAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.deleteServicePrincipalAsync(String servicePrincipalId, String ifMatch)"
  name: "deleteServicePrincipalAsync(String servicePrincipalId, String ifMatch)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.deleteServicePrincipalAsync(String servicePrincipalId, String ifMatch)"
  summary: "Delete entity from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteServicePrincipalAsync(String servicePrincipalId, String ifMatch)"
  desc: "Delete entity from servicePrincipals."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.deleteServicePrincipalWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.deleteServicePrincipalWithResponse(String servicePrincipalId, String ifMatch, Context context)"
  name: "deleteServicePrincipalWithResponse(String servicePrincipalId, String ifMatch, Context context)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.deleteServicePrincipalWithResponse(String servicePrincipalId, String ifMatch, Context context)"
  summary: "Delete entity from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteServicePrincipalWithResponse(String servicePrincipalId, String ifMatch, Context context)"
  desc: "Delete entity from servicePrincipals."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.deleteServicePrincipalWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.deleteServicePrincipalWithResponseAsync(String servicePrincipalId, String ifMatch)"
  name: "deleteServicePrincipalWithResponseAsync(String servicePrincipalId, String ifMatch)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.deleteServicePrincipalWithResponseAsync(String servicePrincipalId, String ifMatch)"
  summary: "Delete entity from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteServicePrincipalWithResponseAsync(String servicePrincipalId, String ifMatch)"
  desc: "Delete entity from servicePrincipals."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.getServicePrincipal(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.getServicePrincipal(String servicePrincipalId)"
  name: "getServicePrincipal(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.getServicePrincipal(String servicePrincipalId)"
  summary: "Get entity from service<wbr>Principals by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphServicePrincipalInner getServicePrincipal(String servicePrincipalId)"
  desc: "Get entity from servicePrincipals by key."
  returns:
    description: "entity from servicePrincipals by key."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.getServicePrincipalAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.getServicePrincipalAsync(String servicePrincipalId)"
  name: "getServicePrincipalAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.getServicePrincipalAsync(String servicePrincipalId)"
  summary: "Get entity from service<wbr>Principals by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphServicePrincipalInner> getServicePrincipalAsync(String servicePrincipalId)"
  desc: "Get entity from servicePrincipals by key."
  returns:
    description: "entity from servicePrincipals by key on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.getServicePrincipalAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.getServicePrincipalAsync(String servicePrincipalId, String consistencyLevel, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand)"
  name: "getServicePrincipalAsync(String servicePrincipalId, String consistencyLevel, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.getServicePrincipalAsync(String servicePrincipalId, String consistencyLevel, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand)"
  summary: "Get entity from service<wbr>Principals by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Indicates the requested consistency level."
    name: "consistencyLevel"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect&text=ServicePrincipalsServicePrincipalSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand&text=ServicePrincipalsServicePrincipalExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphServicePrincipalInner> getServicePrincipalAsync(String servicePrincipalId, String consistencyLevel, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand)"
  desc: "Get entity from servicePrincipals by key."
  returns:
    description: "entity from servicePrincipals by key on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.getServicePrincipalWithResponse(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.getServicePrincipalWithResponse(String servicePrincipalId, String consistencyLevel, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand, Context context)"
  name: "getServicePrincipalWithResponse(String servicePrincipalId, String consistencyLevel, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand, Context context)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.getServicePrincipalWithResponse(String servicePrincipalId, String consistencyLevel, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand, Context context)"
  summary: "Get entity from service<wbr>Principals by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Indicates the requested consistency level."
    name: "consistencyLevel"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect&text=ServicePrincipalsServicePrincipalSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand&text=ServicePrincipalsServicePrincipalExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphServicePrincipalInner> getServicePrincipalWithResponse(String servicePrincipalId, String consistencyLevel, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand, Context context)"
  desc: "Get entity from servicePrincipals by key."
  returns:
    description: "entity from servicePrincipals by key along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.getServicePrincipalWithResponseAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.getServicePrincipalWithResponseAsync(String servicePrincipalId, String consistencyLevel, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand)"
  name: "getServicePrincipalWithResponseAsync(String servicePrincipalId, String consistencyLevel, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.getServicePrincipalWithResponseAsync(String servicePrincipalId, String consistencyLevel, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand)"
  summary: "Get entity from service<wbr>Principals by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Indicates the requested consistency level."
    name: "consistencyLevel"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect&text=ServicePrincipalsServicePrincipalSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand&text=ServicePrincipalsServicePrincipalExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphServicePrincipalInner>> getServicePrincipalWithResponseAsync(String servicePrincipalId, String consistencyLevel, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand)"
  desc: "Get entity from servicePrincipals by key."
  returns:
    description: "entity from servicePrincipals by key along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.listServicePrincipal()"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.listServicePrincipal()"
  name: "listServicePrincipal()"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.listServicePrincipal()"
  summary: "Get entities from service<wbr>Principals."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<MicrosoftGraphServicePrincipalInner> listServicePrincipal()"
  desc: "Get entities from servicePrincipals."
  returns:
    description: "entities from servicePrincipals as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.listServicePrincipal(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.listServicePrincipal(String consistencyLevel, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsServicePrincipalOrderby> orderby, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand, Context context)"
  name: "listServicePrincipal(String consistencyLevel, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsServicePrincipalOrderby> orderby, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand, Context context)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.listServicePrincipal(String consistencyLevel, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsServicePrincipalOrderby> orderby, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand, Context context)"
  summary: "Get entities from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "Indicates the requested consistency level."
    name: "consistencyLevel"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalOrderby&text=ServicePrincipalsServicePrincipalOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect&text=ServicePrincipalsServicePrincipalSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand&text=ServicePrincipalsServicePrincipalExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphServicePrincipalInner> listServicePrincipal(String consistencyLevel, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsServicePrincipalOrderby> orderby, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand, Context context)"
  desc: "Get entities from servicePrincipals."
  returns:
    description: "entities from servicePrincipals as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.listServicePrincipalAsync()"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.listServicePrincipalAsync()"
  name: "listServicePrincipalAsync()"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.listServicePrincipalAsync()"
  summary: "Get entities from service<wbr>Principals."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<MicrosoftGraphServicePrincipalInner> listServicePrincipalAsync()"
  desc: "Get entities from servicePrincipals."
  returns:
    description: "entities from servicePrincipals as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.listServicePrincipalAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.listServicePrincipalAsync(String consistencyLevel, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsServicePrincipalOrderby> orderby, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand)"
  name: "listServicePrincipalAsync(String consistencyLevel, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsServicePrincipalOrderby> orderby, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.listServicePrincipalAsync(String consistencyLevel, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsServicePrincipalOrderby> orderby, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand)"
  summary: "Get entities from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "Indicates the requested consistency level."
    name: "consistencyLevel"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalOrderby&text=ServicePrincipalsServicePrincipalOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalSelect&text=ServicePrincipalsServicePrincipalSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsServicePrincipalExpand&text=ServicePrincipalsServicePrincipalExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphServicePrincipalInner> listServicePrincipalAsync(String consistencyLevel, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsServicePrincipalOrderby> orderby, List<ServicePrincipalsServicePrincipalSelect> select, List<ServicePrincipalsServicePrincipalExpand> expand)"
  desc: "Get entities from servicePrincipals."
  returns:
    description: "entities from servicePrincipals as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.updateServicePrincipal(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.updateServicePrincipal(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body)"
  name: "updateServicePrincipal(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.updateServicePrincipal(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body)"
  summary: "Update entity in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateServicePrincipal(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body)"
  desc: "Update entity in servicePrincipals."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.updateServicePrincipalAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.updateServicePrincipalAsync(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body)"
  name: "updateServicePrincipalAsync(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.updateServicePrincipalAsync(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body)"
  summary: "Update entity in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updateServicePrincipalAsync(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body)"
  desc: "Update entity in servicePrincipals."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.updateServicePrincipalWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.updateServicePrincipalWithResponse(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body, Context context)"
  name: "updateServicePrincipalWithResponse(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body, Context context)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.updateServicePrincipalWithResponse(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body, Context context)"
  summary: "Update entity in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updateServicePrincipalWithResponse(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body, Context context)"
  desc: "Update entity in servicePrincipals."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.updateServicePrincipalWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsServicePrincipalsClient.updateServicePrincipalWithResponseAsync(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body)"
  name: "updateServicePrincipalWithResponseAsync(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body)"
  nameWithType: "ServicePrincipalsServicePrincipalsClient.updateServicePrincipalWithResponseAsync(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body)"
  summary: "Update entity in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updateServicePrincipalWithResponseAsync(String servicePrincipalId, MicrosoftGraphServicePrincipalInner body)"
  desc: "Update entity in servicePrincipals."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ServicePrincipalsServicePrincipalsClient."
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.16.0
