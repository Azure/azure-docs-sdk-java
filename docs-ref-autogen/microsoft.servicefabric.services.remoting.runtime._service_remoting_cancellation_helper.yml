### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper
  id: _service_remoting_cancellation_helper
  parent: microsoft.servicefabric.services.remoting.runtime
  children:
  - microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.cancelRequestAsync(int,int,String)
  - microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.dispatchRequest(int,int,String,Function<CancellationToken, CompletableFuture<byte[]>>)
  - microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.isCancellationRequest(ServiceRemotingMessageHeaders)
  - microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.ServiceRemotingCancellationHelper(String)
  href: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.yml
  langs:
  - java
  name: ServiceRemotingCancellationHelper
  nameWithType: ServiceRemotingCancellationHelper
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingCancellationHelper.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingCancellationHelper.java
    startLine: 16
  package: microsoft.servicefabric.services.remoting.runtime
  summary: "<p>Provides cancellation support for remote method dispatching. </p>"
  syntax:
    content: public class ServiceRemotingCancellationHelper
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.cancelRequestAsync(int,int,String)
  id: cancelRequestAsync(int,int,String)
  parent: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper
  href: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.yml
  langs:
  - java
  name: cancelRequestAsync(int interfaceId, int methodId, String callContext)
  nameWithType: ServiceRemotingCancellationHelper.cancelRequestAsync(int interfaceId, int methodId, String callContext)
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.cancelRequestAsync(int interfaceId, int methodId, String callContext)
  overload: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.cancelRequestAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingCancellationHelper.java
    startLine: 59
  package: microsoft.servicefabric.services.remoting.runtime
  summary: "<p>Cancels the request asynchronously. </p>"
  syntax:
    content: public CompletableFuture<byte[]> cancelRequestAsync(int interfaceId, int methodId, String callContext)
    parameters:
    - id: interfaceId
      type: f75371fa
      description: <p>The interface id of the remote interface </p>
    - id: methodId
      type: f75371fa
      description: <p>The methodId of the remote method </p>
    - id: callContext
      type: "26831127"
      description: <p>callContext. </p>
    return:
      type: 5fe2dfa4
      description: <p>returns a Completable future having byte array. </p>
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.dispatchRequest(int,int,String,Function<CancellationToken, CompletableFuture<byte[]>>)
  id: dispatchRequest(int,int,String,Function<CancellationToken, CompletableFuture<byte[]>>)
  parent: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper
  href: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.yml
  langs:
  - java
  name: dispatchRequest(int interfaceId, int methodId, String callContext, Function<CancellationToken, CompletableFuture<byte[]>> dispatchFunc)
  nameWithType: ServiceRemotingCancellationHelper.dispatchRequest(int interfaceId, int methodId, String callContext, Function<CancellationToken, CompletableFuture<byte[]>> dispatchFunc)
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.dispatchRequest(int interfaceId, int methodId, String callContext, Function<CancellationToken, CompletableFuture<byte[]>> dispatchFunc)
  overload: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.dispatchRequest*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingCancellationHelper.java
    startLine: 108
  package: microsoft.servicefabric.services.remoting.runtime
  summary: "<p>Dispatch request. </p>"
  syntax:
    content: public CompletableFuture<byte[]> dispatchRequest(int interfaceId, int methodId, String callContext, Function<CancellationToken, CompletableFuture<byte[]>> dispatchFunc)
    parameters:
    - id: interfaceId
      type: f75371fa
      description: <p>The interface id of the remote interface </p>
    - id: methodId
      type: f75371fa
      description: <p>The methodId of the remote method </p>
    - id: callContext
      type: "26831127"
      description: <p>callContext. </p>
    - id: dispatchFunc
      type: 432ffe41system.fabric._cancellation_tokene2379a03
      description: <p>dispatch function. </p>
    return:
      type: 5fe2dfa4
      description: <p>returns a Completable future. </p>
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.isCancellationRequest(ServiceRemotingMessageHeaders)
  id: isCancellationRequest(ServiceRemotingMessageHeaders)
  parent: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper
  href: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.yml
  langs:
  - java
  name: isCancellationRequest(ServiceRemotingMessageHeaders messageHeaders)
  nameWithType: ServiceRemotingCancellationHelper.isCancellationRequest(ServiceRemotingMessageHeaders messageHeaders)
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.isCancellationRequest(ServiceRemotingMessageHeaders messageHeaders)
  overload: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.isCancellationRequest*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingCancellationHelper.java
    startLine: 35
  package: microsoft.servicefabric.services.remoting.runtime
  summary: "<p>Returns true if it is a cancellation request. </p>"
  syntax:
    content: public boolean isCancellationRequest(ServiceRemotingMessageHeaders messageHeaders)
    parameters:
    - id: messageHeaders
      type: microsoft.servicefabric.services.remoting._service_remoting_message_headers
      description: <p>Request message headers </p>
    return:
      type: 4fc6e284
      description: <p>boolean indicating whether its cancellation request or not. </p>
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.ServiceRemotingCancellationHelper(String)
  id: ServiceRemotingCancellationHelper(String)
  parent: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper
  href: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.yml
  langs:
  - java
  name: ServiceRemotingCancellationHelper(String traceId)
  nameWithType: ServiceRemotingCancellationHelper.ServiceRemotingCancellationHelper(String traceId)
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.ServiceRemotingCancellationHelper(String traceId)
  overload: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.ServiceRemotingCancellationHelper*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingCancellationHelper.java
    startLine: 23
  package: microsoft.servicefabric.services.remoting.runtime
  syntax:
    content: public ServiceRemotingCancellationHelper(String traceId)
    parameters:
    - id: traceId
      type: "26831127"
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.ServiceRemotingCancellationHelper*
  name: ServiceRemotingCancellationHelper
  nameWithType: ServiceRemotingCancellationHelper.ServiceRemotingCancellationHelper
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.ServiceRemotingCancellationHelper
  package: microsoft.servicefabric.services.remoting.runtime
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.isCancellationRequest*
  name: isCancellationRequest
  nameWithType: ServiceRemotingCancellationHelper.isCancellationRequest
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.isCancellationRequest
  package: microsoft.servicefabric.services.remoting.runtime
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 5fe2dfa4
  spec.java:
  - name: CompletableFuture<byte[]>
    fullName: CompletableFuture<byte[]>
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.cancelRequestAsync*
  name: cancelRequestAsync
  nameWithType: ServiceRemotingCancellationHelper.cancelRequestAsync
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.cancelRequestAsync
  package: microsoft.servicefabric.services.remoting.runtime
- uid: 432ffe41system.fabric._cancellation_tokene2379a03
  spec.java:
  - name: Function<
    fullName: Function<
  - uid: system.fabric._cancellation_token
    name: CancellationToken
    fullName: system.fabric.CancellationToken
    href: system.fabric._cancellation_token.yml
  - name: ', CompletableFuture<byte[]>>'
    fullName: ', CompletableFuture<byte[]>>'
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_cancellation_helper.dispatchRequest*
  name: dispatchRequest
  nameWithType: ServiceRemotingCancellationHelper.dispatchRequest
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.dispatchRequest
  package: microsoft.servicefabric.services.remoting.runtime
- uid: microsoft.servicefabric.services.remoting._service_remoting_message_headers
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting._service_remoting_message_headers.yml
  name: ServiceRemotingMessageHeaders
  nameWithType: ServiceRemotingMessageHeaders
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  type: Class
  summary: <p>Specifies the headers that are sent along with a ServiceRemoting message. </p>
  syntax:
    content: public class ServiceRemotingMessageHeaders
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A CancellationToken is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
