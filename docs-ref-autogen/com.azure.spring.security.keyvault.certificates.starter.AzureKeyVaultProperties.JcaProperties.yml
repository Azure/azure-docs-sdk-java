### YamlMime:JavaType
uid: "com.azure.spring.security.keyvault.certificates.starter.AzureKeyVaultProperties.JcaProperties"
fullName: "com.azure.spring.security.keyvault.certificates.starter.AzureKeyVaultProperties.JcaProperties"
name: "AzureKeyVaultProperties.JcaProperties"
nameWithType: "AzureKeyVaultProperties.JcaProperties"
summary: "Jca properties"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static class AzureKeyVaultProperties.JcaProperties"
constructors:
- "com.azure.spring.security.keyvault.certificates.starter.AzureKeyVaultProperties.JcaProperties.JcaProperties()"
methods:
- "com.azure.spring.security.keyvault.certificates.starter.AzureKeyVaultProperties.JcaProperties.getCertificatesRefreshInterval()"
- "com.azure.spring.security.keyvault.certificates.starter.AzureKeyVaultProperties.JcaProperties.getDisableHostnameVerification()"
- "com.azure.spring.security.keyvault.certificates.starter.AzureKeyVaultProperties.JcaProperties.getOverrideTrustManagerFactory()"
- "com.azure.spring.security.keyvault.certificates.starter.AzureKeyVaultProperties.JcaProperties.getRefreshCertificatesWhenHaveUnTrustCertificate()"
- "com.azure.spring.security.keyvault.certificates.starter.AzureKeyVaultProperties.JcaProperties.setCertificatesRefreshInterval(long)"
- "com.azure.spring.security.keyvault.certificates.starter.AzureKeyVaultProperties.JcaProperties.setDisableHostnameVerification(java.lang.String)"
- "com.azure.spring.security.keyvault.certificates.starter.AzureKeyVaultProperties.JcaProperties.setOverrideTrustManagerFactory(java.lang.String)"
- "com.azure.spring.security.keyvault.certificates.starter.AzureKeyVaultProperties.JcaProperties.setRefreshCertificatesWhenHaveUnTrustCertificate(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.spring.security.keyvault.certificates.starter"
artifact: com.azure.spring:azure-spring-boot-starter-keyvault-certificates:3.0.1
