### YamlMime:JavaMember
uid: "com.azure.resourcemanager.appservice.models.FunctionApp.UpdateStages.WithStorageAccount.withExistingStorageAccount*"
fullName: "com.azure.resourcemanager.appservice.models.FunctionApp.UpdateStages.WithStorageAccount.withExistingStorageAccount"
name: "withExistingStorageAccount"
nameWithType: "FunctionApp.UpdateStages.WithStorageAccount.withExistingStorageAccount"
members:
- uid: "com.azure.resourcemanager.appservice.models.FunctionApp.UpdateStages.WithStorageAccount.withExistingStorageAccount(com.azure.resourcemanager.storage.models.StorageAccount)"
  fullName: "com.azure.resourcemanager.appservice.models.FunctionApp.UpdateStages.WithStorageAccount.withExistingStorageAccount(StorageAccount storageAccount)"
  name: "withExistingStorageAccount(StorageAccount storageAccount)"
  nameWithType: "FunctionApp.UpdateStages.WithStorageAccount.withExistingStorageAccount(StorageAccount storageAccount)"
  summary: "Specifies the storage account to use for the function app."
  parameters:
  - description: "the storage account to use"
    name: "storageAccount"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.StorageAccount?alt=com.azure.resourcemanager.storage.models.StorageAccount&text=StorageAccount\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract FunctionApp.Update withExistingStorageAccount(StorageAccount storageAccount)"
  returns:
    description: "the next stage of the function app update"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.FunctionApp.Update?alt=com.azure.resourcemanager.appservice.models.FunctionApp.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.appservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
