### YamlMime:JavaMember
nameWithType: HttpsHsmTrustBundleProvider.getTrustBundleCerts
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.device.edge.HttpsHsmTrustBundleProvider.getTrustBundleCerts(String providerUri, String apiVersion, UnixDomainSocketChannel unixDomainSocketChannel)
  name: getTrustBundleCerts(String providerUri, String apiVersion, UnixDomainSocketChannel unixDomainSocketChannel)
  nameWithType: HttpsHsmTrustBundleProvider.getTrustBundleCerts(String providerUri, String apiVersion, UnixDomainSocketChannel unixDomainSocketChannel)
  overridden: com.microsoft.azure.sdk.iot.device.edge.TrustBundleProvider.getTrustBundleCerts(String,String,UnixDomainSocketChannel)
  parameters:
  - description: <p>the provider uri of the HSM to communicate with </p>
    name: providerUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the api version to use </p>
    name: apiVersion
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the implementation of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="UnixDomainSocketChannel"></xref> interface that will be used if any unix domain socket communication is required. May be null if no unix domain socket communication is required. If this argument is null and unix domain socket communication is required, this method will through an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IllegalArgumentException"></xref>. </p>
    name: unixDomainSocketChannel
    type: <xref href="com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel?alt=com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel&text=UnixDomainSocketChannel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>if the providerUri cannot be parsed as a uri </p>
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the hsm cannot be reacheed </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if the hsm cannot be reached </p>
  - type: <xref href="HsmException?alt=HsmException&text=HsmException" data-throw-if-not-resolved="False"/>
    description: <p>if the hsm cannot give the trust bundle </p>
  returns:
    description: <p>the raw string containing all of the certificates to be trusted. May be one certificate or many certificates </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Retrieve the list of certificates to be trusted as dictated by the HSM </p>
  syntax: public String getTrustBundleCerts(String providerUri, String apiVersion, UnixDomainSocketChannel unixDomainSocketChannel)
  uid: com.microsoft.azure.sdk.iot.device.edge.HttpsHsmTrustBundleProvider.getTrustBundleCerts(String,String,UnixDomainSocketChannel)
uid: com.microsoft.azure.sdk.iot.device.edge.HttpsHsmTrustBundleProvider.getTrustBundleCerts*
fullName: com.microsoft.azure.sdk.iot.device.edge.HttpsHsmTrustBundleProvider.getTrustBundleCerts
name: getTrustBundleCerts(String providerUri, String apiVersion, UnixDomainSocketChannel unixDomainSocketChannel)
package: com.microsoft.azure.sdk.iot.device.edge
metadata: {}
