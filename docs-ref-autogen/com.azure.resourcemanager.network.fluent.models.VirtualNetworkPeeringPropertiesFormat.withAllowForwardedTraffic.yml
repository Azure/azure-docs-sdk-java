### YamlMime:JavaMember
uid: "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringPropertiesFormat.withAllowForwardedTraffic*"
fullName: "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringPropertiesFormat.withAllowForwardedTraffic"
name: "withAllowForwardedTraffic"
nameWithType: "VirtualNetworkPeeringPropertiesFormat.withAllowForwardedTraffic"
members:
- uid: "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringPropertiesFormat.withAllowForwardedTraffic(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringPropertiesFormat.withAllowForwardedTraffic(Boolean allowForwardedTraffic)"
  name: "withAllowForwardedTraffic(Boolean allowForwardedTraffic)"
  nameWithType: "VirtualNetworkPeeringPropertiesFormat.withAllowForwardedTraffic(Boolean allowForwardedTraffic)"
  summary: "Set the allowForwardedTraffic property: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
  parameters:
  - description: "the allowForwardedTraffic value to set."
    name: "allowForwardedTraffic"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualNetworkPeeringPropertiesFormat withAllowForwardedTraffic(Boolean allowForwardedTraffic)"
  returns:
    description: "the VirtualNetworkPeeringPropertiesFormat object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringPropertiesFormat?alt=com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringPropertiesFormat&text=VirtualNetworkPeeringPropertiesFormat\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.13.0
