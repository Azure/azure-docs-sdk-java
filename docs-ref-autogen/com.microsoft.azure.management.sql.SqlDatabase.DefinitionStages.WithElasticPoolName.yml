### YamlMime:JavaType
uid: "com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName"
fullName: "com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>"
name: "SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>"
nameWithType: "SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>"
summary: "The SQL Database definition to set the elastic pool for database."
syntax: "public static interface SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>"
methods:
- uid: "com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(com.microsoft.azure.management.sql.SqlElasticPool)"
  fullName: "com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(SqlElasticPool sqlElasticPool)"
  name: "withExistingElasticPool(SqlElasticPool sqlElasticPool)"
  nameWithType: "SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(SqlElasticPool sqlElasticPool)"
  summary: "Sets the existing elastic pool for the SQLDatabase."
  modifiers:
  - "abstract"
  parameters:
  - description: "for the SQL Database"
    name: "sqlElasticPool"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlElasticPool?alt=com.microsoft.azure.management.sql.SqlElasticPool&text=SqlElasticPool\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool<ParentT> withExistingElasticPool(SqlElasticPool sqlElasticPool)"
  desc: "Sets the existing elastic pool for the SQLDatabase."
  returns:
    description: "The next stage of the definition."
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool?alt=com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool&text=WithExistingDatabaseAfterElasticPool\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(String elasticPoolName)"
  name: "withExistingElasticPool(String elasticPoolName)"
  nameWithType: "SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(String elasticPoolName)"
  summary: "Sets the existing elastic pool for the SQLDatabase."
  modifiers:
  - "abstract"
  parameters:
  - description: "for the SQL Database"
    name: "elasticPoolName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool<ParentT> withExistingElasticPool(String elasticPoolName)"
  desc: "Sets the existing elastic pool for the SQLDatabase."
  returns:
    description: "The next stage of the definition."
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool?alt=com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool&text=WithExistingDatabaseAfterElasticPool\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withNewElasticPool(com.microsoft.azure.management.resources.fluentcore.model.Creatable<com.microsoft.azure.management.sql.SqlElasticPool>)"
  fullName: "com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)"
  name: "withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)"
  nameWithType: "SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)"
  summary: "Sets the new elastic pool for the SQLDatabase, this will create a new elastic pool while creating database."
  modifiers:
  - "abstract"
  parameters:
  - description: "creatable definition for new elastic pool to be created for the SQL Database"
    name: "sqlElasticPool"
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Creatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Creatable&text=Creatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.SqlElasticPool?alt=com.microsoft.azure.management.sql.SqlElasticPool&text=SqlElasticPool\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool<ParentT> withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)"
  desc: "Sets the new elastic pool for the SQLDatabase, this will create a new elastic pool while creating database."
  returns:
    description: "The next stage of the definition."
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool?alt=com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool&text=WithExistingDatabaseAfterElasticPool\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
typeParameters:
- description: "the stage of the parent definition to return to after attaching this definition"
  name: "ParentT"
desc: "The SQL Database definition to set the elastic pool for database."
metadata: {}
package: "com.microsoft.azure.management.sql"
artifact: com.microsoft.azure:azure-mgmt-sql:1.41.4
