### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.models.ActiveDirectoryUser.DefinitionStages.WithAccontEnabled.withAccountEnabled*"
fullName: "com.azure.resourcemanager.authorization.models.ActiveDirectoryUser.DefinitionStages.WithAccontEnabled.withAccountEnabled"
name: "withAccountEnabled"
nameWithType: "ActiveDirectoryUser.DefinitionStages.WithAccontEnabled.withAccountEnabled"
members:
- uid: "com.azure.resourcemanager.authorization.models.ActiveDirectoryUser.DefinitionStages.WithAccontEnabled.withAccountEnabled(boolean)"
  fullName: "com.azure.resourcemanager.authorization.models.ActiveDirectoryUser.DefinitionStages.WithAccontEnabled.withAccountEnabled(boolean accountEnabled)"
  name: "withAccountEnabled(boolean accountEnabled)"
  nameWithType: "ActiveDirectoryUser.DefinitionStages.WithAccontEnabled.withAccountEnabled(boolean accountEnabled)"
  summary: "Specifies whether the user account is enabled."
  parameters:
  - description: "true if account is enabled, false otherwise"
    name: "accountEnabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ActiveDirectoryUser.DefinitionStages.WithCreate withAccountEnabled(boolean accountEnabled)"
  returns:
    description: "the next stage of user definition"
    type: "<xref href=\"com.azure.resourcemanager.authorization.models.ActiveDirectoryUser.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.authorization.models.ActiveDirectoryUser.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
