### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute"
fullName: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute"
name: "Deployment.ExecutionStages.WithExecute"
nameWithType: "Deployment.ExecutionStages.WithExecute"
syntax: "public static interface Deployment.ExecutionStages.WithExecute"
methods:
- uid: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute.whatIf()"
  fullName: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute.whatIf()"
  name: "whatIf()"
  nameWithType: "Deployment.ExecutionStages.WithExecute.whatIf()"
  summary: "Gets changes that will be made by the deployment if executed at the scope of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract WhatIfOperationResult whatIf()"
  desc: "Gets changes that will be made by the deployment if executed at the scope of the resource group."
  returns:
    description: "the next stage of the execution."
    type: "<xref href=\"com.microsoft.azure.management.resources.WhatIfOperationResult?alt=com.microsoft.azure.management.resources.WhatIfOperationResult&text=WhatIfOperationResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute.whatIfAsync()"
  fullName: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute.whatIfAsync()"
  name: "whatIfAsync()"
  nameWithType: "Deployment.ExecutionStages.WithExecute.whatIfAsync()"
  summary: "Gets changes that will be made by the deployment if executed at the scope of the resource group asynchronously."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<WhatIfOperationResult> whatIfAsync()"
  desc: "Gets changes that will be made by the deployment if executed at the scope of the resource group asynchronously."
  returns:
    description: "the next stage of the execution."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.WhatIfOperationResult?alt=com.microsoft.azure.management.resources.WhatIfOperationResult&text=WhatIfOperationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute.whatIfAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.WhatIfOperationResult>)"
  fullName: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute.whatIfAsync(ServiceCallback<WhatIfOperationResult> callback)"
  name: "whatIfAsync(ServiceCallback<WhatIfOperationResult> callback)"
  nameWithType: "Deployment.ExecutionStages.WithExecute.whatIfAsync(ServiceCallback<WhatIfOperationResult> callback)"
  summary: "Gets changes that will be made by the deployment if executed at the scope of the resource group asynchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "the callback to call on success or failure with export result as parameter"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.WhatIfOperationResult?alt=com.microsoft.azure.management.resources.WhatIfOperationResult&text=WhatIfOperationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<WhatIfOperationResult> whatIfAsync(ServiceCallback<WhatIfOperationResult> callback)"
  desc: "Gets changes that will be made by the deployment if executed at the scope of the resource group asynchronously."
  returns:
    description: "the next stage of the execution."
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.WhatIfOperationResult?alt=com.microsoft.azure.management.resources.WhatIfOperationResult&text=WhatIfOperationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute.whatIfAtSubscriptionScope()"
  fullName: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute.whatIfAtSubscriptionScope()"
  name: "whatIfAtSubscriptionScope()"
  nameWithType: "Deployment.ExecutionStages.WithExecute.whatIfAtSubscriptionScope()"
  summary: "Gets changes that will be made by the deployment if executed at the scope of the subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract WhatIfOperationResult whatIfAtSubscriptionScope()"
  desc: "Gets changes that will be made by the deployment if executed at the scope of the subscription."
  returns:
    description: "the next stage of the execution."
    type: "<xref href=\"com.microsoft.azure.management.resources.WhatIfOperationResult?alt=com.microsoft.azure.management.resources.WhatIfOperationResult&text=WhatIfOperationResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute.whatIfAtSubscriptionScopeAsync()"
  fullName: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute.whatIfAtSubscriptionScopeAsync()"
  name: "whatIfAtSubscriptionScopeAsync()"
  nameWithType: "Deployment.ExecutionStages.WithExecute.whatIfAtSubscriptionScopeAsync()"
  summary: "Gets changes that will be made by the deployment if executed at the scope of the subscription asynchronously."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<WhatIfOperationResult> whatIfAtSubscriptionScopeAsync()"
  desc: "Gets changes that will be made by the deployment if executed at the scope of the subscription asynchronously."
  returns:
    description: "the next stage of the execution."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.WhatIfOperationResult?alt=com.microsoft.azure.management.resources.WhatIfOperationResult&text=WhatIfOperationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute.whatIfAtSubscriptionScopeAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.WhatIfOperationResult>)"
  fullName: "com.microsoft.azure.management.resources.Deployment.ExecutionStages.WithExecute.whatIfAtSubscriptionScopeAsync(ServiceCallback<WhatIfOperationResult> callback)"
  name: "whatIfAtSubscriptionScopeAsync(ServiceCallback<WhatIfOperationResult> callback)"
  nameWithType: "Deployment.ExecutionStages.WithExecute.whatIfAtSubscriptionScopeAsync(ServiceCallback<WhatIfOperationResult> callback)"
  summary: "Gets changes that will be made by the deployment if executed at the scope of the subscription asynchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "the callback to call on success or failure with export result as parameter"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.WhatIfOperationResult?alt=com.microsoft.azure.management.resources.WhatIfOperationResult&text=WhatIfOperationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<WhatIfOperationResult> whatIfAtSubscriptionScopeAsync(ServiceCallback<WhatIfOperationResult> callback)"
  desc: "Gets changes that will be made by the deployment if executed at the scope of the subscription asynchronously."
  returns:
    description: "the next stage of the execution."
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.WhatIfOperationResult?alt=com.microsoft.azure.management.resources.WhatIfOperationResult&text=WhatIfOperationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
metadata: {}
package: "com.microsoft.azure.management.resources"
artifact: com.microsoft.azure:azure-mgmt-resources:1.41.4
