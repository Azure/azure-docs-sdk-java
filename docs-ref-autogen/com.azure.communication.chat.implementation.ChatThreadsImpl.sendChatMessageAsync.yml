### YamlMime:JavaMember
uid: "com.azure.communication.chat.implementation.ChatThreadsImpl.sendChatMessageAsync*"
fullName: "com.azure.communication.chat.implementation.ChatThreadsImpl.sendChatMessageAsync"
name: "sendChatMessageAsync"
nameWithType: "ChatThreadsImpl.sendChatMessageAsync"
members:
- uid: "com.azure.communication.chat.implementation.ChatThreadsImpl.sendChatMessageAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions)"
  fullName: "com.azure.communication.chat.implementation.ChatThreadsImpl.sendChatMessageAsync(String chatThreadId, SendChatMessageOptions sendChatMessageRequest)"
  name: "sendChatMessageAsync(String chatThreadId, SendChatMessageOptions sendChatMessageRequest)"
  nameWithType: "ChatThreadsImpl.sendChatMessageAsync(String chatThreadId, SendChatMessageOptions sendChatMessageRequest)"
  summary: "Sends a message to a thread."
  parameters:
  - description: "The thread id to send the message to."
    name: "chatThreadId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Details of the message to send."
    name: "sendChatMessageRequest"
    type: "<xref href=\"com.azure.communication.chat.models.SendChatMessageOptions?alt=com.azure.communication.chat.models.SendChatMessageOptions&text=SendChatMessageOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SendChatMessageResult> sendChatMessageAsync(String chatThreadId, SendChatMessageOptions sendChatMessageRequest)"
  returns:
    description: "result of the send message operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.chat.models.SendChatMessageResult?alt=com.azure.communication.chat.models.SendChatMessageResult&text=SendChatMessageResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.chat.implementation.ChatThreadsImpl.sendChatMessageAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions,com.azure.core.util.Context)"
  fullName: "com.azure.communication.chat.implementation.ChatThreadsImpl.sendChatMessageAsync(String chatThreadId, SendChatMessageOptions sendChatMessageRequest, Context context)"
  name: "sendChatMessageAsync(String chatThreadId, SendChatMessageOptions sendChatMessageRequest, Context context)"
  nameWithType: "ChatThreadsImpl.sendChatMessageAsync(String chatThreadId, SendChatMessageOptions sendChatMessageRequest, Context context)"
  summary: "Sends a message to a thread."
  parameters:
  - description: "The thread id to send the message to."
    name: "chatThreadId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Details of the message to send."
    name: "sendChatMessageRequest"
    type: "<xref href=\"com.azure.communication.chat.models.SendChatMessageOptions?alt=com.azure.communication.chat.models.SendChatMessageOptions&text=SendChatMessageOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SendChatMessageResult> sendChatMessageAsync(String chatThreadId, SendChatMessageOptions sendChatMessageRequest, Context context)"
  returns:
    description: "result of the send message operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.chat.models.SendChatMessageResult?alt=com.azure.communication.chat.models.SendChatMessageResult&text=SendChatMessageResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.communication.chat.implementation"
artifact: com.azure:azure-communication-chat:1.0.0
