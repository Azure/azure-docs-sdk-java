### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync*"
fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync"
name: "cancelDeletionAsync"
nameWithType: "Certificates.cancelDeletionAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)"
  name: "cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)"
  nameWithType: "Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)"
  summary: "Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate."
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate being deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  name: "cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  nameWithType: "Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  summary: "Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate."
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate being deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateCancelDeletionOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions&text=CertificateCancelDeletionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, ServiceCallback<Void> serviceCallback)"
  name: "cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate."
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate being deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "certificateCancelDeletionOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions&text=CertificateCancelDeletionOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, ServiceCallback<Void> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)"
  name: "cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)"
  summary: "Cancels a failed deletion of a Certificate from the specified Account. If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate."
  parameters:
  - description: "The algorithm used to derive the thumbprint parameter. This must be sha1."
    name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The thumbprint of the Certificate being deleted."
    name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, ServiceCallback<Void> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:9.0.0
