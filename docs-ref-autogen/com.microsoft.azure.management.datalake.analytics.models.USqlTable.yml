### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.datalake.analytics.models.CatalogItem?alt=com.microsoft.azure.management.datalake.analytics.models.CatalogItem&text=CatalogItem" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.computeAccountName()
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.version()
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.withComputeAccountName(String)
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.withVersion(UUID)
methods:
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.columnList()
  name: columnList()
  nameWithType: USqlTable.columnList()
  returns:
    description: <p>the columnList value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlTableColumn?alt=com.microsoft.azure.management.datalake.analytics.models.USqlTableColumn&text=USqlTableColumn" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the columnList value.</p>

    <p></p>
  syntax: public List<USqlTableColumn> columnList()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.columnList()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.databaseName()
  name: databaseName()
  nameWithType: USqlTable.databaseName()
  returns:
    description: <p>the databaseName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the databaseName value.</p>

    <p></p>
  syntax: public String databaseName()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.databaseName()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.distributionInfo()
  name: distributionInfo()
  nameWithType: USqlTable.distributionInfo()
  returns:
    description: <p>the distributionInfo value </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlDistributionInfo?alt=com.microsoft.azure.management.datalake.analytics.models.USqlDistributionInfo&text=USqlDistributionInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the distributionInfo value.</p>

    <p></p>
  syntax: public USqlDistributionInfo distributionInfo()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.distributionInfo()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.externalTable()
  name: externalTable()
  nameWithType: USqlTable.externalTable()
  returns:
    description: <p>the externalTable value </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.ExternalTable?alt=com.microsoft.azure.management.datalake.analytics.models.ExternalTable&text=ExternalTable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the externalTable value.</p>

    <p></p>
  syntax: public ExternalTable externalTable()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.externalTable()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.indexList()
  name: indexList()
  nameWithType: USqlTable.indexList()
  returns:
    description: <p>the indexList value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlIndex?alt=com.microsoft.azure.management.datalake.analytics.models.USqlIndex&text=USqlIndex" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the indexList value.</p>

    <p></p>
  syntax: public List<USqlIndex> indexList()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.indexList()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.name()
  name: name()
  nameWithType: USqlTable.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name value.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.name()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.partitionKeyList()
  name: partitionKeyList()
  nameWithType: USqlTable.partitionKeyList()
  returns:
    description: <p>the partitionKeyList value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the partitionKeyList value.</p>

    <p></p>
  syntax: public List<String> partitionKeyList()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.partitionKeyList()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.schemaName()
  name: schemaName()
  nameWithType: USqlTable.schemaName()
  returns:
    description: <p>the schemaName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the schemaName value.</p>

    <p></p>
  syntax: public String schemaName()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.schemaName()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withColumnList(List<USqlTableColumn> columnList)
  name: withColumnList(List<USqlTableColumn> columnList)
  nameWithType: USqlTable.withColumnList(List<USqlTableColumn> columnList)
  parameters:
  - description: <p>the columnList value to set </p>
    name: columnList
    type: List&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlTableColumn?alt=com.microsoft.azure.management.datalake.analytics.models.USqlTableColumn&text=USqlTableColumn" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the USqlTable object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlTable?alt=com.microsoft.azure.management.datalake.analytics.models.USqlTable&text=USqlTable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the columnList value.</p>

    <p></p>
  syntax: public USqlTable withColumnList(List<USqlTableColumn> columnList)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withColumnList(List<USqlTableColumn>)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withDatabaseName(String databaseName)
  name: withDatabaseName(String databaseName)
  nameWithType: USqlTable.withDatabaseName(String databaseName)
  parameters:
  - description: <p>the databaseName value to set </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlTable object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlTable?alt=com.microsoft.azure.management.datalake.analytics.models.USqlTable&text=USqlTable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the databaseName value.</p>

    <p></p>
  syntax: public USqlTable withDatabaseName(String databaseName)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withDatabaseName(String)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withDistributionInfo(USqlDistributionInfo distributionInfo)
  name: withDistributionInfo(USqlDistributionInfo distributionInfo)
  nameWithType: USqlTable.withDistributionInfo(USqlDistributionInfo distributionInfo)
  parameters:
  - description: <p>the distributionInfo value to set </p>
    name: distributionInfo
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlDistributionInfo?alt=com.microsoft.azure.management.datalake.analytics.models.USqlDistributionInfo&text=USqlDistributionInfo" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlTable object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlTable?alt=com.microsoft.azure.management.datalake.analytics.models.USqlTable&text=USqlTable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the distributionInfo value.</p>

    <p></p>
  syntax: public USqlTable withDistributionInfo(USqlDistributionInfo distributionInfo)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withDistributionInfo(USqlDistributionInfo)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withExternalTable(ExternalTable externalTable)
  name: withExternalTable(ExternalTable externalTable)
  nameWithType: USqlTable.withExternalTable(ExternalTable externalTable)
  parameters:
  - description: <p>the externalTable value to set </p>
    name: externalTable
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.ExternalTable?alt=com.microsoft.azure.management.datalake.analytics.models.ExternalTable&text=ExternalTable" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlTable object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlTable?alt=com.microsoft.azure.management.datalake.analytics.models.USqlTable&text=USqlTable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the externalTable value.</p>

    <p></p>
  syntax: public USqlTable withExternalTable(ExternalTable externalTable)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withExternalTable(ExternalTable)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withIndexList(List<USqlIndex> indexList)
  name: withIndexList(List<USqlIndex> indexList)
  nameWithType: USqlTable.withIndexList(List<USqlIndex> indexList)
  parameters:
  - description: <p>the indexList value to set </p>
    name: indexList
    type: List&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlIndex?alt=com.microsoft.azure.management.datalake.analytics.models.USqlIndex&text=USqlIndex" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the USqlTable object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlTable?alt=com.microsoft.azure.management.datalake.analytics.models.USqlTable&text=USqlTable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the indexList value.</p>

    <p></p>
  syntax: public USqlTable withIndexList(List<USqlIndex> indexList)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withIndexList(List<USqlIndex>)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withName(String name)
  name: withName(String name)
  nameWithType: USqlTable.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlTable object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlTable?alt=com.microsoft.azure.management.datalake.analytics.models.USqlTable&text=USqlTable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name value.</p>

    <p></p>
  syntax: public USqlTable withName(String name)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withName(String)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withPartitionKeyList(List<String> partitionKeyList)
  name: withPartitionKeyList(List<String> partitionKeyList)
  nameWithType: USqlTable.withPartitionKeyList(List<String> partitionKeyList)
  parameters:
  - description: <p>the partitionKeyList value to set </p>
    name: partitionKeyList
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlTable object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlTable?alt=com.microsoft.azure.management.datalake.analytics.models.USqlTable&text=USqlTable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the partitionKeyList value.</p>

    <p></p>
  syntax: public USqlTable withPartitionKeyList(List<String> partitionKeyList)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withPartitionKeyList(List<String>)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withSchemaName(String schemaName)
  name: withSchemaName(String schemaName)
  nameWithType: USqlTable.withSchemaName(String schemaName)
  parameters:
  - description: <p>the schemaName value to set </p>
    name: schemaName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlTable object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlTable?alt=com.microsoft.azure.management.datalake.analytics.models.USqlTable&text=USqlTable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the schemaName value.</p>

    <p></p>
  syntax: public USqlTable withSchemaName(String schemaName)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable.withSchemaName(String)
nameWithType: USqlTable
syntax: public class USqlTable extends CatalogItem
type: class
uid: com.microsoft.azure.management.datalake.analytics.models.USqlTable
fullName: com.microsoft.azure.management.datalake.analytics.models.USqlTable
name: USqlTable
package: com.microsoft.azure.management.datalake.analytics.models
summary: <p>A Data Lake Analytics catalog U-SQL table item. </p>
metadata: {}
