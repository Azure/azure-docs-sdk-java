### YamlMime:JavaMember
uid: "com.azure.security.attestation.AttestationAdministrationAsyncClient.resetAttestationPolicyWithResponse*"
fullName: "com.azure.security.attestation.AttestationAdministrationAsyncClient.resetAttestationPolicyWithResponse"
name: "resetAttestationPolicyWithResponse"
nameWithType: "AttestationAdministrationAsyncClient.resetAttestationPolicyWithResponse"
members:
- uid: "com.azure.security.attestation.AttestationAdministrationAsyncClient.resetAttestationPolicyWithResponse(com.azure.security.attestation.models.AttestationType,com.azure.security.attestation.models.AttestationPolicySetOptions)"
  fullName: "com.azure.security.attestation.AttestationAdministrationAsyncClient.resetAttestationPolicyWithResponse(AttestationType attestationType, AttestationPolicySetOptions options)"
  name: "resetAttestationPolicyWithResponse(AttestationType attestationType, AttestationPolicySetOptions options)"
  nameWithType: "AttestationAdministrationAsyncClient.resetAttestationPolicyWithResponse(AttestationType attestationType, AttestationPolicySetOptions options)"
  summary: "Resets the current policy for an attestation type to the default policy. Each AttestationType has a \"default\" attestation policy, the resetAttestationPolicy API resets the value of the attestation policy to the \"default\" policy. This API allows an attestation instance owner to undo the result of a <xref uid=\"com.azure.security.attestation.AttestationAdministrationAsyncClient.setAttestationPolicy(com.azure.security.attestation.models.AttestationType,com.azure.security.attestation.models.AttestationPolicySetOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationAdministrationAsyncClient#setAttestationPolicy(AttestationType, AttestationPolicySetOptions)\"></xref> API call.\n\n**Reset an attestation policy to its defaults**\n\n```java\nMono<AttestationResponse<PolicyResult>> resultWithResponseMono = client.resetAttestationPolicyWithResponse(\n     AttestationType.OPEN_ENCLAVE, new AttestationPolicySetOptions()\n         .setAttestationSigner(new AttestationSigningKey(certificate, privateKey)));\n resultWithResponseMono.subscribe(resultWithResponse -> System.out.printf(\"Reset result: %s\\n\",\n     resultWithResponse.getValue().getPolicyResolution().toString()));\n```"
  parameters:
  - description: "Specifies the trusted execution environment to be used to validate the evidence."
    name: "attestationType"
    type: "<xref href=\"com.azure.security.attestation.models.AttestationType?alt=com.azure.security.attestation.models.AttestationType&text=AttestationType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Options containing the signing key for the reset operation."
    name: "options"
    type: "<xref href=\"com.azure.security.attestation.models.AttestationPolicySetOptions?alt=com.azure.security.attestation.models.AttestationPolicySetOptions&text=AttestationPolicySetOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AttestationResponse<PolicyResult>> resetAttestationPolicyWithResponse(AttestationType attestationType, AttestationPolicySetOptions options)"
  returns:
    description: "the response to an attestation policy operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.attestation.models.AttestationResponse?alt=com.azure.security.attestation.models.AttestationResponse&text=AttestationResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.attestation.models.PolicyResult?alt=com.azure.security.attestation.models.PolicyResult&text=PolicyResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.attestation"
artifact: com.azure:azure-security-attestation:1.1.0
