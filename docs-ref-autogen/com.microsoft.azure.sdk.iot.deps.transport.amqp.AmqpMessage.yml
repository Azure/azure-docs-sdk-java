### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage"
fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage"
name: "AmqpMessage"
nameWithType: "AmqpMessage"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AmqpMessage"
constructors:
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.AmqpMessage()"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.AmqpMessage()"
  name: "AmqpMessage()"
  nameWithType: "AmqpMessage.AmqpMessage()"
  syntax: "public AmqpMessage()"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.AmqpMessage(org.apache.qpid.proton.message.impl.MessageImpl)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.AmqpMessage(MessageImpl messageImpl)"
  name: "AmqpMessage(MessageImpl messageImpl)"
  nameWithType: "AmqpMessage.AmqpMessage(MessageImpl messageImpl)"
  summary: "Consule a Message<wbr>Impl object"
  parameters:
  - description: "the ProtonJ Impl message."
    name: "messageImpl"
    type: "<xref href=\"org.apache.qpid.proton.message.impl.MessageImpl?alt=org.apache.qpid.proton.message.impl.MessageImpl&text=MessageImpl\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpMessage(MessageImpl messageImpl)"
  desc: "Consule a MessageImpl object"
methods:
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.decode(byte[],int,int)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.decode(byte[] data, int offset, int length)"
  name: "decode(byte[] data, int offset, int length)"
  nameWithType: "AmqpMessage.decode(byte[] data, int offset, int length)"
  summary: "Sets the data value"
  parameters:
  - description: "the <code>byte[]</code> to be decoded"
    name: "data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the offset in the byte[]"
    name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the total length"
    name: "length"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void decode(byte[] data, int offset, int length)"
  desc: "Sets the data value"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.encode(byte[],int)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.encode(byte[] data, int offset)"
  name: "encode(byte[] data, int offset)"
  nameWithType: "AmqpMessage.encode(byte[] data, int offset)"
  parameters:
  - name: "data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int encode(byte[] data, int offset)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.getAmqpBody()"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.getAmqpBody()"
  name: "getAmqpBody()"
  nameWithType: "AmqpMessage.getAmqpBody()"
  summary: "Returns the amqp body used in the message"
  syntax: "public byte[] getAmqpBody()"
  desc: "Returns the amqp body used in the message"
  returns:
    description: "Byte array"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.getApplicationProperty()"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.getApplicationProperty()"
  name: "getApplicationProperty()"
  nameWithType: "AmqpMessage.getApplicationProperty()"
  summary: "Set the application property for the message"
  syntax: "public Map<String,Object> getApplicationProperty()"
  desc: "Set the application property for the message"
  returns:
    description: "Map of properties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.setApplicationProperty(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.setApplicationProperty(Map<String,Object> userProperties)"
  name: "setApplicationProperty(Map<String,Object> userProperties)"
  nameWithType: "AmqpMessage.setApplicationProperty(Map<String,Object> userProperties)"
  summary: "Set the application property for the message"
  parameters:
  - description: "The user prototype."
    name: "userProperties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void setApplicationProperty(Map<String,Object> userProperties)"
  desc: "Set the application property for the message"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.setBody(byte[])"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.setBody(byte[] msgData)"
  name: "setBody(byte[] msgData)"
  nameWithType: "AmqpMessage.setBody(byte[] msgData)"
  parameters:
  - name: "msgData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void setBody(byte[] msgData)"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.setBody(org.apache.qpid.proton.amqp.messaging.Data)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage.setBody(Data msgData)"
  name: "setBody(Data msgData)"
  nameWithType: "AmqpMessage.setBody(Data msgData)"
  summary: "set the Body of the AMQP message"
  parameters:
  - description: "the AMQP message body."
    name: "msgData"
    type: "<xref href=\"org.apache.qpid.proton.amqp.messaging.Data?alt=org.apache.qpid.proton.amqp.messaging.Data&text=Data\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setBody(Data msgData)"
  desc: "set the Body of the AMQP message"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.deps.transport.amqp"
artifact: com.microsoft.azure.sdk.iot:iot-deps:0.12.0
