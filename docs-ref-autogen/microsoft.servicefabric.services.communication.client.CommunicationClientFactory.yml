### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactory
  id: CommunicationClientFactory
  parent: microsoft.servicefabric.services.communication.client
  children:
  - microsoft.servicefabric.services.communication.client.CommunicationClientFactory.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)
  - microsoft.servicefabric.services.communication.client.CommunicationClientFactory.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
  - microsoft.servicefabric.services.communication.client.CommunicationClientFactory.reportOperationExceptionAsync(TCommunicationClient,ExceptionInformation,OperationRetrySettings)
  href: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.yml
  langs:
  - java
  name: CommunicationClientFactory<TCommunicationClient>
  nameWithType: CommunicationClientFactory<TCommunicationClient>
  fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient>
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/client/CommunicationClientFactory.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/client/CommunicationClientFactory.java
    startLine: 11
  package: microsoft.servicefabric.services.communication.client
  summary: "<p>Defines the interface that must be implemented to provide a factory for communication clients to talk to a service fabric service. </p>"
  syntax:
    content: public interface CommunicationClientFactory<TCommunicationClient extends CommunicationClient>
    typeParameters:
    - id: TCommunicationClient
      type: 4500d4bf
- uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)
  id: getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)
  parent: microsoft.servicefabric.services.communication.client.CommunicationClientFactory
  href: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.yml
  langs:
  - java
  name: getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: CommunicationClientFactory<TCommunicationClient>.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  overload: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.getClientAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/client/CommunicationClientFactory.java
    startLine: 61
  package: microsoft.servicefabric.services.communication.client
  summary: "<p>Re-resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<TCommunicationClient> getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
    parameters:
    - id: previousRsp
      type: system.fabric.ResolvedServicePartition
      description: <p>Previous ResolvedServicePartition value </p>
    - id: targetReplicaSelector
      type: microsoft.servicefabric.services.communication.client.TargetReplicaSelector
      description: <p>Specifies which replica in the partition identified by the partition key, the client should connect to </p>
    - id: listenerName
      type: "26831127"
      description: <p>Specifies which listener in the endpoint of the chosen replica, to which the client should connect to </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client.OperationRetrySettings
      description: <p>Specifies the retry policy that should be used for exceptions that occur when creating the client. </p>
    return:
      type: "87556530"
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is the CommunicationClient(<xref uid="microsoft.servicefabric.services.communication.client.CommunicationClient" data-throw-if-not-resolved="false" data-raw-source="CommunicationClient"></xref>) object. </p>
- uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
  id: getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
  parent: microsoft.servicefabric.services.communication.client.CommunicationClientFactory
  href: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.yml
  langs:
  - java
  name: getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: CommunicationClientFactory<TCommunicationClient>.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  overload: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.getClientAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/client/CommunicationClientFactory.java
    startLine: 34
  package: microsoft.servicefabric.services.communication.client
  summary: "<p>Resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<TCommunicationClient> getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
    parameters:
    - id: serviceUri
      type: "62304784"
      description: <p>Uri of the service to resolve </p>
    - id: partitionKey
      type: microsoft.servicefabric.services.client.ServicePartitionKey
      description: <p>Key that identifies the partition to resolve </p>
    - id: targetReplicaSelector
      type: microsoft.servicefabric.services.communication.client.TargetReplicaSelector
      description: <p>Specifies which replica in the partition identified by the partition key, the client should connect to </p>
    - id: listenerName
      type: "26831127"
      description: <p>Specifies which listener in the endpoint of the chosen replica, to which the client should connect to </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client.OperationRetrySettings
      description: <p>Specifies the retry policy that should be used for exceptions that occur when creating the client. </p>
    return:
      type: "87556530"
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is the CommunicationClient(<xref uid="microsoft.servicefabric.services.communication.client.CommunicationClient" data-throw-if-not-resolved="false" data-raw-source="CommunicationClient"></xref>) object. </p>
- uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.reportOperationExceptionAsync(TCommunicationClient,ExceptionInformation,OperationRetrySettings)
  id: reportOperationExceptionAsync(TCommunicationClient,ExceptionInformation,OperationRetrySettings)
  parent: microsoft.servicefabric.services.communication.client.CommunicationClientFactory
  href: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.yml
  langs:
  - java
  name: reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  nameWithType: CommunicationClientFactory<TCommunicationClient>.reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  overload: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.reportOperationExceptionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/client/CommunicationClientFactory.java
    startLine: 81
  package: microsoft.servicefabric.services.communication.client
  summary: "<p>Handles the exceptions that occur in the CommunicationClient when sending a message to the Service</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<OperationRetryControl> reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
    parameters:
    - id: client
      type: 4500d4bf
      description: <p>Communication client </p>
    - id: exceptionInformation
      type: microsoft.servicefabric.services.communication.client.ExceptionInformation
      description: <p>Information about exception that happened while communicating with the service. </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client.OperationRetrySettings
      description: <p>Specifies the retry policy that should be used for handling the reported exception. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.services.communication.client.OperationRetryControla08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is a <xref uid="microsoft.servicefabric.services.communication.client.OperationRetryControl" data-throw-if-not-resolved="false" data-raw-source="OperationRetryControl"></xref> object that provides information on retry policy for this exception. </p>
references:
- uid: 4500d4bf
  spec.java:
  - name: TCommunicationClient
    fullName: TCommunicationClient
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: "87556530"
  spec.java:
  - name: CompletableFuture<TCommunicationClient>
    fullName: CompletableFuture<TCommunicationClient>
- uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.getClientAsync*
  name: getClientAsync
  nameWithType: CommunicationClientFactory<TCommunicationClient>.getClientAsync
  fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.getClientAsync
  package: microsoft.servicefabric.services.communication.client
- uid: 9cdf14d0microsoft.servicefabric.services.communication.client.OperationRetryControla08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: microsoft.servicefabric.services.communication.client.OperationRetryControl
    name: OperationRetryControl
    fullName: microsoft.servicefabric.services.communication.client.OperationRetryControl
    href: microsoft.servicefabric.services.communication.client.OperationRetryControl.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.reportOperationExceptionAsync*
  name: reportOperationExceptionAsync
  nameWithType: CommunicationClientFactory<TCommunicationClient>.reportOperationExceptionAsync
  fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.reportOperationExceptionAsync
  package: microsoft.servicefabric.services.communication.client
- uid: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory.yml
  name: ServiceRemotingClientFactory
  nameWithType: ServiceRemotingClientFactory
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  type: Interface
  summary: "<p>Defines the interface that must be implemented for providing the remoting communication client factory. </p>"
  syntax:
    content: public interface ServiceRemotingClientFactory
- uid: microsoft.servicefabric.services.communication.client.CommunicationClient
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client.CommunicationClient.yml
  name: CommunicationClient
  nameWithType: CommunicationClient
  fullName: microsoft.servicefabric.services.communication.client.CommunicationClient
  type: Interface
  summary: "<p>Defines the interface that represents the communication client for reliable services. </p>"
  syntax:
    content: public interface CommunicationClient
- uid: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
  parent: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
  href: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.yml
  name: getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: FabricTransportServiceRemotingClientFactory.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  type: Method
  summary: "<p>Resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<ServiceRemotingClient> getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
    parameters:
    - id: serviceUri
      type: "62304784"
      description: <p>Uri of the service to resolve </p>
    - id: partitionKey
      type: microsoft.servicefabric.services.client.ServicePartitionKey
      description: <p>Key that identifies the partition to resolve </p>
    - id: targetReplicaSelector
      type: microsoft.servicefabric.services.communication.client.TargetReplicaSelector
      description: <p>Specifies which replica in the partition identified by the partition key, the client should connect to </p>
    - id: listenerName
      type: "26831127"
      description: <p>Specifies which listener in the endpoint of the chosen replica, to which the client should connect to </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client.OperationRetrySettings
      description: <p>Specifies the retry policy that should be used for exceptions that occur when creating the client.</p>
    return:
      type: 9cdf14d0microsoft.servicefabric.services.remoting.client.ServiceRemotingClienta08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is the CommunicationClient( <xref uid="microsoft.servicefabric.services.communication.client.CommunicationClient" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.communication.client.CommunicationClient"></xref>) object. </p>
- uid: microsoft.servicefabric.services.client.ServicePartitionKey
  parent: microsoft.servicefabric.services.client
  href: microsoft.servicefabric.services.client.ServicePartitionKey.yml
  name: ServicePartitionKey
  nameWithType: ServicePartitionKey
  fullName: microsoft.servicefabric.services.client.ServicePartitionKey
  type: Class
  summary: "<p>Defines a key to address a service partition. </p>"
  syntax:
    content: public class ServicePartitionKey
- uid: microsoft.servicefabric.services.communication.client.TargetReplicaSelector
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client.TargetReplicaSelector.yml
  name: TargetReplicaSelector
  nameWithType: TargetReplicaSelector
  fullName: microsoft.servicefabric.services.communication.client.TargetReplicaSelector
  type: Enum
  summary: "<p>This enumeration specifies how the target replica or instance should be chosen when creating a communication channel for a particular partition. </p>"
  syntax:
    content: public enum TargetReplicaSelector
- uid: microsoft.servicefabric.services.communication.client.OperationRetrySettings
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client.OperationRetrySettings.yml
  name: OperationRetrySettings
  nameWithType: OperationRetrySettings
  fullName: microsoft.servicefabric.services.communication.client.OperationRetrySettings
  type: Class
  syntax:
    content: public class OperationRetrySettings
- uid: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)
  parent: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
  href: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.yml
  name: getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  type: Method
  summary: "<p>Re-resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<ServiceRemotingClient> getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
    parameters:
    - id: previousRsp
      type: system.fabric.ResolvedServicePartition
      description: <p>Previous ResolvedServicePartition value </p>
    - id: targetReplicaSelector
      type: microsoft.servicefabric.services.communication.client.TargetReplicaSelector
      description: <p>Specifies which replica in the partition identified by the partition key, the client should connect to </p>
    - id: listenerName
      type: "26831127"
      description: <p>Specifies which listener in the endpoint of the chosen replica, to which the client should connect to </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client.OperationRetrySettings
      description: <p>Specifies the retry policy that should be used for exceptions that occur when creating the client.</p>
    return:
      type: 9cdf14d0microsoft.servicefabric.services.remoting.client.ServiceRemotingClienta08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is the CommunicationClient( <xref uid="microsoft.servicefabric.services.communication.client.CommunicationClient" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.communication.client.CommunicationClient"></xref>) object. </p>
- uid: system.fabric.ResolvedServicePartition
  parent: system.fabric
  href: system.fabric.ResolvedServicePartition.yml
  name: ResolvedServicePartition
  nameWithType: ResolvedServicePartition
  fullName: system.fabric.ResolvedServicePartition
  type: Class
  summary: "<p>Represents a data structure that contains information on the partitioning and set of endpoints to which the specified Service partition listens.</p>\r\n<p></p>"
  syntax:
    content: public class ResolvedServicePartition
- uid: microsoft.servicefabric.services.communication.client.OperationRetryControl
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client.OperationRetryControl.yml
  name: OperationRetryControl
  nameWithType: OperationRetryControl
  fullName: microsoft.servicefabric.services.communication.client.OperationRetryControl
  type: Class
  summary: "<p>Specifies the retry policy for the exceptions got on the communication from client to service. </p>"
  syntax:
    content: public class OperationRetryControl
- uid: microsoft.servicefabric.services.communication.client.ExceptionInformation
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client.ExceptionInformation.yml
  name: ExceptionInformation
  nameWithType: ExceptionInformation
  fullName: microsoft.servicefabric.services.communication.client.ExceptionInformation
  type: Class
  summary: "<p>Specifies the class that encapsulates the exception seen on the communication channel and additional information required to handle that exception. </p>"
  syntax:
    content: public class ExceptionInformation
