### YamlMime:JavaType
uid: "com.azure.xml.XmlReadValueCallback"
fullName: "com.azure.xml.XmlReadValueCallback<T,R>"
name: "XmlReadValueCallback<T,R>"
nameWithType: "XmlReadValueCallback<T,R>"
summary: "A callback used when reading an XML value, such as <xref uid=\"com.azure.xml.XmlReader.<T>getNullableElement(com.azure.xml.XmlReadValueCallback<java.lang.String,T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader#getNullableElement(XmlReadValueCallback)\"></xref>."
syntax: "public interface **XmlReadValueCallback<T,R>**"
methods:
- uid: "com.azure.xml.XmlReadValueCallback.read(T)"
  fullName: "com.azure.xml.XmlReadValueCallback<T,R>.read(T input)"
  name: "read(T input)"
  nameWithType: "XmlReadValueCallback<T,R>.read(T input)"
  summary: "Applies the read callback to the `input`."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to the callback."
    name: "input"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract R read(T input)"
  exceptions:
  - description: "If an XML stream error occurs during application of the callback."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Applies the read callback to the `input`."
  returns:
    description: "The output of the callback."
    type: "<xref href=\"R?alt=R&text=R\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
typeParameters:
- description: "Input type of the callback."
  name: "T"
- description: "Output type of the callback."
  name: "R"
desc: "A callback used when reading an XML value, such as <xref uid=\"com.azure.xml.XmlReader.<T>getNullableElement(com.azure.xml.XmlReadValueCallback<java.lang.String,T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader#getNullableElement(XmlReadValueCallback)\"></xref>."
metadata: {}
package: "com.azure.xml"
artifact: com.azure:azure-xml:1.2.0
