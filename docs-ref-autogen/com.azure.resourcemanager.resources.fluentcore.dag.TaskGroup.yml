### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup"
fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup"
name: "TaskGroup"
nameWithType: "TaskGroup"
summary: "Type representing a group of task entries with dependencies between them. Initially a task group will have only one task entry known as root task entry, then more entries can be added by taking dependency on other task groups or adding \"post-run\" task group dependents.\n\nThe method <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup#invokeAsync(InvocationContext)\"></xref> ()\\} kick-off invocation of tasks in the group, task are invoked in topological sorted order.\n\n<xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependencyTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup#addDependencyTaskGroup(TaskGroup)\"></xref>: A task group \"A\" can take dependency on another task group \"B\" through this method e.g. \\`A.addDependencyTaskGroup(B)\\` indicates that completion of tasks in the dependency task group \"B\" is required before the invocation of root task in group \"A\". A.invokeAsync(cxt) will ensure this order.\n\n<xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup#addPostRunDependentTaskGroup(TaskGroup)\"></xref>: there are scenarios where a subset of dependent task groups say \"H\", \"I\" may required to run after the invocation of a task group \"K\" when K.invokeAsync(cxt) is called. Such special dependents can be added via K.addPostRunDependentTaskGroup(H) and K.addPostRunDependentTaskGroup(I).\n\nThe result produced by the tasks in the group are of type <xref uid=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Indexable\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Graph\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependencyGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph<DataT,NodeT>)"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependentGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph<DataT,NodeT>)"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.getNext()"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.getNode(java.lang.String)"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.hasParents()"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.isPreparer()"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.isRootNode(NodeT)"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.prepareForEnumeration()"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.reportCompletion(NodeT)"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.reportError(NodeT,java.lang.Throwable)"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.root()"
- "com.azure.resourcemanager.resources.fluentcore.dag.Graph.addNode(NodeT)"
- "com.azure.resourcemanager.resources.fluentcore.dag.Graph.findPath(java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.resources.fluentcore.dag.Graph.getNodes()"
- "com.azure.resourcemanager.resources.fluentcore.dag.Graph.visit(com.azure.resourcemanager.resources.fluentcore.dag.Graph.Visitor<com.azure.resourcemanager.resources.fluentcore.dag.Node<DataT,NodeT>>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class TaskGroup extends DAGraph<TaskItem,TaskGroupEntry<TaskItem>> implements Indexable"
constructors:
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(java.lang.String,com.azure.resourcemanager.resources.fluentcore.dag.TaskItem)"
fields:
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.proxyTaskGroupWrapper"
methods:
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependencyTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem,com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerUtils.InternalRuntimeContext)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.dependsOn(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync()"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeDependencyAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.key()"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.newInvocationContext()"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.root()"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.taskResult(java.lang.String)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.dag"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
