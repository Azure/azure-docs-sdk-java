### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup"
fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup"
name: "TaskGroup"
nameWithType: "TaskGroup"
summary: "Type representing a group of task entries with dependencies between them."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Graph?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGraph&text=DAGraph\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependencyGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph<DataT,NodeT>)?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependencyGraph&text=addDependencyGraph\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependentGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph<DataT,NodeT>)?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependentGraph&text=addDependentGraph\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.getNext()?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.getNext&text=getNext\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.getNode(java.lang.String)?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.getNode&text=getNode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.hasParents()?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.hasParents&text=hasParents\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.isPreparer()?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.isPreparer&text=isPreparer\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.isRootNode(NodeT)?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.isRootNode&text=isRootNode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.prepareForEnumeration()?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.prepareForEnumeration&text=prepareForEnumeration\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.reportCompletion(NodeT)?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.reportCompletion&text=reportCompletion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.reportError(NodeT,java.lang.Throwable)?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.reportError&text=reportError\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.root()?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.root&text=root\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Graph?alt=com.azure.resourcemanager.resources.fluentcore.dag.Graph&text=Graph\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Graph.addNode(NodeT)?alt=com.azure.resourcemanager.resources.fluentcore.dag.Graph.addNode&text=addNode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Graph.findPath(java.lang.String,java.lang.String)?alt=com.azure.resourcemanager.resources.fluentcore.dag.Graph.findPath&text=findPath\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Graph.getNodes()?alt=com.azure.resourcemanager.resources.fluentcore.dag.Graph.getNodes&text=getNodes\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Graph.visit(com.azure.resourcemanager.resources.fluentcore.dag.Graph.Visitor<com.azure.resourcemanager.resources.fluentcore.dag.Node<DataT,NodeT>>)?alt=com.azure.resourcemanager.resources.fluentcore.dag.Graph.visit&text=visit\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class TaskGroup extends DAGraph<TaskItem,TaskGroupEntry<TaskItem>> implements Indexable"
constructors:
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(IndexableTaskItem rootTaskItem)"
  name: "TaskGroup(IndexableTaskItem rootTaskItem)"
  nameWithType: "TaskGroup.TaskGroup(IndexableTaskItem rootTaskItem)"
  summary: "Creates Task<wbr>Group."
  parameters:
  - description: "the root task"
    name: "rootTaskItem"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem?alt=com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem&text=IndexableTaskItem\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskGroup(IndexableTaskItem rootTaskItem)"
  desc: "Creates TaskGroup."
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(java.lang.String,com.azure.resourcemanager.resources.fluentcore.dag.TaskItem)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(String rootTaskItemId, TaskItem rootTaskItem)"
  name: "TaskGroup(String rootTaskItemId, TaskItem rootTaskItem)"
  nameWithType: "TaskGroup.TaskGroup(String rootTaskItemId, TaskItem rootTaskItem)"
  summary: "Creates Task<wbr>Group."
  parameters:
  - description: "the id of the root task in the group"
    name: "rootTaskItemId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the root task"
    name: "rootTaskItem"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskItem?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskItem&text=TaskItem\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskGroup(String rootTaskItemId, TaskItem rootTaskItem)"
  desc: "Creates TaskGroup."
fields:
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.proxyTaskGroupWrapper"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.proxyTaskGroupWrapper"
  name: "proxyTaskGroupWrapper"
  nameWithType: "TaskGroup.proxyTaskGroupWrapper"
  summary: "The helper to operate on proxy Task<wbr>Group of this Task<wbr>Group for supporting dependents marked for post run."
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper&text=ProxyTaskGroupWrapper\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected TaskGroup.ProxyTaskGroupWrapper proxyTaskGroupWrapper"
  desc: "The helper to operate on proxy TaskGroup of this TaskGroup for supporting dependents marked for post run."
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency(FunctionalTaskItem dependencyTaskItem)"
  name: "addDependency(FunctionalTaskItem dependencyTaskItem)"
  nameWithType: "TaskGroup.addDependency(FunctionalTaskItem dependencyTaskItem)"
  summary: "Mark root of this task task group depends on the given Task<wbr>Item."
  parameters:
  - description: "the task item that this task group depends on"
    name: "dependencyTaskItem"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem?alt=com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem&text=FunctionalTaskItem\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String addDependency(FunctionalTaskItem dependencyTaskItem)"
  desc: "Mark root of this task task group depends on the given TaskItem. This ensure this task group's root get picked for execution only after the completion of invocation of provided TaskItem."
  returns:
    description: "the key of the dependency"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency(TaskGroup.HasTaskGroup hasTaskGroup)"
  name: "addDependency(TaskGroup.HasTaskGroup hasTaskGroup)"
  nameWithType: "TaskGroup.addDependency(TaskGroup.HasTaskGroup hasTaskGroup)"
  summary: "Mark root of this task task group depends on the given item's task<wbr>Group."
  parameters:
  - description: "an item with taskGroup that this task group depends on"
    name: "hasTaskGroup"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup&text=HasTaskGroup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void addDependency(TaskGroup.HasTaskGroup hasTaskGroup)"
  desc: "Mark root of this task task group depends on the given item's taskGroup. This ensure this task group's root get picked for execution only after the completion of invocation of provided TaskItem."
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependencyTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependencyTaskGroup(TaskGroup dependencyTaskGroup)"
  name: "addDependencyTaskGroup(TaskGroup dependencyTaskGroup)"
  nameWithType: "TaskGroup.addDependencyTaskGroup(TaskGroup dependencyTaskGroup)"
  summary: "Mark root of this task task group depends on the given task group's root."
  parameters:
  - description: "the task group that this task group depends on"
    name: "dependencyTaskGroup"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup&text=TaskGroup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void addDependencyTaskGroup(TaskGroup dependencyTaskGroup)"
  desc: "Mark root of this task task group depends on the given task group's root. This ensure this task group's root get picked for execution only after the completion of all tasks in the given group."
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(FunctionalTaskItem dependentTaskItem)"
  name: "addPostRunDependent(FunctionalTaskItem dependentTaskItem)"
  nameWithType: "TaskGroup.addPostRunDependent(FunctionalTaskItem dependentTaskItem)"
  summary: "Mark the given Task<wbr>Item depends on this task<wbr>Group."
  parameters:
  - description: "the task item that depends on this task group"
    name: "dependentTaskItem"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem?alt=com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem&text=FunctionalTaskItem\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String addPostRunDependent(FunctionalTaskItem dependentTaskItem)"
  desc: "Mark the given TaskItem depends on this taskGroup."
  returns:
    description: "key to be used as parameter to taskResult(string) method to retrieve result of\n invocation of given task item."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem,com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerUtils.InternalRuntimeContext)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(FunctionalTaskItem dependentTaskItem, ResourceManagerUtils.InternalRuntimeContext internalContext)"
  name: "addPostRunDependent(FunctionalTaskItem dependentTaskItem, ResourceManagerUtils.InternalRuntimeContext internalContext)"
  nameWithType: "TaskGroup.addPostRunDependent(FunctionalTaskItem dependentTaskItem, ResourceManagerUtils.InternalRuntimeContext internalContext)"
  summary: "Mark the given Task<wbr>Item depends on this task<wbr>Group."
  parameters:
  - description: "the task item that depends on this task group"
    name: "dependentTaskItem"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem?alt=com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem&text=FunctionalTaskItem\" data-throw-if-not-resolved=\"False\" />"
  - description: "the internal runtime context"
    name: "internalContext"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerUtils.InternalRuntimeContext?alt=com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerUtils.InternalRuntimeContext&text=InternalRuntimeContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String addPostRunDependent(FunctionalTaskItem dependentTaskItem, ResourceManagerUtils.InternalRuntimeContext internalContext)"
  desc: "Mark the given TaskItem depends on this taskGroup."
  returns:
    description: "key to be used as parameter to taskResult(string) method to retrieve result of\n invocation of given task item."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(TaskGroup.HasTaskGroup hasTaskGroup)"
  name: "addPostRunDependent(TaskGroup.HasTaskGroup hasTaskGroup)"
  nameWithType: "TaskGroup.addPostRunDependent(TaskGroup.HasTaskGroup hasTaskGroup)"
  summary: "Mark the given item with task<wbr>Group depends on this task<wbr>Group."
  parameters:
  - description: "an item with as task group that depends on this task group"
    name: "hasTaskGroup"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup&text=HasTaskGroup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void addPostRunDependent(TaskGroup.HasTaskGroup hasTaskGroup)"
  desc: "Mark the given item with taskGroup depends on this taskGroup."
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup(TaskGroup dependentTaskGroup)"
  name: "addPostRunDependentTaskGroup(TaskGroup dependentTaskGroup)"
  nameWithType: "TaskGroup.addPostRunDependentTaskGroup(TaskGroup dependentTaskGroup)"
  summary: "Mark root of the given task group depends on this task group's root."
  parameters:
  - description: "the task group depends on this task group"
    name: "dependentTaskGroup"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup&text=TaskGroup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void addPostRunDependentTaskGroup(TaskGroup dependentTaskGroup)"
  desc: "Mark root of the given task group depends on this task group's root. This ensure given task group's root get picked for invocation only after the completion of all tasks in this group. Calling invokeAsync(cxt) will run the tasks in the given dependent task group as well."
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.dependsOn(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.dependsOn(TaskGroup taskGroup)"
  name: "dependsOn(TaskGroup taskGroup)"
  nameWithType: "TaskGroup.dependsOn(TaskGroup taskGroup)"
  summary: "Checks this Task<wbr>Group depends on the given Task<wbr>Group."
  parameters:
  - description: "the TaskGroup to check"
    name: "taskGroup"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup&text=TaskGroup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean dependsOn(TaskGroup taskGroup)"
  desc: "Checks this TaskGroup depends on the given TaskGroup."
  returns:
    description: "true if TaskGroup is depends on the given TaskGroup"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync()"
  name: "invokeAsync()"
  nameWithType: "TaskGroup.invokeAsync()"
  summary: "Invokes tasks in the group."
  syntax: "public Mono<Indexable> invokeAsync()"
  desc: "Invokes tasks in the group."
  returns:
    description: "the root result of task group."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync(TaskGroup.InvocationContext context)"
  name: "invokeAsync(TaskGroup.InvocationContext context)"
  nameWithType: "TaskGroup.invokeAsync(TaskGroup.InvocationContext context)"
  summary: "Invokes tasks in the group."
  parameters:
  - description: "group level shared context that need be passed to invokeAsync(cxt)\n                method of each task item in the group when it is selected for invocation."
    name: "context"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext&text=InvocationContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Flux<Indexable> invokeAsync(TaskGroup.InvocationContext context)"
  desc: "Invokes tasks in the group. It is not guaranteed to return indexable in topological order."
  returns:
    description: "an observable that emits the result of tasks in the order they finishes."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeDependencyAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeDependencyAsync(TaskGroup.InvocationContext context)"
  name: "invokeDependencyAsync(TaskGroup.InvocationContext context)"
  nameWithType: "TaskGroup.invokeDependencyAsync(TaskGroup.InvocationContext context)"
  summary: "Invokes dependency tasks in the group, but not."
  parameters:
  - description: "group level shared context that need be passed to invokeAsync(cxt)\n                method of each task item in the group when it is selected for invocation."
    name: "context"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext&text=InvocationContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Flux<Indexable> invokeDependencyAsync(TaskGroup.InvocationContext context)"
  desc: "Invokes dependency tasks in the group, but not."
  returns:
    description: "an observable that emits the result of tasks in the order they finishes."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.key()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.key()"
  name: "key()"
  nameWithType: "TaskGroup.key()"
  syntax: "public String key()"
  returns:
    description: "the key of this task group, which is same as key of the root entry in the group"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.newInvocationContext()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.newInvocationContext()"
  name: "newInvocationContext()"
  nameWithType: "TaskGroup.newInvocationContext()"
  syntax: "public TaskGroup.InvocationContext newInvocationContext()"
  returns:
    description: "a new clean context instance."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext&text=InvocationContext\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.root()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.root()"
  name: "root()"
  nameWithType: "TaskGroup.root()"
  modifiers:
  - "protected"
  overridden: "com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.root()"
  syntax: "protected TaskGroupEntry<TaskItem> root()"
  returns:
    description: "the root task entry in the group."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry&text=TaskGroupEntry\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskItem?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskItem&text=TaskItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.taskResult(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.taskResult(String taskId)"
  name: "taskResult(String taskId)"
  nameWithType: "TaskGroup.taskResult(String taskId)"
  summary: "Retrieve the result produced by a task with the given id in the group."
  parameters:
  - description: "the task item id"
    name: "taskId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Indexable taskResult(String taskId)"
  desc: "Retrieve the result produced by a task with the given id in the group.\n\nThis method can be used to retrieve the result of invocation of both dependency and \"post-run\" dependent tasks. If task with the given id does not exists then IllegalArgumentException exception will be thrown."
  returns:
    description: "the task result, null will be returned if task has not yet been invoked"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Type representing a group of task entries with dependencies between them. Initially a task group will have only one task entry known as root task entry, then more entries can be added by taking dependency on other task groups or adding \"post-run\" task group dependents.\n\nThe method <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup#invokeAsync(InvocationContext)\"></xref> ()\\} kick-off invocation of tasks in the group, task are invoked in topological sorted order.\n\n<xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependencyTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup#addDependencyTaskGroup(TaskGroup)\"></xref>: A task group \"A\" can take dependency on another task group \"B\" through this method e.g. \\`A.addDependencyTaskGroup(B)\\` indicates that completion of tasks in the dependency task group \"B\" is required before the invocation of root task in group \"A\". A.invokeAsync(cxt) will ensure this order.\n\n<xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup#addPostRunDependentTaskGroup(TaskGroup)\"></xref>: there are scenarios where a subset of dependent task groups say \"H\", \"I\" may required to run after the invocation of a task group \"K\" when K.invokeAsync(cxt) is called. Such special dependents can be added via K.addPostRunDependentTaskGroup(H) and K.addPostRunDependentTaskGroup(I).\n\nThe result produced by the tasks in the group are of type <xref uid=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Indexable\"></xref>."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.dag"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
