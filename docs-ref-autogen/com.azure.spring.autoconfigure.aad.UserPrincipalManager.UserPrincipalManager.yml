### YamlMime:JavaMember
uid: "com.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager*"
fullName: "com.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager"
name: "UserPrincipalManager"
nameWithType: "UserPrincipalManager.UserPrincipalManager"
members:
- uid: "com.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(com.azure.spring.aad.AADAuthorizationServerEndpoints,com.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.nimbusds.jose.util.ResourceRetriever,boolean)"
  fullName: "com.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(AADAuthorizationServerEndpoints endpoints, AADAuthenticationProperties aadAuthenticationProperties, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck)"
  name: "UserPrincipalManager(AADAuthorizationServerEndpoints endpoints, AADAuthenticationProperties aadAuthenticationProperties, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck)"
  nameWithType: "UserPrincipalManager.UserPrincipalManager(AADAuthorizationServerEndpoints endpoints, AADAuthenticationProperties aadAuthenticationProperties, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck)"
  summary: "Create a new <xref uid=\"com.azure.spring.autoconfigure.aad.UserPrincipalManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UserPrincipalManager\"></xref> based of the <xref uid=\"com.azure.spring.aad.AADAuthorizationServerEndpoints.jwkSetEndpoint()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AADAuthorizationServerEndpoints#jwkSetEndpoint()\"></xref>"
  parameters:
  - description: "- used to retrieve the JWKS URL"
    name: "endpoints"
    type: "<xref href=\"com.azure.spring.aad.AADAuthorizationServerEndpoints?alt=com.azure.spring.aad.AADAuthorizationServerEndpoints&text=AADAuthorizationServerEndpoints\" data-throw-if-not-resolved=\"False\" />"
  - description: "- used to retrieve the environment."
    name: "aadAuthenticationProperties"
    type: "<xref href=\"com.azure.spring.autoconfigure.aad.AADAuthenticationProperties?alt=com.azure.spring.autoconfigure.aad.AADAuthenticationProperties&text=AADAuthenticationProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "- configures the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RemoteJWKSet\"></xref> call."
    name: "resourceRetriever"
    type: "<xref href=\"com.nimbusds.jose.util.ResourceRetriever?alt=com.nimbusds.jose.util.ResourceRetriever&text=ResourceRetriever\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether explicitly check the audience."
    name: "explicitAudienceCheck"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UserPrincipalManager(AADAuthorizationServerEndpoints endpoints, AADAuthenticationProperties aadAuthenticationProperties, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck)"
- uid: "com.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(com.azure.spring.aad.AADAuthorizationServerEndpoints,com.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.nimbusds.jose.util.ResourceRetriever,boolean,com.nimbusds.jose.jwk.source.JWKSetCache)"
  fullName: "com.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(AADAuthorizationServerEndpoints endpoints, AADAuthenticationProperties aadAuthenticationProperties, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck, JWKSetCache jwkSetCache)"
  name: "UserPrincipalManager(AADAuthorizationServerEndpoints endpoints, AADAuthenticationProperties aadAuthenticationProperties, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck, JWKSetCache jwkSetCache)"
  nameWithType: "UserPrincipalManager.UserPrincipalManager(AADAuthorizationServerEndpoints endpoints, AADAuthenticationProperties aadAuthenticationProperties, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck, JWKSetCache jwkSetCache)"
  summary: "Create a new <xref uid=\"com.azure.spring.autoconfigure.aad.UserPrincipalManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UserPrincipalManager\"></xref> based of the <xref uid=\"com.azure.spring.aad.AADAuthorizationServerEndpoints.jwkSetEndpoint()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AADAuthorizationServerEndpoints#jwkSetEndpoint()\"></xref> ()\\}"
  parameters:
  - description: "- used to retrieve the JWKS URL"
    name: "endpoints"
    type: "<xref href=\"com.azure.spring.aad.AADAuthorizationServerEndpoints?alt=com.azure.spring.aad.AADAuthorizationServerEndpoints&text=AADAuthorizationServerEndpoints\" data-throw-if-not-resolved=\"False\" />"
  - description: "- used to retrieve the environment."
    name: "aadAuthenticationProperties"
    type: "<xref href=\"com.azure.spring.autoconfigure.aad.AADAuthenticationProperties?alt=com.azure.spring.autoconfigure.aad.AADAuthenticationProperties&text=AADAuthenticationProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "- configures the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RemoteJWKSet\"></xref> call."
    name: "resourceRetriever"
    type: "<xref href=\"com.nimbusds.jose.util.ResourceRetriever?alt=com.nimbusds.jose.util.ResourceRetriever&text=ResourceRetriever\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether explicitly check the audience."
    name: "explicitAudienceCheck"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "- used to cache the JWK set for a finite time, default set to 5 minutes which matches\n constructor above if no jwkSetCache is passed in"
    name: "jwkSetCache"
    type: "<xref href=\"com.nimbusds.jose.jwk.source.JWKSetCache?alt=com.nimbusds.jose.jwk.source.JWKSetCache&text=JWKSetCache\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UserPrincipalManager(AADAuthorizationServerEndpoints endpoints, AADAuthenticationProperties aadAuthenticationProperties, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck, JWKSetCache jwkSetCache)"
- uid: "com.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(com.nimbusds.jose.jwk.source.JWKSource<com.nimbusds.jose.proc.SecurityContext>)"
  fullName: "com.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(JWKSource<SecurityContext> keySource)"
  name: "UserPrincipalManager(JWKSource<SecurityContext> keySource)"
  nameWithType: "UserPrincipalManager.UserPrincipalManager(JWKSource<SecurityContext> keySource)"
  summary: "ø Creates a new <xref uid=\"com.azure.spring.autoconfigure.aad.UserPrincipalManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UserPrincipalManager\"></xref> with a predefined <xref uid=\"com.nimbusds.jose.jwk.source.JWKSource\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JWKSource\"></xref>.\n\nThis is helpful in cases the JWK is not a remote JWKSet or for unit testing."
  parameters:
  - description: "- <xref uid=\"com.nimbusds.jose.jwk.source.JWKSource\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JWKSource\"></xref> containing at least one key"
    name: "keySource"
    type: "<xref href=\"com.nimbusds.jose.jwk.source.JWKSource?alt=com.nimbusds.jose.jwk.source.JWKSource&text=JWKSource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.nimbusds.jose.proc.SecurityContext?alt=com.nimbusds.jose.proc.SecurityContext&text=SecurityContext\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public UserPrincipalManager(JWKSource<SecurityContext> keySource)"
type: "constructor"
metadata: {}
package: "com.azure.spring.autoconfigure.aad"
artifact: com.azure.spring:azure-spring-boot:3.0.0
