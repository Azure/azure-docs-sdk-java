### YamlMime:JavaMember
nameWithType: ActorServiceRemotingDispatcher.requestResponseAsync
type: method
members:
- fullName: microsoft.servicefabric.actors.remoting.runtime.ActorServiceRemotingDispatcher.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  name: requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  nameWithType: ActorServiceRemotingDispatcher.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  overridden: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler.requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
  parameters:
  - description: <p>Request context that allows getting the callback channel if required. </p>
    name: requestContext
    type: <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingRequestContext?alt=microsoft.servicefabric.services.remoting.ServiceRemotingRequestContext&text=ServiceRemotingRequestContext" data-throw-if-not-resolved="False"/>
  - description: <p>Service remoting message headers </p>
    name: messageHeaders
    type: <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders?alt=microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders&text=ServiceRemotingMessageHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>serialized request body of the remoting message. </p>
    name: requestBody
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>that represents outstanding operation. The result of the <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> is the serialized response body. </p>
    type: <xref href="CompletableFuture%3Cbyte%5B%5D%3E?alt=CompletableFuture<byte[]>&text=CompletableFuture%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Dispatches the messages received from the client to the actor service methods or the actor methods.</p>

    <p></p>
  syntax: public CompletableFuture<byte[]> requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  uid: microsoft.servicefabric.actors.remoting.runtime.ActorServiceRemotingDispatcher.requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
uid: microsoft.servicefabric.actors.remoting.runtime.ActorServiceRemotingDispatcher.requestResponseAsync*
fullName: microsoft.servicefabric.actors.remoting.runtime.ActorServiceRemotingDispatcher.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
name: requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
package: microsoft.servicefabric.actors.remoting.runtime
metadata: {}
