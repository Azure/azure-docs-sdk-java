### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.specialized.BlobInputStream
  id: BlobInputStream
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized
  children:
  - com.azure.storage.blob.specialized.BlobInputStream.dispatchRead(int,long)
  - com.azure.storage.blob.specialized.BlobInputStream.getProperties()
  langs:
  - java
  name: BlobInputStream
  nameWithType: BlobInputStream
  fullName: com.azure.storage.blob.specialized.BlobInputStream
  type: Class
  package: com.azure.storage.blob.specialized
  summary: Provides an input stream to read a given blob resource.
  syntax:
    content: public final class BlobInputStream extends StorageInputStream
  inheritance:
  - java.lang.Object
  - java.io.InputStream
  - com.azure.storage.common.StorageInputStream
  inheritedMembers:
  - com.azure.storage.common.StorageInputStream.available()
  - com.azure.storage.common.StorageInputStream.close()
  - com.azure.storage.common.StorageInputStream.dispatchRead(int,long)
  - com.azure.storage.common.StorageInputStream.mark(int)
  - com.azure.storage.common.StorageInputStream.markSupported()
  - com.azure.storage.common.StorageInputStream.read()
  - com.azure.storage.common.StorageInputStream.read(byte[])
  - com.azure.storage.common.StorageInputStream.read(byte[],int,int)
  - com.azure.storage.common.StorageInputStream.reset()
  - com.azure.storage.common.StorageInputStream.skip(long)
  - java.io.InputStream.nullInputStream()
  - java.io.InputStream.readAllBytes()
  - java.io.InputStream.readNBytes(byte[],int,int)
  - java.io.InputStream.readNBytes(int)
  - java.io.InputStream.transferTo(java.io.OutputStream)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.specialized.BlobInputStream.BlobInputStream(com.azure.storage.blob.BlobAsyncClient,com.azure.storage.blob.models.BlobRequestConditions)
  id: BlobInputStream(com.azure.storage.blob.BlobAsyncClient,com.azure.storage.blob.models.BlobRequestConditions)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.BlobInputStream
  langs:
  - java
  name: BlobInputStream(BlobAsyncClient blobClient, BlobRequestConditions accessCondition)
  nameWithType: BlobInputStream.BlobInputStream(BlobAsyncClient blobClient, BlobRequestConditions accessCondition)
  fullName: com.azure.storage.blob.specialized.BlobInputStream.BlobInputStream(BlobAsyncClient blobClient, BlobRequestConditions accessCondition)
  overload: com.azure.storage.blob.specialized.BlobInputStream.BlobInputStream*
  type: Constructor
  package: com.azure.storage.blob.specialized
  summary: Initializes a new instance of the BlobInputStream class.
  syntax:
    content: " BlobInputStream(BlobAsyncClient blobClient, BlobRequestConditions accessCondition)"
    parameters:
    - id: blobClient
      type: com.azure.storage.blob.BlobAsyncClient
      description: A <xref uid="com.azure.storage.blob.BlobAsyncClient" data-throw-if-not-resolved="false">BlobAsyncClient</xref> object which represents the blob that this stream is associated with.
    - id: accessCondition
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: >-
        An <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref> object which represents the access conditions for the
         blob.
- uid: com.azure.storage.blob.specialized.BlobInputStream.BlobInputStream(com.azure.storage.blob.specialized.BlobAsyncClientBase,long,java.lang.Long,com.azure.storage.blob.models.BlobRequestConditions)
  id: BlobInputStream(com.azure.storage.blob.specialized.BlobAsyncClientBase,long,java.lang.Long,com.azure.storage.blob.models.BlobRequestConditions)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.BlobInputStream
  langs:
  - java
  name: BlobInputStream(BlobAsyncClientBase blobClient, long blobRangeOffset, Long blobRangeLength, BlobRequestConditions accessCondition)
  nameWithType: BlobInputStream.BlobInputStream(BlobAsyncClientBase blobClient, long blobRangeOffset, Long blobRangeLength, BlobRequestConditions accessCondition)
  fullName: com.azure.storage.blob.specialized.BlobInputStream.BlobInputStream(BlobAsyncClientBase blobClient, long blobRangeOffset, Long blobRangeLength, BlobRequestConditions accessCondition)
  overload: com.azure.storage.blob.specialized.BlobInputStream.BlobInputStream*
  type: Constructor
  package: com.azure.storage.blob.specialized
  summary: Initializes a new instance of the BlobInputStream class. Note that if `blobRangeOffset` is not `0` or `blobRangeLength` is not `null`, there will be no content MD5 verification.
  syntax:
    content: " BlobInputStream(BlobAsyncClientBase blobClient, long blobRangeOffset, Long blobRangeLength, BlobRequestConditions accessCondition)"
    parameters:
    - id: blobClient
      type: com.azure.storage.blob.specialized.BlobAsyncClientBase
      description: >-
        A <xref uid="com.azure.storage.blob.specialized.BlobAsyncClientBase" data-throw-if-not-resolved="false">BlobAsyncClientBase</xref> object which represents the blob that this stream is associated
         with.
    - id: blobRangeOffset
      type: long
      description: The offset of blob data to begin stream.
    - id: blobRangeLength
      type: java.lang.Long
      description: How much data the stream should return after blobRangeOffset.
    - id: accessCondition
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: >-
        An <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref> object which represents the access conditions for the
         blob.
- uid: com.azure.storage.blob.specialized.BlobInputStream.dispatchRead(int,long)
  id: dispatchRead(int,long)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.BlobInputStream
  langs:
  - java
  name: dispatchRead(int readLength, long offset)
  nameWithType: BlobInputStream.dispatchRead(int readLength, long offset)
  fullName: com.azure.storage.blob.specialized.BlobInputStream.dispatchRead(int readLength, long offset)
  overload: com.azure.storage.blob.specialized.BlobInputStream.dispatchRead*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Dispatches a read operation of N bytes. When using sparse page blobs, the page ranges are evaluated and zero bytes may be generated on the client side for some ranges that do not exist.
  syntax:
    content: protected synchronized ByteBuffer dispatchRead(int readLength, long offset)
    parameters:
    - id: readLength
      type: int
      description: An <code>int</code> which represents the number of bytes to read.
    - id: offset
      type: long
    return:
      type: java.nio.ByteBuffer
  exceptions:
  - type: java.io.IOException
    description: If an I/O error occurs.
- uid: com.azure.storage.blob.specialized.BlobInputStream.getProperties()
  id: getProperties()
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.BlobInputStream
  langs:
  - java
  name: getProperties()
  nameWithType: BlobInputStream.getProperties()
  fullName: com.azure.storage.blob.specialized.BlobInputStream.getProperties()
  overload: com.azure.storage.blob.specialized.BlobInputStream.getProperties*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Gets the blob properties.


    If no data has been read from the stream, a network call is made to get properties. Otherwise, the blob properties obtained from the download are stored.
  syntax:
    content: public BlobProperties getProperties()
    return:
      type: com.azure.storage.blob.models.BlobProperties
      description: <xref uid="com.azure.storage.blob.models.BlobProperties" data-throw-if-not-resolved="false">BlobProperties</xref>
references:
- uid: com.azure.storage.blob.BlobAsyncClient
  name: BlobAsyncClient
  nameWithType: BlobAsyncClient
  fullName: com.azure.storage.blob.BlobAsyncClient
- uid: com.azure.storage.blob.models.BlobRequestConditions
  name: BlobRequestConditions
  nameWithType: BlobRequestConditions
  fullName: com.azure.storage.blob.models.BlobRequestConditions
- uid: com.azure.storage.blob.specialized.BlobInputStream.BlobInputStream*
  name: BlobInputStream
  nameWithType: BlobInputStream.BlobInputStream
  fullName: com.azure.storage.blob.specialized.BlobInputStream.BlobInputStream
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase
  name: BlobAsyncClientBase
  nameWithType: BlobAsyncClientBase
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: java.lang.Long
  spec.java:
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.nio.ByteBuffer
  spec.java:
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
- uid: com.azure.storage.blob.specialized.BlobInputStream.dispatchRead*
  name: dispatchRead
  nameWithType: BlobInputStream.dispatchRead
  fullName: com.azure.storage.blob.specialized.BlobInputStream.dispatchRead
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.BlobProperties
  name: BlobProperties
  nameWithType: BlobProperties
  fullName: com.azure.storage.blob.models.BlobProperties
- uid: com.azure.storage.blob.specialized.BlobInputStream.getProperties*
  name: getProperties
  nameWithType: BlobInputStream.getProperties
  fullName: com.azure.storage.blob.specialized.BlobInputStream.getProperties
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.common.StorageInputStream
  name: StorageInputStream
  nameWithType: StorageInputStream
  fullName: com.azure.storage.common.StorageInputStream
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.storage.common.StorageInputStream.mark(int)
  name: StorageInputStream.mark(int)
  nameWithType: StorageInputStream.mark(int)
  fullName: com.azure.storage.common.StorageInputStream.mark(int)
- uid: com.azure.storage.common.StorageInputStream.read(byte[])
  name: StorageInputStream.read(byte[])
  nameWithType: StorageInputStream.read(byte[])
  fullName: com.azure.storage.common.StorageInputStream.read(byte[])
- uid: java.io.InputStream.readNBytes(int)
  name: InputStream.readNBytes(int)
  nameWithType: InputStream.readNBytes(int)
  fullName: java.io.InputStream.readNBytes(int)
- uid: com.azure.storage.common.StorageInputStream.reset()
  name: StorageInputStream.reset()
  nameWithType: StorageInputStream.reset()
  fullName: com.azure.storage.common.StorageInputStream.reset()
- uid: com.azure.storage.common.StorageInputStream.read()
  name: StorageInputStream.read()
  nameWithType: StorageInputStream.read()
  fullName: com.azure.storage.common.StorageInputStream.read()
- uid: com.azure.storage.common.StorageInputStream.skip(long)
  name: StorageInputStream.skip(long)
  nameWithType: StorageInputStream.skip(long)
  fullName: com.azure.storage.common.StorageInputStream.skip(long)
- uid: com.azure.storage.common.StorageInputStream.available()
  name: StorageInputStream.available()
  nameWithType: StorageInputStream.available()
  fullName: com.azure.storage.common.StorageInputStream.available()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.storage.common.StorageInputStream.close()
  name: StorageInputStream.close()
  nameWithType: StorageInputStream.close()
  fullName: com.azure.storage.common.StorageInputStream.close()
- uid: java.io.InputStream.nullInputStream()
  name: InputStream.nullInputStream()
  nameWithType: InputStream.nullInputStream()
  fullName: java.io.InputStream.nullInputStream()
- uid: java.io.InputStream.transferTo(java.io.OutputStream)
  name: InputStream.transferTo(OutputStream)
  nameWithType: InputStream.transferTo(OutputStream)
  fullName: java.io.InputStream.transferTo(java.io.OutputStream)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.storage.common.StorageInputStream.markSupported()
  name: StorageInputStream.markSupported()
  nameWithType: StorageInputStream.markSupported()
  fullName: com.azure.storage.common.StorageInputStream.markSupported()
- uid: java.io.InputStream.readNBytes(byte[],int,int)
  name: InputStream.readNBytes(byte[],int,int)
  nameWithType: InputStream.readNBytes(byte[],int,int)
  fullName: java.io.InputStream.readNBytes(byte[],int,int)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.io.InputStream.readAllBytes()
  name: InputStream.readAllBytes()
  nameWithType: InputStream.readAllBytes()
  fullName: java.io.InputStream.readAllBytes()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.storage.common.StorageInputStream.dispatchRead(int,long)
  name: StorageInputStream.dispatchRead(int,long)
  nameWithType: StorageInputStream.dispatchRead(int,long)
  fullName: com.azure.storage.common.StorageInputStream.dispatchRead(int,long)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.storage.common.StorageInputStream.read(byte[],int,int)
  name: StorageInputStream.read(byte[],int,int)
  nameWithType: StorageInputStream.read(byte[],int,int)
  fullName: com.azure.storage.common.StorageInputStream.read(byte[],int,int)
