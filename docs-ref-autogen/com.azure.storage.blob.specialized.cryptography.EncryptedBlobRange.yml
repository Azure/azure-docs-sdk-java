### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange"
  id: "EncryptedBlobRange"
  parent: "com.azure.storage.blob.specialized.cryptography"
  children:
  - "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.EncryptedBlobRange(com.azure.storage.blob.models.BlobRange)"
  - "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getAdjustedDownloadCount()"
  - "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getEncryptedBlobRangeFromHeader(java.lang.String)"
  - "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getOffsetAdjustment()"
  - "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getOriginalRange()"
  - "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.setAdjustedDownloadCount(long)"
  - "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.toBlobRange()"
  langs:
  - "java"
  name: "EncryptedBlobRange"
  nameWithType: "EncryptedBlobRange"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange"
  type: "Class"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "This is a representation of a range of bytes on an encrypted blob, which may be expanded from the requested range to included extra data needed for encryption. Note that this type is not strictly thread-safe as the download method will update the count in case the user did not specify one. Passing null as an EncryptedBlobRange value will default to the entire range of the blob."
  syntax:
    content: "final class EncryptedBlobRange"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.EncryptedBlobRange(com.azure.storage.blob.models.BlobRange)"
  id: "EncryptedBlobRange(com.azure.storage.blob.models.BlobRange)"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange"
  langs:
  - "java"
  name: "EncryptedBlobRange(BlobRange originalRange)"
  nameWithType: "EncryptedBlobRange.EncryptedBlobRange(BlobRange originalRange)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.EncryptedBlobRange(BlobRange originalRange)"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.EncryptedBlobRange*"
  type: "Constructor"
  package: "com.azure.storage.blob.specialized.cryptography"
  syntax:
    content: " EncryptedBlobRange(BlobRange originalRange)"
    parameters:
    - id: "originalRange"
      type: "com.azure.storage.blob.models.BlobRange"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getAdjustedDownloadCount()"
  id: "getAdjustedDownloadCount()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange"
  langs:
  - "java"
  name: "getAdjustedDownloadCount()"
  nameWithType: "EncryptedBlobRange.getAdjustedDownloadCount()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getAdjustedDownloadCount()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getAdjustedDownloadCount*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  syntax:
    content: " Long getAdjustedDownloadCount()"
    return:
      type: "java.lang.Long"
      description: "How many bytes to include in the range. Must be greater than or equal to 0 if specified."
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getEncryptedBlobRangeFromHeader(java.lang.String)"
  id: "getEncryptedBlobRangeFromHeader(java.lang.String)"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange"
  langs:
  - "java"
  name: "getEncryptedBlobRangeFromHeader(String stringRange)"
  nameWithType: "EncryptedBlobRange.getEncryptedBlobRangeFromHeader(String stringRange)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getEncryptedBlobRangeFromHeader(String stringRange)"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getEncryptedBlobRangeFromHeader*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  syntax:
    content: "static EncryptedBlobRange getEncryptedBlobRangeFromHeader(String stringRange)"
    parameters:
    - id: "stringRange"
      type: "java.lang.String"
    return:
      type: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getOffsetAdjustment()"
  id: "getOffsetAdjustment()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange"
  langs:
  - "java"
  name: "getOffsetAdjustment()"
  nameWithType: "EncryptedBlobRange.getOffsetAdjustment()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getOffsetAdjustment()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getOffsetAdjustment*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  syntax:
    content: " int getOffsetAdjustment()"
    return:
      type: "int"
      description: "Offset from beginning of BlobRange, 0-31."
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getOriginalRange()"
  id: "getOriginalRange()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange"
  langs:
  - "java"
  name: "getOriginalRange()"
  nameWithType: "EncryptedBlobRange.getOriginalRange()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getOriginalRange()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getOriginalRange*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  syntax:
    content: " BlobRange getOriginalRange()"
    return:
      type: "com.azure.storage.blob.models.BlobRange"
      description: "The calculated <xref uid=\"\" data-throw-if-not-resolved=\"false\">BlobRange</xref>"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.setAdjustedDownloadCount(long)"
  id: "setAdjustedDownloadCount(long)"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange"
  langs:
  - "java"
  name: "setAdjustedDownloadCount(long count)"
  nameWithType: "EncryptedBlobRange.setAdjustedDownloadCount(long count)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.setAdjustedDownloadCount(long count)"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.setAdjustedDownloadCount*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  syntax:
    content: " void setAdjustedDownloadCount(long count)"
    parameters:
    - id: "count"
      type: "long"
      description: "The adjustedDownloadCount"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.toBlobRange()"
  id: "toBlobRange()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange"
  langs:
  - "java"
  name: "toBlobRange()"
  nameWithType: "EncryptedBlobRange.toBlobRange()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.toBlobRange()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.toBlobRange*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "For convenient interaction with the blobURL.download() method."
  syntax:
    content: " BlobRange toBlobRange()"
    return:
      type: "com.azure.storage.blob.models.BlobRange"
      description: "A <xref uid=\"\" data-throw-if-not-resolved=\"false\">BlobRange</xref> object which includes the necessary adjustments to offset and count to effectively\n        decrypt the blob."
references:
- uid: "com.azure.storage.blob.models.BlobRange"
  spec.java:
  - uid: "com.azure.storage.blob.models.BlobRange"
    name: "BlobRange"
    fullName: "com.azure.storage.blob.models.BlobRange"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.EncryptedBlobRange*"
  name: "EncryptedBlobRange"
  nameWithType: "EncryptedBlobRange.EncryptedBlobRange"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.EncryptedBlobRange"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getEncryptedBlobRangeFromHeader*"
  name: "getEncryptedBlobRangeFromHeader"
  nameWithType: "EncryptedBlobRange.getEncryptedBlobRangeFromHeader"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getEncryptedBlobRangeFromHeader"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getOriginalRange*"
  name: "getOriginalRange"
  nameWithType: "EncryptedBlobRange.getOriginalRange"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getOriginalRange"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getOffsetAdjustment*"
  name: "getOffsetAdjustment"
  nameWithType: "EncryptedBlobRange.getOffsetAdjustment"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getOffsetAdjustment"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getAdjustedDownloadCount*"
  name: "getAdjustedDownloadCount"
  nameWithType: "EncryptedBlobRange.getAdjustedDownloadCount"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.getAdjustedDownloadCount"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.setAdjustedDownloadCount*"
  name: "setAdjustedDownloadCount"
  nameWithType: "EncryptedBlobRange.setAdjustedDownloadCount"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.setAdjustedDownloadCount"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.toBlobRange*"
  name: "toBlobRange"
  nameWithType: "EncryptedBlobRange.toBlobRange"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.toBlobRange"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
