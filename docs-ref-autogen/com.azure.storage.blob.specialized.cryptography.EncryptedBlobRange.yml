### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange
  id: EncryptedBlobRange
  artifact: com.azure:azure-storage-blob-cryptography:12.6.1
  parent: com.azure.storage.blob.specialized.cryptography
  langs:
  - java
  name: EncryptedBlobRange
  nameWithType: EncryptedBlobRange
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange
  type: Class
  package: com.azure.storage.blob.specialized.cryptography
  summary: This is a representation of a range of bytes on an encrypted blob, which may be expanded from the requested range to included extra data needed for encryption. Note that this type is not strictly thread-safe as the download method will update the count in case the user did not specify one. Passing null as an EncryptedBlobRange value will default to the entire range of the blob.
  syntax:
    content: final class EncryptedBlobRange
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.EncryptedBlobRange(com.azure.storage.blob.models.BlobRange)
  id: EncryptedBlobRange(com.azure.storage.blob.models.BlobRange)
  artifact: com.azure:azure-storage-blob-cryptography:12.6.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange
  langs:
  - java
  name: EncryptedBlobRange(BlobRange originalRange)
  nameWithType: EncryptedBlobRange.EncryptedBlobRange(BlobRange originalRange)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.EncryptedBlobRange(BlobRange originalRange)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.EncryptedBlobRange*
  type: Constructor
  package: com.azure.storage.blob.specialized.cryptography
  syntax:
    content: " EncryptedBlobRange(BlobRange originalRange)"
    parameters:
    - id: originalRange
      type: com.azure.storage.blob.models.BlobRange
references:
- uid: com.azure.storage.blob.models.BlobRange
  spec.java:
  - uid: com.azure.storage.blob.models.BlobRange
    name: BlobRange
    fullName: com.azure.storage.blob.models.BlobRange
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.EncryptedBlobRange*
  name: EncryptedBlobRange
  nameWithType: EncryptedBlobRange.EncryptedBlobRange
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobRange.EncryptedBlobRange
  package: com.azure.storage.blob.specialized.cryptography
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
