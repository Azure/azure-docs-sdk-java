### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  id: FabricTransportServiceRemotingProvider
  parent: microsoft.servicefabric.services.remoting.fabrictransport
  children:
  - microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
  - microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingListener(ServiceContext,Service)
  - microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getConnectTimeoutInMilliseconds()
  - microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getKeepAliveTimeoutInSeconds()
  - microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getMaxMessageSize()
  - microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getOperationTimeoutInSeconds()
  - microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setConnectTimeoutInMilliseconds(long)
  - microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds(long)
  - microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setMaxMessageSize(long)
  - microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setOperationTimeoutInSeconds(long)
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  langs:
  - java
  name: FabricTransportServiceRemotingProvider
  nameWithType: FabricTransportServiceRemotingProvider
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportServiceRemotingProvider.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportServiceRemotingProvider.java
    startLine: 17
  package: microsoft.servicefabric.services.remoting.fabrictransport
  summary: "<p>Sets Fabric TCP transport as the default service remoting transport provider in the assembly. </p>"
  syntax: &o1
    content: public class FabricTransportServiceRemotingProvider extends ServiceRemotingProvider
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.services.remoting.ServiceRemotingProvider
  inheritedMembers:
  - microsoft.servicefabric.services.remoting.ServiceRemotingProvider.getProvider(Class<?>)
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
  id: createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
  parent: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  langs:
  - java
  name: createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  nameWithType: FabricTransportServiceRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  overload: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingClientFactory*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportServiceRemotingProvider.java
    startLine: 58
  package: microsoft.servicefabric.services.remoting.fabrictransport
  summary: "<p>Creates a service remoting client factory for connecting to the service over remoted service interfaces. </p>"
  syntax:
    content: public ServiceRemotingClientFactory createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
    parameters:
    - id: callbackClient
      type: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
      description: <p>The client implementation where the callbacks should be dispatched. </p>
    return:
      type: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
      description: <p>A <xref uid="microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory"></xref> as <xref uid="microsoft.servicefabric.services.remoting.client.ServiceProxyFactory" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.client.ServiceProxyFactory"></xref> to generate service proxy to talk to a stateless or stateful service over remoted actor interface. </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingListener(ServiceContext,Service)
  id: createServiceRemotingListener(ServiceContext,Service)
  parent: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  langs:
  - java
  name: createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  nameWithType: FabricTransportServiceRemotingProvider.createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  overload: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingListener*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportServiceRemotingProvider.java
    startLine: 35
  package: microsoft.servicefabric.services.remoting.fabrictransport
  summary: "<p>Creates a service remoting listener for remoting the service interface. </p>"
  syntax:
    content: public ServiceRemotingListener createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
    parameters:
    - id: serviceContext
      type: system.fabric.ServiceContext
      description: <p>The context of the service for which the remoting listener is being constructed. </p>
    - id: serviceImplementation
      type: microsoft.servicefabric.services.remoting.Service
      description: <p>The service implementation object. </p>
    return:
      type: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
      description: <p>A <xref uid="microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider" data-throw-if-not-resolved="false" data-raw-source="FabricTransportServiceRemotingProvider"></xref> as <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceRemotingListener"></xref> for the specified service implementation. </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getConnectTimeoutInMilliseconds()
  id: getConnectTimeoutInMilliseconds()
  parent: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  langs:
  - java
  name: getConnectTimeoutInMilliseconds()
  nameWithType: FabricTransportServiceRemotingProvider.getConnectTimeoutInMilliseconds()
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getConnectTimeoutInMilliseconds()
  overload: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getConnectTimeoutInMilliseconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportServiceRemotingProvider.java
    startLine: 76
  package: microsoft.servicefabric.services.remoting.fabrictransport
  summary: "<p>Gets the connect timeout in milliseconds. This settings specifies the maximum time allowed for the connection to be established. </p>"
  syntax:
    content: public long getConnectTimeoutInMilliseconds()
    return:
      type: 0364520f
      description: <p>The connect timeout in Milliseconds. </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getKeepAliveTimeoutInSeconds()
  id: getKeepAliveTimeoutInSeconds()
  parent: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  langs:
  - java
  name: getKeepAliveTimeoutInSeconds()
  nameWithType: FabricTransportServiceRemotingProvider.getKeepAliveTimeoutInSeconds()
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getKeepAliveTimeoutInSeconds()
  overload: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getKeepAliveTimeoutInSeconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportServiceRemotingProvider.java
    startLine: 139
  package: microsoft.servicefabric.services.remoting.fabrictransport
  summary: "<p>Gets the keepAliveTimeoutInSeconds that provides a way to configure Tcp keep-alive option. </p>"
  syntax:
    content: public long getKeepAliveTimeoutInSeconds()
    return:
      type: 0364520f
      description: <p>value in Seconds. <b>Remarks:</b>Default Value for KeepAliveTimeout Timeout is set as TimeSpan.Zero. which indicates we disable the tcp keepalive option.If you are using loadbalancer , you may need to configure this in order to avoid the loadbalancer to close the connection after certain time. </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getMaxMessageSize()
  id: getMaxMessageSize()
  parent: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  langs:
  - java
  name: getMaxMessageSize()
  nameWithType: FabricTransportServiceRemotingProvider.getMaxMessageSize()
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getMaxMessageSize()
  overload: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getMaxMessageSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportServiceRemotingProvider.java
    startLine: 96
  package: microsoft.servicefabric.services.remoting.fabrictransport
  summary: "<p>Gets the maximum size for a message that can be received on a channel configured with this setting. </p>"
  syntax:
    content: public long getMaxMessageSize()
    return:
      type: 0364520f
      description: <p>The maximum size of the message in bytes. Default Value for MaxMessageSize used is 4194304 bytes </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getOperationTimeoutInSeconds()
  id: getOperationTimeoutInSeconds()
  parent: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  langs:
  - java
  name: getOperationTimeoutInSeconds()
  nameWithType: FabricTransportServiceRemotingProvider.getOperationTimeoutInSeconds()
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getOperationTimeoutInSeconds()
  overload: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getOperationTimeoutInSeconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportServiceRemotingProvider.java
    startLine: 116
  package: microsoft.servicefabric.services.remoting.fabrictransport
  summary: "<p>Gets the operation Timeout which governs the whole process of sending a message, including receiving a reply message for a request/reply service operation. This timeout also applies when sending reply messages from a callback contract method. </p>"
  syntax:
    content: public long getOperationTimeoutInSeconds()
    return:
      type: 0364520f
      description: <p>value in seconds. </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setConnectTimeoutInMilliseconds(long)
  id: setConnectTimeoutInMilliseconds(long)
  parent: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  langs:
  - java
  name: setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  nameWithType: FabricTransportServiceRemotingProvider.setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  overload: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setConnectTimeoutInMilliseconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportServiceRemotingProvider.java
    startLine: 86
  package: microsoft.servicefabric.services.remoting.fabrictransport
  summary: "<p>Sets the connect timeout in milliseconds. This settings specifies the maximum time allowed for the connection to be established. </p>"
  syntax:
    content: public void setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
    parameters:
    - id: connectTimeoutInMilliseconds
      type: 0364520f
      description: <p>The connect timeout in Milliseconds. </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds(long)
  id: setKeepAliveTimeoutInSeconds(long)
  parent: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  langs:
  - java
  name: setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  nameWithType: FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  overload: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportServiceRemotingProvider.java
    startLine: 151
  package: microsoft.servicefabric.services.remoting.fabrictransport
  summary: "<p>Sets the keepAliveTimeoutInSeconds that provides a way to configure Tcp keep-alive option. <b>Remarks:</b> Default Value for KeepAliveTimeout Timeout is set as TimeSpan.Zero. which indicates we disable the tcp keepalive option.If you are using loadbalancer , you may need to configure this in order to avoid the loadbalancer to close the connection after certain time. </p>"
  syntax:
    content: public void setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
    parameters:
    - id: keepAliveTimeoutInSeconds
      type: 0364520f
      description: <p>keep alive timeout in seconds. </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setMaxMessageSize(long)
  id: setMaxMessageSize(long)
  parent: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  langs:
  - java
  name: setMaxMessageSize(long maxMessageSize)
  nameWithType: FabricTransportServiceRemotingProvider.setMaxMessageSize(long maxMessageSize)
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setMaxMessageSize(long maxMessageSize)
  overload: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setMaxMessageSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportServiceRemotingProvider.java
    startLine: 105
  package: microsoft.servicefabric.services.remoting.fabrictransport
  summary: "<p>Sets the maximum size for a message that can be received on a channel configured with this setting. </p>"
  syntax:
    content: public void setMaxMessageSize(long maxMessageSize)
    parameters:
    - id: maxMessageSize
      type: 0364520f
      description: <p>The maximum size of the message in bytes. </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setOperationTimeoutInSeconds(long)
  id: setOperationTimeoutInSeconds(long)
  parent: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  langs:
  - java
  name: setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  nameWithType: FabricTransportServiceRemotingProvider.setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  overload: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setOperationTimeoutInSeconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportServiceRemotingProvider.java
    startLine: 127
  package: microsoft.servicefabric.services.remoting.fabrictransport
  summary: "<p>Sets the operation Timeout which governs the whole process of sending a message, including receiving a reply message for a request/reply service operation. This timeout also applies when sending reply messages from a callback contract method. </p>"
  syntax:
    content: public void setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
    parameters:
    - id: operationTimeoutInSeconds
      type: 0364520f
      description: <p>value in Seconds. </p>
references:
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingListener*
  name: createServiceRemotingListener
  nameWithType: FabricTransportServiceRemotingProvider.createServiceRemotingListener
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingListener
  package: microsoft.servicefabric.services.remoting.fabrictransport
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingClientFactory*
  name: createServiceRemotingClientFactory
  nameWithType: FabricTransportServiceRemotingProvider.createServiceRemotingClientFactory
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingClientFactory
  package: microsoft.servicefabric.services.remoting.fabrictransport
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getConnectTimeoutInMilliseconds*
  name: getConnectTimeoutInMilliseconds
  nameWithType: FabricTransportServiceRemotingProvider.getConnectTimeoutInMilliseconds
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getConnectTimeoutInMilliseconds
  package: microsoft.servicefabric.services.remoting.fabrictransport
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setConnectTimeoutInMilliseconds*
  name: setConnectTimeoutInMilliseconds
  nameWithType: FabricTransportServiceRemotingProvider.setConnectTimeoutInMilliseconds
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setConnectTimeoutInMilliseconds
  package: microsoft.servicefabric.services.remoting.fabrictransport
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getMaxMessageSize*
  name: getMaxMessageSize
  nameWithType: FabricTransportServiceRemotingProvider.getMaxMessageSize
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getMaxMessageSize
  package: microsoft.servicefabric.services.remoting.fabrictransport
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setMaxMessageSize*
  name: setMaxMessageSize
  nameWithType: FabricTransportServiceRemotingProvider.setMaxMessageSize
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setMaxMessageSize
  package: microsoft.servicefabric.services.remoting.fabrictransport
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getOperationTimeoutInSeconds*
  name: getOperationTimeoutInSeconds
  nameWithType: FabricTransportServiceRemotingProvider.getOperationTimeoutInSeconds
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getOperationTimeoutInSeconds
  package: microsoft.servicefabric.services.remoting.fabrictransport
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setOperationTimeoutInSeconds*
  name: setOperationTimeoutInSeconds
  nameWithType: FabricTransportServiceRemotingProvider.setOperationTimeoutInSeconds
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setOperationTimeoutInSeconds
  package: microsoft.servicefabric.services.remoting.fabrictransport
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getKeepAliveTimeoutInSeconds*
  name: getKeepAliveTimeoutInSeconds
  nameWithType: FabricTransportServiceRemotingProvider.getKeepAliveTimeoutInSeconds
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getKeepAliveTimeoutInSeconds
  package: microsoft.servicefabric.services.remoting.fabrictransport
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds*
  name: setKeepAliveTimeoutInSeconds
  nameWithType: FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds
  package: microsoft.servicefabric.services.remoting.fabrictransport
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.getProvider(Class<?>)
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingProvider
  href: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.yml
  name: getProvider(Class<?> type)
  nameWithType: ServiceRemotingProvider.getProvider(Class<?> type)
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.getProvider(Class<?> type)
  type: Method
  syntax:
    content: public static ServiceRemotingProvider getProvider(Class<?> type)
    parameters:
    - id: type
      type: a19781f8
    return:
      type: microsoft.servicefabric.services.remoting.ServiceRemotingProvider
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingProvider
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.yml
  name: ServiceRemotingProvider
  nameWithType: ServiceRemotingProvider
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingProvider
  type: Class
  summary: "<p>This is a base type that sets the default service remoting provider to use for remoting the service interfaces. </p>"
  syntax:
    content: public class ServiceRemotingProvider
- uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
  parent: microsoft.servicefabric.services.remoting.runtime
  href: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener.yml
  name: ServiceRemotingListener
  nameWithType: ServiceRemotingListener
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
  type: Interface
  summary: "<p>Defines a base communication interface that enables interface remoting for stateless and stateful services. </p>"
  syntax:
    content: public interface ServiceRemotingListener
- uid: system.fabric.ServiceContext
  parent: system.fabric
  href: system.fabric.ServiceContext.yml
  name: ServiceContext
  nameWithType: ServiceContext
  fullName: system.fabric.ServiceContext
  type: Class
  summary: "<p>Represents the service context that the service is operating under. </p>"
  syntax:
    content: public class ServiceContext
- uid: microsoft.servicefabric.services.remoting.Service
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting.Service.yml
  name: Service
  nameWithType: Service
  fullName: microsoft.servicefabric.services.remoting.Service
  type: Interface
  summary: "<p>This is the marker interface for enabling interface Remoting for services. An <xref uid=\"microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener\"></xref> provides remoting for all interfaces implemented by the service that derive from this interface. The remoted interfaces can be accessed via Proxy on the client side. </p>"
  syntax:
    content: public interface Service
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  parent: microsoft.servicefabric.services.remoting.fabrictransport
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.yml
  name: FabricTransportServiceRemotingProvider
  nameWithType: FabricTransportServiceRemotingProvider
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
  type: Class
  summary: "<p>Sets Fabric TCP transport as the default service remoting transport provider in the assembly. </p>"
  syntax: *o1
- uid: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory.yml
  name: ServiceRemotingClientFactory
  nameWithType: ServiceRemotingClientFactory
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  type: Interface
  summary: "<p>Defines the interface that must be implemented for providing the remoting communication client factory. </p>"
  syntax:
    content: public interface ServiceRemotingClientFactory
- uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
  parent: microsoft.servicefabric.services.remoting.runtime
  href: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient.yml
  name: ServiceRemotingCallbackClient
  nameWithType: ServiceRemotingCallbackClient
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
  type: Interface
  summary: "<p>Defines the interface that must be implemented for providing callback mechanism from the remoting listener to the client. </p>"
  syntax:
    content: public interface ServiceRemotingCallbackClient
- uid: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
  parent: microsoft.servicefabric.services.remoting.fabrictransport.client
  href: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.yml
  name: FabricTransportServiceRemotingClientFactory
  nameWithType: FabricTransportServiceRemotingClientFactory
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
  type: Class
  summary: "<p>An <xref uid=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory\"></xref> that uses Fabric TCP transport to create <xref uid=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClient\"></xref> that communicate with stateless and stateful services over interfaces that are remoted via <xref uid=\"microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener\"></xref>. </p>"
  syntax:
    content: public class FabricTransportServiceRemotingClientFactory implements ServiceRemotingClientFactory
- uid: microsoft.servicefabric.services.remoting.client.ServiceProxyFactory
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client.ServiceProxyFactory.yml
  name: ServiceProxyFactory
  nameWithType: ServiceProxyFactory
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyFactory
  type: Interface
  summary: "<p>Specifies the interface for the factory that creates proxies for remote communication to the specified service. </p>"
  syntax:
    content: public interface ServiceProxyFactory
