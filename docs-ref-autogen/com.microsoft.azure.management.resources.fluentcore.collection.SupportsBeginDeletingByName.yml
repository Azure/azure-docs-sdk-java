### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName"
fullName: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName"
name: "SupportsBeginDeletingByName"
nameWithType: "SupportsBeginDeletingByName"
summary: "Provides access to deleting a resource from Azure, identifying it by its resource ID."
syntax: "public interface SupportsBeginDeletingByName"
methods:
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName.beginDeleteByName(java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName.beginDeleteByName(String name)"
  name: "beginDeleteByName(String name)"
  nameWithType: "SupportsBeginDeletingByName.beginDeleteByName(String name)"
  summary: "Begins deleting a resource from Azure, identifying it by its resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the name of the resource to delete"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void beginDeleteByName(String name)"
  desc: "Begins deleting a resource from Azure, identifying it by its resource name. The resource will stay until get() returns null."
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName.beginDeleteByNameAsync(java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName.beginDeleteByNameAsync(String name)"
  name: "beginDeleteByNameAsync(String name)"
  nameWithType: "SupportsBeginDeletingByName.beginDeleteByNameAsync(String name)"
  summary: "Asynchronously begins deleting a resource from Azure, identifying it by its resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the name the resource to delete"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> beginDeleteByNameAsync(String name)"
  desc: "Asynchronously begins deleting a resource from Azure, identifying it by its resource name. The resource will stay until get() returns null."
  returns:
    description: "a representation of the deferred computation of this call"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName.beginDeleteByNameAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName.beginDeleteByNameAsync(String name, ServiceCallback<Void> callback)"
  name: "beginDeleteByNameAsync(String name, ServiceCallback<Void> callback)"
  nameWithType: "SupportsBeginDeletingByName.beginDeleteByNameAsync(String name, ServiceCallback<Void> callback)"
  summary: "Asynchronously begins deleting a resource from Azure, identifying it by its resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the name of the resource to delete"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the callback on success or failure"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> beginDeleteByNameAsync(String name, ServiceCallback<Void> callback)"
  desc: "Asynchronously begins deleting a resource from Azure, identifying it by its resource name. The resource will stay until get() returns null."
  returns:
    description: "a handle to cancel the request"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Provides access to deleting a resource from Azure, identifying it by its resource ID.\n\n(Note: this interface is not intended to be implemented by user code)"
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.collection"
artifact: com.microsoft.azure:azure-mgmt-resources:1.41.4
