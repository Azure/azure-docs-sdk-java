### YamlMime:JavaType
uid: "com.microsoft.azure.management.containerinstance.Container"
fullName: "com.microsoft.azure.management.containerinstance.Container"
name: "Container"
nameWithType: "Container"
summary: "A container instance."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Container"
constructors:
- uid: "com.microsoft.azure.management.containerinstance.Container.Container()"
  fullName: "com.microsoft.azure.management.containerinstance.Container.Container()"
  name: "Container()"
  nameWithType: "Container.Container()"
  syntax: "public Container()"
methods:
- uid: "com.microsoft.azure.management.containerinstance.Container.command()"
  fullName: "com.microsoft.azure.management.containerinstance.Container.command()"
  name: "command()"
  nameWithType: "Container.command()"
  summary: "Get the commands to execute within the container instance in exec form."
  syntax: "public List<String> command()"
  desc: "Get the commands to execute within the container instance in exec form."
  returns:
    description: "the command value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.containerinstance.Container.environmentVariables()"
  fullName: "com.microsoft.azure.management.containerinstance.Container.environmentVariables()"
  name: "environmentVariables()"
  nameWithType: "Container.environmentVariables()"
  summary: "Get the environment variables to set in the container instance."
  syntax: "public List<EnvironmentVariable> environmentVariables()"
  desc: "Get the environment variables to set in the container instance."
  returns:
    description: "the environmentVariables value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerinstance.EnvironmentVariable?alt=com.microsoft.azure.management.containerinstance.EnvironmentVariable&text=EnvironmentVariable\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.containerinstance.Container.image()"
  fullName: "com.microsoft.azure.management.containerinstance.Container.image()"
  name: "image()"
  nameWithType: "Container.image()"
  summary: "Get the name of the image used to create the container instance."
  syntax: "public String image()"
  desc: "Get the name of the image used to create the container instance."
  returns:
    description: "the image value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.instanceView()"
  fullName: "com.microsoft.azure.management.containerinstance.Container.instanceView()"
  name: "instanceView()"
  nameWithType: "Container.instanceView()"
  summary: "Get the instance view of the container instance."
  syntax: "public ContainerPropertiesInstanceView instanceView()"
  desc: "Get the instance view of the container instance. Only valid in response."
  returns:
    description: "the instanceView value"
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.ContainerPropertiesInstanceView?alt=com.microsoft.azure.management.containerinstance.ContainerPropertiesInstanceView&text=ContainerPropertiesInstanceView\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.livenessProbe()"
  fullName: "com.microsoft.azure.management.containerinstance.Container.livenessProbe()"
  name: "livenessProbe()"
  nameWithType: "Container.livenessProbe()"
  summary: "Get the liveness probe."
  syntax: "public ContainerProbe livenessProbe()"
  desc: "Get the liveness probe."
  returns:
    description: "the livenessProbe value"
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.ContainerProbe?alt=com.microsoft.azure.management.containerinstance.ContainerProbe&text=ContainerProbe\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.name()"
  fullName: "com.microsoft.azure.management.containerinstance.Container.name()"
  name: "name()"
  nameWithType: "Container.name()"
  summary: "Get the user-provided name of the container instance."
  syntax: "public String name()"
  desc: "Get the user-provided name of the container instance."
  returns:
    description: "the name value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.ports()"
  fullName: "com.microsoft.azure.management.containerinstance.Container.ports()"
  name: "ports()"
  nameWithType: "Container.ports()"
  summary: "Get the exposed ports on the container instance."
  syntax: "public List<ContainerPort> ports()"
  desc: "Get the exposed ports on the container instance."
  returns:
    description: "the ports value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerinstance.ContainerPort?alt=com.microsoft.azure.management.containerinstance.ContainerPort&text=ContainerPort\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.containerinstance.Container.readinessProbe()"
  fullName: "com.microsoft.azure.management.containerinstance.Container.readinessProbe()"
  name: "readinessProbe()"
  nameWithType: "Container.readinessProbe()"
  summary: "Get the readiness probe."
  syntax: "public ContainerProbe readinessProbe()"
  desc: "Get the readiness probe."
  returns:
    description: "the readinessProbe value"
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.ContainerProbe?alt=com.microsoft.azure.management.containerinstance.ContainerProbe&text=ContainerProbe\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.resources()"
  fullName: "com.microsoft.azure.management.containerinstance.Container.resources()"
  name: "resources()"
  nameWithType: "Container.resources()"
  summary: "Get the resource requirements of the container instance."
  syntax: "public ResourceRequirements resources()"
  desc: "Get the resource requirements of the container instance."
  returns:
    description: "the resources value"
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.ResourceRequirements?alt=com.microsoft.azure.management.containerinstance.ResourceRequirements&text=ResourceRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.volumeMounts()"
  fullName: "com.microsoft.azure.management.containerinstance.Container.volumeMounts()"
  name: "volumeMounts()"
  nameWithType: "Container.volumeMounts()"
  summary: "Get the volume mounts available to the container instance."
  syntax: "public List<VolumeMount> volumeMounts()"
  desc: "Get the volume mounts available to the container instance."
  returns:
    description: "the volumeMounts value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerinstance.VolumeMount?alt=com.microsoft.azure.management.containerinstance.VolumeMount&text=VolumeMount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.containerinstance.Container.withCommand(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.containerinstance.Container.withCommand(List<String> command)"
  name: "withCommand(List<String> command)"
  nameWithType: "Container.withCommand(List<String> command)"
  summary: "Set the commands to execute within the container instance in exec form."
  parameters:
  - description: "the command value to set"
    name: "command"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Container withCommand(List<String> command)"
  desc: "Set the commands to execute within the container instance in exec form."
  returns:
    description: "the Container object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.withEnvironmentVariables(java.util.List<com.microsoft.azure.management.containerinstance.EnvironmentVariable>)"
  fullName: "com.microsoft.azure.management.containerinstance.Container.withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)"
  name: "withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)"
  nameWithType: "Container.withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)"
  summary: "Set the environment variables to set in the container instance."
  parameters:
  - description: "the environmentVariables value to set"
    name: "environmentVariables"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerinstance.EnvironmentVariable?alt=com.microsoft.azure.management.containerinstance.EnvironmentVariable&text=EnvironmentVariable\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Container withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)"
  desc: "Set the environment variables to set in the container instance."
  returns:
    description: "the Container object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.withImage(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerinstance.Container.withImage(String image)"
  name: "withImage(String image)"
  nameWithType: "Container.withImage(String image)"
  summary: "Set the name of the image used to create the container instance."
  parameters:
  - description: "the image value to set"
    name: "image"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Container withImage(String image)"
  desc: "Set the name of the image used to create the container instance."
  returns:
    description: "the Container object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.withLivenessProbe(com.microsoft.azure.management.containerinstance.ContainerProbe)"
  fullName: "com.microsoft.azure.management.containerinstance.Container.withLivenessProbe(ContainerProbe livenessProbe)"
  name: "withLivenessProbe(ContainerProbe livenessProbe)"
  nameWithType: "Container.withLivenessProbe(ContainerProbe livenessProbe)"
  summary: "Set the liveness probe."
  parameters:
  - description: "the livenessProbe value to set"
    name: "livenessProbe"
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.ContainerProbe?alt=com.microsoft.azure.management.containerinstance.ContainerProbe&text=ContainerProbe\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Container withLivenessProbe(ContainerProbe livenessProbe)"
  desc: "Set the liveness probe."
  returns:
    description: "the Container object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.withName(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerinstance.Container.withName(String name)"
  name: "withName(String name)"
  nameWithType: "Container.withName(String name)"
  summary: "Set the user-provided name of the container instance."
  parameters:
  - description: "the name value to set"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Container withName(String name)"
  desc: "Set the user-provided name of the container instance."
  returns:
    description: "the Container object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.withPorts(java.util.List<com.microsoft.azure.management.containerinstance.ContainerPort>)"
  fullName: "com.microsoft.azure.management.containerinstance.Container.withPorts(List<ContainerPort> ports)"
  name: "withPorts(List<ContainerPort> ports)"
  nameWithType: "Container.withPorts(List<ContainerPort> ports)"
  summary: "Set the exposed ports on the container instance."
  parameters:
  - description: "the ports value to set"
    name: "ports"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerinstance.ContainerPort?alt=com.microsoft.azure.management.containerinstance.ContainerPort&text=ContainerPort\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Container withPorts(List<ContainerPort> ports)"
  desc: "Set the exposed ports on the container instance."
  returns:
    description: "the Container object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.withReadinessProbe(com.microsoft.azure.management.containerinstance.ContainerProbe)"
  fullName: "com.microsoft.azure.management.containerinstance.Container.withReadinessProbe(ContainerProbe readinessProbe)"
  name: "withReadinessProbe(ContainerProbe readinessProbe)"
  nameWithType: "Container.withReadinessProbe(ContainerProbe readinessProbe)"
  summary: "Set the readiness probe."
  parameters:
  - description: "the readinessProbe value to set"
    name: "readinessProbe"
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.ContainerProbe?alt=com.microsoft.azure.management.containerinstance.ContainerProbe&text=ContainerProbe\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Container withReadinessProbe(ContainerProbe readinessProbe)"
  desc: "Set the readiness probe."
  returns:
    description: "the Container object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.withResources(com.microsoft.azure.management.containerinstance.ResourceRequirements)"
  fullName: "com.microsoft.azure.management.containerinstance.Container.withResources(ResourceRequirements resources)"
  name: "withResources(ResourceRequirements resources)"
  nameWithType: "Container.withResources(ResourceRequirements resources)"
  summary: "Set the resource requirements of the container instance."
  parameters:
  - description: "the resources value to set"
    name: "resources"
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.ResourceRequirements?alt=com.microsoft.azure.management.containerinstance.ResourceRequirements&text=ResourceRequirements\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Container withResources(ResourceRequirements resources)"
  desc: "Set the resource requirements of the container instance."
  returns:
    description: "the Container object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.Container.withVolumeMounts(java.util.List<com.microsoft.azure.management.containerinstance.VolumeMount>)"
  fullName: "com.microsoft.azure.management.containerinstance.Container.withVolumeMounts(List<VolumeMount> volumeMounts)"
  name: "withVolumeMounts(List<VolumeMount> volumeMounts)"
  nameWithType: "Container.withVolumeMounts(List<VolumeMount> volumeMounts)"
  summary: "Set the volume mounts available to the container instance."
  parameters:
  - description: "the volumeMounts value to set"
    name: "volumeMounts"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerinstance.VolumeMount?alt=com.microsoft.azure.management.containerinstance.VolumeMount&text=VolumeMount\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Container withVolumeMounts(List<VolumeMount> volumeMounts)"
  desc: "Set the volume mounts available to the container instance."
  returns:
    description: "the Container object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A container instance."
metadata: {}
package: "com.microsoft.azure.management.containerinstance"
artifact: com.microsoft.azure:azure-mgmt-containerinstance:1.41.4
