### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump"
fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump"
name: "IMessageAndSessionPump"
nameWithType: "IMessageAndSessionPump"
summary: "Represents the pump which is underneath the clients that handles message processing."
syntax: "public interface IMessageAndSessionPump"
methods:
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(java.util.UUID)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID lockToken)"
  name: "abandon(UUID lockToken)"
  nameWithType: "IMessageAndSessionPump.abandon(UUID lockToken)"
  summary: "Abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void abandon(UUID lockToken)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID lockToken, TransactionContext transaction)"
  name: "abandon(UUID lockToken, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.abandon(UUID lockToken, TransactionContext transaction)"
  summary: "Abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void abandon(UUID lockToken, TransactionContext transaction)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID lockToken, Map<String,Object> propertiesToModify)"
  name: "abandon(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "IMessageAndSessionPump.abandon(UUID lockToken, Map<String,Object> propertiesToModify)"
  summary: "Abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token and updated message property."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Message properties to modify."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract void abandon(UUID lockToken, Map<String,Object> propertiesToModify)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token and updated message property. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  name: "abandon(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.abandon(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  summary: "Abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token and updated message property."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Message properties to modify."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void abandon(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token and updated message property. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(java.util.UUID)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID lockToken)"
  name: "abandonAsync(UUID lockToken)"
  nameWithType: "IMessageAndSessionPump.abandonAsync(UUID lockToken)"
  summary: "Asynchronously abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> abandonAsync(UUID lockToken)"
  desc: "Asynchronously abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message."
  returns:
    description: "a CompletableFuture representing the pending abandon."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID lockToken, TransactionContext transaction)"
  name: "abandonAsync(UUID lockToken, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.abandonAsync(UUID lockToken, TransactionContext transaction)"
  summary: "Asynchronously abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> abandonAsync(UUID lockToken, TransactionContext transaction)"
  desc: "Asynchronously abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message."
  returns:
    description: "a CompletableFuture representing the pending abandon."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  name: "abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "IMessageAndSessionPump.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  summary: "Asynchronously abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token and updated message property."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Message properties to modify."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract CompletableFuture<Void> abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  desc: "Asynchronously abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token and updated message property. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message."
  returns:
    description: "a CompletableFuture representing the pending abandon."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  name: "abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  summary: "Asynchronously abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token and updated message property."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Message properties to modify."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  desc: "Asynchronously abandon <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> with lock token and updated message property. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message."
  returns:
    description: "a CompletableFuture representing the pending abandon."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.complete(java.util.UUID)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.complete(UUID lockToken)"
  name: "complete(UUID lockToken)"
  nameWithType: "IMessageAndSessionPump.complete(UUID lockToken)"
  summary: "Completes a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> using its lock token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void complete(UUID lockToken)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Completes a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> using its lock token. This will delete the message from the service."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.complete(UUID lockToken, TransactionContext transaction)"
  name: "complete(UUID lockToken, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.complete(UUID lockToken, TransactionContext transaction)"
  summary: "Completes a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> using its lock token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void complete(UUID lockToken, TransactionContext transaction)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Completes a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> using its lock token. This will delete the message from the service."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.completeAsync(java.util.UUID)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.completeAsync(UUID lockToken)"
  name: "completeAsync(UUID lockToken)"
  nameWithType: "IMessageAndSessionPump.completeAsync(UUID lockToken)"
  summary: "Asynchronously completes a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> using its lock token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> completeAsync(UUID lockToken)"
  desc: "Asynchronously completes a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> using its lock token. This will delete the message from the service."
  returns:
    description: "a CompletableFuture representing the pending complete."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.completeAsync(UUID lockToken, TransactionContext transaction)"
  name: "completeAsync(UUID lockToken, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.completeAsync(UUID lockToken, TransactionContext transaction)"
  summary: "Asynchronously completes a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> using its lock token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> completeAsync(UUID lockToken, TransactionContext transaction)"
  desc: "Asynchronously completes a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> using its lock token. This will delete the message from the service."
  returns:
    description: "a CompletableFuture representing the pending complete."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(java.util.UUID)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID lockToken)"
  name: "deadLetter(UUID lockToken)"
  nameWithType: "IMessageAndSessionPump.deadLetter(UUID lockToken)"
  summary: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deadLetter(UUID lockToken)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID lockToken, TransactionContext transaction)"
  name: "deadLetter(UUID lockToken, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.deadLetter(UUID lockToken, TransactionContext transaction)"
  summary: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deadLetter(UUID lockToken, TransactionContext transaction)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(java.util.UUID,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  name: "deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  nameWithType: "IMessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  summary: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter reason."
    name: "deadLetterReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter error description."
    name: "deadLetterErrorDescription"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  name: "deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  summary: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter reason."
    name: "deadLetterReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter error description."
    name: "deadLetterErrorDescription"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  name: "deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  nameWithType: "IMessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  summary: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description and modified properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter reason."
    name: "deadLetterReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter error description."
    name: "deadLetterErrorDescription"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Message properties to modify."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description and modified properties."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  name: "deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  summary: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description and modified properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter reason."
    name: "deadLetterReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter error description."
    name: "deadLetterErrorDescription"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Message properties to modify."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description and modified properties."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID lockToken, Map<String,Object> propertiesToModify)"
  name: "deadLetter(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "IMessageAndSessionPump.deadLetter(UUID lockToken, Map<String,Object> propertiesToModify)"
  summary: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with modified message properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Message properties to modify."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract void deadLetter(UUID lockToken, Map<String,Object> propertiesToModify)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with modified message properties."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  name: "deadLetter(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.deadLetter(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  summary: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with modified message properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Message properties to modify."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deadLetter(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with modified message properties."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(java.util.UUID)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID lockToken)"
  name: "deadLetterAsync(UUID lockToken)"
  nameWithType: "IMessageAndSessionPump.deadLetterAsync(UUID lockToken)"
  summary: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> deadLetterAsync(UUID lockToken)"
  desc: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter."
  returns:
    description: "a CompletableFuture representing the pending deadletter."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID lockToken, TransactionContext transaction)"
  name: "deadLetterAsync(UUID lockToken, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.deadLetterAsync(UUID lockToken, TransactionContext transaction)"
  summary: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> deadLetterAsync(UUID lockToken, TransactionContext transaction)"
  desc: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter."
  returns:
    description: "a CompletableFuture representing the pending deadletter."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  nameWithType: "IMessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  summary: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter reason."
    name: "deadLetterReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter error description."
    name: "deadLetterErrorDescription"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  desc: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description."
  returns:
    description: "a CompletableFuture representing the pending deadletter."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  summary: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter reason."
    name: "deadLetterReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter error description."
    name: "deadLetterErrorDescription"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  desc: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description."
  returns:
    description: "a CompletableFuture representing the pending deadletter."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  nameWithType: "IMessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  summary: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description and modified properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter reason."
    name: "deadLetterReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter error description."
    name: "deadLetterErrorDescription"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Message properties to modify."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  desc: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description and modified properties."
  returns:
    description: "a CompletableFuture representing the pending deadletter."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  summary: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description and modified properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter reason."
    name: "deadLetterReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deadletter error description."
    name: "deadLetterErrorDescription"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Message properties to modify."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  desc: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with deadletter reason and error description and modified properties."
  returns:
    description: "a CompletableFuture representing the pending deadletter."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  name: "deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "IMessageAndSessionPump.deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  summary: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with modified properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Message properties to modify."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract CompletableFuture<Void> deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  desc: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with modified properties."
  returns:
    description: "a CompletableFuture representing the pending deadletter."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  name: "deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "IMessageAndSessionPump.deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  summary: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with modified properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Message properties to modify."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  desc: "Asynchronously moves a <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to the deadletter sub-queue with modified properties."
  returns:
    description: "a CompletableFuture representing the pending deadletter."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.getPrefetchCount()"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.getPrefetchCount()"
  name: "getPrefetchCount()"
  nameWithType: "IMessageAndSessionPump.getPrefetchCount()"
  summary: "Get the prefetch value set."
  modifiers:
  - "abstract"
  syntax: "public abstract int getPrefetchCount()"
  desc: "Get the prefetch value set."
  returns:
    description: "The set prefetch count value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler handler)"
  name: "registerMessageHandler(IMessageHandler handler)"
  nameWithType: "IMessageAndSessionPump.registerMessageHandler(IMessageHandler handler)"
  summary: "Receive messages continuously from the entity."
  deprecatedTag: "Use <xref uid=\"com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,java.util.concurrent.ExecutorService)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#registerMessageHandler(IMessageHandler, ExecutorService)\"></xref>"
  modifiers:
  - "abstract"
  parameters:
  - description: "The <xref uid=\"com.microsoft.azure.servicebus.IMessageHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageHandler\"></xref> instance"
    name: "handler"
    type: "<xref href=\"com.microsoft.azure.servicebus.IMessageHandler?alt=com.microsoft.azure.servicebus.IMessageHandler&text=IMessageHandler\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic abstract void registerMessageHandler(IMessageHandler handler)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Receive messages continuously from the entity. Registers a message handler and begins a new thread to receive messages. IMessageHandler methods are executed on java.util.concurrent.commonPool()"
  hasDeprecatedTag: true
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,com.microsoft.azure.servicebus.MessageHandlerOptions)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)"
  name: "registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)"
  nameWithType: "IMessageAndSessionPump.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)"
  summary: "Receive messages continuously from the entity."
  modifiers:
  - "abstract"
  parameters:
  - description: "The <xref uid=\"com.microsoft.azure.servicebus.IMessageHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageHandler\"></xref> instance"
    name: "handler"
    type: "<xref href=\"com.microsoft.azure.servicebus.IMessageHandler?alt=com.microsoft.azure.servicebus.IMessageHandler&text=IMessageHandler\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.MessageHandlerOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MessageHandlerOptions\"></xref>"
    name: "handlerOptions"
    type: "<xref href=\"com.microsoft.azure.servicebus.MessageHandlerOptions?alt=com.microsoft.azure.servicebus.MessageHandlerOptions&text=MessageHandlerOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic abstract void registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Receive messages continuously from the entity. Registers a message handler and begins a new thread to receive messages. IMessageHandler methods are executed on java.util.concurrent.commonPool()"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,com.microsoft.azure.servicebus.MessageHandlerOptions,java.util.concurrent.ExecutorService)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions, ExecutorService executorService)"
  name: "registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions, ExecutorService executorService)"
  nameWithType: "IMessageAndSessionPump.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions, ExecutorService executorService)"
  summary: "Receive messages continuously from the entity."
  modifiers:
  - "abstract"
  parameters:
  - description: "The <xref uid=\"com.microsoft.azure.servicebus.IMessageHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageHandler\"></xref> instance"
    name: "handler"
    type: "<xref href=\"com.microsoft.azure.servicebus.IMessageHandler?alt=com.microsoft.azure.servicebus.IMessageHandler&text=IMessageHandler\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.MessageHandlerOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MessageHandlerOptions\"></xref>"
    name: "handlerOptions"
    type: "<xref href=\"com.microsoft.azure.servicebus.MessageHandlerOptions?alt=com.microsoft.azure.servicebus.MessageHandlerOptions&text=MessageHandlerOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "ExecutorService which is used to execute <xref uid=\"com.microsoft.azure.servicebus.IMessageHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageHandler\"></xref> methods"
    name: "executorService"
    type: "<xref href=\"java.util.concurrent.ExecutorService?alt=java.util.concurrent.ExecutorService&text=ExecutorService\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions, ExecutorService executorService)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Receive messages continuously from the entity. Registers a message handler and begins a new thread to receive messages. IMessageHandler methods are executed on the passed executor service."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,java.util.concurrent.ExecutorService)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler handler, ExecutorService executorService)"
  name: "registerMessageHandler(IMessageHandler handler, ExecutorService executorService)"
  nameWithType: "IMessageAndSessionPump.registerMessageHandler(IMessageHandler handler, ExecutorService executorService)"
  summary: "Receive messages continuously from the entity."
  modifiers:
  - "abstract"
  parameters:
  - description: "The <xref uid=\"com.microsoft.azure.servicebus.IMessageHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageHandler\"></xref> instance"
    name: "handler"
    type: "<xref href=\"com.microsoft.azure.servicebus.IMessageHandler?alt=com.microsoft.azure.servicebus.IMessageHandler&text=IMessageHandler\" data-throw-if-not-resolved=\"False\" />"
  - description: "ExecutorService which is used to execute <xref uid=\"com.microsoft.azure.servicebus.IMessageHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageHandler\"></xref> methods."
    name: "executorService"
    type: "<xref href=\"java.util.concurrent.ExecutorService?alt=java.util.concurrent.ExecutorService&text=ExecutorService\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void registerMessageHandler(IMessageHandler handler, ExecutorService executorService)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Receive messages continuously from the entity. Registers a message handler and begins a new thread to receive messages. IMessageHandler methods are executed on the passed executor service."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler handler)"
  name: "registerSessionHandler(ISessionHandler handler)"
  nameWithType: "IMessageAndSessionPump.registerSessionHandler(ISessionHandler handler)"
  summary: "Receive session messages continuously from the queue."
  modifiers:
  - "abstract"
  parameters:
  - description: "The <xref uid=\"com.microsoft.azure.servicebus.ISessionHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISessionHandler\"></xref> instance"
    name: "handler"
    type: "<xref href=\"com.microsoft.azure.servicebus.ISessionHandler?alt=com.microsoft.azure.servicebus.ISessionHandler&text=ISessionHandler\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic abstract void registerSessionHandler(ISessionHandler handler)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Receive session messages continuously from the queue. Registers a message handler and begins a new thread to receive session-messages. ISessionHandler methods are executed on java.util.concurrent.commonPool()"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler,com.microsoft.azure.servicebus.SessionHandlerOptions)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)"
  name: "registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)"
  nameWithType: "IMessageAndSessionPump.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)"
  summary: "Receive session messages continuously from the queue."
  modifiers:
  - "abstract"
  parameters:
  - description: "The <xref uid=\"com.microsoft.azure.servicebus.ISessionHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISessionHandler\"></xref> instance"
    name: "handler"
    type: "<xref href=\"com.microsoft.azure.servicebus.ISessionHandler?alt=com.microsoft.azure.servicebus.ISessionHandler&text=ISessionHandler\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.SessionHandlerOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SessionHandlerOptions\"></xref>"
    name: "handlerOptions"
    type: "<xref href=\"com.microsoft.azure.servicebus.SessionHandlerOptions?alt=com.microsoft.azure.servicebus.SessionHandlerOptions&text=SessionHandlerOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic abstract void registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Receive session messages continuously from the queue. Registers a message handler and begins a new thread to receive session-messages. ISessionHandler methods are executed on java.util.concurrent.commonPool()"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler,com.microsoft.azure.servicebus.SessionHandlerOptions,java.util.concurrent.ExecutorService)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions, ExecutorService executorService)"
  name: "registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions, ExecutorService executorService)"
  nameWithType: "IMessageAndSessionPump.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions, ExecutorService executorService)"
  summary: "Receive session messages continuously from the queue."
  modifiers:
  - "abstract"
  parameters:
  - description: "The <xref uid=\"com.microsoft.azure.servicebus.ISessionHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISessionHandler\"></xref> instance"
    name: "handler"
    type: "<xref href=\"com.microsoft.azure.servicebus.ISessionHandler?alt=com.microsoft.azure.servicebus.ISessionHandler&text=ISessionHandler\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.SessionHandlerOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SessionHandlerOptions\"></xref>"
    name: "handlerOptions"
    type: "<xref href=\"com.microsoft.azure.servicebus.SessionHandlerOptions?alt=com.microsoft.azure.servicebus.SessionHandlerOptions&text=SessionHandlerOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "ExecutorService which is used to execute <xref uid=\"com.microsoft.azure.servicebus.ISessionHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISessionHandler\"></xref> methods"
    name: "executorService"
    type: "<xref href=\"java.util.concurrent.ExecutorService?alt=java.util.concurrent.ExecutorService&text=ExecutorService\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions, ExecutorService executorService)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Receive session messages continuously from the queue. Registers a message handler and begins a new thread to receive session-messages. ISessionHandler methods are executed on the passed executor service."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler,java.util.concurrent.ExecutorService)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler handler, ExecutorService executorService)"
  name: "registerSessionHandler(ISessionHandler handler, ExecutorService executorService)"
  nameWithType: "IMessageAndSessionPump.registerSessionHandler(ISessionHandler handler, ExecutorService executorService)"
  summary: "Receive session messages continuously from the queue."
  modifiers:
  - "abstract"
  parameters:
  - description: "The <xref uid=\"com.microsoft.azure.servicebus.ISessionHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISessionHandler\"></xref> instance"
    name: "handler"
    type: "<xref href=\"com.microsoft.azure.servicebus.ISessionHandler?alt=com.microsoft.azure.servicebus.ISessionHandler&text=ISessionHandler\" data-throw-if-not-resolved=\"False\" />"
  - description: "ExecutorService which is used to execute <xref uid=\"com.microsoft.azure.servicebus.ISessionHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISessionHandler\"></xref> methods"
    name: "executorService"
    type: "<xref href=\"java.util.concurrent.ExecutorService?alt=java.util.concurrent.ExecutorService&text=ExecutorService\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void registerSessionHandler(ISessionHandler handler, ExecutorService executorService)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Receive session messages continuously from the queue. Registers a message handler and begins a new thread to receive session-messages. ISessionHandler methods are executed on the passed executor service."
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump.setPrefetchCount(int)"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump.setPrefetchCount(int prefetchCount)"
  name: "setPrefetchCount(int prefetchCount)"
  nameWithType: "IMessageAndSessionPump.setPrefetchCount(int prefetchCount)"
  summary: "Set the prefetch count of the receiver."
  modifiers:
  - "abstract"
  parameters:
  - description: "The desired prefetch count."
    name: "prefetchCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setPrefetchCount(int prefetchCount)"
  exceptions:
  - description: "if sets the value failed"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Set the prefetch count of the receiver. Prefetch speeds up the message flow by aiming to have a message readily available for local retrieval when and before the application asks for one using Receive. Setting a non-zero value prefetches PrefetchCount number of messages. Setting the value to zero turns prefetch off. For RECEIVEANDDELETE mode, the default value is 0. For PEEKLOCK mode, the default value is 100.\n\nThe value cannot be set until the receiver is created."
type: "interface"
desc: "Represents the pump which is underneath the clients that handles message processing."
metadata: {}
package: "com.microsoft.azure.servicebus"
artifact: com.microsoft.azure:azure-servicebus:3.6.6
