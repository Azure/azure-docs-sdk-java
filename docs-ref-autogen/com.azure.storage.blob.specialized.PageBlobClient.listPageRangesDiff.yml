### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.PageBlobClient.listPageRangesDiff*"
fullName: "com.azure.storage.blob.specialized.PageBlobClient.listPageRangesDiff"
name: "listPageRangesDiff"
nameWithType: "PageBlobClient.listPageRangesDiff"
members:
- uid: "com.azure.storage.blob.specialized.PageBlobClient.listPageRangesDiff(com.azure.storage.blob.models.BlobRange,java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.PageBlobClient.listPageRangesDiff(BlobRange blobRange, String prevSnapshot)"
  name: "listPageRangesDiff(BlobRange blobRange, String prevSnapshot)"
  nameWithType: "PageBlobClient.listPageRangesDiff(BlobRange blobRange, String prevSnapshot)"
  summary: "Gets the collection of page ranges that differ between a specified snapshot and this page blob."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRange\"></xref>"
    name: "blobRange"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies that the response will contain only pages that were changed between target blob and\n previous snapshot. Changed pages include both updated and cleared pages. The target blob may be a snapshot, as\n long as the snapshot specified by prevsnapshot is the older of the two."
    name: "prevSnapshot"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<PageRangeItem> listPageRangesDiff(BlobRange blobRange, String prevSnapshot)"
  desc: "Gets the collection of page ranges that differ between a specified snapshot and this page blob. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(offset);\n String prevSnapshot = \"previous snapshot\";\n PagedIterable<PageRangeItem> iterable = client.listPageRangesDiff(blobRange, prevSnapshot);\n\n for (PageRangeItem item : iterable) {\n     System.out.printf(\"Offset: %s, Length: %s, isClear: %s%n\", item.getRange().getOffset(),\n         item.getRange().getLength(), item.isClear());\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-page-ranges"
  returns:
    description: "A reactive response emitting all the different page ranges."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.PageRangeItem?alt=com.azure.storage.blob.models.PageRangeItem&text=PageRangeItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.PageBlobClient.listPageRangesDiff(com.azure.storage.blob.options.ListPageRangesDiffOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.PageBlobClient.listPageRangesDiff(ListPageRangesDiffOptions options, Duration timeout, Context context)"
  name: "listPageRangesDiff(ListPageRangesDiffOptions options, Duration timeout, Context context)"
  nameWithType: "PageBlobClient.listPageRangesDiff(ListPageRangesDiffOptions options, Duration timeout, Context context)"
  summary: "Gets the collection of page ranges that differ between a specified snapshot and this page blob."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.ListPageRangesDiffOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ListPageRangesDiffOptions\"></xref>."
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.ListPageRangesDiffOptions?alt=com.azure.storage.blob.options.ListPageRangesDiffOptions&text=ListPageRangesDiffOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<PageRangeItem> listPageRangesDiff(ListPageRangesDiffOptions options, Duration timeout, Context context)"
  desc: "Gets the collection of page ranges that differ between a specified snapshot and this page blob. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nListPageRangesDiffOptions options = new ListPageRangesDiffOptions(new BlobRange(offset), \"previous snapshot\")\n     .setRequestConditions(new BlobRequestConditions().setLeaseId(leaseId))\n     .setMaxResultsPerPage(1000);\n\n Context context = new Context(key, value);\n\n PagedIterable<PageRangeItem> iter = client\n     .listPageRangesDiff(options, timeout, context);\n\n System.out.println(\"Valid Page Ranges are:\");\n for (PageRangeItem item : iter) {\n     System.out.printf(\"Offset: %s, Length: %s, isClear: %s%n\", item.getRange().getOffset(),\n         item.getRange().getLength(), item.isClear());\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-page-ranges"
  returns:
    description: "A reactive response emitting all the different page ranges."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.PageRangeItem?alt=com.azure.storage.blob.models.PageRangeItem&text=PageRangeItem\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.19.0
