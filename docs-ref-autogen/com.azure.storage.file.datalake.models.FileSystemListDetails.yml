### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.models.FileSystemListDetails"
fullName: "com.azure.storage.file.datalake.models.FileSystemListDetails"
name: "FileSystemListDetails"
nameWithType: "FileSystemListDetails"
summary: "This type allows users to specify additional information the service should return with each file system when listing file systems in an account (via a <xref uid=\"com.azure.storage.file.datalake.DataLakeServiceAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeServiceAsyncClient\"></xref> object)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FileSystemListDetails"
constructors:
- uid: "com.azure.storage.file.datalake.models.FileSystemListDetails.FileSystemListDetails()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemListDetails.FileSystemListDetails()"
  name: "FileSystemListDetails()"
  nameWithType: "FileSystemListDetails.FileSystemListDetails()"
  summary: "Creates a new instance of <xref uid=\"com.azure.storage.file.datalake.models.FileSystemListDetails\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemListDetails\"></xref>."
  syntax: "public FileSystemListDetails()"
  desc: "Creates a new instance of <xref uid=\"com.azure.storage.file.datalake.models.FileSystemListDetails\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemListDetails\"></xref>."
methods:
- uid: "com.azure.storage.file.datalake.models.FileSystemListDetails.getRetrieveDeleted()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemListDetails.getRetrieveDeleted()"
  name: "getRetrieveDeleted()"
  nameWithType: "FileSystemListDetails.getRetrieveDeleted()"
  summary: "Whether deleted file systems should be returned."
  syntax: "public boolean getRetrieveDeleted()"
  desc: "Whether deleted file systems should be returned."
  returns:
    description: "a flag indicating whether deleted file systems should be returned"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemListDetails.getRetrieveMetadata()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemListDetails.getRetrieveMetadata()"
  name: "getRetrieveMetadata()"
  nameWithType: "FileSystemListDetails.getRetrieveMetadata()"
  summary: "Whether metadata should be returned."
  syntax: "public boolean getRetrieveMetadata()"
  desc: "Whether metadata should be returned."
  returns:
    description: "a flag indicating whether metadata should be returned in the listing"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemListDetails.getRetrieveSystemFileSystems()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemListDetails.getRetrieveSystemFileSystems()"
  name: "getRetrieveSystemFileSystems()"
  nameWithType: "FileSystemListDetails.getRetrieveSystemFileSystems()"
  summary: "Whether system file<wbr>Systems should be returned."
  syntax: "public boolean getRetrieveSystemFileSystems()"
  desc: "Whether system fileSystems should be returned."
  returns:
    description: "a flag indicating whether system fileSystems should be returned in the listing"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemListDetails.setRetrieveDeleted(boolean)"
  fullName: "com.azure.storage.file.datalake.models.FileSystemListDetails.setRetrieveDeleted(boolean retrieveDeleted)"
  name: "setRetrieveDeleted(boolean retrieveDeleted)"
  nameWithType: "FileSystemListDetails.setRetrieveDeleted(boolean retrieveDeleted)"
  summary: "Whether deleted file systems should be returned."
  parameters:
  - description: "Flag indicating whether deleted file systems should be returned."
    name: "retrieveDeleted"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystemListDetails setRetrieveDeleted(boolean retrieveDeleted)"
  desc: "Whether deleted file systems should be returned."
  returns:
    description: "the updated FileSystemListDetails object"
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileSystemListDetails?alt=com.azure.storage.file.datalake.models.FileSystemListDetails&text=FileSystemListDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemListDetails.setRetrieveMetadata(boolean)"
  fullName: "com.azure.storage.file.datalake.models.FileSystemListDetails.setRetrieveMetadata(boolean retrieveMetadata)"
  name: "setRetrieveMetadata(boolean retrieveMetadata)"
  nameWithType: "FileSystemListDetails.setRetrieveMetadata(boolean retrieveMetadata)"
  summary: "Whether metadata should be returned."
  parameters:
  - description: "Flag indicating whether metadata should be returned"
    name: "retrieveMetadata"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystemListDetails setRetrieveMetadata(boolean retrieveMetadata)"
  desc: "Whether metadata should be returned."
  returns:
    description: "the updated FileSystemListDetails object"
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileSystemListDetails?alt=com.azure.storage.file.datalake.models.FileSystemListDetails&text=FileSystemListDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemListDetails.setRetrieveSystemFileSystems(boolean)"
  fullName: "com.azure.storage.file.datalake.models.FileSystemListDetails.setRetrieveSystemFileSystems(boolean retrieveSystemFileSystems)"
  name: "setRetrieveSystemFileSystems(boolean retrieveSystemFileSystems)"
  nameWithType: "FileSystemListDetails.setRetrieveSystemFileSystems(boolean retrieveSystemFileSystems)"
  summary: "Whether system file<wbr>Systems should be returned."
  parameters:
  - description: "Flag indicating whether system fileSystems should be returned"
    name: "retrieveSystemFileSystems"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystemListDetails setRetrieveSystemFileSystems(boolean retrieveSystemFileSystems)"
  desc: "Whether system fileSystems should be returned."
  returns:
    description: "the updated FileSystemListDetails object"
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileSystemListDetails?alt=com.azure.storage.file.datalake.models.FileSystemListDetails&text=FileSystemListDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemListDetails.toIncludeType()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemListDetails.toIncludeType()"
  name: "toIncludeType()"
  nameWithType: "FileSystemListDetails.toIncludeType()"
  syntax: "public ListFileSystemsIncludeType toIncludeType()"
  returns:
    description: "the listing flags"
    type: "<xref href=\"com.azure.storage.file.datalake.models.ListFileSystemsIncludeType?alt=com.azure.storage.file.datalake.models.ListFileSystemsIncludeType&text=ListFileSystemsIncludeType\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This type allows users to specify additional information the service should return with each file system when listing file systems in an account (via a <xref uid=\"com.azure.storage.file.datalake.DataLakeServiceAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeServiceAsyncClient\"></xref> object). This type is immutable to ensure thread-safety of requests, so changing the details for a different listing operation requires construction of a new object. Null may be passed if none of the options are desirable."
metadata: {}
package: "com.azure.storage.file.datalake.models"
artifact: com.azure:azure-storage-file-datalake:12.12.0
