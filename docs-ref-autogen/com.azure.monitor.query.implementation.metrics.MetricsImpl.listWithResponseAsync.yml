### YamlMime:JavaMember
uid: "com.azure.monitor.query.implementation.metrics.MetricsImpl.listWithResponseAsync*"
fullName: "com.azure.monitor.query.implementation.metrics.MetricsImpl.listWithResponseAsync"
name: "listWithResponseAsync"
nameWithType: "MetricsImpl.listWithResponseAsync"
members:
- uid: "com.azure.monitor.query.implementation.metrics.MetricsImpl.listWithResponseAsync(java.lang.String,java.lang.String,java.time.Duration,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.monitor.query.implementation.metrics.models.ResultType,java.lang.String)"
  fullName: "com.azure.monitor.query.implementation.metrics.MetricsImpl.listWithResponseAsync(String resourceUri, String timespan, Duration interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)"
  name: "listWithResponseAsync(String resourceUri, String timespan, Duration interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)"
  nameWithType: "MetricsImpl.listWithResponseAsync(String resourceUri, String timespan, Duration interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)"
  summary: "\\*\\*Lists the metric values for a resource\\*\\*."
  parameters:
  - description: "The identifier of the resource."
    name: "resourceUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The timespan of the query. It is a string with the following format\n     'startDateTime_ISO/endDateTime_ISO'."
    name: "timespan"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The interval (i.e. timegrain) of the query."
    name: "interval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "The names of the metrics (comma separated) to retrieve. Special case: If a metricname itself\n     has a comma in it then use %2 to indicate it. Eg: 'Metric,Name1' should be **'Metric%2Name1'**."
    name: "metricnames"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The list of aggregation types (comma separated) to retrieve."
    name: "aggregation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The maximum number of records to retrieve. Valid only if $filter is specified. Defaults to 10."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The aggregation to use for sorting results and the direction of the sort. Only one order can be\n     specified. Examples: sum asc."
    name: "orderby"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The **$filter** is used to reduce the set of metric data returned. Example: Metric contains\n     metadata A, B and C. - Return all time series of C where A = a1 and B = b1 or b2 **$filter=A eq 'a1' and B eq\n     'b1' or B eq 'b2' and C eq '*'** - Invalid variant: **$filter=A eq 'a1' and B eq 'b1' and C eq '*' or B =\n     'b2'** This is invalid because the logical or operator cannot separate two different metadata names. - Return\n     all time series where A = a1, B = b1 and C = c1: **$filter=A eq 'a1' and B eq 'b1' and C eq 'c1'** - Return\n     all time series where A = a1 **$filter=A eq 'a1' and B eq '*' and C eq '*'**. Special case: When dimension\n     name or dimension value uses round brackets. Eg: When dimension name is **dim (test) 1** Instead of using\n     $filter= \"dim (test) 1 eq '*' \" use **$filter= \"dim %2528test%2529 1 eq '*' \"** When dimension name is **dim\n     (test) 3** and dimension value is **dim3 (test) val** Instead of using $filter= \"dim (test) 3 eq 'dim3 (test)\n     val' \" use **$filter= \"dim %2528test%2529 3 eq 'dim3 %2528test%2529 val' \"**."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Reduces the set of data collected. The syntax allowed depends on the operation. See the\n     operation's description for details."
    name: "resultType"
    type: "<xref href=\"com.azure.monitor.query.implementation.metrics.models.ResultType?alt=com.azure.monitor.query.implementation.metrics.models.ResultType&text=ResultType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Metric namespace to query metric definitions for."
    name: "metricnamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<MetricsResponse>> listWithResponseAsync(String resourceUri, String timespan, Duration interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)"
  returns:
    description: "the response to a metrics query."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.query.implementation.metrics.models.MetricsResponse?alt=com.azure.monitor.query.implementation.metrics.models.MetricsResponse&text=MetricsResponse\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.monitor.query.implementation.metrics.MetricsImpl.listWithResponseAsync(java.lang.String,java.lang.String,java.time.Duration,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.monitor.query.implementation.metrics.models.ResultType,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.monitor.query.implementation.metrics.MetricsImpl.listWithResponseAsync(String resourceUri, String timespan, Duration interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace, Context context)"
  name: "listWithResponseAsync(String resourceUri, String timespan, Duration interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace, Context context)"
  nameWithType: "MetricsImpl.listWithResponseAsync(String resourceUri, String timespan, Duration interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace, Context context)"
  summary: "\\*\\*Lists the metric values for a resource\\*\\*."
  parameters:
  - description: "The identifier of the resource."
    name: "resourceUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The timespan of the query. It is a string with the following format\n     'startDateTime_ISO/endDateTime_ISO'."
    name: "timespan"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The interval (i.e. timegrain) of the query."
    name: "interval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "The names of the metrics (comma separated) to retrieve. Special case: If a metricname itself\n     has a comma in it then use %2 to indicate it. Eg: 'Metric,Name1' should be **'Metric%2Name1'**."
    name: "metricnames"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The list of aggregation types (comma separated) to retrieve."
    name: "aggregation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The maximum number of records to retrieve. Valid only if $filter is specified. Defaults to 10."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The aggregation to use for sorting results and the direction of the sort. Only one order can be\n     specified. Examples: sum asc."
    name: "orderby"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The **$filter** is used to reduce the set of metric data returned. Example: Metric contains\n     metadata A, B and C. - Return all time series of C where A = a1 and B = b1 or b2 **$filter=A eq 'a1' and B eq\n     'b1' or B eq 'b2' and C eq '*'** - Invalid variant: **$filter=A eq 'a1' and B eq 'b1' and C eq '*' or B =\n     'b2'** This is invalid because the logical or operator cannot separate two different metadata names. - Return\n     all time series where A = a1, B = b1 and C = c1: **$filter=A eq 'a1' and B eq 'b1' and C eq 'c1'** - Return\n     all time series where A = a1 **$filter=A eq 'a1' and B eq '*' and C eq '*'**. Special case: When dimension\n     name or dimension value uses round brackets. Eg: When dimension name is **dim (test) 1** Instead of using\n     $filter= \"dim (test) 1 eq '*' \" use **$filter= \"dim %2528test%2529 1 eq '*' \"** When dimension name is **dim\n     (test) 3** and dimension value is **dim3 (test) val** Instead of using $filter= \"dim (test) 3 eq 'dim3 (test)\n     val' \" use **$filter= \"dim %2528test%2529 3 eq 'dim3 %2528test%2529 val' \"**."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Reduces the set of data collected. The syntax allowed depends on the operation. See the\n     operation's description for details."
    name: "resultType"
    type: "<xref href=\"com.azure.monitor.query.implementation.metrics.models.ResultType?alt=com.azure.monitor.query.implementation.metrics.models.ResultType&text=ResultType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Metric namespace to query metric definitions for."
    name: "metricnamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<MetricsResponse>> listWithResponseAsync(String resourceUri, String timespan, Duration interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace, Context context)"
  returns:
    description: "the response to a metrics query."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.query.implementation.metrics.models.MetricsResponse?alt=com.azure.monitor.query.implementation.metrics.models.MetricsResponse&text=MetricsResponse\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.monitor.query.implementation.metrics"
artifact: com.azure:azure-monitor-query:1.0.1
