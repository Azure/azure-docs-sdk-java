### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy
  id: RetryPolicy
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives
  children:
  - com.microsoft.azure.servicebus.primitives.RetryPolicy.RetryPolicy(java.lang.String)
  - com.microsoft.azure.servicebus.primitives.RetryPolicy.getDefault()
  - com.microsoft.azure.servicebus.primitives.RetryPolicy.getNextRetryInterval(java.lang.String,java.lang.Exception,java.time.Duration)
  - com.microsoft.azure.servicebus.primitives.RetryPolicy.getNoRetry()
  - com.microsoft.azure.servicebus.primitives.RetryPolicy.getRetryCount(java.lang.String)
  - com.microsoft.azure.servicebus.primitives.RetryPolicy.incrementRetryCount(java.lang.String)
  - com.microsoft.azure.servicebus.primitives.RetryPolicy.isRetryableException(java.lang.Exception)
  - com.microsoft.azure.servicebus.primitives.RetryPolicy.onGetNextRetryInterval(java.lang.String,java.lang.Exception,java.time.Duration,int)
  - com.microsoft.azure.servicebus.primitives.RetryPolicy.resetRetryCount(java.lang.String)
  - com.microsoft.azure.servicebus.primitives.RetryPolicy.toString()
  langs:
  - java
  name: RetryPolicy
  nameWithType: RetryPolicy
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy
  type: Class
  package: com.microsoft.azure.servicebus.primitives
  summary: Represents an abstraction of a policy for retrying messaging operations when an exception is encountered. Some exceptions encountered by a sender or receiver can be transient like ServerBusy and the operation will succeed if retried. Clients can specify a retry policy using <xref uid="com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder" data-throw-if-not-resolved="false">ConnectionStringBuilder</xref> which guides senders and receivers to automatically retry the failed operation before throwing the exception to the client application. Users should not implement this class, instead should use one of the provided implementations through <xref uid="com.microsoft.azure.servicebus.primitives.RetryPolicy.getDefault*" data-throw-if-not-resolved="false">#getDefault</xref> or <xref uid="com.microsoft.azure.servicebus.primitives.RetryPolicy.getNoRetry*" data-throw-if-not-resolved="false">#getNoRetry</xref>.
  syntax:
    content: public abstract class RetryPolicy
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.RetryPolicy(java.lang.String)
  id: RetryPolicy(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.RetryPolicy
  langs:
  - java
  name: RetryPolicy(String name)
  nameWithType: RetryPolicy.RetryPolicy(String name)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.RetryPolicy(String name)
  overload: com.microsoft.azure.servicebus.primitives.RetryPolicy.RetryPolicy*
  type: Constructor
  package: com.microsoft.azure.servicebus.primitives
  summary: Creates an instance of RetryPolicy with the given name.
  syntax:
    content: protected RetryPolicy(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: name of the policy
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.getDefault()
  id: getDefault()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.RetryPolicy
  langs:
  - java
  name: getDefault()
  nameWithType: RetryPolicy.getDefault()
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getDefault()
  overload: com.microsoft.azure.servicebus.primitives.RetryPolicy.getDefault*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  summary: Retry policy that provides exponentially increasing retry intervals with each successive failure. This policy is suitable for use by use most client applications and is also the default policy if no retry policy is specified.
  syntax:
    content: public static RetryPolicy getDefault()
    return:
      type: com.microsoft.azure.servicebus.primitives.RetryPolicy
      description: a retry policy that provides exponentially increasing retry intervals
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNextRetryInterval(java.lang.String,java.lang.Exception,java.time.Duration)
  id: getNextRetryInterval(java.lang.String,java.lang.Exception,java.time.Duration)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.RetryPolicy
  langs:
  - java
  name: getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)
  nameWithType: RetryPolicy.getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)
  overload: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNextRetryInterval*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  summary: Gets the interval after which nextRetry should be attempted, based on the last exception encountered and the remaining time before the operation times out.
  syntax:
    content: public Duration getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)
    parameters:
    - id: clientId
      type: java.lang.String
      description: id of the sender or receiver or client object that encountered the exception.
    - id: lastException
      type: java.lang.Exception
      description: last exception encountered
    - id: remainingTime
      type: java.time.Duration
      description: remainingTime to retry before the operation times out
    return:
      type: java.time.Duration
      description: duration after which the operation will be retried. Returns null when the operation should not retried.
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNoRetry()
  id: getNoRetry()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.RetryPolicy
  langs:
  - java
  name: getNoRetry()
  nameWithType: RetryPolicy.getNoRetry()
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNoRetry()
  overload: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNoRetry*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  summary: Gets a retry policy that doesn't retry any operations, effectively disabling retries. Clients can use this retry policy in case they do not want any operation automatically retried.
  syntax:
    content: public static RetryPolicy getNoRetry()
    return:
      type: com.microsoft.azure.servicebus.primitives.RetryPolicy
      description: a retry policy that doesn't retry any operations
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.getRetryCount(java.lang.String)
  id: getRetryCount(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.RetryPolicy
  langs:
  - java
  name: getRetryCount(String clientId)
  nameWithType: RetryPolicy.getRetryCount(String clientId)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getRetryCount(String clientId)
  overload: com.microsoft.azure.servicebus.primitives.RetryPolicy.getRetryCount*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: protected int getRetryCount(String clientId)
    parameters:
    - id: clientId
      type: java.lang.String
    return:
      type: int
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.incrementRetryCount(java.lang.String)
  id: incrementRetryCount(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.RetryPolicy
  langs:
  - java
  name: incrementRetryCount(String clientId)
  nameWithType: RetryPolicy.incrementRetryCount(String clientId)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.incrementRetryCount(String clientId)
  overload: com.microsoft.azure.servicebus.primitives.RetryPolicy.incrementRetryCount*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  summary: Increments the number of successive retry attempts made by a client.
  syntax:
    content: public void incrementRetryCount(String clientId)
    parameters:
    - id: clientId
      type: java.lang.String
      description: id of the client retrying a failed operation
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.isRetryableException(java.lang.Exception)
  id: isRetryableException(java.lang.Exception)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.RetryPolicy
  langs:
  - java
  name: isRetryableException(Exception exception)
  nameWithType: RetryPolicy.isRetryableException(Exception exception)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.isRetryableException(Exception exception)
  overload: com.microsoft.azure.servicebus.primitives.RetryPolicy.isRetryableException*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  summary: Determines if an exception is retry-able or not. Only transient exceptions should be retried.
  syntax:
    content: public static boolean isRetryableException(Exception exception)
    parameters:
    - id: exception
      type: java.lang.Exception
      description: exception encountered by an operation, to be determined if it is retry-able.
    return:
      type: boolean
      description: true if the exception is retry-able (like ServerBusy or other transient exception), else returns false
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.onGetNextRetryInterval(java.lang.String,java.lang.Exception,java.time.Duration,int)
  id: onGetNextRetryInterval(java.lang.String,java.lang.Exception,java.time.Duration,int)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.RetryPolicy
  langs:
  - java
  name: onGetNextRetryInterval(String clientId, Exception lastException, Duration remainingTime, int baseWaitTime)
  nameWithType: RetryPolicy.onGetNextRetryInterval(String clientId, Exception lastException, Duration remainingTime, int baseWaitTime)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.onGetNextRetryInterval(String clientId, Exception lastException, Duration remainingTime, int baseWaitTime)
  overload: com.microsoft.azure.servicebus.primitives.RetryPolicy.onGetNextRetryInterval*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  summary: Adjusts the interval after which nextRetry should be attempted, based on the last exception encountered, the remaining time before the operation times out and the minimum wait time before retry. Clients can override this method to specify a wait time based on the exception encountered.
  syntax:
    content: protected abstract Duration onGetNextRetryInterval(String clientId, Exception lastException, Duration remainingTime, int baseWaitTime)
    parameters:
    - id: clientId
      type: java.lang.String
      description: id of the sender or receiver or client object that encountered the exception.
    - id: lastException
      type: java.lang.Exception
      description: last exception encountered
    - id: remainingTime
      type: java.time.Duration
      description: remainingTime to retry before the operation times out
    - id: baseWaitTime
      type: int
      description: minimum wait time determined by the base retry policy. Overriding methods can return a different value.
    return:
      type: java.time.Duration
      description: duration after which the operation will be retried. Returns null when the operation should not retried
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.resetRetryCount(java.lang.String)
  id: resetRetryCount(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.RetryPolicy
  langs:
  - java
  name: resetRetryCount(String clientId)
  nameWithType: RetryPolicy.resetRetryCount(String clientId)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.resetRetryCount(String clientId)
  overload: com.microsoft.azure.servicebus.primitives.RetryPolicy.resetRetryCount*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  summary: Resets the number of retry attempts made by a client. This method is called by the client when retried operation succeeds.
  syntax:
    content: public void resetRetryCount(String clientId)
    parameters:
    - id: clientId
      type: java.lang.String
      description: id of the client that just retried a failed operation and succeeded.
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.toString()
  id: toString()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.RetryPolicy
  langs:
  - java
  name: toString()
  nameWithType: RetryPolicy.toString()
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.toString()
  overload: com.microsoft.azure.servicebus.primitives.RetryPolicy.toString*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.RetryPolicy*
  name: RetryPolicy
  nameWithType: RetryPolicy.RetryPolicy
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.RetryPolicy
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.incrementRetryCount*
  name: incrementRetryCount
  nameWithType: RetryPolicy.incrementRetryCount
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.incrementRetryCount
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.resetRetryCount*
  name: resetRetryCount
  nameWithType: RetryPolicy.resetRetryCount
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.resetRetryCount
  package: com.microsoft.azure.servicebus.primitives
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.isRetryableException*
  name: isRetryableException
  nameWithType: RetryPolicy.isRetryableException
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.isRetryableException
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.getDefault*
  name: getDefault
  nameWithType: RetryPolicy.getDefault
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getDefault
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNoRetry*
  name: getNoRetry
  nameWithType: RetryPolicy.getNoRetry
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNoRetry
  package: com.microsoft.azure.servicebus.primitives
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.getRetryCount*
  name: getRetryCount
  nameWithType: RetryPolicy.getRetryCount
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getRetryCount
  package: com.microsoft.azure.servicebus.primitives
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNextRetryInterval*
  name: getNextRetryInterval
  nameWithType: RetryPolicy.getNextRetryInterval
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNextRetryInterval
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.onGetNextRetryInterval*
  name: onGetNextRetryInterval
  nameWithType: RetryPolicy.onGetNextRetryInterval
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.onGetNextRetryInterval
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.toString*
  name: toString
  nameWithType: RetryPolicy.toString
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.toString
  package: com.microsoft.azure.servicebus.primitives
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
