### YamlMime:JavaType
uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties"
fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties"
name: "RedisUpdateProperties"
nameWithType: "RedisUpdateProperties"
summary: "Patchable properties of the redis cache."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties&text=RedisCommonProperties\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.disableAccessKeyAuthentication()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.disableAccessKeyAuthentication&text=disableAccessKeyAuthentication\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.enableNonSslPort()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.enableNonSslPort&text=enableNonSslPort\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.fromJson(com.azure.json.JsonReader)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.minimumTlsVersion()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.minimumTlsVersion&text=minimumTlsVersion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.publicNetworkAccess()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.publicNetworkAccess&text=publicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.redisConfiguration()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.redisConfiguration&text=redisConfiguration\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.redisVersion()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.redisVersion&text=redisVersion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.replicasPerMaster()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.replicasPerMaster&text=replicasPerMaster\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.replicasPerPrimary()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.replicasPerPrimary&text=replicasPerPrimary\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.shardCount()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.shardCount&text=shardCount\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.tenantSettings()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.tenantSettings&text=tenantSettings\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.toJson(com.azure.json.JsonWriter)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.updateChannel()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.updateChannel&text=updateChannel\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.validate()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.withDisableAccessKeyAuthentication(java.lang.Boolean)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.withDisableAccessKeyAuthentication&text=withDisableAccessKeyAuthentication\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.withEnableNonSslPort(java.lang.Boolean)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.withEnableNonSslPort&text=withEnableNonSslPort\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.withMinimumTlsVersion(com.azure.resourcemanager.redis.models.TlsVersion)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.withMinimumTlsVersion&text=withMinimumTlsVersion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.withPublicNetworkAccess(com.azure.resourcemanager.redis.models.PublicNetworkAccess)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.withPublicNetworkAccess&text=withPublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.withRedisConfiguration(com.azure.resourcemanager.redis.models.RedisConfiguration)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.withRedisConfiguration&text=withRedisConfiguration\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.withRedisVersion(java.lang.String)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.withRedisVersion&text=withRedisVersion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.withReplicasPerMaster(java.lang.Integer)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.withReplicasPerMaster&text=withReplicasPerMaster\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.withReplicasPerPrimary(java.lang.Integer)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.withReplicasPerPrimary&text=withReplicasPerPrimary\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.withShardCount(java.lang.Integer)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.withShardCount&text=withShardCount\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.withTenantSettings&text=withTenantSettings\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.withUpdateChannel(com.azure.resourcemanager.redis.models.UpdateChannel)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.withUpdateChannel&text=withUpdateChannel\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.withZonalAllocationPolicy(com.azure.resourcemanager.redis.models.ZonalAllocationPolicy)?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.withZonalAllocationPolicy&text=withZonalAllocationPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties.zonalAllocationPolicy()?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties.zonalAllocationPolicy&text=zonalAllocationPolicy\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **RedisUpdateProperties**</br> extends <xref href=\"com.azure.resourcemanager.redis.models.RedisCommonProperties?alt=com.azure.resourcemanager.redis.models.RedisCommonProperties&text=RedisCommonProperties\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.RedisUpdateProperties()"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.RedisUpdateProperties()"
  name: "RedisUpdateProperties()"
  nameWithType: "RedisUpdateProperties.RedisUpdateProperties()"
  summary: "Creates an instance of Redis<wbr>Update<wbr>Properties class."
  syntax: "public RedisUpdateProperties()"
  desc: "Creates an instance of RedisUpdateProperties class."
methods:
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "RedisUpdateProperties.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Redis<wbr>Update<wbr>Properties from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RedisUpdateProperties fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the RedisUpdateProperties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of RedisUpdateProperties from the JsonReader."
  returns:
    description: "An instance of RedisUpdateProperties if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.sku()"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.sku()"
  name: "sku()"
  nameWithType: "RedisUpdateProperties.sku()"
  summary: "Get the sku property: The SKU of the Redis cache to deploy."
  syntax: "public Sku sku()"
  desc: "Get the sku property: The SKU of the Redis cache to deploy."
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.Sku?alt=com.azure.resourcemanager.redis.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "RedisUpdateProperties.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.validate()"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.validate()"
  name: "validate()"
  nameWithType: "RedisUpdateProperties.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withDisableAccessKeyAuthentication(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withDisableAccessKeyAuthentication(Boolean disableAccessKeyAuthentication)"
  name: "withDisableAccessKeyAuthentication(Boolean disableAccessKeyAuthentication)"
  nameWithType: "RedisUpdateProperties.withDisableAccessKeyAuthentication(Boolean disableAccessKeyAuthentication)"
  summary: "Set the disable<wbr>Access<wbr>Key<wbr>Authentication property: Authentication to Redis through access keys is disabled when set as true."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.withDisableAccessKeyAuthentication(java.lang.Boolean)"
  parameters:
  - name: "disableAccessKeyAuthentication"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public RedisUpdateProperties withDisableAccessKeyAuthentication(Boolean disableAccessKeyAuthentication)"
  desc: "Set the disableAccessKeyAuthentication property: Authentication to Redis through access keys is disabled when set as true. Default value is false."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withEnableNonSslPort(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withEnableNonSslPort(Boolean enableNonSslPort)"
  name: "withEnableNonSslPort(Boolean enableNonSslPort)"
  nameWithType: "RedisUpdateProperties.withEnableNonSslPort(Boolean enableNonSslPort)"
  summary: "Set the enable<wbr>Non<wbr>Ssl<wbr>Port property: Specifies whether the non-ssl Redis server port (6379) is enabled."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.withEnableNonSslPort(java.lang.Boolean)"
  parameters:
  - name: "enableNonSslPort"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public RedisUpdateProperties withEnableNonSslPort(Boolean enableNonSslPort)"
  desc: "Set the enableNonSslPort property: Specifies whether the non-ssl Redis server port (6379) is enabled."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withMinimumTlsVersion(com.azure.resourcemanager.redis.models.TlsVersion)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withMinimumTlsVersion(TlsVersion minimumTlsVersion)"
  name: "withMinimumTlsVersion(TlsVersion minimumTlsVersion)"
  nameWithType: "RedisUpdateProperties.withMinimumTlsVersion(TlsVersion minimumTlsVersion)"
  summary: "Set the minimum<wbr>Tls<wbr>Version property: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.withMinimumTlsVersion(com.azure.resourcemanager.redis.models.TlsVersion)"
  parameters:
  - name: "minimumTlsVersion"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.TlsVersion?alt=com.azure.resourcemanager.redis.models.TlsVersion&text=TlsVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisUpdateProperties withMinimumTlsVersion(TlsVersion minimumTlsVersion)"
  desc: "Set the minimumTlsVersion property: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withPublicNetworkAccess(com.azure.resourcemanager.redis.models.PublicNetworkAccess)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  name: "withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  nameWithType: "RedisUpdateProperties.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  summary: "Set the public<wbr>Network<wbr>Access property: Whether or not public endpoint access is allowed for this cache."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.withPublicNetworkAccess(com.azure.resourcemanager.redis.models.PublicNetworkAccess)"
  parameters:
  - name: "publicNetworkAccess"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.PublicNetworkAccess?alt=com.azure.resourcemanager.redis.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisUpdateProperties withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  desc: "Set the publicNetworkAccess property: Whether or not public endpoint access is allowed for this cache. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withRedisConfiguration(com.azure.resourcemanager.redis.models.RedisConfiguration)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withRedisConfiguration(RedisConfiguration redisConfiguration)"
  name: "withRedisConfiguration(RedisConfiguration redisConfiguration)"
  nameWithType: "RedisUpdateProperties.withRedisConfiguration(RedisConfiguration redisConfiguration)"
  summary: "Set the redis<wbr>Configuration property: All Redis Settings."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.withRedisConfiguration(com.azure.resourcemanager.redis.models.RedisConfiguration)"
  parameters:
  - name: "redisConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.RedisConfiguration?alt=com.azure.resourcemanager.redis.models.RedisConfiguration&text=RedisConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisUpdateProperties withRedisConfiguration(RedisConfiguration redisConfiguration)"
  desc: "Set the redisConfiguration property: All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta, maxmemory-policy,notify-keyspace-events, aof-backup-enabled, aof-storage-connection-string-0, aof-storage-connection-string-1 etc."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withRedisVersion(java.lang.String)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withRedisVersion(String redisVersion)"
  name: "withRedisVersion(String redisVersion)"
  nameWithType: "RedisUpdateProperties.withRedisVersion(String redisVersion)"
  summary: "Set the redis<wbr>Version property: Redis version."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.withRedisVersion(java.lang.String)"
  parameters:
  - name: "redisVersion"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public RedisUpdateProperties withRedisVersion(String redisVersion)"
  desc: "Set the redisVersion property: Redis version. This should be in the form 'major\\[.minor\\]' (only 'major' is required) or the value 'latest' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is 'latest'."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withReplicasPerMaster(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withReplicasPerMaster(Integer replicasPerMaster)"
  name: "withReplicasPerMaster(Integer replicasPerMaster)"
  nameWithType: "RedisUpdateProperties.withReplicasPerMaster(Integer replicasPerMaster)"
  summary: "Set the replicas<wbr>Per<wbr>Master property: The number of replicas to be created per primary."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.withReplicasPerMaster(java.lang.Integer)"
  parameters:
  - name: "replicasPerMaster"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public RedisUpdateProperties withReplicasPerMaster(Integer replicasPerMaster)"
  desc: "Set the replicasPerMaster property: The number of replicas to be created per primary."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withReplicasPerPrimary(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withReplicasPerPrimary(Integer replicasPerPrimary)"
  name: "withReplicasPerPrimary(Integer replicasPerPrimary)"
  nameWithType: "RedisUpdateProperties.withReplicasPerPrimary(Integer replicasPerPrimary)"
  summary: "Set the replicas<wbr>Per<wbr>Primary property: The number of replicas to be created per primary."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.withReplicasPerPrimary(java.lang.Integer)"
  parameters:
  - name: "replicasPerPrimary"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public RedisUpdateProperties withReplicasPerPrimary(Integer replicasPerPrimary)"
  desc: "Set the replicasPerPrimary property: The number of replicas to be created per primary."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withShardCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withShardCount(Integer shardCount)"
  name: "withShardCount(Integer shardCount)"
  nameWithType: "RedisUpdateProperties.withShardCount(Integer shardCount)"
  summary: "Set the shard<wbr>Count property: The number of shards to be created on a Premium Cluster Cache."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.withShardCount(java.lang.Integer)"
  parameters:
  - name: "shardCount"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public RedisUpdateProperties withShardCount(Integer shardCount)"
  desc: "Set the shardCount property: The number of shards to be created on a Premium Cluster Cache."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withSku(com.azure.resourcemanager.redis.models.Sku)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withSku(Sku sku)"
  name: "withSku(Sku sku)"
  nameWithType: "RedisUpdateProperties.withSku(Sku sku)"
  summary: "Set the sku property: The SKU of the Redis cache to deploy."
  parameters:
  - description: "the sku value to set."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.Sku?alt=com.azure.resourcemanager.redis.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisUpdateProperties withSku(Sku sku)"
  desc: "Set the sku property: The SKU of the Redis cache to deploy."
  returns:
    description: "the RedisUpdateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withTenantSettings(Map<String,String> tenantSettings)"
  name: "withTenantSettings(Map<String,String> tenantSettings)"
  nameWithType: "RedisUpdateProperties.withTenantSettings(Map<String,String> tenantSettings)"
  summary: "Set the tenant<wbr>Settings property: A dictionary of tenant settings."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tenantSettings"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public RedisUpdateProperties withTenantSettings(Map<String,String> tenantSettings)"
  desc: "Set the tenantSettings property: A dictionary of tenant settings."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withUpdateChannel(com.azure.resourcemanager.redis.models.UpdateChannel)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withUpdateChannel(UpdateChannel updateChannel)"
  name: "withUpdateChannel(UpdateChannel updateChannel)"
  nameWithType: "RedisUpdateProperties.withUpdateChannel(UpdateChannel updateChannel)"
  summary: "Set the update<wbr>Channel property: Optional: Specifies the update channel for the monthly Redis updates your Redis Cache will receive."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.withUpdateChannel(com.azure.resourcemanager.redis.models.UpdateChannel)"
  parameters:
  - name: "updateChannel"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.UpdateChannel?alt=com.azure.resourcemanager.redis.models.UpdateChannel&text=UpdateChannel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisUpdateProperties withUpdateChannel(UpdateChannel updateChannel)"
  desc: "Set the updateChannel property: Optional: Specifies the update channel for the monthly Redis updates your Redis Cache will receive. Caches using 'Preview' update channel get latest Redis updates at least 4 weeks ahead of 'Stable' channel caches. Default value is 'Stable'."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withZonalAllocationPolicy(com.azure.resourcemanager.redis.models.ZonalAllocationPolicy)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties.withZonalAllocationPolicy(ZonalAllocationPolicy zonalAllocationPolicy)"
  name: "withZonalAllocationPolicy(ZonalAllocationPolicy zonalAllocationPolicy)"
  nameWithType: "RedisUpdateProperties.withZonalAllocationPolicy(ZonalAllocationPolicy zonalAllocationPolicy)"
  summary: "Set the zonal<wbr>Allocation<wbr>Policy property: Optional: Specifies how availability zones are allocated to the Redis cache."
  overridden: "com.azure.resourcemanager.redis.models.RedisCommonProperties.withZonalAllocationPolicy(com.azure.resourcemanager.redis.models.ZonalAllocationPolicy)"
  parameters:
  - name: "zonalAllocationPolicy"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.ZonalAllocationPolicy?alt=com.azure.resourcemanager.redis.models.ZonalAllocationPolicy&text=ZonalAllocationPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisUpdateProperties withZonalAllocationPolicy(ZonalAllocationPolicy zonalAllocationPolicy)"
  desc: "Set the zonalAllocationPolicy property: Optional: Specifies how availability zones are allocated to the Redis cache. 'Automatic' enables zone redundancy and Azure will automatically select zones based on regional availability and capacity. 'UserDefined' will select availability zones passed in by you using the 'zones' parameter. 'NoZones' will produce a non-zonal cache. If 'zonalAllocationPolicy' is not passed, it will be set to 'UserDefined' when zones are passed in, otherwise, it will be set to 'Automatic' in regions where zones are supported and 'NoZones' in regions where zones are not supported."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisUpdateProperties&text=RedisUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Patchable properties of the redis cache."
metadata: {}
package: "com.azure.resourcemanager.redis.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.50.0
