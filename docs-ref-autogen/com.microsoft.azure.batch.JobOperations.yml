### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.batch.IInheritedBehaviors?alt=com.microsoft.azure.batch.IInheritedBehaviors&text=IInheritedBehaviors" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.JobOperations.createJob(JobAddParameter job)
  name: createJob(JobAddParameter job)
  nameWithType: JobOperations.createJob(JobAddParameter job)
  parameters:
  - description: <p>The job to be added. </p>
    name: job
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Adds a job to the Batch account.</p>

    <p></p>
  syntax: public void createJob(JobAddParameter job)
  uid: com.microsoft.azure.batch.JobOperations.createJob(JobAddParameter)
- fullName: com.microsoft.azure.batch.JobOperations.createJob(JobAddParameter job, Iterable<BatchClientBehavior> additionalBehaviors)
  name: createJob(JobAddParameter job, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.createJob(JobAddParameter job, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The job to be added. </p>
    name: job
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Adds a job to the Batch account.</p>

    <p></p>
  syntax: public void createJob(JobAddParameter job, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.createJob(JobAddParameter,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.createJob(String jobId, PoolInformation poolInfo)
  name: createJob(String jobId, PoolInformation poolInfo)
  nameWithType: JobOperations.createJob(String jobId, PoolInformation poolInfo)
  parameters:
  - description: <p>The ID of the job to be added. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies how a job should be assigned to a pool. </p>
    name: poolInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Adds a job to the Batch account.</p>

    <p></p>
  syntax: public void createJob(String jobId, PoolInformation poolInfo)
  uid: com.microsoft.azure.batch.JobOperations.createJob(String,PoolInformation)
- fullName: com.microsoft.azure.batch.JobOperations.createJob(String jobId, PoolInformation poolInfo, Iterable<BatchClientBehavior> additionalBehaviors)
  name: createJob(String jobId, PoolInformation poolInfo, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.createJob(String jobId, PoolInformation poolInfo, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job to be added. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies how a job should be assigned to a pool. </p>
    name: poolInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Adds a job to the Batch account.</p>

    <p></p>
  syntax: public void createJob(String jobId, PoolInformation poolInfo, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.createJob(String,PoolInformation,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.customBehaviors()
  name: customBehaviors()
  nameWithType: JobOperations.customBehaviors()
  overridden: com.microsoft.azure.batch.IInheritedBehaviors.customBehaviors()
  returns:
    description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances. </p>
    type: Collection&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a collection of behaviors that modify or customize requests to the Batch service.</p>

    <p></p>
  syntax: public Collection<BatchClientBehavior> customBehaviors()
  uid: com.microsoft.azure.batch.JobOperations.customBehaviors()
- fullName: com.microsoft.azure.batch.JobOperations.deleteJob(String jobId)
  name: deleteJob(String jobId)
  nameWithType: JobOperations.deleteJob(String jobId)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified job.</p>

    <p></p>
  syntax: public void deleteJob(String jobId)
  uid: com.microsoft.azure.batch.JobOperations.deleteJob(String)
- fullName: com.microsoft.azure.batch.JobOperations.deleteJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  name: deleteJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.deleteJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified job.</p>

    <p></p>
  syntax: public void deleteJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.deleteJob(String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.disableJob(String jobId, DisableJobOption disableJobOption)
  name: disableJob(String jobId, DisableJobOption disableJobOption)
  nameWithType: JobOperations.disableJob(String jobId, DisableJobOption disableJobOption)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies what to do with running tasks associated with the job. </p>
    name: disableJobOption
    type: <xref href="com.microsoft.azure.batch.protocol.models.DisableJobOption?alt=com.microsoft.azure.batch.protocol.models.DisableJobOption&text=DisableJobOption" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Disables the specified job. Disabled jobs do not run new tasks, but may be re-enabled later.</p>

    <p></p>
  syntax: public void disableJob(String jobId, DisableJobOption disableJobOption)
  uid: com.microsoft.azure.batch.JobOperations.disableJob(String,DisableJobOption)
- fullName: com.microsoft.azure.batch.JobOperations.disableJob(String jobId, DisableJobOption disableJobOption, Iterable<BatchClientBehavior> additionalBehaviors)
  name: disableJob(String jobId, DisableJobOption disableJobOption, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.disableJob(String jobId, DisableJobOption disableJobOption, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies what to do with running tasks associated with the job. </p>
    name: disableJobOption
    type: <xref href="com.microsoft.azure.batch.protocol.models.DisableJobOption?alt=com.microsoft.azure.batch.protocol.models.DisableJobOption&text=DisableJobOption" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Disables the specified job. Disabled jobs do not run new tasks, but may be re-enabled later.</p>

    <p></p>
  syntax: public void disableJob(String jobId, DisableJobOption disableJobOption, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.disableJob(String,DisableJobOption,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.enableJob(String jobId)
  name: enableJob(String jobId)
  nameWithType: JobOperations.enableJob(String jobId)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Enables the specified job, allowing new tasks to run.</p>

    <p></p>
  syntax: public void enableJob(String jobId)
  uid: com.microsoft.azure.batch.JobOperations.enableJob(String)
- fullName: com.microsoft.azure.batch.JobOperations.enableJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  name: enableJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.enableJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Enables the specified job, allowing new tasks to run.</p>

    <p></p>
  syntax: public void enableJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.enableJob(String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics()
  name: getAllJobsLifetimeStatistics()
  nameWithType: JobOperations.getAllJobsLifetimeStatistics()
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>The aggregated job statistics. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the current account.</p>

    <p></p>
  syntax: public JobStatistics getAllJobsLifetimeStatistics()
  uid: com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics()
- fullName: com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics(Iterable<BatchClientBehavior> additionalBehaviors)
  name: getAllJobsLifetimeStatistics(Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.getAllJobsLifetimeStatistics(Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>The aggregated job statistics. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the current account.</p>

    <p></p>
  syntax: public JobStatistics getAllJobsLifetimeStatistics(Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics(Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.getJob(String jobId)
  name: getJob(String jobId)
  nameWithType: JobOperations.getJob(String jobId)
  parameters:
  - description: <p>The ID of the job to get. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudJob"></xref> containing information about the specified Azure Batch job. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the specified <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudJob"></xref>.</p>

    <p></p>
  syntax: public CloudJob getJob(String jobId)
  uid: com.microsoft.azure.batch.JobOperations.getJob(String)
- fullName: com.microsoft.azure.batch.JobOperations.getJob(String jobId, DetailLevel detailLevel)
  name: getJob(String jobId, DetailLevel detailLevel)
  nameWithType: JobOperations.getJob(String jobId, DetailLevel detailLevel)
  parameters:
  - description: <p>The ID of the job to get. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudJob"></xref> containing information about the specified Azure Batch job. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the specified <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudJob"></xref>.</p>

    <p></p>
  syntax: public CloudJob getJob(String jobId, DetailLevel detailLevel)
  uid: com.microsoft.azure.batch.JobOperations.getJob(String,DetailLevel)
- fullName: com.microsoft.azure.batch.JobOperations.getJob(String jobId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  name: getJob(String jobId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.getJob(String jobId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job to get. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudJob"></xref> containing information about the specified Azure Batch job. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the specified <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudJob"></xref>.</p>

    <p></p>
  syntax: public CloudJob getJob(String jobId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.getJob(String,DetailLevel,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.getTaskCounts(String jobId)
  name: getTaskCounts(String jobId)
  nameWithType: JobOperations.getTaskCounts(String jobId)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>the TaskCounts object if successful. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskCounts?alt=com.microsoft.azure.batch.protocol.models.TaskCounts&text=TaskCounts" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>

    <p></p>
  syntax: public TaskCounts getTaskCounts(String jobId)
  uid: com.microsoft.azure.batch.JobOperations.getTaskCounts(String)
- fullName: com.microsoft.azure.batch.JobOperations.getTaskCounts(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  name: getTaskCounts(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.getTaskCounts(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>the TaskCounts object if successful. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskCounts?alt=com.microsoft.azure.batch.protocol.models.TaskCounts&text=TaskCounts" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>

    <p></p>
  syntax: public TaskCounts getTaskCounts(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.getTaskCounts(String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.listJobs()
  name: listJobs()
  nameWithType: JobOperations.listJobs()
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudJob"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="jobs"></xref> in the Batch account.</p>

    <p></p>
  syntax: public PagedList<CloudJob> listJobs()
  uid: com.microsoft.azure.batch.JobOperations.listJobs()
- fullName: com.microsoft.azure.batch.JobOperations.listJobs(DetailLevel detailLevel)
  name: listJobs(DetailLevel detailLevel)
  nameWithType: JobOperations.listJobs(DetailLevel detailLevel)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudJob"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="jobs"></xref> in the Batch account.</p>

    <p></p>
  syntax: public PagedList<CloudJob> listJobs(DetailLevel detailLevel)
  uid: com.microsoft.azure.batch.JobOperations.listJobs(DetailLevel)
- fullName: com.microsoft.azure.batch.JobOperations.listJobs(DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  name: listJobs(DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.listJobs(DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudJob"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="jobs"></xref> in the Batch account.</p>

    <p></p>
  syntax: public PagedList<CloudJob> listJobs(DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.listJobs(DetailLevel,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.listJobs(String jobScheduleId)
  name: listJobs(String jobScheduleId)
  nameWithType: JobOperations.listJobs(String jobScheduleId)
  parameters:
  - description: <p>The ID of job schedule. </p>
    name: jobScheduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudJob"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="jobs"></xref> created under the specified job schedule.</p>

    <p></p>
  syntax: public PagedList<CloudJob> listJobs(String jobScheduleId)
  uid: com.microsoft.azure.batch.JobOperations.listJobs(String)
- fullName: com.microsoft.azure.batch.JobOperations.listJobs(String jobScheduleId, DetailLevel detailLevel)
  name: listJobs(String jobScheduleId, DetailLevel detailLevel)
  nameWithType: JobOperations.listJobs(String jobScheduleId, DetailLevel detailLevel)
  parameters:
  - description: <p>The ID of job schedule. </p>
    name: jobScheduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudJob"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="jobs"></xref> created under the specified job schedule.</p>

    <p></p>
  syntax: public PagedList<CloudJob> listJobs(String jobScheduleId, DetailLevel detailLevel)
  uid: com.microsoft.azure.batch.JobOperations.listJobs(String,DetailLevel)
- fullName: com.microsoft.azure.batch.JobOperations.listJobs(String jobScheduleId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  name: listJobs(String jobScheduleId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.listJobs(String jobScheduleId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of jobSchedule. </p>
    name: jobScheduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudJob"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="jobs"></xref> created under the specified jobSchedule.</p>

    <p></p>
  syntax: public PagedList<CloudJob> listJobs(String jobScheduleId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.listJobs(String,DetailLevel,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus(String jobId)
  name: listPreparationAndReleaseTaskStatus(String jobId)
  nameWithType: JobOperations.listPreparationAndReleaseTaskStatus(String jobId)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="JobPreparationAndReleaseTaskExecutionInformation"></xref> instances. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the status of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="JobPreparationTask"></xref> and <xref uid="" data-throw-if-not-resolved="false" data-raw-source="JobReleaseTask"></xref> tasks for the specified job.</p>

    <p></p>
  syntax: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(String jobId)
  uid: com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus(String)
- fullName: com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  name: listPreparationAndReleaseTaskStatus(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.listPreparationAndReleaseTaskStatus(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="JobPreparationAndReleaseTaskExecutionInformation"></xref> instances. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the status of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="JobPreparationTask"></xref> and <xref uid="" data-throw-if-not-resolved="false" data-raw-source="JobReleaseTask"></xref> tasks for the specified job.</p>

    <p></p>
  syntax: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus(String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.patchJob(String jobId, JobPatchParameter jobPatchParameter)
  name: patchJob(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: JobOperations.patchJob(String jobId, JobPatchParameter jobPatchParameter)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The set of changes to be made to a job. </p>
    name: jobPatchParameter
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified job. This method only replaces the properties specified with non-null values.</p>

    <p></p>
  syntax: public void patchJob(String jobId, JobPatchParameter jobPatchParameter)
  uid: com.microsoft.azure.batch.JobOperations.patchJob(String,JobPatchParameter)
- fullName: com.microsoft.azure.batch.JobOperations.patchJob(String jobId, JobPatchParameter jobPatchParameter, Iterable<BatchClientBehavior> additionalBehaviors)
  name: patchJob(String jobId, JobPatchParameter jobPatchParameter, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.patchJob(String jobId, JobPatchParameter jobPatchParameter, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameter to update the job. </p>
    name: jobPatchParameter
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified job. This method only replaces the properties specified with non-null values.</p>

    <p></p>
  syntax: public void patchJob(String jobId, JobPatchParameter jobPatchParameter, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.patchJob(String,JobPatchParameter,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.patchJob(String jobId, OnAllTasksComplete onAllTasksComplete)
  name: patchJob(String jobId, OnAllTasksComplete onAllTasksComplete)
  nameWithType: JobOperations.patchJob(String jobId, OnAllTasksComplete onAllTasksComplete)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies an action the Batch service should take when all tasks in the job are in the completed state. </p>
    name: onAllTasksComplete
    type: <xref href="com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified job. This method only replaces the properties specified with non-null values.</p>

    <p></p>
  syntax: public void patchJob(String jobId, OnAllTasksComplete onAllTasksComplete)
  uid: com.microsoft.azure.batch.JobOperations.patchJob(String,OnAllTasksComplete)
- fullName: com.microsoft.azure.batch.JobOperations.patchJob(String jobId, PoolInformation poolInfo)
  name: patchJob(String jobId, PoolInformation poolInfo)
  nameWithType: JobOperations.patchJob(String jobId, PoolInformation poolInfo)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The pool on which the Batch service runs the job's tasks. You may change the pool for a job only when the job is disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job. If null, the job continues to run on its current pool. </p>
    name: poolInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified job. This method only replaces the properties specified with non-null values.</p>

    <p></p>
  syntax: public void patchJob(String jobId, PoolInformation poolInfo)
  uid: com.microsoft.azure.batch.JobOperations.patchJob(String,PoolInformation)
- fullName: com.microsoft.azure.batch.JobOperations.patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  name: patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  nameWithType: JobOperations.patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The pool on which the Batch service runs the job's tasks. You may change the pool for a job only when the job is disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job. If null, the job continues to run on its current pool. </p>
    name: poolInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation" data-throw-if-not-resolved="False"/>
  - description: <p>The priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If null, the priority of the job is left unchanged. </p>
    name: priority
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>The execution constraints for the job. If null, the existing execution constraints are left unchanged. </p>
    name: constraints
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies an action the Batch service should take when all tasks in the job are in the completed state. </p>
    name: onAllTasksComplete
    type: <xref href="com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete" data-throw-if-not-resolved="False"/>
  - description: <p>A list of name-value pairs associated with the job as metadata. If null, the existing job metadata is left unchanged. </p>
    name: metadata
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified job. This method only replaces the properties specified with non-null values.</p>

    <p></p>
  syntax: public void patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  uid: com.microsoft.azure.batch.JobOperations.patchJob(String,PoolInformation,Integer,JobConstraints,OnAllTasksComplete,List<MetadataItem>)
- fullName: com.microsoft.azure.batch.JobOperations.patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  name: patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The pool on which the Batch service runs the job's tasks. You may change the pool for a job only when the job is disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job. If null, the job continues to run on its current pool. </p>
    name: poolInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation" data-throw-if-not-resolved="False"/>
  - description: <p>The priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If null, the priority of the job is left unchanged. </p>
    name: priority
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>The execution constraints for the job. If null, the existing execution constraints are left unchanged. </p>
    name: constraints
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies an action the Batch service should take when all tasks in the job are in the completed state. </p>
    name: onAllTasksComplete
    type: <xref href="com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete" data-throw-if-not-resolved="False"/>
  - description: <p>A list of name-value pairs associated with the job as metadata. If null, the existing job metadata is left unchanged. </p>
    name: metadata
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified job. This method only replaces the properties specified with non-null values.</p>

    <p></p>
  syntax: public void patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.patchJob(String,PoolInformation,Integer,JobConstraints,OnAllTasksComplete,List<MetadataItem>,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.terminateJob(String jobId)
  name: terminateJob(String jobId)
  nameWithType: JobOperations.terminateJob(String jobId)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Terminates the specified job, marking it as completed.</p>

    <p></p>
  syntax: public void terminateJob(String jobId)
  uid: com.microsoft.azure.batch.JobOperations.terminateJob(String)
- fullName: com.microsoft.azure.batch.JobOperations.terminateJob(String jobId, String terminateReason)
  name: terminateJob(String jobId, String terminateReason)
  nameWithType: JobOperations.terminateJob(String jobId, String terminateReason)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The message to describe the reason the job has terminated. This text will appear when you call <xref uid="" data-throw-if-not-resolved="false" data-raw-source="JobExecutionInformation#terminateReason()"></xref>. </p>
    name: terminateReason
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Terminates the specified job, marking it as completed.</p>

    <p></p>
  syntax: public void terminateJob(String jobId, String terminateReason)
  uid: com.microsoft.azure.batch.JobOperations.terminateJob(String,String)
- fullName: com.microsoft.azure.batch.JobOperations.terminateJob(String jobId, String terminateReason, Iterable<BatchClientBehavior> additionalBehaviors)
  name: terminateJob(String jobId, String terminateReason, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.terminateJob(String jobId, String terminateReason, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The message to describe the reason the job has terminated. This text will appear when you call <xref uid="" data-throw-if-not-resolved="false" data-raw-source="JobExecutionInformation#terminateReason()"></xref>. </p>
    name: terminateReason
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Terminates the specified job, marking it as completed.</p>

    <p></p>
  syntax: public void terminateJob(String jobId, String terminateReason, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.terminateJob(String,String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  name: updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  nameWithType: JobOperations.updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The pool on which the Batch service runs the job's tasks. You may change the pool for a job only when the job is disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job. </p>
    name: poolInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation" data-throw-if-not-resolved="False"/>
  - description: <p>The priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If null, it is set to the default value 0. </p>
    name: priority
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>The execution constraints for the job. If null, the constraints are cleared. </p>
    name: constraints
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies an action the Batch service should take when all tasks in the job are in the completed state. </p>
    name: onAllTasksComplete
    type: <xref href="com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete" data-throw-if-not-resolved="False"/>
  - description: <p>A list of name-value pairs associated with the job as metadata. If null, it takes the default value of an empty list; in effect, any existing metadata is deleted. </p>
    name: metadata
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified job. This method performs a full replace of all updatable properties of the job. For example, if the constraints parameter is null, then the Batch service removes the job's existing constraints and replaces them with the default constraints.</p>

    <p></p>
  syntax: public void updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  uid: com.microsoft.azure.batch.JobOperations.updateJob(String,PoolInformation,Integer,JobConstraints,OnAllTasksComplete,List<MetadataItem>)
- fullName: com.microsoft.azure.batch.JobOperations.updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  name: updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The pool on which the Batch service runs the job's tasks. You may change the pool for a job only when the job is disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job. </p>
    name: poolInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation" data-throw-if-not-resolved="False"/>
  - description: <p>The priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If null, it is set to the default value 0. </p>
    name: priority
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>The execution constraints for the job. If null, the constraints are cleared. </p>
    name: constraints
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies an action the Batch service should take when all tasks in the job are in the completed state. </p>
    name: onAllTasksComplete
    type: <xref href="com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete" data-throw-if-not-resolved="False"/>
  - description: <p>A list of name-value pairs associated with the job as metadata. If null, it takes the default value of an empty list; in effect, any existing metadata is deleted. </p>
    name: metadata
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified job. This method performs a full replace of all updatable properties of the job. For example, if the constraints parameter is null, then the Batch service removes the job's existing constraints and replaces them with the default constraints.</p>

    <p></p>
  syntax: public void updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.JobOperations.updateJob(String,PoolInformation,Integer,JobConstraints,OnAllTasksComplete,List<MetadataItem>,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.JobOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  name: withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  nameWithType: JobOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  overridden: com.microsoft.azure.batch.IInheritedBehaviors.withCustomBehaviors(Collection<BatchClientBehavior>)
  parameters:
  - description: <p>The collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances. </p>
    name: behaviors
    type: Collection&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>The current instance. </p>
    type: <xref href="com.microsoft.azure.batch.IInheritedBehaviors?alt=com.microsoft.azure.batch.IInheritedBehaviors&text=IInheritedBehaviors" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets a collection of behaviors that modify or customize requests to the Batch service.</p>

    <p></p>
  syntax: public IInheritedBehaviors withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  uid: com.microsoft.azure.batch.JobOperations.withCustomBehaviors(Collection<BatchClientBehavior>)
nameWithType: JobOperations
syntax: public class JobOperations implements IInheritedBehaviors
type: class
uid: com.microsoft.azure.batch.JobOperations
fullName: com.microsoft.azure.batch.JobOperations
name: JobOperations
package: com.microsoft.azure.batch
summary: <p>Performs job-related operations on an Azure Batch account. </p>
metadata: {}
