### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.JobOperations
  id: JobOperations
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch
  children:
  - com.microsoft.azure.batch.JobOperations.createJob(com.microsoft.azure.batch.protocol.models.JobAddParameter)
  - com.microsoft.azure.batch.JobOperations.createJob(com.microsoft.azure.batch.protocol.models.JobAddParameter,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.createJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation)
  - com.microsoft.azure.batch.JobOperations.createJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.customBehaviors()
  - com.microsoft.azure.batch.JobOperations.deleteJob(java.lang.String)
  - com.microsoft.azure.batch.JobOperations.deleteJob(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.disableJob(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)
  - com.microsoft.azure.batch.JobOperations.disableJob(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.enableJob(java.lang.String)
  - com.microsoft.azure.batch.JobOperations.enableJob(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics()
  - com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics(java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.getJob(java.lang.String)
  - com.microsoft.azure.batch.JobOperations.getJob(java.lang.String,com.microsoft.azure.batch.DetailLevel)
  - com.microsoft.azure.batch.JobOperations.getJob(java.lang.String,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.getTaskCounts(java.lang.String)
  - com.microsoft.azure.batch.JobOperations.getTaskCounts(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.listJobs()
  - com.microsoft.azure.batch.JobOperations.listJobs(com.microsoft.azure.batch.DetailLevel)
  - com.microsoft.azure.batch.JobOperations.listJobs(com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.listJobs(java.lang.String)
  - com.microsoft.azure.batch.JobOperations.listJobs(java.lang.String,com.microsoft.azure.batch.DetailLevel)
  - com.microsoft.azure.batch.JobOperations.listJobs(java.lang.String,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus(java.lang.String)
  - com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)
  - com.microsoft.azure.batch.JobOperations.patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete)
  - com.microsoft.azure.batch.JobOperations.patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation)
  - com.microsoft.azure.batch.JobOperations.patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Integer,com.microsoft.azure.batch.protocol.models.JobConstraints,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete,java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  - com.microsoft.azure.batch.JobOperations.patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Integer,com.microsoft.azure.batch.protocol.models.JobConstraints,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete,java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.terminateJob(java.lang.String)
  - com.microsoft.azure.batch.JobOperations.terminateJob(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.JobOperations.terminateJob(java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.updateJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Integer,com.microsoft.azure.batch.protocol.models.JobConstraints,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete,java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  - com.microsoft.azure.batch.JobOperations.updateJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Integer,com.microsoft.azure.batch.protocol.models.JobConstraints,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete,java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.JobOperations.withCustomBehaviors(java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  langs:
  - java
  name: JobOperations
  nameWithType: JobOperations
  fullName: com.microsoft.azure.batch.JobOperations
  type: Class
  package: com.microsoft.azure.batch
  summary: Performs job-related operations on an Azure Batch account.
  syntax:
    content: public class JobOperations implements IInheritedBehaviors
  inheritance:
  - java.lang.Object
  implements:
  - com.microsoft.azure.batch.IInheritedBehaviors
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.JobOperations.JobOperations(com.microsoft.azure.batch.BatchClient,java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  id: JobOperations(com.microsoft.azure.batch.BatchClient,java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: JobOperations(BatchClient batchClient, Collection<BatchClientBehavior> inheritedBehaviors)
  nameWithType: JobOperations.JobOperations(BatchClient batchClient, Collection<BatchClientBehavior> inheritedBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.JobOperations(BatchClient batchClient, Collection<BatchClientBehavior> inheritedBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.JobOperations*
  type: Constructor
  package: com.microsoft.azure.batch
  syntax:
    content: " JobOperations(BatchClient batchClient, Collection<BatchClientBehavior> inheritedBehaviors)"
    parameters:
    - id: batchClient
      type: com.microsoft.azure.batch.BatchClient
    - id: inheritedBehaviors
      type: java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>
- uid: com.microsoft.azure.batch.JobOperations.createJob(com.microsoft.azure.batch.protocol.models.JobAddParameter)
  id: createJob(com.microsoft.azure.batch.protocol.models.JobAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: createJob(JobAddParameter job)
  nameWithType: JobOperations.createJob(JobAddParameter job)
  fullName: com.microsoft.azure.batch.JobOperations.createJob(JobAddParameter job)
  overload: com.microsoft.azure.batch.JobOperations.createJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Adds a job to the Batch account.
  syntax:
    content: public void createJob(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: The job to be added.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.createJob(com.microsoft.azure.batch.protocol.models.JobAddParameter,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: createJob(com.microsoft.azure.batch.protocol.models.JobAddParameter,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: createJob(JobAddParameter job, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.createJob(JobAddParameter job, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.createJob(JobAddParameter job, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.createJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Adds a job to the Batch account.
  syntax:
    content: public void createJob(JobAddParameter job, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: The job to be added.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.createJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation)
  id: createJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: createJob(String jobId, PoolInformation poolInfo)
  nameWithType: JobOperations.createJob(String jobId, PoolInformation poolInfo)
  fullName: com.microsoft.azure.batch.JobOperations.createJob(String jobId, PoolInformation poolInfo)
  overload: com.microsoft.azure.batch.JobOperations.createJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Adds a job to the Batch account.
  syntax:
    content: public void createJob(String jobId, PoolInformation poolInfo)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job to be added.
    - id: poolInfo
      type: com.microsoft.azure.batch.protocol.models.PoolInformation
      description: Specifies how a job should be assigned to a pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.createJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: createJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: createJob(String jobId, PoolInformation poolInfo, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.createJob(String jobId, PoolInformation poolInfo, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.createJob(String jobId, PoolInformation poolInfo, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.createJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Adds a job to the Batch account.
  syntax:
    content: public void createJob(String jobId, PoolInformation poolInfo, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job to be added.
    - id: poolInfo
      type: com.microsoft.azure.batch.protocol.models.PoolInformation
      description: Specifies how a job should be assigned to a pool.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.customBehaviors()
  id: customBehaviors()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: customBehaviors()
  nameWithType: JobOperations.customBehaviors()
  fullName: com.microsoft.azure.batch.JobOperations.customBehaviors()
  overload: com.microsoft.azure.batch.JobOperations.customBehaviors*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets a collection of behaviors that modify or customize requests to the Batch service.
  syntax:
    content: public Collection<BatchClientBehavior> customBehaviors()
    return:
      type: java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances.
- uid: com.microsoft.azure.batch.JobOperations.deleteJob(java.lang.String)
  id: deleteJob(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: deleteJob(String jobId)
  nameWithType: JobOperations.deleteJob(String jobId)
  fullName: com.microsoft.azure.batch.JobOperations.deleteJob(String jobId)
  overload: com.microsoft.azure.batch.JobOperations.deleteJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Deletes the specified job.
  syntax:
    content: public void deleteJob(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.deleteJob(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: deleteJob(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: deleteJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.deleteJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.deleteJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.deleteJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Deletes the specified job.
  syntax:
    content: public void deleteJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.disableJob(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)
  id: disableJob(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: disableJob(String jobId, DisableJobOption disableJobOption)
  nameWithType: JobOperations.disableJob(String jobId, DisableJobOption disableJobOption)
  fullName: com.microsoft.azure.batch.JobOperations.disableJob(String jobId, DisableJobOption disableJobOption)
  overload: com.microsoft.azure.batch.JobOperations.disableJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Disables the specified job. Disabled jobs do not run new tasks, but may be re-enabled later.
  syntax:
    content: public void disableJob(String jobId, DisableJobOption disableJobOption)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: disableJobOption
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: Specifies what to do with running tasks associated with the job.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.disableJob(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: disableJob(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: disableJob(String jobId, DisableJobOption disableJobOption, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.disableJob(String jobId, DisableJobOption disableJobOption, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.disableJob(String jobId, DisableJobOption disableJobOption, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.disableJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Disables the specified job. Disabled jobs do not run new tasks, but may be re-enabled later.
  syntax:
    content: public void disableJob(String jobId, DisableJobOption disableJobOption, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: disableJobOption
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: Specifies what to do with running tasks associated with the job.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.enableJob(java.lang.String)
  id: enableJob(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: enableJob(String jobId)
  nameWithType: JobOperations.enableJob(String jobId)
  fullName: com.microsoft.azure.batch.JobOperations.enableJob(String jobId)
  overload: com.microsoft.azure.batch.JobOperations.enableJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Enables the specified job, allowing new tasks to run.
  syntax:
    content: public void enableJob(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.enableJob(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: enableJob(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: enableJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.enableJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.enableJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.enableJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Enables the specified job, allowing new tasks to run.
  syntax:
    content: public void enableJob(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics()
  id: getAllJobsLifetimeStatistics()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: getAllJobsLifetimeStatistics()
  nameWithType: JobOperations.getAllJobsLifetimeStatistics()
  fullName: com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics()
  overload: com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets lifetime summary statistics for all of the jobs in the current account.
  syntax:
    content: public JobStatistics getAllJobsLifetimeStatistics()
    return:
      type: com.microsoft.azure.batch.protocol.models.JobStatistics
      description: The aggregated job statistics.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics(java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: getAllJobsLifetimeStatistics(java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: getAllJobsLifetimeStatistics(Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.getAllJobsLifetimeStatistics(Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics(Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets lifetime summary statistics for all of the jobs in the current account.
  syntax:
    content: public JobStatistics getAllJobsLifetimeStatistics(Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
    return:
      type: com.microsoft.azure.batch.protocol.models.JobStatistics
      description: The aggregated job statistics.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.getJob(java.lang.String)
  id: getJob(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: getJob(String jobId)
  nameWithType: JobOperations.getJob(String jobId)
  fullName: com.microsoft.azure.batch.JobOperations.getJob(String jobId)
  overload: com.microsoft.azure.batch.JobOperations.getJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets the specified <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">CloudJob</xref>.
  syntax:
    content: public CloudJob getJob(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job to get.
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudJob
      description: A <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">CloudJob</xref> containing information about the specified Azure Batch job.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.getJob(java.lang.String,com.microsoft.azure.batch.DetailLevel)
  id: getJob(java.lang.String,com.microsoft.azure.batch.DetailLevel)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: getJob(String jobId, DetailLevel detailLevel)
  nameWithType: JobOperations.getJob(String jobId, DetailLevel detailLevel)
  fullName: com.microsoft.azure.batch.JobOperations.getJob(String jobId, DetailLevel detailLevel)
  overload: com.microsoft.azure.batch.JobOperations.getJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets the specified <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">CloudJob</xref>.
  syntax:
    content: public CloudJob getJob(String jobId, DetailLevel detailLevel)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job to get.
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for controlling which properties are retrieved from the service.
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudJob
      description: A <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">CloudJob</xref> containing information about the specified Azure Batch job.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.getJob(java.lang.String,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: getJob(java.lang.String,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: getJob(String jobId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.getJob(String jobId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.getJob(String jobId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.getJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets the specified <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">CloudJob</xref>.
  syntax:
    content: public CloudJob getJob(String jobId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job to get.
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudJob
      description: A <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">CloudJob</xref> containing information about the specified Azure Batch job.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.getTaskCounts(java.lang.String)
  id: getTaskCounts(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: getTaskCounts(String jobId)
  nameWithType: JobOperations.getTaskCounts(String jobId)
  fullName: com.microsoft.azure.batch.JobOperations.getTaskCounts(String jobId)
  overload: com.microsoft.azure.batch.JobOperations.getTaskCounts*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.
  syntax:
    content: public TaskCounts getTaskCounts(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskCounts
      description: the TaskCounts object if successful.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: thrown if the request is rejected by server
  - type: java.io.IOException
    description: thrown if the request is rejected by server
- uid: com.microsoft.azure.batch.JobOperations.getTaskCounts(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: getTaskCounts(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: getTaskCounts(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.getTaskCounts(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.getTaskCounts(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.getTaskCounts*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.
  syntax:
    content: public TaskCounts getTaskCounts(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskCounts
      description: the TaskCounts object if successful.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: thrown if the request is rejected by server
  - type: java.io.IOException
    description: thrown if the request is rejected by server
- uid: com.microsoft.azure.batch.JobOperations.listJobs()
  id: listJobs()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: listJobs()
  nameWithType: JobOperations.listJobs()
  fullName: com.microsoft.azure.batch.JobOperations.listJobs()
  overload: com.microsoft.azure.batch.JobOperations.listJobs*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">jobs</xref> in the Batch account.
  syntax:
    content: public PagedList<CloudJob> listJobs()
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">CloudJob</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.listJobs(com.microsoft.azure.batch.DetailLevel)
  id: listJobs(com.microsoft.azure.batch.DetailLevel)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: listJobs(DetailLevel detailLevel)
  nameWithType: JobOperations.listJobs(DetailLevel detailLevel)
  fullName: com.microsoft.azure.batch.JobOperations.listJobs(DetailLevel detailLevel)
  overload: com.microsoft.azure.batch.JobOperations.listJobs*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">jobs</xref> in the Batch account.
  syntax:
    content: public PagedList<CloudJob> listJobs(DetailLevel detailLevel)
    parameters:
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for controlling which properties are retrieved from the service.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">CloudJob</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.listJobs(com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: listJobs(com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: listJobs(DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.listJobs(DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.listJobs(DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.listJobs*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">jobs</xref> in the Batch account.
  syntax:
    content: public PagedList<CloudJob> listJobs(DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">CloudJob</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.listJobs(java.lang.String)
  id: listJobs(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: listJobs(String jobScheduleId)
  nameWithType: JobOperations.listJobs(String jobScheduleId)
  fullName: com.microsoft.azure.batch.JobOperations.listJobs(String jobScheduleId)
  overload: com.microsoft.azure.batch.JobOperations.listJobs*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">jobs</xref> created under the specified job schedule.
  syntax:
    content: public PagedList<CloudJob> listJobs(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of job schedule.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">CloudJob</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.listJobs(java.lang.String,com.microsoft.azure.batch.DetailLevel)
  id: listJobs(java.lang.String,com.microsoft.azure.batch.DetailLevel)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: listJobs(String jobScheduleId, DetailLevel detailLevel)
  nameWithType: JobOperations.listJobs(String jobScheduleId, DetailLevel detailLevel)
  fullName: com.microsoft.azure.batch.JobOperations.listJobs(String jobScheduleId, DetailLevel detailLevel)
  overload: com.microsoft.azure.batch.JobOperations.listJobs*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">jobs</xref> created under the specified job schedule.
  syntax:
    content: public PagedList<CloudJob> listJobs(String jobScheduleId, DetailLevel detailLevel)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of job schedule.
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for controlling which properties are retrieved from the service.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">CloudJob</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.listJobs(java.lang.String,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: listJobs(java.lang.String,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: listJobs(String jobScheduleId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.listJobs(String jobScheduleId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.listJobs(String jobScheduleId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.listJobs*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">jobs</xref> created under the specified jobSchedule.
  syntax:
    content: public PagedList<CloudJob> listJobs(String jobScheduleId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of jobSchedule.
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.CloudJob" data-throw-if-not-resolved="false">CloudJob</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus(java.lang.String)
  id: listPreparationAndReleaseTaskStatus(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: listPreparationAndReleaseTaskStatus(String jobId)
  nameWithType: JobOperations.listPreparationAndReleaseTaskStatus(String jobId)
  fullName: com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus(String jobId)
  overload: com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the status of <xref uid="com.microsoft.azure.batch.protocol.models.JobPreparationTask" data-throw-if-not-resolved="false">JobPreparationTask</xref> and <xref uid="com.microsoft.azure.batch.protocol.models.JobReleaseTask" data-throw-if-not-resolved="false">JobReleaseTask</xref> tasks for the specified job.
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation" data-throw-if-not-resolved="false">JobPreparationAndReleaseTaskExecutionInformation</xref> instances.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: listPreparationAndReleaseTaskStatus(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: listPreparationAndReleaseTaskStatus(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.listPreparationAndReleaseTaskStatus(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the status of <xref uid="com.microsoft.azure.batch.protocol.models.JobPreparationTask" data-throw-if-not-resolved="false">JobPreparationTask</xref> and <xref uid="com.microsoft.azure.batch.protocol.models.JobReleaseTask" data-throw-if-not-resolved="false">JobReleaseTask</xref> tasks for the specified job.
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(String jobId, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation" data-throw-if-not-resolved="false">JobPreparationAndReleaseTaskExecutionInformation</xref> instances.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)
  id: patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: patchJob(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: JobOperations.patchJob(String jobId, JobPatchParameter jobPatchParameter)
  fullName: com.microsoft.azure.batch.JobOperations.patchJob(String jobId, JobPatchParameter jobPatchParameter)
  overload: com.microsoft.azure.batch.JobOperations.patchJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Updates the specified job. This method only replaces the properties specified with non-null values.
  syntax:
    content: public void patchJob(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: The set of changes to be made to a job.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: patchJob(String jobId, JobPatchParameter jobPatchParameter, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.patchJob(String jobId, JobPatchParameter jobPatchParameter, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.patchJob(String jobId, JobPatchParameter jobPatchParameter, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.patchJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Updates the specified job. This method only replaces the properties specified with non-null values.
  syntax:
    content: public void patchJob(String jobId, JobPatchParameter jobPatchParameter, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: The parameter to update the job.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete)
  id: patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: patchJob(String jobId, OnAllTasksComplete onAllTasksComplete)
  nameWithType: JobOperations.patchJob(String jobId, OnAllTasksComplete onAllTasksComplete)
  fullName: com.microsoft.azure.batch.JobOperations.patchJob(String jobId, OnAllTasksComplete onAllTasksComplete)
  overload: com.microsoft.azure.batch.JobOperations.patchJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Updates the specified job. This method only replaces the properties specified with non-null values.
  syntax:
    content: public void patchJob(String jobId, OnAllTasksComplete onAllTasksComplete)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: onAllTasksComplete
      type: com.microsoft.azure.batch.protocol.models.OnAllTasksComplete
      description: Specifies an action the Batch service should take when all tasks in the job are in the completed state.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation)
  id: patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: patchJob(String jobId, PoolInformation poolInfo)
  nameWithType: JobOperations.patchJob(String jobId, PoolInformation poolInfo)
  fullName: com.microsoft.azure.batch.JobOperations.patchJob(String jobId, PoolInformation poolInfo)
  overload: com.microsoft.azure.batch.JobOperations.patchJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Updates the specified job. This method only replaces the properties specified with non-null values.
  syntax:
    content: public void patchJob(String jobId, PoolInformation poolInfo)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: poolInfo
      type: com.microsoft.azure.batch.protocol.models.PoolInformation
      description: The pool on which the Batch service runs the job's tasks. You may change the pool for a job only when the job is disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job. If null, the job continues to run on its current pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Integer,com.microsoft.azure.batch.protocol.models.JobConstraints,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete,java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  id: patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Integer,com.microsoft.azure.batch.protocol.models.JobConstraints,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete,java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  nameWithType: JobOperations.patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  fullName: com.microsoft.azure.batch.JobOperations.patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  overload: com.microsoft.azure.batch.JobOperations.patchJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Updates the specified job. This method only replaces the properties specified with non-null values.
  syntax:
    content: public void patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: poolInfo
      type: com.microsoft.azure.batch.protocol.models.PoolInformation
      description: The pool on which the Batch service runs the job's tasks. You may change the pool for a job only when the job is disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job. If null, the job continues to run on its current pool.
    - id: priority
      type: java.lang.Integer
      description: The priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If null, the priority of the job is left unchanged.
    - id: constraints
      type: com.microsoft.azure.batch.protocol.models.JobConstraints
      description: The execution constraints for the job. If null, the existing execution constraints are left unchanged.
    - id: onAllTasksComplete
      type: com.microsoft.azure.batch.protocol.models.OnAllTasksComplete
      description: Specifies an action the Batch service should take when all tasks in the job are in the completed state.
    - id: metadata
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: A list of name-value pairs associated with the job as metadata. If null, the existing job metadata is left unchanged.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Integer,com.microsoft.azure.batch.protocol.models.JobConstraints,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete,java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: patchJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Integer,com.microsoft.azure.batch.protocol.models.JobConstraints,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete,java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.patchJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Updates the specified job. This method only replaces the properties specified with non-null values.
  syntax:
    content: public void patchJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: poolInfo
      type: com.microsoft.azure.batch.protocol.models.PoolInformation
      description: The pool on which the Batch service runs the job's tasks. You may change the pool for a job only when the job is disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job. If null, the job continues to run on its current pool.
    - id: priority
      type: java.lang.Integer
      description: The priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If null, the priority of the job is left unchanged.
    - id: constraints
      type: com.microsoft.azure.batch.protocol.models.JobConstraints
      description: The execution constraints for the job. If null, the existing execution constraints are left unchanged.
    - id: onAllTasksComplete
      type: com.microsoft.azure.batch.protocol.models.OnAllTasksComplete
      description: Specifies an action the Batch service should take when all tasks in the job are in the completed state.
    - id: metadata
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: A list of name-value pairs associated with the job as metadata. If null, the existing job metadata is left unchanged.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.terminateJob(java.lang.String)
  id: terminateJob(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: terminateJob(String jobId)
  nameWithType: JobOperations.terminateJob(String jobId)
  fullName: com.microsoft.azure.batch.JobOperations.terminateJob(String jobId)
  overload: com.microsoft.azure.batch.JobOperations.terminateJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Terminates the specified job, marking it as completed.
  syntax:
    content: public void terminateJob(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.terminateJob(java.lang.String,java.lang.String)
  id: terminateJob(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: terminateJob(String jobId, String terminateReason)
  nameWithType: JobOperations.terminateJob(String jobId, String terminateReason)
  fullName: com.microsoft.azure.batch.JobOperations.terminateJob(String jobId, String terminateReason)
  overload: com.microsoft.azure.batch.JobOperations.terminateJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Terminates the specified job, marking it as completed.
  syntax:
    content: public void terminateJob(String jobId, String terminateReason)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: terminateReason
      type: java.lang.String
      description: The message to describe the reason the job has terminated. This text will appear when you call <xref uid="com.microsoft.azure.batch.protocol.models.JobExecutionInformation.terminateReason()" data-throw-if-not-resolved="false">JobExecutionInformation#terminateReason()</xref>.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.terminateJob(java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: terminateJob(java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: terminateJob(String jobId, String terminateReason, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.terminateJob(String jobId, String terminateReason, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.terminateJob(String jobId, String terminateReason, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.terminateJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Terminates the specified job, marking it as completed.
  syntax:
    content: public void terminateJob(String jobId, String terminateReason, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: terminateReason
      type: java.lang.String
      description: The message to describe the reason the job has terminated. This text will appear when you call <xref uid="com.microsoft.azure.batch.protocol.models.JobExecutionInformation.terminateReason()" data-throw-if-not-resolved="false">JobExecutionInformation#terminateReason()</xref>.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.updateJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Integer,com.microsoft.azure.batch.protocol.models.JobConstraints,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete,java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  id: updateJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Integer,com.microsoft.azure.batch.protocol.models.JobConstraints,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete,java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  nameWithType: JobOperations.updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  fullName: com.microsoft.azure.batch.JobOperations.updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
  overload: com.microsoft.azure.batch.JobOperations.updateJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Updates the specified job. This method performs a full replace of all updatable properties of the job. For example, if the constraints parameter is null, then the Batch service removes the job's existing constraints and replaces them with the default constraints.
  syntax:
    content: public void updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: poolInfo
      type: com.microsoft.azure.batch.protocol.models.PoolInformation
      description: The pool on which the Batch service runs the job's tasks. You may change the pool for a job only when the job is disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job.
    - id: priority
      type: java.lang.Integer
      description: The priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If null, it is set to the default value 0.
    - id: constraints
      type: com.microsoft.azure.batch.protocol.models.JobConstraints
      description: The execution constraints for the job. If null, the constraints are cleared.
    - id: onAllTasksComplete
      type: com.microsoft.azure.batch.protocol.models.OnAllTasksComplete
      description: Specifies an action the Batch service should take when all tasks in the job are in the completed state.
    - id: metadata
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: A list of name-value pairs associated with the job as metadata. If null, it takes the default value of an empty list; in effect, any existing metadata is deleted.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.updateJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Integer,com.microsoft.azure.batch.protocol.models.JobConstraints,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete,java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: updateJob(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolInformation,java.lang.Integer,com.microsoft.azure.batch.protocol.models.JobConstraints,com.microsoft.azure.batch.protocol.models.OnAllTasksComplete,java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: JobOperations.updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.JobOperations.updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.JobOperations.updateJob*
  type: Method
  package: com.microsoft.azure.batch
  summary: Updates the specified job. This method performs a full replace of all updatable properties of the job. For example, if the constraints parameter is null, then the Batch service removes the job's existing constraints and replaces them with the default constraints.
  syntax:
    content: public void updateJob(String jobId, PoolInformation poolInfo, Integer priority, JobConstraints constraints, OnAllTasksComplete onAllTasksComplete, List<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: poolInfo
      type: com.microsoft.azure.batch.protocol.models.PoolInformation
      description: The pool on which the Batch service runs the job's tasks. You may change the pool for a job only when the job is disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job.
    - id: priority
      type: java.lang.Integer
      description: The priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If null, it is set to the default value 0.
    - id: constraints
      type: com.microsoft.azure.batch.protocol.models.JobConstraints
      description: The execution constraints for the job. If null, the constraints are cleared.
    - id: onAllTasksComplete
      type: com.microsoft.azure.batch.protocol.models.OnAllTasksComplete
      description: Specifies an action the Batch service should take when all tasks in the job are in the completed state.
    - id: metadata
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: A list of name-value pairs associated with the job as metadata. If null, it takes the default value of an empty list; in effect, any existing metadata is deleted.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.JobOperations.withCustomBehaviors(java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  id: withCustomBehaviors(java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.JobOperations
  langs:
  - java
  name: withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  nameWithType: JobOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  fullName: com.microsoft.azure.batch.JobOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  overload: com.microsoft.azure.batch.JobOperations.withCustomBehaviors*
  type: Method
  package: com.microsoft.azure.batch
  summary: Sets a collection of behaviors that modify or customize requests to the Batch service.
  syntax:
    content: public IInheritedBehaviors withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
    parameters:
    - id: behaviors
      type: java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>
      description: The collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances.
    return:
      type: com.microsoft.azure.batch.IInheritedBehaviors
      description: The current instance.
references:
- uid: com.microsoft.azure.batch.BatchClient
  name: BatchClient
  nameWithType: BatchClient
  fullName: com.microsoft.azure.batch.BatchClient
- uid: java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.BatchClientBehavior
    name: BatchClientBehavior
    fullName: com.microsoft.azure.batch.BatchClientBehavior
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.JobOperations.JobOperations*
  name: JobOperations
  nameWithType: JobOperations.JobOperations
  fullName: com.microsoft.azure.batch.JobOperations.JobOperations
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.JobOperations.customBehaviors*
  name: customBehaviors
  nameWithType: JobOperations.customBehaviors
  fullName: com.microsoft.azure.batch.JobOperations.customBehaviors
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.IInheritedBehaviors
  name: IInheritedBehaviors
  nameWithType: IInheritedBehaviors
  fullName: com.microsoft.azure.batch.IInheritedBehaviors
- uid: com.microsoft.azure.batch.JobOperations.withCustomBehaviors*
  name: withCustomBehaviors
  nameWithType: JobOperations.withCustomBehaviors
  fullName: com.microsoft.azure.batch.JobOperations.withCustomBehaviors
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.BatchErrorException
  name: BatchErrorException
  nameWithType: BatchErrorException
  fullName: com.microsoft.azure.batch.protocol.models.BatchErrorException
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.batch.protocol.models.JobStatistics
  name: JobStatistics
  nameWithType: JobStatistics
  fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
- uid: com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics*
  name: getAllJobsLifetimeStatistics
  nameWithType: JobOperations.getAllJobsLifetimeStatistics
  fullName: com.microsoft.azure.batch.JobOperations.getAllJobsLifetimeStatistics
  package: com.microsoft.azure.batch
- uid: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.BatchClientBehavior
    name: BatchClientBehavior
    fullName: com.microsoft.azure.batch.BatchClientBehavior
  - name: '>'
    fullName: '>'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.CloudJob
  name: CloudJob
  nameWithType: CloudJob
  fullName: com.microsoft.azure.batch.protocol.models.CloudJob
- uid: com.microsoft.azure.batch.JobOperations.getJob*
  name: getJob
  nameWithType: JobOperations.getJob
  fullName: com.microsoft.azure.batch.JobOperations.getJob
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.DetailLevel
  name: DetailLevel
  nameWithType: DetailLevel
  fullName: com.microsoft.azure.batch.DetailLevel
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.JobOperations.listJobs*
  name: listJobs
  nameWithType: JobOperations.listJobs
  fullName: com.microsoft.azure.batch.JobOperations.listJobs
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus*
  name: listPreparationAndReleaseTaskStatus
  nameWithType: JobOperations.listPreparationAndReleaseTaskStatus
  fullName: com.microsoft.azure.batch.JobOperations.listPreparationAndReleaseTaskStatus
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation
  name: PoolInformation
  nameWithType: PoolInformation
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation
- uid: com.microsoft.azure.batch.JobOperations.createJob*
  name: createJob
  nameWithType: JobOperations.createJob
  fullName: com.microsoft.azure.batch.JobOperations.createJob
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter
  name: JobAddParameter
  nameWithType: JobAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter
- uid: com.microsoft.azure.batch.JobOperations.deleteJob*
  name: deleteJob
  nameWithType: JobOperations.deleteJob
  fullName: com.microsoft.azure.batch.JobOperations.deleteJob
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.JobOperations.terminateJob*
  name: terminateJob
  nameWithType: JobOperations.terminateJob
  fullName: com.microsoft.azure.batch.JobOperations.terminateJob
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.JobOperations.enableJob*
  name: enableJob
  nameWithType: JobOperations.enableJob
  fullName: com.microsoft.azure.batch.JobOperations.enableJob
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.DisableJobOption
  name: DisableJobOption
  nameWithType: DisableJobOption
  fullName: com.microsoft.azure.batch.protocol.models.DisableJobOption
- uid: com.microsoft.azure.batch.JobOperations.disableJob*
  name: disableJob
  nameWithType: JobOperations.disableJob
  fullName: com.microsoft.azure.batch.JobOperations.disableJob
  package: com.microsoft.azure.batch
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints
  name: JobConstraints
  nameWithType: JobConstraints
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints
- uid: com.microsoft.azure.batch.protocol.models.OnAllTasksComplete
  name: OnAllTasksComplete
  nameWithType: OnAllTasksComplete
  fullName: com.microsoft.azure.batch.protocol.models.OnAllTasksComplete
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.MetadataItem
    name: MetadataItem
    fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.JobOperations.updateJob*
  name: updateJob
  nameWithType: JobOperations.updateJob
  fullName: com.microsoft.azure.batch.JobOperations.updateJob
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.JobOperations.patchJob*
  name: patchJob
  nameWithType: JobOperations.patchJob
  fullName: com.microsoft.azure.batch.JobOperations.patchJob
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter
  name: JobPatchParameter
  nameWithType: JobPatchParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter
- uid: com.microsoft.azure.batch.protocol.models.TaskCounts
  name: TaskCounts
  nameWithType: TaskCounts
  fullName: com.microsoft.azure.batch.protocol.models.TaskCounts
- uid: com.microsoft.azure.batch.JobOperations.getTaskCounts*
  name: getTaskCounts
  nameWithType: JobOperations.getTaskCounts
  fullName: com.microsoft.azure.batch.JobOperations.getTaskCounts
  package: com.microsoft.azure.batch
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: com.microsoft.azure.batch.BatchClientBehavior
  name: BatchClientBehavior
  nameWithType: BatchClientBehavior
  fullName: com.microsoft.azure.batch.BatchClientBehavior
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: com.microsoft.azure.PagedList
  name: PagedList
  nameWithType: PagedList
  fullName: com.microsoft.azure.PagedList
- uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
  name: JobPreparationAndReleaseTaskExecutionInformation
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation
  fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.batch.protocol.models.MetadataItem
  name: MetadataItem
  nameWithType: MetadataItem
  fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
