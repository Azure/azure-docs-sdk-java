### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors._actor_proxy
  id: _actor_proxy
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_proxy.getActorId()
  - microsoft.servicefabric.actors._actor_proxy.getActorServicePartitionClient()
  href: microsoft.servicefabric.actors._actor_proxy.yml
  langs:
  - java
  name: ActorProxy
  nameWithType: ActorProxy
  fullName: microsoft.servicefabric.actors.ActorProxy
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxy.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxy.java
    startLine: 5
  package: microsoft.servicefabric.actors
  summary: <p>Provides the interface for implementation of proxy access for actor service. </p>
  syntax:
    content: public interface ActorProxy
- uid: microsoft.servicefabric.actors._actor_proxy.getActorId()
  id: getActorId()
  parent: microsoft.servicefabric.actors._actor_proxy
  href: microsoft.servicefabric.actors._actor_proxy.yml
  langs:
  - java
  name: getActorId()
  nameWithType: ActorProxy.getActorId()
  fullName: ActorId microsoft.servicefabric.actors.ActorProxy.getActorId()
  overload: microsoft.servicefabric.actors._actor_proxy.getActorId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxy.java
    startLine: 12
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Gets <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorId</xref> associated with the proxy object.</p>

    <p></p>
  syntax:
    content: public ActorId getActorId()
    return:
      type: microsoft.servicefabric.actors._actor_id
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorId</xref> associated with the proxy object. </p>
- uid: microsoft.servicefabric.actors._actor_proxy.getActorServicePartitionClient()
  id: getActorServicePartitionClient()
  parent: microsoft.servicefabric.actors._actor_proxy
  href: microsoft.servicefabric.actors._actor_proxy.yml
  langs:
  - java
  name: getActorServicePartitionClient()
  nameWithType: ActorProxy.getActorServicePartitionClient()
  fullName: ActorServicePartitionClientImpl microsoft.servicefabric.actors.ActorProxy.getActorServicePartitionClient()
  overload: microsoft.servicefabric.actors._actor_proxy.getActorServicePartitionClient*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxy.java
    startLine: 21
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Gets <xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorServicePartitionClientImpl</xref> that this proxy is using to communicate with the actor.</p>

    <p></p>
  syntax:
    content: public ActorServicePartitionClientImpl getActorServicePartitionClient()
    return:
      type: ef7224bd
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorServicePartitionClientImpl</xref> that this proxy is using to communicate with the actor. </p>
references:
- uid: microsoft.servicefabric.actors._actor_proxy.getActorId*
  name: getActorId
  nameWithType: ActorProxy.getActorId
  fullName: ActorId microsoft.servicefabric.actors.ActorProxy.getActorId
  package: microsoft.servicefabric.actors
- uid: ef7224bd
  spec.java:
  - name: ActorServicePartitionClientImpl
    fullName: ActorServicePartitionClientImpl
- uid: microsoft.servicefabric.actors._actor_proxy.getActorServicePartitionClient*
  name: getActorServicePartitionClient
  nameWithType: ActorProxy.getActorServicePartitionClient
  fullName: ActorServicePartitionClientImpl microsoft.servicefabric.actors.ActorProxy.getActorServicePartitionClient
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_proxy_base
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_proxy_base.yml
  name: ActorProxyBase
  nameWithType: ActorProxyBase
  fullName: microsoft.servicefabric.actors.ActorProxyBase
  type: Class
  summary: <p>Provides the base implementation for the proxy to the remote actor objects implementing IActor interfaces. </p>
  syntax:
    content: public class ActorProxyBase
- uid: microsoft.servicefabric.actors._actor_id
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_id.yml
  name: ActorId
  nameWithType: ActorId
  fullName: microsoft.servicefabric.actors.ActorId
  type: Class
  summary: >-
    <p>

      <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref> represents identity of an actor within an actor service. The actors can be identified by <xref uid="" data-throw-if-not-resolved="false">java.lang.String</xref>, <xref uid="" data-throw-if-not-resolved="false">java.util.UUID</xref> or long. </p>
  syntax:
    content: public class ActorId
- uid: microsoft.servicefabric.actors._actor_proxy_base.getActorId()
  parent: microsoft.servicefabric.actors._actor_proxy_base
  href: microsoft.servicefabric.actors._actor_proxy_base.yml
  name: getActorId()
  nameWithType: ActorProxyBase.getActorId()
  fullName: ActorId microsoft.servicefabric.actors.ActorProxyBase.getActorId()
  type: Method
  summary: >-
    <p>Gets <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorId</xref> associated with the proxy object.</p>

    <p></p>
  syntax:
    content: public ActorId getActorId()
    return:
      type: microsoft.servicefabric.actors._actor_id
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorId</xref> associated with the proxy object. </p>
- uid: microsoft.servicefabric.actors._actor_proxy_base.getActorServicePartitionClient()
  parent: microsoft.servicefabric.actors._actor_proxy_base
  href: microsoft.servicefabric.actors._actor_proxy_base.yml
  name: getActorServicePartitionClient()
  nameWithType: ActorProxyBase.getActorServicePartitionClient()
  fullName: ActorServicePartitionClientImpl microsoft.servicefabric.actors.ActorProxyBase.getActorServicePartitionClient()
  type: Method
  summary: >-
    <p>Gets <xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorServicePartitionClientImpl</xref> that this proxy is using to communicate with the actor.</p>

    <p></p>
  syntax:
    content: public ActorServicePartitionClientImpl getActorServicePartitionClient()
    return:
      type: ef7224bd
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorServicePartitionClientImpl</xref> that this proxy is using to communicate with the actor. </p>
