### YamlMime:JavaType
uid: "com.azure.spring.integration.eventhub.converter.EventHubMessageConverter"
fullName: "com.azure.spring.integration.eventhub.converter.EventHubMessageConverter"
name: "EventHubMessageConverter"
nameWithType: "EventHubMessageConverter"
summary: "A converter to turn a <xref uid=\"org.springframework.messaging.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> and vice versa."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.spring.integration.core.converter.AbstractAzureMessageConverter\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.<M>readValue(java.lang.String,java.lang.Class<M>)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.<U>toMessage(T,java.util.Map<java.lang.String,java.lang.Object>,java.lang.Class<U>)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.buildCustomHeaders(T)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.fromByte(byte[])"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.fromMessage(org.springframework.messaging.Message<?>,java.lang.Class<T>)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.fromString(java.lang.String)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.getPayload(T)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.isValidJson(java.lang.Object)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.setCustomHeaders(org.springframework.messaging.MessageHeaders,T)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.toJson(java.lang.Object)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.toPayload(java.lang.Object)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class EventHubMessageConverter extends AbstractAzureMessageConverter<EventData>"
constructors:
- "com.azure.spring.integration.eventhub.converter.EventHubMessageConverter.EventHubMessageConverter()"
methods:
- "com.azure.spring.integration.eventhub.converter.EventHubMessageConverter.buildCustomHeaders(com.azure.messaging.eventhubs.EventData)"
- "com.azure.spring.integration.eventhub.converter.EventHubMessageConverter.fromByte(byte[])"
- "com.azure.spring.integration.eventhub.converter.EventHubMessageConverter.fromString(java.lang.String)"
- "com.azure.spring.integration.eventhub.converter.EventHubMessageConverter.getPayload(com.azure.messaging.eventhubs.EventData)"
- "com.azure.spring.integration.eventhub.converter.EventHubMessageConverter.setCustomHeaders(org.springframework.messaging.MessageHeaders,com.azure.messaging.eventhubs.EventData)"
type: "class"
metadata: {}
package: "com.azure.spring.integration.eventhub.converter"
artifact: com.azure.spring:azure-spring-integration-eventhubs:2.0.0
