### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store
  id: _i_cache_store
  parent: com.microsoft.azure.elasticdb.shard.cache
  children:
  - com.microsoft.azure.elasticdb.shard.cache._i_cache_store.addOrUpdateMapping(StoreMapping,CacheStoreMappingUpdatePolicy)
  - com.microsoft.azure.elasticdb.shard.cache._i_cache_store.addOrUpdateShardMap(StoreShardMap)
  - com.microsoft.azure.elasticdb.shard.cache._i_cache_store.clear()
  - com.microsoft.azure.elasticdb.shard.cache._i_cache_store.deleteMapping(StoreMapping)
  - com.microsoft.azure.elasticdb.shard.cache._i_cache_store.deleteShardMap(StoreShardMap)
  - com.microsoft.azure.elasticdb.shard.cache._i_cache_store.lookupMappingByKey(StoreShardMap,ShardKey)
  - com.microsoft.azure.elasticdb.shard.cache._i_cache_store.lookupMappingsForRange(StoreShardMap,ShardRange)
  - com.microsoft.azure.elasticdb.shard.cache._i_cache_store.lookupShardMapByName(String)
  href: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.yml
  langs:
  - java
  name: ICacheStore
  nameWithType: ICacheStore
  fullName: com.microsoft.azure.elasticdb.shard.cache.ICacheStore
  type: Interface
  source:
    remote: &o0
      path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/shard/cache/ICacheStore.java
      branch: master
      repo: https://github.com/Microsoft/elastic-db-tools-for-java
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/shard/cache/ICacheStore.java
    startLine: 20
  package: com.microsoft.azure.elasticdb.shard.cache
  summary: <p>Representation of client side cache. </p>
  syntax:
    content: public interface ICacheStore
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.addOrUpdateMapping(StoreMapping,CacheStoreMappingUpdatePolicy)
  id: addOrUpdateMapping(StoreMapping,CacheStoreMappingUpdatePolicy)
  parent: com.microsoft.azure.elasticdb.shard.cache._i_cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.yml
  langs:
  - java
  name: addOrUpdateMapping(StoreMapping mapping, CacheStoreMappingUpdatePolicy policy)
  nameWithType: ICacheStore.addOrUpdateMapping(StoreMapping mapping, CacheStoreMappingUpdatePolicy policy)
  fullName: void com.microsoft.azure.elasticdb.shard.cache.ICacheStore.addOrUpdateMapping(StoreMapping mapping, CacheStoreMappingUpdatePolicy policy)
  overload: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.addOrUpdateMapping*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/shard/cache/ICacheStore.java
    startLine: 55
  package: com.microsoft.azure.elasticdb.shard.cache
  summary: >-
    <p>Invoked for refreshing mapping in cache from store.</p>

    <p></p>
  syntax:
    content: public void addOrUpdateMapping(StoreMapping mapping, CacheStoreMappingUpdatePolicy policy)
    parameters:
    - id: mapping
      type: com.microsoft.azure.elasticdb.shard.store._store_mapping
      description: <p>Storage representation of mapping. </p>
    - id: policy
      type: com.microsoft.azure.elasticdb.shard.cache._cache_store_mapping_update_policy
      description: <p>Policy to use for preexisting cache entries during update. </p>
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.addOrUpdateShardMap(StoreShardMap)
  id: addOrUpdateShardMap(StoreShardMap)
  parent: com.microsoft.azure.elasticdb.shard.cache._i_cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.yml
  langs:
  - java
  name: addOrUpdateShardMap(StoreShardMap shardMap)
  nameWithType: ICacheStore.addOrUpdateShardMap(StoreShardMap shardMap)
  fullName: void com.microsoft.azure.elasticdb.shard.cache.ICacheStore.addOrUpdateShardMap(StoreShardMap shardMap)
  overload: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.addOrUpdateShardMap*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/shard/cache/ICacheStore.java
    startLine: 28
  package: com.microsoft.azure.elasticdb.shard.cache
  summary: >-
    <p>Invoked for refreshing shard map in cache from store.</p>

    <p></p>
  syntax:
    content: public void addOrUpdateShardMap(StoreShardMap shardMap)
    parameters:
    - id: shardMap
      type: com.microsoft.azure.elasticdb.shard.store._store_shard_map
      description: <p>Storage representation of shard map. </p>
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.clear()
  id: clear()
  parent: com.microsoft.azure.elasticdb.shard.cache._i_cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.yml
  langs:
  - java
  name: clear()
  nameWithType: ICacheStore.clear()
  fullName: void com.microsoft.azure.elasticdb.shard.cache.ICacheStore.clear()
  overload: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.clear*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/shard/cache/ICacheStore.java
    startLine: 93
  package: com.microsoft.azure.elasticdb.shard.cache
  summary: <p>Clears the cache. </p>
  syntax:
    content: public void clear()
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.deleteMapping(StoreMapping)
  id: deleteMapping(StoreMapping)
  parent: com.microsoft.azure.elasticdb.shard.cache._i_cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.yml
  langs:
  - java
  name: deleteMapping(StoreMapping mapping)
  nameWithType: ICacheStore.deleteMapping(StoreMapping mapping)
  fullName: void com.microsoft.azure.elasticdb.shard.cache.ICacheStore.deleteMapping(StoreMapping mapping)
  overload: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.deleteMapping*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/shard/cache/ICacheStore.java
    startLine: 64
  package: com.microsoft.azure.elasticdb.shard.cache
  summary: >-
    <p>Invoked for deleting mapping in cache because it no longer exists in store.</p>

    <p></p>
  syntax:
    content: public void deleteMapping(StoreMapping mapping)
    parameters:
    - id: mapping
      type: com.microsoft.azure.elasticdb.shard.store._store_mapping
      description: <p>Storage representation of mapping. </p>
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.deleteShardMap(StoreShardMap)
  id: deleteShardMap(StoreShardMap)
  parent: com.microsoft.azure.elasticdb.shard.cache._i_cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.yml
  langs:
  - java
  name: deleteShardMap(StoreShardMap shardMap)
  nameWithType: ICacheStore.deleteShardMap(StoreShardMap shardMap)
  fullName: void com.microsoft.azure.elasticdb.shard.cache.ICacheStore.deleteShardMap(StoreShardMap shardMap)
  overload: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.deleteShardMap*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/shard/cache/ICacheStore.java
    startLine: 36
  package: com.microsoft.azure.elasticdb.shard.cache
  summary: >-
    <p>Invoked for deleting shard map in cache because it no longer exists in store.</p>

    <p></p>
  syntax:
    content: public void deleteShardMap(StoreShardMap shardMap)
    parameters:
    - id: shardMap
      type: com.microsoft.azure.elasticdb.shard.store._store_shard_map
      description: <p>Storage representation of shard map. </p>
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.lookupMappingByKey(StoreShardMap,ShardKey)
  id: lookupMappingByKey(StoreShardMap,ShardKey)
  parent: com.microsoft.azure.elasticdb.shard.cache._i_cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.yml
  langs:
  - java
  name: lookupMappingByKey(StoreShardMap shardMap, ShardKey key)
  nameWithType: ICacheStore.lookupMappingByKey(StoreShardMap shardMap, ShardKey key)
  fullName: ICacheStoreMapping com.microsoft.azure.elasticdb.shard.cache.ICacheStore.lookupMappingByKey(StoreShardMap shardMap, ShardKey key)
  overload: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.lookupMappingByKey*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/shard/cache/ICacheStore.java
    startLine: 75
  package: com.microsoft.azure.elasticdb.shard.cache
  summary: >-
    <p>Looks up a given key in given shard map.</p>

    <p></p>
  syntax:
    content: public ICacheStoreMapping lookupMappingByKey(StoreShardMap shardMap, ShardKey key)
    parameters:
    - id: shardMap
      type: com.microsoft.azure.elasticdb.shard.store._store_shard_map
      description: <p>Storage representation of shard map. </p>
    - id: key
      type: com.microsoft.azure.elasticdb.shard.base._shard_key
      description: <p>Key value. </p>
    return:
      type: com.microsoft.azure.elasticdb.shard.cache._i_cache_store_mapping
      description: <p>Mapping corresponding to <em>key</em>  or null. </p>
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.lookupMappingsForRange(StoreShardMap,ShardRange)
  id: lookupMappingsForRange(StoreShardMap,ShardRange)
  parent: com.microsoft.azure.elasticdb.shard.cache._i_cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.yml
  langs:
  - java
  name: lookupMappingsForRange(StoreShardMap shardMap, ShardRange range)
  nameWithType: ICacheStore.lookupMappingsForRange(StoreShardMap shardMap, ShardRange range)
  fullName: List<ICacheStoreMapping> com.microsoft.azure.elasticdb.shard.cache.ICacheStore.lookupMappingsForRange(StoreShardMap shardMap, ShardRange range)
  overload: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.lookupMappingsForRange*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/shard/cache/ICacheStore.java
    startLine: 87
  package: com.microsoft.azure.elasticdb.shard.cache
  summary: >-
    <p>Looks up a given range in given shard map.</p>

    <p></p>
  syntax:
    content: public List<ICacheStoreMapping> lookupMappingsForRange(StoreShardMap shardMap, ShardRange range)
    parameters:
    - id: shardMap
      type: com.microsoft.azure.elasticdb.shard.store._store_shard_map
      description: <p>Storage representation of shard map. </p>
    - id: range
      type: com.microsoft.azure.elasticdb.shard.base._shard_range
      description: <p>Optional range value, if null, we cover everything. </p>
    return:
      type: 5618da2dcom.microsoft.azure.elasticdb.shard.cache._i_cache_store_mappinga08ddfce
      description: <p>Mapping corresponding to <em>key</em>  or null. </p>
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.lookupShardMapByName(String)
  id: lookupShardMapByName(String)
  parent: com.microsoft.azure.elasticdb.shard.cache._i_cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.yml
  langs:
  - java
  name: lookupShardMapByName(String shardMapName)
  nameWithType: ICacheStore.lookupShardMapByName(String shardMapName)
  fullName: StoreShardMap com.microsoft.azure.elasticdb.shard.cache.ICacheStore.lookupShardMapByName(String shardMapName)
  overload: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.lookupShardMapByName*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/shard/cache/ICacheStore.java
    startLine: 45
  package: com.microsoft.azure.elasticdb.shard.cache
  summary: >-
    <p>Looks up a given shard map in cache based on it's name.</p>

    <p></p>
  syntax:
    content: public StoreShardMap lookupShardMapByName(String shardMapName)
    parameters:
    - id: shardMapName
      type: "26831127"
      description: <p>Name of shard map. </p>
    return:
      type: com.microsoft.azure.elasticdb.shard.store._store_shard_map
      description: <p>The shard being searched. </p>
references:
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.addOrUpdateShardMap*
  name: addOrUpdateShardMap
  nameWithType: ICacheStore.addOrUpdateShardMap
  fullName: void com.microsoft.azure.elasticdb.shard.cache.ICacheStore.addOrUpdateShardMap
  package: com.microsoft.azure.elasticdb.shard.cache
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.deleteShardMap*
  name: deleteShardMap
  nameWithType: ICacheStore.deleteShardMap
  fullName: void com.microsoft.azure.elasticdb.shard.cache.ICacheStore.deleteShardMap
  package: com.microsoft.azure.elasticdb.shard.cache
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.lookupShardMapByName*
  name: lookupShardMapByName
  nameWithType: ICacheStore.lookupShardMapByName
  fullName: StoreShardMap com.microsoft.azure.elasticdb.shard.cache.ICacheStore.lookupShardMapByName
  package: com.microsoft.azure.elasticdb.shard.cache
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.addOrUpdateMapping*
  name: addOrUpdateMapping
  nameWithType: ICacheStore.addOrUpdateMapping
  fullName: void com.microsoft.azure.elasticdb.shard.cache.ICacheStore.addOrUpdateMapping
  package: com.microsoft.azure.elasticdb.shard.cache
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.deleteMapping*
  name: deleteMapping
  nameWithType: ICacheStore.deleteMapping
  fullName: void com.microsoft.azure.elasticdb.shard.cache.ICacheStore.deleteMapping
  package: com.microsoft.azure.elasticdb.shard.cache
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.lookupMappingByKey*
  name: lookupMappingByKey
  nameWithType: ICacheStore.lookupMappingByKey
  fullName: ICacheStoreMapping com.microsoft.azure.elasticdb.shard.cache.ICacheStore.lookupMappingByKey
  package: com.microsoft.azure.elasticdb.shard.cache
- uid: 5618da2dcom.microsoft.azure.elasticdb.shard.cache._i_cache_store_mappinga08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store_mapping
    name: ICacheStoreMapping
    fullName: com.microsoft.azure.elasticdb.shard.cache.ICacheStoreMapping
    href: com.microsoft.azure.elasticdb.shard.cache._i_cache_store_mapping.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.lookupMappingsForRange*
  name: lookupMappingsForRange
  nameWithType: ICacheStore.lookupMappingsForRange
  fullName: List<ICacheStoreMapping> com.microsoft.azure.elasticdb.shard.cache.ICacheStore.lookupMappingsForRange
  package: com.microsoft.azure.elasticdb.shard.cache
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store.clear*
  name: clear
  nameWithType: ICacheStore.clear
  fullName: void com.microsoft.azure.elasticdb.shard.cache.ICacheStore.clear
  package: com.microsoft.azure.elasticdb.shard.cache
- uid: com.microsoft.azure.elasticdb.shard.cache._cache_store
  parent: com.microsoft.azure.elasticdb.shard.cache
  href: com.microsoft.azure.elasticdb.shard.cache._cache_store.yml
  name: CacheStore
  nameWithType: CacheStore
  fullName: com.microsoft.azure.elasticdb.shard.cache.CacheStore
  type: Class
  summary: <p>Client side cache store. </p>
  syntax:
    content: public class CacheStore implements ICacheStore
- uid: com.microsoft.azure.elasticdb.shard.cache._cache_store.addOrUpdateShardMap(StoreShardMap)
  parent: com.microsoft.azure.elasticdb.shard.cache._cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._cache_store.yml
  name: addOrUpdateShardMap(StoreShardMap ssm)
  nameWithType: CacheStore.addOrUpdateShardMap(StoreShardMap ssm)
  fullName: void com.microsoft.azure.elasticdb.shard.cache.CacheStore.addOrUpdateShardMap(StoreShardMap ssm)
  type: Method
  summary: >-
    <p>Invoked for refreshing shard map in cache from store.</p>

    <p></p>
  syntax:
    content: public void addOrUpdateShardMap(StoreShardMap ssm)
    parameters:
    - id: ssm
      type: com.microsoft.azure.elasticdb.shard.store._store_shard_map
      description: <p>Storage representation of shard map. </p>
- uid: com.microsoft.azure.elasticdb.shard.store._store_shard_map
  parent: com.microsoft.azure.elasticdb.shard.store
  href: com.microsoft.azure.elasticdb.shard.store._store_shard_map.yml
  name: StoreShardMap
  nameWithType: StoreShardMap
  fullName: com.microsoft.azure.elasticdb.shard.store.StoreShardMap
  type: Class
  summary: <p>Store representation of a shard map. </p>
  syntax:
    content: public class StoreShardMap
- uid: com.microsoft.azure.elasticdb.shard.cache._cache_store.deleteShardMap(StoreShardMap)
  parent: com.microsoft.azure.elasticdb.shard.cache._cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._cache_store.yml
  name: deleteShardMap(StoreShardMap shardMap)
  nameWithType: CacheStore.deleteShardMap(StoreShardMap shardMap)
  fullName: void com.microsoft.azure.elasticdb.shard.cache.CacheStore.deleteShardMap(StoreShardMap shardMap)
  type: Method
  summary: >-
    <p>Invoked for deleting shard map in cache because it no longer exists in store.</p>

    <p></p>
  syntax:
    content: public void deleteShardMap(StoreShardMap shardMap)
    parameters:
    - id: shardMap
      type: com.microsoft.azure.elasticdb.shard.store._store_shard_map
      description: <p>Storage representation of shard map. </p>
- uid: com.microsoft.azure.elasticdb.shard.cache._cache_store.lookupShardMapByName(String)
  parent: com.microsoft.azure.elasticdb.shard.cache._cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._cache_store.yml
  name: lookupShardMapByName(String shardMapName)
  nameWithType: CacheStore.lookupShardMapByName(String shardMapName)
  fullName: StoreShardMap com.microsoft.azure.elasticdb.shard.cache.CacheStore.lookupShardMapByName(String shardMapName)
  type: Method
  summary: >-
    <p>Looks up a given shard map in cache based on it's name.</p>

    <p></p>
  syntax:
    content: public StoreShardMap lookupShardMapByName(String shardMapName)
    parameters:
    - id: shardMapName
      type: "26831127"
      description: <p>Name of shard map. </p>
    return:
      type: com.microsoft.azure.elasticdb.shard.store._store_shard_map
      description: <p>The shard being searched. </p>
- uid: com.microsoft.azure.elasticdb.shard.cache._cache_store.addOrUpdateMapping(StoreMapping,CacheStoreMappingUpdatePolicy)
  parent: com.microsoft.azure.elasticdb.shard.cache._cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._cache_store.yml
  name: addOrUpdateMapping(StoreMapping mapping, CacheStoreMappingUpdatePolicy policy)
  nameWithType: CacheStore.addOrUpdateMapping(StoreMapping mapping, CacheStoreMappingUpdatePolicy policy)
  fullName: void com.microsoft.azure.elasticdb.shard.cache.CacheStore.addOrUpdateMapping(StoreMapping mapping, CacheStoreMappingUpdatePolicy policy)
  type: Method
  summary: >-
    <p>Invoked for refreshing mapping in cache from store.</p>

    <p></p>
  syntax:
    content: public void addOrUpdateMapping(StoreMapping mapping, CacheStoreMappingUpdatePolicy policy)
    parameters:
    - id: mapping
      type: com.microsoft.azure.elasticdb.shard.store._store_mapping
      description: <p>Storage representation of mapping. </p>
    - id: policy
      type: com.microsoft.azure.elasticdb.shard.cache._cache_store_mapping_update_policy
      description: <p>Policy to use for preexisting cache entries during update. </p>
- uid: com.microsoft.azure.elasticdb.shard.store._store_mapping
  parent: com.microsoft.azure.elasticdb.shard.store
  href: com.microsoft.azure.elasticdb.shard.store._store_mapping.yml
  name: StoreMapping
  nameWithType: StoreMapping
  fullName: com.microsoft.azure.elasticdb.shard.store.StoreMapping
  type: Class
  summary: <p>Storage representation of a mapping b/w key ranges and shards. </p>
  syntax:
    content: public class StoreMapping
- uid: com.microsoft.azure.elasticdb.shard.cache._cache_store_mapping_update_policy
  parent: com.microsoft.azure.elasticdb.shard.cache
  href: com.microsoft.azure.elasticdb.shard.cache._cache_store_mapping_update_policy.yml
  name: CacheStoreMappingUpdatePolicy
  nameWithType: CacheStoreMappingUpdatePolicy
  fullName: com.microsoft.azure.elasticdb.shard.cache.CacheStoreMappingUpdatePolicy
  type: Enum
  summary: <p>Policy for AddOrUpdateMapping operation. </p>
  syntax:
    content: public enum CacheStoreMappingUpdatePolicy
- uid: com.microsoft.azure.elasticdb.shard.cache._cache_store.deleteMapping(StoreMapping)
  parent: com.microsoft.azure.elasticdb.shard.cache._cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._cache_store.yml
  name: deleteMapping(StoreMapping mapping)
  nameWithType: CacheStore.deleteMapping(StoreMapping mapping)
  fullName: void com.microsoft.azure.elasticdb.shard.cache.CacheStore.deleteMapping(StoreMapping mapping)
  type: Method
  summary: >-
    <p>Invoked for deleting mapping in cache because it no longer exists in store.</p>

    <p></p>
  syntax:
    content: public void deleteMapping(StoreMapping mapping)
    parameters:
    - id: mapping
      type: com.microsoft.azure.elasticdb.shard.store._store_mapping
      description: <p>Storage representation of mapping. </p>
- uid: com.microsoft.azure.elasticdb.shard.cache._i_cache_store_mapping
  parent: com.microsoft.azure.elasticdb.shard.cache
  href: com.microsoft.azure.elasticdb.shard.cache._i_cache_store_mapping.yml
  name: ICacheStoreMapping
  nameWithType: ICacheStoreMapping
  fullName: com.microsoft.azure.elasticdb.shard.cache.ICacheStoreMapping
  type: Interface
  summary: <p>Represents a cache entry for a mapping. </p>
  syntax:
    content: public interface ICacheStoreMapping
- uid: com.microsoft.azure.elasticdb.shard.cache._cache_store.lookupMappingByKey(StoreShardMap,ShardKey)
  parent: com.microsoft.azure.elasticdb.shard.cache._cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._cache_store.yml
  name: lookupMappingByKey(StoreShardMap shardMap, ShardKey key)
  nameWithType: CacheStore.lookupMappingByKey(StoreShardMap shardMap, ShardKey key)
  fullName: ICacheStoreMapping com.microsoft.azure.elasticdb.shard.cache.CacheStore.lookupMappingByKey(StoreShardMap shardMap, ShardKey key)
  type: Method
  summary: >-
    <p>Looks up a given key in given shard map.</p>

    <p></p>
  syntax:
    content: public ICacheStoreMapping lookupMappingByKey(StoreShardMap shardMap, ShardKey key)
    parameters:
    - id: shardMap
      type: com.microsoft.azure.elasticdb.shard.store._store_shard_map
      description: <p>Storage representation of shard map. </p>
    - id: key
      type: com.microsoft.azure.elasticdb.shard.base._shard_key
      description: <p>Key value. </p>
    return:
      type: com.microsoft.azure.elasticdb.shard.cache._i_cache_store_mapping
      description: <p>Mapping corresponding to <em>key</em>  or null. </p>
- uid: com.microsoft.azure.elasticdb.shard.base._shard_key
  parent: com.microsoft.azure.elasticdb.shard.base
  href: com.microsoft.azure.elasticdb.shard.base._shard_key.yml
  name: ShardKey
  nameWithType: ShardKey
  fullName: com.microsoft.azure.elasticdb.shard.base.ShardKey
  type: Class
  summary: >-
    <p>

      <xref uid="com.microsoft.azure.elasticdb.shard.base._shard" data-throw-if-not-resolved="false">Shard</xref> key value. Wraps the type and value and allows normalization/denormalization for serialization. </p>
  syntax:
    content: public class ShardKey
- uid: com.microsoft.azure.elasticdb.shard.cache._cache_store.lookupMappingsForRange(StoreShardMap,ShardRange)
  parent: com.microsoft.azure.elasticdb.shard.cache._cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._cache_store.yml
  name: lookupMappingsForRange(StoreShardMap shardMap, ShardRange range)
  nameWithType: CacheStore.lookupMappingsForRange(StoreShardMap shardMap, ShardRange range)
  fullName: List<ICacheStoreMapping> com.microsoft.azure.elasticdb.shard.cache.CacheStore.lookupMappingsForRange(StoreShardMap shardMap, ShardRange range)
  type: Method
  summary: >-
    <p>Looks up a given range in given shard map.</p>

    <p></p>
  syntax:
    content: public List<ICacheStoreMapping> lookupMappingsForRange(StoreShardMap shardMap, ShardRange range)
    parameters:
    - id: shardMap
      type: com.microsoft.azure.elasticdb.shard.store._store_shard_map
      description: <p>Storage representation of shard map. </p>
    - id: range
      type: com.microsoft.azure.elasticdb.shard.base._shard_range
      description: <p>Optional range value, if null, we cover everything. </p>
    return:
      type: 5618da2dcom.microsoft.azure.elasticdb.shard.cache._i_cache_store_mappinga08ddfce
      description: <p>Mapping corresponding to <em>key</em>  or null. </p>
- uid: com.microsoft.azure.elasticdb.shard.base._shard_range
  parent: com.microsoft.azure.elasticdb.shard.base
  href: com.microsoft.azure.elasticdb.shard.base._shard_range.yml
  name: ShardRange
  nameWithType: ShardRange
  fullName: com.microsoft.azure.elasticdb.shard.base.ShardRange
  type: Class
  summary: <p>A range of shard keys between a low key and a high key. The low key is inclusive (part of the range) while the high key is exclusive (not part of the range). The <xref uid="com.microsoft.azure.elasticdb.shard.base._shard_range" data-throw-if-not-resolved="false">ShardRange</xref> class is immutable. </p>
  syntax:
    content: public class ShardRange
- uid: com.microsoft.azure.elasticdb.shard.cache._cache_store.clear()
  parent: com.microsoft.azure.elasticdb.shard.cache._cache_store
  href: com.microsoft.azure.elasticdb.shard.cache._cache_store.yml
  name: clear()
  nameWithType: CacheStore.clear()
  fullName: void com.microsoft.azure.elasticdb.shard.cache.CacheStore.clear()
  type: Method
  summary: <p>Clears the cache. </p>
  syntax:
    content: public void clear()
