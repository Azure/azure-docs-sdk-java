### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.implementation.TimeoutTracker"
  id: "TimeoutTracker"
  parent: "com.azure.core.amqp.implementation"
  children:
  - "com.azure.core.amqp.implementation.TimeoutTracker.TimeoutTracker(java.time.Duration,boolean)"
  - "com.azure.core.amqp.implementation.TimeoutTracker.elapsed()"
  - "com.azure.core.amqp.implementation.TimeoutTracker.remaining()"
  langs:
  - "java"
  name: "TimeoutTracker"
  nameWithType: "TimeoutTracker"
  fullName: "com.azure.core.amqp.implementation.TimeoutTracker"
  type: "Class"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " class TimeoutTracker"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.amqp.implementation.TimeoutTracker.TimeoutTracker(java.time.Duration,boolean)"
  id: "TimeoutTracker(java.time.Duration,boolean)"
  parent: "com.azure.core.amqp.implementation.TimeoutTracker"
  langs:
  - "java"
  name: "TimeoutTracker(Duration timeout, boolean startTrackingTimeout)"
  nameWithType: "TimeoutTracker.TimeoutTracker(Duration timeout, boolean startTrackingTimeout)"
  fullName: "com.azure.core.amqp.implementation.TimeoutTracker.TimeoutTracker(Duration timeout, boolean startTrackingTimeout)"
  overload: "com.azure.core.amqp.implementation.TimeoutTracker.TimeoutTracker*"
  type: "Constructor"
  package: "com.azure.core.amqp.implementation"
  summary: "Creates an instance to keep track of timed out sends."
  syntax:
    content: " TimeoutTracker(Duration timeout, boolean startTrackingTimeout)"
    parameters:
    - id: "timeout"
      type: "java.time.Duration"
      description: "original operationTimeout"
    - id: "startTrackingTimeout"
      type: "boolean"
      description: "whether/not to start the timeout tracking - right now. If not started now, timer\n tracking will start upon the first call to <xref uid=\"com.azure.core.amqp.implementation.TimeoutTracker.elapsed()\" data-throw-if-not-resolved=\"false\">TimeoutTracker#elapsed()</xref>/<xref uid=\"com.azure.core.amqp.implementation.TimeoutTracker.remaining()\" data-throw-if-not-resolved=\"false\">TimeoutTracker#remaining()</xref>"
- uid: "com.azure.core.amqp.implementation.TimeoutTracker.elapsed()"
  id: "elapsed()"
  parent: "com.azure.core.amqp.implementation.TimeoutTracker"
  langs:
  - "java"
  name: "elapsed()"
  nameWithType: "TimeoutTracker.elapsed()"
  fullName: "com.azure.core.amqp.implementation.TimeoutTracker.elapsed()"
  overload: "com.azure.core.amqp.implementation.TimeoutTracker.elapsed*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " Duration elapsed()"
    return:
      type: "java.time.Duration"
- uid: "com.azure.core.amqp.implementation.TimeoutTracker.remaining()"
  id: "remaining()"
  parent: "com.azure.core.amqp.implementation.TimeoutTracker"
  langs:
  - "java"
  name: "remaining()"
  nameWithType: "TimeoutTracker.remaining()"
  fullName: "com.azure.core.amqp.implementation.TimeoutTracker.remaining()"
  overload: "com.azure.core.amqp.implementation.TimeoutTracker.remaining*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " Duration remaining()"
    return:
      type: "java.time.Duration"
references:
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.amqp.implementation.TimeoutTracker.TimeoutTracker*"
  name: "TimeoutTracker"
  nameWithType: "TimeoutTracker.TimeoutTracker"
  fullName: "com.azure.core.amqp.implementation.TimeoutTracker.TimeoutTracker"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.TimeoutTracker.remaining*"
  name: "remaining"
  nameWithType: "TimeoutTracker.remaining"
  fullName: "com.azure.core.amqp.implementation.TimeoutTracker.remaining"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.TimeoutTracker.elapsed*"
  name: "elapsed"
  nameWithType: "TimeoutTracker.elapsed"
  fullName: "com.azure.core.amqp.implementation.TimeoutTracker.elapsed"
  package: "com.azure.core.amqp.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
