### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  id: WithCreate
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis
  children:
  - com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withFirewallRule(com.microsoft.azure.management.redis.RedisFirewallRule)
  - com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withFirewallRule(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withMinimumTlsVersion(com.microsoft.azure.management.redis.TlsVersion)
  - com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withNonSslPort()
  - com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int)
  - com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int,org.joda.time.Period)
  - com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule(com.microsoft.azure.management.redis.ScheduleEntry)
  - com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule(java.util.List<com.microsoft.azure.management.redis.ScheduleEntry>)
  - com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withRedisConfiguration(java.lang.String,java.lang.String)
  - com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)
  langs:
  - java
  name: RedisCache.DefinitionStages.WithCreate
  nameWithType: RedisCache.DefinitionStages.WithCreate
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  type: Interface
  package: com.microsoft.azure.management.redis
  summary: A Redis Cache definition with sufficient inputs to create a new Redis Cache in the cloud, but exposing additional optional inputs to specify.
  syntax:
    content: public static interface RedisCache.DefinitionStages.WithCreate extends Creatable<RedisCache>, Resource.DefinitionWithTags<RedisCache.DefinitionStages.WithCreate>
  implements:
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable<com.microsoft.azure.management.redis.RedisCache>
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate>
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withFirewallRule(com.microsoft.azure.management.redis.RedisFirewallRule)
  id: withFirewallRule(com.microsoft.azure.management.redis.RedisFirewallRule)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  langs:
  - java
  name: withFirewallRule(RedisFirewallRule rule)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withFirewallRule(RedisFirewallRule rule)
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withFirewallRule(RedisFirewallRule rule)
  overload: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withFirewallRule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Creates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
  syntax:
    content: public abstract RedisCache.DefinitionStages.WithCreate withFirewallRule(RedisFirewallRule rule)
    parameters:
    - id: rule
      type: com.microsoft.azure.management.redis.RedisFirewallRule
      description: firewall rule that specifies name, lowest and highest IP address included in the range of permitted IP addresses.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
      description: the next stage of Redis Cache definition.
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withFirewallRule(java.lang.String,java.lang.String,java.lang.String)
  id: withFirewallRule(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  langs:
  - java
  name: withFirewallRule(String name, String lowestIp, String highestIp)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withFirewallRule(String name, String lowestIp, String highestIp)
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withFirewallRule(String name, String lowestIp, String highestIp)
  overload: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withFirewallRule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Creates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
  syntax:
    content: public abstract RedisCache.DefinitionStages.WithCreate withFirewallRule(String name, String lowestIp, String highestIp)
    parameters:
    - id: name
      type: java.lang.String
      description: name of the rule.
    - id: lowestIp
      type: java.lang.String
      description: lowest IP address included in the range.
    - id: highestIp
      type: java.lang.String
      description: highest IP address included in the range.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
      description: the next stage of Redis Cache definition.
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withMinimumTlsVersion(com.microsoft.azure.management.redis.TlsVersion)
  id: withMinimumTlsVersion(com.microsoft.azure.management.redis.TlsVersion)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  langs:
  - java
  name: withMinimumTlsVersion(TlsVersion tlsVersion)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withMinimumTlsVersion(TlsVersion tlsVersion)
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withMinimumTlsVersion(TlsVersion tlsVersion)
  overload: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withMinimumTlsVersion*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2').
  syntax:
    content: public abstract RedisCache.DefinitionStages.WithCreate withMinimumTlsVersion(TlsVersion tlsVersion)
    parameters:
    - id: tlsVersion
      type: com.microsoft.azure.management.redis.TlsVersion
      description: minimum TLS version.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
      description: the next stage of Redis Cache definition.
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withNonSslPort()
  id: withNonSslPort()
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  langs:
  - java
  name: withNonSslPort()
  nameWithType: RedisCache.DefinitionStages.WithCreate.withNonSslPort()
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withNonSslPort()
  overload: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withNonSslPort*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Enables non-ssl Redis server port (6379).
  syntax:
    content: public abstract RedisCache.DefinitionStages.WithCreate withNonSslPort()
    return:
      type: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
      description: the next stage of Redis Cache definition.
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int)
  id: withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  langs:
  - java
  name: withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  overload: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Patch schedule on a Premium Cluster Cache.
  syntax:
    content: public abstract RedisCache.DefinitionStages.WithCreate withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
    parameters:
    - id: dayOfWeek
      type: com.microsoft.azure.management.redis.DayOfWeek
      description: day of week when cache can be patched.
    - id: startHourUtc
      type: int
      description: start hour after which cache patching can start.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int,org.joda.time.Period)
  id: withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int,org.joda.time.Period)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  langs:
  - java
  name: withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  overload: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Patch schedule on a Premium Cluster Cache.
  syntax:
    content: public abstract RedisCache.DefinitionStages.WithCreate withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
    parameters:
    - id: dayOfWeek
      type: com.microsoft.azure.management.redis.DayOfWeek
      description: day of week when cache can be patched.
    - id: startHourUtc
      type: int
      description: start hour after which cache patching can start.
    - id: maintenanceWindow
      type: org.joda.time.Period
      description: ISO8601 timespan specifying how much time cache patching can take.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule(com.microsoft.azure.management.redis.ScheduleEntry)
  id: withPatchSchedule(com.microsoft.azure.management.redis.ScheduleEntry)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  langs:
  - java
  name: withPatchSchedule(ScheduleEntry scheduleEntry)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withPatchSchedule(ScheduleEntry scheduleEntry)
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule(ScheduleEntry scheduleEntry)
  overload: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Patch schedule on a Premium Cluster Cache.
  syntax:
    content: public abstract RedisCache.DefinitionStages.WithCreate withPatchSchedule(ScheduleEntry scheduleEntry)
    parameters:
    - id: scheduleEntry
      type: com.microsoft.azure.management.redis.ScheduleEntry
      description: Patch schedule entry for Premium Redis Cache.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule(java.util.List<com.microsoft.azure.management.redis.ScheduleEntry>)
  id: withPatchSchedule(java.util.List<com.microsoft.azure.management.redis.ScheduleEntry>)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  langs:
  - java
  name: withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  overload: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Patch schedule on a Premium Cluster Cache.
  syntax:
    content: public abstract RedisCache.DefinitionStages.WithCreate withPatchSchedule(List<ScheduleEntry> scheduleEntry)
    parameters:
    - id: scheduleEntry
      type: java.util.List<com.microsoft.azure.management.redis.ScheduleEntry>
      description: List of patch schedule entries for Premium Redis Cache.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withRedisConfiguration(java.lang.String,java.lang.String)
  id: withRedisConfiguration(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  langs:
  - java
  name: withRedisConfiguration(String key, String value)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withRedisConfiguration(String key, String value)
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withRedisConfiguration(String key, String value)
  overload: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withRedisConfiguration*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Specifies Redis Setting. rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy, notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries, list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries, zset-max-ziplist-entries, zset-max-ziplist-value etc.
  syntax:
    content: public abstract RedisCache.DefinitionStages.WithCreate withRedisConfiguration(String key, String value)
    parameters:
    - id: key
      type: java.lang.String
      description: Redis configuration name.
    - id: value
      type: java.lang.String
      description: Redis configuration value.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
      description: the next stage of Redis Cache definition.
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)
  id: withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  langs:
  - java
  name: withRedisConfiguration(Map<String,String> redisConfiguration)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withRedisConfiguration(Map<String,String> redisConfiguration)
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withRedisConfiguration(Map<String,String> redisConfiguration)
  overload: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withRedisConfiguration*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: 'All Redis Settings. Few possible keys: rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy, notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries, list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries, zset-max-ziplist-entries, zset-max-ziplist-value etc.'
  syntax:
    content: public abstract RedisCache.DefinitionStages.WithCreate withRedisConfiguration(Map<String,String> redisConfiguration)
    parameters:
    - id: redisConfiguration
      type: java.util.Map<java.lang.String,java.lang.String>
      description: configuration of Redis Cache as a map indexed by configuration name
    return:
      type: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
      description: the next stage of Redis Cache definition.
references:
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withNonSslPort*
  name: withNonSslPort
  nameWithType: RedisCache.DefinitionStages.WithCreate.withNonSslPort
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withNonSslPort
  package: com.microsoft.azure.management.redis
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withRedisConfiguration*
  name: withRedisConfiguration
  nameWithType: RedisCache.DefinitionStages.WithCreate.withRedisConfiguration
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withRedisConfiguration
  package: com.microsoft.azure.management.redis
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withFirewallRule*
  name: withFirewallRule
  nameWithType: RedisCache.DefinitionStages.WithCreate.withFirewallRule
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withFirewallRule
  package: com.microsoft.azure.management.redis
- uid: com.microsoft.azure.management.redis.RedisFirewallRule
  name: RedisFirewallRule
  nameWithType: RedisFirewallRule
  fullName: com.microsoft.azure.management.redis.RedisFirewallRule
- uid: com.microsoft.azure.management.redis.TlsVersion
  name: TlsVersion
  nameWithType: TlsVersion
  fullName: com.microsoft.azure.management.redis.TlsVersion
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withMinimumTlsVersion*
  name: withMinimumTlsVersion
  nameWithType: RedisCache.DefinitionStages.WithCreate.withMinimumTlsVersion
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withMinimumTlsVersion
  package: com.microsoft.azure.management.redis
- uid: com.microsoft.azure.management.redis.DayOfWeek
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: com.microsoft.azure.management.redis.DayOfWeek
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule*
  name: withPatchSchedule
  nameWithType: RedisCache.DefinitionStages.WithCreate.withPatchSchedule
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withPatchSchedule
  package: com.microsoft.azure.management.redis
- uid: org.joda.time.Period
  spec.java:
  - uid: org.joda.time.Period
    name: Period
    fullName: org.joda.time.Period
- uid: com.microsoft.azure.management.redis.ScheduleEntry
  name: ScheduleEntry
  nameWithType: ScheduleEntry
  fullName: com.microsoft.azure.management.redis.ScheduleEntry
- uid: java.util.List<com.microsoft.azure.management.redis.ScheduleEntry>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.redis.ScheduleEntry
    name: ScheduleEntry
    fullName: com.microsoft.azure.management.redis.ScheduleEntry
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable<com.microsoft.azure.management.redis.RedisCache>
  name: Creatable<RedisCache>
  nameWithType: Creatable<RedisCache>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<com.microsoft.azure.management.redis.RedisCache>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate>
  name: Resource.DefinitionWithTags<RedisCache.DefinitionStages.WithCreate>
  nameWithType: Resource.DefinitionWithTags<RedisCache.DefinitionStages.WithCreate>
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate>
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  name: Creatable
  nameWithType: Creatable
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable
- uid: com.microsoft.azure.management.redis.RedisCache
  name: RedisCache
  nameWithType: RedisCache
  fullName: com.microsoft.azure.management.redis.RedisCache
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  name: Resource.DefinitionWithTags
  nameWithType: Resource.DefinitionWithTags
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
