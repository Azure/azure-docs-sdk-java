items:
- uid: com.microsoft.azure.eventhubs._event_hub_client
  id: _event_hub_client
  parent: com.microsoft.azure.eventhubs
  children:
  - com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final Instant,final long)
  - com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final Instant,final long,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,boolean,final long)
  - com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,boolean,final long,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,final long)
  - com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,final long,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync(final String,final String,final Instant,final long)
  - com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync(final String,final String,final Instant,final long,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync(final String,final String,final String,boolean,final long)
  - com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync(final String,final String,final String,boolean,final long,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync(final String,final String,final String,final long)
  - com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync(final String,final String,final String,final long,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)
  - com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String,final RetryPolicy)
  - com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)
  - com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String,final RetryPolicy)
  - com.microsoft.azure.eventhubs._event_hub_client.createPartitionSender(final String)
  - com.microsoft.azure.eventhubs._event_hub_client.createPartitionSenderSync(final String)
  - com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final Instant)
  - com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final Instant,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String)
  - com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String,boolean)
  - com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String,boolean,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync(final String,final String,final Instant)
  - com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync(final String,final String,final Instant,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync(final String,final String,final String)
  - com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync(final String,final String,final String,boolean)
  - com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync(final String,final String,final String,boolean,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync(final String,final String,final String,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._event_hub_client.DEFAULT_CONSUMER_GROUP_NAME()
  - com.microsoft.azure.eventhubs._event_hub_client.onClose()
  - com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)
  - com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)
  - com.microsoft.azure.eventhubs._event_hub_client.send(final Iterable<EventData>)
  - com.microsoft.azure.eventhubs._event_hub_client.send(final Iterable<EventData>,final String)
  - com.microsoft.azure.eventhubs._event_hub_client.sendSync(final EventData)
  - com.microsoft.azure.eventhubs._event_hub_client.sendSync(final EventData,final String)
  - com.microsoft.azure.eventhubs._event_hub_client.sendSync(final Iterable<EventData>)
  - com.microsoft.azure.eventhubs._event_hub_client.sendSync(final Iterable<EventData>,final String)
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: EventHubClient
  nameWithType: EventHubClient
  fullName: com.microsoft.azure.eventhubs.EventHubClient
  type: Class
  source:
    remote: &o0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 33
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Anchor class - all EventHub client operations STARTS here.</p>

    <p></p>
  syntax: &o1
    content: public class EventHubClient extends ClientEntity
  see:
  - type: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)
    description: ''
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.servicebus._client_entity
  inheritedMembers:
  - com.microsoft.azure.servicebus._client_entity.ClientEntity(final String,final ClientEntity)
  - com.microsoft.azure.servicebus._client_entity.close()
  - com.microsoft.azure.servicebus._client_entity.closeSync()
  - com.microsoft.azure.servicebus._client_entity.getClientId()
  - com.microsoft.azure.servicebus._client_entity.getIsClosed()
  - com.microsoft.azure.servicebus._client_entity.getIsClosingOrClosed()
  - com.microsoft.azure.servicebus._client_entity.getLastKnownError()
  - com.microsoft.azure.servicebus._client_entity.setClosed()
  - com.microsoft.azure.servicebus._client_entity.throwIfClosed()
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final Instant,final long)
  id: createEpochReceiver(final String,final String,final Instant,final long)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createEpochReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch)
  nameWithType: EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 1020
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Create a Epoch based EventHub receiver with given partition id and start receiving from the beginning of the partition stream. The receiver is created for a specific EventHub Partition from the specific consumer group. </p>

    <p>It is important to pay attention to the following when creating epoch based receiver: <itemizedlist><listitem><p>Ownership enforcement - Once you created an epoch based receiver, you cannot create a non-epoch receiver to the same consumerGroup-Partition combo until all receivers to the combo are closed. </p></listitem><listitem><p>Ownership stealing - If a receiver with higher epoch value is created for a consumerGroup-Partition combo, any older epoch receiver to that combo will be force closed. </p></listitem><listitem><p>Any receiver closed due to lost of ownership to a consumerGroup-Partition combo will get ReceiverDisconnectedException for all operations from that receiver. </p></listitem></itemizedlist></p>

    <p></p>
  syntax: &o12
    content: public final CompletableFuture<PartitionReceiver> createEpochReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: dateTime
      type: 57532c1c
      description: <p>the date time instant that receive operations will start receive events from. Events received will have <ref refid="" kindref="compound">EventData.SystemProperties#getEnqueuedTime()</ref> later than this Instant. </p>
    - id: epoch
      type: 4c60ae65
      description: <p>a unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final Instant,final long,final ReceiverOptions)
  id: createEpochReceiver(final String,final String,final Instant,final long,final ReceiverOptions)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createEpochReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch, final ReceiverOptions receiverOptions)
  nameWithType: EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch, final ReceiverOptions receiverOptions)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch, final ReceiverOptions receiverOptions)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 1214
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Create a Epoch based EventHub receiver with given partition id and start receiving from the beginning of the partition stream. The receiver is created for a specific EventHub Partition from the specific consumer group. </p>

    <p>It is important to pay attention to the following when creating epoch based receiver: <itemizedlist><listitem><p>Ownership enforcement - Once you created an epoch based receiver, you cannot create a non-epoch receiver to the same consumerGroup-Partition combo until all receivers to the combo are closed. </p></listitem><listitem><p>Ownership stealing - If a receiver with higher epoch value is created for a consumerGroup-Partition combo, any older epoch receiver to that combo will be force closed. </p></listitem><listitem><p>Any receiver closed due to lost of ownership to a consumerGroup-Partition combo will get ReceiverDisconnectedException for all operations from that receiver. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public final CompletableFuture<PartitionReceiver> createEpochReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch, final ReceiverOptions receiverOptions)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: dateTime
      type: 57532c1c
      description: <p>the date time instant that receive operations will start receive events from. Events received will have <ref refid="" kindref="compound">EventData.SystemProperties#getEnqueuedTime()</ref> later than this Instant. </p>
    - id: epoch
      type: 4c60ae65
      description: <p>a unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    - id: receiverOptions
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
      description: <p>the set of options to enable on the event hubs receiver </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,boolean,final long)
  id: createEpochReceiver(final String,final String,final String,boolean,final long)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch)
  nameWithType: EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 958
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Create a Epoch based EventHub receiver with given partition id and start receiving from the beginning of the partition stream. The receiver is created for a specific EventHub Partition from the specific consumer group. </p>

    <p>It is important to pay attention to the following when creating epoch based receiver: <itemizedlist><listitem><p>Ownership enforcement - Once you created an epoch based receiver, you cannot create a non-epoch receiver to the same consumerGroup-Partition combo until all receivers to the combo are closed. </p></listitem><listitem><p>Ownership stealing - If a receiver with higher epoch value is created for a consumerGroup-Partition combo, any older epoch receiver to that combo will be force closed. </p></listitem><listitem><p>Any receiver closed due to lost of ownership to a consumerGroup-Partition combo will get ReceiverDisconnectedException for all operations from that receiver. </p></listitem></itemizedlist></p>

    <p></p>
  syntax: &o11
    content: public final CompletableFuture<PartitionReceiver> createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: offsetInclusive
      type: 4fc6e284
      description: <p>if set to true, the startingOffset is treated as an inclusive offset - meaning the first event returned is the one that has the starting offset. Normally first event returned is the event after the starting offset. </p>
    - id: epoch
      type: 4c60ae65
      description: <p>an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,boolean,final long,final ReceiverOptions)
  id: createEpochReceiver(final String,final String,final String,boolean,final long,final ReceiverOptions)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch, final ReceiverOptions receiverOptions)
  nameWithType: EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch, final ReceiverOptions receiverOptions)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch, final ReceiverOptions receiverOptions)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 1150
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Create a Epoch based EventHub receiver with given partition id and start receiving from the beginning of the partition stream. The receiver is created for a specific EventHub Partition from the specific consumer group. </p>

    <p>It is important to pay attention to the following when creating epoch based receiver: <itemizedlist><listitem><p>Ownership enforcement - Once you created an epoch based receiver, you cannot create a non-epoch receiver to the same consumerGroup-Partition combo until all receivers to the combo are closed. </p></listitem><listitem><p>Ownership stealing - If a receiver with higher epoch value is created for a consumerGroup-Partition combo, any older epoch receiver to that combo will be force closed. </p></listitem><listitem><p>Any receiver closed due to lost of ownership to a consumerGroup-Partition combo will get ReceiverDisconnectedException for all operations from that receiver. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public final CompletableFuture<PartitionReceiver> createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch, final ReceiverOptions receiverOptions)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: offsetInclusive
      type: 4fc6e284
      description: <p>if set to true, the startingOffset is treated as an inclusive offset - meaning the first event returned is the one that has the starting offset. Normally first event returned is the event after the starting offset. </p>
    - id: epoch
      type: 4c60ae65
      description: <p>an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    - id: receiverOptions
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
      description: <p>the set of options to enable on the event hubs receiver </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,final long)
  id: createEpochReceiver(final String,final String,final String,final long)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
  nameWithType: EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 894
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Create a Epoch based EventHub receiver with given partition id and start receiving from the beginning of the partition stream. The receiver is created for a specific EventHub Partition from the specific consumer group. </p>

    <p>It is important to pay attention to the following when creating epoch based receiver: <itemizedlist><listitem><p>Ownership enforcement - Once you created an epoch based receiver, you cannot create a non-epoch receiver to the same consumerGroup-Partition combo until all receivers to the combo are closed. </p></listitem><listitem><p>Ownership stealing - If a receiver with higher epoch value is created for a consumerGroup-Partition combo, any older epoch receiver to that combo will be force closed. </p></listitem><listitem><p>Any receiver closed due to lost of ownership to a consumerGroup-Partition combo will get ReceiverDisconnectedException for all operations from that receiver. </p></listitem></itemizedlist></p>

    <p></p>
  syntax: &o10
    content: public final CompletableFuture<PartitionReceiver> createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: epoch
      type: 4c60ae65
      description: <p>an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,final long,final ReceiverOptions)
  id: createEpochReceiver(final String,final String,final String,final long,final ReceiverOptions)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch, final ReceiverOptions receiverOptions)
  nameWithType: EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch, final ReceiverOptions receiverOptions)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch, final ReceiverOptions receiverOptions)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 1084
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Create a Epoch based EventHub receiver with given partition id and start receiving from the beginning of the partition stream. The receiver is created for a specific EventHub Partition from the specific consumer group. </p>

    <p>It is important to pay attention to the following when creating epoch based receiver: <itemizedlist><listitem><p>Ownership enforcement - Once you created an epoch based receiver, you cannot create a non-epoch receiver to the same consumerGroup-Partition combo until all receivers to the combo are closed. </p></listitem><listitem><p>Ownership stealing - If a receiver with higher epoch value is created for a consumerGroup-Partition combo, any older epoch receiver to that combo will be force closed. </p></listitem><listitem><p>Any receiver closed due to lost of ownership to a consumerGroup-Partition combo will get ReceiverDisconnectedException for all operations from that receiver. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public final CompletableFuture<PartitionReceiver> createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch, final ReceiverOptions receiverOptions)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: epoch
      type: 4c60ae65
      description: <p>an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    - id: receiverOptions
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
      description: <p>the set of options to enable on the event hubs receiver </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync(final String,final String,final Instant,final long)
  id: createEpochReceiverSync(final String,final String,final Instant,final long)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createEpochReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch)
  nameWithType: EventHubClient.createEpochReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch)
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 973
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final Instant,final long)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionReceiver createEpochReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: dateTime
      type: 57532c1c
      description: <p>the date time instant that receive operations will start receive events from. Events received will have <ref refid="" kindref="compound">EventData.SystemProperties#getEnqueuedTime()</ref> later than this Instant. </p>
    - id: epoch
      type: 4c60ae65
      description: <p>an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance which can be used for receiving <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync(final String,final String,final Instant,final long,final ReceiverOptions)
  id: createEpochReceiverSync(final String,final String,final Instant,final long,final ReceiverOptions)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createEpochReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch, final ReceiverOptions receiverOptions)
  nameWithType: EventHubClient.createEpochReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch, final ReceiverOptions receiverOptions)
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch, final ReceiverOptions receiverOptions)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 1166
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final Instant,final long)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionReceiver createEpochReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch, final ReceiverOptions receiverOptions)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: dateTime
      type: 57532c1c
      description: <p>the date time instant that receive operations will start receive events from. Events received will have <ref refid="" kindref="compound">EventData.SystemProperties#getEnqueuedTime()</ref> later than this Instant. </p>
    - id: epoch
      type: 4c60ae65
      description: <p>an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    - id: receiverOptions
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
      description: <p>the set of options to enable on the event hubs receiver </p>
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance which can be used for receiving <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync(final String,final String,final String,boolean,final long)
  id: createEpochReceiverSync(final String,final String,final String,boolean,final long)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch)
  nameWithType: EventHubClient.createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch)
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 910
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,boolean,final long)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionReceiver createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: offsetInclusive
      type: 4fc6e284
      description: <p>if set to true, the startingOffset is treated as an inclusive offset - meaning the first event returned is the one that has the starting offset. Normally first event returned is the event after the starting offset. </p>
    - id: epoch
      type: 4c60ae65
      description: <p>an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance which can be used for receiving <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync(final String,final String,final String,boolean,final long,final ReceiverOptions)
  id: createEpochReceiverSync(final String,final String,final String,boolean,final long,final ReceiverOptions)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch, final ReceiverOptions receiverOptions)
  nameWithType: EventHubClient.createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch, final ReceiverOptions receiverOptions)
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch, final ReceiverOptions receiverOptions)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 1101
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,boolean,final long)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionReceiver createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch, final ReceiverOptions receiverOptions)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: offsetInclusive
      type: 4fc6e284
      description: <p>if set to true, the startingOffset is treated as an inclusive offset - meaning the first event returned is the one that has the starting offset. Normally first event returned is the event after the starting offset. </p>
    - id: epoch
      type: 4c60ae65
      description: <p>an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    - id: receiverOptions
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
      description: <p>the set of options to enable on the event hubs receiver </p>
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance which can be used for receiving <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync(final String,final String,final String,final long)
  id: createEpochReceiverSync(final String,final String,final String,final long)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
  nameWithType: EventHubClient.createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 847
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,final long)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionReceiver createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: epoch
      type: 4c60ae65
      description: <p>an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance which can be used for receiving <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync(final String,final String,final String,final long,final ReceiverOptions)
  id: createEpochReceiverSync(final String,final String,final String,final long,final ReceiverOptions)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch, final ReceiverOptions receiverOptions)
  nameWithType: EventHubClient.createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch, final ReceiverOptions receiverOptions)
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch, final ReceiverOptions receiverOptions)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 1036
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,final long)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionReceiver createEpochReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch, final ReceiverOptions receiverOptions)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: epoch
      type: 4c60ae65
      description: <p>an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    - id: receiverOptions
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
      description: <p>the set of options to enable on the event hubs receiver </p>
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance which can be used for receiving <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)
  id: createFromConnectionString(final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createFromConnectionString(final String connectionString)
  nameWithType: EventHubClient.createFromConnectionString(final String connectionString)
  fullName: static CompletableFuture<EventHubClient> com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionString(final String connectionString)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 111
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Factory method to create an instance of <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> using the supplied connectionString. In a normal scenario (when re-direct is not enabled) - one <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> instance maps to one Connection to the Azure ServiceBus EventHubs service. </p>

    <p>The <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> created from this method creates a Sender instance internally, which is used by the <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> methods.</p>

    <p></p>
  syntax: &o2
    content: public static CompletableFuture<EventHubClient> createFromConnectionString(final String connectionString)
    parameters:
    - id: connectionString
      type: 3d93591e
      description: <p>The connection string to be used. See <ref refid="" kindref="compound">ConnectionStringBuilder</ref> to construct a connectionString. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.eventhubs._event_hub_clienta08ddfce
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> which can be used to create Senders and Receivers to EventHub </p>
  exceptions:
  - type: 73fec9fb
    description: <p>If Service Bus service encountered problems during connection creation. </p>
  - type: cbf33bbe
    description: <p>If the underlying Proton-J layer encounter network errors. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String,final RetryPolicy)
  id: createFromConnectionString(final String,final RetryPolicy)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createFromConnectionString(final String connectionString, final RetryPolicy retryPolicy)
  nameWithType: EventHubClient.createFromConnectionString(final String connectionString, final RetryPolicy retryPolicy)
  fullName: static CompletableFuture<EventHubClient> com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionString(final String connectionString, final RetryPolicy retryPolicy)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 128
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Factory method to create an instance of <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> using the supplied connectionString. In a normal scenario (when re-direct is not enabled) - one <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> instance maps to one Connection to the Azure ServiceBus EventHubs service. </p>

    <p>The <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> created from this method creates a Sender instance internally, which is used by the <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> methods.</p>

    <p></p>
  syntax:
    content: public static CompletableFuture<EventHubClient> createFromConnectionString(final String connectionString, final RetryPolicy retryPolicy)
    parameters:
    - id: connectionString
      type: 3d93591e
      description: <p>The connection string to be used. See <ref refid="" kindref="compound">ConnectionStringBuilder</ref> to construct a connectionString. </p>
    - id: retryPolicy
      type: 93de0ef9com.microsoft.azure.servicebus._retry_policy
      description: <p>A custom <ref refid="" kindref="compound">RetryPolicy</ref> to be used when communicating with EventHub. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.eventhubs._event_hub_clienta08ddfce
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> which can be used to create Senders and Receivers to EventHub </p>
  exceptions:
  - type: 73fec9fb
    description: <p>If Service Bus service encountered problems during connection creation. </p>
  - type: cbf33bbe
    description: <p>If the underlying Proton-J layer encounter network errors. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)
  id: createFromConnectionStringSync(final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createFromConnectionStringSync(final String connectionString)
  nameWithType: EventHubClient.createFromConnectionStringSync(final String connectionString)
  fullName: static EventHubClient com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionStringSync(final String connectionString)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 59
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: &o5
    content: public static EventHubClient createFromConnectionStringSync(final String connectionString)
    parameters:
    - id: connectionString
      type: 3d93591e
      description: <p>The connection string to be used. See <ref refid="" kindref="compound">ConnectionStringBuilder</ref> to construct a connectionString. </p>
    return:
      type: com.microsoft.azure.eventhubs._event_hub_client
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> which can be used to create Senders and Receivers to EventHub </p>
  exceptions:
  - type: 73fec9fb
    description: <p>If Service Bus service encountered problems during connection creation. </p>
  - type: cbf33bbe
    description: <p>If the underlying Proton-J layer encounter network errors. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String,final RetryPolicy)
  id: createFromConnectionStringSync(final String,final RetryPolicy)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createFromConnectionStringSync(final String connectionString, final RetryPolicy retryPolicy)
  nameWithType: EventHubClient.createFromConnectionStringSync(final String connectionString, final RetryPolicy retryPolicy)
  fullName: static EventHubClient com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionStringSync(final String connectionString, final RetryPolicy retryPolicy)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 73
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public static EventHubClient createFromConnectionStringSync(final String connectionString, final RetryPolicy retryPolicy)
    parameters:
    - id: connectionString
      type: 3d93591e
      description: <p>The connection string to be used. See <ref refid="" kindref="compound">ConnectionStringBuilder</ref> to construct a connectionString. </p>
    - id: retryPolicy
      type: 93de0ef9com.microsoft.azure.servicebus._retry_policy
      description: <p>A custom <ref refid="" kindref="compound">RetryPolicy</ref> to be used when communicating with EventHub. </p>
    return:
      type: com.microsoft.azure.eventhubs._event_hub_client
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> which can be used to create Senders and Receivers to EventHub </p>
  exceptions:
  - type: 73fec9fb
    description: <p>If Service Bus service encountered problems during connection creation. </p>
  - type: cbf33bbe
    description: <p>If the underlying Proton-J layer encounter network errors. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createPartitionSender(final String)
  id: createPartitionSender(final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createPartitionSender(final String partitionId)
  nameWithType: EventHubClient.createPartitionSender(final String partitionId)
  fullName: final CompletableFuture<PartitionSender> com.microsoft.azure.eventhubs.EventHubClient.createPartitionSender(final String partitionId)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createPartitionSender*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 504
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Create a <xref href="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false"></xref> which can publish <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s directly to a specific EventHub partition (sender type iii. in the below list). </p>

    <p>There are 3 patterns/ways to send to EventHubs: <preformatted>

    i.   <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">send(Iterable)</ref>

    ii.  <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">send(Iterable, String)</ref>

    iii. <xref href="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">PartitionSender#send(Iterable)</ref></preformatted></p>

    <p></p>
  syntax: &o6
    content: public final CompletableFuture<PartitionSender> createPartitionSender(final String partitionId)
    parameters:
    - id: partitionId
      type: 3d93591e
      description: <p>partitionId of EventHub to send the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s to </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_sendera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false"></xref> when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during connection creation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_sender
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createPartitionSenderSync(final String)
  id: createPartitionSenderSync(final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createPartitionSenderSync(final String partitionId)
  nameWithType: EventHubClient.createPartitionSenderSync(final String partitionId)
  fullName: final PartitionSender com.microsoft.azure.eventhubs.EventHubClient.createPartitionSenderSync(final String partitionId)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createPartitionSenderSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 462
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createPartitionSender(final String)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionSender createPartitionSenderSync(final String partitionId)
    parameters:
    - id: partitionId
      type: 3d93591e
      description: <p>partitionId of EventHub to send the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s to </p>
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_sender
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false"></xref> which can be used to send events to a specific partition. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during connection creation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final Instant)
  id: createReceiver(final String,final String,final Instant)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime)
  nameWithType: EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createReceiver*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 665
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Create the EventHub receiver with given partition id and start receiving from the specified starting offset. The receiver is created for a specific EventHub Partition from the specific consumer group.</p>

    <p></p>
  syntax: &o9
    content: public final CompletableFuture<PartitionReceiver> createReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: dateTime
      type: 57532c1c
      description: <p>the date time instant that receive operations will start receive events from. Events received will have <ref refid="" kindref="compound">EventData.SystemProperties#getEnqueuedTime()</ref> later than this Instant. </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final Instant,final ReceiverOptions)
  id: createReceiver(final String,final String,final Instant,final ReceiverOptions)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final ReceiverOptions receiverOptions)
  nameWithType: EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final ReceiverOptions receiverOptions)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final ReceiverOptions receiverOptions)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createReceiver*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 832
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Create the EventHub receiver with given partition id and start receiving from the specified starting offset. The receiver is created for a specific EventHub Partition from the specific consumer group.</p>

    <p></p>
  syntax:
    content: public final CompletableFuture<PartitionReceiver> createReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final ReceiverOptions receiverOptions)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: dateTime
      type: 57532c1c
      description: <p>the date time instant that receive operations will start receive events from. Events received will have <ref refid="" kindref="compound">EventData.SystemProperties#getEnqueuedTime()</ref> later than this Instant. </p>
    - id: receiverOptions
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
      description: <p>the set of options to enable on the event hubs receiver </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String)
  id: createReceiver(final String,final String,final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)
  nameWithType: EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createReceiver*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 559
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>The receiver is created for a specific EventHub partition from the specific consumer group. </p>

    <p>NOTE: There can be a maximum number of receivers that can run in parallel per ConsumerGroup per Partition. The limit is enforced by the Event Hub service - current limit is 5 receivers in parallel. Having multiple receivers reading from offsets that are far apart on the same consumer group / partition combo will have significant performance Impact.</p>

    <p></p>
  syntax: &o7
    content: public final CompletableFuture<PartitionReceiver> createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String,boolean)
  id: createReceiver(final String,final String,final String,boolean)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive)
  nameWithType: EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createReceiver*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 613
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Create the EventHub receiver with given partition id and start receiving from the specified starting offset. The receiver is created for a specific EventHub Partition from the specific consumer group.</p>

    <p></p>
  syntax: &o8
    content: public final CompletableFuture<PartitionReceiver> createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: offsetInclusive
      type: 4fc6e284
      description: <p>if set to true, the startingOffset is treated as an inclusive offset - meaning the first event returned is the one that has the starting offset. Normally first event returned is the event after the starting offset. </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String,boolean,final ReceiverOptions)
  id: createReceiver(final String,final String,final String,boolean,final ReceiverOptions)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final ReceiverOptions receiverOptions)
  nameWithType: EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final ReceiverOptions receiverOptions)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final ReceiverOptions receiverOptions)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createReceiver*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 778
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Create the EventHub receiver with given partition id and start receiving from the specified starting offset. The receiver is created for a specific EventHub Partition from the specific consumer group.</p>

    <p></p>
  syntax:
    content: public final CompletableFuture<PartitionReceiver> createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final ReceiverOptions receiverOptions)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: offsetInclusive
      type: 4fc6e284
      description: <p>if set to true, the startingOffset is treated as an inclusive offset - meaning the first event returned is the one that has the starting offset. Normally first event returned is the event after the starting offset. </p>
    - id: receiverOptions
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
      description: <p>the set of options to enable on the event hubs receiver </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String,final ReceiverOptions)
  id: createReceiver(final String,final String,final String,final ReceiverOptions)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final ReceiverOptions receiverOptions)
  nameWithType: EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final ReceiverOptions receiverOptions)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final ReceiverOptions receiverOptions)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createReceiver*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 722
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>The receiver is created for a specific EventHub partition from the specific consumer group. </p>

    <p>NOTE: There can be a maximum number of receivers that can run in parallel per ConsumerGroup per Partition. The limit is enforced by the Event Hub service - current limit is 5 receivers in parallel. Having multiple receivers reading from offsets that are far apart on the same consumer group / partition combo will have significant performance Impact.</p>

    <p></p>
  syntax:
    content: public final CompletableFuture<PartitionReceiver> createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final ReceiverOptions receiverOptions)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: receiverOptions
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
      description: <p>the set of options to enable on the event hubs receiver </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance when it is completed. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync(final String,final String,final Instant)
  id: createReceiverSync(final String,final String,final Instant)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime)
  nameWithType: EventHubClient.createReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime)
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 627
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final Instant)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionReceiver createReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: dateTime
      type: 57532c1c
      description: <p>the date time instant that receive operations will start receive events from. Events received will have <ref refid="" kindref="compound">EventData.SystemProperties#getEnqueuedTime()</ref> later than this Instant. </p>
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance which can be used for receiving <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync(final String,final String,final Instant,final ReceiverOptions)
  id: createReceiverSync(final String,final String,final Instant,final ReceiverOptions)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime, final ReceiverOptions receiverOptions)
  nameWithType: EventHubClient.createReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime, final ReceiverOptions receiverOptions)
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime, final ReceiverOptions receiverOptions)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 793
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final Instant)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionReceiver createReceiverSync(final String consumerGroupName, final String partitionId, final Instant dateTime, final ReceiverOptions receiverOptions)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: dateTime
      type: 57532c1c
      description: <p>the date time instant that receive operations will start receive events from. Events received will have <ref refid="" kindref="compound">EventData.SystemProperties#getEnqueuedTime()</ref> later than this Instant. </p>
    - id: receiverOptions
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
      description: <p>the set of options to enable on the event hubs receiver </p>
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance which can be used for receiving <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync(final String,final String,final String)
  id: createReceiverSync(final String,final String,final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset)
  nameWithType: EventHubClient.createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset)
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 518
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionReceiver createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance which can be used for receiving <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync(final String,final String,final String,boolean)
  id: createReceiverSync(final String,final String,final String,boolean)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive)
  nameWithType: EventHubClient.createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive)
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 574
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String,boolean)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionReceiver createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: offsetInclusive
      type: 4fc6e284
      description: <p>if set to true, the startingOffset is treated as an inclusive offset - meaning the first event returned is the one that has the starting offset. Normally first event returned is the event after the starting offset. </p>
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance which can be used for receiving <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync(final String,final String,final String,boolean,final ReceiverOptions)
  id: createReceiverSync(final String,final String,final String,boolean,final ReceiverOptions)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final ReceiverOptions receiverOptions)
  nameWithType: EventHubClient.createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final ReceiverOptions receiverOptions)
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final ReceiverOptions receiverOptions)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 738
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String,boolean)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionReceiver createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final ReceiverOptions receiverOptions)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: offsetInclusive
      type: 4fc6e284
      description: <p>if set to true, the startingOffset is treated as an inclusive offset - meaning the first event returned is the one that has the starting offset. Normally first event returned is the event after the starting offset. </p>
    - id: receiverOptions
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
      description: <p>the set of options to enable on the event hubs receiver </p>
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance which can be used for receiving <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync(final String,final String,final String,final ReceiverOptions)
  id: createReceiverSync(final String,final String,final String,final ReceiverOptions)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, final ReceiverOptions receiverOptions)
  nameWithType: EventHubClient.createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, final ReceiverOptions receiverOptions)
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, final ReceiverOptions receiverOptions)
  overload: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 680
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final PartitionReceiver createReceiverSync(final String consumerGroupName, final String partitionId, final String startingOffset, final ReceiverOptions receiverOptions)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: receiverOptions
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
      description: <p>the set of options to enable on the event hubs receiver </p>
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance which can be used for receiving <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.DEFAULT_CONSUMER_GROUP_NAME()
  id: DEFAULT_CONSUMER_GROUP_NAME()
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: DEFAULT_CONSUMER_GROUP_NAME
  nameWithType: EventHubClient.DEFAULT_CONSUMER_GROUP_NAME
  fullName: final String com.microsoft.azure.eventhubs.EventHubClient.DEFAULT_CONSUMER_GROUP_NAME
  type: Field
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 34
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public static final String DEFAULT_CONSUMER_GROUP_NAME= "$Default"
    return:
      type: 3d93591e
- uid: com.microsoft.azure.eventhubs._event_hub_client.onClose()
  id: onClose()
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: onClose()
  nameWithType: EventHubClient.onClose()
  fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.EventHubClient.onClose()
  overload: com.microsoft.azure.eventhubs._event_hub_client.onClose*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 1220
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public CompletableFuture<Void> onClose()
    return:
      type: db03ee24
- uid: com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)
  id: send(final EventData)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: send(final EventData data)
  nameWithType: EventHubClient.send(final EventData data)
  fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.EventHubClient.send(final EventData data)
  overload: com.microsoft.azure.eventhubs._event_hub_client.send*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 202
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Send <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to EventHub. The sent <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> will land on any arbitrarily chosen EventHubs partition. </p>

    <p>There are 3 ways to send to EventHubs, each exposed as a method (along with its sendBatch overload): <itemizedlist><listitem><p><xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">send(Iterable)</ref></p></listitem><listitem><p><xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">send(Iterable, String)</ref></p></listitem><listitem><p><xref href="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">PartitionSender#send(Iterable)</ref></p></listitem></itemizedlist></p>

    <p>Use this method to Send, if: <preformatted>

    a)  the send(<xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>) operation should be highly available and

    b)  the data needs to be evenly distributed among all partitions; exception being, when a subset of partitions are unavailable

    </preformatted></p>

    <p>

      <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> send's the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to a Service Gateway, which in-turn will forward the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to one of the EventHubs' partitions. Here's the message forwarding algorithm: <preformatted>

    i.  Forward the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s to EventHub partitions, by equally distributing the data among all partitions (ex: Round-robin the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s to all EventHubs' partitions)

    ii. If one of the EventHub partitions is unavailable for a moment, the Service Gateway will automatically detect it and forward the message to another available partition - making the Send operation highly-available.

    </preformatted></p>

    <p></p>
  syntax: &o3
    content: public final CompletableFuture<Void> send(final EventData data)
    parameters:
    - id: data
      type: 93de0ef9com.microsoft.azure.eventhubs._event_data
      description: <p>the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to be sent. </p>
    return:
      type: fc984e6f
      description: <p>a CompletableFuture that can be completed when the send operations is done.. </p>
  see:
  - type: com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)
    description: ''
  - type: com.microsoft.azure.eventhubs._partition_sender.send(EventData)
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)
  id: send(final EventData,final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: send(final EventData eventData, final String partitionKey)
  nameWithType: EventHubClient.send(final EventData eventData, final String partitionKey)
  fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.EventHubClient.send(final EventData eventData, final String partitionKey)
  overload: com.microsoft.azure.eventhubs._event_hub_client.send*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 364
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Send an '<xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> with a partitionKey' to EventHub. All <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s with a partitionKey are guaranteed to land on the same partition. This send pattern emphasize data correlation over general availability and latency. </p>

    <p>There are 3 ways to send to EventHubs, each exposed as a method (along with its sendBatch overload): <preformatted>

    i.   <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">send(Iterable)</ref>

    ii.  <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">send(Iterable, String)</ref>

    iii. <xref href="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">PartitionSender#send(Iterable)</ref></preformatted></p>

    <p>Use this type of Send, if: <preformatted>

    i.  There is a need for correlation of events based on Sender instance; The sender can generate a UniqueId and set it as partitionKey - which on the received Message can be used for correlation

    ii. The client wants to take control of distribution of data across partitions.

    </preformatted></p>

    <p>Multiple PartitionKey's could be mapped to one Partition. EventHubs service uses a proprietary Hash algorithm to map the PartitionKey to a PartitionId. Using this type of Send (Sending using a specific partitionKey), could sometimes result in partitions which are not evenly distributed.</p>

    <p></p>
  syntax: &o4
    content: public final CompletableFuture<Void> send(final EventData eventData, final String partitionKey)
    parameters:
    - id: eventData
      type: 93de0ef9com.microsoft.azure.eventhubs._event_data
      description: <p>the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to be sent. </p>
    - id: partitionKey
      type: 3d93591e
      description: <p>the partitionKey will be hash'ed to determine the partitionId to send the eventData to. On the Received message this can be accessed at <ref refid="" kindref="compound">EventData.SystemProperties#getPartitionKey()</ref></p>
    return:
      type: fc984e6f
      description: <p>a CompletableFuture that can be completed when the send operations is done.. </p>
  see:
  - type: com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)
    description: ''
  - type: com.microsoft.azure.eventhubs._partition_sender.send(EventData)
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.send(final Iterable<EventData>)
  id: send(final Iterable<EventData>)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: send(final Iterable<EventData> eventDatas)
  nameWithType: EventHubClient.send(final Iterable<EventData> eventDatas)
  fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.EventHubClient.send(final Iterable<EventData> eventDatas)
  overload: com.microsoft.azure.eventhubs._event_hub_client.send*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 292
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Send a batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to EventHub. The sent <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> will land on any arbitrarily chosen EventHubs partition. This is the most recommended way to Send to EventHubs. </p>

    <p>There are 3 ways to send to EventHubs, to understand this particular type of Send refer to the overload <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref>, which is used to send single <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. Use this overload versus <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref>, if you need to send a batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>

    <p>Sending a batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s is useful in the following cases: <preformatted>

    i.  Efficient send - sending a batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> maximizes the overall throughput by optimally using the number of sessions created to EventHubs' service.

    ii. Send multiple <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s in a Transaction. To achieve ACID properties, the Gateway Service will forward all <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s in the batch to a single EventHubs' partition.

    </preformatted></p>

    <p>Sample code (sample uses sync version of the api but concept are identical): <preformatted>

    Gson gson = new GsonBuilder().create();

    <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> client = <xref href="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)" data-throw-if-not-resolved="false"></xref>("__connection__");</preformatted></p>

    <p>

      <preformatted>while (true)

    {

        LinkedList{&lt;}<xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>{&gt;} events = new LinkedList{&lt;}<xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>{&gt;}();}

        for (int count = 1; count {&lt;} 11; count++)

        {

            PayloadEvent payload = new PayloadEvent(count);

            byte[] payloadBytes = gson.toJson(payload).getBytes(Charset.defaultCharset());

            <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> sendEvent = new EventData(payloadBytes);

            Map{&lt;}String, String{&gt;} applicationProperties = new HashMap{&lt;}String, String{&gt;}();

            applicationProperties.put("from", "javaClient");

            sendEvent.setProperties(applicationProperties);

            events.add(sendEvent);

        }</preformatted>

    </p>

    <p>

      <preformatted>    client.sendSync(events);

        System.out.println(String.format("Sent Batch... Size: %s", events.size()));

    }

    </preformatted>

    </p>

    <p>for Exceptions refer to <ref refid="" kindref="compound">sendSync(Iterable)</ref></p>

    <p></p>
  syntax:
    content: public final CompletableFuture<Void> send(final Iterable<EventData> eventDatas)
    parameters:
    - id: eventDatas
      type: f42d2527com.microsoft.azure.eventhubs._event_dataa08ddfce
      description: <p>batch of events to send to EventHub </p>
    return:
      type: fc984e6f
      description: <p>a CompletableFuture that can be completed when the send operations is done.. </p>
  see:
  - type: com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)
    description: ''
  - type: com.microsoft.azure.eventhubs._partition_sender.send(EventData)
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.send(final Iterable<EventData>,final String)
  id: send(final Iterable<EventData>,final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: send(final Iterable<EventData> eventDatas, final String partitionKey)
  nameWithType: EventHubClient.send(final Iterable<EventData> eventDatas, final String partitionKey)
  fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.EventHubClient.send(final Iterable<EventData> eventDatas, final String partitionKey)
  overload: com.microsoft.azure.eventhubs._event_hub_client.send*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 433
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Send a 'batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> with the same partitionKey' to EventHub. All <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s with a partitionKey are guaranteed to land on the same partition. Multiple PartitionKey's will be mapped to one Partition. </p>

    <p>There are 3 ways to send to EventHubs, to understand this particular type of Send refer to the overload <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false"></xref>, which is the same type of Send and is used to send single <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>

    <p>Sending a batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s is useful in the following cases: <preformatted>

    i.  Efficient send - sending a batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> maximizes the overall throughput by optimally using the number of sessions created to EventHubs service.

    ii. Send multiple events in One Transaction. This is the reason why all events sent in a batch needs to have same partitionKey (so that they are sent to one partition only).

    </preformatted></p>

    <p></p>
  syntax:
    content: public final CompletableFuture<Void> send(final Iterable<EventData> eventDatas, final String partitionKey)
    parameters:
    - id: eventDatas
      type: f42d2527com.microsoft.azure.eventhubs._event_dataa08ddfce
      description: <p>the batch of events to send to EventHub </p>
    - id: partitionKey
      type: 3d93591e
      description: <p>the partitionKey will be hash'ed to determine the partitionId to send the eventData to. On the Received message this can be accessed at <ref refid="" kindref="compound">EventData.SystemProperties#getPartitionKey()</ref></p>
    return:
      type: fc984e6f
      description: <p>a CompletableFuture that can be completed when the send operations is done.. </p>
  see:
  - type: com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)
    description: ''
  - type: com.microsoft.azure.eventhubs._partition_sender.send(EventData)
    description: ''
- uid: com.microsoft.azure.eventhubs._event_hub_client.sendSync(final EventData)
  id: sendSync(final EventData)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: sendSync(final EventData data)
  nameWithType: EventHubClient.sendSync(final EventData data)
  fullName: final void com.microsoft.azure.eventhubs.EventHubClient.sendSync(final EventData data)
  overload: com.microsoft.azure.eventhubs._event_hub_client.sendSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 151
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final void sendSync(final EventData data)
    parameters:
    - id: data
      type: 93de0ef9com.microsoft.azure.eventhubs._event_data
      description: <p>the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to be sent. </p>
    return:
      type: 3f6357ce
  exceptions:
  - type: 22fa3d6f
    description: <p>if the total size of the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> exceeds a predefined limit set by the service. Default is 256k bytes. </p>
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  - type: c177b4f7
    description: '<p>if there are Client to Service network connectivity issues, if the Azure DNS resolution of the ServiceBus Namespace fails (ex: namespace deleted etc.) </p>'
- uid: com.microsoft.azure.eventhubs._event_hub_client.sendSync(final EventData,final String)
  id: sendSync(final EventData,final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: sendSync(final EventData eventData, final String partitionKey)
  nameWithType: EventHubClient.sendSync(final EventData eventData, final String partitionKey)
  fullName: final void com.microsoft.azure.eventhubs.EventHubClient.sendSync(final EventData eventData, final String partitionKey)
  overload: com.microsoft.azure.eventhubs._event_hub_client.sendSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 313
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final void sendSync(final EventData eventData, final String partitionKey)
    parameters:
    - id: eventData
      type: 93de0ef9com.microsoft.azure.eventhubs._event_data
      description: <p>the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to be sent. </p>
    - id: partitionKey
      type: 3d93591e
      description: <p>the partitionKey will be hash'ed to determine the partitionId to send the eventData to. On the Received message this can be accessed at <ref refid="" kindref="compound">EventData.SystemProperties#getPartitionKey()</ref></p>
    return:
      type: 3f6357ce
  exceptions:
  - type: 22fa3d6f
    description: <p>if the total size of the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> exceeds a pre-defined limit set by the service. Default is 256k bytes. </p>
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.sendSync(final Iterable<EventData>)
  id: sendSync(final Iterable<EventData>)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: sendSync(final Iterable<EventData> eventDatas)
  nameWithType: EventHubClient.sendSync(final Iterable<EventData> eventDatas)
  fullName: final void com.microsoft.azure.eventhubs.EventHubClient.sendSync(final Iterable<EventData> eventDatas)
  overload: com.microsoft.azure.eventhubs._event_hub_client.sendSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 223
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <ref refid="" kindref="compound">send(Iterable)</ref>.</p>

    <p></p>
  syntax:
    content: public final void sendSync(final Iterable<EventData> eventDatas)
    parameters:
    - id: eventDatas
      type: f42d2527com.microsoft.azure.eventhubs._event_dataa08ddfce
      description: <p>batch of events to send to EventHub </p>
    return:
      type: 3f6357ce
  exceptions:
  - type: 22fa3d6f
    description: <p>if the total size of the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> exceeds a pre-defined limit set by the service. Default is 256k bytes. </p>
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  - type: c177b4f7
    description: '<p>if there are Client to Service network connectivity issues, if the Azure DNS resolution of the ServiceBus Namespace fails (ex: namespace deleted etc.) </p>'
- uid: com.microsoft.azure.eventhubs._event_hub_client.sendSync(final Iterable<EventData>,final String)
  id: sendSync(final Iterable<EventData>,final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  langs:
  - java
  name: sendSync(final Iterable<EventData> eventDatas, final String partitionKey)
  nameWithType: EventHubClient.sendSync(final Iterable<EventData> eventDatas, final String partitionKey)
  fullName: final void com.microsoft.azure.eventhubs.EventHubClient.sendSync(final Iterable<EventData> eventDatas, final String partitionKey)
  overload: com.microsoft.azure.eventhubs._event_hub_client.sendSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventHubClient.java
    startLine: 390
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <ref refid="" kindref="compound">send(Iterable, String)</ref>.</p>

    <p></p>
  syntax:
    content: public final void sendSync(final Iterable<EventData> eventDatas, final String partitionKey)
    parameters:
    - id: eventDatas
      type: f42d2527com.microsoft.azure.eventhubs._event_dataa08ddfce
      description: <p>the batch of events to send to EventHub </p>
    - id: partitionKey
      type: 3d93591e
      description: <p>the partitionKey will be hash'ed to determine the partitionId to send the eventData to. On the Received message this can be accessed at <ref refid="" kindref="compound">EventData.SystemProperties#getPartitionKey()</ref></p>
    return:
      type: 3f6357ce
  exceptions:
  - type: 22fa3d6f
    description: <p>if the total size of the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> exceeds a pre-defined limit set by the service. Default is 256k bytes. </p>
  - type: 73fec9fb
    description: <p>if Service Bus service encountered problems during the operation. </p>
  - type: c177b4f7
    description: '<p>if there are Client to Service network connectivity issues, if the Azure DNS resolution of the ServiceBus Namespace fails (ex: namespace deleted etc.) </p>'
references:
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 73fec9fb
  spec.java:
  - name: ServiceBusException
    fullName: ServiceBusException
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync*
  name: createFromConnectionStringSync
  nameWithType: EventHubClient.createFromConnectionStringSync
  fullName: static EventHubClient com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionStringSync
  package: com.microsoft.azure.eventhubs
- uid: 93de0ef9com.microsoft.azure.servicebus._retry_policy
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.servicebus._retry_policy
    name: RetryPolicy
    fullName: com.microsoft.azure.servicebus.RetryPolicy
    href: com.microsoft.azure.servicebus._retry_policy.yml
- uid: 9cdf14d0com.microsoft.azure.eventhubs._event_hub_clienta08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.eventhubs._event_hub_client
    name: EventHubClient
    fullName: com.microsoft.azure.eventhubs.EventHubClient
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString*
  name: createFromConnectionString
  nameWithType: EventHubClient.createFromConnectionString
  fullName: static CompletableFuture<EventHubClient> com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionString
  package: com.microsoft.azure.eventhubs
- uid: 22fa3d6f
  spec.java:
  - name: PayloadSizeExceededException
    fullName: PayloadSizeExceededException
- uid: c177b4f7
  spec.java:
  - name: UnresolvedAddressException
    fullName: UnresolvedAddressException
- uid: 93de0ef9com.microsoft.azure.eventhubs._event_data
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs._event_data
    name: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    href: com.microsoft.azure.eventhubs._event_data.yml
- uid: 3f6357ce
  spec.java:
  - name: final void
    fullName: final void
- uid: com.microsoft.azure.eventhubs._event_hub_client.sendSync*
  name: sendSync
  nameWithType: EventHubClient.sendSync
  fullName: final void com.microsoft.azure.eventhubs.EventHubClient.sendSync
  package: com.microsoft.azure.eventhubs
- uid: fc984e6f
  spec.java:
  - name: final CompletableFuture<Void>
    fullName: final CompletableFuture<Void>
- uid: com.microsoft.azure.eventhubs._event_hub_client.send*
  name: send
  nameWithType: EventHubClient.send
  fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.EventHubClient.send
  package: com.microsoft.azure.eventhubs
- uid: f42d2527com.microsoft.azure.eventhubs._event_dataa08ddfce
  spec.java:
  - name: final Iterable<
    fullName: final Iterable<
  - uid: com.microsoft.azure.eventhubs._event_data
    name: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    href: com.microsoft.azure.eventhubs._event_data.yml
  - name: '>'
    fullName: '>'
- uid: 93de0ef9com.microsoft.azure.eventhubs._partition_sender
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs._partition_sender
    name: PartitionSender
    fullName: com.microsoft.azure.eventhubs.PartitionSender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
- uid: com.microsoft.azure.eventhubs._event_hub_client.createPartitionSenderSync*
  name: createPartitionSenderSync
  nameWithType: EventHubClient.createPartitionSenderSync
  fullName: final PartitionSender com.microsoft.azure.eventhubs.EventHubClient.createPartitionSenderSync
  package: com.microsoft.azure.eventhubs
- uid: 9971d449com.microsoft.azure.eventhubs._partition_sendera08ddfce
  spec.java:
  - name: final CompletableFuture<
    fullName: final CompletableFuture<
  - uid: com.microsoft.azure.eventhubs._partition_sender
    name: PartitionSender
    fullName: com.microsoft.azure.eventhubs.PartitionSender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventhubs._event_hub_client.createPartitionSender*
  name: createPartitionSender
  nameWithType: EventHubClient.createPartitionSender
  fullName: final CompletableFuture<PartitionSender> com.microsoft.azure.eventhubs.EventHubClient.createPartitionSender
  package: com.microsoft.azure.eventhubs
- uid: 93de0ef9com.microsoft.azure.eventhubs._partition_receiver
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs._partition_receiver
    name: PartitionReceiver
    fullName: com.microsoft.azure.eventhubs.PartitionReceiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiverSync*
  name: createReceiverSync
  nameWithType: EventHubClient.createReceiverSync
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createReceiverSync
  package: com.microsoft.azure.eventhubs
- uid: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
  spec.java:
  - name: final CompletableFuture<
    fullName: final CompletableFuture<
  - uid: com.microsoft.azure.eventhubs._partition_receiver
    name: PartitionReceiver
    fullName: com.microsoft.azure.eventhubs.PartitionReceiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiver*
  name: createReceiver
  nameWithType: EventHubClient.createReceiver
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createReceiver
  package: com.microsoft.azure.eventhubs
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: 57532c1c
  spec.java:
  - name: final Instant
    fullName: final Instant
- uid: 93de0ef9com.microsoft.azure.eventhubs._receiver_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs._receiver_options
    name: ReceiverOptions
    fullName: com.microsoft.azure.eventhubs.ReceiverOptions
    href: com.microsoft.azure.eventhubs._receiver_options.yml
- uid: 4c60ae65
  spec.java:
  - name: final long
    fullName: final long
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiverSync*
  name: createEpochReceiverSync
  nameWithType: EventHubClient.createEpochReceiverSync
  fullName: final PartitionReceiver com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiverSync
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver*
  name: createEpochReceiver
  nameWithType: EventHubClient.createEpochReceiver
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver
  package: com.microsoft.azure.eventhubs
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: com.microsoft.azure.eventhubs._event_hub_client.onClose*
  name: onClose
  nameWithType: EventHubClient.onClose
  fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.EventHubClient.onClose
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.servicebus._client_entity.ClientEntity(final String,final ClientEntity)
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: ClientEntity(final String clientId, final ClientEntity parent)
  nameWithType: ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)
  fullName: com.microsoft.azure.servicebus.ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)
  type: Constructor
  syntax:
    content: protected ClientEntity(final String clientId, final ClientEntity parent)
    parameters:
    - id: clientId
      type: 3d93591e
    - id: parent
      type: 93de0ef9com.microsoft.azure.servicebus._client_entity
- uid: com.microsoft.azure.servicebus._client_entity.close()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: close()
  nameWithType: ClientEntity.close()
  fullName: final CompletableFuture<Void> com.microsoft.azure.servicebus.ClientEntity.close()
  type: Method
  syntax:
    content: public final CompletableFuture<Void> close()
    return:
      type: fc984e6f
- uid: com.microsoft.azure.servicebus._client_entity.closeSync()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: closeSync()
  nameWithType: ClientEntity.closeSync()
  fullName: final void com.microsoft.azure.servicebus.ClientEntity.closeSync()
  type: Method
  syntax:
    content: public final void closeSync()
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.servicebus._client_entity.getClientId()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: getClientId()
  nameWithType: ClientEntity.getClientId()
  fullName: String com.microsoft.azure.servicebus.ClientEntity.getClientId()
  type: Method
  syntax:
    content: public String getClientId()
    return:
      type: "26831127"
- uid: com.microsoft.azure.servicebus._client_entity.getIsClosed()
- uid: com.microsoft.azure.servicebus._client_entity.getIsClosingOrClosed()
- uid: com.microsoft.azure.servicebus._client_entity.getLastKnownError()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: getLastKnownError()
  nameWithType: ClientEntity.getLastKnownError()
  fullName: Exception com.microsoft.azure.servicebus.ClientEntity.getLastKnownError()
  type: Method
  syntax:
    content: protected Exception getLastKnownError()
    return:
      type: 8a99d4b0
- uid: com.microsoft.azure.servicebus._client_entity.setClosed()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: setClosed()
  nameWithType: ClientEntity.setClosed()
  fullName: final void com.microsoft.azure.servicebus.ClientEntity.setClosed()
  type: Method
  syntax:
    content: protected final void setClosed()
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.servicebus._client_entity.throwIfClosed()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: throwIfClosed()
  nameWithType: ClientEntity.throwIfClosed()
  fullName: final void com.microsoft.azure.servicebus.ClientEntity.throwIfClosed()
  type: Method
  syntax:
    content: protected final void throwIfClosed()
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.servicebus._client_entity
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: ClientEntity
  nameWithType: ClientEntity
  fullName: com.microsoft.azure.servicebus.ClientEntity
  type: Class
  summary: '<p>Contract for all client entities with Open-Close/Abort state m/c main-purpose: closeAll related entities Internal-class </p>'
  syntax:
    content: public class ClientEntity
- uid: com.microsoft.azure.servicebus._messaging_factory
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._messaging_factory.yml
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.servicebus.MessagingFactory
  type: Class
  summary: <p>Abstracts all amqp related details and exposes AmqpConnection object Manages connection life-cycle </p>
  syntax:
    content: public class MessagingFactory
- uid: com.microsoft.azure.servicebus._message_sender
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._message_sender.yml
  name: MessageSender
  nameWithType: MessageSender
  fullName: com.microsoft.azure.servicebus.MessageSender
  type: Class
  summary: <p>Abstracts all amqp related details translates event-driven reactor model into async send Api </p>
  syntax:
    content: public class MessageSender
- uid: com.microsoft.azure.servicebus._connection_string_builder
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._connection_string_builder.yml
  name: ConnectionStringBuilder
  nameWithType: ConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.ConnectionStringBuilder
  type: Class
  summary: >-
    <p>

      <xref href="com.microsoft.azure.servicebus._connection_string_builder" data-throw-if-not-resolved="false"></xref> can be used to construct a connection string which can establish communication with ServiceBus entities. It can also be used to perform basic validation on an existing connection string. </p>

    <p>Sample Code: <preformatted><programlisting><codeline><highlight class="normal"><sp></sp><sp></sp><sp></sp><sp></sp>ConnectionStringBuilder<sp></sp>connectionStringBuilder<sp></sp>=<sp></sp>new<sp></sp>ConnectionStringBuilder(</highlight></codeline><codeline><highlight class="normal"><sp></sp><sp></sp><sp></sp><sp></sp>"ServiceBusNamespaceName",</highlight></codeline><codeline><highlight class="normal"><sp></sp><sp></sp><sp></sp><sp></sp>"ServiceBusEntityName",<sp></sp>//<sp></sp>eventHubName<sp></sp>or<sp></sp>QueueName<sp></sp>or<sp></sp>TopicName</highlight></codeline><codeline><highlight class="normal"><sp></sp><sp></sp><sp></sp><sp></sp>"SharedAccessSignatureKeyName",</highlight></codeline><codeline><highlight class="normal"><sp></sp><sp></sp><sp></sp><sp></sp>"SharedAccessSignatureKey");</highlight></codeline><codeline></codeline><codeline><highlight class="normal">String<sp></sp>connectionString<sp></sp>=<sp></sp>connectionStringBuilder.toString();</highlight></codeline></programlisting></preformatted></p>

    <p>A connection string is basically a string consisted of key-value pair separated by ";". Basic format is {{ &lt;}key{&gt;}={ &lt;}value{&gt;}[;{ &lt;}key{&gt;}={ &lt;}value{&gt;}]} where supported key name are as follow: <itemizedlist><listitem><p>Endpoint - the URL that contains the servicebus namespace </p></listitem><listitem><p>EntityPath - the path to the service bus entity (queue/topic/eventhub/subscription/consumergroup/partition) </p></listitem><listitem><p>SharedAccessKeyName - the key name to the corresponding shared access policy rule for the namespace, or entity. </p></listitem><listitem><p>SharedAccessKey - the key for the corresponding shared access policy rule of the namespace or entity. </p></listitem></itemizedlist></p>
  syntax:
    content: public class ConnectionStringBuilder
- uid: com.microsoft.azure.servicebus._illegal_entity_exception
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._illegal_entity_exception.yml
  name: IllegalEntityException
  nameWithType: IllegalEntityException
  fullName: com.microsoft.azure.servicebus.IllegalEntityException
  type: Class
  summary: >-
    <p>This exception is thrown for the following reasons: <itemizedlist><listitem><p>When the entity user attempted to connect does not exist </p></listitem><listitem><p>The entity user wants to connect is disabled </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public class IllegalEntityException
- uid: com.microsoft.azure.eventhubs._event_hub_client
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: EventHubClient
  nameWithType: EventHubClient
  fullName: com.microsoft.azure.eventhubs.EventHubClient
  type: Class
  summary: >-
    <p>Anchor class - all EventHub client operations STARTS here.</p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.servicebus._service_bus_exception
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._service_bus_exception.yml
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.ServiceBusException
  type: Class
  summary: <p>This is the base exception that service bus will produce for all error cases. </p>
  syntax:
    content: public class ServiceBusException
- uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: createFromConnectionString(final String connectionString)
  nameWithType: EventHubClient.createFromConnectionString(final String connectionString)
  fullName: static CompletableFuture<EventHubClient> com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionString(final String connectionString)
  type: Method
  summary: >-
    <p>Factory method to create an instance of <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> using the supplied connectionString. In a normal scenario (when re-direct is not enabled) - one <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> instance maps to one Connection to the Azure ServiceBus EventHubs service. </p>

    <p>The <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> created from this method creates a Sender instance internally, which is used by the <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> methods.</p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.servicebus._retry_policy
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._retry_policy.yml
  name: RetryPolicy
  nameWithType: RetryPolicy
  fullName: com.microsoft.azure.servicebus.RetryPolicy
  type: Class
  syntax:
    content: public class RetryPolicy
- uid: com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: send(final EventData data)
  nameWithType: EventHubClient.send(final EventData data)
  fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.EventHubClient.send(final EventData data)
  type: Method
  summary: >-
    <p>Send <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to EventHub. The sent <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> will land on any arbitrarily chosen EventHubs partition. </p>

    <p>There are 3 ways to send to EventHubs, each exposed as a method (along with its sendBatch overload): <itemizedlist><listitem><p><xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">send(Iterable)</ref></p></listitem><listitem><p><xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">send(Iterable, String)</ref></p></listitem><listitem><p><xref href="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">PartitionSender#send(Iterable)</ref></p></listitem></itemizedlist></p>

    <p>Use this method to Send, if: <preformatted>

    a)  the send(<xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>) operation should be highly available and

    b)  the data needs to be evenly distributed among all partitions; exception being, when a subset of partitions are unavailable

    </preformatted></p>

    <p>

      <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> send's the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to a Service Gateway, which in-turn will forward the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to one of the EventHubs' partitions. Here's the message forwarding algorithm: <preformatted>

    i.  Forward the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s to EventHub partitions, by equally distributing the data among all partitions (ex: Round-robin the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s to all EventHubs' partitions)

    ii. If one of the EventHub partitions is unavailable for a moment, the Service Gateway will automatically detect it and forward the message to another available partition - making the Send operation highly-available.

    </preformatted></p>

    <p></p>
  syntax: *o3
- uid: com.microsoft.azure.eventhubs._event_data
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data.yml
  name: EventData
  nameWithType: EventData
  fullName: com.microsoft.azure.eventhubs.EventData
  type: Class
  summary: >-
    <p>The data structure encapsulating the Event being sent-to and received-from EventHubs. Each EventHubs partition can be visualized as a Stream of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>

    <p>Serializing a received <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> with AMQP sections other than ApplicationProperties (with primitive java types) and Data section is not supported. </p>

    <p>Here's how AMQP message sections map to <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. Here's the reference used for AMQP 1.0 specification: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><preformatted>

    i.   <xref href="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false"></xref> - AMQPMessage.ApplicationProperties section

    ii.  <xref href="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false"></xref> - if AMQPMessage.Body has Data section

    iii. <xref href="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false"></xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections

    </preformatted> While using client libraries released by Microsoft Azure EventHubs, sections (i) and (ii) alone are sufficient. Section (iii) is used for advanced scenarios, where the sending application uses third-party AMQP library to send the message to EventHubs and the receiving application uses this client library to receive <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class EventData
- uid: com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: send(final EventData eventData, final String partitionKey)
  nameWithType: EventHubClient.send(final EventData eventData, final String partitionKey)
  fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.EventHubClient.send(final EventData eventData, final String partitionKey)
  type: Method
  summary: >-
    <p>Send an '<xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> with a partitionKey' to EventHub. All <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s with a partitionKey are guaranteed to land on the same partition. This send pattern emphasize data correlation over general availability and latency. </p>

    <p>There are 3 ways to send to EventHubs, each exposed as a method (along with its sendBatch overload): <preformatted>

    i.   <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">send(Iterable)</ref>

    ii.  <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">send(Iterable, String)</ref>

    iii. <xref href="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">PartitionSender#send(Iterable)</ref></preformatted></p>

    <p>Use this type of Send, if: <preformatted>

    i.  There is a need for correlation of events based on Sender instance; The sender can generate a UniqueId and set it as partitionKey - which on the received Message can be used for correlation

    ii. The client wants to take control of distribution of data across partitions.

    </preformatted></p>

    <p>Multiple PartitionKey's could be mapped to one Partition. EventHubs service uses a proprietary Hash algorithm to map the PartitionKey to a PartitionId. Using this type of Send (Sending using a specific partitionKey), could sometimes result in partitions which are not evenly distributed.</p>

    <p></p>
  syntax: *o4
- uid: com.microsoft.azure.eventhubs._partition_sender.send(EventData)
  parent: com.microsoft.azure.eventhubs._partition_sender
  href: com.microsoft.azure.eventhubs._partition_sender.yml
  name: send(EventData data)
  nameWithType: PartitionSender.send(EventData data)
  fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionSender.send(EventData data)
  type: Method
  summary: >-
    <p>Send <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to a specific EventHub partition. The target partition is pre-determined when this <xref href="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false"></xref> was created. This send pattern emphasize data correlation over general availability and latency. </p>

    <p>There are 3 ways to send to EventHubs, each exposed as a method (along with its sendBatch overload): <preformatted>

    i.   <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">EventHubClient#send(Iterable)</ref>

    ii.  <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">EventHubClient#send(Iterable, String)</ref>

    iii. <xref href="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">PartitionSender#send(Iterable)</ref></preformatted></p>

    <p>Use this type of Send, if: <preformatted>

    i. The client wants to take direct control of distribution of data across partitions. In this case client is responsible for making sure there is at least one sender per event hub partition.

    ii. User cannot use partition key as a mean to direct events to specific partition, yet there is a need for data correlation with partitioning scheme.

    </preformatted></p>

    <p></p>
  syntax:
    content: public final CompletableFuture<Void> send(EventData data)
    parameters:
    - id: data
      type: com.microsoft.azure.eventhubs._event_data
      description: <p>the <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> to be sent. </p>
    return:
      type: fc984e6f
      description: <p>a CompletableFuture that can be completed when the send operations is done.. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: createFromConnectionStringSync(final String connectionString)
  nameWithType: EventHubClient.createFromConnectionStringSync(final String connectionString)
  fullName: static EventHubClient com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionStringSync(final String connectionString)
  type: Method
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: *o5
- uid: com.microsoft.azure.eventhubs._partition_sender
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_sender.yml
  name: PartitionSender
  nameWithType: PartitionSender
  fullName: com.microsoft.azure.eventhubs.PartitionSender
  type: Class
  summary: >-
    <p>This sender class is a logical representation of sending events to a specific EventHub partition. Do not use this class if you do not care about sending events to specific partitions. Instead, use <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> method.</p>

    <p></p>
  syntax:
    content: public class PartitionSender
- uid: com.microsoft.azure.eventhubs._event_hub_client.createPartitionSender(final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: createPartitionSender(final String partitionId)
  nameWithType: EventHubClient.createPartitionSender(final String partitionId)
  fullName: final CompletableFuture<PartitionSender> com.microsoft.azure.eventhubs.EventHubClient.createPartitionSender(final String partitionId)
  type: Method
  summary: >-
    <p>Create a <xref href="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false"></xref> which can publish <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s directly to a specific EventHub partition (sender type iii. in the below list). </p>

    <p>There are 3 patterns/ways to send to EventHubs: <preformatted>

    i.   <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">send(Iterable)</ref>

    ii.  <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">send(Iterable, String)</ref>

    iii. <xref href="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false"></xref> or <ref refid="" kindref="compound">PartitionSender#send(Iterable)</ref></preformatted></p>

    <p></p>
  syntax: *o6
- uid: com.microsoft.azure.eventhubs._partition_receiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: PartitionReceiver
  nameWithType: PartitionReceiver
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver
  type: Class
  summary: >-
    <p>This is a logical representation of receiving from a EventHub partition. </p>

    <p>A <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> is tied to a ConsumerGroup + EventHub Partition combination. <itemizedlist><listitem><p>If an epoch based <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> (i.e., <xref href="com.microsoft.azure.eventhubs._partition_receiver.getEpoch()" data-throw-if-not-resolved="false"></xref> != 0) is created, EventHubs service will guarantee only 1 active receiver exists per ConsumerGroup + Partition combo. This is the recommended approach to create a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. </p></listitem><listitem><p>Multiple receivers per ConsumerGroup + Partition combo can be created using non-epoch receivers. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public class PartitionReceiver
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)
  nameWithType: EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)
  type: Method
  summary: >-
    <p>The receiver is created for a specific EventHub partition from the specific consumer group. </p>

    <p>NOTE: There can be a maximum number of receivers that can run in parallel per ConsumerGroup per Partition. The limit is enforced by the Event Hub service - current limit is 5 receivers in parallel. Having multiple receivers reading from offsets that are far apart on the same consumer group / partition combo will have significant performance Impact.</p>

    <p></p>
  syntax: *o7
- uid: com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: START_OF_STREAM
  nameWithType: PartitionReceiver.START_OF_STREAM
  fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.START_OF_STREAM
  type: Field
  summary: <p>This is a constant defined to represent the start of a partition stream in EventHub. </p>
  syntax:
    content: public static final String START_OF_STREAM= "-1"
    return:
      type: 3d93591e
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String,boolean)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive)
  nameWithType: EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive)
  type: Method
  summary: >-
    <p>Create the EventHub receiver with given partition id and start receiving from the specified starting offset. The receiver is created for a specific EventHub Partition from the specific consumer group.</p>

    <p></p>
  syntax: *o8
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final Instant)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: createReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime)
  nameWithType: EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime)
  type: Method
  summary: >-
    <p>Create the EventHub receiver with given partition id and start receiving from the specified starting offset. The receiver is created for a specific EventHub Partition from the specific consumer group.</p>

    <p></p>
  syntax: *o9
- uid: com.microsoft.azure.eventhubs._receiver_options
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receiver_options.yml
  name: ReceiverOptions
  nameWithType: ReceiverOptions
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions
  type: Class
  summary: <p>Represents various optional behaviors which can be turned on or off during the creation of a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ReceiverOptions
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,final long)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
  nameWithType: EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
  type: Method
  summary: >-
    <p>Create a Epoch based EventHub receiver with given partition id and start receiving from the beginning of the partition stream. The receiver is created for a specific EventHub Partition from the specific consumer group. </p>

    <p>It is important to pay attention to the following when creating epoch based receiver: <itemizedlist><listitem><p>Ownership enforcement - Once you created an epoch based receiver, you cannot create a non-epoch receiver to the same consumerGroup-Partition combo until all receivers to the combo are closed. </p></listitem><listitem><p>Ownership stealing - If a receiver with higher epoch value is created for a consumerGroup-Partition combo, any older epoch receiver to that combo will be force closed. </p></listitem><listitem><p>Any receiver closed due to lost of ownership to a consumerGroup-Partition combo will get ReceiverDisconnectedException for all operations from that receiver. </p></listitem></itemizedlist></p>

    <p></p>
  syntax: *o10
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,boolean,final long)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch)
  nameWithType: EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, boolean offsetInclusive, final long epoch)
  type: Method
  summary: >-
    <p>Create a Epoch based EventHub receiver with given partition id and start receiving from the beginning of the partition stream. The receiver is created for a specific EventHub Partition from the specific consumer group. </p>

    <p>It is important to pay attention to the following when creating epoch based receiver: <itemizedlist><listitem><p>Ownership enforcement - Once you created an epoch based receiver, you cannot create a non-epoch receiver to the same consumerGroup-Partition combo until all receivers to the combo are closed. </p></listitem><listitem><p>Ownership stealing - If a receiver with higher epoch value is created for a consumerGroup-Partition combo, any older epoch receiver to that combo will be force closed. </p></listitem><listitem><p>Any receiver closed due to lost of ownership to a consumerGroup-Partition combo will get ReceiverDisconnectedException for all operations from that receiver. </p></listitem></itemizedlist></p>

    <p></p>
  syntax: *o11
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final Instant,final long)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: createEpochReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch)
  nameWithType: EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final Instant dateTime, final long epoch)
  type: Method
  summary: >-
    <p>Create a Epoch based EventHub receiver with given partition id and start receiving from the beginning of the partition stream. The receiver is created for a specific EventHub Partition from the specific consumer group. </p>

    <p>It is important to pay attention to the following when creating epoch based receiver: <itemizedlist><listitem><p>Ownership enforcement - Once you created an epoch based receiver, you cannot create a non-epoch receiver to the same consumerGroup-Partition combo until all receivers to the combo are closed. </p></listitem><listitem><p>Ownership stealing - If a receiver with higher epoch value is created for a consumerGroup-Partition combo, any older epoch receiver to that combo will be force closed. </p></listitem><listitem><p>Any receiver closed due to lost of ownership to a consumerGroup-Partition combo will get ReceiverDisconnectedException for all operations from that receiver. </p></listitem></itemizedlist></p>

    <p></p>
  syntax: *o12
