### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  id: NetworkConfigurationDiagnosticProfile
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network
  children:
  - com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.NetworkConfigurationDiagnosticProfile()
  - com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.destination()
  - com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.destinationPort()
  - com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.direction()
  - com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.protocol()
  - com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.source()
  - com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDestination(java.lang.String)
  - com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDestinationPort(java.lang.String)
  - com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDirection(com.microsoft.azure.management.network.Direction)
  - com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withProtocol(java.lang.String)
  - com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withSource(java.lang.String)
  langs:
  - java
  name: NetworkConfigurationDiagnosticProfile
  nameWithType: NetworkConfigurationDiagnosticProfile
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  type: Class
  package: com.microsoft.azure.management.network
  summary: Parameters to compare with network configuration.
  syntax:
    content: public class NetworkConfigurationDiagnosticProfile
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.NetworkConfigurationDiagnosticProfile()
  id: NetworkConfigurationDiagnosticProfile()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  langs:
  - java
  name: NetworkConfigurationDiagnosticProfile()
  nameWithType: NetworkConfigurationDiagnosticProfile.NetworkConfigurationDiagnosticProfile()
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.NetworkConfigurationDiagnosticProfile()
  overload: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.NetworkConfigurationDiagnosticProfile*
  type: Constructor
  package: com.microsoft.azure.management.network
  syntax:
    content: public NetworkConfigurationDiagnosticProfile()
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.destination()
  id: destination()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  langs:
  - java
  name: destination()
  nameWithType: NetworkConfigurationDiagnosticProfile.destination()
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.destination()
  overload: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.destination*
  type: Method
  package: com.microsoft.azure.management.network
  summary: "Get traffic destination. Accepted values are: '\\*', IP Address/CIDR, Service Tag."
  syntax:
    content: public String destination()
    return:
      type: java.lang.String
      description: the destination value
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.destinationPort()
  id: destinationPort()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  langs:
  - java
  name: destinationPort()
  nameWithType: NetworkConfigurationDiagnosticProfile.destinationPort()
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.destinationPort()
  overload: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.destinationPort*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Get traffic destination port. Accepted values are '\*' and a single port in the range (0 - 65535).
  syntax:
    content: public String destinationPort()
    return:
      type: java.lang.String
      description: the destinationPort value
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.direction()
  id: direction()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  langs:
  - java
  name: direction()
  nameWithType: NetworkConfigurationDiagnosticProfile.direction()
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.direction()
  overload: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.direction*
  type: Method
  package: com.microsoft.azure.management.network
  summary: "Get the direction of the traffic. Possible values include: 'Inbound', 'Outbound'."
  syntax:
    content: public Direction direction()
    return:
      type: com.microsoft.azure.management.network.Direction
      description: the direction value
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.protocol()
  id: protocol()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  langs:
  - java
  name: protocol()
  nameWithType: NetworkConfigurationDiagnosticProfile.protocol()
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.protocol()
  overload: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.protocol*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Get protocol to be verified on. Accepted values are '\*', TCP, UDP.
  syntax:
    content: public String protocol()
    return:
      type: java.lang.String
      description: the protocol value
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.source()
  id: source()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  langs:
  - java
  name: source()
  nameWithType: NetworkConfigurationDiagnosticProfile.source()
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.source()
  overload: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.source*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Get traffic source. Accepted values are '\*', IP Address/CIDR, Service Tag.
  syntax:
    content: public String source()
    return:
      type: java.lang.String
      description: the source value
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDestination(java.lang.String)
  id: withDestination(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  langs:
  - java
  name: withDestination(String destination)
  nameWithType: NetworkConfigurationDiagnosticProfile.withDestination(String destination)
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDestination(String destination)
  overload: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDestination*
  type: Method
  package: com.microsoft.azure.management.network
  summary: "Set traffic destination. Accepted values are: '\\*', IP Address/CIDR, Service Tag."
  syntax:
    content: public NetworkConfigurationDiagnosticProfile withDestination(String destination)
    parameters:
    - id: destination
      type: java.lang.String
      description: the destination value to set
    return:
      type: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
      description: the NetworkConfigurationDiagnosticProfile object itself.
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDestinationPort(java.lang.String)
  id: withDestinationPort(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  langs:
  - java
  name: withDestinationPort(String destinationPort)
  nameWithType: NetworkConfigurationDiagnosticProfile.withDestinationPort(String destinationPort)
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDestinationPort(String destinationPort)
  overload: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDestinationPort*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Set traffic destination port. Accepted values are '\*' and a single port in the range (0 - 65535).
  syntax:
    content: public NetworkConfigurationDiagnosticProfile withDestinationPort(String destinationPort)
    parameters:
    - id: destinationPort
      type: java.lang.String
      description: the destinationPort value to set
    return:
      type: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
      description: the NetworkConfigurationDiagnosticProfile object itself.
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDirection(com.microsoft.azure.management.network.Direction)
  id: withDirection(com.microsoft.azure.management.network.Direction)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  langs:
  - java
  name: withDirection(Direction direction)
  nameWithType: NetworkConfigurationDiagnosticProfile.withDirection(Direction direction)
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDirection(Direction direction)
  overload: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDirection*
  type: Method
  package: com.microsoft.azure.management.network
  summary: "Set the direction of the traffic. Possible values include: 'Inbound', 'Outbound'."
  syntax:
    content: public NetworkConfigurationDiagnosticProfile withDirection(Direction direction)
    parameters:
    - id: direction
      type: com.microsoft.azure.management.network.Direction
      description: the direction value to set
    return:
      type: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
      description: the NetworkConfigurationDiagnosticProfile object itself.
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withProtocol(java.lang.String)
  id: withProtocol(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  langs:
  - java
  name: withProtocol(String protocol)
  nameWithType: NetworkConfigurationDiagnosticProfile.withProtocol(String protocol)
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withProtocol(String protocol)
  overload: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withProtocol*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Set protocol to be verified on. Accepted values are '\*', TCP, UDP.
  syntax:
    content: public NetworkConfigurationDiagnosticProfile withProtocol(String protocol)
    parameters:
    - id: protocol
      type: java.lang.String
      description: the protocol value to set
    return:
      type: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
      description: the NetworkConfigurationDiagnosticProfile object itself.
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withSource(java.lang.String)
  id: withSource(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
  langs:
  - java
  name: withSource(String source)
  nameWithType: NetworkConfigurationDiagnosticProfile.withSource(String source)
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withSource(String source)
  overload: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withSource*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Set traffic source. Accepted values are '\*', IP Address/CIDR, Service Tag.
  syntax:
    content: public NetworkConfigurationDiagnosticProfile withSource(String source)
    parameters:
    - id: source
      type: java.lang.String
      description: the source value to set
    return:
      type: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile
      description: the NetworkConfigurationDiagnosticProfile object itself.
references:
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.NetworkConfigurationDiagnosticProfile*
  name: NetworkConfigurationDiagnosticProfile
  nameWithType: NetworkConfigurationDiagnosticProfile.NetworkConfigurationDiagnosticProfile
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.NetworkConfigurationDiagnosticProfile
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.Direction
  name: Direction
  nameWithType: Direction
  fullName: com.microsoft.azure.management.network.Direction
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.direction*
  name: direction
  nameWithType: NetworkConfigurationDiagnosticProfile.direction
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.direction
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDirection*
  name: withDirection
  nameWithType: NetworkConfigurationDiagnosticProfile.withDirection
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDirection
  package: com.microsoft.azure.management.network
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.protocol*
  name: protocol
  nameWithType: NetworkConfigurationDiagnosticProfile.protocol
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.protocol
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withProtocol*
  name: withProtocol
  nameWithType: NetworkConfigurationDiagnosticProfile.withProtocol
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withProtocol
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.source*
  name: source
  nameWithType: NetworkConfigurationDiagnosticProfile.source
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.source
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withSource*
  name: withSource
  nameWithType: NetworkConfigurationDiagnosticProfile.withSource
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withSource
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.destination*
  name: destination
  nameWithType: NetworkConfigurationDiagnosticProfile.destination
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.destination
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDestination*
  name: withDestination
  nameWithType: NetworkConfigurationDiagnosticProfile.withDestination
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDestination
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.destinationPort*
  name: destinationPort
  nameWithType: NetworkConfigurationDiagnosticProfile.destinationPort
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.destinationPort
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDestinationPort*
  name: withDestinationPort
  nameWithType: NetworkConfigurationDiagnosticProfile.withDestinationPort
  fullName: com.microsoft.azure.management.network.NetworkConfigurationDiagnosticProfile.withDestinationPort
  package: com.microsoft.azure.management.network
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
