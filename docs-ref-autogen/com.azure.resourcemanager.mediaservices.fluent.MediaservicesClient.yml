### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient"
fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient"
name: "MediaservicesClient"
nameWithType: "MediaservicesClient"
summary: "An instance of this class provides access to all the operations defined in Mediaservices<wbr>Client."
syntax: "public interface MediaservicesClient"
methods:
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.beginCreateOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters)"
  name: "beginCreateOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters)"
  nameWithType: "MediaservicesClient.beginCreateOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters)"
  summary: "Creates or updates a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<MediaServiceInner>,MediaServiceInner> beginCreateOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters)"
  desc: "Creates or updates a Media Services account."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of a Media Services account."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.beginCreateOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters, Context context)"
  name: "beginCreateOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters, Context context)"
  nameWithType: "MediaservicesClient.beginCreateOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters, Context context)"
  summary: "Creates or updates a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<MediaServiceInner>,MediaServiceInner> beginCreateOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters, Context context)"
  desc: "Creates or updates a Media Services account."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of a Media Services account."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.models.MediaServiceUpdate)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.beginUpdate(String resourceGroupName, String accountName, MediaServiceUpdate parameters)"
  name: "beginUpdate(String resourceGroupName, String accountName, MediaServiceUpdate parameters)"
  nameWithType: "MediaservicesClient.beginUpdate(String resourceGroupName, String accountName, MediaServiceUpdate parameters)"
  summary: "Updates an existing Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaServiceUpdate?alt=com.azure.resourcemanager.mediaservices.models.MediaServiceUpdate&text=MediaServiceUpdate\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<MediaServiceInner>,MediaServiceInner> beginUpdate(String resourceGroupName, String accountName, MediaServiceUpdate parameters)"
  desc: "Updates an existing Media Services account."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of a Media Services account."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.models.MediaServiceUpdate,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.beginUpdate(String resourceGroupName, String accountName, MediaServiceUpdate parameters, Context context)"
  name: "beginUpdate(String resourceGroupName, String accountName, MediaServiceUpdate parameters, Context context)"
  nameWithType: "MediaservicesClient.beginUpdate(String resourceGroupName, String accountName, MediaServiceUpdate parameters, Context context)"
  summary: "Updates an existing Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaServiceUpdate?alt=com.azure.resourcemanager.mediaservices.models.MediaServiceUpdate&text=MediaServiceUpdate\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<MediaServiceInner>,MediaServiceInner> beginUpdate(String resourceGroupName, String accountName, MediaServiceUpdate parameters, Context context)"
  desc: "Updates an existing Media Services account."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of a Media Services account."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.createOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters)"
  name: "createOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters)"
  nameWithType: "MediaservicesClient.createOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters)"
  summary: "Creates or updates a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MediaServiceInner createOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters)"
  desc: "Creates or updates a Media Services account."
  returns:
    description: "a Media Services account."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.createOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters, Context context)"
  name: "createOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters, Context context)"
  nameWithType: "MediaservicesClient.createOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters, Context context)"
  summary: "Creates or updates a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MediaServiceInner createOrUpdate(String resourceGroupName, String accountName, MediaServiceInner parameters, Context context)"
  desc: "Creates or updates a Media Services account."
  returns:
    description: "a Media Services account."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.delete(String resourceGroupName, String accountName)"
  name: "delete(String resourceGroupName, String accountName)"
  nameWithType: "MediaservicesClient.delete(String resourceGroupName, String accountName)"
  summary: "Deletes a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String accountName)"
  desc: "Deletes a Media Services account."
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.deleteWithResponse(String resourceGroupName, String accountName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String accountName, Context context)"
  nameWithType: "MediaservicesClient.deleteWithResponse(String resourceGroupName, String accountName, Context context)"
  summary: "Deletes a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String accountName, Context context)"
  desc: "Deletes a Media Services account."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.getByResourceGroup(String resourceGroupName, String accountName)"
  name: "getByResourceGroup(String resourceGroupName, String accountName)"
  nameWithType: "MediaservicesClient.getByResourceGroup(String resourceGroupName, String accountName)"
  summary: "Get the details of a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MediaServiceInner getByResourceGroup(String resourceGroupName, String accountName)"
  desc: "Get the details of a Media Services account."
  returns:
    description: "the details of a Media Services account."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  nameWithType: "MediaservicesClient.getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  summary: "Get the details of a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MediaServiceInner> getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  desc: "Get the details of a Media Services account."
  returns:
    description: "the details of a Media Services account along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.list()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.list()"
  name: "list()"
  nameWithType: "MediaservicesClient.list()"
  summary: "List Media Services accounts in the subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<MediaServiceInner> list()"
  desc: "List Media Services accounts in the subscription."
  returns:
    description: "a collection of MediaService items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.list(Context context)"
  name: "list(Context context)"
  nameWithType: "MediaservicesClient.list(Context context)"
  summary: "List Media Services accounts in the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MediaServiceInner> list(Context context)"
  desc: "List Media Services accounts in the subscription."
  returns:
    description: "a collection of MediaService items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "MediaservicesClient.listByResourceGroup(String resourceGroupName)"
  summary: "List Media Services accounts in the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MediaServiceInner> listByResourceGroup(String resourceGroupName)"
  desc: "List Media Services accounts in the resource group."
  returns:
    description: "a collection of MediaService items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "MediaservicesClient.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "List Media Services accounts in the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MediaServiceInner> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "List Media Services accounts in the resource group."
  returns:
    description: "a collection of MediaService items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.listEdgePolicies(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.listEdgePolicies(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters)"
  name: "listEdgePolicies(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters)"
  nameWithType: "MediaservicesClient.listEdgePolicies(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters)"
  summary: "List all the media edge policies associated with the Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput?alt=com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput&text=ListEdgePoliciesInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EdgePoliciesInner listEdgePolicies(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters)"
  desc: "List all the media edge policies associated with the Media Services account."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.EdgePoliciesInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.EdgePoliciesInner&text=EdgePoliciesInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.listEdgePoliciesWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.listEdgePoliciesWithResponse(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters, Context context)"
  name: "listEdgePoliciesWithResponse(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters, Context context)"
  nameWithType: "MediaservicesClient.listEdgePoliciesWithResponse(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters, Context context)"
  summary: "List all the media edge policies associated with the Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput?alt=com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput&text=ListEdgePoliciesInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<EdgePoliciesInner> listEdgePoliciesWithResponse(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters, Context context)"
  desc: "List all the media edge policies associated with the Media Services account."
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.EdgePoliciesInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.EdgePoliciesInner&text=EdgePoliciesInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.syncStorageKeys(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.syncStorageKeys(String resourceGroupName, String accountName, SyncStorageKeysInput parameters)"
  name: "syncStorageKeys(String resourceGroupName, String accountName, SyncStorageKeysInput parameters)"
  nameWithType: "MediaservicesClient.syncStorageKeys(String resourceGroupName, String accountName, SyncStorageKeysInput parameters)"
  summary: "Synchronizes storage account keys for a storage account associated with the Media Service account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput?alt=com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput&text=SyncStorageKeysInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void syncStorageKeys(String resourceGroupName, String accountName, SyncStorageKeysInput parameters)"
  desc: "Synchronizes storage account keys for a storage account associated with the Media Service account."
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.syncStorageKeysWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.syncStorageKeysWithResponse(String resourceGroupName, String accountName, SyncStorageKeysInput parameters, Context context)"
  name: "syncStorageKeysWithResponse(String resourceGroupName, String accountName, SyncStorageKeysInput parameters, Context context)"
  nameWithType: "MediaservicesClient.syncStorageKeysWithResponse(String resourceGroupName, String accountName, SyncStorageKeysInput parameters, Context context)"
  summary: "Synchronizes storage account keys for a storage account associated with the Media Service account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput?alt=com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput&text=SyncStorageKeysInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> syncStorageKeysWithResponse(String resourceGroupName, String accountName, SyncStorageKeysInput parameters, Context context)"
  desc: "Synchronizes storage account keys for a storage account associated with the Media Service account."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.models.MediaServiceUpdate)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.update(String resourceGroupName, String accountName, MediaServiceUpdate parameters)"
  name: "update(String resourceGroupName, String accountName, MediaServiceUpdate parameters)"
  nameWithType: "MediaservicesClient.update(String resourceGroupName, String accountName, MediaServiceUpdate parameters)"
  summary: "Updates an existing Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaServiceUpdate?alt=com.azure.resourcemanager.mediaservices.models.MediaServiceUpdate&text=MediaServiceUpdate\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MediaServiceInner update(String resourceGroupName, String accountName, MediaServiceUpdate parameters)"
  desc: "Updates an existing Media Services account."
  returns:
    description: "a Media Services account."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.models.MediaServiceUpdate,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.MediaservicesClient.update(String resourceGroupName, String accountName, MediaServiceUpdate parameters, Context context)"
  name: "update(String resourceGroupName, String accountName, MediaServiceUpdate parameters, Context context)"
  nameWithType: "MediaservicesClient.update(String resourceGroupName, String accountName, MediaServiceUpdate parameters, Context context)"
  summary: "Updates an existing Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaServiceUpdate?alt=com.azure.resourcemanager.mediaservices.models.MediaServiceUpdate&text=MediaServiceUpdate\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MediaServiceInner update(String resourceGroupName, String accountName, MediaServiceUpdate parameters, Context context)"
  desc: "Updates an existing Media Services account."
  returns:
    description: "a Media Services account."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in MediaservicesClient."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0
