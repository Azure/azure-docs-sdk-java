### YamlMime:JavaMember
uid: "com.azure.core.util.logging.LoggingEventBuilder.addKeyValue*"
fullName: "com.azure.core.util.logging.LoggingEventBuilder.addKeyValue"
name: "addKeyValue"
nameWithType: "LoggingEventBuilder.addKeyValue"
members:
- uid: "com.azure.core.util.logging.LoggingEventBuilder.addKeyValue(java.lang.String,boolean)"
  fullName: "com.azure.core.util.logging.LoggingEventBuilder.addKeyValue(String key, boolean value)"
  name: "addKeyValue(String key, boolean value)"
  nameWithType: "LoggingEventBuilder.addKeyValue(String key, boolean value)"
  summary: "Adds key with boolean value to the context of current log being created."
  parameters:
  - description: "String key."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "boolean value."
    name: "value"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LoggingEventBuilder addKeyValue(String key, boolean value)"
  returns:
    description: "The updated <code>LoggingEventBuilder</code> object."
    type: "<xref href=\"com.azure.core.util.logging.LoggingEventBuilder?alt=com.azure.core.util.logging.LoggingEventBuilder&text=LoggingEventBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.logging.LoggingEventBuilder.addKeyValue(java.lang.String,java.lang.Object)"
  fullName: "com.azure.core.util.logging.LoggingEventBuilder.addKeyValue(String key, Object value)"
  name: "addKeyValue(String key, Object value)"
  nameWithType: "LoggingEventBuilder.addKeyValue(String key, Object value)"
  summary: "Adds key with Object value to the context of current log being created. If logging is enabled at given level, and object is not null, uses `value.toString()` to serialize object.\n\n**Code samples**\n\nAdding string value to logging event context.\n\n```java\nlogger.atVerbose()\n     // equivalent to addKeyValue(\"key\", () -> new LoggableObject(\"string representation\").toString()\n     .addKeyValue(\"key\", new LoggableObject(\"string representation\"))\n     .log(\"Param 1: {}, Param 2: {}, Param 3: {}\", \"param1\", \"param2\", \"param3\");\n```"
  parameters:
  - description: "String key."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object value."
    name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LoggingEventBuilder addKeyValue(String key, Object value)"
  returns:
    description: "The updated <code>LoggingEventBuilder</code> object."
    type: "<xref href=\"com.azure.core.util.logging.LoggingEventBuilder?alt=com.azure.core.util.logging.LoggingEventBuilder&text=LoggingEventBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.logging.LoggingEventBuilder.addKeyValue(java.lang.String,java.lang.String)"
  fullName: "com.azure.core.util.logging.LoggingEventBuilder.addKeyValue(String key, String value)"
  name: "addKeyValue(String key, String value)"
  nameWithType: "LoggingEventBuilder.addKeyValue(String key, String value)"
  summary: "Adds key with String value pair to the context of current log being created.\n\n**Code samples**\n\nAdding string value to logging event context.\n\n```java\nlogger.atInfo()\n     .addKeyValue(\"key\", \"value\")\n     .log(\"A formattable message. Hello, {}\", name);\n```"
  parameters:
  - description: "String key."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "String value."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LoggingEventBuilder addKeyValue(String key, String value)"
  returns:
    description: "The updated <code>LoggingEventBuilder</code> object."
    type: "<xref href=\"com.azure.core.util.logging.LoggingEventBuilder?alt=com.azure.core.util.logging.LoggingEventBuilder&text=LoggingEventBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.logging.LoggingEventBuilder.addKeyValue(java.lang.String,java.util.function.Supplier<java.lang.String>)"
  fullName: "com.azure.core.util.logging.LoggingEventBuilder.addKeyValue(String key, Supplier<String> valueSupplier)"
  name: "addKeyValue(String key, Supplier<String> valueSupplier)"
  nameWithType: "LoggingEventBuilder.addKeyValue(String key, Supplier<String> valueSupplier)"
  summary: "Adds key with String value supplier to the context of current log event being created."
  parameters:
  - description: "String key."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "String value supplier function."
    name: "valueSupplier"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public LoggingEventBuilder addKeyValue(String key, Supplier<String> valueSupplier)"
  returns:
    description: "The updated <code>LoggingEventBuilder</code> object."
    type: "<xref href=\"com.azure.core.util.logging.LoggingEventBuilder?alt=com.azure.core.util.logging.LoggingEventBuilder&text=LoggingEventBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.logging.LoggingEventBuilder.addKeyValue(java.lang.String,long)"
  fullName: "com.azure.core.util.logging.LoggingEventBuilder.addKeyValue(String key, long value)"
  name: "addKeyValue(String key, long value)"
  nameWithType: "LoggingEventBuilder.addKeyValue(String key, long value)"
  summary: "Adds key with long value to the context of current log event being created.\n\n**Code samples**\n\nAdding an integer value to logging event context.\n\n```java\nlogger.atVerbose()\n     .addKeyValue(\"key\", 1L)\n     .log(() -> String.format(\"Param 1: %s, Param 2: %s, Param 3: %s\", \"param1\", \"param2\", \"param3\"));\n```"
  parameters:
  - description: "String key."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "long value."
    name: "value"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LoggingEventBuilder addKeyValue(String key, long value)"
  returns:
    description: "The updated <code>LoggingEventBuilder</code> object."
    type: "<xref href=\"com.azure.core.util.logging.LoggingEventBuilder?alt=com.azure.core.util.logging.LoggingEventBuilder&text=LoggingEventBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.util.logging"
artifact: com.azure:azure-core:1.24.1
