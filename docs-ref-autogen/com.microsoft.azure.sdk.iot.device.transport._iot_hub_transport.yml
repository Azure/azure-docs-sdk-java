items:
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  id: _iot_hub_transport
  parent: com.microsoft.azure.sdk.iot.device.transport
  children:
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  langs:
  - java
  name: IotHubTransport
  nameWithType: IotHubTransport
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  type: Interface
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 12
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: <p>An interface for an IoT Hub transport. </p>
  syntax:
    content: public interface IotHubTransport
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)
  id: addMessage(Message,IotHubEventCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  langs:
  - java
  name: addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  nameWithType: IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 41
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: >-
    <p>Adds a message to the transport queue.</p>

    <p></p>
  syntax:
    content: public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to be sent. </p>
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: <p>the callback to be invoked when a response for the message is received. </p>
    - id: callbackContext
      type: "79317049"
      description: <p>the context to be passed in when the callback is invoked. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  langs:
  - java
  name: close()
  nameWithType: IotHubTransport.close()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close()
  overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 30
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: >-
    <p>Closes all resources used to communicate with an IoT Hub. Once<programlisting><codeline><highlight class="normal">close()<sp></sp></highlight></codeline></programlisting> is called, the transport is no longer usable. If the transport is already closed, the function shall do nothing.</p>

    <p></p>
  syntax:
    content: public void close()
  exceptions:
  - type: cbf33bbe
    description: <p>if an error occurs in closing the transport. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
  id: handleMessage()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  langs:
  - java
  name: handleMessage()
  nameWithType: IotHubTransport.handleMessage()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()
  overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 67
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: >-
    <p>Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub. </p>

    <p>If no message callback is set, the function will do nothing.</p>

    <p></p>
  syntax:
    content: public void handleMessage()
  exceptions:
  - type: cbf33bbe
    description: <p>if the server could not be reached. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
  id: invokeCallbacks()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  langs:
  - java
  name: invokeCallbacks()
  nameWithType: IotHubTransport.invokeCallbacks()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()
  overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 55
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: <p>Invokes the callbacks for all completed requests. </p>
  syntax:
    content: public void invokeCallbacks()
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
  id: isEmpty()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  langs:
  - java
  name: isEmpty()
  nameWithType: IotHubTransport.isEmpty()
  fullName: boolean com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()
  overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 76
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: >-
    <p>Returns<programlisting><codeline><highlight class="normal">true<sp></sp></highlight></codeline></programlisting> if the transport has no more messages to handle, and<programlisting><codeline><highlight class="normal">false<sp></sp></highlight></codeline></programlisting> otherwise.</p>

    <p></p>
  syntax:
    content: public boolean isEmpty()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <programlisting>

            <codeline>

              <highlight class="normal">true<sp></sp></highlight>

            </codeline>

          </programlisting> if the transport has no more messages to handle, and<programlisting><codeline><highlight class="normal">false<sp></sp></highlight></codeline></programlisting> otherwise. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  langs:
  - java
  name: open()
  nameWithType: IotHubTransport.open()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open()
  overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 21
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: >-
    <p>Establishes a communication channel with an IoT Hub. If a channel is already open, the function shall do nothing.</p>

    <p></p>
  syntax:
    content: public void open()
  exceptions:
  - type: cbf33bbe
    description: <p>if a communication channel cannot be established. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
  id: sendMessages()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  langs:
  - java
  name: sendMessages()
  nameWithType: IotHubTransport.sendMessages()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()
  overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 52
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: >-
    <p>Sends all messages on the transport queue. If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt.</p>

    <p></p>
  syntax:
    content: public void sendMessages()
  exceptions:
  - type: cbf33bbe
    description: <p>if the server could not be reached. </p>
references:
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open*
  name: open
  nameWithType: IotHubTransport.open
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close*
  name: close
  nameWithType: IotHubTransport.close
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage*
  name: addMessage
  nameWithType: IotHubTransport.addMessage
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages*
  name: sendMessages
  nameWithType: IotHubTransport.sendMessages
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks*
  name: invokeCallbacks
  nameWithType: IotHubTransport.invokeCallbacks
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage*
  name: handleMessage
  nameWithType: IotHubTransport.handleMessage
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty*
  name: isEmpty
  nameWithType: IotHubTransport.isEmpty
  fullName: boolean com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  name: AmqpsTransport
  nameWithType: AmqpsTransport
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport
  type: Class
  summary: >-
    <p>An AMQPS transport. Contains functionality for adding messages and sending messages to an IoT Hub. Buffers unsent messages until they are received by an IoT Hub. A transport is bound at construction to the following parameters: IoT Hub name, device ID and device key. </p>

    <p>The transport also receives messages from IoT Hub and invokes a user-defined message callback if a message and callback are found. </p>
  syntax:
    content: public class AmqpsTransport implements IotHubTransport,ServerListener
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
  name: HttpsTransport
  nameWithType: HttpsTransport
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport
  type: Class
  summary: >-
    <p>An HTTPS transport. Contains functionality for adding messages and sending batched messages to an IoT Hub. Buffers unsent messages until they are received by an IoT Hub. A transport is bound at construction to the following parameters: IoT Hub name, device ID, device key, and message valid seconds. </p>

    <p>The transport can also poll an IoT Hub for messages and invoke a user-defined message callback if a message and callback is found. </p>
  syntax:
    content: public class HttpsTransport implements IotHubTransport
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
  name: MqttTransport
  nameWithType: MqttTransport
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport
  type: Class
  summary: >-
    <p>An MQTT transport. Contains functionality for adding messages and sending batched messages to an IoT Hub. Buffers unsent messages until they are received by an IoT Hub. A transport is bound at construction to the following parameters: IoT Hub name, device ID, device key, and message valid seconds. </p>

    <p>The transport can also poll an IoT Hub for messages and invoke a user-defined message callback if a message and callback is found. </p>
  syntax:
    content: public class MqttTransport
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.open()
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
  name: open()
  nameWithType: MqttTransport.open()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.open()
  type: Method
  summary: >-
    <p>Establishes a communication channel with an IoT Hub. If a channel is already open, the function shall do nothing.</p>

    <p></p>
  syntax:
    content: public void open()
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.open()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
  name: open()
  nameWithType: HttpsTransport.open()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.open()
  type: Method
  summary: >-
    <p>Establishes a communication channel with an IoT Hub. If a channel is already open, the function shall do nothing.</p>

    <p></p>
  syntax:
    content: public void open()
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.open()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  name: open()
  nameWithType: AmqpsTransport.open()
  fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.open()
  type: Method
  summary: >-
    <p>Establishes a communication channel with an IoT Hub. If a channel is already open, the function shall do nothing.</p>

    <p></p>
  syntax:
    content: public synchronized void open()
    return:
      type: 5c0b90ca
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.close()
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
  name: close()
  nameWithType: MqttTransport.close()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.close()
  type: Method
  summary: <p>Closes all resources used to communicate with an IoT Hub. Once<programlisting><codeline><highlight class="normal">close()<sp></sp></highlight></codeline></programlisting> is called, the transport is no longer usable. If the transport is already closed, the function shall do nothing. </p>
  syntax:
    content: public void close()
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.close()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
  name: close()
  nameWithType: HttpsTransport.close()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.close()
  type: Method
  summary: >-
    <p>Closes all resources used to communicate with an IoT Hub. Once<programlisting><codeline><highlight class="normal">close()<sp></sp></highlight></codeline></programlisting> is called, the transport is no longer usable. If the transport is already closed, the function shall do nothing.</p>

    <p></p>
  syntax:
    content: public void close()
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.close()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  name: close()
  nameWithType: AmqpsTransport.close()
  fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.close()
  type: Method
  summary: >-
    <p>Closes all resources used to communicate with an IoT Hub. Once<programlisting><codeline><highlight class="normal">close()<sp></sp></highlight></codeline></programlisting> is called, the transport is no longer usable. If the transport is already closed, the function shall do nothing.</p>

    <p></p>
  syntax:
    content: public synchronized void close()
    return:
      type: 5c0b90ca
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.addMessage(Message,IotHubEventCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
  name: addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  nameWithType: MqttTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  type: Method
  summary: >-
    <p>Adds a message to the transport queue.</p>

    <p></p>
  syntax:
    content: public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to be sent. </p>
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: <p>the callback to be invoked when a response for the message is received. </p>
    - id: callbackContext
      type: "79317049"
      description: <p>the context to be passed in when the callback is invoked.</p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubEventCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
  name: addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  nameWithType: HttpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  type: Method
  summary: >-
    <p>Adds a message to the transport queue.</p>

    <p></p>
  syntax:
    content: public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to be sent. </p>
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: <p>the callback to be invoked when a response for the message is received. </p>
    - id: callbackContext
      type: "79317049"
      description: <p>the context to be passed in when the callback is invoked.</p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage(Message,IotHubEventCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  name: addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  nameWithType: AmqpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  type: Method
  summary: >-
    <p>Adds a message to the transport queue.</p>

    <p></p>
  syntax:
    content: public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to be sent. </p>
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: <p>the callback to be invoked when a response for the message is received. </p>
    - id: callbackContext
      type: "79317049"
      description: <p>the context to be passed in when the callback is invoked.</p>
- uid: com.microsoft.azure.sdk.iot.device._message
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.device.Message
  type: Class
  syntax:
    content: public class Message
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
  name: IotHubEventCallback
  nameWithType: IotHubEventCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
  type: Interface
  summary: >-
    <p>An interface for an IoT Hub event callback.</p>

    <p>Developers are expected to create an implementation of this interface, and the transport will call <xref href="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false"></xref> upon receiving a response from an IoT Hub. </p>
  syntax:
    content: public interface IotHubEventCallback
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.sendMessages()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
  name: sendMessages()
  nameWithType: HttpsTransport.sendMessages()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.sendMessages()
  type: Method
  summary: >-
    <p>Sends all messages on the transport queue as a batched request.</p>

    <p></p>
  syntax:
    content: public void sendMessages()
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.sendMessages()
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
  name: sendMessages()
  nameWithType: MqttTransport.sendMessages()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.sendMessages()
  type: Method
  summary: >-
    <p>Sends all messages on the transport queue, one at a time. If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt. </p>

    <p>If one has not already been created, the function will initialize an MQTT connection with the IoT Hub specified in the configuration.</p>

    <p></p>
  syntax:
    content: public void sendMessages()
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.sendMessages()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  name: sendMessages()
  nameWithType: AmqpsTransport.sendMessages()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.sendMessages()
  type: Method
  summary: >-
    <p>Sends all messages from the waiting list, one at a time. If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt. </p>

    <p></p>
  syntax:
    content: public void sendMessages()
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.invokeCallbacks()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
  name: invokeCallbacks()
  nameWithType: HttpsTransport.invokeCallbacks()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.invokeCallbacks()
  type: Method
  summary: >-
    <p>Invokes the callbacks for all completed requests.</p>

    <p></p>
  syntax:
    content: public void invokeCallbacks()
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.invokeCallbacks()
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
  name: invokeCallbacks()
  nameWithType: MqttTransport.invokeCallbacks()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.invokeCallbacks()
  type: Method
  summary: >-
    <p>Invokes the callbacks for all completed requests.</p>

    <p></p>
  syntax:
    content: public void invokeCallbacks()
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.invokeCallbacks()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  name: invokeCallbacks()
  nameWithType: AmqpsTransport.invokeCallbacks()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.invokeCallbacks()
  type: Method
  summary: >-
    <p>Invokes the callbacks for all completed requests.</p>

    <p></p>
  syntax:
    content: public void invokeCallbacks()
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.handleMessage()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
  name: handleMessage()
  nameWithType: HttpsTransport.handleMessage()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.handleMessage()
  type: Method
  summary: >-
    <p>Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub. </p>

    <p>If no message callback is set, the function will do nothing.</p>

    <p></p>
  syntax:
    content: public void handleMessage()
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.handleMessage()
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
  name: handleMessage()
  nameWithType: MqttTransport.handleMessage()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.handleMessage()
  type: Method
  summary: >-
    <p>Invokes the message callback every time a message arrives from the server. responds to the IoT Hub on how the processed message should be handled by the IoT Hub. </p>

    <p>If no message callback is set, the function will do nothing.</p>

    <p></p>
  syntax:
    content: public void handleMessage()
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.handleMessage()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  name: handleMessage()
  nameWithType: AmqpsTransport.handleMessage()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.handleMessage()
  type: Method
  summary: >-
    <p>Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub. </p>

    <p>If no message callback is set, the function will do nothing.</p>

    <p></p>
  syntax:
    content: public void handleMessage()
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.isEmpty()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
  name: isEmpty()
  nameWithType: HttpsTransport.isEmpty()
  fullName: boolean com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.isEmpty()
  type: Method
  summary: >-
    <p>Returns true if the transport has no more messages to handle, and false otherwise.</p>

    <p></p>
  syntax:
    content: public boolean isEmpty()
    return:
      type: 4fc6e284
      description: <p>true if the transport has no more messages to handle, and false otherwise. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.isEmpty()
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
  name: isEmpty()
  nameWithType: MqttTransport.isEmpty()
  fullName: boolean com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.isEmpty()
  type: Method
  summary: >-
    <p>Returns<programlisting><codeline><highlight class="normal">true<sp></sp></highlight></codeline></programlisting> if the transport has no more messages to handle, and<programlisting><codeline><highlight class="normal">false<sp></sp></highlight></codeline></programlisting> otherwise.</p>

    <p></p>
  syntax:
    content: public boolean isEmpty()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <programlisting>

            <codeline>

              <highlight class="normal">true<sp></sp></highlight>

            </codeline>

          </programlisting> if the transport has no more messages to handle, and<programlisting><codeline><highlight class="normal">false<sp></sp></highlight></codeline></programlisting> otherwise. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.isEmpty()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  name: isEmpty()
  nameWithType: AmqpsTransport.isEmpty()
  fullName: boolean com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.isEmpty()
  type: Method
  summary: >-
    <p>Returns<programlisting><codeline><highlight class="normal">true<sp></sp></highlight></codeline></programlisting> if the transport has no more messages to handle, and<programlisting><codeline><highlight class="normal">false<sp></sp></highlight></codeline></programlisting> otherwise.</p>

    <p></p>
  syntax:
    content: public boolean isEmpty()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <programlisting>

            <codeline>

              <highlight class="normal">true<sp></sp></highlight>

            </codeline>

          </programlisting> if the transport has no more messages to handle, and<programlisting><codeline><highlight class="normal">false<sp></sp></highlight></codeline></programlisting> otherwise. </p>
