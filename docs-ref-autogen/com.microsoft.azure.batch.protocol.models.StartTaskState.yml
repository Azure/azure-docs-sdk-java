### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState
  id: StartTaskState
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.StartTaskState.COMPLETED
  - com.microsoft.azure.batch.protocol.models.StartTaskState.RUNNING
  - com.microsoft.azure.batch.protocol.models.StartTaskState.fromString(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.StartTaskState.toString()
  - com.microsoft.azure.batch.protocol.models.StartTaskState.valueOf(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.StartTaskState.values()
  langs:
  - java
  name: StartTaskState
  nameWithType: StartTaskState
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState
  type: Enum
  package: com.microsoft.azure.batch.protocol.models
  summary: Defines values for StartTaskState.
  syntax:
    content: public enum StartTaskState extends Enum<StartTaskState>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState.COMPLETED
  id: COMPLETED
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskState
  langs:
  - java
  name: COMPLETED
  nameWithType: StartTaskState.COMPLETED
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState.COMPLETED
  type: Field
  package: com.microsoft.azure.batch.protocol.models
  summary: The StartTask has exited with exit code 0, or the StartTask has failed and the retry limit has reached, or the StartTask process did not run due to Task preparation errors (such as resource file download failures).
  syntax:
    content: public static final StartTaskState COMPLETED
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskState
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState.RUNNING
  id: RUNNING
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskState
  langs:
  - java
  name: RUNNING
  nameWithType: StartTaskState.RUNNING
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState.RUNNING
  type: Field
  package: com.microsoft.azure.batch.protocol.models
  summary: The StartTask is currently running.
  syntax:
    content: public static final StartTaskState RUNNING
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskState
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState.StartTaskState(java.lang.String)
  id: StartTaskState(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskState
  langs:
  - java
  name: StartTaskState(String value)
  nameWithType: StartTaskState.StartTaskState(String value)
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState.StartTaskState(String value)
  overload: com.microsoft.azure.batch.protocol.models.StartTaskState.StartTaskState*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: private StartTaskState(String value)
    parameters:
    - id: value
      type: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState.fromString(java.lang.String)
  id: fromString(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskState
  langs:
  - java
  name: fromString(String value)
  nameWithType: StartTaskState.fromString(String value)
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState.fromString(String value)
  overload: com.microsoft.azure.batch.protocol.models.StartTaskState.fromString*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Parses a serialized value to a StartTaskState instance.
  syntax:
    content: public static StartTaskState fromString(String value)
    parameters:
    - id: value
      type: java.lang.String
      description: the serialized value to parse.
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskState
      description: the parsed StartTaskState object, or null if unable to parse.
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState.toString()
  id: toString()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskState
  langs:
  - java
  name: toString()
  nameWithType: StartTaskState.toString()
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState.toString()
  overload: com.microsoft.azure.batch.protocol.models.StartTaskState.toString*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskState
  langs:
  - java
  name: valueOf(String name)
  nameWithType: StartTaskState.valueOf(String name)
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState.valueOf(String name)
  overload: com.microsoft.azure.batch.protocol.models.StartTaskState.valueOf*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public static StartTaskState valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskState
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState.values()
  id: values()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskState
  langs:
  - java
  name: values()
  nameWithType: StartTaskState.values()
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState.values()
  overload: com.microsoft.azure.batch.protocol.models.StartTaskState.values*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public static StartTaskState[] values()
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskState[]
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState.StartTaskState*
  name: StartTaskState
  nameWithType: StartTaskState.StartTaskState
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState.StartTaskState
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState[]
  spec.java:
  - uid: com.microsoft.azure.batch.protocol.models.StartTaskState
    name: StartTaskState
    fullName: com.microsoft.azure.batch.protocol.models.StartTaskState
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState.values*
  name: values
  nameWithType: StartTaskState.values
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState.values
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState.valueOf*
  name: valueOf
  nameWithType: StartTaskState.valueOf
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState.valueOf
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState.fromString*
  name: fromString
  nameWithType: StartTaskState.fromString
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState.fromString
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState.toString*
  name: toString
  nameWithType: StartTaskState.toString
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState.toString
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Enum<com.microsoft.azure.batch.protocol.models.StartTaskState>
  name: Enum<StartTaskState>
  nameWithType: Enum<StartTaskState>
  fullName: java.lang.Enum<com.microsoft.azure.batch.protocol.models.StartTaskState>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
