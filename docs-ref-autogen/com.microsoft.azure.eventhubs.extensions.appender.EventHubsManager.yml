### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager
  id: EventHubsManager
  artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
  parent: com.microsoft.azure.eventhubs.extensions.appender
  children:
  - com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.EventHubsManager(java.lang.String,java.lang.String)
  - com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send(byte[])
  - com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send(java.lang.Iterable<byte[]>)
  - com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.startup()
  langs:
  - java
  name: EventHubsManager
  nameWithType: EventHubsManager
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager
  type: Class
  package: com.microsoft.azure.eventhubs.extensions.appender
  syntax:
    content: public final class EventHubsManager extends AbstractManager
  inheritance:
  - java.lang.Object
  - org.apache.logging.log4j.core.appender.AbstractManager
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.apache.logging.log4j.core.appender.AbstractManager.<M,T>getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory<M,T>,T)
  - org.apache.logging.log4j.core.appender.AbstractManager.<M>narrow(java.lang.Class<M>,org.apache.logging.log4j.core.appender.AbstractManager)
  - org.apache.logging.log4j.core.appender.AbstractManager.close()
  - org.apache.logging.log4j.core.appender.AbstractManager.getContentFormat()
  - org.apache.logging.log4j.core.appender.AbstractManager.getCount()
  - org.apache.logging.log4j.core.appender.AbstractManager.getLoggerContext()
  - org.apache.logging.log4j.core.appender.AbstractManager.getName()
  - org.apache.logging.log4j.core.appender.AbstractManager.hasManager(java.lang.String)
  - org.apache.logging.log4j.core.appender.AbstractManager.log(org.apache.logging.log4j.Level,java.lang.String,java.lang.Throwable)
  - org.apache.logging.log4j.core.appender.AbstractManager.logDebug(java.lang.String,java.lang.Throwable)
  - org.apache.logging.log4j.core.appender.AbstractManager.logError(java.lang.String,java.lang.Throwable)
  - org.apache.logging.log4j.core.appender.AbstractManager.logWarn(java.lang.String,java.lang.Throwable)
  - org.apache.logging.log4j.core.appender.AbstractManager.logger()
  - org.apache.logging.log4j.core.appender.AbstractManager.release()
  - org.apache.logging.log4j.core.appender.AbstractManager.releaseSub(long,java.util.concurrent.TimeUnit)
  - org.apache.logging.log4j.core.appender.AbstractManager.stop(long,java.util.concurrent.TimeUnit)
  - org.apache.logging.log4j.core.appender.AbstractManager.updateData(java.lang.Object)
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.EventHubsManager(java.lang.String,java.lang.String)
  id: EventHubsManager(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
  parent: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager
  langs:
  - java
  name: EventHubsManager(String name, String eventHubConnectionString)
  nameWithType: EventHubsManager.EventHubsManager(String name, String eventHubConnectionString)
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.EventHubsManager(String name, String eventHubConnectionString)
  overload: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.EventHubsManager*
  type: Constructor
  package: com.microsoft.azure.eventhubs.extensions.appender
  syntax:
    content: protected EventHubsManager(String name, String eventHubConnectionString)
    parameters:
    - id: name
      type: java.lang.String
    - id: eventHubConnectionString
      type: java.lang.String
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send(byte[])
  id: send(byte[])
  artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
  parent: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager
  langs:
  - java
  name: send(byte[] msg)
  nameWithType: EventHubsManager.send(byte[] msg)
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send(byte[] msg)
  overload: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send*
  type: Method
  package: com.microsoft.azure.eventhubs.extensions.appender
  syntax:
    content: public void send(byte[] msg)
    parameters:
    - id: msg
      type: byte[]
  exceptions:
  - type: com.microsoft.azure.eventhubs.EventHubException
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send(java.lang.Iterable<byte[]>)
  id: send(java.lang.Iterable<byte[]>)
  artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
  parent: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager
  langs:
  - java
  name: send(Iterable<byte[]> messages)
  nameWithType: EventHubsManager.send(Iterable<byte[]> messages)
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send(Iterable<byte[]> messages)
  overload: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send*
  type: Method
  package: com.microsoft.azure.eventhubs.extensions.appender
  syntax:
    content: public void send(Iterable<byte[]> messages)
    parameters:
    - id: messages
      type: java.lang.Iterable<byte[]>
  exceptions:
  - type: com.microsoft.azure.eventhubs.EventHubException
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.startup()
  id: startup()
  artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
  parent: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager
  langs:
  - java
  name: startup()
  nameWithType: EventHubsManager.startup()
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.startup()
  overload: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.startup*
  type: Method
  package: com.microsoft.azure.eventhubs.extensions.appender
  syntax:
    content: public void startup()
  exceptions:
  - type: com.microsoft.azure.eventhubs.EventHubException
  - type: java.io.IOException
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.EventHubsManager*
  name: EventHubsManager
  nameWithType: EventHubsManager.EventHubsManager
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.EventHubsManager
  package: com.microsoft.azure.eventhubs.extensions.appender
- uid: com.microsoft.azure.eventhubs.EventHubException
  spec.java:
  - uid: com.microsoft.azure.eventhubs.EventHubException
    name: EventHubException
    fullName: com.microsoft.azure.eventhubs.EventHubException
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send*
  name: send
  nameWithType: EventHubsManager.send
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send
  package: com.microsoft.azure.eventhubs.extensions.appender
- uid: java.lang.Iterable<byte[]>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.startup*
  name: startup
  nameWithType: EventHubsManager.startup
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.startup
  package: com.microsoft.azure.eventhubs.extensions.appender
- uid: org.apache.logging.log4j.core.appender.AbstractManager
  name: AbstractManager
  nameWithType: AbstractManager
  fullName: org.apache.logging.log4j.core.appender.AbstractManager
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: org.apache.logging.log4j.core.appender.AbstractManager.stop(long,java.util.concurrent.TimeUnit)
  name: AbstractManager.stop(long,TimeUnit)
  nameWithType: AbstractManager.stop(long,TimeUnit)
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.stop(long,java.util.concurrent.TimeUnit)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.apache.logging.log4j.core.appender.AbstractManager.getName()
  name: AbstractManager.getName()
  nameWithType: AbstractManager.getName()
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.getName()
- uid: org.apache.logging.log4j.core.appender.AbstractManager.close()
  name: AbstractManager.close()
  nameWithType: AbstractManager.close()
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.close()
- uid: org.apache.logging.log4j.core.appender.AbstractManager.log(org.apache.logging.log4j.Level,java.lang.String,java.lang.Throwable)
  name: AbstractManager.log(Level,String,Throwable)
  nameWithType: AbstractManager.log(Level,String,Throwable)
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.log(org.apache.logging.log4j.Level,java.lang.String,java.lang.Throwable)
- uid: org.apache.logging.log4j.core.appender.AbstractManager.hasManager(java.lang.String)
  name: AbstractManager.hasManager(String)
  nameWithType: AbstractManager.hasManager(String)
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.hasManager(java.lang.String)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: org.apache.logging.log4j.core.appender.AbstractManager.release()
  name: AbstractManager.release()
  nameWithType: AbstractManager.release()
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.release()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.apache.logging.log4j.core.appender.AbstractManager.logError(java.lang.String,java.lang.Throwable)
  name: AbstractManager.logError(String,Throwable)
  nameWithType: AbstractManager.logError(String,Throwable)
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.logError(java.lang.String,java.lang.Throwable)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.apache.logging.log4j.core.appender.AbstractManager.<M,T>getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory<M,T>,T)
  name: AbstractManager.<M,T>getManager(String,ManagerFactory<M,T>,T)
  nameWithType: AbstractManager.<M,T>getManager(String,ManagerFactory<M,T>,T)
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.<M,T>getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory<M,T>,T)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.apache.logging.log4j.core.appender.AbstractManager.logDebug(java.lang.String,java.lang.Throwable)
  name: AbstractManager.logDebug(String,Throwable)
  nameWithType: AbstractManager.logDebug(String,Throwable)
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.logDebug(java.lang.String,java.lang.Throwable)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.apache.logging.log4j.core.appender.AbstractManager.logWarn(java.lang.String,java.lang.Throwable)
  name: AbstractManager.logWarn(String,Throwable)
  nameWithType: AbstractManager.logWarn(String,Throwable)
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.logWarn(java.lang.String,java.lang.Throwable)
- uid: org.apache.logging.log4j.core.appender.AbstractManager.logger()
  name: AbstractManager.logger()
  nameWithType: AbstractManager.logger()
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.logger()
- uid: org.apache.logging.log4j.core.appender.AbstractManager.getLoggerContext()
  name: AbstractManager.getLoggerContext()
  nameWithType: AbstractManager.getLoggerContext()
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.getLoggerContext()
- uid: org.apache.logging.log4j.core.appender.AbstractManager.releaseSub(long,java.util.concurrent.TimeUnit)
  name: AbstractManager.releaseSub(long,TimeUnit)
  nameWithType: AbstractManager.releaseSub(long,TimeUnit)
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.releaseSub(long,java.util.concurrent.TimeUnit)
- uid: org.apache.logging.log4j.core.appender.AbstractManager.getContentFormat()
  name: AbstractManager.getContentFormat()
  nameWithType: AbstractManager.getContentFormat()
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.getContentFormat()
- uid: org.apache.logging.log4j.core.appender.AbstractManager.getCount()
  name: AbstractManager.getCount()
  nameWithType: AbstractManager.getCount()
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.getCount()
- uid: org.apache.logging.log4j.core.appender.AbstractManager.updateData(java.lang.Object)
  name: AbstractManager.updateData(Object)
  nameWithType: AbstractManager.updateData(Object)
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.updateData(java.lang.Object)
- uid: org.apache.logging.log4j.core.appender.AbstractManager.<M>narrow(java.lang.Class<M>,org.apache.logging.log4j.core.appender.AbstractManager)
  name: AbstractManager.<M>narrow(Class<M>,AbstractManager)
  nameWithType: AbstractManager.<M>narrow(Class<M>,AbstractManager)
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.<M>narrow(java.lang.Class<M>,org.apache.logging.log4j.core.appender.AbstractManager)
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: M,T>,T)
  name: M,T>,T)
  nameWithType: M,T>,T)
  fullName: M,T>,T)
- uid: org.apache.logging.log4j.core.appender.AbstractManager.
  name: AbstractManager.
  nameWithType: AbstractManager.
  fullName: org.apache.logging.log4j.core.appender.AbstractManager.
- uid: M,T>getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory
  name: M,T>getManager(String,ManagerFactory
  nameWithType: M,T>getManager(String,ManagerFactory
  fullName: M,T>getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory
- uid: M>,org.apache.logging.log4j.core.appender.AbstractManager)
  name: M>,AbstractManager)
  nameWithType: M>,AbstractManager)
  fullName: M>,org.apache.logging.log4j.core.appender.AbstractManager)
- uid: M>narrow(java.lang.Class
  name: M>narrow(Class
  nameWithType: M>narrow(Class
  fullName: M>narrow(java.lang.Class
