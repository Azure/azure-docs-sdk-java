### YamlMime:JavaType
uid: "com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager"
fullName: "com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager"
name: "EventHubsManager"
nameWithType: "EventHubsManager"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.logging.log4j.core.appender.AbstractManager?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.apache.logging.log4j.core.appender.AbstractManager.<M,T>getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory<M,T>,T)"
- "org.apache.logging.log4j.core.appender.AbstractManager.<M>narrow(java.lang.Class<M>,org.apache.logging.log4j.core.appender.AbstractManager)"
- "org.apache.logging.log4j.core.appender.AbstractManager.close()"
- "org.apache.logging.log4j.core.appender.AbstractManager.getContentFormat()"
- "org.apache.logging.log4j.core.appender.AbstractManager.getCount()"
- "org.apache.logging.log4j.core.appender.AbstractManager.getLoggerContext()"
- "org.apache.logging.log4j.core.appender.AbstractManager.getName()"
- "org.apache.logging.log4j.core.appender.AbstractManager.hasManager(java.lang.String)"
- "org.apache.logging.log4j.core.appender.AbstractManager.log(org.apache.logging.log4j.Level,java.lang.String,java.lang.Throwable)"
- "org.apache.logging.log4j.core.appender.AbstractManager.logDebug(java.lang.String,java.lang.Throwable)"
- "org.apache.logging.log4j.core.appender.AbstractManager.logError(java.lang.String,java.lang.Throwable)"
- "org.apache.logging.log4j.core.appender.AbstractManager.logWarn(java.lang.String,java.lang.Throwable)"
- "org.apache.logging.log4j.core.appender.AbstractManager.logger()"
- "org.apache.logging.log4j.core.appender.AbstractManager.release()"
- "org.apache.logging.log4j.core.appender.AbstractManager.releaseSub(long,java.util.concurrent.TimeUnit)"
- "org.apache.logging.log4j.core.appender.AbstractManager.stop(long,java.util.concurrent.TimeUnit)"
- "org.apache.logging.log4j.core.appender.AbstractManager.updateData(java.lang.Object)"
syntax: "public final class EventHubsManager extends AbstractManager"
constructors:
- uid: "com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.EventHubsManager(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.EventHubsManager(String name, String eventHubConnectionString)"
  name: "EventHubsManager(String name, String eventHubConnectionString)"
  nameWithType: "EventHubsManager.EventHubsManager(String name, String eventHubConnectionString)"
  modifiers:
  - "protected"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "eventHubConnectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected EventHubsManager(String name, String eventHubConnectionString)"
methods:
- uid: "com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send(byte[])"
  fullName: "com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send(byte[] msg)"
  name: "send(byte[] msg)"
  nameWithType: "EventHubsManager.send(byte[] msg)"
  parameters:
  - name: "msg"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void send(byte[] msg)"
  exceptions:
  - type: "<xref href=\"com.microsoft.azure.eventhubs.EventHubException?alt=com.microsoft.azure.eventhubs.EventHubException&text=EventHubException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send(java.lang.Iterable<byte[]>)"
  fullName: "com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.send(Iterable<byte[]> messages)"
  name: "send(Iterable<byte[]> messages)"
  nameWithType: "EventHubsManager.send(Iterable<byte[]> messages)"
  parameters:
  - name: "messages"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
  syntax: "public void send(Iterable<byte[]> messages)"
  exceptions:
  - type: "<xref href=\"com.microsoft.azure.eventhubs.EventHubException?alt=com.microsoft.azure.eventhubs.EventHubException&text=EventHubException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.startup()"
  fullName: "com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager.startup()"
  name: "startup()"
  nameWithType: "EventHubsManager.startup()"
  syntax: "public void startup()"
  exceptions:
  - type: "<xref href=\"com.microsoft.azure.eventhubs.EventHubException?alt=com.microsoft.azure.eventhubs.EventHubException&text=EventHubException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.eventhubs.extensions.appender"
artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
