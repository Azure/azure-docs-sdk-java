### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.models.FileReadHeaders.setLeaseState*"
fullName: "com.azure.storage.file.datalake.models.FileReadHeaders.setLeaseState"
name: "setLeaseState"
nameWithType: "FileReadHeaders.setLeaseState"
members:
- uid: "com.azure.storage.file.datalake.models.FileReadHeaders.setLeaseState(com.azure.storage.file.datalake.models.LeaseStateType)"
  fullName: "com.azure.storage.file.datalake.models.FileReadHeaders.setLeaseState(LeaseStateType leaseState)"
  name: "setLeaseState(LeaseStateType leaseState)"
  nameWithType: "FileReadHeaders.setLeaseState(LeaseStateType leaseState)"
  summary: "Set the leaseState property: Lease state of the file. Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'."
  parameters:
  - description: "the leaseState value to set."
    name: "leaseState"
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseStateType?alt=com.azure.storage.file.datalake.models.LeaseStateType&text=LeaseStateType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileReadHeaders setLeaseState(LeaseStateType leaseState)"
  returns:
    description: "the FileReadHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileReadHeaders?alt=com.azure.storage.file.datalake.models.FileReadHeaders&text=FileReadHeaders\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.models"
artifact: com.azure:azure-storage-file-datalake:12.4.0
