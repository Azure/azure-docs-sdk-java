### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.JobSchedules
  id: JobSchedules
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol
  children:
  - com.microsoft.azure.batch.protocol.JobSchedules.add(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter)
  - com.microsoft.azure.batch.protocol.JobSchedules.add(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.addAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter)
  - com.microsoft.azure.batch.protocol.JobSchedules.addAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.addAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.addAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter)
  - com.microsoft.azure.batch.protocol.JobSchedules.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.delete(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.delete(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.deleteWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.deleteWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.disable(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.disable(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.disableAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.disableAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.disableWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.disableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.enable(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.enable(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.enableAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.enableAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.enableWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.enableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.exists(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.exists(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.existsAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)
  - com.microsoft.azure.batch.protocol.JobSchedules.existsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)
  - com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.get(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.get(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.getAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  - com.microsoft.azure.batch.protocol.JobSchedules.getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  - com.microsoft.azure.batch.protocol.JobSchedules.getWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.getWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.list()
  - com.microsoft.azure.batch.protocol.JobSchedules.list(com.microsoft.azure.batch.protocol.models.JobScheduleListOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.listAsync()
  - com.microsoft.azure.batch.protocol.JobSchedules.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  - com.microsoft.azure.batch.protocol.JobSchedules.listAsync(com.microsoft.azure.batch.protocol.models.JobScheduleListOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.listAsync(com.microsoft.azure.batch.protocol.models.JobScheduleListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  - com.microsoft.azure.batch.protocol.JobSchedules.listNext(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  - com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  - com.microsoft.azure.batch.protocol.JobSchedules.listNextWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.listWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.JobSchedules.listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobScheduleListOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter)
  - com.microsoft.azure.batch.protocol.JobSchedules.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter)
  - com.microsoft.azure.batch.protocol.JobSchedules.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter)
  - com.microsoft.azure.batch.protocol.JobSchedules.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.terminate(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.terminate(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter)
  - com.microsoft.azure.batch.protocol.JobSchedules.update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter)
  - com.microsoft.azure.batch.protocol.JobSchedules.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions)
  - com.microsoft.azure.batch.protocol.JobSchedules.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter)
  - com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions)
  langs:
  - java
  name: JobSchedules
  nameWithType: JobSchedules
  fullName: com.microsoft.azure.batch.protocol.JobSchedules
  type: Interface
  package: com.microsoft.azure.batch.protocol
  summary: An instance of this class provides access to all the operations defined in JobSchedules.
  syntax:
    content: public interface JobSchedules
- uid: com.microsoft.azure.batch.protocol.JobSchedules.add(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter)
  id: add(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: add(JobScheduleAddParameter cloudJobSchedule)
  nameWithType: JobSchedules.add(JobScheduleAddParameter cloudJobSchedule)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.add(JobScheduleAddParameter cloudJobSchedule)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.add*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Job Schedule to the specified Account.
  syntax:
    content: public abstract void add(JobScheduleAddParameter cloudJobSchedule)
    parameters:
    - id: cloudJobSchedule
      type: com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter
      description: The Job Schedule to be added.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.add(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions)
  id: add(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: add(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  nameWithType: JobSchedules.add(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.add(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.add*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Job Schedule to the specified Account.
  syntax:
    content: public abstract void add(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
    parameters:
    - id: cloudJobSchedule
      type: com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter
      description: The Job Schedule to be added.
    - id: jobScheduleAddOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter)
  id: addAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: addAsync(JobScheduleAddParameter cloudJobSchedule)
  nameWithType: JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Job Schedule to the specified Account.
  syntax:
    content: public abstract Observable<Void> addAsync(JobScheduleAddParameter cloudJobSchedule)
    parameters:
    - id: cloudJobSchedule
      type: com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter
      description: The Job Schedule to be added.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions)
  id: addAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  nameWithType: JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Job Schedule to the specified Account.
  syntax:
    content: public abstract Observable<Void> addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
    parameters:
    - id: cloudJobSchedule
      type: com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter
      description: The Job Schedule to be added.
    - id: jobScheduleAddOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: addAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Job Schedule to the specified Account.
  syntax:
    content: public abstract ServiceFuture<Void> addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: cloudJobSchedule
      type: com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter
      description: The Job Schedule to be added.
    - id: jobScheduleAddOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: addAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: addAsync(JobScheduleAddParameter cloudJobSchedule, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Job Schedule to the specified Account.
  syntax:
    content: public abstract ServiceFuture<Void> addAsync(JobScheduleAddParameter cloudJobSchedule, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: cloudJobSchedule
      type: com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter
      description: The Job Schedule to be added.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter)
  id: addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: addWithServiceResponseAsync(JobScheduleAddParameter cloudJobSchedule)
  nameWithType: JobSchedules.addWithServiceResponseAsync(JobScheduleAddParameter cloudJobSchedule)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.addWithServiceResponseAsync(JobScheduleAddParameter cloudJobSchedule)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.addWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Job Schedule to the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobScheduleAddHeaders>> addWithServiceResponseAsync(JobScheduleAddParameter cloudJobSchedule)
    parameters:
    - id: cloudJobSchedule
      type: com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter
      description: The Job Schedule to be added.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleAddHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions)
  id: addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter,com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: addWithServiceResponseAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  nameWithType: JobSchedules.addWithServiceResponseAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.addWithServiceResponseAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.addWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Job Schedule to the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobScheduleAddHeaders>> addWithServiceResponseAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
    parameters:
    - id: cloudJobSchedule
      type: com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter
      description: The Job Schedule to be added.
    - id: jobScheduleAddOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleAddHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.delete(java.lang.String)
  id: delete(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: delete(String jobScheduleId)
  nameWithType: JobSchedules.delete(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.delete(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.delete*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job Schedule from the specified Account. When you delete a Job Schedule, this also deletes all Jobs and Tasks under that schedule. When Tasks are deleted, all the files in their working directories on the Compute Nodes are also deleted (the retention period is ignored). The Job Schedule statistics are no longer accessible once the Job Schedule is deleted, though they are still counted towards Account lifetime statistics.
  syntax:
    content: public abstract void delete(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to delete.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.delete(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions)
  id: delete(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: delete(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions)
  nameWithType: JobSchedules.delete(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.delete(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.delete*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job Schedule from the specified Account. When you delete a Job Schedule, this also deletes all Jobs and Tasks under that schedule. When Tasks are deleted, all the files in their working directories on the Compute Nodes are also deleted (the retention period is ignored). The Job Schedule statistics are no longer accessible once the Job Schedule is deleted, though they are still counted towards Account lifetime statistics.
  syntax:
    content: public abstract void delete(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to delete.
    - id: jobScheduleDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync(java.lang.String)
  id: deleteAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: deleteAsync(String jobScheduleId)
  nameWithType: JobSchedules.deleteAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job Schedule from the specified Account. When you delete a Job Schedule, this also deletes all Jobs and Tasks under that schedule. When Tasks are deleted, all the files in their working directories on the Compute Nodes are also deleted (the retention period is ignored). The Job Schedule statistics are no longer accessible once the Job Schedule is deleted, though they are still counted towards Account lifetime statistics.
  syntax:
    content: public abstract Observable<Void> deleteAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to delete.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions)
  id: deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: deleteAsync(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions)
  nameWithType: JobSchedules.deleteAsync(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job Schedule from the specified Account. When you delete a Job Schedule, this also deletes all Jobs and Tasks under that schedule. When Tasks are deleted, all the files in their working directories on the Compute Nodes are also deleted (the retention period is ignored). The Job Schedule statistics are no longer accessible once the Job Schedule is deleted, though they are still counted towards Account lifetime statistics.
  syntax:
    content: public abstract Observable<Void> deleteAsync(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to delete.
    - id: jobScheduleDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: deleteAsync(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.deleteAsync(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job Schedule from the specified Account. When you delete a Job Schedule, this also deletes all Jobs and Tasks under that schedule. When Tasks are deleted, all the files in their working directories on the Compute Nodes are also deleted (the retention period is ignored). The Job Schedule statistics are no longer accessible once the Job Schedule is deleted, though they are still counted towards Account lifetime statistics.
  syntax:
    content: public abstract ServiceFuture<Void> deleteAsync(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to delete.
    - id: jobScheduleDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: deleteAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.deleteAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job Schedule from the specified Account. When you delete a Job Schedule, this also deletes all Jobs and Tasks under that schedule. When Tasks are deleted, all the files in their working directories on the Compute Nodes are also deleted (the retention period is ignored). The Job Schedule statistics are no longer accessible once the Job Schedule is deleted, though they are still counted towards Account lifetime statistics.
  syntax:
    content: public abstract ServiceFuture<Void> deleteAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to delete.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.deleteWithServiceResponseAsync(java.lang.String)
  id: deleteWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: deleteWithServiceResponseAsync(String jobScheduleId)
  nameWithType: JobSchedules.deleteWithServiceResponseAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.deleteWithServiceResponseAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.deleteWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job Schedule from the specified Account. When you delete a Job Schedule, this also deletes all Jobs and Tasks under that schedule. When Tasks are deleted, all the files in their working directories on the Compute Nodes are also deleted (the retention period is ignored). The Job Schedule statistics are no longer accessible once the Job Schedule is deleted, though they are still counted towards Account lifetime statistics.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobScheduleDeleteHeaders>> deleteWithServiceResponseAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to delete.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.deleteWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions)
  id: deleteWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: deleteWithServiceResponseAsync(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions)
  nameWithType: JobSchedules.deleteWithServiceResponseAsync(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.deleteWithServiceResponseAsync(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.deleteWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job Schedule from the specified Account. When you delete a Job Schedule, this also deletes all Jobs and Tasks under that schedule. When Tasks are deleted, all the files in their working directories on the Compute Nodes are also deleted (the retention period is ignored). The Job Schedule statistics are no longer accessible once the Job Schedule is deleted, though they are still counted towards Account lifetime statistics.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobScheduleDeleteHeaders>> deleteWithServiceResponseAsync(String jobScheduleId, JobScheduleDeleteOptions jobScheduleDeleteOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to delete.
    - id: jobScheduleDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.disable(java.lang.String)
  id: disable(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: disable(String jobScheduleId)
  nameWithType: JobSchedules.disable(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.disable(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.disable*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables a Job Schedule. No new Jobs will be created until the Job Schedule is enabled again.
  syntax:
    content: public abstract void disable(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to disable.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.disable(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions)
  id: disable(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: disable(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions)
  nameWithType: JobSchedules.disable(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.disable(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.disable*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables a Job Schedule. No new Jobs will be created until the Job Schedule is enabled again.
  syntax:
    content: public abstract void disable(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to disable.
    - id: jobScheduleDisableOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync(java.lang.String)
  id: disableAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: disableAsync(String jobScheduleId)
  nameWithType: JobSchedules.disableAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables a Job Schedule. No new Jobs will be created until the Job Schedule is enabled again.
  syntax:
    content: public abstract Observable<Void> disableAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to disable.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions)
  id: disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: disableAsync(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions)
  nameWithType: JobSchedules.disableAsync(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables a Job Schedule. No new Jobs will be created until the Job Schedule is enabled again.
  syntax:
    content: public abstract Observable<Void> disableAsync(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to disable.
    - id: jobScheduleDisableOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: disableAsync(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.disableAsync(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables a Job Schedule. No new Jobs will be created until the Job Schedule is enabled again.
  syntax:
    content: public abstract ServiceFuture<Void> disableAsync(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to disable.
    - id: jobScheduleDisableOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: disableAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: disableAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.disableAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables a Job Schedule. No new Jobs will be created until the Job Schedule is enabled again.
  syntax:
    content: public abstract ServiceFuture<Void> disableAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to disable.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.disableWithServiceResponseAsync(java.lang.String)
  id: disableWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: disableWithServiceResponseAsync(String jobScheduleId)
  nameWithType: JobSchedules.disableWithServiceResponseAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.disableWithServiceResponseAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.disableWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables a Job Schedule. No new Jobs will be created until the Job Schedule is enabled again.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobScheduleDisableHeaders>> disableWithServiceResponseAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to disable.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleDisableHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.disableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions)
  id: disableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: disableWithServiceResponseAsync(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions)
  nameWithType: JobSchedules.disableWithServiceResponseAsync(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.disableWithServiceResponseAsync(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.disableWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables a Job Schedule. No new Jobs will be created until the Job Schedule is enabled again.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobScheduleDisableHeaders>> disableWithServiceResponseAsync(String jobScheduleId, JobScheduleDisableOptions jobScheduleDisableOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to disable.
    - id: jobScheduleDisableOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleDisableHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.enable(java.lang.String)
  id: enable(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: enable(String jobScheduleId)
  nameWithType: JobSchedules.enable(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.enable(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.enable*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables a Job Schedule.
  syntax:
    content: public abstract void enable(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to enable.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.enable(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions)
  id: enable(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: enable(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions)
  nameWithType: JobSchedules.enable(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.enable(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.enable*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables a Job Schedule.
  syntax:
    content: public abstract void enable(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to enable.
    - id: jobScheduleEnableOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync(java.lang.String)
  id: enableAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: enableAsync(String jobScheduleId)
  nameWithType: JobSchedules.enableAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables a Job Schedule.
  syntax:
    content: public abstract Observable<Void> enableAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to enable.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions)
  id: enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: enableAsync(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions)
  nameWithType: JobSchedules.enableAsync(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables a Job Schedule.
  syntax:
    content: public abstract Observable<Void> enableAsync(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to enable.
    - id: jobScheduleEnableOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: enableAsync(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.enableAsync(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables a Job Schedule.
  syntax:
    content: public abstract ServiceFuture<Void> enableAsync(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to enable.
    - id: jobScheduleEnableOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: enableAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: enableAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.enableAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables a Job Schedule.
  syntax:
    content: public abstract ServiceFuture<Void> enableAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to enable.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.enableWithServiceResponseAsync(java.lang.String)
  id: enableWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: enableWithServiceResponseAsync(String jobScheduleId)
  nameWithType: JobSchedules.enableWithServiceResponseAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.enableWithServiceResponseAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.enableWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables a Job Schedule.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobScheduleEnableHeaders>> enableWithServiceResponseAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to enable.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleEnableHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.enableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions)
  id: enableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: enableWithServiceResponseAsync(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions)
  nameWithType: JobSchedules.enableWithServiceResponseAsync(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.enableWithServiceResponseAsync(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.enableWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables a Job Schedule.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobScheduleEnableHeaders>> enableWithServiceResponseAsync(String jobScheduleId, JobScheduleEnableOptions jobScheduleEnableOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to enable.
    - id: jobScheduleEnableOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleEnableHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.exists(java.lang.String)
  id: exists(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: exists(String jobScheduleId)
  nameWithType: JobSchedules.exists(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.exists(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.exists*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Checks the specified Job Schedule exists.
  syntax:
    content: public abstract boolean exists(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule which you want to check.
    return:
      type: boolean
      description: the boolean object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.exists(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions)
  id: exists(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: exists(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)
  nameWithType: JobSchedules.exists(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.exists(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.exists*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Checks the specified Job Schedule exists.
  syntax:
    content: public abstract boolean exists(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule which you want to check.
    - id: jobScheduleExistsOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions
      description: Additional parameters for the operation
    return:
      type: boolean
      description: the boolean object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync(java.lang.String)
  id: existsAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: existsAsync(String jobScheduleId)
  nameWithType: JobSchedules.existsAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Checks the specified Job Schedule exists.
  syntax:
    content: public abstract Observable<Boolean> existsAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule which you want to check.
    return:
      type: rx.Observable<java.lang.Boolean>
      description: the observable to the boolean object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions)
  id: existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: existsAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)
  nameWithType: JobSchedules.existsAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Checks the specified Job Schedule exists.
  syntax:
    content: public abstract Observable<Boolean> existsAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule which you want to check.
    - id: jobScheduleExistsOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Boolean>
      description: the observable to the boolean object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)
  id: existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: existsAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions, ServiceCallback<Boolean> serviceCallback)
  nameWithType: JobSchedules.existsAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions, ServiceCallback<Boolean> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions, ServiceCallback<Boolean> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Checks the specified Job Schedule exists.
  syntax:
    content: public abstract ServiceFuture<Boolean> existsAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions, ServiceCallback<Boolean> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule which you want to check.
    - id: jobScheduleExistsOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Boolean>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Boolean>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)
  id: existsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: existsAsync(String jobScheduleId, ServiceCallback<Boolean> serviceCallback)
  nameWithType: JobSchedules.existsAsync(String jobScheduleId, ServiceCallback<Boolean> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync(String jobScheduleId, ServiceCallback<Boolean> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Checks the specified Job Schedule exists.
  syntax:
    content: public abstract ServiceFuture<Boolean> existsAsync(String jobScheduleId, ServiceCallback<Boolean> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule which you want to check.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Boolean>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Boolean>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync(java.lang.String)
  id: existsWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: existsWithServiceResponseAsync(String jobScheduleId)
  nameWithType: JobSchedules.existsWithServiceResponseAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Checks the specified Job Schedule exists.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Boolean,JobScheduleExistsHeaders>> existsWithServiceResponseAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule which you want to check.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Boolean,com.microsoft.azure.batch.protocol.models.JobScheduleExistsHeaders>>
      description: the observable to the boolean object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions)
  id: existsWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: existsWithServiceResponseAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)
  nameWithType: JobSchedules.existsWithServiceResponseAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Checks the specified Job Schedule exists.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Boolean,JobScheduleExistsHeaders>> existsWithServiceResponseAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule which you want to check.
    - id: jobScheduleExistsOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Boolean,com.microsoft.azure.batch.protocol.models.JobScheduleExistsHeaders>>
      description: the observable to the boolean object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.get(java.lang.String)
  id: get(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: get(String jobScheduleId)
  nameWithType: JobSchedules.get(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.get(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.get*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job Schedule.
  syntax:
    content: public abstract CloudJobSchedule get(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to get.
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
      description: the CloudJobSchedule object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.get(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions)
  id: get(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: get(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions)
  nameWithType: JobSchedules.get(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.get(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.get*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job Schedule.
  syntax:
    content: public abstract CloudJobSchedule get(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to get.
    - id: jobScheduleGetOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
      description: the CloudJobSchedule object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.getAsync(java.lang.String)
  id: getAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: getAsync(String jobScheduleId)
  nameWithType: JobSchedules.getAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.getAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job Schedule.
  syntax:
    content: public abstract Observable<CloudJobSchedule> getAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to get.
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the observable to the CloudJobSchedule object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions)
  id: getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: getAsync(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions)
  nameWithType: JobSchedules.getAsync(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.getAsync(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job Schedule.
  syntax:
    content: public abstract Observable<CloudJobSchedule> getAsync(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to get.
    - id: jobScheduleGetOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the observable to the CloudJobSchedule object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  id: getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: getAsync(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions, ServiceCallback<CloudJobSchedule> serviceCallback)
  nameWithType: JobSchedules.getAsync(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions, ServiceCallback<CloudJobSchedule> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.getAsync(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions, ServiceCallback<CloudJobSchedule> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job Schedule.
  syntax:
    content: public abstract ServiceFuture<CloudJobSchedule> getAsync(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions, ServiceCallback<CloudJobSchedule> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to get.
    - id: jobScheduleGetOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  id: getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: getAsync(String jobScheduleId, ServiceCallback<CloudJobSchedule> serviceCallback)
  nameWithType: JobSchedules.getAsync(String jobScheduleId, ServiceCallback<CloudJobSchedule> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.getAsync(String jobScheduleId, ServiceCallback<CloudJobSchedule> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job Schedule.
  syntax:
    content: public abstract ServiceFuture<CloudJobSchedule> getAsync(String jobScheduleId, ServiceCallback<CloudJobSchedule> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to get.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.getWithServiceResponseAsync(java.lang.String)
  id: getWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: getWithServiceResponseAsync(String jobScheduleId)
  nameWithType: JobSchedules.getWithServiceResponseAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.getWithServiceResponseAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.getWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job Schedule.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<CloudJobSchedule,JobScheduleGetHeaders>> getWithServiceResponseAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to get.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.CloudJobSchedule,com.microsoft.azure.batch.protocol.models.JobScheduleGetHeaders>>
      description: the observable to the CloudJobSchedule object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.getWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions)
  id: getWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: getWithServiceResponseAsync(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions)
  nameWithType: JobSchedules.getWithServiceResponseAsync(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.getWithServiceResponseAsync(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.getWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job Schedule.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<CloudJobSchedule,JobScheduleGetHeaders>> getWithServiceResponseAsync(String jobScheduleId, JobScheduleGetOptions jobScheduleGetOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to get.
    - id: jobScheduleGetOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.CloudJobSchedule,com.microsoft.azure.batch.protocol.models.JobScheduleGetHeaders>>
      description: the observable to the CloudJobSchedule object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.list()
  id: list()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: list()
  nameWithType: JobSchedules.list()
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.list()
  overload: com.microsoft.azure.batch.protocol.JobSchedules.list*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract PagedList<CloudJobSchedule> list()
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the PagedList&lt;CloudJobSchedule&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.list(com.microsoft.azure.batch.protocol.models.JobScheduleListOptions)
  id: list(com.microsoft.azure.batch.protocol.models.JobScheduleListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: list(JobScheduleListOptions jobScheduleListOptions)
  nameWithType: JobSchedules.list(JobScheduleListOptions jobScheduleListOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.list(JobScheduleListOptions jobScheduleListOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.list*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract PagedList<CloudJobSchedule> list(JobScheduleListOptions jobScheduleListOptions)
    parameters:
    - id: jobScheduleListOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleListOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the PagedList&lt;CloudJobSchedule&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listAsync()
  id: listAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listAsync()
  nameWithType: JobSchedules.listAsync()
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listAsync()
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract Observable<Page<CloudJobSchedule>> listAsync()
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>
      description: the observable to the PagedList&lt;CloudJobSchedule&gt; object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  id: listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listAsync(ListOperationCallback<CloudJobSchedule> serviceCallback)
  nameWithType: JobSchedules.listAsync(ListOperationCallback<CloudJobSchedule> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listAsync(ListOperationCallback<CloudJobSchedule> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<CloudJobSchedule>> listAsync(ListOperationCallback<CloudJobSchedule> serviceCallback)
    parameters:
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listAsync(com.microsoft.azure.batch.protocol.models.JobScheduleListOptions)
  id: listAsync(com.microsoft.azure.batch.protocol.models.JobScheduleListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listAsync(JobScheduleListOptions jobScheduleListOptions)
  nameWithType: JobSchedules.listAsync(JobScheduleListOptions jobScheduleListOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listAsync(JobScheduleListOptions jobScheduleListOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract Observable<Page<CloudJobSchedule>> listAsync(JobScheduleListOptions jobScheduleListOptions)
    parameters:
    - id: jobScheduleListOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleListOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>
      description: the observable to the PagedList&lt;CloudJobSchedule&gt; object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listAsync(com.microsoft.azure.batch.protocol.models.JobScheduleListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  id: listAsync(com.microsoft.azure.batch.protocol.models.JobScheduleListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listAsync(JobScheduleListOptions jobScheduleListOptions, ListOperationCallback<CloudJobSchedule> serviceCallback)
  nameWithType: JobSchedules.listAsync(JobScheduleListOptions jobScheduleListOptions, ListOperationCallback<CloudJobSchedule> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listAsync(JobScheduleListOptions jobScheduleListOptions, ListOperationCallback<CloudJobSchedule> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<CloudJobSchedule>> listAsync(JobScheduleListOptions jobScheduleListOptions, ListOperationCallback<CloudJobSchedule> serviceCallback)
    parameters:
    - id: jobScheduleListOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleListOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listNext(java.lang.String)
  id: listNext(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listNext(String nextPageLink)
  nameWithType: JobSchedules.listNext(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listNext(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract PagedList<CloudJobSchedule> listNext(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the PagedList&lt;CloudJobSchedule&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions)
  id: listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listNext(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions)
  nameWithType: JobSchedules.listNext(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listNext(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract PagedList<CloudJobSchedule> listNext(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobScheduleListNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the PagedList&lt;CloudJobSchedule&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync(java.lang.String)
  id: listNextAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listNextAsync(String nextPageLink)
  nameWithType: JobSchedules.listNextAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract Observable<Page<CloudJobSchedule>> listNextAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>
      description: the observable to the PagedList&lt;CloudJobSchedule&gt; object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions)
  id: listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listNextAsync(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions)
  nameWithType: JobSchedules.listNextAsync(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract Observable<Page<CloudJobSchedule>> listNextAsync(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobScheduleListNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>
      description: the observable to the PagedList&lt;CloudJobSchedule&gt; object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  id: listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listNextAsync(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions, ServiceFuture<List<CloudJobSchedule>> serviceFuture, ListOperationCallback<CloudJobSchedule> serviceCallback)
  nameWithType: JobSchedules.listNextAsync(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions, ServiceFuture<List<CloudJobSchedule>> serviceFuture, ListOperationCallback<CloudJobSchedule> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions, ServiceFuture<List<CloudJobSchedule>> serviceFuture, ListOperationCallback<CloudJobSchedule> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<CloudJobSchedule>> listNextAsync(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions, ServiceFuture<List<CloudJobSchedule>> serviceFuture, ListOperationCallback<CloudJobSchedule> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobScheduleListNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions
      description: Additional parameters for the operation
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  id: listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listNextAsync(String nextPageLink, ServiceFuture<List<CloudJobSchedule>> serviceFuture, ListOperationCallback<CloudJobSchedule> serviceCallback)
  nameWithType: JobSchedules.listNextAsync(String nextPageLink, ServiceFuture<List<CloudJobSchedule>> serviceFuture, ListOperationCallback<CloudJobSchedule> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync(String nextPageLink, ServiceFuture<List<CloudJobSchedule>> serviceFuture, ListOperationCallback<CloudJobSchedule> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<CloudJobSchedule>> listNextAsync(String nextPageLink, ServiceFuture<List<CloudJobSchedule>> serviceFuture, ListOperationCallback<CloudJobSchedule> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listNextWithServiceResponseAsync(java.lang.String)
  id: listNextWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listNextWithServiceResponseAsync(String nextPageLink)
  nameWithType: JobSchedules.listNextWithServiceResponseAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listNextWithServiceResponseAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudJobSchedule>,JobScheduleListHeaders>> listNextWithServiceResponseAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>,com.microsoft.azure.batch.protocol.models.JobScheduleListHeaders>>
      description: the observable to the PagedList&lt;CloudJobSchedule&gt; object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions)
  id: listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listNextWithServiceResponseAsync(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions)
  nameWithType: JobSchedules.listNextWithServiceResponseAsync(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listNextWithServiceResponseAsync(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudJobSchedule>,JobScheduleListHeaders>> listNextWithServiceResponseAsync(String nextPageLink, JobScheduleListNextOptions jobScheduleListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobScheduleListNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>,com.microsoft.azure.batch.protocol.models.JobScheduleListHeaders>>
      description: the observable to the PagedList&lt;CloudJobSchedule&gt; object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listWithServiceResponseAsync()
  id: listWithServiceResponseAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listWithServiceResponseAsync()
  nameWithType: JobSchedules.listWithServiceResponseAsync()
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudJobSchedule>,JobScheduleListHeaders>> listWithServiceResponseAsync()
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>,com.microsoft.azure.batch.protocol.models.JobScheduleListHeaders>>
      description: the observable to the PagedList&lt;CloudJobSchedule&gt; object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobScheduleListOptions)
  id: listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobScheduleListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: listWithServiceResponseAsync(JobScheduleListOptions jobScheduleListOptions)
  nameWithType: JobSchedules.listWithServiceResponseAsync(JobScheduleListOptions jobScheduleListOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listWithServiceResponseAsync(JobScheduleListOptions jobScheduleListOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.listWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Job Schedules in the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudJobSchedule>,JobScheduleListHeaders>> listWithServiceResponseAsync(JobScheduleListOptions jobScheduleListOptions)
    parameters:
    - id: jobScheduleListOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleListOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>,com.microsoft.azure.batch.protocol.models.JobScheduleListHeaders>>
      description: the observable to the PagedList&lt;CloudJobSchedule&gt; object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter)
  id: patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: patch(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter)
  nameWithType: JobSchedules.patch(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.patch(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.patch*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This replaces only the Job Schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract void patch(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobSchedulePatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter
      description: The parameters for the request.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions)
  id: patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: patch(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions)
  nameWithType: JobSchedules.patch(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.patch(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.patch*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This replaces only the Job Schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract void patch(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobSchedulePatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter
      description: The parameters for the request.
    - id: jobSchedulePatchOptions
      type: com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter)
  id: patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter)
  nameWithType: JobSchedules.patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This replaces only the Job Schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract Observable<Void> patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobSchedulePatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions)
  id: patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions)
  nameWithType: JobSchedules.patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This replaces only the Job Schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract Observable<Void> patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobSchedulePatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter
      description: The parameters for the request.
    - id: jobSchedulePatchOptions
      type: com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This replaces only the Job Schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract ServiceFuture<Void> patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobSchedulePatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter
      description: The parameters for the request.
    - id: jobSchedulePatchOptions
      type: com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This replaces only the Job Schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract ServiceFuture<Void> patchAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobSchedulePatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter
      description: The parameters for the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter)
  id: patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: patchWithServiceResponseAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter)
  nameWithType: JobSchedules.patchWithServiceResponseAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.patchWithServiceResponseAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.patchWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This replaces only the Job Schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobSchedulePatchHeaders>> patchWithServiceResponseAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobSchedulePatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobSchedulePatchHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions)
  id: patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter,com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: patchWithServiceResponseAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions)
  nameWithType: JobSchedules.patchWithServiceResponseAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.patchWithServiceResponseAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.patchWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This replaces only the Job Schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobSchedulePatchHeaders>> patchWithServiceResponseAsync(String jobScheduleId, JobSchedulePatchParameter jobSchedulePatchParameter, JobSchedulePatchOptions jobSchedulePatchOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobSchedulePatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter
      description: The parameters for the request.
    - id: jobSchedulePatchOptions
      type: com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobSchedulePatchHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.terminate(java.lang.String)
  id: terminate(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: terminate(String jobScheduleId)
  nameWithType: JobSchedules.terminate(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminate(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.terminate*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates a Job Schedule.
  syntax:
    content: public abstract void terminate(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to terminates.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.terminate(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions)
  id: terminate(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: terminate(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  nameWithType: JobSchedules.terminate(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminate(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.terminate*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates a Job Schedule.
  syntax:
    content: public abstract void terminate(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to terminates.
    - id: jobScheduleTerminateOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync(java.lang.String)
  id: terminateAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: terminateAsync(String jobScheduleId)
  nameWithType: JobSchedules.terminateAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates a Job Schedule.
  syntax:
    content: public abstract Observable<Void> terminateAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to terminates.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions)
  id: terminateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: terminateAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  nameWithType: JobSchedules.terminateAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates a Job Schedule.
  syntax:
    content: public abstract Observable<Void> terminateAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to terminates.
    - id: jobScheduleTerminateOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: terminateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: terminateAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.terminateAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates a Job Schedule.
  syntax:
    content: public abstract ServiceFuture<Void> terminateAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to terminates.
    - id: jobScheduleTerminateOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: terminateAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: terminateAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.terminateAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates a Job Schedule.
  syntax:
    content: public abstract ServiceFuture<Void> terminateAsync(String jobScheduleId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to terminates.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync(java.lang.String)
  id: terminateWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: terminateWithServiceResponseAsync(String jobScheduleId)
  nameWithType: JobSchedules.terminateWithServiceResponseAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates a Job Schedule.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobScheduleTerminateHeaders>> terminateWithServiceResponseAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to terminates.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions)
  id: terminateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: terminateWithServiceResponseAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  nameWithType: JobSchedules.terminateWithServiceResponseAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates a Job Schedule.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobScheduleTerminateHeaders>> terminateWithServiceResponseAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to terminates.
    - id: jobScheduleTerminateOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter)
  id: update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: update(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  nameWithType: JobSchedules.update(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.update(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.update*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This fully replaces all the updatable properties of the Job Schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract void update(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobScheduleUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter
      description: The parameters for the request.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions)
  id: update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: update(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  nameWithType: JobSchedules.update(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.update(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.update*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This fully replaces all the updatable properties of the Job Schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract void update(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobScheduleUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter
      description: The parameters for the request.
    - id: jobScheduleUpdateOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter)
  id: updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  nameWithType: JobSchedules.updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This fully replaces all the updatable properties of the Job Schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract Observable<Void> updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobScheduleUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions)
  id: updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  nameWithType: JobSchedules.updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This fully replaces all the updatable properties of the Job Schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract Observable<Void> updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobScheduleUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter
      description: The parameters for the request.
    - id: jobScheduleUpdateOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This fully replaces all the updatable properties of the Job Schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract ServiceFuture<Void> updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobScheduleUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter
      description: The parameters for the request.
    - id: jobScheduleUpdateOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This fully replaces all the updatable properties of the Job Schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract ServiceFuture<Void> updateAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobScheduleUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter
      description: The parameters for the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter)
  id: updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  nameWithType: JobSchedules.updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This fully replaces all the updatable properties of the Job Schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobScheduleUpdateHeaders>> updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobScheduleUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions)
  id: updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.JobSchedules
  langs:
  - java
  name: updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  nameWithType: JobSchedules.updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  overload: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job Schedule. This fully replaces all the updatable properties of the Job Schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobScheduleUpdateHeaders>> updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule to update.
    - id: jobScheduleUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter
      description: The parameters for the request.
    - id: jobScheduleUpdateOptions
      type: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.batch.protocol.JobSchedules.exists*
  name: exists
  nameWithType: JobSchedules.exists
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.exists
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<java.lang.Boolean>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.lang.Boolean>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync*
  name: existsAsync
  nameWithType: JobSchedules.existsAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.existsAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<java.lang.Boolean>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Boolean,com.microsoft.azure.batch.protocol.models.JobScheduleExistsHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobScheduleExistsHeaders
    name: JobScheduleExistsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobScheduleExistsHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync*
  name: existsWithServiceResponseAsync
  nameWithType: JobSchedules.existsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions
  name: JobScheduleExistsOptions
  nameWithType: JobScheduleExistsOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions
- uid: com.microsoft.azure.batch.protocol.JobSchedules.delete*
  name: delete
  nameWithType: JobSchedules.delete
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.delete
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync*
  name: deleteAsync
  nameWithType: JobSchedules.deleteAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.deleteAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<java.lang.Void>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobScheduleDeleteHeaders
    name: JobScheduleDeleteHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobScheduleDeleteHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.deleteWithServiceResponseAsync*
  name: deleteWithServiceResponseAsync
  nameWithType: JobSchedules.deleteWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.deleteWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions
  name: JobScheduleDeleteOptions
  nameWithType: JobScheduleDeleteOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobScheduleDeleteOptions
- uid: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
  name: CloudJobSchedule
  nameWithType: CloudJobSchedule
  fullName: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
- uid: com.microsoft.azure.batch.protocol.JobSchedules.get*
  name: get
  nameWithType: JobSchedules.get
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.get
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
    name: CloudJobSchedule
    fullName: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
    name: CloudJobSchedule
    fullName: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.getAsync*
  name: getAsync
  nameWithType: JobSchedules.getAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.getAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
    name: CloudJobSchedule
    fullName: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.CloudJobSchedule,com.microsoft.azure.batch.protocol.models.JobScheduleGetHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
    name: CloudJobSchedule
    fullName: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobScheduleGetHeaders
    name: JobScheduleGetHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobScheduleGetHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: JobSchedules.getWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.getWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions
  name: JobScheduleGetOptions
  nameWithType: JobScheduleGetOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobScheduleGetOptions
- uid: com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter
  name: JobSchedulePatchParameter
  nameWithType: JobSchedulePatchParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobSchedulePatchParameter
- uid: com.microsoft.azure.batch.protocol.JobSchedules.patch*
  name: patch
  nameWithType: JobSchedules.patch
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.patch
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync*
  name: patchAsync
  nameWithType: JobSchedules.patchAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.patchAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobSchedulePatchHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobSchedulePatchHeaders
    name: JobSchedulePatchHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobSchedulePatchHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.patchWithServiceResponseAsync*
  name: patchWithServiceResponseAsync
  nameWithType: JobSchedules.patchWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.patchWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions
  name: JobSchedulePatchOptions
  nameWithType: JobSchedulePatchOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobSchedulePatchOptions
- uid: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter
  name: JobScheduleUpdateParameter
  nameWithType: JobScheduleUpdateParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter
- uid: com.microsoft.azure.batch.protocol.JobSchedules.update*
  name: update
  nameWithType: JobSchedules.update
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.update
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync*
  name: updateAsync
  nameWithType: JobSchedules.updateAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.updateAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateHeaders
    name: JobScheduleUpdateHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync*
  name: updateWithServiceResponseAsync
  nameWithType: JobSchedules.updateWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions
  name: JobScheduleUpdateOptions
  nameWithType: JobScheduleUpdateOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions
- uid: com.microsoft.azure.batch.protocol.JobSchedules.disable*
  name: disable
  nameWithType: JobSchedules.disable
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.disable
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync*
  name: disableAsync
  nameWithType: JobSchedules.disableAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.disableAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleDisableHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobScheduleDisableHeaders
    name: JobScheduleDisableHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobScheduleDisableHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.disableWithServiceResponseAsync*
  name: disableWithServiceResponseAsync
  nameWithType: JobSchedules.disableWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.disableWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions
  name: JobScheduleDisableOptions
  nameWithType: JobScheduleDisableOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobScheduleDisableOptions
- uid: com.microsoft.azure.batch.protocol.JobSchedules.enable*
  name: enable
  nameWithType: JobSchedules.enable
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.enable
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync*
  name: enableAsync
  nameWithType: JobSchedules.enableAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.enableAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleEnableHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobScheduleEnableHeaders
    name: JobScheduleEnableHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobScheduleEnableHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.enableWithServiceResponseAsync*
  name: enableWithServiceResponseAsync
  nameWithType: JobSchedules.enableWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.enableWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions
  name: JobScheduleEnableOptions
  nameWithType: JobScheduleEnableOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobScheduleEnableOptions
- uid: com.microsoft.azure.batch.protocol.JobSchedules.terminate*
  name: terminate
  nameWithType: JobSchedules.terminate
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminate
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync*
  name: terminateAsync
  nameWithType: JobSchedules.terminateAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminateAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobScheduleTerminateHeaders
    name: JobScheduleTerminateHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobScheduleTerminateHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync*
  name: terminateWithServiceResponseAsync
  nameWithType: JobSchedules.terminateWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions
  name: JobScheduleTerminateOptions
  nameWithType: JobScheduleTerminateOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions
- uid: com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter
  name: JobScheduleAddParameter
  nameWithType: JobScheduleAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter
- uid: com.microsoft.azure.batch.protocol.JobSchedules.add*
  name: add
  nameWithType: JobSchedules.add
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.add
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.JobSchedules.addAsync*
  name: addAsync
  nameWithType: JobSchedules.addAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.addAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleAddHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobScheduleAddHeaders
    name: JobScheduleAddHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobScheduleAddHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.addWithServiceResponseAsync*
  name: addWithServiceResponseAsync
  nameWithType: JobSchedules.addWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.addWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions
  name: JobScheduleAddOptions
  nameWithType: JobScheduleAddOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
    name: CloudJobSchedule
    fullName: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.list*
  name: list
  nameWithType: JobSchedules.list
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.list
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>
  spec.java:
  - uid: com.microsoft.azure.ListOperationCallback
    name: ListOperationCallback
    fullName: com.microsoft.azure.ListOperationCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
    name: CloudJobSchedule
    fullName: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
    name: CloudJobSchedule
    fullName: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listAsync*
  name: listAsync
  nameWithType: JobSchedules.listAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
    name: CloudJobSchedule
    fullName: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJobSchedule>,com.microsoft.azure.batch.protocol.models.JobScheduleListHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
    name: CloudJobSchedule
    fullName: com.microsoft.azure.batch.protocol.models.CloudJobSchedule
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobScheduleListHeaders
    name: JobScheduleListHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobScheduleListHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listWithServiceResponseAsync*
  name: listWithServiceResponseAsync
  nameWithType: JobSchedules.listWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobScheduleListOptions
  name: JobScheduleListOptions
  nameWithType: JobScheduleListOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobScheduleListOptions
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listNext*
  name: listNext
  nameWithType: JobSchedules.listNext
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listNext
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync*
  name: listNextAsync
  nameWithType: JobSchedules.listNextAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.JobSchedules.listNextWithServiceResponseAsync*
  name: listNextWithServiceResponseAsync
  nameWithType: JobSchedules.listNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.JobSchedules.listNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions
  name: JobScheduleListNextOptions
  nameWithType: JobScheduleListNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobScheduleListNextOptions
- uid: com.microsoft.rest.ServiceCallback
  name: ServiceCallback
  nameWithType: ServiceCallback
  fullName: com.microsoft.rest.ServiceCallback
- uid: java.lang.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: java.lang.Boolean
- uid: com.microsoft.rest.ServiceFuture
  name: ServiceFuture
  nameWithType: ServiceFuture
  fullName: com.microsoft.rest.ServiceFuture
- uid: rx.Observable
  name: Observable
  nameWithType: Observable
  fullName: rx.Observable
- uid: com.microsoft.rest.ServiceResponseWithHeaders
  name: ServiceResponseWithHeaders
  nameWithType: ServiceResponseWithHeaders
  fullName: com.microsoft.rest.ServiceResponseWithHeaders
- uid: java.lang.Boolean,com.microsoft.azure.batch.protocol.models.JobScheduleExistsHeaders
  name: Boolean,JobScheduleExistsHeaders
  nameWithType: Boolean,JobScheduleExistsHeaders
  fullName: java.lang.Boolean,com.microsoft.azure.batch.protocol.models.JobScheduleExistsHeaders
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteHeaders
  name: Void,JobScheduleDeleteHeaders
  nameWithType: Void,JobScheduleDeleteHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleDeleteHeaders
- uid: com.microsoft.azure.batch.protocol.models.CloudJobSchedule,com.microsoft.azure.batch.protocol.models.JobScheduleGetHeaders
  name: CloudJobSchedule,JobScheduleGetHeaders
  nameWithType: CloudJobSchedule,JobScheduleGetHeaders
  fullName: com.microsoft.azure.batch.protocol.models.CloudJobSchedule,com.microsoft.azure.batch.protocol.models.JobScheduleGetHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobSchedulePatchHeaders
  name: Void,JobSchedulePatchHeaders
  nameWithType: Void,JobSchedulePatchHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobSchedulePatchHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateHeaders
  name: Void,JobScheduleUpdateHeaders
  nameWithType: Void,JobScheduleUpdateHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleUpdateHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleDisableHeaders
  name: Void,JobScheduleDisableHeaders
  nameWithType: Void,JobScheduleDisableHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleDisableHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleEnableHeaders
  name: Void,JobScheduleEnableHeaders
  nameWithType: Void,JobScheduleEnableHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleEnableHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateHeaders
  name: Void,JobScheduleTerminateHeaders
  nameWithType: Void,JobScheduleTerminateHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleTerminateHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleAddHeaders
  name: Void,JobScheduleAddHeaders
  nameWithType: Void,JobScheduleAddHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobScheduleAddHeaders
- uid: com.microsoft.azure.PagedList
  name: PagedList
  nameWithType: PagedList
  fullName: com.microsoft.azure.PagedList
- uid: com.microsoft.azure.ListOperationCallback
  name: ListOperationCallback
  nameWithType: ListOperationCallback
  fullName: com.microsoft.azure.ListOperationCallback
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.Page
  name: Page
  nameWithType: Page
  fullName: com.microsoft.azure.Page
- uid: com.microsoft.azure.batch.protocol.models.CloudJobSchedule>,com.microsoft.azure.batch.protocol.models.JobScheduleListHeaders
  name: CloudJobSchedule>,JobScheduleListHeaders
  nameWithType: CloudJobSchedule>,JobScheduleListHeaders
  fullName: com.microsoft.azure.batch.protocol.models.CloudJobSchedule>,com.microsoft.azure.batch.protocol.models.JobScheduleListHeaders
