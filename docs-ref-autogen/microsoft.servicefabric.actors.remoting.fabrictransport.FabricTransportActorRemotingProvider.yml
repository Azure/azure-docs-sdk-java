### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="ActorRemotingProvider" data-throw-if-not-resolved="False"/>
methods:
- microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
- microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingListener(FabricActorService)
- microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getConnectTimeoutInMilliseconds()
- microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getKeepAliveTimeoutInSeconds()
- microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getMaxMessageSize()
- microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getOperationTimeoutInSeconds()
- microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setConnectTimeoutInMilliseconds(long)
- microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds(long)
- microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setMaxMessageSize(long)
- microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setOperationTimeoutInSeconds(long)
nameWithType: FabricTransportActorRemotingProvider
syntax: public class FabricTransportActorRemotingProvider
type: class
uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
name: FabricTransportActorRemotingProvider
package: microsoft.servicefabric.actors.remoting.fabrictransport
summary: <p>Sets fabric TCP transport as the default remoting provider for the actors. </p>
metadata: {}
