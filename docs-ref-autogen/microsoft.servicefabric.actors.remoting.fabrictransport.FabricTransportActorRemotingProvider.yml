### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
  id: FabricTransportActorRemotingProvider
  parent: microsoft.servicefabric.actors.remoting.fabrictransport
  children:
  - microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
  - microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingListener(FabricActorService)
  - microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getConnectTimeoutInMilliseconds()
  - microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getKeepAliveTimeoutInSeconds()
  - microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getMaxMessageSize()
  - microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getOperationTimeoutInSeconds()
  - microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setConnectTimeoutInMilliseconds(long)
  - microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds(long)
  - microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setMaxMessageSize(long)
  - microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setOperationTimeoutInSeconds(long)
  href: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.yml
  langs:
  - java
  name: FabricTransportActorRemotingProvider
  nameWithType: FabricTransportActorRemotingProvider
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/FabricTransportActorRemotingProvider.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/FabricTransportActorRemotingProvider.java
    startLine: 18
  package: microsoft.servicefabric.actors.remoting.fabrictransport
  summary: "<p>Sets fabric TCP transport as the default remoting provider for the actors. </p>"
  syntax:
    content: public class FabricTransportActorRemotingProvider
  inheritance:
  - java.lang.Object
  - ActorRemotingProvider
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
  id: createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
  href: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.yml
  langs:
  - java
  name: createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  nameWithType: FabricTransportActorRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  overload: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingClientFactory*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/FabricTransportActorRemotingProvider.java
    startLine: 57
  package: microsoft.servicefabric.actors.remoting.fabrictransport
  summary: "<p>Creates a service remoting client factory to connect to the remoted actor interfaces. </p>"
  syntax:
    content: public ServiceRemotingClientFactory createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
    parameters:
    - id: callbackClient
      type: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
      description: <p>Client implementation where the callbacks should be dispatched. </p>
    return:
      type: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
      description: <p>A <xref uid="microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory"></xref> as <xref uid="microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory"></xref> that can be used with <xref uid="microsoft.servicefabric.actors.client.ActorProxyFactory" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.client.ActorProxyFactory"></xref> to generate actor proxy to talk to the actor over remoted actor interface. </p>
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingListener(FabricActorService)
  id: createServiceRemotingListener(FabricActorService)
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
  href: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.yml
  langs:
  - java
  name: createServiceRemotingListener(FabricActorService actorService)
  nameWithType: FabricTransportActorRemotingProvider.createServiceRemotingListener(FabricActorService actorService)
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingListener(FabricActorService actorService)
  overload: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingListener*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/FabricTransportActorRemotingProvider.java
    startLine: 35
  package: microsoft.servicefabric.actors.remoting.fabrictransport
  summary: "<p>Creates a service remoting listener for remoting the actor interfaces. </p>"
  syntax:
    content: public ServiceRemotingListener createServiceRemotingListener(FabricActorService actorService)
    parameters:
    - id: actorService
      type: microsoft.servicefabric.actors.runtime.FabricActorService
      description: <p>The implementation of the actor service that hosts the actors whose interfaces needs to be remoted. </p>
    return:
      type: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
      description: <p>A <xref uid="microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener"></xref> as <xref uid="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener"></xref> for the specified actor service. </p>
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getConnectTimeoutInMilliseconds()
  id: getConnectTimeoutInMilliseconds()
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
  href: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.yml
  langs:
  - java
  name: getConnectTimeoutInMilliseconds()
  nameWithType: FabricTransportActorRemotingProvider.getConnectTimeoutInMilliseconds()
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getConnectTimeoutInMilliseconds()
  overload: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getConnectTimeoutInMilliseconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/FabricTransportActorRemotingProvider.java
    startLine: 143
  package: microsoft.servicefabric.actors.remoting.fabrictransport
  summary: "<p>Gets the connect timeout in milliseconds. This settings specifies the maximum time allowed for the connection to be established. </p>"
  syntax:
    content: public long getConnectTimeoutInMilliseconds()
    return:
      type: 0364520f
      description: <p>The connect timeout in Milliseconds. </p>
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getKeepAliveTimeoutInSeconds()
  id: getKeepAliveTimeoutInSeconds()
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
  href: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.yml
  langs:
  - java
  name: getKeepAliveTimeoutInSeconds()
  nameWithType: FabricTransportActorRemotingProvider.getKeepAliveTimeoutInSeconds()
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getKeepAliveTimeoutInSeconds()
  overload: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getKeepAliveTimeoutInSeconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/FabricTransportActorRemotingProvider.java
    startLine: 97
  package: microsoft.servicefabric.actors.remoting.fabrictransport
  summary: "<p>Gets the keep alive timeout in seconds. This settings is useful in the scenario when the client and service are connected via load balancer that closes the connection if it is idle for some time. If keep alive timeout is configured, the connection will be kept alive by sending ping messages at that interval. </p>"
  syntax:
    content: public long getKeepAliveTimeoutInSeconds()
    return:
      type: 0364520f
      description: <p>The keep alive timeout in seconds. </p>
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getMaxMessageSize()
  id: getMaxMessageSize()
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
  href: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.yml
  langs:
  - java
  name: getMaxMessageSize()
  nameWithType: FabricTransportActorRemotingProvider.getMaxMessageSize()
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getMaxMessageSize()
  overload: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getMaxMessageSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/FabricTransportActorRemotingProvider.java
    startLine: 73
  package: microsoft.servicefabric.actors.remoting.fabrictransport
  summary: "<p>Gets the maximum size of the remoting message in bytes. </p>"
  syntax:
    content: public long getMaxMessageSize()
    return:
      type: 0364520f
      description: <p>The maximum size of the remoting message in bytes. </p>
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getOperationTimeoutInSeconds()
  id: getOperationTimeoutInSeconds()
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
  href: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.yml
  langs:
  - java
  name: getOperationTimeoutInSeconds()
  nameWithType: FabricTransportActorRemotingProvider.getOperationTimeoutInSeconds()
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getOperationTimeoutInSeconds()
  overload: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getOperationTimeoutInSeconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/FabricTransportActorRemotingProvider.java
    startLine: 85
  package: microsoft.servicefabric.actors.remoting.fabrictransport
  summary: "<p>Sets the operation timeout in seconds. If the operation is not completed in the specified time, it will be timed out. By default, exception handler of FabricTransportServiceRemotingClientFactory retries the timed out exception. It is recommended to not change the operation timeout from it's default value. </p>"
  syntax:
    content: public long getOperationTimeoutInSeconds()
    return:
      type: 0364520f
      description: <p>The operation timeout in seconds. If not specified or less than zero, default operation timeout of maximum value is used. </p>
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setConnectTimeoutInMilliseconds(long)
  id: setConnectTimeoutInMilliseconds(long)
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
  href: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.yml
  langs:
  - java
  name: setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  nameWithType: FabricTransportActorRemotingProvider.setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  overload: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setConnectTimeoutInMilliseconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/FabricTransportActorRemotingProvider.java
    startLine: 153
  package: microsoft.servicefabric.actors.remoting.fabrictransport
  summary: "<p>Sets the connect timeout in milliseconds. This settings specifies the maximum time allowed for the connection to be established. </p>"
  syntax:
    content: public void setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
    parameters:
    - id: connectTimeoutInMilliseconds
      type: 0364520f
      description: <p>The connect timeout in Milliseconds. </p>
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds(long)
  id: setKeepAliveTimeoutInSeconds(long)
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
  href: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.yml
  langs:
  - java
  name: setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  nameWithType: FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  overload: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/FabricTransportActorRemotingProvider.java
    startLine: 133
  package: microsoft.servicefabric.actors.remoting.fabrictransport
  summary: "<p>Sets the keep alive timeout in seconds. This settings is useful in the scenario when the client and service are connected via load balancer that closes the connection if it is idle for some time. If keep alive timeout is configured, the connection will be kept alive by sending ping messages at that interval. </p>"
  syntax:
    content: public void setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
    parameters:
    - id: keepAliveTimeoutInSeconds
      type: 0364520f
      description: <p>The keep alive timeout in seconds. </p>
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setMaxMessageSize(long)
  id: setMaxMessageSize(long)
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
  href: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.yml
  langs:
  - java
  name: setMaxMessageSize(long maxMessageSize)
  nameWithType: FabricTransportActorRemotingProvider.setMaxMessageSize(long maxMessageSize)
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setMaxMessageSize(long maxMessageSize)
  overload: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setMaxMessageSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/FabricTransportActorRemotingProvider.java
    startLine: 109
  package: microsoft.servicefabric.actors.remoting.fabrictransport
  summary: "<p>Sets the maximum size of the remoting message in bytes. If value for this property is not specified or it is less than or equals to zero, a default value of 4,194,304 bytes (4 MB) is used. </p>"
  syntax:
    content: public void setMaxMessageSize(long maxMessageSize)
    parameters:
    - id: maxMessageSize
      type: 0364520f
      description: <p>The maximum size of the remoting message in bytes. If this value is not specified or it is less than or equals to zero, a default value of 4,194,304 bytes (4 MB) is used. </p>
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setOperationTimeoutInSeconds(long)
  id: setOperationTimeoutInSeconds(long)
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
  href: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.yml
  langs:
  - java
  name: setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  nameWithType: FabricTransportActorRemotingProvider.setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  overload: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setOperationTimeoutInSeconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/FabricTransportActorRemotingProvider.java
    startLine: 121
  package: microsoft.servicefabric.actors.remoting.fabrictransport
  summary: "<p>Sets the operation timeout in seconds. If the operation is not completed in the specified time, it will be timed out. By default, exception handler of FabricTransportServiceRemotingClientFactory retries the timed out exception. It is recommended to not change the operation timeout from it's default value. </p>"
  syntax:
    content: public void setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
    parameters:
    - id: operationTimeoutInSeconds
      type: 0364520f
      description: <p>The operation timeout in seconds. If not specified or less than zero, default operation timeout of maximum value is used. </p>
references:
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingListener*
  name: createServiceRemotingListener
  nameWithType: FabricTransportActorRemotingProvider.createServiceRemotingListener
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingListener
  package: microsoft.servicefabric.actors.remoting.fabrictransport
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingClientFactory*
  name: createServiceRemotingClientFactory
  nameWithType: FabricTransportActorRemotingProvider.createServiceRemotingClientFactory
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingClientFactory
  package: microsoft.servicefabric.actors.remoting.fabrictransport
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getMaxMessageSize*
  name: getMaxMessageSize
  nameWithType: FabricTransportActorRemotingProvider.getMaxMessageSize
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getMaxMessageSize
  package: microsoft.servicefabric.actors.remoting.fabrictransport
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getOperationTimeoutInSeconds*
  name: getOperationTimeoutInSeconds
  nameWithType: FabricTransportActorRemotingProvider.getOperationTimeoutInSeconds
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getOperationTimeoutInSeconds
  package: microsoft.servicefabric.actors.remoting.fabrictransport
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getKeepAliveTimeoutInSeconds*
  name: getKeepAliveTimeoutInSeconds
  nameWithType: FabricTransportActorRemotingProvider.getKeepAliveTimeoutInSeconds
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getKeepAliveTimeoutInSeconds
  package: microsoft.servicefabric.actors.remoting.fabrictransport
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setMaxMessageSize*
  name: setMaxMessageSize
  nameWithType: FabricTransportActorRemotingProvider.setMaxMessageSize
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setMaxMessageSize
  package: microsoft.servicefabric.actors.remoting.fabrictransport
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setOperationTimeoutInSeconds*
  name: setOperationTimeoutInSeconds
  nameWithType: FabricTransportActorRemotingProvider.setOperationTimeoutInSeconds
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setOperationTimeoutInSeconds
  package: microsoft.servicefabric.actors.remoting.fabrictransport
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds*
  name: setKeepAliveTimeoutInSeconds
  nameWithType: FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds
  package: microsoft.servicefabric.actors.remoting.fabrictransport
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getConnectTimeoutInMilliseconds*
  name: getConnectTimeoutInMilliseconds
  nameWithType: FabricTransportActorRemotingProvider.getConnectTimeoutInMilliseconds
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getConnectTimeoutInMilliseconds
  package: microsoft.servicefabric.actors.remoting.fabrictransport
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setConnectTimeoutInMilliseconds*
  name: setConnectTimeoutInMilliseconds
  nameWithType: FabricTransportActorRemotingProvider.setConnectTimeoutInMilliseconds
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setConnectTimeoutInMilliseconds
  package: microsoft.servicefabric.actors.remoting.fabrictransport
- uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
  parent: microsoft.servicefabric.services.remoting.runtime
  href: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener.yml
  name: ServiceRemotingListener
  nameWithType: ServiceRemotingListener
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
  type: Interface
  summary: "<p>Defines a base communication interface that enables interface remoting for stateless and stateful services. </p>"
  syntax:
    content: public interface ServiceRemotingListener
- uid: microsoft.servicefabric.actors.runtime.FabricActorService
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime.FabricActorService.yml
  name: FabricActorService
  nameWithType: FabricActorService
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService
  type: Class
  summary: "<p>Represents the base class for Microsoft Service Fabric based reliable actors service. </p>\r\n<p>\r\n  <b>Remarks:</b>Derive from this class to implement your own custom actor service if you want to override any service level behavior for your actors. </p>"
  syntax:
    content: public class FabricActorService extends StatefulServiceBase implements ActorService
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.runtime
  href: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener.yml
  name: FabricTransportActorServiceRemotingListener
  nameWithType: FabricTransportActorServiceRemotingListener
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener
  type: Class
  summary: "<p>An <xref uid=\"microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener\"></xref> that uses fabric TCP transport to provide remoting of actor and service interfaces for actor service. </p>"
  syntax:
    content: public class FabricTransportActorServiceRemotingListener
- uid: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory.yml
  name: ServiceRemotingClientFactory
  nameWithType: ServiceRemotingClientFactory
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  type: Interface
  summary: "<p>Defines the interface that must be implemented for providing the remoting communication client factory. </p>"
  syntax:
    content: public interface ServiceRemotingClientFactory
- uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
  parent: microsoft.servicefabric.services.remoting.runtime
  href: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient.yml
  name: ServiceRemotingCallbackClient
  nameWithType: ServiceRemotingCallbackClient
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
  type: Interface
  summary: "<p>Defines the interface that must be implemented for providing callback mechanism from the remoting listener to the client. </p>"
  syntax:
    content: public interface ServiceRemotingCallbackClient
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.client
  href: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.yml
  name: FabricTransportActorRemotingClientFactory
  nameWithType: FabricTransportActorRemotingClientFactory
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory
  type: Class
  summary: "<p>An <xref uid=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory\"></xref> that uses Fabric TCP transport to create <xref uid=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClient\"></xref> that communicate with actors over interfaces that are remoted via <xref uid=\"microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener\"></xref></p>"
  syntax:
    content: public class FabricTransportActorRemotingClientFactory extends FabricTransportServiceRemotingClientFactory
- uid: microsoft.servicefabric.actors.client.ActorProxyFactory
  parent: microsoft.servicefabric.actors.client
  href: microsoft.servicefabric.actors.client.ActorProxyFactory.yml
  name: ActorProxyFactory
  nameWithType: ActorProxyFactory
  fullName: microsoft.servicefabric.actors.client.ActorProxyFactory
  type: Interface
  summary: "<p>Defines the interface containing methods to create actor proxy factory class. </p>"
  syntax:
    content: public interface ActorProxyFactory
