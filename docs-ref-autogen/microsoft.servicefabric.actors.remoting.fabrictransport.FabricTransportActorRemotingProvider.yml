### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="ActorRemotingProvider" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  name: createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  nameWithType: FabricTransportActorRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  parameters:
  - description: <p>Client implementation where the callbacks should be dispatched. </p>
    name: callbackClient
    type: <xref href="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient?alt=microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient&text=ServiceRemotingCallbackClient" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory"></xref> as <xref uid="microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory"></xref> that can be used with <xref uid="microsoft.servicefabric.actors.client.ActorProxyFactory" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.client.ActorProxyFactory"></xref> to generate actor proxy to talk to the actor over remoted actor interface. </p>
    type: <xref href="microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory?alt=microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory&text=ServiceRemotingClientFactory" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a service remoting client factory to connect to the remoted actor interfaces. </p>
  syntax: public ServiceRemotingClientFactory createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingListener(FabricActorService actorService)
  name: createServiceRemotingListener(FabricActorService actorService)
  nameWithType: FabricTransportActorRemotingProvider.createServiceRemotingListener(FabricActorService actorService)
  parameters:
  - description: <p>The implementation of the actor service that hosts the actors whose interfaces needs to be remoted. </p>
    name: actorService
    type: <xref href="microsoft.servicefabric.actors.runtime.FabricActorService?alt=microsoft.servicefabric.actors.runtime.FabricActorService&text=FabricActorService" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener"></xref> as <xref uid="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener"></xref> for the specified actor service. </p>
    type: <xref href="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener?alt=microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener&text=ServiceRemotingListener" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a service remoting listener for remoting the actor interfaces. </p>
  syntax: public ServiceRemotingListener createServiceRemotingListener(FabricActorService actorService)
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.createServiceRemotingListener(FabricActorService)
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getConnectTimeoutInMilliseconds()
  name: getConnectTimeoutInMilliseconds()
  nameWithType: FabricTransportActorRemotingProvider.getConnectTimeoutInMilliseconds()
  returns:
    description: <p>The connect timeout in Milliseconds. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the connect timeout in milliseconds. This settings specifies the maximum time allowed for the connection to be established. </p>
  syntax: public long getConnectTimeoutInMilliseconds()
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getConnectTimeoutInMilliseconds()
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getKeepAliveTimeoutInSeconds()
  name: getKeepAliveTimeoutInSeconds()
  nameWithType: FabricTransportActorRemotingProvider.getKeepAliveTimeoutInSeconds()
  returns:
    description: <p>The keep alive timeout in seconds. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the keep alive timeout in seconds. This settings is useful in the scenario when the client and service are connected via load balancer that closes the connection if it is idle for some time. If keep alive timeout is configured, the connection will be kept alive by sending ping messages at that interval. </p>
  syntax: public long getKeepAliveTimeoutInSeconds()
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getKeepAliveTimeoutInSeconds()
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getMaxMessageSize()
  name: getMaxMessageSize()
  nameWithType: FabricTransportActorRemotingProvider.getMaxMessageSize()
  returns:
    description: <p>The maximum size of the remoting message in bytes. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the maximum size of the remoting message in bytes. </p>
  syntax: public long getMaxMessageSize()
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getMaxMessageSize()
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getOperationTimeoutInSeconds()
  name: getOperationTimeoutInSeconds()
  nameWithType: FabricTransportActorRemotingProvider.getOperationTimeoutInSeconds()
  returns:
    description: <p>The operation timeout in seconds. If not specified or less than zero, default operation timeout of maximum value is used. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the operation timeout in seconds. If the operation is not completed in the specified time, it will be timed out. By default, exception handler of FabricTransportServiceRemotingClientFactory retries the timed out exception. It is recommended to not change the operation timeout from it's default value. </p>
  syntax: public long getOperationTimeoutInSeconds()
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.getOperationTimeoutInSeconds()
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  name: setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  nameWithType: FabricTransportActorRemotingProvider.setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  parameters:
  - description: <p>The connect timeout in Milliseconds. </p>
    name: connectTimeoutInMilliseconds
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the connect timeout in milliseconds. This settings specifies the maximum time allowed for the connection to be established. </p>
  syntax: public void setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setConnectTimeoutInMilliseconds(long)
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  name: setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  nameWithType: FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  parameters:
  - description: <p>The keep alive timeout in seconds. </p>
    name: keepAliveTimeoutInSeconds
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the keep alive timeout in seconds. This settings is useful in the scenario when the client and service are connected via load balancer that closes the connection if it is idle for some time. If keep alive timeout is configured, the connection will be kept alive by sending ping messages at that interval. </p>
  syntax: public void setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds(long)
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setMaxMessageSize(long maxMessageSize)
  name: setMaxMessageSize(long maxMessageSize)
  nameWithType: FabricTransportActorRemotingProvider.setMaxMessageSize(long maxMessageSize)
  parameters:
  - description: <p>The maximum size of the remoting message in bytes. If this value is not specified or it is less than or equals to zero, a default value of 4,194,304 bytes (4 MB) is used. </p>
    name: maxMessageSize
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the maximum size of the remoting message in bytes. If value for this property is not specified or it is less than or equals to zero, a default value of 4,194,304 bytes (4 MB) is used. </p>
  syntax: public void setMaxMessageSize(long maxMessageSize)
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setMaxMessageSize(long)
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  name: setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  nameWithType: FabricTransportActorRemotingProvider.setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  parameters:
  - description: <p>The operation timeout in seconds. If not specified or less than zero, default operation timeout of maximum value is used. </p>
    name: operationTimeoutInSeconds
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the operation timeout in seconds. If the operation is not completed in the specified time, it will be timed out. By default, exception handler of FabricTransportServiceRemotingClientFactory retries the timed out exception. It is recommended to not change the operation timeout from it's default value. </p>
  syntax: public void setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setOperationTimeoutInSeconds(long)
nameWithType: FabricTransportActorRemotingProvider
syntax: public class FabricTransportActorRemotingProvider
type: class
uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider
name: FabricTransportActorRemotingProvider
package: microsoft.servicefabric.actors.remoting.fabrictransport
summary: <p>Sets fabric TCP transport as the default remoting provider for the actors. </p>
metadata: {}
