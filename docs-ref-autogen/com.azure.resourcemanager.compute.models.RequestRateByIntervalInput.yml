### YamlMime:JavaType
uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput"
fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput"
name: "RequestRateByIntervalInput"
nameWithType: "RequestRateByIntervalInput"
summary: "Api request input for Log<wbr>Analytics get<wbr>Request<wbr>Rate<wbr>ByInterval Api."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.compute.models.LogAnalyticsInputBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.blobContainerSasUri()"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.fromTime()"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.groupByClientApplicationId()"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.groupByOperationName()"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.groupByResourceName()"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.groupByThrottlePolicy()"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.groupByUserAgent()"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.toTime()"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.validate()"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withBlobContainerSasUri(java.lang.String)"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withFromTime(java.time.OffsetDateTime)"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withGroupByClientApplicationId(java.lang.Boolean)"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withGroupByOperationName(java.lang.Boolean)"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withGroupByResourceName(java.lang.Boolean)"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withGroupByThrottlePolicy(java.lang.Boolean)"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withGroupByUserAgent(java.lang.Boolean)"
- "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withToTime(java.time.OffsetDateTime)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RequestRateByIntervalInput extends LogAnalyticsInputBase"
constructors:
- uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.RequestRateByIntervalInput()"
  fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.RequestRateByIntervalInput()"
  name: "RequestRateByIntervalInput()"
  nameWithType: "RequestRateByIntervalInput.RequestRateByIntervalInput()"
  syntax: "public RequestRateByIntervalInput()"
methods:
- uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.intervalLength()"
  fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.intervalLength()"
  name: "intervalLength()"
  nameWithType: "RequestRateByIntervalInput.intervalLength()"
  summary: "Get the interval<wbr>Length property: Interval value in minutes used to create Log<wbr>Analytics call rate logs."
  syntax: "public IntervalInMins intervalLength()"
  desc: "Get the intervalLength property: Interval value in minutes used to create LogAnalytics call rate logs."
  returns:
    description: "the intervalLength value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.IntervalInMins?alt=com.azure.resourcemanager.compute.models.IntervalInMins&text=IntervalInMins\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.validate()"
  fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.validate()"
  name: "validate()"
  nameWithType: "RequestRateByIntervalInput.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withBlobContainerSasUri(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withBlobContainerSasUri(String blobContainerSasUri)"
  name: "withBlobContainerSasUri(String blobContainerSasUri)"
  nameWithType: "RequestRateByIntervalInput.withBlobContainerSasUri(String blobContainerSasUri)"
  summary: "Set the blob<wbr>Container<wbr>Sas<wbr>Uri property: SAS Uri of the logging blob container to which Log<wbr>Analytics Api writes output logs to."
  overridden: "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withBlobContainerSasUri(java.lang.String)"
  parameters:
  - name: "blobContainerSasUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestRateByIntervalInput withBlobContainerSasUri(String blobContainerSasUri)"
  desc: "Set the blobContainerSasUri property: SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RequestRateByIntervalInput?alt=com.azure.resourcemanager.compute.models.RequestRateByIntervalInput&text=RequestRateByIntervalInput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withFromTime(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withFromTime(OffsetDateTime fromTime)"
  name: "withFromTime(OffsetDateTime fromTime)"
  nameWithType: "RequestRateByIntervalInput.withFromTime(OffsetDateTime fromTime)"
  summary: "Set the from<wbr>Time property: From time of the query."
  overridden: "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withFromTime(java.time.OffsetDateTime)"
  parameters:
  - name: "fromTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestRateByIntervalInput withFromTime(OffsetDateTime fromTime)"
  desc: "Set the fromTime property: From time of the query."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RequestRateByIntervalInput?alt=com.azure.resourcemanager.compute.models.RequestRateByIntervalInput&text=RequestRateByIntervalInput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withGroupByClientApplicationId(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withGroupByClientApplicationId(Boolean groupByClientApplicationId)"
  name: "withGroupByClientApplicationId(Boolean groupByClientApplicationId)"
  nameWithType: "RequestRateByIntervalInput.withGroupByClientApplicationId(Boolean groupByClientApplicationId)"
  summary: "Set the group<wbr>ByClient<wbr>Application<wbr>Id property: Group query result by Client Application ID."
  overridden: "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withGroupByClientApplicationId(java.lang.Boolean)"
  parameters:
  - name: "groupByClientApplicationId"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestRateByIntervalInput withGroupByClientApplicationId(Boolean groupByClientApplicationId)"
  desc: "Set the groupByClientApplicationId property: Group query result by Client Application ID."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RequestRateByIntervalInput?alt=com.azure.resourcemanager.compute.models.RequestRateByIntervalInput&text=RequestRateByIntervalInput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withGroupByOperationName(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withGroupByOperationName(Boolean groupByOperationName)"
  name: "withGroupByOperationName(Boolean groupByOperationName)"
  nameWithType: "RequestRateByIntervalInput.withGroupByOperationName(Boolean groupByOperationName)"
  summary: "Set the group<wbr>ByOperation<wbr>Name property: Group query result by Operation Name."
  overridden: "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withGroupByOperationName(java.lang.Boolean)"
  parameters:
  - name: "groupByOperationName"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestRateByIntervalInput withGroupByOperationName(Boolean groupByOperationName)"
  desc: "Set the groupByOperationName property: Group query result by Operation Name."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RequestRateByIntervalInput?alt=com.azure.resourcemanager.compute.models.RequestRateByIntervalInput&text=RequestRateByIntervalInput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withGroupByResourceName(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withGroupByResourceName(Boolean groupByResourceName)"
  name: "withGroupByResourceName(Boolean groupByResourceName)"
  nameWithType: "RequestRateByIntervalInput.withGroupByResourceName(Boolean groupByResourceName)"
  summary: "Set the group<wbr>ByResource<wbr>Name property: Group query result by Resource Name."
  overridden: "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withGroupByResourceName(java.lang.Boolean)"
  parameters:
  - name: "groupByResourceName"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestRateByIntervalInput withGroupByResourceName(Boolean groupByResourceName)"
  desc: "Set the groupByResourceName property: Group query result by Resource Name."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RequestRateByIntervalInput?alt=com.azure.resourcemanager.compute.models.RequestRateByIntervalInput&text=RequestRateByIntervalInput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withGroupByThrottlePolicy(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withGroupByThrottlePolicy(Boolean groupByThrottlePolicy)"
  name: "withGroupByThrottlePolicy(Boolean groupByThrottlePolicy)"
  nameWithType: "RequestRateByIntervalInput.withGroupByThrottlePolicy(Boolean groupByThrottlePolicy)"
  summary: "Set the group<wbr>ByThrottle<wbr>Policy property: Group query result by Throttle Policy applied."
  overridden: "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withGroupByThrottlePolicy(java.lang.Boolean)"
  parameters:
  - name: "groupByThrottlePolicy"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestRateByIntervalInput withGroupByThrottlePolicy(Boolean groupByThrottlePolicy)"
  desc: "Set the groupByThrottlePolicy property: Group query result by Throttle Policy applied."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RequestRateByIntervalInput?alt=com.azure.resourcemanager.compute.models.RequestRateByIntervalInput&text=RequestRateByIntervalInput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withGroupByUserAgent(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withGroupByUserAgent(Boolean groupByUserAgent)"
  name: "withGroupByUserAgent(Boolean groupByUserAgent)"
  nameWithType: "RequestRateByIntervalInput.withGroupByUserAgent(Boolean groupByUserAgent)"
  summary: "Set the group<wbr>ByUser<wbr>Agent property: Group query result by User Agent."
  overridden: "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withGroupByUserAgent(java.lang.Boolean)"
  parameters:
  - name: "groupByUserAgent"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestRateByIntervalInput withGroupByUserAgent(Boolean groupByUserAgent)"
  desc: "Set the groupByUserAgent property: Group query result by User Agent."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RequestRateByIntervalInput?alt=com.azure.resourcemanager.compute.models.RequestRateByIntervalInput&text=RequestRateByIntervalInput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withIntervalLength(com.azure.resourcemanager.compute.models.IntervalInMins)"
  fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withIntervalLength(IntervalInMins intervalLength)"
  name: "withIntervalLength(IntervalInMins intervalLength)"
  nameWithType: "RequestRateByIntervalInput.withIntervalLength(IntervalInMins intervalLength)"
  summary: "Set the interval<wbr>Length property: Interval value in minutes used to create Log<wbr>Analytics call rate logs."
  parameters:
  - description: "the intervalLength value to set."
    name: "intervalLength"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.IntervalInMins?alt=com.azure.resourcemanager.compute.models.IntervalInMins&text=IntervalInMins\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestRateByIntervalInput withIntervalLength(IntervalInMins intervalLength)"
  desc: "Set the intervalLength property: Interval value in minutes used to create LogAnalytics call rate logs."
  returns:
    description: "the RequestRateByIntervalInput object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RequestRateByIntervalInput?alt=com.azure.resourcemanager.compute.models.RequestRateByIntervalInput&text=RequestRateByIntervalInput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withToTime(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.compute.models.RequestRateByIntervalInput.withToTime(OffsetDateTime toTime)"
  name: "withToTime(OffsetDateTime toTime)"
  nameWithType: "RequestRateByIntervalInput.withToTime(OffsetDateTime toTime)"
  summary: "Set the to<wbr>Time property: To time of the query."
  overridden: "com.azure.resourcemanager.compute.models.LogAnalyticsInputBase.withToTime(java.time.OffsetDateTime)"
  parameters:
  - name: "toTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestRateByIntervalInput withToTime(OffsetDateTime toTime)"
  desc: "Set the toTime property: To time of the query."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RequestRateByIntervalInput?alt=com.azure.resourcemanager.compute.models.RequestRateByIntervalInput&text=RequestRateByIntervalInput\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Api request input for LogAnalytics getRequestRateByInterval Api."
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.16.0
