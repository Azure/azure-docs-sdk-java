### YamlMime:JavaType
constructors:
- fullName: system.fabric.StatefulServiceContext.StatefulServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
  name: StatefulServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
  nameWithType: StatefulServiceContext.StatefulServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
  parameters:
  - description: <p>The node context, which contains information about the node where the stateless service instance is running. </p>
    name: nodeContext
    type: <xref href="system.fabric.NodeContext?alt=system.fabric.NodeContext&text=NodeContext" data-throw-if-not-resolved="False"/>
  - description: <p>The code package activation context, which contains information from the service manifest and the currently activated code package, like work directory, context ID etc. </p>
    name: codePackageActivationContext
    type: <xref href="system.fabric.CodePackageActivationContext?alt=system.fabric.CodePackageActivationContext&text=CodePackageActivationContext" data-throw-if-not-resolved="False"/>
  - description: <p>The service type name. </p>
    name: serviceTypeName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The service name. </p>
    name: serviceName
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>The service initialization data, which represents custom initialization data provided by the creator of the service. </p>
    name: initializationData
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>The partition ID. </p>
    name: partitionId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The replica ID. </p>
    name: replicaId
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Instantiates the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.StatefulServiceContext"></xref> object. </p>
  syntax: public StatefulServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
  uid: system.fabric.StatefulServiceContext.StatefulServiceContext(NodeContext,CodePackageActivationContext,String,URI,byte [],UUID,long)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
inheritedMembers:
- system.fabric.ServiceContext.getCodePackageActivationContext()
- system.fabric.ServiceContext.getInitializationData()
- system.fabric.ServiceContext.getNodeContext()
- system.fabric.ServiceContext.getPartitionId()
- system.fabric.ServiceContext.getReplicaOrInstanceId()
- system.fabric.ServiceContext.getServiceName()
- system.fabric.ServiceContext.getServiceTypeName()
- system.fabric.ServiceContext.getTraceId()
- system.fabric.ServiceContext.ServiceContext(NodeContext,CodePackageActivationContext,String,URI,byte [],UUID,long)
methods:
- fullName: system.fabric.StatefulServiceContext.getReplicaId()
  name: getReplicaId()
  nameWithType: StatefulServiceContext.getReplicaId()
  returns:
    description: <p>The stateful service replica ID. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the stateful service replica ID. </p>
  syntax: public long getReplicaId()
  uid: system.fabric.StatefulServiceContext.getReplicaId()
nameWithType: StatefulServiceContext
syntax: public class StatefulServiceContext extends ServiceContext
type: class
uid: system.fabric.StatefulServiceContext
fullName: system.fabric.StatefulServiceContext
name: StatefulServiceContext
package: system.fabric
summary: <p>Represents the service context that the stateful service is operating under. </p>
metadata: {}
