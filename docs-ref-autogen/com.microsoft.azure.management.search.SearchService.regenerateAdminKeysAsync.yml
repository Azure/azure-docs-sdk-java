### YamlMime:JavaMember
nameWithType: SearchService.regenerateAdminKeysAsync
type: method
members:
- fullName: com.microsoft.azure.management.search.SearchService.regenerateAdminKeysAsync(AdminKeyKind keyKind)
  name: regenerateAdminKeysAsync(AdminKeyKind keyKind)
  nameWithType: SearchService.regenerateAdminKeysAsync(AdminKeyKind keyKind)
  parameters:
  - description: <p>Specifies which key to regenerate </p>
    name: keyKind
    type: <xref href="com.microsoft.azure.management.search.AdminKeyKind?alt=com.microsoft.azure.management.search.AdminKeyKind&text=AdminKeyKind" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>a representation of the future computation of this call </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.search.AdminKeys?alt=com.microsoft.azure.management.search.AdminKeys&text=AdminKeys" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Regenerates either the primary or secondary admin API key. You can only regenerate one key at a time.</p>

    <p></p>
  syntax: public Observable<AdminKeys> regenerateAdminKeysAsync(AdminKeyKind keyKind)
  uid: com.microsoft.azure.management.search.SearchService.regenerateAdminKeysAsync(AdminKeyKind)
uid: com.microsoft.azure.management.search.SearchService.regenerateAdminKeysAsync*
fullName: com.microsoft.azure.management.search.SearchService.regenerateAdminKeysAsync(AdminKeyKind keyKind)
name: regenerateAdminKeysAsync(AdminKeyKind keyKind)
package: com.microsoft.azure.management.search
metadata: {}
