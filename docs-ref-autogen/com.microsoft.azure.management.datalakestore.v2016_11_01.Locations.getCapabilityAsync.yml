### YamlMime:JavaMember
nameWithType: Locations.getCapabilityAsync
type: method
members:
- fullName: com.microsoft.azure.management.datalakestore.v2016_11_01.Locations.getCapabilityAsync(String location)
  name: getCapabilityAsync(String location)
  nameWithType: Locations.getCapabilityAsync(String location)
  parameters:
  - description: <p>The resource location without whitespace. </p>
    name: location
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.datalakestore.v2016_11_01.CapabilityInformation?alt=com.microsoft.azure.management.datalakestore.v2016_11_01.CapabilityInformation&text=CapabilityInformation" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets subscription-level properties and limits for Data Lake Store specified by resource location.</p>

    <p></p>
  syntax: public Observable<CapabilityInformation> getCapabilityAsync(String location)
  uid: com.microsoft.azure.management.datalakestore.v2016_11_01.Locations.getCapabilityAsync(String)
uid: com.microsoft.azure.management.datalakestore.v2016_11_01.Locations.getCapabilityAsync*
fullName: com.microsoft.azure.management.datalakestore.v2016_11_01.Locations.getCapabilityAsync(String location)
name: getCapabilityAsync(String location)
package: com.microsoft.azure.management.datalakestore.v2016_11_01
metadata: {}
