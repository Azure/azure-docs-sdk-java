### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.implementation.ApplicationsApplicationsClientImpl.getLogoWithResponse*"
fullName: "com.azure.resourcemanager.authorization.implementation.ApplicationsApplicationsClientImpl.getLogoWithResponse"
name: "getLogoWithResponse"
nameWithType: "ApplicationsApplicationsClientImpl.getLogoWithResponse"
members:
- uid: "com.azure.resourcemanager.authorization.implementation.ApplicationsApplicationsClientImpl.getLogoWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.implementation.ApplicationsApplicationsClientImpl.getLogoWithResponse(String applicationId, Context context)"
  name: "getLogoWithResponse(String applicationId, Context context)"
  nameWithType: "ApplicationsApplicationsClientImpl.getLogoWithResponse(String applicationId, Context context)"
  summary: "Get media content for application from applications."
  parameters:
  - description: "key: id of application."
    name: "applicationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamResponse getLogoWithResponse(String applicationId, Context context)"
  returns:
    description: "media content for application from applications."
    type: "<xref href=\"com.azure.core.http.rest.StreamResponse?alt=com.azure.core.http.rest.StreamResponse&text=StreamResponse\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.3.0
