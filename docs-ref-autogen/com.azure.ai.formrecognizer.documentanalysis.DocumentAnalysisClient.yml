### YamlMime:JavaType
uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient"
fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient"
name: "DocumentAnalysisClient"
nameWithType: "DocumentAnalysisClient"
summary: "This class provides a synchronous client to connect to the Form Recognizer Azure Cognitive Service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DocumentAnalysisClient**"
methods:
- uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument(java.lang.String,com.azure.core.util.BinaryData)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument(String modelId, BinaryData document)"
  name: "beginAnalyzeDocument(String modelId, BinaryData document)"
  nameWithType: "DocumentAnalysisClient.beginAnalyzeDocument(String modelId, BinaryData document)"
  summary: "Analyzes data from documents using optical character recognition (OCR) using any of the prebuilt models or a custom-built analysis model."
  parameters:
  - description: "The unique model ID to be used. Use this to specify the custom model ID or prebuilt model ID.\n Prebuilt model IDs supported can be found <a href=\"https://aka.ms/azsdk/formrecognizer/models\">here</a>"
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The data of the document to analyze information from."
    name: "document"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<OperationResult,AnalyzeResult> beginAnalyzeDocument(String modelId, BinaryData document)"
  desc: "Analyzes data from documents using optical character recognition (OCR) using any of the prebuilt models or a custom-built analysis model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nFile document = new File(\"{local/file_path/fileName.jpg}\");\n     String modelId = \"{custom_trained_model_id}\";\n     byte[] fileContent = Files.readAllBytes(document.toPath());\n\n     documentAnalysisClient.beginAnalyzeDocument(modelId, BinaryData.fromBytes(fileContent))\n         .getFinalResult()\n         .getDocuments().stream()\n         .map(AnalyzedDocument::getFields)\n         .forEach(documentFieldMap -> documentFieldMap.forEach((key, documentField) -> {\n             System.out.printf(\"Field text: %s%n\", key);\n             System.out.printf(\"Field value data content: %s%n\", documentField.getContent());\n             System.out.printf(\"Confidence score: %.2f%n\", documentField.getConfidence());\n         }));\n }\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the of progress of analyze document operation until it has completed,\n has failed, or has been cancelled. The completed operation returns an <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeResult\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument(java.lang.String,com.azure.core.util.BinaryData,com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument(String modelId, BinaryData document, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  name: "beginAnalyzeDocument(String modelId, BinaryData document, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  nameWithType: "DocumentAnalysisClient.beginAnalyzeDocument(String modelId, BinaryData document, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  summary: "Analyzes data from documents with optical character recognition (OCR) and semantic values from a given document using any of the prebuilt models or a custom-built analysis model."
  parameters:
  - description: "The unique model ID to be used. Use this to specify the custom model ID or prebuilt model ID.\n Prebuilt model IDs supported can be found <a href=\"https://aka.ms/azsdk/formrecognizer/models\">here</a>"
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The data of the document to analyze information from."
    name: "document"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional configurable <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> that may be\n passed when analyzing documents."
    name: "analyzeDocumentOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions&text=AnalyzeDocumentOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<OperationResult,AnalyzeResult> beginAnalyzeDocument(String modelId, BinaryData document, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  desc: "Analyzes data from documents with optical character recognition (OCR) and semantic values from a given document using any of the prebuilt models or a custom-built analysis model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\nAnalyze a document with configurable options.\n\n```java\nFile document = new File(\"{local/file_path/fileName.jpg}\");\n String modelId = \"{custom_trained_model_id}\";\n byte[] fileContent = Files.readAllBytes(document.toPath());\n\n documentAnalysisClient.beginAnalyzeDocument(modelId, BinaryData.fromBytes(fileContent),\n         new AnalyzeDocumentOptions().setPages(Arrays.asList(\"1\", \"3\")), Context.NONE)\n     .getFinalResult()\n     .getDocuments().stream()\n     .map(AnalyzedDocument::getFields)\n     .forEach(documentFieldMap -> documentFieldMap.forEach((key, documentField) -> {\n         System.out.printf(\"Field text: %s%n\", key);\n         System.out.printf(\"Field value data content: %s%n\", documentField.getContent());\n         System.out.printf(\"Confidence score: %.2f%n\", documentField.getConfidence());\n     }));\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the of progress of analyze document operation until it has completed,\n has failed, or has been cancelled. The completed operation returns an <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeResult\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocumentFromUrl(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocumentFromUrl(String modelId, String documentUrl)"
  name: "beginAnalyzeDocumentFromUrl(String modelId, String documentUrl)"
  nameWithType: "DocumentAnalysisClient.beginAnalyzeDocumentFromUrl(String modelId, String documentUrl)"
  summary: "Analyzes data from documents with optical character recognition (OCR) and semantic values from a given document using any of the prebuilt models or a custom-built analysis model."
  parameters:
  - description: "The unique model ID to be used. Use this to specify the custom model ID or prebuilt model ID.\n Prebuilt model IDs supported can be found <a href=\"https://aka.ms/azsdk/formrecognizer/models\">here</a>"
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The URL of the document to analyze."
    name: "documentUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SyncPoller<OperationResult,AnalyzeResult> beginAnalyzeDocumentFromUrl(String modelId, String documentUrl)"
  desc: "Analyzes data from documents with optical character recognition (OCR) and semantic values from a given document using any of the prebuilt models or a custom-built analysis model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support\n\n**Code sample**\n\nAnalyze a document using the URL of the document.\n\n```java\nString documentUrl = \"{document_url}\";\n String modelId = \"{custom_trained_model_id}\";\n\n documentAnalysisClient.beginAnalyzeDocumentFromUrl(modelId, documentUrl).getFinalResult()\n     .getDocuments().stream()\n     .map(AnalyzedDocument::getFields)\n     .forEach(documentFieldMap -> documentFieldMap.forEach((key, documentField) -> {\n         System.out.printf(\"Field text: %s%n\", key);\n         System.out.printf(\"Field value data content: %s%n\", documentField.getContent());\n         System.out.printf(\"Confidence score: %.2f%n\", documentField.getConfidence());\n     }));\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll the progress of the analyze document operation until it has completed,\n has failed, or has been cancelled. The completed operation returns an <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeResult\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocumentFromUrl(java.lang.String,java.lang.String,com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocumentFromUrl(String modelId, String documentUrl, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  name: "beginAnalyzeDocumentFromUrl(String modelId, String documentUrl, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  nameWithType: "DocumentAnalysisClient.beginAnalyzeDocumentFromUrl(String modelId, String documentUrl, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  summary: "Analyzes data from documents with optical character recognition (OCR) and semantic values from a given document using any of the prebuilt models or a custom-built analysis model."
  parameters:
  - description: "The unique model ID to be used.  Use this to specify the custom model ID or prebuilt model ID.\n Prebuilt model IDs supported can be found <a href=\"https://aka.ms/azsdk/formrecognizer/models\">here</a>"
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The source URL to the input document."
    name: "documentUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The additional configurable <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> that may be\n passed when analyzing documents."
    name: "analyzeDocumentOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions&text=AnalyzeDocumentOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<OperationResult,AnalyzeResult> beginAnalyzeDocumentFromUrl(String modelId, String documentUrl, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  desc: "Analyzes data from documents with optical character recognition (OCR) and semantic values from a given document using any of the prebuilt models or a custom-built analysis model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support\n\n**Code sample**\n\nAnalyze a document using the URL of the document with configurable options.\n\n```java\nString documentUrl = \"{document_url}\";\n String modelId = \"{custom_trained_model_id}\";\n\n documentAnalysisClient.beginAnalyzeDocumentFromUrl(modelId, documentUrl).getFinalResult()\n     .getDocuments().stream()\n     .map(AnalyzedDocument::getFields)\n     .forEach(documentFieldMap -> documentFieldMap.forEach((key, documentField) -> {\n         System.out.printf(\"Field text: %s%n\", key);\n         System.out.printf(\"Field value data content: %s%n\", documentField.getContent());\n         System.out.printf(\"Confidence score: %.2f%n\", documentField.getConfidence());\n     }));\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll the progress of the analyze document operation until it has completed,\n has failed, or has been cancelled. The completed operation returns an <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeResult\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginClassifyDocument(java.lang.String,com.azure.core.util.BinaryData)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginClassifyDocument(String classifierId, BinaryData document)"
  name: "beginClassifyDocument(String classifierId, BinaryData document)"
  nameWithType: "DocumentAnalysisClient.beginClassifyDocument(String classifierId, BinaryData document)"
  summary: "Classify a given document using a document classifier."
  parameters:
  - description: "The unique classifier ID to be used. Use this to specify the custom classifier ID."
    name: "classifierId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The data of the document to analyze information from."
    name: "document"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<OperationResult,AnalyzeResult> beginClassifyDocument(String classifierId, BinaryData document)"
  desc: "Classify a given document using a document classifier. For more information on how to build a custom classifier model, see \n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nFile document = new File(\"{local/file_path/fileName.jpg}\");\n String classifierId = \"{custom_trained_classifier_id}\";\n byte[] fileContent = Files.readAllBytes(document.toPath());\n\n documentAnalysisClient.beginClassifyDocument(classifierId, BinaryData.fromBytes(fileContent))\n     .getFinalResult()\n     .getDocuments()\n     .forEach(analyzedDocument -> System.out.printf(\"Doc Type: %s%n\", analyzedDocument.getDocType()));\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the of progress of analyze document operation until it has completed,\n has failed, or has been cancelled. The completed operation returns an <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeResult\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginClassifyDocument(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginClassifyDocument(String classifierId, BinaryData document, Context context)"
  name: "beginClassifyDocument(String classifierId, BinaryData document, Context context)"
  nameWithType: "DocumentAnalysisClient.beginClassifyDocument(String classifierId, BinaryData document, Context context)"
  summary: "Classify a given document using a document classifier."
  parameters:
  - description: "The unique classifier ID to be used. Use this to specify the custom classifier ID."
    name: "classifierId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The data of the document to analyze information from."
    name: "document"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<OperationResult,AnalyzeResult> beginClassifyDocument(String classifierId, BinaryData document, Context context)"
  desc: "Classify a given document using a document classifier. For more information on how to build a custom classifier model, see \n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nFile document = new File(\"{local/file_path/fileName.jpg}\");\n String classifierId = \"{custom_trained_classifier_id}\";\n byte[] fileContent = Files.readAllBytes(document.toPath());\n\n documentAnalysisClient.beginClassifyDocument(classifierId, BinaryData.fromBytes(fileContent), Context.NONE)\n     .getFinalResult()\n     .getDocuments()\n     .forEach(analyzedDocument -> System.out.printf(\"Doc Type: %s%n\", analyzedDocument.getDocType()));\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the of progress of analyze document operation until it has completed,\n has failed, or has been cancelled. The completed operation returns an <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeResult\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginClassifyDocumentFromUrl(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginClassifyDocumentFromUrl(String classifierId, String documentUrl)"
  name: "beginClassifyDocumentFromUrl(String classifierId, String documentUrl)"
  nameWithType: "DocumentAnalysisClient.beginClassifyDocumentFromUrl(String classifierId, String documentUrl)"
  summary: "Classify a given document using a document classifier."
  parameters:
  - description: "The unique classifier ID to be used. Use this to specify the custom classifier ID.\n Prebuilt model IDs supported can be found <a href=\"https://aka.ms/azsdk/formrecognizer/models\">here</a>"
    name: "classifierId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The source URL to the input document."
    name: "documentUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SyncPoller<OperationResult,AnalyzeResult> beginClassifyDocumentFromUrl(String classifierId, String documentUrl)"
  desc: "Classify a given document using a document classifier. For more information on how to build a custom classifier model, see \n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support\n\n**Code sample**\n\nAnalyze a document using the URL of the document with configurable options.\n\n```java\nString documentUrl = \"{file_source_url}\";\n String classifierId = \"{custom_trained_classifier_id}\";\n\n documentAnalysisClient.beginClassifyDocumentFromUrl(classifierId, documentUrl)\n     .getFinalResult()\n     .getDocuments()\n     .forEach(analyzedDocument -> System.out.printf(\"Doc Type: %s%n\", analyzedDocument.getDocType()));\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll the progress of the analyze document operation until it has completed,\n has failed, or has been cancelled. The completed operation returns an <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeResult\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginClassifyDocumentFromUrl(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginClassifyDocumentFromUrl(String classifierId, String documentUrl, Context context)"
  name: "beginClassifyDocumentFromUrl(String classifierId, String documentUrl, Context context)"
  nameWithType: "DocumentAnalysisClient.beginClassifyDocumentFromUrl(String classifierId, String documentUrl, Context context)"
  summary: "Classify a given document using a document classifier."
  parameters:
  - description: "The unique classifier ID to be used. Use this to specify the custom classifier ID.\n Prebuilt model IDs supported can be found <a href=\"https://aka.ms/azsdk/formrecognizer/models\">here</a>"
    name: "classifierId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The source URL to the input document."
    name: "documentUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<OperationResult,AnalyzeResult> beginClassifyDocumentFromUrl(String classifierId, String documentUrl, Context context)"
  desc: "Classify a given document using a document classifier. For more information on how to build a custom classifier model, see \n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support\n\n**Code sample**\n\nAnalyze a document using the URL of the document with configurable options.\n\n```java\nString documentUrl = \"{file_source_url}\";\n String classifierId = \"{custom_trained_classifier_id}\";\n\n documentAnalysisClient.beginClassifyDocumentFromUrl(classifierId, documentUrl, Context.NONE)\n     .getFinalResult()\n     .getDocuments()\n     .forEach(analyzedDocument -> System.out.printf(\"Doc Type: %s%n\", analyzedDocument.getDocType()));\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll the progress of the analyze document operation until it has completed,\n has failed, or has been cancelled. The completed operation returns an <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeResult\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "This class provides a synchronous client to connect to the Form Recognizer Azure Cognitive Service.\n\nThis client provides synchronous methods to perform:\n\n1.  Custom Document Analysis: Classification, extraction and analysis of data from forms and documents specific to distinct business data and use cases. Use the custom trained model by passing its modelId into the <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient#beginAnalyzeDocument(String, BinaryData)\"></xref> method.\n2.  General Document Analysis: Extract text, tables, structure, and key-value pairs. Use general document model provided by the Form Recognizer service by passing modelId=\"rebuilt-document\" into the <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient#beginAnalyzeDocument(String, BinaryData)\"></xref> method.\n3.  Prebuilt Model Analysis: Analyze receipts, business cards, invoices, ID's, W2's and other documents with [supported prebuilt models. Use the prebuilt receipt model provided by passing modelId=\"prebuilt-receipt\" into the <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient#beginAnalyzeDocument(String, BinaryData)\"></xref> method.][supported prebuilt models. Use the prebuilt receipt model provided by passing modelId_prebuilt-receipt_ into the _xref uid_com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument_ data-throw-if-not-resolved_false_ data-raw-source_com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient_beginAnalyzeDocument_String_ BinaryData_xref_ method.]\n4.  Layout Analysis: Extract text, selection marks, and tables structures, along with their bounding box coordinates, from forms and documents. Use the layout analysis model provided the service by passing modelId=\"prebuilt-layout\" into the <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient#beginAnalyzeDocument(String, BinaryData)\"></xref> method.\n5.  Polling and Callbacks: It includes mechanisms for polling the service to check the status of an analysis operation or registering callbacks to receive notifications when the analysis is complete.\n\nThis client also provides different methods based on inputs from a URL and inputs from a stream.\n\n**Note:** This client only supports <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisServiceVersion.V2022_08_31\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisServiceVersion#V2022_08_31\"></xref> and newer. To use an older service version, <xref uid=\"com.azure.ai.formrecognizer.FormRecognizerClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.FormRecognizerClient\"></xref> and <xref uid=\"com.azure.ai.formrecognizer.training.FormTrainingClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.training.FormTrainingClient\"></xref>.\n\nService clients are the point of interaction for developers to use Azure Form Recognizer. <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient\"></xref> is the synchronous service client and <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisAsyncClient\"></xref> is the asynchronous service client. The examples shown in this document use a credential object named DefaultAzureCredential for authentication, which is appropriate for most scenarios, including local development and production environments. Additionally, we recommend using [managed identity][] for authentication in production environments. You can find more information on different ways of authenticating and their corresponding credential types in the [Azure Identity documentation\"][Azure Identity documentation].\n\n**Sample: Construct a DocumentAnalysisAsyncClient with DefaultAzureCredential**\n\nThe following code sample demonstrates the creation of a <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient\"></xref>, using the \\`DefaultAzureCredentialBuilder\\` to configure it.\n\n```java\nDocumentAnalysisClient documentAnalysisClient = new DocumentAnalysisClientBuilder()\n     .endpoint(\"{endpoint}\")\n     .credential(new DefaultAzureCredentialBuilder().build())\n     .buildClient();\n```\n\nFurther, see the code sample below to use <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref> for client creation.\n\n```java\nDocumentAnalysisClient documentAnalysisClient = new DocumentAnalysisClientBuilder()\n     .credential(new AzureKeyCredential(\"{key}\"))\n     .endpoint(\"{endpoint}\")\n     .buildClient();\n```\n\n\n[supported prebuilt models. Use the prebuilt receipt model provided by passing modelId_prebuilt-receipt_ into the _xref uid_com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument_ data-throw-if-not-resolved_false_ data-raw-source_com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient_beginAnalyzeDocument_String_ BinaryData_xref_ method.]: https://aka.ms/azsdk/formrecognizer/models\n[managed identity]: https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/\n[Azure Identity documentation]: https://learn.microsoft.com/java/api/overview/azure/identity-readme"
metadata: {}
package: "com.azure.ai.formrecognizer.documentanalysis"
artifact: com.azure:azure-ai-formrecognizer:4.1.10
