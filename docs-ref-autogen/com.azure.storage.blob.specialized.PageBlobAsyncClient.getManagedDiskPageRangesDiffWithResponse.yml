### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.PageBlobAsyncClient.getManagedDiskPageRangesDiffWithResponse*"
fullName: "com.azure.storage.blob.specialized.PageBlobAsyncClient.getManagedDiskPageRangesDiffWithResponse"
name: "getManagedDiskPageRangesDiffWithResponse"
nameWithType: "PageBlobAsyncClient.getManagedDiskPageRangesDiffWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.PageBlobAsyncClient.getManagedDiskPageRangesDiffWithResponse(com.azure.storage.blob.models.BlobRange,java.lang.String,com.azure.storage.blob.models.BlobRequestConditions)"
  fullName: "com.azure.storage.blob.specialized.PageBlobAsyncClient.getManagedDiskPageRangesDiffWithResponse(BlobRange blobRange, String prevSnapshotUrl, BlobRequestConditions requestConditions)"
  name: "getManagedDiskPageRangesDiffWithResponse(BlobRange blobRange, String prevSnapshotUrl, BlobRequestConditions requestConditions)"
  nameWithType: "PageBlobAsyncClient.getManagedDiskPageRangesDiffWithResponse(BlobRange blobRange, String prevSnapshotUrl, BlobRequestConditions requestConditions)"
  summary: "This API only works for managed disk accounts.\n\nGets the collection of page ranges that differ between a specified snapshot and this page blob. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(offset);\n final String prevSnapshotUrl = \"previous snapshot url\";\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n client.getPageRangesDiffWithResponse(blobRange, prevSnapshotUrl, blobRequestConditions)\n     .subscribe(response -> {\n         System.out.println(\"Valid Page Ranges are:\");\n         for (PageRange pageRange : response.getValue().getPageRange()) {\n             System.out.printf(\"Start: %s, End: %s%n\", pageRange.getStart(), pageRange.getEnd());\n         }\n     });\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-page-ranges"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRange\" data-throw-if-not-resolved=\"false\">BlobRange</xref>"
    name: "blobRange"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies the URL of a previous snapshot of the target blob. Specifies that the\n response will contain only pages that were changed between target blob and previous snapshot. Changed pages\n include both updated and cleared pages. The target blob may be a snapshot, as long as the snapshot specified by\n prevsnapshot is the older of the two."
    name: "prevSnapshotUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\">BlobRequestConditions</xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<PageList>> getManagedDiskPageRangesDiffWithResponse(BlobRange blobRange, String prevSnapshotUrl, BlobRequestConditions requestConditions)"
  returns:
    description: "A reactive response emitting all the different page ranges."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.PageList?alt=com.azure.storage.blob.models.PageList&text=PageList\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
