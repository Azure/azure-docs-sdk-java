### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating"
fullName: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating<T>"
name: "SupportsCreating<T>"
nameWithType: "SupportsCreating<T>"
summary: "Providing access to creating Azure top level resources."
syntax: "public interface SupportsCreating<T>"
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating<T>.define(String name)"
  name: "define(String name)"
  nameWithType: "SupportsCreating<T>.define(String name)"
  summary: "Begins a definition for a new resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "the name of the new resource"
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract T define(String name)"
  desc: "Begins a definition for a new resource.\n\nThis is the beginning of the builder pattern used to create top level resources in Azure. The final method completing the definition and starting the actual resource creation process in Azure is <xref uid=\"com.azure.resourcemanager.resources.fluentcore.model.Creatable.create()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Creatable#create()\"></xref>.\n\nNote that the <xref uid=\"com.azure.resourcemanager.resources.fluentcore.model.Creatable.create()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Creatable#create()\"></xref> method is only available at the stage of the resource definition that has the minimum set of input parameters specified. If you do not see <xref uid=\"com.azure.resourcemanager.resources.fluentcore.model.Creatable.create()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Creatable#create()\"></xref> among the available methods, it means you have not yet specified all the required input settings. Input settings generally begin with the word \"with\", for example: `.withNewResourceGroup()` and return the next stage of the resource definition, as an interface in the \"fluent interface\" style."
  returns:
    description: "the first stage of the new resource definition"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
typeParameters:
- description: "the initial blank definition interface"
  name: "T"
desc: "Providing access to creating Azure top level resources.\n\n(Note: this interface is not intended to be implemented by user code)"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.collection"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
