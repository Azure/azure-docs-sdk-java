### YamlMime:JavaMember
nameWithType: PoolSpecification.withApplicationLicenses
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationLicenses(List<String> applicationLicenses)
  name: withApplicationLicenses(List<String> applicationLicenses)
  nameWithType: PoolSpecification.withApplicationLicenses(List<String> applicationLicenses)
  parameters:
  - description: <p>the applicationLicenses value to set </p>
    name: applicationLicenses
    type: <xref href="List%3CString%3E?alt=List<String>&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolSpecification?alt=com.microsoft.azure.batch.protocol.models.PoolSpecification&text=PoolSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail. The permitted licenses available on the pool are 'maya', 'vray', '3dsmax', 'arnold'. An additional charge applies for each application license added to the pool.</p>

    <p></p>
  syntax: public PoolSpecification withApplicationLicenses(List<String> applicationLicenses)
  uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationLicenses(List<String>)
uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationLicenses*
fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationLicenses(List<String> applicationLicenses)
name: withApplicationLicenses(List<String> applicationLicenses)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
