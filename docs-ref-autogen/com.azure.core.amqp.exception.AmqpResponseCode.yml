### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.exception.AmqpResponseCode"
  id: "AmqpResponseCode"
  parent: "com.azure.core.amqp.exception"
  children:
  - "com.azure.core.amqp.exception.AmqpResponseCode.ACCEPTED"
  - "com.azure.core.amqp.exception.AmqpResponseCode.BAD_REQUEST"
  - "com.azure.core.amqp.exception.AmqpResponseCode.FORBIDDEN"
  - "com.azure.core.amqp.exception.AmqpResponseCode.INTERNAL_SERVER_ERROR"
  - "com.azure.core.amqp.exception.AmqpResponseCode.NOT_FOUND"
  - "com.azure.core.amqp.exception.AmqpResponseCode.OK"
  - "com.azure.core.amqp.exception.AmqpResponseCode.UNAUTHORIZED"
  - "com.azure.core.amqp.exception.AmqpResponseCode.fromValue(int)"
  - "com.azure.core.amqp.exception.AmqpResponseCode.getValue()"
  - "com.azure.core.amqp.exception.AmqpResponseCode.valueOf(java.lang.String)"
  - "com.azure.core.amqp.exception.AmqpResponseCode.values()"
  langs:
  - "java"
  name: "AmqpResponseCode"
  nameWithType: "AmqpResponseCode"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode"
  type: "Enum"
  package: "com.azure.core.amqp.exception"
  summary: "Error response codes returned from AMQP."
  syntax:
    content: "public enum AmqpResponseCode extends Enum<AmqpResponseCode>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.ACCEPTED"
  id: "ACCEPTED"
  parent: "com.azure.core.amqp.exception.AmqpResponseCode"
  langs:
  - "java"
  name: "ACCEPTED"
  nameWithType: "AmqpResponseCode.ACCEPTED"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.ACCEPTED"
  type: "Field"
  package: "com.azure.core.amqp.exception"
  syntax:
    content: "public static final AmqpResponseCode ACCEPTED"
    return:
      type: "com.azure.core.amqp.exception.AmqpResponseCode"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.AmqpResponseCode(int)"
  id: "AmqpResponseCode(int)"
  parent: "com.azure.core.amqp.exception.AmqpResponseCode"
  langs:
  - "java"
  name: "AmqpResponseCode(int value)"
  nameWithType: "AmqpResponseCode.AmqpResponseCode(int value)"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.AmqpResponseCode(int value)"
  overload: "com.azure.core.amqp.exception.AmqpResponseCode.AmqpResponseCode*"
  type: "Constructor"
  package: "com.azure.core.amqp.exception"
  syntax:
    content: "private AmqpResponseCode(int value)"
    parameters:
    - id: "value"
      type: "int"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.BAD_REQUEST"
  id: "BAD_REQUEST"
  parent: "com.azure.core.amqp.exception.AmqpResponseCode"
  langs:
  - "java"
  name: "BAD_REQUEST"
  nameWithType: "AmqpResponseCode.BAD_REQUEST"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.BAD_REQUEST"
  type: "Field"
  package: "com.azure.core.amqp.exception"
  syntax:
    content: "public static final AmqpResponseCode BAD_REQUEST"
    return:
      type: "com.azure.core.amqp.exception.AmqpResponseCode"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.FORBIDDEN"
  id: "FORBIDDEN"
  parent: "com.azure.core.amqp.exception.AmqpResponseCode"
  langs:
  - "java"
  name: "FORBIDDEN"
  nameWithType: "AmqpResponseCode.FORBIDDEN"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.FORBIDDEN"
  type: "Field"
  package: "com.azure.core.amqp.exception"
  syntax:
    content: "public static final AmqpResponseCode FORBIDDEN"
    return:
      type: "com.azure.core.amqp.exception.AmqpResponseCode"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.INTERNAL_SERVER_ERROR"
  id: "INTERNAL_SERVER_ERROR"
  parent: "com.azure.core.amqp.exception.AmqpResponseCode"
  langs:
  - "java"
  name: "INTERNAL_SERVER_ERROR"
  nameWithType: "AmqpResponseCode.INTERNAL_SERVER_ERROR"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.INTERNAL_SERVER_ERROR"
  type: "Field"
  package: "com.azure.core.amqp.exception"
  syntax:
    content: "public static final AmqpResponseCode INTERNAL_SERVER_ERROR"
    return:
      type: "com.azure.core.amqp.exception.AmqpResponseCode"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.NOT_FOUND"
  id: "NOT_FOUND"
  parent: "com.azure.core.amqp.exception.AmqpResponseCode"
  langs:
  - "java"
  name: "NOT_FOUND"
  nameWithType: "AmqpResponseCode.NOT_FOUND"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.NOT_FOUND"
  type: "Field"
  package: "com.azure.core.amqp.exception"
  syntax:
    content: "public static final AmqpResponseCode NOT_FOUND"
    return:
      type: "com.azure.core.amqp.exception.AmqpResponseCode"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.OK"
  id: "OK"
  parent: "com.azure.core.amqp.exception.AmqpResponseCode"
  langs:
  - "java"
  name: "OK"
  nameWithType: "AmqpResponseCode.OK"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.OK"
  type: "Field"
  package: "com.azure.core.amqp.exception"
  syntax:
    content: "public static final AmqpResponseCode OK"
    return:
      type: "com.azure.core.amqp.exception.AmqpResponseCode"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.UNAUTHORIZED"
  id: "UNAUTHORIZED"
  parent: "com.azure.core.amqp.exception.AmqpResponseCode"
  langs:
  - "java"
  name: "UNAUTHORIZED"
  nameWithType: "AmqpResponseCode.UNAUTHORIZED"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.UNAUTHORIZED"
  type: "Field"
  package: "com.azure.core.amqp.exception"
  syntax:
    content: "public static final AmqpResponseCode UNAUTHORIZED"
    return:
      type: "com.azure.core.amqp.exception.AmqpResponseCode"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.fromValue(int)"
  id: "fromValue(int)"
  parent: "com.azure.core.amqp.exception.AmqpResponseCode"
  langs:
  - "java"
  name: "fromValue(int value)"
  nameWithType: "AmqpResponseCode.fromValue(int value)"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.fromValue(int value)"
  overload: "com.azure.core.amqp.exception.AmqpResponseCode.fromValue*"
  type: "Method"
  package: "com.azure.core.amqp.exception"
  summary: "Creates an AmqpResponseCode for the provided integer `value`."
  syntax:
    content: "public static AmqpResponseCode fromValue(int value)"
    parameters:
    - id: "value"
      type: "int"
      description: "The integer value representing an error code."
    return:
      type: "com.azure.core.amqp.exception.AmqpResponseCode"
      description: "The corresponding AmqpResponseCode for the provided value, or <code>null</code> if no matching response code\n is found."
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.getValue()"
  id: "getValue()"
  parent: "com.azure.core.amqp.exception.AmqpResponseCode"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "AmqpResponseCode.getValue()"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.getValue()"
  overload: "com.azure.core.amqp.exception.AmqpResponseCode.getValue*"
  type: "Method"
  package: "com.azure.core.amqp.exception"
  summary: "Gets the integer value of the AmqpResponseCode"
  syntax:
    content: "public int getValue()"
    return:
      type: "int"
      description: "The integer value of the AmqpResponseCode"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.azure.core.amqp.exception.AmqpResponseCode"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "AmqpResponseCode.valueOf(String name)"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.valueOf(String name)"
  overload: "com.azure.core.amqp.exception.AmqpResponseCode.valueOf*"
  type: "Method"
  package: "com.azure.core.amqp.exception"
  syntax:
    content: "public static AmqpResponseCode valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.azure.core.amqp.exception.AmqpResponseCode"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.values()"
  id: "values()"
  parent: "com.azure.core.amqp.exception.AmqpResponseCode"
  langs:
  - "java"
  name: "values()"
  nameWithType: "AmqpResponseCode.values()"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.values()"
  overload: "com.azure.core.amqp.exception.AmqpResponseCode.values*"
  type: "Method"
  package: "com.azure.core.amqp.exception"
  syntax:
    content: "public static AmqpResponseCode[] values()"
    return:
      type: "com.azure.core.amqp.exception.AmqpResponseCode[]"
references:
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.AmqpResponseCode*"
  name: "AmqpResponseCode"
  nameWithType: "AmqpResponseCode.AmqpResponseCode"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.AmqpResponseCode"
  package: "com.azure.core.amqp.exception"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode[]"
  spec.java:
  - uid: "com.azure.core.amqp.exception.AmqpResponseCode"
    name: "AmqpResponseCode"
    fullName: "com.azure.core.amqp.exception.AmqpResponseCode"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.values*"
  name: "values"
  nameWithType: "AmqpResponseCode.values"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.values"
  package: "com.azure.core.amqp.exception"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.valueOf*"
  name: "valueOf"
  nameWithType: "AmqpResponseCode.valueOf"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.valueOf"
  package: "com.azure.core.amqp.exception"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.fromValue*"
  name: "fromValue"
  nameWithType: "AmqpResponseCode.fromValue"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.fromValue"
  package: "com.azure.core.amqp.exception"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode.getValue*"
  name: "getValue"
  nameWithType: "AmqpResponseCode.getValue"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode.getValue"
  package: "com.azure.core.amqp.exception"
- uid: "java.lang.Enum<com.azure.core.amqp.exception.AmqpResponseCode>"
  name: "Enum<AmqpResponseCode>"
  nameWithType: "Enum<AmqpResponseCode>"
  fullName: "java.lang.Enum<com.azure.core.amqp.exception.AmqpResponseCode>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
