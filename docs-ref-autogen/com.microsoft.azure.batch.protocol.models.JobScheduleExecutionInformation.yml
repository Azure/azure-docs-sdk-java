### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.endTime()
  name: endTime()
  nameWithType: JobScheduleExecutionInformation.endTime()
  returns:
    description: <p>the endTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the job schedule is in the completed state.</p>

    <p></p>
  syntax: public DateTime endTime()
  uid: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.endTime()
- fullName: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.nextRunTime()
  name: nextRunTime()
  nameWithType: JobScheduleExecutionInformation.nextRunTime()
  returns:
    description: <p>the nextRunTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is meaningful only if the schedule is in the active state when the time comes around. For example, if the schedule is disabled, no job will be created at nextRunTime unless the job is enabled before then.</p>

    <p></p>
  syntax: public DateTime nextRunTime()
  uid: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.nextRunTime()
- fullName: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.recentJob()
  name: recentJob()
  nameWithType: JobScheduleExecutionInformation.recentJob()
  returns:
    description: <p>the recentJob value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.RecentJob?alt=com.microsoft.azure.batch.protocol.models.RecentJob&text=RecentJob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is present only if the at least one job has run under the schedule.</p>

    <p></p>
  syntax: public RecentJob recentJob()
  uid: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.recentJob()
- fullName: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.withEndTime(DateTime endTime)
  name: withEndTime(DateTime endTime)
  nameWithType: JobScheduleExecutionInformation.withEndTime(DateTime endTime)
  parameters:
  - description: <p>the endTime value to set </p>
    name: endTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobScheduleExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation&text=JobScheduleExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the job schedule is in the completed state.</p>

    <p></p>
  syntax: public JobScheduleExecutionInformation withEndTime(DateTime endTime)
  uid: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.withEndTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.withNextRunTime(DateTime nextRunTime)
  name: withNextRunTime(DateTime nextRunTime)
  nameWithType: JobScheduleExecutionInformation.withNextRunTime(DateTime nextRunTime)
  parameters:
  - description: <p>the nextRunTime value to set </p>
    name: nextRunTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobScheduleExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation&text=JobScheduleExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is meaningful only if the schedule is in the active state when the time comes around. For example, if the schedule is disabled, no job will be created at nextRunTime unless the job is enabled before then.</p>

    <p></p>
  syntax: public JobScheduleExecutionInformation withNextRunTime(DateTime nextRunTime)
  uid: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.withNextRunTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.withRecentJob(RecentJob recentJob)
  name: withRecentJob(RecentJob recentJob)
  nameWithType: JobScheduleExecutionInformation.withRecentJob(RecentJob recentJob)
  parameters:
  - description: <p>the recentJob value to set </p>
    name: recentJob
    type: <xref href="com.microsoft.azure.batch.protocol.models.RecentJob?alt=com.microsoft.azure.batch.protocol.models.RecentJob&text=RecentJob" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobScheduleExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation&text=JobScheduleExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is present only if the at least one job has run under the schedule.</p>

    <p></p>
  syntax: public JobScheduleExecutionInformation withRecentJob(RecentJob recentJob)
  uid: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.withRecentJob(RecentJob)
nameWithType: JobScheduleExecutionInformation
syntax: public class JobScheduleExecutionInformation
type: class
uid: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation
fullName: com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation
name: JobScheduleExecutionInformation
package: com.microsoft.azure.batch.protocol.models
summary: <p>Contains information about jobs that have been and will be run under a job schedule. </p>
metadata: {}
