### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation"
fullName: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation"
name: "JobScheduleExecutionInformation"
nameWithType: "JobScheduleExecutionInformation"
summary: "Contains information about Jobs that have been and will be run under a Job Schedule."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class JobScheduleExecutionInformation"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.JobScheduleExecutionInformation()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.JobScheduleExecutionInformation()"
  name: "JobScheduleExecutionInformation()"
  nameWithType: "JobScheduleExecutionInformation.JobScheduleExecutionInformation()"
  syntax: "public JobScheduleExecutionInformation()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.endTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.endTime()"
  name: "endTime()"
  nameWithType: "JobScheduleExecutionInformation.endTime()"
  summary: "Get this property is set only if the Job Schedule is in the completed state."
  syntax: "public DateTime endTime()"
  desc: "Get this property is set only if the Job Schedule is in the completed state."
  returns:
    description: "the endTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.nextRunTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.nextRunTime()"
  name: "nextRunTime()"
  nameWithType: "JobScheduleExecutionInformation.nextRunTime()"
  summary: "Get this property is meaningful only if the schedule is in the active state when the time comes around."
  syntax: "public DateTime nextRunTime()"
  desc: "Get this property is meaningful only if the schedule is in the active state when the time comes around. For example, if the schedule is disabled, no Job will be created at nextRunTime unless the Job is enabled before then."
  returns:
    description: "the nextRunTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.recentJob()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.recentJob()"
  name: "recentJob()"
  nameWithType: "JobScheduleExecutionInformation.recentJob()"
  summary: "Get this property is present only if the at least one Job has run under the schedule."
  syntax: "public RecentJob recentJob()"
  desc: "Get this property is present only if the at least one Job has run under the schedule."
  returns:
    description: "the recentJob value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.RecentJob?alt=com.microsoft.azure.batch.protocol.models.RecentJob&text=RecentJob\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.withEndTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.withEndTime(DateTime endTime)"
  name: "withEndTime(DateTime endTime)"
  nameWithType: "JobScheduleExecutionInformation.withEndTime(DateTime endTime)"
  summary: "Set this property is set only if the Job Schedule is in the completed state."
  parameters:
  - description: "the endTime value to set"
    name: "endTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobScheduleExecutionInformation withEndTime(DateTime endTime)"
  desc: "Set this property is set only if the Job Schedule is in the completed state."
  returns:
    description: "the JobScheduleExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation&text=JobScheduleExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.withNextRunTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.withNextRunTime(DateTime nextRunTime)"
  name: "withNextRunTime(DateTime nextRunTime)"
  nameWithType: "JobScheduleExecutionInformation.withNextRunTime(DateTime nextRunTime)"
  summary: "Set this property is meaningful only if the schedule is in the active state when the time comes around."
  parameters:
  - description: "the nextRunTime value to set"
    name: "nextRunTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobScheduleExecutionInformation withNextRunTime(DateTime nextRunTime)"
  desc: "Set this property is meaningful only if the schedule is in the active state when the time comes around. For example, if the schedule is disabled, no Job will be created at nextRunTime unless the Job is enabled before then."
  returns:
    description: "the JobScheduleExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation&text=JobScheduleExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.withRecentJob(com.microsoft.azure.batch.protocol.models.RecentJob)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation.withRecentJob(RecentJob recentJob)"
  name: "withRecentJob(RecentJob recentJob)"
  nameWithType: "JobScheduleExecutionInformation.withRecentJob(RecentJob recentJob)"
  summary: "Set this property is present only if the at least one Job has run under the schedule."
  parameters:
  - description: "the recentJob value to set"
    name: "recentJob"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.RecentJob?alt=com.microsoft.azure.batch.protocol.models.RecentJob&text=RecentJob\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobScheduleExecutionInformation withRecentJob(RecentJob recentJob)"
  desc: "Set this property is present only if the at least one Job has run under the schedule."
  returns:
    description: "the JobScheduleExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobScheduleExecutionInformation&text=JobScheduleExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Contains information about Jobs that have been and will be run under a Job Schedule."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
