### YamlMime:JavaMember
nameWithType: Reviews.getReviewAsync
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.getReviewAsync(String teamName, String reviewId)
  name: getReviewAsync(String teamName, String reviewId)
  nameWithType: Reviews.getReviewAsync(String teamName, String reviewId)
  parameters:
  - description: <p>Your Team Name. </p>
    name: teamName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Id of the review. </p>
    name: reviewId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Review object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Review?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Review&text=Review" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns review details for the review Id passed.</p>

    <p></p>
  syntax: public Observable<Review> getReviewAsync(String teamName, String reviewId)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.getReviewAsync(String,String)
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.getReviewAsync*
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.getReviewAsync(String teamName, String reviewId)
name: getReviewAsync(String teamName, String reviewId)
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator
metadata: {}
