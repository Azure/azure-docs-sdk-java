### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.ShardLocation()
  name: ShardLocation()
  nameWithType: ShardLocation.ShardLocation()
  syntax: public ShardLocation()
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.ShardLocation()
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.ShardLocation(String server, String database)
  name: ShardLocation(String server, String database)
  nameWithType: ShardLocation.ShardLocation(String server, String database)
  parameters:
  - description: <p>Fully qualified hostname of the server for the shard database. </p>
    name: server
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Name of the shard database. </p>
    name: database
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor that allows specification of address and database to identify a shard.</p>

    <p></p>
  syntax: public ShardLocation(String server, String database)
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.ShardLocation(String,String)
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.ShardLocation(String server, String database, SqlProtocol protocol)
  name: ShardLocation(String server, String database, SqlProtocol protocol)
  nameWithType: ShardLocation.ShardLocation(String server, String database, SqlProtocol protocol)
  parameters:
  - description: <p>Fully qualified hostname of the server for the shard database. </p>
    name: server
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Name of the shard database. </p>
    name: database
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Transport protcol used for the connection. </p>
    name: protocol
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.SqlProtocol?alt=com.microsoft.azure.elasticdb.shard.base.SqlProtocol&text=SqlProtocol" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor that allows specification of address and database to identify a shard.</p>

    <p></p>
  syntax: public ShardLocation(String server, String database, SqlProtocol protocol)
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.ShardLocation(String,String,SqlProtocol)
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.ShardLocation(String server, String database, SqlProtocol protocol, int port)
  name: ShardLocation(String server, String database, SqlProtocol protocol, int port)
  nameWithType: ShardLocation.ShardLocation(String server, String database, SqlProtocol protocol, int port)
  parameters:
  - description: <p>Fully qualified hostname of the server for the shard database. </p>
    name: server
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Name of the shard database. </p>
    name: database
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Transport protcol used for the connection. </p>
    name: protocol
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.SqlProtocol?alt=com.microsoft.azure.elasticdb.shard.base.SqlProtocol&text=SqlProtocol" data-throw-if-not-resolved="False"/>
  - description: <p>Port number for TCP/IP connections. Specify 0 to use the default port for the specified <em>protocol</em> . </p>
    name: port
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor that allows specification of protocol, address, port and database to identify a shard.</p>

    <p></p>
  syntax: public ShardLocation(String server, String database, SqlProtocol protocol, int port)
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.ShardLocation(String,String,SqlProtocol,int)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Serializable" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.equals(Object obj)
  name: equals(Object obj)
  nameWithType: ShardLocation.equals(Object obj)
  parameters:
  - description: <p>The object to compare with the current object. </p>
    name: obj
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>True if the specified object is equal to the current object; otherwise, false. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Determines whether the specified object is equal to the current object.</p>

    <p></p>
  syntax: public boolean equals(Object obj)
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.equals(Object)
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.equals(ShardLocation other)
  name: equals(ShardLocation other)
  nameWithType: ShardLocation.equals(ShardLocation other)
  parameters:
  - description: <p>ShardLocation to compare with. </p>
    name: other
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>True if same locations, false otherwise. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Performs equality comparison with another given ShardLocation.</p>

    <p></p>
  syntax: public boolean equals(ShardLocation other)
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.equals(ShardLocation)
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.getDatabase()
  name: getDatabase()
  nameWithType: ShardLocation.getDatabase()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getDatabase()
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.getDatabase()
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.getDataSource()
  name: getDataSource()
  nameWithType: ShardLocation.getDataSource()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>DataSource name which can be used to construct connection string Data Source property. </p>
  syntax: public String getDataSource()
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.getDataSource()
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.getPort()
  name: getPort()
  nameWithType: ShardLocation.getPort()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int getPort()
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.getPort()
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.getProtocol()
  name: getProtocol()
  nameWithType: ShardLocation.getProtocol()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.SqlProtocol?alt=com.microsoft.azure.elasticdb.shard.base.SqlProtocol&text=SqlProtocol" data-throw-if-not-resolved="False"/>
  syntax: public SqlProtocol getProtocol()
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.getProtocol()
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.getServer()
  name: getServer()
  nameWithType: ShardLocation.getServer()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getServer()
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.getServer()
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.hashCode()
  name: hashCode()
  nameWithType: ShardLocation.hashCode()
  returns:
    description: <p>Hash code for the object. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Calculates the hash code for this instance.</p>

    <p></p>
  syntax: public int hashCode()
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.hashCode()
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation.toString()
  name: toString()
  nameWithType: ShardLocation.toString()
  returns:
    description: <p>String representation of shard location. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Converts the shard location to its string representation.</p>

    <p></p>
  syntax: public String toString()
  uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation.toString()
nameWithType: ShardLocation
syntax: public class ShardLocation
type: class
uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation
fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation
name: ShardLocation
package: com.microsoft.azure.elasticdb.shard.base
summary: <p>Represents the location of a shard in terms of its server name and database name. This is used to manage connections to the shard and to support other operations on shards. As opposed to a <xref uid="com.microsoft.azure.elasticdb.shard.base.Shard" data-throw-if-not-resolved="false" data-raw-source="Shard"></xref>, a shard location is not registered with the shard map. </p>
metadata: {}
