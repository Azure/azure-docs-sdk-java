### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.applicationinsights.query.Metrics
  id: Metrics
  parent: com.microsoft.azure.applicationinsights.query
  children:
  - com.microsoft.azure.applicationinsights.query.Metrics.get(String,MetricId)
  - com.microsoft.azure.applicationinsights.query.Metrics.get(String,MetricId,String,Period,List<MetricsAggregation>,List<MetricsSegment>,Integer,String,String)
  - com.microsoft.azure.applicationinsights.query.Metrics.getAsync(String,MetricId)
  - com.microsoft.azure.applicationinsights.query.Metrics.getAsync(String,MetricId,final ServiceCallback<MetricsResult>)
  - com.microsoft.azure.applicationinsights.query.Metrics.getAsync(String,MetricId,String,Period,List<MetricsAggregation>,List<MetricsSegment>,Integer,String,String)
  - com.microsoft.azure.applicationinsights.query.Metrics.getAsync(String,MetricId,String,Period,List<MetricsAggregation>,List<MetricsSegment>,Integer,String,String,final ServiceCallback<MetricsResult>)
  - com.microsoft.azure.applicationinsights.query.Metrics.getMetadata(String)
  - com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync(String)
  - com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync(String,final ServiceCallback<Object>)
  - com.microsoft.azure.applicationinsights.query.Metrics.getMetadataWithServiceResponseAsync(String)
  - com.microsoft.azure.applicationinsights.query.Metrics.getMultiple(String,List<MetricsPostBodySchema>)
  - com.microsoft.azure.applicationinsights.query.Metrics.getMultipleAsync(String,List<MetricsPostBodySchema>)
  - com.microsoft.azure.applicationinsights.query.Metrics.getMultipleAsync(String,List<MetricsPostBodySchema>,final ServiceCallback<List<MetricsResultsItem>>)
  - com.microsoft.azure.applicationinsights.query.Metrics.getMultipleWithServiceResponseAsync(String,List<MetricsPostBodySchema>)
  - com.microsoft.azure.applicationinsights.query.Metrics.getWithServiceResponseAsync(String,MetricId)
  - com.microsoft.azure.applicationinsights.query.Metrics.getWithServiceResponseAsync(String,MetricId,String,Period,List<MetricsAggregation>,List<MetricsSegment>,Integer,String,String)
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: Metrics
  nameWithType: Metrics
  fullName: com.microsoft.azure.applicationinsights.query.Metrics
  type: Interface
  source:
    remote: &o0
      path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 29
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>An instance of this class provides access to all the operations defined in Metrics. </p>"
  syntax:
    content: public interface Metrics
- uid: com.microsoft.azure.applicationinsights.query.Metrics.get(String,MetricId)
  id: get(String,MetricId)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: get(String appId, MetricId metricId)
  nameWithType: Metrics.get(String appId, MetricId metricId)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.get(String appId, MetricId metricId)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.get*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 41
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric data. Gets metric values for a single metric.</p>\r\n<p></p>"
  syntax:
    content: public MetricsResult get(String appId, MetricId metricId)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: metricId
      type: 26c874e5
      description: "<p>ID of the metric. This is either a standard AI metric, or an application-specific custom metric. Possible values include: 'requests/count', 'requests/duration', 'requests/failed', 'users/count', 'users/authenticated', 'pageViews/count', 'pageViews/duration', 'client/processingDuration', 'client/receiveDuration', 'client/networkDuration', 'client/sendDuration', 'client/totalDuration', 'dependencies/count', 'dependencies/failed', 'dependencies/duration', 'exceptions/count', 'exceptions/browser', 'exceptions/server', 'sessions/count', 'performanceCounters/requestExecutionTime', 'performanceCounters/requestsPerSecond', 'performanceCounters/requestsInQueue', 'performanceCounters/memoryAvailableBytes', 'performanceCounters/exceptionsPerSecond', 'performanceCounters/processCpuPercentage', 'performanceCounters/processIOBytesPerSecond', 'performanceCounters/processPrivateBytes', 'performanceCounters/processorCpuPercentage', 'availabilityResults/availabilityPercentage', 'availabilityResults/duration', 'billing/telemetryCount', 'customEvents/count' </p>"
    return:
      type: 62dda1da
      description: <p>the MetricsResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 00ad4777
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.get(String,MetricId,String,Period,List<MetricsAggregation>,List<MetricsSegment>,Integer,String,String)
  id: get(String,MetricId,String,Period,List<MetricsAggregation>,List<MetricsSegment>,Integer,String,String)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: get(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter)
  nameWithType: Metrics.get(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.get(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.get*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 94
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric data. Gets metric values for a single metric.</p>\r\n<p></p>"
  syntax:
    content: public MetricsResult get(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: metricId
      type: 26c874e5
      description: "<p>ID of the metric. This is either a standard AI metric, or an application-specific custom metric. Possible values include: 'requests/count', 'requests/duration', 'requests/failed', 'users/count', 'users/authenticated', 'pageViews/count', 'pageViews/duration', 'client/processingDuration', 'client/receiveDuration', 'client/networkDuration', 'client/sendDuration', 'client/totalDuration', 'dependencies/count', 'dependencies/failed', 'dependencies/duration', 'exceptions/count', 'exceptions/browser', 'exceptions/server', 'sessions/count', 'performanceCounters/requestExecutionTime', 'performanceCounters/requestsPerSecond', 'performanceCounters/requestsInQueue', 'performanceCounters/memoryAvailableBytes', 'performanceCounters/exceptionsPerSecond', 'performanceCounters/processCpuPercentage', 'performanceCounters/processIOBytesPerSecond', 'performanceCounters/processPrivateBytes', 'performanceCounters/processorCpuPercentage', 'availabilityResults/availabilityPercentage', 'availabilityResults/duration', 'billing/telemetryCount', 'customEvents/count' </p>"
    - id: timespan
      type: "26831127"
      description: <p>The timespan over which to retrieve metric values. This is an ISO8601 time period value. If timespan is omitted, a default time range of `PT12H` ("last 12 hours") is used. The actual timespan that is queried may be adjusted by the server based. In all cases, the actual time span used for the query is included in the response. </p>
    - id: interval
      type: "6e600119"
      description: <p>The time interval to use when retrieving metric values. This is an ISO8601 duration. If interval is omitted, the metric value is aggregated across the entire timespan. If interval is supplied, the server may adjust the interval to a more appropriate size based on the timespan used for the query. In all cases, the actual interval used for the query is included in the response. </p>
    - id: aggregation
      type: dbdc7bac
      description: <p>The aggregation to use when computing the metric values. To retrieve more than one aggregation at a time, separate them with a comma. If no aggregation is specified, then the default aggregation for the metric is used. </p>
    - id: segment
      type: aa9f795c
      description: <p>The name of the dimension to segment the metric values by. This dimension must be applicable to the metric you are retrieving. To segment by more than one dimension at a time, separate them with a comma (,). In this case, the metric data will be segmented in the order the dimensions are listed in the parameter. </p>
    - id: top
      type: 08effaa0
      description: <p>The number of segments to return. This value is only valid when segment is specified. </p>
    - id: orderby
      type: "26831127"
      description: <p>The aggregation function and direction to sort the segments by. This value is only valid when segment is specified. </p>
    - id: filter
      type: "26831127"
      description: <p>An expression used to filter the results. This value should be a valid OData filter expression where the keys of each clause should be applicable dimensions for the metric you are retrieving. </p>
    return:
      type: 62dda1da
      description: <p>the MetricsResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 00ad4777
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getAsync(String,MetricId)
  id: getAsync(String,MetricId)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getAsync(String appId, MetricId metricId)
  nameWithType: Metrics.getAsync(String appId, MetricId metricId)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getAsync(String appId, MetricId metricId)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 64
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric data. Gets metric values for a single metric.</p>\r\n<p></p>"
  syntax:
    content: public Observable<MetricsResult> getAsync(String appId, MetricId metricId)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: metricId
      type: 26c874e5
      description: "<p>ID of the metric. This is either a standard AI metric, or an application-specific custom metric. Possible values include: 'requests/count', 'requests/duration', 'requests/failed', 'users/count', 'users/authenticated', 'pageViews/count', 'pageViews/duration', 'client/processingDuration', 'client/receiveDuration', 'client/networkDuration', 'client/sendDuration', 'client/totalDuration', 'dependencies/count', 'dependencies/failed', 'dependencies/duration', 'exceptions/count', 'exceptions/browser', 'exceptions/server', 'sessions/count', 'performanceCounters/requestExecutionTime', 'performanceCounters/requestsPerSecond', 'performanceCounters/requestsInQueue', 'performanceCounters/memoryAvailableBytes', 'performanceCounters/exceptionsPerSecond', 'performanceCounters/processCpuPercentage', 'performanceCounters/processIOBytesPerSecond', 'performanceCounters/processPrivateBytes', 'performanceCounters/processorCpuPercentage', 'availabilityResults/availabilityPercentage', 'availabilityResults/duration', 'billing/telemetryCount', 'customEvents/count' </p>"
    return:
      type: 989302d3
      description: <p>the observable to the MetricsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getAsync(String,MetricId,final ServiceCallback<MetricsResult>)
  id: getAsync(String,MetricId,final ServiceCallback<MetricsResult>)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getAsync(String appId, MetricId metricId, final ServiceCallback<MetricsResult> serviceCallback)
  nameWithType: Metrics.getAsync(String appId, MetricId metricId, final ServiceCallback<MetricsResult> serviceCallback)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getAsync(String appId, MetricId metricId, final ServiceCallback<MetricsResult> serviceCallback)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 53
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric data. Gets metric values for a single metric.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<MetricsResult> getAsync(String appId, MetricId metricId, final ServiceCallback<MetricsResult> serviceCallback)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: metricId
      type: 26c874e5
      description: "<p>ID of the metric. This is either a standard AI metric, or an application-specific custom metric. Possible values include: 'requests/count', 'requests/duration', 'requests/failed', 'users/count', 'users/authenticated', 'pageViews/count', 'pageViews/duration', 'client/processingDuration', 'client/receiveDuration', 'client/networkDuration', 'client/sendDuration', 'client/totalDuration', 'dependencies/count', 'dependencies/failed', 'dependencies/duration', 'exceptions/count', 'exceptions/browser', 'exceptions/server', 'sessions/count', 'performanceCounters/requestExecutionTime', 'performanceCounters/requestsPerSecond', 'performanceCounters/requestsInQueue', 'performanceCounters/memoryAvailableBytes', 'performanceCounters/exceptionsPerSecond', 'performanceCounters/processCpuPercentage', 'performanceCounters/processIOBytesPerSecond', 'performanceCounters/processPrivateBytes', 'performanceCounters/processorCpuPercentage', 'availabilityResults/availabilityPercentage', 'availabilityResults/duration', 'billing/telemetryCount', 'customEvents/count' </p>"
    - id: serviceCallback
      type: aee156b4
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 9a777649
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getAsync(String,MetricId,String,Period,List<MetricsAggregation>,List<MetricsSegment>,Integer,String,String)
  id: getAsync(String,MetricId,String,Period,List<MetricsAggregation>,List<MetricsSegment>,Integer,String,String)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getAsync(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter)
  nameWithType: Metrics.getAsync(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getAsync(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 131
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric data. Gets metric values for a single metric.</p>\r\n<p></p>"
  syntax:
    content: public Observable<MetricsResult> getAsync(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: metricId
      type: 26c874e5
      description: "<p>ID of the metric. This is either a standard AI metric, or an application-specific custom metric. Possible values include: 'requests/count', 'requests/duration', 'requests/failed', 'users/count', 'users/authenticated', 'pageViews/count', 'pageViews/duration', 'client/processingDuration', 'client/receiveDuration', 'client/networkDuration', 'client/sendDuration', 'client/totalDuration', 'dependencies/count', 'dependencies/failed', 'dependencies/duration', 'exceptions/count', 'exceptions/browser', 'exceptions/server', 'sessions/count', 'performanceCounters/requestExecutionTime', 'performanceCounters/requestsPerSecond', 'performanceCounters/requestsInQueue', 'performanceCounters/memoryAvailableBytes', 'performanceCounters/exceptionsPerSecond', 'performanceCounters/processCpuPercentage', 'performanceCounters/processIOBytesPerSecond', 'performanceCounters/processPrivateBytes', 'performanceCounters/processorCpuPercentage', 'availabilityResults/availabilityPercentage', 'availabilityResults/duration', 'billing/telemetryCount', 'customEvents/count' </p>"
    - id: timespan
      type: "26831127"
      description: <p>The timespan over which to retrieve metric values. This is an ISO8601 time period value. If timespan is omitted, a default time range of `PT12H` ("last 12 hours") is used. The actual timespan that is queried may be adjusted by the server based. In all cases, the actual time span used for the query is included in the response. </p>
    - id: interval
      type: "6e600119"
      description: <p>The time interval to use when retrieving metric values. This is an ISO8601 duration. If interval is omitted, the metric value is aggregated across the entire timespan. If interval is supplied, the server may adjust the interval to a more appropriate size based on the timespan used for the query. In all cases, the actual interval used for the query is included in the response. </p>
    - id: aggregation
      type: dbdc7bac
      description: <p>The aggregation to use when computing the metric values. To retrieve more than one aggregation at a time, separate them with a comma. If no aggregation is specified, then the default aggregation for the metric is used. </p>
    - id: segment
      type: aa9f795c
      description: <p>The name of the dimension to segment the metric values by. This dimension must be applicable to the metric you are retrieving. To segment by more than one dimension at a time, separate them with a comma (,). In this case, the metric data will be segmented in the order the dimensions are listed in the parameter. </p>
    - id: top
      type: 08effaa0
      description: <p>The number of segments to return. This value is only valid when segment is specified. </p>
    - id: orderby
      type: "26831127"
      description: <p>The aggregation function and direction to sort the segments by. This value is only valid when segment is specified. </p>
    - id: filter
      type: "26831127"
      description: <p>An expression used to filter the results. This value should be a valid OData filter expression where the keys of each clause should be applicable dimensions for the metric you are retrieving. </p>
    return:
      type: 989302d3
      description: <p>the observable to the MetricsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getAsync(String,MetricId,String,Period,List<MetricsAggregation>,List<MetricsSegment>,Integer,String,String,final ServiceCallback<MetricsResult>)
  id: getAsync(String,MetricId,String,Period,List<MetricsAggregation>,List<MetricsSegment>,Integer,String,String,final ServiceCallback<MetricsResult>)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getAsync(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter, final ServiceCallback<MetricsResult> serviceCallback)
  nameWithType: Metrics.getAsync(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter, final ServiceCallback<MetricsResult> serviceCallback)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getAsync(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter, final ServiceCallback<MetricsResult> serviceCallback)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 113
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric data. Gets metric values for a single metric.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<MetricsResult> getAsync(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter, final ServiceCallback<MetricsResult> serviceCallback)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: metricId
      type: 26c874e5
      description: "<p>ID of the metric. This is either a standard AI metric, or an application-specific custom metric. Possible values include: 'requests/count', 'requests/duration', 'requests/failed', 'users/count', 'users/authenticated', 'pageViews/count', 'pageViews/duration', 'client/processingDuration', 'client/receiveDuration', 'client/networkDuration', 'client/sendDuration', 'client/totalDuration', 'dependencies/count', 'dependencies/failed', 'dependencies/duration', 'exceptions/count', 'exceptions/browser', 'exceptions/server', 'sessions/count', 'performanceCounters/requestExecutionTime', 'performanceCounters/requestsPerSecond', 'performanceCounters/requestsInQueue', 'performanceCounters/memoryAvailableBytes', 'performanceCounters/exceptionsPerSecond', 'performanceCounters/processCpuPercentage', 'performanceCounters/processIOBytesPerSecond', 'performanceCounters/processPrivateBytes', 'performanceCounters/processorCpuPercentage', 'availabilityResults/availabilityPercentage', 'availabilityResults/duration', 'billing/telemetryCount', 'customEvents/count' </p>"
    - id: timespan
      type: "26831127"
      description: <p>The timespan over which to retrieve metric values. This is an ISO8601 time period value. If timespan is omitted, a default time range of `PT12H` ("last 12 hours") is used. The actual timespan that is queried may be adjusted by the server based. In all cases, the actual time span used for the query is included in the response. </p>
    - id: interval
      type: "6e600119"
      description: <p>The time interval to use when retrieving metric values. This is an ISO8601 duration. If interval is omitted, the metric value is aggregated across the entire timespan. If interval is supplied, the server may adjust the interval to a more appropriate size based on the timespan used for the query. In all cases, the actual interval used for the query is included in the response. </p>
    - id: aggregation
      type: dbdc7bac
      description: <p>The aggregation to use when computing the metric values. To retrieve more than one aggregation at a time, separate them with a comma. If no aggregation is specified, then the default aggregation for the metric is used. </p>
    - id: segment
      type: aa9f795c
      description: <p>The name of the dimension to segment the metric values by. This dimension must be applicable to the metric you are retrieving. To segment by more than one dimension at a time, separate them with a comma (,). In this case, the metric data will be segmented in the order the dimensions are listed in the parameter. </p>
    - id: top
      type: 08effaa0
      description: <p>The number of segments to return. This value is only valid when segment is specified. </p>
    - id: orderby
      type: "26831127"
      description: <p>The aggregation function and direction to sort the segments by. This value is only valid when segment is specified. </p>
    - id: filter
      type: "26831127"
      description: <p>An expression used to filter the results. This value should be a valid OData filter expression where the keys of each clause should be applicable dimensions for the metric you are retrieving. </p>
    - id: serviceCallback
      type: aee156b4
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 9a777649
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMetadata(String)
  id: getMetadata(String)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getMetadata(String appId)
  nameWithType: Metrics.getMetadata(String appId)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMetadata(String appId)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getMetadata*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 208
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric metatadata. Gets metadata describing the available metrics.</p>\r\n<p></p>"
  syntax:
    content: public Object getMetadata(String appId)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    return:
      type: "79317049"
      description: <p>the Object object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 00ad4777
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync(String)
  id: getMetadataAsync(String)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getMetadataAsync(String appId)
  nameWithType: Metrics.getMetadataAsync(String appId)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync(String appId)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 229
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric metatadata. Gets metadata describing the available metrics.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Object> getMetadataAsync(String appId)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    return:
      type: f8b3e42a
      description: <p>the observable to the Object object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync(String,final ServiceCallback<Object>)
  id: getMetadataAsync(String,final ServiceCallback<Object>)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getMetadataAsync(String appId, final ServiceCallback<Object> serviceCallback)
  nameWithType: Metrics.getMetadataAsync(String appId, final ServiceCallback<Object> serviceCallback)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync(String appId, final ServiceCallback<Object> serviceCallback)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 219
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric metatadata. Gets metadata describing the available metrics.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Object> getMetadataAsync(String appId, final ServiceCallback<Object> serviceCallback)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: serviceCallback
      type: 35d54333
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 3eea0261
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataWithServiceResponseAsync(String)
  id: getMetadataWithServiceResponseAsync(String)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getMetadataWithServiceResponseAsync(String appId)
  nameWithType: Metrics.getMetadataWithServiceResponseAsync(String appId)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataWithServiceResponseAsync(String appId)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 239
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric metatadata. Gets metadata describing the available metrics.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Object>> getMetadataWithServiceResponseAsync(String appId)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    return:
      type: 615d9660
      description: <p>the observable to the Object object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMultiple(String,List<MetricsPostBodySchema>)
  id: getMultiple(String,List<MetricsPostBodySchema>)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getMultiple(String appId, List<MetricsPostBodySchema> body)
  nameWithType: Metrics.getMultiple(String appId, List<MetricsPostBodySchema> body)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMultiple(String appId, List<MetricsPostBodySchema> body)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getMultiple*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 162
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric data. Gets metric values for multiple metrics.</p>\r\n<p></p>"
  syntax:
    content: public List<MetricsResultsItem> getMultiple(String appId, List<MetricsPostBodySchema> body)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: body
      type: 04292872
      description: <p>The batched metrics query. </p>
    return:
      type: 2a99fa00
      description: <p>the List&lt;MetricsResultsItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 00ad4777
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleAsync(String,List<MetricsPostBodySchema>)
  id: getMultipleAsync(String,List<MetricsPostBodySchema>)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getMultipleAsync(String appId, List<MetricsPostBodySchema> body)
  nameWithType: Metrics.getMultipleAsync(String appId, List<MetricsPostBodySchema> body)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleAsync(String appId, List<MetricsPostBodySchema> body)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 185
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric data. Gets metric values for multiple metrics.</p>\r\n<p></p>"
  syntax:
    content: public Observable<List<MetricsResultsItem>> getMultipleAsync(String appId, List<MetricsPostBodySchema> body)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: body
      type: 04292872
      description: <p>The batched metrics query. </p>
    return:
      type: 952dd1f7
      description: <p>the observable to the List&lt;MetricsResultsItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleAsync(String,List<MetricsPostBodySchema>,final ServiceCallback<List<MetricsResultsItem>>)
  id: getMultipleAsync(String,List<MetricsPostBodySchema>,final ServiceCallback<List<MetricsResultsItem>>)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getMultipleAsync(String appId, List<MetricsPostBodySchema> body, final ServiceCallback<List<MetricsResultsItem>> serviceCallback)
  nameWithType: Metrics.getMultipleAsync(String appId, List<MetricsPostBodySchema> body, final ServiceCallback<List<MetricsResultsItem>> serviceCallback)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleAsync(String appId, List<MetricsPostBodySchema> body, final ServiceCallback<List<MetricsResultsItem>> serviceCallback)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 174
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric data. Gets metric values for multiple metrics.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<MetricsResultsItem>> getMultipleAsync(String appId, List<MetricsPostBodySchema> body, final ServiceCallback<List<MetricsResultsItem>> serviceCallback)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: body
      type: 04292872
      description: <p>The batched metrics query. </p>
    - id: serviceCallback
      type: f47f2c2d
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8da1f26e
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleWithServiceResponseAsync(String,List<MetricsPostBodySchema>)
  id: getMultipleWithServiceResponseAsync(String,List<MetricsPostBodySchema>)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getMultipleWithServiceResponseAsync(String appId, List<MetricsPostBodySchema> body)
  nameWithType: Metrics.getMultipleWithServiceResponseAsync(String appId, List<MetricsPostBodySchema> body)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleWithServiceResponseAsync(String appId, List<MetricsPostBodySchema> body)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 196
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric data. Gets metric values for multiple metrics.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<MetricsResultsItem>>> getMultipleWithServiceResponseAsync(String appId, List<MetricsPostBodySchema> body)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: body
      type: 04292872
      description: <p>The batched metrics query. </p>
    return:
      type: dfbff1a5
      description: <p>the observable to the List&lt;MetricsResultsItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getWithServiceResponseAsync(String,MetricId)
  id: getWithServiceResponseAsync(String,MetricId)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String appId, MetricId metricId)
  nameWithType: Metrics.getWithServiceResponseAsync(String appId, MetricId metricId)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getWithServiceResponseAsync(String appId, MetricId metricId)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 75
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric data. Gets metric values for a single metric.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<MetricsResult>> getWithServiceResponseAsync(String appId, MetricId metricId)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: metricId
      type: 26c874e5
      description: "<p>ID of the metric. This is either a standard AI metric, or an application-specific custom metric. Possible values include: 'requests/count', 'requests/duration', 'requests/failed', 'users/count', 'users/authenticated', 'pageViews/count', 'pageViews/duration', 'client/processingDuration', 'client/receiveDuration', 'client/networkDuration', 'client/sendDuration', 'client/totalDuration', 'dependencies/count', 'dependencies/failed', 'dependencies/duration', 'exceptions/count', 'exceptions/browser', 'exceptions/server', 'sessions/count', 'performanceCounters/requestExecutionTime', 'performanceCounters/requestsPerSecond', 'performanceCounters/requestsInQueue', 'performanceCounters/memoryAvailableBytes', 'performanceCounters/exceptionsPerSecond', 'performanceCounters/processCpuPercentage', 'performanceCounters/processIOBytesPerSecond', 'performanceCounters/processPrivateBytes', 'performanceCounters/processorCpuPercentage', 'availabilityResults/availabilityPercentage', 'availabilityResults/duration', 'billing/telemetryCount', 'customEvents/count' </p>"
    return:
      type: a63ab609
      description: <p>the observable to the MetricsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getWithServiceResponseAsync(String,MetricId,String,Period,List<MetricsAggregation>,List<MetricsSegment>,Integer,String,String)
  id: getWithServiceResponseAsync(String,MetricId,String,Period,List<MetricsAggregation>,List<MetricsSegment>,Integer,String,String)
  parent: com.microsoft.azure.applicationinsights.query.Metrics
  href: com.microsoft.azure.applicationinsights.query.Metrics.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter)
  nameWithType: Metrics.getWithServiceResponseAsync(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter)
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getWithServiceResponseAsync(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter)
  overload: com.microsoft.azure.applicationinsights.query.Metrics.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/applicationinsights/microsoft-azure-applicationinsights-query/src/main/java/com/microsoft/azure/applicationinsights/query/Metrics.java
    startLine: 149
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Retrieve metric data. Gets metric values for a single metric.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<MetricsResult>> getWithServiceResponseAsync(String appId, MetricId metricId, String timespan, Period interval, List<MetricsAggregation> aggregation, List<MetricsSegment> segment, Integer top, String orderby, String filter)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: metricId
      type: 26c874e5
      description: "<p>ID of the metric. This is either a standard AI metric, or an application-specific custom metric. Possible values include: 'requests/count', 'requests/duration', 'requests/failed', 'users/count', 'users/authenticated', 'pageViews/count', 'pageViews/duration', 'client/processingDuration', 'client/receiveDuration', 'client/networkDuration', 'client/sendDuration', 'client/totalDuration', 'dependencies/count', 'dependencies/failed', 'dependencies/duration', 'exceptions/count', 'exceptions/browser', 'exceptions/server', 'sessions/count', 'performanceCounters/requestExecutionTime', 'performanceCounters/requestsPerSecond', 'performanceCounters/requestsInQueue', 'performanceCounters/memoryAvailableBytes', 'performanceCounters/exceptionsPerSecond', 'performanceCounters/processCpuPercentage', 'performanceCounters/processIOBytesPerSecond', 'performanceCounters/processPrivateBytes', 'performanceCounters/processorCpuPercentage', 'availabilityResults/availabilityPercentage', 'availabilityResults/duration', 'billing/telemetryCount', 'customEvents/count' </p>"
    - id: timespan
      type: "26831127"
      description: <p>The timespan over which to retrieve metric values. This is an ISO8601 time period value. If timespan is omitted, a default time range of `PT12H` ("last 12 hours") is used. The actual timespan that is queried may be adjusted by the server based. In all cases, the actual time span used for the query is included in the response. </p>
    - id: interval
      type: "6e600119"
      description: <p>The time interval to use when retrieving metric values. This is an ISO8601 duration. If interval is omitted, the metric value is aggregated across the entire timespan. If interval is supplied, the server may adjust the interval to a more appropriate size based on the timespan used for the query. In all cases, the actual interval used for the query is included in the response. </p>
    - id: aggregation
      type: dbdc7bac
      description: <p>The aggregation to use when computing the metric values. To retrieve more than one aggregation at a time, separate them with a comma. If no aggregation is specified, then the default aggregation for the metric is used. </p>
    - id: segment
      type: aa9f795c
      description: <p>The name of the dimension to segment the metric values by. This dimension must be applicable to the metric you are retrieving. To segment by more than one dimension at a time, separate them with a comma (,). In this case, the metric data will be segmented in the order the dimensions are listed in the parameter. </p>
    - id: top
      type: 08effaa0
      description: <p>The number of segments to return. This value is only valid when segment is specified. </p>
    - id: orderby
      type: "26831127"
      description: <p>The aggregation function and direction to sort the segments by. This value is only valid when segment is specified. </p>
    - id: filter
      type: "26831127"
      description: <p>An expression used to filter the results. This value should be a valid OData filter expression where the keys of each clause should be applicable dimensions for the metric you are retrieving. </p>
    return:
      type: a63ab609
      description: <p>the observable to the MetricsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 00ad4777
  spec.java:
  - name: ErrorResponseException
    fullName: ErrorResponseException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 26c874e5
  spec.java:
  - name: MetricId
    fullName: MetricId
- uid: 62dda1da
  spec.java:
  - name: MetricsResult
    fullName: MetricsResult
- uid: com.microsoft.azure.applicationinsights.query.Metrics.get*
  name: get
  nameWithType: Metrics.get
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.get
  package: com.microsoft.azure.applicationinsights.query
- uid: aee156b4
  spec.java:
  - name: final ServiceCallback<MetricsResult>
    fullName: final ServiceCallback<MetricsResult>
- uid: 9a777649
  spec.java:
  - name: ServiceFuture<MetricsResult>
    fullName: ServiceFuture<MetricsResult>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getAsync*
  name: getAsync
  nameWithType: Metrics.getAsync
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getAsync
  package: com.microsoft.azure.applicationinsights.query
- uid: 989302d3
  spec.java:
  - name: Observable<MetricsResult>
    fullName: Observable<MetricsResult>
- uid: a63ab609
  spec.java:
  - name: Observable<ServiceResponse<MetricsResult>>
    fullName: Observable<ServiceResponse<MetricsResult>>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: Metrics.getWithServiceResponseAsync
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getWithServiceResponseAsync
  package: com.microsoft.azure.applicationinsights.query
- uid: "6e600119"
  spec.java:
  - name: Period
    fullName: Period
- uid: dbdc7bac
  spec.java:
  - name: List<MetricsAggregation>
    fullName: List<MetricsAggregation>
- uid: aa9f795c
  spec.java:
  - name: List<MetricsSegment>
    fullName: List<MetricsSegment>
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: 04292872
  spec.java:
  - name: List<MetricsPostBodySchema>
    fullName: List<MetricsPostBodySchema>
- uid: 2a99fa00
  spec.java:
  - name: List<MetricsResultsItem>
    fullName: List<MetricsResultsItem>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMultiple*
  name: getMultiple
  nameWithType: Metrics.getMultiple
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMultiple
  package: com.microsoft.azure.applicationinsights.query
- uid: f47f2c2d
  spec.java:
  - name: final ServiceCallback<List<MetricsResultsItem>>
    fullName: final ServiceCallback<List<MetricsResultsItem>>
- uid: 8da1f26e
  spec.java:
  - name: ServiceFuture<List<MetricsResultsItem>>
    fullName: ServiceFuture<List<MetricsResultsItem>>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleAsync*
  name: getMultipleAsync
  nameWithType: Metrics.getMultipleAsync
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleAsync
  package: com.microsoft.azure.applicationinsights.query
- uid: 952dd1f7
  spec.java:
  - name: Observable<List<MetricsResultsItem>>
    fullName: Observable<List<MetricsResultsItem>>
- uid: dfbff1a5
  spec.java:
  - name: Observable<ServiceResponse<List<MetricsResultsItem>>>
    fullName: Observable<ServiceResponse<List<MetricsResultsItem>>>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleWithServiceResponseAsync*
  name: getMultipleWithServiceResponseAsync
  nameWithType: Metrics.getMultipleWithServiceResponseAsync
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMultipleWithServiceResponseAsync
  package: com.microsoft.azure.applicationinsights.query
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMetadata*
  name: getMetadata
  nameWithType: Metrics.getMetadata
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMetadata
  package: com.microsoft.azure.applicationinsights.query
- uid: 35d54333
  spec.java:
  - name: final ServiceCallback<Object>
    fullName: final ServiceCallback<Object>
- uid: 3eea0261
  spec.java:
  - name: ServiceFuture<Object>
    fullName: ServiceFuture<Object>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync*
  name: getMetadataAsync
  nameWithType: Metrics.getMetadataAsync
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync
  package: com.microsoft.azure.applicationinsights.query
- uid: f8b3e42a
  spec.java:
  - name: Observable<Object>
    fullName: Observable<Object>
- uid: 615d9660
  spec.java:
  - name: Observable<ServiceResponse<Object>>
    fullName: Observable<ServiceResponse<Object>>
- uid: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataWithServiceResponseAsync*
  name: getMetadataWithServiceResponseAsync
  nameWithType: Metrics.getMetadataWithServiceResponseAsync
  fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataWithServiceResponseAsync
  package: com.microsoft.azure.applicationinsights.query
