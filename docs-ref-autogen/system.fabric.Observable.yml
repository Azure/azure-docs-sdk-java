### YamlMime:JavaType
constructors:
- fullName: system.fabric.Observable<T>.Observable()
  name: Observable()
  nameWithType: Observable<T>.Observable()
  summary: <p>Instantiates an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.Observable"></xref> object. </p>
  syntax: public Observable()
  uid: system.fabric.Observable.Observable()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: system.fabric.Observable<T>.addObserver(Observer<? super T> observer)
  name: addObserver(Observer<? super T> observer)
  nameWithType: Observable<T>.addObserver(Observer<? super T> observer)
  parameters:
  - description: <p>Takes an <xref uid="system.fabric.Observer" data-throw-if-not-resolved="false" data-raw-source="system.fabric.Observer"></xref> object as parameter. </p>
    name: observer
    type: <xref href="system.fabric.Observer?alt=system.fabric.Observer&text=Observer" data-throw-if-not-resolved="False"/>&lt;? super T&gt;
  summary: <p>Adds an observer to the set of observers for this object. </p>
  syntax: public void addObserver(Observer<? super T> observer)
  uid: system.fabric.Observable.addObserver(Observer<? super T>)
- fullName: system.fabric.Observable<T>.clearObservers()
  name: clearObservers()
  nameWithType: Observable<T>.clearObservers()
  summary: <p>Removes all the observers of this class. </p>
  syntax: public void clearObservers()
  uid: system.fabric.Observable.clearObservers()
- fullName: system.fabric.Observable<T>.countObservers()
  name: countObservers()
  nameWithType: Observable<T>.countObservers()
  returns:
    description: <p>Returns integer count of all the observers. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: <p>Number of observers of this object. </p>
  syntax: public int countObservers()
  uid: system.fabric.Observable.countObservers()
- fullName: system.fabric.Observable<T>.getAllObservers()
  name: getAllObservers()
  nameWithType: Observable<T>.getAllObservers()
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.List"></xref> of <xref uid="system.fabric.Observer" data-throw-if-not-resolved="false" data-raw-source="system.fabric.Observer"></xref></p>
    type: List&lt;<xref href="system.fabric.Observer?alt=system.fabric.Observer&text=Observer" data-throw-if-not-resolved="False"/>&lt;? super T&gt;&gt;
  summary: <p>Lists all the observers of this object. </p>
  syntax: public List<Observer<? super T>> getAllObservers()
  uid: system.fabric.Observable.getAllObservers()
- fullName: system.fabric.Observable<T>.notifyObservers(final Object sender)
  name: notifyObservers(final Object sender)
  nameWithType: Observable<T>.notifyObservers(final Object sender)
  parameters:
  - description: <p>sender object. </p>
    name: sender
    type: <xref href="final+Object?alt=final+Object&text=final+Object" data-throw-if-not-resolved="False"/>
  summary: <p>Notify all of its observers </p>
  syntax: public void notifyObservers(final Object sender)
  uid: system.fabric.Observable.notifyObservers(final Object)
- fullName: system.fabric.Observable<T>.notifyObservers(final Object sender, final T value)
  name: notifyObservers(final Object sender, final T value)
  nameWithType: Observable<T>.notifyObservers(final Object sender, final T value)
  parameters:
  - description: <p>sender object. </p>
    name: sender
    type: <xref href="final+Object?alt=final+Object&text=final+Object" data-throw-if-not-resolved="False"/>
  - description: <p>value to notify with. </p>
    name: value
    type: <xref href="final+T?alt=final+T&text=final+T" data-throw-if-not-resolved="False"/>
  summary: <p>Notify all of its observers </p>
  syntax: public void notifyObservers(final Object sender, final T value)
  uid: system.fabric.Observable.notifyObservers(final Object,final T)
- fullName: system.fabric.Observable<T>.removeObserver(Observer<? super T> observable)
  name: removeObserver(Observer<? super T> observable)
  nameWithType: Observable<T>.removeObserver(Observer<? super T> observable)
  parameters:
  - description: >-
      <p>

        <xref uid="system.fabric.Observer" data-throw-if-not-resolved="false" data-raw-source="system.fabric.Observer"></xref> object as parameter. </p>
    name: observable
    type: <xref href="system.fabric.Observer?alt=system.fabric.Observer&text=Observer" data-throw-if-not-resolved="False"/>&lt;? super T&gt;
  summary: <p>Removes an observer from the set of observers of this object. </p>
  syntax: public void removeObserver(Observer<? super T> observable)
  uid: system.fabric.Observable.removeObserver(Observer<? super T>)
nameWithType: Observable<T>
syntax: public class Observable<T>
type: class
typeParameters:
- description: <p>Takes a template parameter T. </p>
  name: T
uid: system.fabric.Observable
fullName: system.fabric.Observable<T>
name: Observable<T>
package: system.fabric
summary: <p>This class represents an observable object </p>
metadata: {}
