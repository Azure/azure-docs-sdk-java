### YamlMime:ManagedReference
items:
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
  id: "HttpResponseDecodeData"
  parent: "com.azure.core.implementation.serializer"
  children:
  - "com.azure.core.implementation.serializer.HttpResponseDecodeData.getExpectedStatusCodes()"
  - "com.azure.core.implementation.serializer.HttpResponseDecodeData.getHeadersType()"
  - "com.azure.core.implementation.serializer.HttpResponseDecodeData.getReturnType()"
  - "com.azure.core.implementation.serializer.HttpResponseDecodeData.getReturnValueWireType()"
  - "com.azure.core.implementation.serializer.HttpResponseDecodeData.getUnexpectedException(int)"
  langs:
  - "java"
  name: "HttpResponseDecodeData"
  nameWithType: "HttpResponseDecodeData"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
  type: "Interface"
  package: "com.azure.core.implementation.serializer"
  summary: "Type representing necessary information required to decode a specific Http response."
  syntax:
    content: "public interface HttpResponseDecodeData"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getExpectedStatusCodes()"
  id: "getExpectedStatusCodes()"
  parent: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
  langs:
  - "java"
  name: "getExpectedStatusCodes()"
  nameWithType: "HttpResponseDecodeData.getExpectedStatusCodes()"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getExpectedStatusCodes()"
  overload: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getExpectedStatusCodes*"
  type: "Method"
  package: "com.azure.core.implementation.serializer"
  summary: "Get the expected HTTP response status codes. 1. If the returned int\\[\\] is null, then all 2XX status codes are considered as success code. 2. If the returned int\\[\\] is not-null, only the codes in the array are considered as success code."
  syntax:
    content: "public default int[] getExpectedStatusCodes()"
    return:
      type: "int[]"
      description: "the expected HTTP response status codes"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getHeadersType()"
  id: "getHeadersType()"
  parent: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
  langs:
  - "java"
  name: "getHeadersType()"
  nameWithType: "HttpResponseDecodeData.getHeadersType()"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getHeadersType()"
  overload: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getHeadersType*"
  type: "Method"
  package: "com.azure.core.implementation.serializer"
  summary: "Get the type of the entity to be used to deserialize 'Matching' headers. The 'header entity' is optional and client can choose it when a strongly typed model is needed for headers. 'Matching' headers are the HTTP response headers those with: 1. header names same as name of a properties in the 'header entity'. 2. header names start with value of <xref uid=\"com.azure.core.annotation.HeaderCollection\" data-throw-if-not-resolved=\"false\">HeaderCollection</xref> annotation applied to the properties in the 'header entity'."
  syntax:
    content: "public default Type getHeadersType()"
    return:
      type: "java.lang.reflect.Type"
      description: "headers entity type"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getReturnType()"
  id: "getReturnType()"
  parent: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
  langs:
  - "java"
  name: "getReturnType()"
  nameWithType: "HttpResponseDecodeData.getReturnType()"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getReturnType()"
  overload: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getReturnType*"
  type: "Method"
  package: "com.azure.core.implementation.serializer"
  summary: "Get the type of the entity to deserialize the body."
  syntax:
    content: "public abstract Type getReturnType()"
    return:
      type: "java.lang.reflect.Type"
      description: "the return type"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getReturnValueWireType()"
  id: "getReturnValueWireType()"
  parent: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
  langs:
  - "java"
  name: "getReturnValueWireType()"
  nameWithType: "HttpResponseDecodeData.getReturnValueWireType()"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getReturnValueWireType()"
  overload: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getReturnValueWireType*"
  type: "Method"
  package: "com.azure.core.implementation.serializer"
  summary: "Get the type of the 'entity' in HTTP response content. When this method return non-null `java.lang.reflect.Type` then the raw HTTP response content will need to parsed to this `java.lang.reflect.Type` then converted to actual `returnType`."
  syntax:
    content: "public default Type getReturnValueWireType()"
    return:
      type: "java.lang.reflect.Type"
      description: "the type that the raw HTTP response content will be sent as"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getUnexpectedException(int)"
  id: "getUnexpectedException(int)"
  parent: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
  langs:
  - "java"
  name: "getUnexpectedException(int code)"
  nameWithType: "HttpResponseDecodeData.getUnexpectedException(int code)"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getUnexpectedException(int code)"
  overload: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getUnexpectedException*"
  type: "Method"
  package: "com.azure.core.implementation.serializer"
  summary: "Get the <xref uid=\"com.azure.core.implementation.http.UnexpectedExceptionInformation\" data-throw-if-not-resolved=\"false\">UnexpectedExceptionInformation</xref> that will be used to generate a RestException if the HTTP response status code is not one of the expected status codes."
  syntax:
    content: "public default UnexpectedExceptionInformation getUnexpectedException(int code)"
    parameters:
    - id: "code"
      type: "int"
      description: "Exception HTTP status code return from a REST API."
    return:
      type: "com.azure.core.implementation.http.UnexpectedExceptionInformation"
      description: "the UnexpectedExceptionInformation to generate an exception to throw or return."
references:
- uid: "java.lang.reflect.Type"
  spec.java:
  - uid: "java.lang.reflect.Type"
    name: "Type"
    fullName: "java.lang.reflect.Type"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getReturnType*"
  name: "getReturnType"
  nameWithType: "HttpResponseDecodeData.getReturnType"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getReturnType"
  package: "com.azure.core.implementation.serializer"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getHeadersType*"
  name: "getHeadersType"
  nameWithType: "HttpResponseDecodeData.getHeadersType"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getHeadersType"
  package: "com.azure.core.implementation.serializer"
- uid: "int[]"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getExpectedStatusCodes*"
  name: "getExpectedStatusCodes"
  nameWithType: "HttpResponseDecodeData.getExpectedStatusCodes"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getExpectedStatusCodes"
  package: "com.azure.core.implementation.serializer"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getReturnValueWireType*"
  name: "getReturnValueWireType"
  nameWithType: "HttpResponseDecodeData.getReturnValueWireType"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getReturnValueWireType"
  package: "com.azure.core.implementation.serializer"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.core.implementation.http.UnexpectedExceptionInformation"
  name: "UnexpectedExceptionInformation"
  nameWithType: "UnexpectedExceptionInformation"
  fullName: "com.azure.core.implementation.http.UnexpectedExceptionInformation"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getUnexpectedException*"
  name: "getUnexpectedException"
  nameWithType: "HttpResponseDecodeData.getUnexpectedException"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getUnexpectedException"
  package: "com.azure.core.implementation.serializer"
