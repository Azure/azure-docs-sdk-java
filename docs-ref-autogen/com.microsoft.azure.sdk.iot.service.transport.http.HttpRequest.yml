### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest"
fullName: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest"
name: "HttpRequest"
nameWithType: "HttpRequest"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class HttpRequest"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.HttpRequest()"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.HttpRequest()"
  name: "HttpRequest()"
  nameWithType: "HttpRequest.HttpRequest()"
  modifiers:
  - "protected"
  syntax: "protected HttpRequest()"
- uid: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.HttpRequest(java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,byte[])"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.HttpRequest(URL url, HttpMethod method, byte[] body)"
  name: "HttpRequest(URL url, HttpMethod method, byte[] body)"
  nameWithType: "HttpRequest.HttpRequest(URL url, HttpMethod method, byte[] body)"
  summary: "Constructor."
  parameters:
  - description: "The URL for the request."
    name: "url"
    type: "<xref href=\"java.net.URL?alt=java.net.URL&text=URL\" data-throw-if-not-resolved=\"False\" />"
  - description: "The HTTPS request method (i.e. GET)."
    name: "method"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod?alt=com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod&text=HttpMethod\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request body. Must be an array of size 0 if the request method is GET or DELETE."
    name: "body"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public HttpRequest(URL url, HttpMethod method, byte[] body)"
  exceptions:
  - description: "This exception thrown if an IOException occurs\n in setting up the HTTPS connection."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Constructor. Takes a URL as an argument and returns an HTTPS request that is ready to be sent."
- uid: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.HttpRequest(java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,byte[],java.net.Proxy)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.HttpRequest(URL url, HttpMethod method, byte[] body, Proxy proxy)"
  name: "HttpRequest(URL url, HttpMethod method, byte[] body, Proxy proxy)"
  nameWithType: "HttpRequest.HttpRequest(URL url, HttpMethod method, byte[] body, Proxy proxy)"
  summary: "Constructor."
  parameters:
  - description: "The URL for the request."
    name: "url"
    type: "<xref href=\"java.net.URL?alt=java.net.URL&text=URL\" data-throw-if-not-resolved=\"False\" />"
  - description: "The HTTPS request method (i.e. GET)."
    name: "method"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod?alt=com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod&text=HttpMethod\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request body. Must be an array of size 0 if the request method is GET or DELETE."
    name: "body"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The proxy to send the request through. May be null if no proxy should be used"
    name: "proxy"
    type: "<xref href=\"java.net.Proxy?alt=java.net.Proxy&text=Proxy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpRequest(URL url, HttpMethod method, byte[] body, Proxy proxy)"
  exceptions:
  - description: "This exception thrown if an IOException occurs\n in setting up the HTTPS connection."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Constructor. Takes a URL as an argument and returns an HTTPS request that is ready to be sent through an optional proxy."
fields:
- uid: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.connection"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.connection"
  name: "connection"
  nameWithType: "HttpRequest.connection"
  summary: "The underlying HTTPS connection stream."
  modifiers:
  - "protected"
  - "final"
  field:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection?alt=com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection&text=HttpConnection\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final HttpConnection connection"
  desc: "The underlying HTTPS connection stream."
methods:
- uid: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.send()"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.send()"
  name: "send()"
  nameWithType: "HttpRequest.send()"
  summary: "Executes the HTTPS request."
  syntax: "public HttpResponse send()"
  exceptions:
  - description: "This exception thrown if the connection could not be\n established, or the input/output streams could not be accessed."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Executes the HTTPS request."
  returns:
    description: "The HTTPS response."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.http.HttpResponse?alt=com.microsoft.azure.sdk.iot.service.transport.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.setConnectTimeoutMillis(int)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.setConnectTimeoutMillis(int timeout)"
  name: "setConnectTimeoutMillis(int timeout)"
  nameWithType: "HttpRequest.setConnectTimeoutMillis(int timeout)"
  summary: "Set the connect timeout, in milliseconds, for the request."
  parameters:
  - description: "the connect timeout"
    name: "timeout"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpRequest setConnectTimeoutMillis(int timeout)"
  desc: "Set the connect timeout, in milliseconds, for the request. The connect timeout is the allowed amount of time for the http connection to be established."
  returns:
    description: "the object itself, for fluent setting."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest?alt=com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.setHeaderField(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.setHeaderField(String field, String value)"
  name: "setHeaderField(String field, String value)"
  nameWithType: "HttpRequest.setHeaderField(String field, String value)"
  summary: "Sets the header field to the given value."
  parameters:
  - description: "The header field name."
    name: "field"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The header field value."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpRequest setHeaderField(String field, String value)"
  desc: "Sets the header field to the given value."
  returns:
    description: "The object itself, for fluent setting."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest?alt=com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.setReadTimeoutMillis(int)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.setReadTimeoutMillis(int timeout)"
  name: "setReadTimeoutMillis(int timeout)"
  nameWithType: "HttpRequest.setReadTimeoutMillis(int timeout)"
  summary: "Sets the read timeout, in milliseconds, for the request."
  parameters:
  - description: "The read timeout."
    name: "timeout"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpRequest setReadTimeoutMillis(int timeout)"
  desc: "Sets the read timeout, in milliseconds, for the request. The read timeout is the number of milliseconds after the server receives a request and before the server sends data back."
  returns:
    description: "The object itself, for fluent setting."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest?alt=com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.transport.http"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.30.0
