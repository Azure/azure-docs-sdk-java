### YamlMime:JavaType
uid: "com.azure.resourcemanager.sql.models.SqlElasticPool.DefinitionStages.WithPremiumEdition"
fullName: "com.azure.resourcemanager.sql.models.SqlElasticPool.DefinitionStages.WithPremiumEdition<ParentT>"
name: "SqlElasticPool.DefinitionStages.WithPremiumEdition<ParentT>"
nameWithType: "SqlElasticPool.DefinitionStages.WithPremiumEdition<ParentT>"
summary: "The SQL Elastic Pool definition to set the eDTU and storage capacity limits for a premium pool."
syntax: "public static interface SqlElasticPool.DefinitionStages.WithPremiumEdition<ParentT> extends SqlElasticPool.DefinitionStages.WithAttach<ParentT>"
methods:
- "com.azure.resourcemanager.sql.models.SqlElasticPool.DefinitionStages.WithPremiumEdition.withDatabaseDtuMax(com.azure.resourcemanager.sql.models.SqlElasticPoolPremiumMaxEDTUs)"
- "com.azure.resourcemanager.sql.models.SqlElasticPool.DefinitionStages.WithPremiumEdition.withDatabaseDtuMin(com.azure.resourcemanager.sql.models.SqlElasticPoolPremiumMinEDTUs)"
- "com.azure.resourcemanager.sql.models.SqlElasticPool.DefinitionStages.WithPremiumEdition.withReservedDtu(com.azure.resourcemanager.sql.models.SqlElasticPoolPremiumEDTUs)"
- "com.azure.resourcemanager.sql.models.SqlElasticPool.DefinitionStages.WithPremiumEdition.withStorageCapacity(com.azure.resourcemanager.sql.models.SqlElasticPoolPremiumSorage)"
type: "interface"
typeParameters:
- name: "ParentT"
implements:
- "<xref href=\"com.azure.resourcemanager.sql.models.SqlElasticPool.DefinitionStages.WithAttach?alt=com.azure.resourcemanager.sql.models.SqlElasticPool.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.sql.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
