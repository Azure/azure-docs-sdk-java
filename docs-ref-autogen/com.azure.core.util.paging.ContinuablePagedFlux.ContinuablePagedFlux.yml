### YamlMime:JavaMember
uid: "com.azure.core.util.paging.ContinuablePagedFlux.ContinuablePagedFlux*"
fullName: "com.azure.core.util.paging.ContinuablePagedFlux<C,T,P>.ContinuablePagedFlux"
name: "ContinuablePagedFlux"
nameWithType: "ContinuablePagedFlux<C,T,P>.ContinuablePagedFlux"
members:
- uid: "com.azure.core.util.paging.ContinuablePagedFlux.ContinuablePagedFlux()"
  fullName: "com.azure.core.util.paging.ContinuablePagedFlux<C,T,P>.ContinuablePagedFlux()"
  name: "ContinuablePagedFlux()"
  nameWithType: "ContinuablePagedFlux<C,T,P>.ContinuablePagedFlux()"
  summary: "Creates an instance of ContinuablePagedFlux.\n\nContinuation completes when the last returned continuation token is null."
  syntax: "public ContinuablePagedFlux()"
- uid: "com.azure.core.util.paging.ContinuablePagedFlux.ContinuablePagedFlux(java.util.function.Predicate<C>)"
  fullName: "com.azure.core.util.paging.ContinuablePagedFlux<C,T,P>.ContinuablePagedFlux(Predicate<C> continuationPredicate)"
  name: "ContinuablePagedFlux(Predicate<C> continuationPredicate)"
  nameWithType: "ContinuablePagedFlux<C,T,P>.ContinuablePagedFlux(Predicate<C> continuationPredicate)"
  summary: "Creates an instance of ContinuablePagedFlux.\n\nIf `continuationPredicate` is null then the predicate will only check if the continuation token is non-null."
  parameters:
  - description: "A predicate which determines if paging should continue."
    name: "continuationPredicate"
    type: "<xref href=\"java.util.function.Predicate?alt=java.util.function.Predicate&text=Predicate\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected ContinuablePagedFlux(Predicate<C> continuationPredicate)"
type: "constructor"
metadata: {}
package: "com.azure.core.util.paging"
artifact: com.azure:azure-core:1.23.0
