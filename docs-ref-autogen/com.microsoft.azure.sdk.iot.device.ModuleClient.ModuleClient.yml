### YamlMime:JavaMember
nameWithType: ModuleClient.ModuleClient
type: constructor
members:
- fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol)
  name: ModuleClient(String connectionString, IotHubClientProtocol protocol)
  nameWithType: ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol)
  parameters:
  - description: <p>The connection string for the edge module to connect to. Must be in format HostName=xxxx;deviceId=xxxx;SharedAccessKey= xxxx;moduleId=xxxx;</p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The protocol to use when communicating with the module </p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="UnsupportedOperationException?alt=UnsupportedOperationException&text=UnsupportedOperationException" data-throw-if-not-resolved="False"/>
    description: <p>if using any protocol besides MQTT, if the connection string is missing the "moduleId" field, or if the connection string uses x509 </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if the provided connection string is null or empty, or if the provided protocol is null </p>
  summary: "<p>Constructor for a ModuleClient instance. \r\nor</p>\r\n<p>HostName=xxxx;DeviceId=xxxx;SharedAccessKey= xxxx;moduleId=xxxx;HostNameGateway=xxxx </p>"
  syntax: public ModuleClient(String connectionString, IotHubClientProtocol protocol)
  uid: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String,IotHubClientProtocol)
- fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol, ClientOptions clientOptions)
  name: ModuleClient(String connectionString, IotHubClientProtocol protocol, ClientOptions clientOptions)
  nameWithType: ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol, ClientOptions clientOptions)
  parameters:
  - description: <p>The connection string for the edge module to connect to. Must be in format HostName=xxxx;deviceId=xxxx;SharedAccessKey= xxxx;moduleId=xxxx;</p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The protocol to use when communicating with the module </p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol" data-throw-if-not-resolved="False"/>
  - description: <p>The options that allow configuration of the module client instance during initialization </p>
    name: clientOptions
    type: <xref href="com.microsoft.azure.sdk.iot.device.ClientOptions?alt=com.microsoft.azure.sdk.iot.device.ClientOptions&text=ClientOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="UnsupportedOperationException?alt=UnsupportedOperationException&text=UnsupportedOperationException" data-throw-if-not-resolved="False"/>
    description: <p>if using any protocol besides MQTT, if the connection string is missing the "moduleId" field, or if the connection string uses x509 </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if the provided connection string is null or empty, or if the provided protocol is null </p>
  summary: "<p>Constructor for a ModuleClient instance. \r\nor</p>\r\n<p>HostName=xxxx;DeviceId=xxxx;SharedAccessKey= xxxx;moduleId=xxxx;HostNameGateway=xxxx </p>"
  syntax: public ModuleClient(String connectionString, IotHubClientProtocol protocol, ClientOptions clientOptions)
  uid: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String,IotHubClientProtocol,ClientOptions)
- fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol)
  name: ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol)
  nameWithType: ModuleClient.ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol)
  parameters:
  - description: <p>The host name of the IoT hub that this client will connect to. </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The Id of the device containing the module that the connection will identify as. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The Id of the module that the connection will identify as. </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The provider of all SAS tokens that are used during authentication. </p>
    name: sasTokenProvider
    type: <xref href="com.microsoft.azure.sdk.iot.device.SasTokenProvider?alt=com.microsoft.azure.sdk.iot.device.SasTokenProvider&text=SasTokenProvider" data-throw-if-not-resolved="False"/>
  - description: <p>The protocol that the client will connect over. </p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor that allows for the client's SAS token generation to be controlled by the user. Note that options in this client such as setting the SAS token expiry time will throw <xref uid="" data-throw-if-not-resolved="false" data-raw-source="UnsupportedOperationException"></xref> since the SDK no longer controls that when this constructor is used.</p>

    <p></p>
  syntax: public ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol)
  uid: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String,String,String,SasTokenProvider,IotHubClientProtocol)
- fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  name: ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  nameWithType: ModuleClient.ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  parameters:
  - description: <p>The host name of the IoT hub that this client will connect to. </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The Id of the device containing the module that the connection will identify as. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The Id of the module that the connection will identify as. </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The provider of all SAS tokens that are used during authentication. </p>
    name: sasTokenProvider
    type: <xref href="com.microsoft.azure.sdk.iot.device.SasTokenProvider?alt=com.microsoft.azure.sdk.iot.device.SasTokenProvider&text=SasTokenProvider" data-throw-if-not-resolved="False"/>
  - description: <p>The protocol that the client will connect over. </p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol" data-throw-if-not-resolved="False"/>
  - description: <p>The options that allow configuration of the module client instance during initialization. </p>
    name: clientOptions
    type: <xref href="com.microsoft.azure.sdk.iot.device.ClientOptions?alt=com.microsoft.azure.sdk.iot.device.ClientOptions&text=ClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor that allows for the client's SAS token generation to be controlled by the user. Note that options in this client such as setting the SAS token expiry time will throw <xref uid="" data-throw-if-not-resolved="false" data-raw-source="UnsupportedOperationException"></xref> since the SDK no longer controls that when this constructor is used.</p>

    <p></p>
  syntax: public ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  uid: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String,String,String,SasTokenProvider,IotHubClientProtocol,ClientOptions)
uid: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient*
fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient
name: ModuleClient
package: com.microsoft.azure.sdk.iot.device
metadata: {}
