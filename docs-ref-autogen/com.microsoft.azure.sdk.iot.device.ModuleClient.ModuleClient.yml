### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient*"
fullName: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient"
name: "ModuleClient"
nameWithType: "ModuleClient.ModuleClient"
members:
- uid: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol)"
  fullName: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol)"
  name: "ModuleClient(String connectionString, IotHubClientProtocol protocol)"
  nameWithType: "ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol)"
  summary: "Constructor for a ModuleClient instance."
  parameters:
  - description: "The connection string for the edge module to connect to. Must be in format\n                         HostName=xxxx;deviceId=xxxx;SharedAccessKey=\n                         xxxx;moduleId=xxxx;\n\n                         or\n\n                         HostName=xxxx;DeviceId=xxxx;SharedAccessKey=\n                         xxxx;moduleId=xxxx;HostNameGateway=xxxx"
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The protocol to use when communicating with the module"
    name: "protocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModuleClient(String connectionString, IotHubClientProtocol protocol)"
  exceptions:
  - description: "if an exception is encountered when parsing the connection string"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.ModuleClientException?alt=com.microsoft.azure.sdk.iot.device.exceptions.ModuleClientException&text=ModuleClientException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if an exception is encountered when parsing the connection string"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if an exception is encountered when parsing the connection string"
    type: "<xref href=\"java.lang.UnsupportedOperationException?alt=java.lang.UnsupportedOperationException&text=UnsupportedOperationException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if an exception is encountered when parsing the connection string"
    type: "<xref href=\"java.net.URISyntaxException?alt=java.net.URISyntaxException&text=URISyntaxException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,com.microsoft.azure.sdk.iot.device.ClientOptions)"
  fullName: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol, ClientOptions clientOptions)"
  name: "ModuleClient(String connectionString, IotHubClientProtocol protocol, ClientOptions clientOptions)"
  nameWithType: "ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol, ClientOptions clientOptions)"
  summary: "Constructor for a ModuleClient instance."
  parameters:
  - description: "The connection string for the edge module to connect to. Must be in format\n                         HostName=xxxx;deviceId=xxxx;SharedAccessKey=\n                         xxxx;moduleId=xxxx;\n\n                         or\n\n                         HostName=xxxx;DeviceId=xxxx;SharedAccessKey=\n                         xxxx;moduleId=xxxx;HostNameGateway=xxxx"
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The protocol to use when communicating with the module"
    name: "protocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options that allow configuration of the module client instance during initialization"
    name: "clientOptions"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.ClientOptions?alt=com.microsoft.azure.sdk.iot.device.ClientOptions&text=ClientOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModuleClient(String connectionString, IotHubClientProtocol protocol, ClientOptions clientOptions)"
  exceptions:
  - description: "if an exception is encountered when parsing the connection string"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.ModuleClientException?alt=com.microsoft.azure.sdk.iot.device.exceptions.ModuleClientException&text=ModuleClientException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if an exception is encountered when parsing the connection string"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if an exception is encountered when parsing the connection string"
    type: "<xref href=\"java.lang.UnsupportedOperationException?alt=java.lang.UnsupportedOperationException&text=UnsupportedOperationException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if an exception is encountered when parsing the connection string"
    type: "<xref href=\"java.net.URISyntaxException?alt=java.net.URISyntaxException&text=URISyntaxException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,java.lang.String,boolean,java.lang.String,boolean)"
  fullName: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)"
  name: "ModuleClient(String connectionString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)"
  nameWithType: "ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)"
  summary: "Create a module client instance that uses x509 authentication.\n\nNote! Communication from a module to another EdgeHub using x509 authentication is not currently supported and the service will always return \"UNAUTHORIZED\"\n\nCommunication from a module directly to the IotHub does support x509 authentication, though.\n\n\n\n**Deprecated.** For x509 authentication, use <xref uid=\"com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,com.microsoft.azure.sdk.iot.device.ClientOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#ModuleClient(String, IotHubClientProtocol, ClientOptions)\"></xref> and provide an SSLContext instance in the <xref uid=\"com.microsoft.azure.sdk.iot.device.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref> instance. For a sample on how to build this SSLContext, see [this code][] which references a helper class for building SSLContext objects for x509 authentication as well as for SAS based authentication. When not using this deprecated constructor, you can safely exclude the Bouncycastle dependencies that this library declares. See [this pom.xml][] for an example of how to do this.\n\n\n[this code]: https://github.com/Azure/azure-iot-sdk-java/blob/master/device/iot-device-samples/send-event-x509/src/main/java/samples/com/microsoft/azure/sdk/iot/SendEventX509.java\n[this pom.xml]: https://github.com/Azure/azure-iot-sdk-java/blob/master/device/iot-device-samples/send-event-x509/pom.xml"
  parameters:
  - description: "The connection string for the edge module to connect to. Must be in format\n                         HostName=xxxx;deviceId=xxxx;SharedAccessKey=\n                         xxxx;moduleId=xxxx;\n\n                         or\n\n                         HostName=xxxx;DeviceId=xxxx;SharedAccessKey=\n                         xxxx;moduleId=xxxx;HostNameGateway=xxxx"
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The protocol to communicate with"
    name: "protocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - description: "The PEM formatted string for the public key certificate or the system path to the file containing the PEM."
    name: "publicKeyCertificate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "'false' if the publicKeyCertificate argument is a path to the PEM, and 'true' if it is the PEM string itself,"
    name: "isCertificatePath"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The PEM formatted string for the private key or the system path to the file containing the PEM."
    name: "privateKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "'false' if the privateKey argument is a path to the PEM, and 'true' if it is the PEM string itself,"
    name: "isPrivateKeyPath"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic ModuleClient(String connectionString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)"
  exceptions:
  - description: "If the connString cannot be parsed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.ModuleClientException?alt=com.microsoft.azure.sdk.iot.device.exceptions.ModuleClientException&text=ModuleClientException\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the connString cannot be parsed"
    type: "<xref href=\"java.net.URISyntaxException?alt=java.net.URISyntaxException&text=URISyntaxException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,javax.net.ssl.SSLContext)"
  fullName: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol, SSLContext sslContext)"
  name: "ModuleClient(String connectionString, IotHubClientProtocol protocol, SSLContext sslContext)"
  nameWithType: "ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol, SSLContext sslContext)"
  summary: "Create a module client instance that uses the provided SSLContext for SSL negotiation.\n\n**Deprecated.** For x509 authentication, use <xref uid=\"com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,com.microsoft.azure.sdk.iot.device.ClientOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#ModuleClient(String, IotHubClientProtocol, ClientOptions)\"></xref> and provide an SSLContext instance in the <xref uid=\"com.microsoft.azure.sdk.iot.device.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref> instance. For a sample on how to build this SSLContext, see [this code][] which references a helper class for building SSLContext objects for x509 authentication as well as for SAS based authentication. When not using this deprecated constructor, you can safely exclude the Bouncycastle dependencies that this library declares. See [this pom.xml][] for an example of how to do this.\n\n\n[this code]: https://github.com/Azure/azure-iot-sdk-java/blob/master/device/iot-device-samples/send-event-x509/src/main/java/samples/com/microsoft/azure/sdk/iot/SendEventX509.java\n[this pom.xml]: https://github.com/Azure/azure-iot-sdk-java/blob/master/device/iot-device-samples/send-event-x509/pom.xml"
  parameters:
  - description: "The connection string for the edge module to connect to. May be an x509 connection string\n                         or a SAS connection string. If it is an x509 connection string, the provided SSLContext will be\n                         used for x509 authentication"
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The protocol to communicate with"
    name: "protocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ssl context that will be used during authentication. If the provided connection string does not contain\n                   SAS based credentials, then the sslContext will be used for x509 authentication. If the provided connection string\n                   does contain SAS based credentials, the sslContext will still be used during SSL negotiation."
    name: "sslContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic ModuleClient(String connectionString, IotHubClientProtocol protocol, SSLContext sslContext)"
  exceptions:
  - description: "if the hostname in the connection string is not a valid URI"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.ModuleClientException?alt=com.microsoft.azure.sdk.iot.device.exceptions.ModuleClientException&text=ModuleClientException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the hostname in the connection string is not a valid URI"
    type: "<xref href=\"java.net.URISyntaxException?alt=java.net.URISyntaxException&text=URISyntaxException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.device.SasTokenProvider,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol)"
  fullName: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol)"
  name: "ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol)"
  nameWithType: "ModuleClient.ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol)"
  summary: "Constructor that allows for the client's SAS token generation to be controlled by the user. Note that options in this client such as setting the SAS token expiry time will throw <xref uid=\"java.lang.UnsupportedOperationException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnsupportedOperationException\"></xref> since the SDK no longer controls that when this constructor is used."
  parameters:
  - description: "The host name of the IoT Hub that this client will connect to."
    name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Id of the device containing the module that the connection will identify as."
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Id of the module that the connection will identify as."
    name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The provider of all SAS tokens that are used during authentication."
    name: "sasTokenProvider"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.SasTokenProvider?alt=com.microsoft.azure.sdk.iot.device.SasTokenProvider&text=SasTokenProvider\" data-throw-if-not-resolved=\"False\" />"
  - description: "The protocol that the client will connect over."
    name: "protocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol)"
- uid: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.device.SasTokenProvider,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,com.microsoft.azure.sdk.iot.device.ClientOptions)"
  fullName: "com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)"
  name: "ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)"
  nameWithType: "ModuleClient.ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)"
  summary: "Constructor that allows for the client's SAS token generation to be controlled by the user. Note that options in this client such as setting the SAS token expiry time will throw <xref uid=\"java.lang.UnsupportedOperationException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnsupportedOperationException\"></xref> since the SDK no longer controls that when this constructor is used."
  parameters:
  - description: "The host name of the IoT Hub that this client will connect to."
    name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Id of the device containing the module that the connection will identify as."
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Id of the module that the connection will identify as."
    name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The provider of all SAS tokens that are used during authentication."
    name: "sasTokenProvider"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.SasTokenProvider?alt=com.microsoft.azure.sdk.iot.device.SasTokenProvider&text=SasTokenProvider\" data-throw-if-not-resolved=\"False\" />"
  - description: "The protocol that the client will connect over."
    name: "protocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options that allow configuration of the module client instance during initialization."
    name: "clientOptions"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.ClientOptions?alt=com.microsoft.azure.sdk.iot.device.ClientOptions&text=ClientOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModuleClient(String hostName, String deviceId, String moduleId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)"
type: "constructor"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device"
artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.30.1
