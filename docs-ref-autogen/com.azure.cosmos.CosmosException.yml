### YamlMime:JavaType
uid: "com.azure.cosmos.CosmosException"
fullName: "com.azure.cosmos.CosmosException"
name: "CosmosException"
nameWithType: "CosmosException"
summary: "This class defines a custom exception type for all operations on CosmosClient in the Azure Cosmos DB database service. Applications are expected to catch CosmosException and handle errors as appropriate when calling methods on CosmosClient.\n\nErrors coming from the service during normal execution are converted to CosmosException before returning to the application with the following exception:\n\nWhen a BE error is encountered during a QueryIterable<T> iteration, an IllegalStateException is thrown instead of CosmosException.\n\nWhen a transport level error happens that request is not able to reach the service, an IllegalStateException is thrown instead of CosmosException."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Throwable\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Exception\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.RuntimeException\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.exception.AzureException\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
- "java.lang.Throwable.fillInStackTrace()"
- "java.lang.Throwable.getCause()"
- "java.lang.Throwable.getLocalizedMessage()"
- "java.lang.Throwable.getMessage()"
- "java.lang.Throwable.getStackTrace()"
- "java.lang.Throwable.getSuppressed()"
- "java.lang.Throwable.initCause(java.lang.Throwable)"
- "java.lang.Throwable.printStackTrace()"
- "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
- "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
- "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
- "java.lang.Throwable.toString()"
syntax: "public class CosmosException extends AzureException"
constructors:
- "com.azure.cosmos.CosmosException.CosmosException(int,com.azure.cosmos.implementation.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.cosmos.CosmosException.CosmosException(int,java.lang.Exception)"
- "com.azure.cosmos.CosmosException.CosmosException(int,java.lang.String)"
- "com.azure.cosmos.CosmosException.CosmosException(int,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.Throwable)"
- "com.azure.cosmos.CosmosException.CosmosException(java.lang.String,int,com.azure.cosmos.implementation.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.cosmos.CosmosException.CosmosException(java.lang.String,int,com.azure.cosmos.implementation.CosmosError,java.util.Map<java.lang.String,java.lang.String>,java.lang.Throwable)"
- "com.azure.cosmos.CosmosException.CosmosException(java.lang.String,java.lang.Exception,java.util.Map<java.lang.String,java.lang.String>,int,java.lang.String)"
methods:
- "com.azure.cosmos.CosmosException.getActivityId()"
- "com.azure.cosmos.CosmosException.getDiagnostics()"
- "com.azure.cosmos.CosmosException.getMessage()"
- "com.azure.cosmos.CosmosException.getRequestCharge()"
- "com.azure.cosmos.CosmosException.getResponseHeaders()"
- "com.azure.cosmos.CosmosException.getRetryAfterDuration()"
- "com.azure.cosmos.CosmosException.getStatusCode()"
- "com.azure.cosmos.CosmosException.getSubStatusCode()"
- "com.azure.cosmos.CosmosException.toString()"
type: "class"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.11.0
