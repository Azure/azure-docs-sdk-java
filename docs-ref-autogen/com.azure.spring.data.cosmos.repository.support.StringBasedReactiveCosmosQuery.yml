### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery"
fullName: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery"
name: "StringBasedReactiveCosmosQuery"
nameWithType: "StringBasedReactiveCosmosQuery"
summary: "Cosmos query class to handle the annotated queries."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery?alt=com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery&text=AbstractReactiveCosmosQuery\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor)?alt=com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.createQuery&text=createQuery\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.execute(java.lang.Object[])?alt=com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.execute&text=execute\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getExecution(org.springframework.data.repository.query.ReturnedType)?alt=com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getExecution&text=getExecution\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getQueryMethod()?alt=com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getQueryMethod&text=getQueryMethod\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isCountQuery()?alt=com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isCountQuery&text=isCountQuery\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isDeleteQuery()?alt=com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isDeleteQuery&text=isDeleteQuery\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isExistsQuery()?alt=com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isExistsQuery&text=isExistsQuery\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isPageQuery()?alt=com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isPageQuery&text=isPageQuery\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **StringBasedReactiveCosmosQuery**</br> extends <xref href=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery?alt=com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery&text=AbstractReactiveCosmosQuery\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.StringBasedReactiveCosmosQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod,com.azure.spring.data.cosmos.core.ReactiveCosmosOperations)"
  fullName: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.StringBasedReactiveCosmosQuery(ReactiveCosmosQueryMethod queryMethod, ReactiveCosmosOperations dbOperations)"
  name: "StringBasedReactiveCosmosQuery(ReactiveCosmosQueryMethod queryMethod, ReactiveCosmosOperations dbOperations)"
  nameWithType: "StringBasedReactiveCosmosQuery.StringBasedReactiveCosmosQuery(ReactiveCosmosQueryMethod queryMethod, ReactiveCosmosOperations dbOperations)"
  summary: "Constructor"
  parameters:
  - description: "the query method"
    name: "queryMethod"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod?alt=com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod&text=ReactiveCosmosQueryMethod\" data-throw-if-not-resolved=\"False\" />"
  - description: "the reactive cosmos operations"
    name: "dbOperations"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.ReactiveCosmosOperations?alt=com.azure.spring.data.cosmos.core.ReactiveCosmosOperations&text=ReactiveCosmosOperations\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StringBasedReactiveCosmosQuery(ReactiveCosmosQueryMethod queryMethod, ReactiveCosmosOperations dbOperations)"
  desc: "Constructor"
methods:
- uid: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor)"
  fullName: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.createQuery(ReactiveCosmosParameterAccessor accessor)"
  name: "createQuery(ReactiveCosmosParameterAccessor accessor)"
  nameWithType: "StringBasedReactiveCosmosQuery.createQuery(ReactiveCosmosParameterAccessor accessor)"
  summary: "Creates a query."
  modifiers:
  - "protected"
  overridden: "com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor)"
  parameters:
  - name: "accessor"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor?alt=com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor&text=ReactiveCosmosParameterAccessor\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected CosmosQuery createQuery(ReactiveCosmosParameterAccessor accessor)"
  desc: "Creates a query."
  returns:
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.execute(java.lang.Object[])"
  fullName: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.execute(Object[] parameters)"
  name: "execute(Object[] parameters)"
  nameWithType: "StringBasedReactiveCosmosQuery.execute(Object[] parameters)"
  summary: "Executes the <xref uid=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AbstractReactiveCosmosQuery\"></xref> with the given parameters."
  overridden: "com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.execute(java.lang.Object[])"
  parameters:
  - name: "parameters"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>[]"
  syntax: "public Object execute(Object[] parameters)"
  desc: "Executes the <xref uid=\"com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AbstractReactiveCosmosQuery\"></xref> with the given parameters."
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
- uid: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isCountQuery()"
  fullName: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isCountQuery()"
  name: "isCountQuery()"
  nameWithType: "StringBasedReactiveCosmosQuery.isCountQuery()"
  summary: "Return whether this is a count query."
  modifiers:
  - "protected"
  overridden: "com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isCountQuery()"
  syntax: "protected boolean isCountQuery()"
  desc: "Return whether this is a count query."
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isDeleteQuery()"
  fullName: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isDeleteQuery()"
  name: "isDeleteQuery()"
  nameWithType: "StringBasedReactiveCosmosQuery.isDeleteQuery()"
  summary: "Return whether this is a deletion query."
  modifiers:
  - "protected"
  overridden: "com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isDeleteQuery()"
  syntax: "protected boolean isDeleteQuery()"
  desc: "Return whether this is a deletion query."
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isExistsQuery()"
  fullName: "com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isExistsQuery()"
  name: "isExistsQuery()"
  nameWithType: "StringBasedReactiveCosmosQuery.isExistsQuery()"
  summary: "Return whether this is an exists query."
  modifiers:
  - "protected"
  overridden: "com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isExistsQuery()"
  syntax: "protected boolean isExistsQuery()"
  desc: "Return whether this is an exists query."
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Cosmos query class to handle the annotated queries. This overrides the execution and runs the query directly"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:5.19.0
