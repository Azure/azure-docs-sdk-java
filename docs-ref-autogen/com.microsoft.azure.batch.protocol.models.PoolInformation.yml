### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation
  id: PoolInformation
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.PoolInformation.PoolInformation()
  - com.microsoft.azure.batch.protocol.models.PoolInformation.autoPoolSpecification()
  - com.microsoft.azure.batch.protocol.models.PoolInformation.poolId()
  - com.microsoft.azure.batch.protocol.models.PoolInformation.withAutoPoolSpecification(com.microsoft.azure.batch.protocol.models.AutoPoolSpecification)
  - com.microsoft.azure.batch.protocol.models.PoolInformation.withPoolId(java.lang.String)
  langs:
  - java
  name: PoolInformation
  nameWithType: PoolInformation
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: Specifies how a Job should be assigned to a Pool.
  syntax:
    content: public class PoolInformation
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation.PoolInformation()
  id: PoolInformation()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolInformation
  langs:
  - java
  name: PoolInformation()
  nameWithType: PoolInformation.PoolInformation()
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation.PoolInformation()
  overload: com.microsoft.azure.batch.protocol.models.PoolInformation.PoolInformation*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public PoolInformation()
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation.autoPoolSpecification()
  id: autoPoolSpecification()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolInformation
  langs:
  - java
  name: autoPoolSpecification()
  nameWithType: PoolInformation.autoPoolSpecification()
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation.autoPoolSpecification()
  overload: com.microsoft.azure.batch.protocol.models.PoolInformation.autoPoolSpecification*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if auto Pool creation fails, the Batch service moves the Job to a completed state, and the Pool creation error is set in the Job's scheduling error property. The Batch service manages the lifetime (both creation and, unless keepAlive is specified, deletion) of the auto Pool. Any user actions that affect the lifetime of the auto Pool while the Job is active will result in unexpected behavior. You must specify either the Pool ID or the auto Pool specification, but not both.
  syntax:
    content: public AutoPoolSpecification autoPoolSpecification()
    return:
      type: com.microsoft.azure.batch.protocol.models.AutoPoolSpecification
      description: the autoPoolSpecification value
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation.poolId()
  id: poolId()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolInformation
  langs:
  - java
  name: poolId()
  nameWithType: PoolInformation.poolId()
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation.poolId()
  overload: com.microsoft.azure.batch.protocol.models.PoolInformation.poolId*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get you must ensure that the Pool referenced by this property exists. If the Pool does not exist at the time the Batch service tries to schedule a Job, no Tasks for the Job will run until you create a Pool with that id. Note that the Batch service will not reject the Job request; it will simply not run Tasks until the Pool exists. You must specify either the Pool ID or the auto Pool specification, but not both.
  syntax:
    content: public String poolId()
    return:
      type: java.lang.String
      description: the poolId value
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation.withAutoPoolSpecification(com.microsoft.azure.batch.protocol.models.AutoPoolSpecification)
  id: withAutoPoolSpecification(com.microsoft.azure.batch.protocol.models.AutoPoolSpecification)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolInformation
  langs:
  - java
  name: withAutoPoolSpecification(AutoPoolSpecification autoPoolSpecification)
  nameWithType: PoolInformation.withAutoPoolSpecification(AutoPoolSpecification autoPoolSpecification)
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation.withAutoPoolSpecification(AutoPoolSpecification autoPoolSpecification)
  overload: com.microsoft.azure.batch.protocol.models.PoolInformation.withAutoPoolSpecification*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if auto Pool creation fails, the Batch service moves the Job to a completed state, and the Pool creation error is set in the Job's scheduling error property. The Batch service manages the lifetime (both creation and, unless keepAlive is specified, deletion) of the auto Pool. Any user actions that affect the lifetime of the auto Pool while the Job is active will result in unexpected behavior. You must specify either the Pool ID or the auto Pool specification, but not both.
  syntax:
    content: public PoolInformation withAutoPoolSpecification(AutoPoolSpecification autoPoolSpecification)
    parameters:
    - id: autoPoolSpecification
      type: com.microsoft.azure.batch.protocol.models.AutoPoolSpecification
      description: the autoPoolSpecification value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolInformation
      description: the PoolInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation.withPoolId(java.lang.String)
  id: withPoolId(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolInformation
  langs:
  - java
  name: withPoolId(String poolId)
  nameWithType: PoolInformation.withPoolId(String poolId)
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation.withPoolId(String poolId)
  overload: com.microsoft.azure.batch.protocol.models.PoolInformation.withPoolId*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set you must ensure that the Pool referenced by this property exists. If the Pool does not exist at the time the Batch service tries to schedule a Job, no Tasks for the Job will run until you create a Pool with that id. Note that the Batch service will not reject the Job request; it will simply not run Tasks until the Pool exists. You must specify either the Pool ID or the auto Pool specification, but not both.
  syntax:
    content: public PoolInformation withPoolId(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: the poolId value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolInformation
      description: the PoolInformation object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation.PoolInformation*
  name: PoolInformation
  nameWithType: PoolInformation.PoolInformation
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation.PoolInformation
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation.poolId*
  name: poolId
  nameWithType: PoolInformation.poolId
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation.poolId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation.withPoolId*
  name: withPoolId
  nameWithType: PoolInformation.withPoolId
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation.withPoolId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.AutoPoolSpecification
  name: AutoPoolSpecification
  nameWithType: AutoPoolSpecification
  fullName: com.microsoft.azure.batch.protocol.models.AutoPoolSpecification
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation.autoPoolSpecification*
  name: autoPoolSpecification
  nameWithType: PoolInformation.autoPoolSpecification
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation.autoPoolSpecification
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation.withAutoPoolSpecification*
  name: withAutoPoolSpecification
  nameWithType: PoolInformation.withAutoPoolSpecification
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation.withAutoPoolSpecification
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
