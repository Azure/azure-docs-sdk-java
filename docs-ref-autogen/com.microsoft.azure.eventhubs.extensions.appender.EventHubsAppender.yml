### YamlMime:JavaType
uid: "com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender"
fullName: "com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender"
name: "EventHubsAppender"
nameWithType: "EventHubsAppender"
summary: "Sends <xref uid=\"org.apache.logging.log4j.core.LogEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogEvent\"></xref>'s to Microsoft Azure EventHubs. By default, tuned for high performance and hence, pushes a batch of Events."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.logging.log4j.core.AbstractLifeCycle\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.logging.log4j.core.filter.AbstractFilterable\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.logging.log4j.core.appender.AbstractAppender\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.apache.logging.log4j.core.AbstractLifeCycle.equalsImpl(java.lang.Object)"
- "org.apache.logging.log4j.core.AbstractLifeCycle.getState()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.getStatusLogger()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.hashCodeImpl()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.initialize()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.isInitialized()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.isStarted()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.isStarting()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.isStopped()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.isStopping()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.setStarted()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.setStarting()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.setState(org.apache.logging.log4j.core.LifeCycle.State)"
- "org.apache.logging.log4j.core.AbstractLifeCycle.setStopped()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.setStopping()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.stop()"
- "org.apache.logging.log4j.core.AbstractLifeCycle.stop(java.util.concurrent.Future<?>)"
- "org.apache.logging.log4j.core.appender.AbstractAppender.error(java.lang.String)"
- "org.apache.logging.log4j.core.appender.AbstractAppender.error(java.lang.String,java.lang.Throwable)"
- "org.apache.logging.log4j.core.appender.AbstractAppender.error(java.lang.String,org.apache.logging.log4j.core.LogEvent,java.lang.Throwable)"
- "org.apache.logging.log4j.core.appender.AbstractAppender.getHandler()"
- "org.apache.logging.log4j.core.appender.AbstractAppender.getLayout()"
- "org.apache.logging.log4j.core.appender.AbstractAppender.getName()"
- "org.apache.logging.log4j.core.appender.AbstractAppender.ignoreExceptions()"
- "org.apache.logging.log4j.core.appender.AbstractAppender.parseInt(java.lang.String,int)"
- "org.apache.logging.log4j.core.appender.AbstractAppender.requiresLocation()"
- "org.apache.logging.log4j.core.appender.AbstractAppender.setHandler(org.apache.logging.log4j.core.ErrorHandler)"
- "org.apache.logging.log4j.core.appender.AbstractAppender.toSerializable(org.apache.logging.log4j.core.LogEvent)"
- "org.apache.logging.log4j.core.appender.AbstractAppender.toString()"
- "org.apache.logging.log4j.core.filter.AbstractFilterable.addFilter(org.apache.logging.log4j.core.Filter)"
- "org.apache.logging.log4j.core.filter.AbstractFilterable.getFilter()"
- "org.apache.logging.log4j.core.filter.AbstractFilterable.getPropertyArray()"
- "org.apache.logging.log4j.core.filter.AbstractFilterable.hasFilter()"
- "org.apache.logging.log4j.core.filter.AbstractFilterable.isFiltered(org.apache.logging.log4j.core.LogEvent)"
- "org.apache.logging.log4j.core.filter.AbstractFilterable.removeFilter(org.apache.logging.log4j.core.Filter)"
- "org.apache.logging.log4j.core.filter.AbstractFilterable.start()"
- "org.apache.logging.log4j.core.filter.AbstractFilterable.stop(long,java.util.concurrent.TimeUnit)"
- "org.apache.logging.log4j.core.filter.AbstractFilterable.stop(long,java.util.concurrent.TimeUnit,boolean)"
syntax: "public final class EventHubsAppender extends AbstractAppender"
methods:
- "com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.append(org.apache.logging.log4j.core.LogEvent)"
- "com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.createAppender(java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>,boolean,java.lang.String,boolean)"
- "com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.start()"
- "com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.stop()"
type: "class"
metadata: {}
package: "com.microsoft.azure.eventhubs.extensions.appender"
artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
