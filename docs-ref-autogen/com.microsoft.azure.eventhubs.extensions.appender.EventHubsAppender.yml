### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender
  id: EventHubsAppender
  artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
  parent: com.microsoft.azure.eventhubs.extensions.appender
  children:
  - com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.append(org.apache.logging.log4j.core.LogEvent)
  - com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.createAppender(java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>,boolean,java.lang.String,boolean)
  - com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.start()
  - com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.stop()
  langs:
  - java
  name: EventHubsAppender
  nameWithType: EventHubsAppender
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender
  type: Class
  package: com.microsoft.azure.eventhubs.extensions.appender
  summary: Sends <xref uid="org.apache.logging.log4j.core.LogEvent" data-throw-if-not-resolved="false">LogEvent</xref>'s to Microsoft Azure EventHubs. By default, tuned for high performance and hence, pushes a batch of Events.
  syntax:
    content: public final class EventHubsAppender extends AbstractAppender
  inheritance:
  - java.lang.Object
  - org.apache.logging.log4j.core.AbstractLifeCycle
  - org.apache.logging.log4j.core.filter.AbstractFilterable
  - org.apache.logging.log4j.core.appender.AbstractAppender
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.apache.logging.log4j.core.AbstractLifeCycle.equalsImpl(java.lang.Object)
  - org.apache.logging.log4j.core.AbstractLifeCycle.getState()
  - org.apache.logging.log4j.core.AbstractLifeCycle.getStatusLogger()
  - org.apache.logging.log4j.core.AbstractLifeCycle.hashCodeImpl()
  - org.apache.logging.log4j.core.AbstractLifeCycle.initialize()
  - org.apache.logging.log4j.core.AbstractLifeCycle.isInitialized()
  - org.apache.logging.log4j.core.AbstractLifeCycle.isStarted()
  - org.apache.logging.log4j.core.AbstractLifeCycle.isStarting()
  - org.apache.logging.log4j.core.AbstractLifeCycle.isStopped()
  - org.apache.logging.log4j.core.AbstractLifeCycle.isStopping()
  - org.apache.logging.log4j.core.AbstractLifeCycle.setStarted()
  - org.apache.logging.log4j.core.AbstractLifeCycle.setStarting()
  - org.apache.logging.log4j.core.AbstractLifeCycle.setState(org.apache.logging.log4j.core.LifeCycle.State)
  - org.apache.logging.log4j.core.AbstractLifeCycle.setStopped()
  - org.apache.logging.log4j.core.AbstractLifeCycle.setStopping()
  - org.apache.logging.log4j.core.AbstractLifeCycle.stop()
  - org.apache.logging.log4j.core.AbstractLifeCycle.stop(java.util.concurrent.Future<?>)
  - org.apache.logging.log4j.core.appender.AbstractAppender.error(java.lang.String)
  - org.apache.logging.log4j.core.appender.AbstractAppender.error(java.lang.String,java.lang.Throwable)
  - org.apache.logging.log4j.core.appender.AbstractAppender.error(java.lang.String,org.apache.logging.log4j.core.LogEvent,java.lang.Throwable)
  - org.apache.logging.log4j.core.appender.AbstractAppender.getHandler()
  - org.apache.logging.log4j.core.appender.AbstractAppender.getLayout()
  - org.apache.logging.log4j.core.appender.AbstractAppender.getName()
  - org.apache.logging.log4j.core.appender.AbstractAppender.ignoreExceptions()
  - org.apache.logging.log4j.core.appender.AbstractAppender.parseInt(java.lang.String,int)
  - org.apache.logging.log4j.core.appender.AbstractAppender.requiresLocation()
  - org.apache.logging.log4j.core.appender.AbstractAppender.setHandler(org.apache.logging.log4j.core.ErrorHandler)
  - org.apache.logging.log4j.core.appender.AbstractAppender.toSerializable(org.apache.logging.log4j.core.LogEvent)
  - org.apache.logging.log4j.core.appender.AbstractAppender.toString()
  - org.apache.logging.log4j.core.filter.AbstractFilterable.addFilter(org.apache.logging.log4j.core.Filter)
  - org.apache.logging.log4j.core.filter.AbstractFilterable.getFilter()
  - org.apache.logging.log4j.core.filter.AbstractFilterable.getPropertyArray()
  - org.apache.logging.log4j.core.filter.AbstractFilterable.hasFilter()
  - org.apache.logging.log4j.core.filter.AbstractFilterable.isFiltered(org.apache.logging.log4j.core.LogEvent)
  - org.apache.logging.log4j.core.filter.AbstractFilterable.removeFilter(org.apache.logging.log4j.core.Filter)
  - org.apache.logging.log4j.core.filter.AbstractFilterable.start()
  - org.apache.logging.log4j.core.filter.AbstractFilterable.stop(long,java.util.concurrent.TimeUnit)
  - org.apache.logging.log4j.core.filter.AbstractFilterable.stop(long,java.util.concurrent.TimeUnit,boolean)
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.EventHubsAppender(java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>,boolean,com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager,boolean)
  id: EventHubsAppender(java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>,boolean,com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager,boolean)
  artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
  parent: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender
  langs:
  - java
  name: EventHubsAppender(String name, Filter filter, Layout<? extends Serializable> layout, boolean ignoreExceptions, EventHubsManager eventHubsManager, boolean immediateFlush)
  nameWithType: EventHubsAppender.EventHubsAppender(String name, Filter filter, Layout<? extends Serializable> layout, boolean ignoreExceptions, EventHubsManager eventHubsManager, boolean immediateFlush)
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.EventHubsAppender(String name, Filter filter, Layout<? extends Serializable> layout, boolean ignoreExceptions, EventHubsManager eventHubsManager, boolean immediateFlush)
  overload: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.EventHubsAppender*
  type: Constructor
  package: com.microsoft.azure.eventhubs.extensions.appender
  syntax:
    content: private EventHubsAppender(String name, Filter filter, Layout<? extends Serializable> layout, boolean ignoreExceptions, EventHubsManager eventHubsManager, boolean immediateFlush)
    parameters:
    - id: name
      type: java.lang.String
    - id: filter
      type: org.apache.logging.log4j.core.Filter
    - id: layout
      type: org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>
    - id: ignoreExceptions
      type: boolean
    - id: eventHubsManager
      type: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager
    - id: immediateFlush
      type: boolean
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.append(org.apache.logging.log4j.core.LogEvent)
  id: append(org.apache.logging.log4j.core.LogEvent)
  artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
  parent: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender
  langs:
  - java
  name: append(LogEvent logEvent)
  nameWithType: EventHubsAppender.append(LogEvent logEvent)
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.append(LogEvent logEvent)
  overload: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.append*
  type: Method
  package: com.microsoft.azure.eventhubs.extensions.appender
  syntax:
    content: public void append(LogEvent logEvent)
    parameters:
    - id: logEvent
      type: org.apache.logging.log4j.core.LogEvent
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.createAppender(java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>,boolean,java.lang.String,boolean)
  id: createAppender(java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>,boolean,java.lang.String,boolean)
  artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
  parent: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender
  langs:
  - java
  name: createAppender(String name, Filter filter, Layout<? extends Serializable> layout, boolean ignoreExceptions, String connectionString, boolean immediateFlush)
  nameWithType: EventHubsAppender.createAppender(String name, Filter filter, Layout<? extends Serializable> layout, boolean ignoreExceptions, String connectionString, boolean immediateFlush)
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.createAppender(String name, Filter filter, Layout<? extends Serializable> layout, boolean ignoreExceptions, String connectionString, boolean immediateFlush)
  overload: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.createAppender*
  type: Method
  package: com.microsoft.azure.eventhubs.extensions.appender
  syntax:
    content: public static EventHubsAppender createAppender(String name, Filter filter, Layout<? extends Serializable> layout, boolean ignoreExceptions, String connectionString, boolean immediateFlush)
    parameters:
    - id: name
      type: java.lang.String
    - id: filter
      type: org.apache.logging.log4j.core.Filter
    - id: layout
      type: org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>
    - id: ignoreExceptions
      type: boolean
    - id: connectionString
      type: java.lang.String
    - id: immediateFlush
      type: boolean
    return:
      type: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.start()
  id: start()
  artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
  parent: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender
  langs:
  - java
  name: start()
  nameWithType: EventHubsAppender.start()
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.start()
  overload: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.start*
  type: Method
  package: com.microsoft.azure.eventhubs.extensions.appender
  syntax:
    content: public void start()
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.stop()
  id: stop()
  artifact: com.microsoft.azure:azure-eventhubs-extensions:3.2.2
  parent: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender
  langs:
  - java
  name: stop()
  nameWithType: EventHubsAppender.stop()
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.stop()
  overload: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.stop*
  type: Method
  package: com.microsoft.azure.eventhubs.extensions.appender
  syntax:
    content: public void stop()
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.logging.log4j.core.Filter
  spec.java:
  - uid: org.apache.logging.log4j.core.Filter
    name: Filter
    fullName: org.apache.logging.log4j.core.Filter
- uid: org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>
  spec.java:
  - uid: org.apache.logging.log4j.core.Layout
    name: Layout
    fullName: org.apache.logging.log4j.core.Layout
  - name: <
    fullName: <
  - uid: '? extends java.io.Serializable'
    name: Serializable
    fullName: '? extends java.io.Serializable'
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager
  name: EventHubsManager
  nameWithType: EventHubsManager
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsManager
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.EventHubsAppender*
  name: EventHubsAppender
  nameWithType: EventHubsAppender.EventHubsAppender
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.EventHubsAppender
  package: com.microsoft.azure.eventhubs.extensions.appender
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.createAppender*
  name: createAppender
  nameWithType: EventHubsAppender.createAppender
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.createAppender
  package: com.microsoft.azure.eventhubs.extensions.appender
- uid: org.apache.logging.log4j.core.LogEvent
  spec.java:
  - uid: org.apache.logging.log4j.core.LogEvent
    name: LogEvent
    fullName: org.apache.logging.log4j.core.LogEvent
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.append*
  name: append
  nameWithType: EventHubsAppender.append
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.append
  package: com.microsoft.azure.eventhubs.extensions.appender
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.start*
  name: start
  nameWithType: EventHubsAppender.start
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.start
  package: com.microsoft.azure.eventhubs.extensions.appender
- uid: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.stop*
  name: stop
  nameWithType: EventHubsAppender.stop
  fullName: com.microsoft.azure.eventhubs.extensions.appender.EventHubsAppender.stop
  package: com.microsoft.azure.eventhubs.extensions.appender
- uid: org.apache.logging.log4j.core.appender.AbstractAppender
  name: AbstractAppender
  nameWithType: AbstractAppender
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender
- uid: org.apache.logging.log4j.core.filter.AbstractFilterable.getFilter()
  name: AbstractFilterable.getFilter()
  nameWithType: AbstractFilterable.getFilter()
  fullName: org.apache.logging.log4j.core.filter.AbstractFilterable.getFilter()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.isInitialized()
  name: AbstractLifeCycle.isInitialized()
  nameWithType: AbstractLifeCycle.isInitialized()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.isInitialized()
- uid: org.apache.logging.log4j.core.appender.AbstractAppender.toSerializable(org.apache.logging.log4j.core.LogEvent)
  name: AbstractAppender.toSerializable(LogEvent)
  nameWithType: AbstractAppender.toSerializable(LogEvent)
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender.toSerializable(org.apache.logging.log4j.core.LogEvent)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.isStopped()
  name: AbstractLifeCycle.isStopped()
  nameWithType: AbstractLifeCycle.isStopped()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.isStopped()
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.isStarting()
  name: AbstractLifeCycle.isStarting()
  nameWithType: AbstractLifeCycle.isStarting()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.isStarting()
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.equalsImpl(java.lang.Object)
  name: AbstractLifeCycle.equalsImpl(Object)
  nameWithType: AbstractLifeCycle.equalsImpl(Object)
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.equalsImpl(java.lang.Object)
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.isStopping()
  name: AbstractLifeCycle.isStopping()
  nameWithType: AbstractLifeCycle.isStopping()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.isStopping()
- uid: org.apache.logging.log4j.core.filter.AbstractFilterable.isFiltered(org.apache.logging.log4j.core.LogEvent)
  name: AbstractFilterable.isFiltered(LogEvent)
  nameWithType: AbstractFilterable.isFiltered(LogEvent)
  fullName: org.apache.logging.log4j.core.filter.AbstractFilterable.isFiltered(org.apache.logging.log4j.core.LogEvent)
- uid: org.apache.logging.log4j.core.filter.AbstractFilterable.hasFilter()
  name: AbstractFilterable.hasFilter()
  nameWithType: AbstractFilterable.hasFilter()
  fullName: org.apache.logging.log4j.core.filter.AbstractFilterable.hasFilter()
- uid: org.apache.logging.log4j.core.appender.AbstractAppender.setHandler(org.apache.logging.log4j.core.ErrorHandler)
  name: AbstractAppender.setHandler(ErrorHandler)
  nameWithType: AbstractAppender.setHandler(ErrorHandler)
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender.setHandler(org.apache.logging.log4j.core.ErrorHandler)
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.getState()
  name: AbstractLifeCycle.getState()
  nameWithType: AbstractLifeCycle.getState()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.getState()
- uid: org.apache.logging.log4j.core.filter.AbstractFilterable.removeFilter(org.apache.logging.log4j.core.Filter)
  name: AbstractFilterable.removeFilter(Filter)
  nameWithType: AbstractFilterable.removeFilter(Filter)
  fullName: org.apache.logging.log4j.core.filter.AbstractFilterable.removeFilter(org.apache.logging.log4j.core.Filter)
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.setStarted()
  name: AbstractLifeCycle.setStarted()
  nameWithType: AbstractLifeCycle.setStarted()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.setStarted()
- uid: org.apache.logging.log4j.core.appender.AbstractAppender.error(java.lang.String,java.lang.Throwable)
  name: AbstractAppender.error(String,Throwable)
  nameWithType: AbstractAppender.error(String,Throwable)
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender.error(java.lang.String,java.lang.Throwable)
- uid: org.apache.logging.log4j.core.appender.AbstractAppender.error(java.lang.String)
  name: AbstractAppender.error(String)
  nameWithType: AbstractAppender.error(String)
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender.error(java.lang.String)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: org.apache.logging.log4j.core.filter.AbstractFilterable.getPropertyArray()
  name: AbstractFilterable.getPropertyArray()
  nameWithType: AbstractFilterable.getPropertyArray()
  fullName: org.apache.logging.log4j.core.filter.AbstractFilterable.getPropertyArray()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.stop(java.util.concurrent.Future<?>)
  name: AbstractLifeCycle.stop(Future<?>)
  nameWithType: AbstractLifeCycle.stop(Future<?>)
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.stop(java.util.concurrent.Future<?>)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: org.apache.logging.log4j.core.filter.AbstractFilterable.stop(long,java.util.concurrent.TimeUnit)
  name: AbstractFilterable.stop(long,TimeUnit)
  nameWithType: AbstractFilterable.stop(long,TimeUnit)
  fullName: org.apache.logging.log4j.core.filter.AbstractFilterable.stop(long,java.util.concurrent.TimeUnit)
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.stop()
  name: AbstractLifeCycle.stop()
  nameWithType: AbstractLifeCycle.stop()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.stop()
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.isStarted()
  name: AbstractLifeCycle.isStarted()
  nameWithType: AbstractLifeCycle.isStarted()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.isStarted()
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.setStopping()
  name: AbstractLifeCycle.setStopping()
  nameWithType: AbstractLifeCycle.setStopping()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.setStopping()
- uid: org.apache.logging.log4j.core.appender.AbstractAppender.getLayout()
  name: AbstractAppender.getLayout()
  nameWithType: AbstractAppender.getLayout()
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender.getLayout()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.apache.logging.log4j.core.filter.AbstractFilterable.start()
  name: AbstractFilterable.start()
  nameWithType: AbstractFilterable.start()
  fullName: org.apache.logging.log4j.core.filter.AbstractFilterable.start()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.setStarting()
  name: AbstractLifeCycle.setStarting()
  nameWithType: AbstractLifeCycle.setStarting()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.setStarting()
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.getStatusLogger()
  name: AbstractLifeCycle.getStatusLogger()
  nameWithType: AbstractLifeCycle.getStatusLogger()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.getStatusLogger()
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.setStopped()
  name: AbstractLifeCycle.setStopped()
  nameWithType: AbstractLifeCycle.setStopped()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.setStopped()
- uid: org.apache.logging.log4j.core.appender.AbstractAppender.ignoreExceptions()
  name: AbstractAppender.ignoreExceptions()
  nameWithType: AbstractAppender.ignoreExceptions()
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender.ignoreExceptions()
- uid: org.apache.logging.log4j.core.appender.AbstractAppender.toString()
  name: AbstractAppender.toString()
  nameWithType: AbstractAppender.toString()
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender.toString()
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.setState(org.apache.logging.log4j.core.LifeCycle.State)
  name: AbstractLifeCycle.setState(LifeCycle.State)
  nameWithType: AbstractLifeCycle.setState(LifeCycle.State)
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.setState(org.apache.logging.log4j.core.LifeCycle.State)
- uid: org.apache.logging.log4j.core.appender.AbstractAppender.error(java.lang.String,org.apache.logging.log4j.core.LogEvent,java.lang.Throwable)
  name: AbstractAppender.error(String,LogEvent,Throwable)
  nameWithType: AbstractAppender.error(String,LogEvent,Throwable)
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender.error(java.lang.String,org.apache.logging.log4j.core.LogEvent,java.lang.Throwable)
- uid: org.apache.logging.log4j.core.appender.AbstractAppender.parseInt(java.lang.String,int)
  name: AbstractAppender.parseInt(String,int)
  nameWithType: AbstractAppender.parseInt(String,int)
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender.parseInt(java.lang.String,int)
- uid: org.apache.logging.log4j.core.appender.AbstractAppender.getHandler()
  name: AbstractAppender.getHandler()
  nameWithType: AbstractAppender.getHandler()
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender.getHandler()
- uid: org.apache.logging.log4j.core.filter.AbstractFilterable.stop(long,java.util.concurrent.TimeUnit,boolean)
  name: AbstractFilterable.stop(long,TimeUnit,boolean)
  nameWithType: AbstractFilterable.stop(long,TimeUnit,boolean)
  fullName: org.apache.logging.log4j.core.filter.AbstractFilterable.stop(long,java.util.concurrent.TimeUnit,boolean)
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.hashCodeImpl()
  name: AbstractLifeCycle.hashCodeImpl()
  nameWithType: AbstractLifeCycle.hashCodeImpl()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.hashCodeImpl()
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.initialize()
  name: AbstractLifeCycle.initialize()
  nameWithType: AbstractLifeCycle.initialize()
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.initialize()
- uid: org.apache.logging.log4j.core.filter.AbstractFilterable.addFilter(org.apache.logging.log4j.core.Filter)
  name: AbstractFilterable.addFilter(Filter)
  nameWithType: AbstractFilterable.addFilter(Filter)
  fullName: org.apache.logging.log4j.core.filter.AbstractFilterable.addFilter(org.apache.logging.log4j.core.Filter)
- uid: org.apache.logging.log4j.core.appender.AbstractAppender.getName()
  name: AbstractAppender.getName()
  nameWithType: AbstractAppender.getName()
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender.getName()
- uid: org.apache.logging.log4j.core.appender.AbstractAppender.requiresLocation()
  name: AbstractAppender.requiresLocation()
  nameWithType: AbstractAppender.requiresLocation()
  fullName: org.apache.logging.log4j.core.appender.AbstractAppender.requiresLocation()
- uid: org.apache.logging.log4j.core.Layout
  name: Layout
  nameWithType: Layout
  fullName: org.apache.logging.log4j.core.Layout
- uid: '? extends java.io.Serializable'
  name: '? extends Serializable'
  nameWithType: '? extends Serializable'
  fullName: '? extends java.io.Serializable'
- uid: org.apache.logging.log4j.core.AbstractLifeCycle.stop(java.util.concurrent.Future
  name: AbstractLifeCycle.stop(Future
  nameWithType: AbstractLifeCycle.stop(Future
  fullName: org.apache.logging.log4j.core.AbstractLifeCycle.stop(java.util.concurrent.Future
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
