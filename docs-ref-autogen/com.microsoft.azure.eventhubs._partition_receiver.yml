items:
- uid: com.microsoft.azure.eventhubs._partition_receiver
  id: _partition_receiver
  parent: com.microsoft.azure.eventhubs
  children:
  - com.microsoft.azure.eventhubs._partition_receiver.getDesiredCapabilities()
  - com.microsoft.azure.eventhubs._partition_receiver.getEpoch()
  - com.microsoft.azure.eventhubs._partition_receiver.getFilter(final Message)
  - com.microsoft.azure.eventhubs._partition_receiver.getPartitionId()
  - com.microsoft.azure.eventhubs._partition_receiver.getPrefetchCount()
  - com.microsoft.azure.eventhubs._partition_receiver.getProperties()
  - com.microsoft.azure.eventhubs._partition_receiver.getReceiveTimeout()
  - com.microsoft.azure.eventhubs._partition_receiver.getRuntimeInformation()
  - com.microsoft.azure.eventhubs._partition_receiver.onClose()
  - com.microsoft.azure.eventhubs._partition_receiver.receive(final int)
  - com.microsoft.azure.eventhubs._partition_receiver.receiveSync(final int)
  - com.microsoft.azure.eventhubs._partition_receiver.setPrefetchCount(final int)
  - com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler(final PartitionReceiveHandler)
  - com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler(final PartitionReceiveHandler,final boolean)
  - com.microsoft.azure.eventhubs._partition_receiver.setReceiveTimeout(Duration)
  - com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: PartitionReceiver
  nameWithType: PartitionReceiver
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver
  type: Class
  source:
    remote: &o0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 48
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>This is a logical representation of receiving from a EventHub partition. </p>

    <p>A <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> is tied to a ConsumerGroup + EventHub Partition combination. <itemizedlist><listitem><p>If an epoch based <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> (i.e., <xref href="com.microsoft.azure.eventhubs._partition_receiver.getEpoch()" data-throw-if-not-resolved="false"></xref> != 0) is created, EventHubs service will guarantee only 1 active receiver exists per ConsumerGroup + Partition combo. This is the recommended approach to create a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. </p></listitem><listitem><p>Multiple receivers per ConsumerGroup + Partition combo can be created using non-epoch receivers. </p></listitem></itemizedlist></p>

    <p></p>
  syntax: &o1
    content: public class PartitionReceiver extends ClientEntity implements IReceiverSettingsProvider
  see:
  - type: com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String)
    description: ''
  - type: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,final long)
    description: ''
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.servicebus._client_entity
  inheritedMembers:
  - com.microsoft.azure.servicebus._client_entity.ClientEntity(final String,final ClientEntity)
  - com.microsoft.azure.servicebus._client_entity.close()
  - com.microsoft.azure.servicebus._client_entity.closeSync()
  - com.microsoft.azure.eventhubs._partition_receiver.create(MessagingFactory,final String,final String,final String,final String,final boolean,final Instant,final long,final boolean,final ReceiverOptions)
  - com.microsoft.azure.eventhubs._partition_receiver.DEFAULT_PREFETCH_COUNT()
  - com.microsoft.azure.servicebus._client_entity.getClientId()
  - com.microsoft.azure.servicebus._client_entity.getIsClosed()
  - com.microsoft.azure.servicebus._client_entity.getIsClosingOrClosed()
  - com.microsoft.azure.servicebus._client_entity.getLastKnownError()
  - com.microsoft.azure.eventhubs._partition_receiver.getOffsetInclusive()
  - com.microsoft.azure.eventhubs._partition_receiver.getStartingOffset()
  - com.microsoft.azure.eventhubs._partition_receiver.NULL_EPOCH()
  - com.microsoft.azure.servicebus._client_entity.setClosed()
  - com.microsoft.azure.servicebus._client_entity.throwIfClosed()
- uid: com.microsoft.azure.eventhubs._partition_receiver.getDesiredCapabilities()
  id: getDesiredCapabilities()
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: getDesiredCapabilities()
  nameWithType: PartitionReceiver.getDesiredCapabilities()
  fullName: Symbol [] com.microsoft.azure.eventhubs.PartitionReceiver.getDesiredCapabilities()
  overload: com.microsoft.azure.eventhubs._partition_receiver.getDesiredCapabilities*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 453
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public Symbol [] getDesiredCapabilities()
    return:
      type: ddcc4456
  overridden: com.microsoft.azure.servicebus._i_receiver_settings_provider.getDesiredCapabilities()
- uid: com.microsoft.azure.eventhubs._partition_receiver.getEpoch()
  id: getEpoch()
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: getEpoch()
  nameWithType: PartitionReceiver.getEpoch()
  fullName: final long com.microsoft.azure.eventhubs.PartitionReceiver.getEpoch()
  overload: com.microsoft.azure.eventhubs._partition_receiver.getEpoch*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 206
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Get the epoch value that this receiver is currently using for partition ownership. </p>

    <p>A value of 0 means this receiver is not an epoch-based receiver.</p>

    <p></p>
  syntax: &o4
    content: public final long getEpoch()
    return:
      type: 4c60ae65
      description: <p>the epoch value that this receiver is currently using for partition ownership. </p>
- uid: com.microsoft.azure.eventhubs._partition_receiver.getFilter(final Message)
  id: getFilter(final Message)
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: getFilter(final Message lastReceivedMessage)
  nameWithType: PartitionReceiver.getFilter(final Message lastReceivedMessage)
  fullName: Map<Symbol, UnknownDescribedType> com.microsoft.azure.eventhubs.PartitionReceiver.getFilter(final Message lastReceivedMessage)
  overload: com.microsoft.azure.eventhubs._partition_receiver.getFilter*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 397
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public Map<Symbol, UnknownDescribedType> getFilter(final Message lastReceivedMessage)
    parameters:
    - id: lastReceivedMessage
      type: 8d3e47ad
    return:
      type: 39a8ce04
  overridden: com.microsoft.azure.servicebus._i_receiver_settings_provider.getFilter(final Message)
- uid: com.microsoft.azure.eventhubs._partition_receiver.getPartitionId()
  id: getPartitionId()
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: getPartitionId()
  nameWithType: PartitionReceiver.getPartitionId()
  fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.getPartitionId()
  overload: com.microsoft.azure.eventhubs._partition_receiver.getPartitionId*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 161
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Get EventHubs partition identifier.</p>

    <p></p>
  syntax:
    content: public final String getPartitionId()
    return:
      type: 3d93591e
      description: <p>The identifier representing the partition from which this receiver is fetching data </p>
- uid: com.microsoft.azure.eventhubs._partition_receiver.getPrefetchCount()
  id: getPrefetchCount()
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: getPrefetchCount()
  nameWithType: PartitionReceiver.getPrefetchCount()
  fullName: final int com.microsoft.azure.eventhubs.PartitionReceiver.getPrefetchCount()
  overload: com.microsoft.azure.eventhubs._partition_receiver.getPrefetchCount*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 171
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Get Prefetch Count configured on the Receiver.</p>

    <p></p>
  syntax:
    content: public final int getPrefetchCount()
    return:
      type: cd225469
      description: <p>the upper limit of events this receiver will actively receive regardless of whether a receive operation is pending. </p>
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver.setPrefetchCount(final int)
    description: ''
- uid: com.microsoft.azure.eventhubs._partition_receiver.getProperties()
  id: getProperties()
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: getProperties()
  nameWithType: PartitionReceiver.getProperties()
  fullName: Map<Symbol, Object> com.microsoft.azure.eventhubs.PartitionReceiver.getProperties()
  overload: com.microsoft.azure.eventhubs._partition_receiver.getProperties*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 447
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public Map<Symbol, Object> getProperties()
    return:
      type: 6bd35e50
  overridden: com.microsoft.azure.servicebus._i_receiver_settings_provider.getProperties()
- uid: com.microsoft.azure.eventhubs._partition_receiver.getReceiveTimeout()
  id: getReceiveTimeout()
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: getReceiveTimeout()
  nameWithType: PartitionReceiver.getReceiveTimeout()
  fullName: final Duration com.microsoft.azure.eventhubs.PartitionReceiver.getReceiveTimeout()
  overload: com.microsoft.azure.eventhubs._partition_receiver.getReceiveTimeout*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 175
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public final Duration getReceiveTimeout()
    return:
      type: 89ac7c4d
- uid: com.microsoft.azure.eventhubs._partition_receiver.getRuntimeInformation()
  id: getRuntimeInformation()
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: getRuntimeInformation()
  nameWithType: PartitionReceiver.getRuntimeInformation()
  fullName: final ReceiverRuntimeInformation com.microsoft.azure.eventhubs.PartitionReceiver.getRuntimeInformation()
  overload: com.microsoft.azure.eventhubs._partition_receiver.getRuntimeInformation*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 217
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Gets the temporal <xref href="com.microsoft.azure.eventhubs._receiver_runtime_information" data-throw-if-not-resolved="false"></xref> for this EventHub partition. In general, this information is a representation of, where this <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>'s end of stream is, at the time <xref href="com.microsoft.azure.eventhubs._receiver_runtime_information.getRetrievalTime()" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final ReceiverRuntimeInformation getRuntimeInformation()
    return:
      type: 93de0ef9com.microsoft.azure.eventhubs._receiver_runtime_information
      description: <p>receiver runtime information </p>
- uid: com.microsoft.azure.eventhubs._partition_receiver.onClose()
  id: onClose()
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: onClose()
  nameWithType: PartitionReceiver.onClose()
  fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionReceiver.onClose()
  overload: com.microsoft.azure.eventhubs._partition_receiver.onClose*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 380
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public CompletableFuture<Void> onClose()
    return:
      type: db03ee24
- uid: com.microsoft.azure.eventhubs._partition_receiver.receive(final int)
  id: receive(final int)
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: receive(final int maxEventCount)
  nameWithType: PartitionReceiver.receive(final int maxEventCount)
  fullName: CompletableFuture<Iterable<EventData>> com.microsoft.azure.eventhubs.PartitionReceiver.receive(final int maxEventCount)
  overload: com.microsoft.azure.eventhubs._partition_receiver.receive*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 289
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Receive a batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s from an EventHub partition </p>

    <p>Sample code (sample uses sync version of the api but concept are identical): <preformatted><xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> client = <xref href="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)" data-throw-if-not-resolved="false"></xref>("__connection__");

    <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> receiver = client.createPartitionReceiverSync("ConsumerGroup1", "1");

    Iterable{&lt;}<xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>{&gt;} receivedEvents = receiver.receiveSync();</preformatted></p>

    <p>

      <preformatted>while (true)

    {

        int batchSize = 0;

        if (receivedEvents != null)

        {

            for(EventData receivedEvent: receivedEvents)

            {

                System.out.println(String.format("Message Payload: %s", new String(receivedEvent.getBytes(), Charset.defaultCharset())));

                System.out.println(String.format("Offset: %s, SeqNo: %s, EnqueueTime: %s",

                    receivedEvent.getSystemProperties().getOffset(),

                    receivedEvent.getSystemProperties().getSequenceNumber(),

                    receivedEvent.getSystemProperties().getEnqueuedTime()));

                batchSize++;

            }

        }</preformatted>

    </p>

    <p>

      <preformatted>    System.out.println(String.format("ReceivedBatch Size: %s", batchSize));

        receivedEvents = receiver.receiveSync();

    }

    </preformatted>

    </p>

    <p></p>
  syntax: &o3
    content: public CompletableFuture<Iterable<EventData>> receive(final int maxEventCount)
    parameters:
    - id: maxEventCount
      type: cd225469
      description: <p>maximum number of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s that this call should return </p>
    return:
      type: 5ae8a14ccom.microsoft.azure.eventhubs._event_datae7daa122
      description: <p>A completableFuture that will yield a batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s from the partition on which this receiver is created. Returns 'null' if no <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> is present. </p>
- uid: com.microsoft.azure.eventhubs._partition_receiver.receiveSync(final int)
  id: receiveSync(final int)
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: receiveSync(final int maxEventCount)
  nameWithType: PartitionReceiver.receiveSync(final int maxEventCount)
  fullName: final Iterable<EventData> com.microsoft.azure.eventhubs.PartitionReceiver.receiveSync(final int maxEventCount)
  overload: com.microsoft.azure.eventhubs._partition_receiver.receiveSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 229
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._partition_receiver.receive(final int)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final Iterable<EventData> receiveSync(final int maxEventCount)
    parameters:
    - id: maxEventCount
      type: cd225469
      description: <p>maximum number of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s that this call should return </p>
    return:
      type: f42d2527com.microsoft.azure.eventhubs._event_dataa08ddfce
      description: <p>Batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s from the partition on which this receiver is created. Returns 'null' if no <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> is present. </p>
  exceptions:
  - type: 73fec9fb
    description: <p>if ServiceBus client encountered any unrecoverable/non-transient problems during <xref href="com.microsoft.azure.eventhubs._partition_receiver.receive(final int)" data-throw-if-not-resolved="false"></xref></p>
- uid: com.microsoft.azure.eventhubs._partition_receiver.setPrefetchCount(final int)
  id: setPrefetchCount(final int)
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: setPrefetchCount(final int prefetchCount)
  nameWithType: PartitionReceiver.setPrefetchCount(final int prefetchCount)
  fullName: final void com.microsoft.azure.eventhubs.PartitionReceiver.setPrefetchCount(final int prefetchCount)
  overload: com.microsoft.azure.eventhubs._partition_receiver.setPrefetchCount*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 190
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Set the number of events that can be pre-fetched and cached at the <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. </p>

    <p>By default the value is 300</p>

    <p></p>
  syntax: &o2
    content: public final void setPrefetchCount(final int prefetchCount)
    parameters:
    - id: prefetchCount
      type: cd225469
      description: <p>the number of events to pre-fetch. value must be between 10 and 999. Default is 300. </p>
    return:
      type: 3f6357ce
  exceptions:
  - type: 73fec9fb
    description: <p>if setting prefetchCount encounters error </p>
- uid: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler(final PartitionReceiveHandler)
  id: setReceiveHandler(final PartitionReceiveHandler)
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: setReceiveHandler(final PartitionReceiveHandler receiveHandler)
  nameWithType: PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler)
  fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler)
  overload: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 325
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Register a receive handler that will be called when an event is available. A <xref href="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false"></xref> is a handler that allows user to specify a callback for event processing and error handling in a receive pump model.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> setReceiveHandler(final PartitionReceiveHandler receiveHandler)
    parameters:
    - id: receiveHandler
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receive_handler
      description: <p>An implementation of <xref href="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false"></xref>. Setting this handler to <code>null</code> will stop the receive pump. </p>
    return:
      type: db03ee24
      description: <p>A completableFuture which sets receiveHandler </p>
- uid: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler(final PartitionReceiveHandler,final boolean)
  id: setReceiveHandler(final PartitionReceiveHandler,final boolean)
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: setReceiveHandler(final PartitionReceiveHandler receiveHandler, final boolean invokeWhenNoEvents)
  nameWithType: PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler, final boolean invokeWhenNoEvents)
  fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler, final boolean invokeWhenNoEvents)
  overload: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 338
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Register a receive handler that will be called when an event is available. A <xref href="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false"></xref> is a handler that allows user to specify a callback for event processing and error handling in a receive pump model.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> setReceiveHandler(final PartitionReceiveHandler receiveHandler, final boolean invokeWhenNoEvents)
    parameters:
    - id: receiveHandler
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receive_handler
      description: <p>An implementation of <xref href="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false"></xref></p>
    - id: invokeWhenNoEvents
      type: 4dda0764
      description: <p>flag to indicate whether the <ref refid="" kindref="compound">PartitionReceiveHandler#onReceive(Iterable)</ref> should be invoked when the receive call times out </p>
    return:
      type: db03ee24
      description: <p>A completableFuture which sets receiveHandler </p>
- uid: com.microsoft.azure.eventhubs._partition_receiver.setReceiveTimeout(Duration)
  id: setReceiveTimeout(Duration)
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: setReceiveTimeout(Duration value)
  nameWithType: PartitionReceiver.setReceiveTimeout(Duration value)
  fullName: void com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveTimeout(Duration value)
  overload: com.microsoft.azure.eventhubs._partition_receiver.setReceiveTimeout*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 179
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public void setReceiveTimeout(Duration value)
    parameters:
    - id: value
      type: e02a2de0
- uid: com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()
  id: START_OF_STREAM()
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  langs:
  - java
  name: START_OF_STREAM
  nameWithType: PartitionReceiver.START_OF_STREAM
  fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.START_OF_STREAM
  type: Field
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
    startLine: 59
  package: com.microsoft.azure.eventhubs
  summary: <p>This is a constant defined to represent the start of a partition stream in EventHub. </p>
  syntax:
    content: public static final String START_OF_STREAM= "-1"
    return:
      type: 3d93591e
references:
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.azure.eventhubs._partition_receiver.getPartitionId*
  name: getPartitionId
  nameWithType: PartitionReceiver.getPartitionId
  fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.getPartitionId
  package: com.microsoft.azure.eventhubs
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: com.microsoft.azure.eventhubs._partition_receiver.getPrefetchCount*
  name: getPrefetchCount
  nameWithType: PartitionReceiver.getPrefetchCount
  fullName: final int com.microsoft.azure.eventhubs.PartitionReceiver.getPrefetchCount
  package: com.microsoft.azure.eventhubs
- uid: 89ac7c4d
  spec.java:
  - name: final Duration
    fullName: final Duration
- uid: com.microsoft.azure.eventhubs._partition_receiver.getReceiveTimeout*
  name: getReceiveTimeout
  nameWithType: PartitionReceiver.getReceiveTimeout
  fullName: final Duration com.microsoft.azure.eventhubs.PartitionReceiver.getReceiveTimeout
  package: com.microsoft.azure.eventhubs
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: com.microsoft.azure.eventhubs._partition_receiver.setReceiveTimeout*
  name: setReceiveTimeout
  nameWithType: PartitionReceiver.setReceiveTimeout
  fullName: void com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveTimeout
  package: com.microsoft.azure.eventhubs
- uid: 73fec9fb
  spec.java:
  - name: ServiceBusException
    fullName: ServiceBusException
- uid: 3f6357ce
  spec.java:
  - name: final void
    fullName: final void
- uid: com.microsoft.azure.eventhubs._partition_receiver.setPrefetchCount*
  name: setPrefetchCount
  nameWithType: PartitionReceiver.setPrefetchCount
  fullName: final void com.microsoft.azure.eventhubs.PartitionReceiver.setPrefetchCount
  package: com.microsoft.azure.eventhubs
- uid: 4c60ae65
  spec.java:
  - name: final long
    fullName: final long
- uid: com.microsoft.azure.eventhubs._partition_receiver.getEpoch*
  name: getEpoch
  nameWithType: PartitionReceiver.getEpoch
  fullName: final long com.microsoft.azure.eventhubs.PartitionReceiver.getEpoch
  package: com.microsoft.azure.eventhubs
- uid: 93de0ef9com.microsoft.azure.eventhubs._receiver_runtime_information
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs._receiver_runtime_information
    name: ReceiverRuntimeInformation
    fullName: com.microsoft.azure.eventhubs.ReceiverRuntimeInformation
    href: com.microsoft.azure.eventhubs._receiver_runtime_information.yml
- uid: com.microsoft.azure.eventhubs._partition_receiver.getRuntimeInformation*
  name: getRuntimeInformation
  nameWithType: PartitionReceiver.getRuntimeInformation
  fullName: final ReceiverRuntimeInformation com.microsoft.azure.eventhubs.PartitionReceiver.getRuntimeInformation
  package: com.microsoft.azure.eventhubs
- uid: f42d2527com.microsoft.azure.eventhubs._event_dataa08ddfce
  spec.java:
  - name: final Iterable<
    fullName: final Iterable<
  - uid: com.microsoft.azure.eventhubs._event_data
    name: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    href: com.microsoft.azure.eventhubs._event_data.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventhubs._partition_receiver.receiveSync*
  name: receiveSync
  nameWithType: PartitionReceiver.receiveSync
  fullName: final Iterable<EventData> com.microsoft.azure.eventhubs.PartitionReceiver.receiveSync
  package: com.microsoft.azure.eventhubs
- uid: 5ae8a14ccom.microsoft.azure.eventhubs._event_datae7daa122
  spec.java:
  - name: CompletableFuture<Iterable<
    fullName: CompletableFuture<Iterable<
  - uid: com.microsoft.azure.eventhubs._event_data
    name: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    href: com.microsoft.azure.eventhubs._event_data.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.eventhubs._partition_receiver.receive*
  name: receive
  nameWithType: PartitionReceiver.receive
  fullName: CompletableFuture<Iterable<EventData>> com.microsoft.azure.eventhubs.PartitionReceiver.receive
  package: com.microsoft.azure.eventhubs
- uid: 93de0ef9com.microsoft.azure.eventhubs._partition_receive_handler
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler
    name: PartitionReceiveHandler
    fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
    href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler*
  name: setReceiveHandler
  nameWithType: PartitionReceiver.setReceiveHandler
  fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler
  package: com.microsoft.azure.eventhubs
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: com.microsoft.azure.eventhubs._partition_receiver.onClose*
  name: onClose
  nameWithType: PartitionReceiver.onClose
  fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionReceiver.onClose
  package: com.microsoft.azure.eventhubs
- uid: 8d3e47ad
  spec.java:
  - name: final Message
    fullName: final Message
- uid: 39a8ce04
  spec.java:
  - name: Map<Symbol, UnknownDescribedType>
    fullName: Map<Symbol, UnknownDescribedType>
- uid: com.microsoft.azure.eventhubs._partition_receiver.getFilter*
  name: getFilter
  nameWithType: PartitionReceiver.getFilter
  fullName: Map<Symbol, UnknownDescribedType> com.microsoft.azure.eventhubs.PartitionReceiver.getFilter
  package: com.microsoft.azure.eventhubs
- uid: 6bd35e50
  spec.java:
  - name: Map<Symbol, Object>
    fullName: Map<Symbol, Object>
- uid: com.microsoft.azure.eventhubs._partition_receiver.getProperties*
  name: getProperties
  nameWithType: PartitionReceiver.getProperties
  fullName: Map<Symbol, Object> com.microsoft.azure.eventhubs.PartitionReceiver.getProperties
  package: com.microsoft.azure.eventhubs
- uid: ddcc4456
  spec.java:
  - name: Symbol []
    fullName: Symbol []
- uid: com.microsoft.azure.eventhubs._partition_receiver.getDesiredCapabilities*
  name: getDesiredCapabilities
  nameWithType: PartitionReceiver.getDesiredCapabilities
  fullName: Symbol [] com.microsoft.azure.eventhubs.PartitionReceiver.getDesiredCapabilities
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.servicebus._client_entity.ClientEntity(final String,final ClientEntity)
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: ClientEntity(final String clientId, final ClientEntity parent)
  nameWithType: ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)
  fullName: com.microsoft.azure.servicebus.ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)
  type: Constructor
  syntax:
    content: protected ClientEntity(final String clientId, final ClientEntity parent)
    parameters:
    - id: clientId
      type: 3d93591e
    - id: parent
      type: 93de0ef9com.microsoft.azure.servicebus._client_entity
- uid: com.microsoft.azure.servicebus._client_entity.close()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: close()
  nameWithType: ClientEntity.close()
  fullName: final CompletableFuture<Void> com.microsoft.azure.servicebus.ClientEntity.close()
  type: Method
  syntax:
    content: public final CompletableFuture<Void> close()
    return:
      type: fc984e6f
- uid: com.microsoft.azure.servicebus._client_entity.closeSync()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: closeSync()
  nameWithType: ClientEntity.closeSync()
  fullName: final void com.microsoft.azure.servicebus.ClientEntity.closeSync()
  type: Method
  syntax:
    content: public final void closeSync()
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.eventhubs._partition_receiver.create(MessagingFactory,final String,final String,final String,final String,final boolean,final Instant,final long,final boolean,final ReceiverOptions)
- uid: com.microsoft.azure.eventhubs._partition_receiver.DEFAULT_PREFETCH_COUNT()
- uid: com.microsoft.azure.servicebus._client_entity.getClientId()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: getClientId()
  nameWithType: ClientEntity.getClientId()
  fullName: String com.microsoft.azure.servicebus.ClientEntity.getClientId()
  type: Method
  syntax:
    content: public String getClientId()
    return:
      type: "26831127"
- uid: com.microsoft.azure.servicebus._client_entity.getIsClosed()
- uid: com.microsoft.azure.servicebus._client_entity.getIsClosingOrClosed()
- uid: com.microsoft.azure.servicebus._client_entity.getLastKnownError()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: getLastKnownError()
  nameWithType: ClientEntity.getLastKnownError()
  fullName: Exception com.microsoft.azure.servicebus.ClientEntity.getLastKnownError()
  type: Method
  syntax:
    content: protected Exception getLastKnownError()
    return:
      type: 8a99d4b0
- uid: com.microsoft.azure.eventhubs._partition_receiver.getOffsetInclusive()
- uid: com.microsoft.azure.eventhubs._partition_receiver.getStartingOffset()
- uid: com.microsoft.azure.eventhubs._partition_receiver.NULL_EPOCH()
- uid: com.microsoft.azure.servicebus._client_entity.setClosed()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: setClosed()
  nameWithType: ClientEntity.setClosed()
  fullName: final void com.microsoft.azure.servicebus.ClientEntity.setClosed()
  type: Method
  syntax:
    content: protected final void setClosed()
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.servicebus._client_entity.throwIfClosed()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: throwIfClosed()
  nameWithType: ClientEntity.throwIfClosed()
  fullName: final void com.microsoft.azure.servicebus.ClientEntity.throwIfClosed()
  type: Method
  syntax:
    content: protected final void throwIfClosed()
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.servicebus._client_entity
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: ClientEntity
  nameWithType: ClientEntity
  fullName: com.microsoft.azure.servicebus.ClientEntity
  type: Class
  summary: '<p>Contract for all client entities with Open-Close/Abort state m/c main-purpose: closeAll related entities Internal-class </p>'
  syntax:
    content: public class ClientEntity
- uid: com.microsoft.azure.servicebus._i_receiver_settings_provider
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._i_receiver_settings_provider.yml
  name: IReceiverSettingsProvider
  nameWithType: IReceiverSettingsProvider
  fullName: com.microsoft.azure.servicebus.IReceiverSettingsProvider
  type: Interface
  syntax:
    content: public interface IReceiverSettingsProvider
- uid: com.microsoft.azure.servicebus._messaging_factory
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._messaging_factory.yml
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.servicebus.MessagingFactory
  type: Class
  summary: <p>Abstracts all amqp related details and exposes AmqpConnection object Manages connection life-cycle </p>
  syntax:
    content: public class MessagingFactory extends ClientEntity implements IAmqpConnection
- uid: com.microsoft.azure.servicebus._message_receiver
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._message_receiver.yml
  name: MessageReceiver
  nameWithType: MessageReceiver
  fullName: com.microsoft.azure.servicebus.MessageReceiver
  type: Class
  summary: <p>Common Receiver that abstracts all amqp related details translates event-driven reactor model into async receive Api </p>
  syntax:
    content: public class MessageReceiver extends ClientEntity implements IAmqpReceiver
- uid: com.microsoft.azure.eventhubs._receive_pump
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receive_pump.yml
  name: ReceivePump
  nameWithType: ReceivePump
  fullName: com.microsoft.azure.eventhubs.ReceivePump
  type: Class
  syntax:
    content: public class ReceivePump
- uid: com.microsoft.azure.eventhubs._receiver_options
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receiver_options.yml
  name: ReceiverOptions
  nameWithType: ReceiverOptions
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions
  type: Class
  summary: <p>Represents various optional behaviors which can be turned on or off during the creation of a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ReceiverOptions
- uid: com.microsoft.azure.eventhubs._receiver_runtime_information
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receiver_runtime_information.yml
  name: ReceiverRuntimeInformation
  nameWithType: ReceiverRuntimeInformation
  fullName: com.microsoft.azure.eventhubs.ReceiverRuntimeInformation
  type: Class
  summary: <p>Represents the temporal receiver runtime information for a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. Current received <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> and <xref href="com.microsoft.azure.eventhubs._receiver_runtime_information" data-throw-if-not-resolved="false"></xref> can be used to find approximate value of pending events (which are not processed yet). </p>
  syntax:
    content: public class ReceiverRuntimeInformation
- uid: com.microsoft.azure.servicebus._service_bus_exception
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._service_bus_exception.yml
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.ServiceBusException
  type: Class
  summary: <p>This is the base exception that service bus will produce for all error cases. </p>
  syntax:
    content: public class ServiceBusException
- uid: com.microsoft.azure.eventhubs._partition_receiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: PartitionReceiver
  nameWithType: PartitionReceiver
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver
  type: Class
  summary: >-
    <p>This is a logical representation of receiving from a EventHub partition. </p>

    <p>A <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> is tied to a ConsumerGroup + EventHub Partition combination. <itemizedlist><listitem><p>If an epoch based <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> (i.e., <xref href="com.microsoft.azure.eventhubs._partition_receiver.getEpoch()" data-throw-if-not-resolved="false"></xref> != 0) is created, EventHubs service will guarantee only 1 active receiver exists per ConsumerGroup + Partition combo. This is the recommended approach to create a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. </p></listitem><listitem><p>Multiple receivers per ConsumerGroup + Partition combo can be created using non-epoch receivers. </p></listitem></itemizedlist></p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.eventhubs._partition_receiver.setPrefetchCount(final int)
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: setPrefetchCount(final int prefetchCount)
  nameWithType: PartitionReceiver.setPrefetchCount(final int prefetchCount)
  fullName: final void com.microsoft.azure.eventhubs.PartitionReceiver.setPrefetchCount(final int prefetchCount)
  type: Method
  summary: >-
    <p>Set the number of events that can be pre-fetched and cached at the <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. </p>

    <p>By default the value is 300</p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.eventhubs._receiver_runtime_information.getRetrievalTime()
  parent: com.microsoft.azure.eventhubs._receiver_runtime_information
  href: com.microsoft.azure.eventhubs._receiver_runtime_information.yml
  name: getRetrievalTime()
  nameWithType: ReceiverRuntimeInformation.getRetrievalTime()
  fullName: Instant com.microsoft.azure.eventhubs.ReceiverRuntimeInformation.getRetrievalTime()
  type: Method
  summary: >-
    <p>Get the timestamp at which this <xref href="com.microsoft.azure.eventhubs._receiver_runtime_information" data-throw-if-not-resolved="false"></xref> was constructed.</p>

    <p></p>
  syntax:
    content: public Instant getRetrievalTime()
    return:
      type: 328f8254
      description: <p>retrieval time </p>
- uid: com.microsoft.azure.eventhubs._event_data
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data.yml
  name: EventData
  nameWithType: EventData
  fullName: com.microsoft.azure.eventhubs.EventData
  type: Class
  summary: >-
    <p>The data structure encapsulating the Event being sent-to and received-from EventHubs. Each EventHubs partition can be visualized as a Stream of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>

    <p>Serializing a received <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> with AMQP sections other than ApplicationProperties (with primitive java types) and Data section is not supported. </p>

    <p>Here's how AMQP message sections map to <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. Here's the reference used for AMQP 1.0 specification: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><preformatted>

    i.   <xref href="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false"></xref> - AMQPMessage.ApplicationProperties section

    ii.  <xref href="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false"></xref> - if AMQPMessage.Body has Data section

    iii. <xref href="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false"></xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections

    </preformatted> While using client libraries released by Microsoft Azure EventHubs, sections (i) and (ii) alone are sufficient. Section (iii) is used for advanced scenarios, where the sending application uses third-party AMQP library to send the message to EventHubs and the receiving application uses this client library to receive <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class EventData
- uid: com.microsoft.azure.eventhubs._partition_receiver.receive(final int)
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: receive(final int maxEventCount)
  nameWithType: PartitionReceiver.receive(final int maxEventCount)
  fullName: CompletableFuture<Iterable<EventData>> com.microsoft.azure.eventhubs.PartitionReceiver.receive(final int maxEventCount)
  type: Method
  summary: >-
    <p>Receive a batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s from an EventHub partition </p>

    <p>Sample code (sample uses sync version of the api but concept are identical): <preformatted><xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> client = <xref href="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)" data-throw-if-not-resolved="false"></xref>("__connection__");

    <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> receiver = client.createPartitionReceiverSync("ConsumerGroup1", "1");

    Iterable{&lt;}<xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>{&gt;} receivedEvents = receiver.receiveSync();</preformatted></p>

    <p>

      <preformatted>while (true)

    {

        int batchSize = 0;

        if (receivedEvents != null)

        {

            for(EventData receivedEvent: receivedEvents)

            {

                System.out.println(String.format("Message Payload: %s", new String(receivedEvent.getBytes(), Charset.defaultCharset())));

                System.out.println(String.format("Offset: %s, SeqNo: %s, EnqueueTime: %s",

                    receivedEvent.getSystemProperties().getOffset(),

                    receivedEvent.getSystemProperties().getSequenceNumber(),

                    receivedEvent.getSystemProperties().getEnqueuedTime()));

                batchSize++;

            }

        }</preformatted>

    </p>

    <p>

      <preformatted>    System.out.println(String.format("ReceivedBatch Size: %s", batchSize));

        receivedEvents = receiver.receiveSync();

    }

    </preformatted>

    </p>

    <p></p>
  syntax: *o3
- uid: com.microsoft.azure.eventhubs._event_hub_client
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: EventHubClient
  nameWithType: EventHubClient
  fullName: com.microsoft.azure.eventhubs.EventHubClient
  type: Class
  summary: >-
    <p>Anchor class - all EventHub client operations STARTS here.</p>

    <p></p>
  syntax:
    content: public class EventHubClient extends ClientEntity
- uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: createFromConnectionStringSync(final String connectionString)
  nameWithType: EventHubClient.createFromConnectionStringSync(final String connectionString)
  fullName: static EventHubClient com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionStringSync(final String connectionString)
  type: Method
  summary: >-
    <p>Synchronous version of <xref href="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public static EventHubClient createFromConnectionStringSync(final String connectionString)
    parameters:
    - id: connectionString
      type: 3d93591e
      description: <p>The connection string to be used. See <ref refid="" kindref="compound">ConnectionStringBuilder</ref> to construct a connectionString. </p>
    return:
      type: com.microsoft.azure.eventhubs._event_hub_client
      description: >-
        <p>

          <xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> which can be used to create Senders and Receivers to EventHub </p>
- uid: com.microsoft.azure.eventhubs._partition_receive_handler
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
  name: PartitionReceiveHandler
  nameWithType: PartitionReceiveHandler
  fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
  type: Class
  summary: >-
    <p>A handler class for the receive operation. Use any implementation of this abstract class to specify user action when using <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>'s setReceiveHandler().</p>

    <p></p>
  syntax:
    content: public class PartitionReceiveHandler
- uid: com.microsoft.azure.servicebus._i_receiver_settings_provider.getFilter(final Message)
  parent: com.microsoft.azure.servicebus._i_receiver_settings_provider
  href: com.microsoft.azure.servicebus._i_receiver_settings_provider.yml
  name: getFilter(final Message lastReceivedMessage)
  nameWithType: IReceiverSettingsProvider.getFilter(final Message lastReceivedMessage)
  fullName: Map<Symbol, UnknownDescribedType> com.microsoft.azure.servicebus.IReceiverSettingsProvider.getFilter(final Message lastReceivedMessage)
  type: Method
  syntax:
    content: public Map<Symbol, UnknownDescribedType> getFilter(final Message lastReceivedMessage)
    parameters:
    - id: lastReceivedMessage
      type: 8d3e47ad
    return:
      type: 39a8ce04
- uid: com.microsoft.azure.servicebus._i_receiver_settings_provider.getProperties()
  parent: com.microsoft.azure.servicebus._i_receiver_settings_provider
  href: com.microsoft.azure.servicebus._i_receiver_settings_provider.yml
  name: getProperties()
  nameWithType: IReceiverSettingsProvider.getProperties()
  fullName: Map<Symbol, Object> com.microsoft.azure.servicebus.IReceiverSettingsProvider.getProperties()
  type: Method
  syntax:
    content: public Map<Symbol, Object> getProperties()
    return:
      type: 6bd35e50
- uid: com.microsoft.azure.servicebus._i_receiver_settings_provider.getDesiredCapabilities()
  parent: com.microsoft.azure.servicebus._i_receiver_settings_provider
  href: com.microsoft.azure.servicebus._i_receiver_settings_provider.yml
  name: getDesiredCapabilities()
  nameWithType: IReceiverSettingsProvider.getDesiredCapabilities()
  fullName: Symbol [] com.microsoft.azure.servicebus.IReceiverSettingsProvider.getDesiredCapabilities()
  type: Method
  syntax:
    content: public Symbol [] getDesiredCapabilities()
    return:
      type: ddcc4456
- uid: com.microsoft.azure.eventhubs._partition_receiver.getEpoch()
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: getEpoch()
  nameWithType: PartitionReceiver.getEpoch()
  fullName: final long com.microsoft.azure.eventhubs.PartitionReceiver.getEpoch()
  type: Method
  summary: >-
    <p>Get the epoch value that this receiver is currently using for partition ownership. </p>

    <p>A value of 0 means this receiver is not an epoch-based receiver.</p>

    <p></p>
  syntax: *o4
- uid: com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)
  nameWithType: EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)
  type: Method
  summary: >-
    <p>The receiver is created for a specific EventHub partition from the specific consumer group. </p>

    <p>NOTE: There can be a maximum number of receivers that can run in parallel per ConsumerGroup per Partition. The limit is enforced by the Event Hub service - current limit is 5 receivers in parallel. Having multiple receivers reading from offsets that are far apart on the same consumer group / partition combo will have significant performance Impact.</p>

    <p></p>
  syntax:
    content: public final CompletableFuture<PartitionReceiver> createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> instance when it is completed. </p>
- uid: com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,final long)
  parent: com.microsoft.azure.eventhubs._event_hub_client
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
  nameWithType: EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
  fullName: final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
  type: Method
  summary: >-
    <p>Create a Epoch based EventHub receiver with given partition id and start receiving from the beginning of the partition stream. The receiver is created for a specific EventHub Partition from the specific consumer group. </p>

    <p>It is important to pay attention to the following when creating epoch based receiver: <itemizedlist><listitem><p>Ownership enforcement - Once you created an epoch based receiver, you cannot create a non-epoch receiver to the same consumerGroup-Partition combo until all receivers to the combo are closed. </p></listitem><listitem><p>Ownership stealing - If a receiver with higher epoch value is created for a consumerGroup-Partition combo, any older epoch receiver to that combo will be force closed. </p></listitem><listitem><p>Any receiver closed due to lost of ownership to a consumerGroup-Partition combo will get ReceiverDisconnectedException for all operations from that receiver. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public final CompletableFuture<PartitionReceiver> createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: startingOffset
      type: 3d93591e
      description: '<p>the offset to start receiving the events from. To receive from start of the stream use: <xref href="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()" data-throw-if-not-resolved="false"></xref></p>'
    - id: epoch
      type: 4c60ae65
      description: <p>an unique identifier (epoch value) that the service uses, to enforce partition/lease ownership. </p>
    return:
      type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
      description: <p>a CompletableFuture that would result in a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> when it is completed. </p>
