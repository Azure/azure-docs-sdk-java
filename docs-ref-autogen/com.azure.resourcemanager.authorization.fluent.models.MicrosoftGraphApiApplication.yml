### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication"
fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication"
name: "MicrosoftGraphApiApplication"
nameWithType: "MicrosoftGraphApiApplication"
summary: "apiApplication."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class MicrosoftGraphApiApplication"
constructors:
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.MicrosoftGraphApiApplication()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.MicrosoftGraphApiApplication()"
  name: "MicrosoftGraphApiApplication()"
  nameWithType: "MicrosoftGraphApiApplication.MicrosoftGraphApiApplication()"
  syntax: "public MicrosoftGraphApiApplication()"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.acceptMappedClaims()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.acceptMappedClaims()"
  name: "acceptMappedClaims()"
  nameWithType: "MicrosoftGraphApiApplication.acceptMappedClaims()"
  summary: "Get the acceptMappedClaims property: When true, allows an application to use claims mapping without specifying a custom signing key."
  syntax: "public Boolean acceptMappedClaims()"
  returns:
    description: "the acceptMappedClaims value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.additionalProperties()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.additionalProperties()"
  name: "additionalProperties()"
  nameWithType: "MicrosoftGraphApiApplication.additionalProperties()"
  summary: "Get the additionalProperties property: apiApplication."
  syntax: "public Map<String,Object> additionalProperties()"
  returns:
    description: "the additionalProperties value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.knownClientApplications()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.knownClientApplications()"
  name: "knownClientApplications()"
  nameWithType: "MicrosoftGraphApiApplication.knownClientApplications()"
  summary: "Get the knownClientApplications property: Used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app. If you set the appID of the client app to this value, the user only consents once to the client app. Azure AD knows that consenting to the client means implicitly consenting to the web API and automatically provisions service principals for both APIs at the same time. Both the client and the web API app must be registered in the same tenant."
  syntax: "public List<UUID> knownClientApplications()"
  returns:
    description: "the knownClientApplications value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.oauth2PermissionScopes()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.oauth2PermissionScopes()"
  name: "oauth2PermissionScopes()"
  nameWithType: "MicrosoftGraphApiApplication.oauth2PermissionScopes()"
  summary: "Get the oauth2PermissionScopes property: The definition of the delegated permissions exposed by the web API represented by this application registration. These delegated permissions may be requested by a client application, and may be granted by users or administrators during consent. Delegated permissions are sometimes referred to as OAuth 2.0 scopes."
  syntax: "public List<MicrosoftGraphPermissionScope> oauth2PermissionScopes()"
  returns:
    description: "the oauth2PermissionScopes value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPermissionScope?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPermissionScope&text=MicrosoftGraphPermissionScope\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.preAuthorizedApplications()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.preAuthorizedApplications()"
  name: "preAuthorizedApplications()"
  nameWithType: "MicrosoftGraphApiApplication.preAuthorizedApplications()"
  summary: "Get the preAuthorizedApplications property: Lists the client applications that are pre-authorized with the specified delegated permissions to access this application's APIs. Users are not required to consent to any pre-authorized application (for the permissions specified). However, any additional permissions not listed in preAuthorizedApplications (requested through incremental consent for example) will require user consent."
  syntax: "public List<MicrosoftGraphPreAuthorizedApplication> preAuthorizedApplications()"
  returns:
    description: "the preAuthorizedApplications value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPreAuthorizedApplication?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPreAuthorizedApplication&text=MicrosoftGraphPreAuthorizedApplication\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.requestedAccessTokenVersion()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.requestedAccessTokenVersion()"
  name: "requestedAccessTokenVersion()"
  nameWithType: "MicrosoftGraphApiApplication.requestedAccessTokenVersion()"
  summary: "Get the requestedAccessTokenVersion property: Specifies the access token version expected by this resource. This changes the version and format of the JWT produced independent of the endpoint or client used to request the access token. The endpoint used, v1.0 or v2.0, is chosen by the client and only impacts the version of id\\_tokens. Resources need to explicitly configure requestedAccessTokenVersion to indicate the supported access token format. Possible values for requestedAccessTokenVersion are 1, 2, or null. If the value is null, this defaults to 1, which corresponds to the v1.0 endpoint. If signInAudience on the application is configured as AzureADandPersonalMicrosoftAccount, the value for this property must be 2."
  syntax: "public Integer requestedAccessTokenVersion()"
  returns:
    description: "the requestedAccessTokenVersion value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.validate()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.validate()"
  name: "validate()"
  nameWithType: "MicrosoftGraphApiApplication.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.withAcceptMappedClaims(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.withAcceptMappedClaims(Boolean acceptMappedClaims)"
  name: "withAcceptMappedClaims(Boolean acceptMappedClaims)"
  nameWithType: "MicrosoftGraphApiApplication.withAcceptMappedClaims(Boolean acceptMappedClaims)"
  summary: "Set the acceptMappedClaims property: When true, allows an application to use claims mapping without specifying a custom signing key."
  parameters:
  - description: "the acceptMappedClaims value to set."
    name: "acceptMappedClaims"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MicrosoftGraphApiApplication withAcceptMappedClaims(Boolean acceptMappedClaims)"
  returns:
    description: "the MicrosoftGraphApiApplication object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication&text=MicrosoftGraphApiApplication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.withAdditionalProperties(Map<String,Object> additionalProperties)"
  name: "withAdditionalProperties(Map<String,Object> additionalProperties)"
  nameWithType: "MicrosoftGraphApiApplication.withAdditionalProperties(Map<String,Object> additionalProperties)"
  summary: "Set the additionalProperties property: apiApplication."
  parameters:
  - description: "the additionalProperties value to set."
    name: "additionalProperties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MicrosoftGraphApiApplication withAdditionalProperties(Map<String,Object> additionalProperties)"
  returns:
    description: "the MicrosoftGraphApiApplication object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication&text=MicrosoftGraphApiApplication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.withKnownClientApplications(java.util.List<java.util.UUID>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.withKnownClientApplications(List<UUID> knownClientApplications)"
  name: "withKnownClientApplications(List<UUID> knownClientApplications)"
  nameWithType: "MicrosoftGraphApiApplication.withKnownClientApplications(List<UUID> knownClientApplications)"
  summary: "Set the knownClientApplications property: Used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app. If you set the appID of the client app to this value, the user only consents once to the client app. Azure AD knows that consenting to the client means implicitly consenting to the web API and automatically provisions service principals for both APIs at the same time. Both the client and the web API app must be registered in the same tenant."
  parameters:
  - description: "the knownClientApplications value to set."
    name: "knownClientApplications"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MicrosoftGraphApiApplication withKnownClientApplications(List<UUID> knownClientApplications)"
  returns:
    description: "the MicrosoftGraphApiApplication object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication&text=MicrosoftGraphApiApplication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.withOauth2PermissionScopes(java.util.List<com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPermissionScope>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.withOauth2PermissionScopes(List<MicrosoftGraphPermissionScope> oauth2PermissionScopes)"
  name: "withOauth2PermissionScopes(List<MicrosoftGraphPermissionScope> oauth2PermissionScopes)"
  nameWithType: "MicrosoftGraphApiApplication.withOauth2PermissionScopes(List<MicrosoftGraphPermissionScope> oauth2PermissionScopes)"
  summary: "Set the oauth2PermissionScopes property: The definition of the delegated permissions exposed by the web API represented by this application registration. These delegated permissions may be requested by a client application, and may be granted by users or administrators during consent. Delegated permissions are sometimes referred to as OAuth 2.0 scopes."
  parameters:
  - description: "the oauth2PermissionScopes value to set."
    name: "oauth2PermissionScopes"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPermissionScope?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPermissionScope&text=MicrosoftGraphPermissionScope\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MicrosoftGraphApiApplication withOauth2PermissionScopes(List<MicrosoftGraphPermissionScope> oauth2PermissionScopes)"
  returns:
    description: "the MicrosoftGraphApiApplication object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication&text=MicrosoftGraphApiApplication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.withPreAuthorizedApplications(java.util.List<com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPreAuthorizedApplication>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.withPreAuthorizedApplications(List<MicrosoftGraphPreAuthorizedApplication> preAuthorizedApplications)"
  name: "withPreAuthorizedApplications(List<MicrosoftGraphPreAuthorizedApplication> preAuthorizedApplications)"
  nameWithType: "MicrosoftGraphApiApplication.withPreAuthorizedApplications(List<MicrosoftGraphPreAuthorizedApplication> preAuthorizedApplications)"
  summary: "Set the preAuthorizedApplications property: Lists the client applications that are pre-authorized with the specified delegated permissions to access this application's APIs. Users are not required to consent to any pre-authorized application (for the permissions specified). However, any additional permissions not listed in preAuthorizedApplications (requested through incremental consent for example) will require user consent."
  parameters:
  - description: "the preAuthorizedApplications value to set."
    name: "preAuthorizedApplications"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPreAuthorizedApplication?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPreAuthorizedApplication&text=MicrosoftGraphPreAuthorizedApplication\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MicrosoftGraphApiApplication withPreAuthorizedApplications(List<MicrosoftGraphPreAuthorizedApplication> preAuthorizedApplications)"
  returns:
    description: "the MicrosoftGraphApiApplication object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication&text=MicrosoftGraphApiApplication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.withRequestedAccessTokenVersion(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication.withRequestedAccessTokenVersion(Integer requestedAccessTokenVersion)"
  name: "withRequestedAccessTokenVersion(Integer requestedAccessTokenVersion)"
  nameWithType: "MicrosoftGraphApiApplication.withRequestedAccessTokenVersion(Integer requestedAccessTokenVersion)"
  summary: "Set the requestedAccessTokenVersion property: Specifies the access token version expected by this resource. This changes the version and format of the JWT produced independent of the endpoint or client used to request the access token. The endpoint used, v1.0 or v2.0, is chosen by the client and only impacts the version of id\\_tokens. Resources need to explicitly configure requestedAccessTokenVersion to indicate the supported access token format. Possible values for requestedAccessTokenVersion are 1, 2, or null. If the value is null, this defaults to 1, which corresponds to the v1.0 endpoint. If signInAudience on the application is configured as AzureADandPersonalMicrosoftAccount, the value for this property must be 2."
  parameters:
  - description: "the requestedAccessTokenVersion value to set."
    name: "requestedAccessTokenVersion"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MicrosoftGraphApiApplication withRequestedAccessTokenVersion(Integer requestedAccessTokenVersion)"
  returns:
    description: "the MicrosoftGraphApiApplication object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphApiApplication&text=MicrosoftGraphApiApplication\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.14.0
