### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  id: "LiveEventsInner"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  children:
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.LiveEventsInner(retrofit2.Retrofit,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AzureMediaServicesImpl)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.LiveEventsService"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDelete(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginReset(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStart(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStop(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStop(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.create(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.create(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.delete(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.get(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.list(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listAsync(java.lang.String,java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNext(java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextAsync(java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listSinglePageAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.reset(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.start(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stop(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stop(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.update(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  langs:
  - "java"
  name: "LiveEventsInner"
  nameWithType: "LiveEventsInner"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  type: "Class"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "An instance of this class provides access to all the operations defined in LiveEvents."
  syntax:
    content: "public class LiveEventsInner"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.LiveEventsInner(retrofit2.Retrofit,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AzureMediaServicesImpl)"
  id: "LiveEventsInner(retrofit2.Retrofit,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AzureMediaServicesImpl)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "LiveEventsInner(Retrofit retrofit, AzureMediaServicesImpl client)"
  nameWithType: "LiveEventsInner.LiveEventsInner(Retrofit retrofit, AzureMediaServicesImpl client)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.LiveEventsInner(Retrofit retrofit, AzureMediaServicesImpl client)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.LiveEventsInner*"
  type: "Constructor"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Initializes an instance of LiveEventsInner."
  syntax:
    content: "public LiveEventsInner(Retrofit retrofit, AzureMediaServicesImpl client)"
    parameters:
    - id: "retrofit"
      type: "retrofit2.Retrofit"
      description: "the Retrofit instance built from a Retrofit Builder."
    - id: "client"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AzureMediaServicesImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  id: "beginCreate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginCreate(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  nameWithType: "LiveEventsInner.beginCreate(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreate(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreate*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public LiveEventInner beginCreate(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  id: "beginCreate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginCreate(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  nameWithType: "LiveEventsInner.beginCreate(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreate(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreate*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public LiveEventInner beginCreate(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    - id: "autoStart"
      type: "java.lang.Boolean"
      description: "The flag indicates if the resource should be automatically started on creation."
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  id: "beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  nameWithType: "LiveEventsInner.beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public Observable<LiveEventInner> beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the observable to the LiveEventInner object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  id: "beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
  nameWithType: "LiveEventsInner.beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public ServiceFuture<LiveEventInner> beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  id: "beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  nameWithType: "LiveEventsInner.beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public Observable<LiveEventInner> beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    - id: "autoStart"
      type: "java.lang.Boolean"
      description: "The flag indicates if the resource should be automatically started on creation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the observable to the LiveEventInner object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  id: "beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart, ServiceCallback<LiveEventInner> serviceCallback)"
  nameWithType: "LiveEventsInner.beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart, ServiceCallback<LiveEventInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart, ServiceCallback<LiveEventInner> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public ServiceFuture<LiveEventInner> beginCreateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart, ServiceCallback<LiveEventInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    - id: "autoStart"
      type: "java.lang.Boolean"
      description: "The flag indicates if the resource should be automatically started on creation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  id: "beginCreateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginCreateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  nameWithType: "LiveEventsInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public Observable<ServiceResponse<LiveEventInner>> beginCreateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
      description: "the observable to the LiveEventInner object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  id: "beginCreateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginCreateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  nameWithType: "LiveEventsInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public Observable<ServiceResponse<LiveEventInner>> beginCreateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    - id: "autoStart"
      type: "java.lang.Boolean"
      description: "The flag indicates if the resource should be automatically started on creation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
      description: "the observable to the LiveEventInner object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDelete(java.lang.String,java.lang.String,java.lang.String)"
  id: "beginDelete(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginDelete(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.beginDelete(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDelete(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDelete*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Delete Live Event. Deletes a Live Event."
  syntax:
    content: "public void beginDelete(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginDeleteAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.beginDeleteAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Delete Live Event. Deletes a Live Event."
  syntax:
    content: "public Observable<Void> beginDeleteAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginDeleteAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LiveEventsInner.beginDeleteAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Delete Live Event. Deletes a Live Event."
  syntax:
    content: "public ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "beginDeleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginDeleteWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Delete Live Event. Deletes a Live Event."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginReset(java.lang.String,java.lang.String,java.lang.String)"
  id: "beginReset(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginReset(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.beginReset(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginReset(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginReset*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Reset Live Event. Resets an existing Live Event."
  syntax:
    content: "public void beginReset(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "beginResetAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginResetAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.beginResetAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Reset Live Event. Resets an existing Live Event."
  syntax:
    content: "public Observable<Void> beginResetAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginResetAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginResetAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LiveEventsInner.beginResetAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Reset Live Event. Resets an existing Live Event."
  syntax:
    content: "public ServiceFuture<Void> beginResetAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "beginResetWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginResetWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.beginResetWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Reset Live Event. Resets an existing Live Event."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginResetWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStart(java.lang.String,java.lang.String,java.lang.String)"
  id: "beginStart(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginStart(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.beginStart(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStart(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStart*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Start Live Event. Starts an existing Live Event."
  syntax:
    content: "public void beginStart(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "beginStartAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginStartAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.beginStartAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Start Live Event. Starts an existing Live Event."
  syntax:
    content: "public Observable<Void> beginStartAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginStartAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginStartAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LiveEventsInner.beginStartAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Start Live Event. Starts an existing Live Event."
  syntax:
    content: "public ServiceFuture<Void> beginStartAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "beginStartWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginStartWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.beginStartWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Start Live Event. Starts an existing Live Event."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginStartWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStop(java.lang.String,java.lang.String,java.lang.String)"
  id: "beginStop(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginStop(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.beginStop(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStop(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStop*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public void beginStop(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStop(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  id: "beginStop(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginStop(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  nameWithType: "LiveEventsInner.beginStop(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStop(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStop*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public void beginStop(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "removeOutputsOnStop"
      type: "java.lang.Boolean"
      description: "The flag indicates if remove LiveOutputs on Stop."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "beginStopAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginStopAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.beginStopAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public Observable<Void> beginStopAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginStopAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginStopAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LiveEventsInner.beginStopAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public ServiceFuture<Void> beginStopAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  id: "beginStopAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginStopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  nameWithType: "LiveEventsInner.beginStopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public Observable<Void> beginStopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "removeOutputsOnStop"
      type: "java.lang.Boolean"
      description: "The flag indicates if remove LiveOutputs on Stop."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginStopAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginStopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LiveEventsInner.beginStopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public ServiceFuture<Void> beginStopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "removeOutputsOnStop"
      type: "java.lang.Boolean"
      description: "The flag indicates if remove LiveOutputs on Stop."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "beginStopWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginStopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.beginStopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginStopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  id: "beginStopWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginStopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  nameWithType: "LiveEventsInner.beginStopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginStopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "removeOutputsOnStop"
      type: "java.lang.Boolean"
      description: "The flag indicates if remove LiveOutputs on Stop."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  id: "beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginUpdate(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  nameWithType: "LiveEventsInner.beginUpdate(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdate(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdate*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Updates a existing Live Event."
  syntax:
    content: "public LiveEventInner beginUpdate(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  id: "beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginUpdateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  nameWithType: "LiveEventsInner.beginUpdateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Updates a existing Live Event."
  syntax:
    content: "public Observable<LiveEventInner> beginUpdateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the observable to the LiveEventInner object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  id: "beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginUpdateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
  nameWithType: "LiveEventsInner.beginUpdateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Updates a existing Live Event."
  syntax:
    content: "public ServiceFuture<LiveEventInner> beginUpdateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  id: "beginUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "beginUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  nameWithType: "LiveEventsInner.beginUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Updates a existing Live Event."
  syntax:
    content: "public Observable<ServiceResponse<LiveEventInner>> beginUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
      description: "the observable to the LiveEventInner object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.create(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  id: "create(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "create(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  nameWithType: "LiveEventsInner.create(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.create(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.create*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public LiveEventInner create(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.create(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  id: "create(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "create(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  nameWithType: "LiveEventsInner.create(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.create(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.create*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public LiveEventInner create(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    - id: "autoStart"
      type: "java.lang.Boolean"
      description: "The flag indicates if the resource should be automatically started on creation."
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  id: "createAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  nameWithType: "LiveEventsInner.createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public Observable<LiveEventInner> createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  id: "createAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
  nameWithType: "LiveEventsInner.createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public ServiceFuture<LiveEventInner> createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  id: "createAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  nameWithType: "LiveEventsInner.createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public Observable<LiveEventInner> createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    - id: "autoStart"
      type: "java.lang.Boolean"
      description: "The flag indicates if the resource should be automatically started on creation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  id: "createAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart, ServiceCallback<LiveEventInner> serviceCallback)"
  nameWithType: "LiveEventsInner.createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart, ServiceCallback<LiveEventInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart, ServiceCallback<LiveEventInner> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public ServiceFuture<LiveEventInner> createAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart, ServiceCallback<LiveEventInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    - id: "autoStart"
      type: "java.lang.Boolean"
      description: "The flag indicates if the resource should be automatically started on creation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  id: "createWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "createWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  nameWithType: "LiveEventsInner.createWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public Observable<ServiceResponse<LiveEventInner>> createWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  id: "createWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "createWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  nameWithType: "LiveEventsInner.createWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Create Live Event. Creates a Live Event."
  syntax:
    content: "public Observable<ServiceResponse<LiveEventInner>> createWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, Boolean autoStart)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    - id: "autoStart"
      type: "java.lang.Boolean"
      description: "The flag indicates if the resource should be automatically started on creation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.delete(java.lang.String,java.lang.String,java.lang.String)"
  id: "delete(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "delete(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.delete(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.delete(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.delete*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Delete Live Event. Deletes a Live Event."
  syntax:
    content: "public void delete(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "deleteAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.deleteAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Delete Live Event. Deletes a Live Event."
  syntax:
    content: "public Observable<Void> deleteAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "deleteAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "deleteAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LiveEventsInner.deleteAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Delete Live Event. Deletes a Live Event."
  syntax:
    content: "public ServiceFuture<Void> deleteAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "deleteWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.deleteWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Delete Live Event. Deletes a Live Event."
  syntax:
    content: "public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.get(java.lang.String,java.lang.String,java.lang.String)"
  id: "get(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "get(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.get(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.get(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.get*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get Live Event. Gets a Live Event."
  syntax:
    content: "public LiveEventInner get(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "getAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "getAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.getAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get Live Event. Gets a Live Event."
  syntax:
    content: "public Observable<LiveEventInner> getAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the observable to the LiveEventInner object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  id: "getAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "getAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<LiveEventInner> serviceCallback)"
  nameWithType: "LiveEventsInner.getAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<LiveEventInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<LiveEventInner> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get Live Event. Gets a Live Event."
  syntax:
    content: "public ServiceFuture<LiveEventInner> getAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<LiveEventInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "getWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "getWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.getWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get Live Event. Gets a Live Event."
  syntax:
    content: "public Observable<ServiceResponse<LiveEventInner>> getWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
      description: "the observable to the LiveEventInner object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.list(java.lang.String,java.lang.String)"
  id: "list(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "list(String resourceGroupName, String accountName)"
  nameWithType: "LiveEventsInner.list(String resourceGroupName, String accountName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.list(String resourceGroupName, String accountName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.list*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "List Live Events. Lists the Live Events in the account."
  syntax:
    content: "public PagedList<LiveEventInner> list(String resourceGroupName, String accountName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the PagedList&lt;LiveEventInner&gt; object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listAsync(java.lang.String,java.lang.String)"
  id: "listAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "listAsync(String resourceGroupName, String accountName)"
  nameWithType: "LiveEventsInner.listAsync(String resourceGroupName, String accountName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listAsync(String resourceGroupName, String accountName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "List Live Events. Lists the Live Events in the account."
  syntax:
    content: "public Observable<Page<LiveEventInner>> listAsync(String resourceGroupName, String accountName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
      description: "the observable to the PagedList&lt;LiveEventInner&gt; object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listAsync(java.lang.String,java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  id: "listAsync(java.lang.String,java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "listAsync(String resourceGroupName, String accountName, ListOperationCallback<LiveEventInner> serviceCallback)"
  nameWithType: "LiveEventsInner.listAsync(String resourceGroupName, String accountName, ListOperationCallback<LiveEventInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listAsync(String resourceGroupName, String accountName, ListOperationCallback<LiveEventInner> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "List Live Events. Lists the Live Events in the account."
  syntax:
    content: "public ServiceFuture<List<LiveEventInner>> listAsync(String resourceGroupName, String accountName, ListOperationCallback<LiveEventInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNext(java.lang.String)"
  id: "listNext(java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "listNext(String nextPageLink)"
  nameWithType: "LiveEventsInner.listNext(String nextPageLink)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNext(String nextPageLink)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNext*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "List Live Events. Lists the Live Events in the account."
  syntax:
    content: "public PagedList<LiveEventInner> listNext(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the PagedList&lt;LiveEventInner&gt; object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextAsync(java.lang.String)"
  id: "listNextAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "listNextAsync(String nextPageLink)"
  nameWithType: "LiveEventsInner.listNextAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "List Live Events. Lists the Live Events in the account."
  syntax:
    content: "public Observable<Page<LiveEventInner>> listNextAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
      description: "the observable to the PagedList&lt;LiveEventInner&gt; object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  id: "listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "listNextAsync(String nextPageLink, ServiceFuture<List<LiveEventInner>> serviceFuture, ListOperationCallback<LiveEventInner> serviceCallback)"
  nameWithType: "LiveEventsInner.listNextAsync(String nextPageLink, ServiceFuture<List<LiveEventInner>> serviceFuture, ListOperationCallback<LiveEventInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextAsync(String nextPageLink, ServiceFuture<List<LiveEventInner>> serviceFuture, ListOperationCallback<LiveEventInner> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "List Live Events. Lists the Live Events in the account."
  syntax:
    content: "public ServiceFuture<List<LiveEventInner>> listNextAsync(String nextPageLink, ServiceFuture<List<LiveEventInner>> serviceFuture, ListOperationCallback<LiveEventInner> serviceCallback)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    - id: "serviceFuture"
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
      description: "the ServiceFuture object tracking the Retrofit calls"
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextSinglePageAsync(java.lang.String)"
  id: "listNextSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "listNextSinglePageAsync(String nextPageLink)"
  nameWithType: "LiveEventsInner.listNextSinglePageAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextSinglePageAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "List Live Events. Lists the Live Events in the account. ServiceResponse> \\* @param nextPageLink The NextLink from the previous successful call to List operation."
  syntax:
    content: "public Observable<ServiceResponse<Page<LiveEventInner>>> listNextSinglePageAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>>"
      description: "the PagedList&lt;LiveEventInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextWithServiceResponseAsync(java.lang.String)"
  id: "listNextWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "listNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "LiveEventsInner.listNextWithServiceResponseAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextWithServiceResponseAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "List Live Events. Lists the Live Events in the account."
  syntax:
    content: "public Observable<ServiceResponse<Page<LiveEventInner>>> listNextWithServiceResponseAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>>"
      description: "the observable to the PagedList&lt;LiveEventInner&gt; object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listSinglePageAsync(java.lang.String,java.lang.String)"
  id: "listSinglePageAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "listSinglePageAsync(String resourceGroupName, String accountName)"
  nameWithType: "LiveEventsInner.listSinglePageAsync(String resourceGroupName, String accountName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listSinglePageAsync(String resourceGroupName, String accountName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "List Live Events. Lists the Live Events in the account. ServiceResponse> \\* @param resourceGroupName The name of the resource group within the Azure subscription. ServiceResponse> \\* @param accountName The Media Services account name."
  syntax:
    content: "public Observable<ServiceResponse<Page<LiveEventInner>>> listSinglePageAsync(String resourceGroupName, String accountName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
    - id: "accountName"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>>"
      description: "the PagedList&lt;LiveEventInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "listWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "listWithServiceResponseAsync(String resourceGroupName, String accountName)"
  nameWithType: "LiveEventsInner.listWithServiceResponseAsync(String resourceGroupName, String accountName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listWithServiceResponseAsync(String resourceGroupName, String accountName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "List Live Events. Lists the Live Events in the account."
  syntax:
    content: "public Observable<ServiceResponse<Page<LiveEventInner>>> listWithServiceResponseAsync(String resourceGroupName, String accountName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>>"
      description: "the observable to the PagedList&lt;LiveEventInner&gt; object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.reset(java.lang.String,java.lang.String,java.lang.String)"
  id: "reset(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "reset(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.reset(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.reset(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.reset*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Reset Live Event. Resets an existing Live Event."
  syntax:
    content: "public void reset(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "resetAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "resetAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.resetAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Reset Live Event. Resets an existing Live Event."
  syntax:
    content: "public Observable<Void> resetAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "resetAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "resetAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LiveEventsInner.resetAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Reset Live Event. Resets an existing Live Event."
  syntax:
    content: "public ServiceFuture<Void> resetAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "resetWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "resetWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.resetWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Reset Live Event. Resets an existing Live Event."
  syntax:
    content: "public Observable<ServiceResponse<Void>> resetWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.start(java.lang.String,java.lang.String,java.lang.String)"
  id: "start(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "start(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.start(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.start(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.start*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Start Live Event. Starts an existing Live Event."
  syntax:
    content: "public void start(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "startAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "startAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.startAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Start Live Event. Starts an existing Live Event."
  syntax:
    content: "public Observable<Void> startAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "startAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "startAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LiveEventsInner.startAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Start Live Event. Starts an existing Live Event."
  syntax:
    content: "public ServiceFuture<Void> startAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "startWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "startWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.startWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Start Live Event. Starts an existing Live Event."
  syntax:
    content: "public Observable<ServiceResponse<Void>> startWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stop(java.lang.String,java.lang.String,java.lang.String)"
  id: "stop(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "stop(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.stop(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stop(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stop*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public void stop(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stop(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  id: "stop(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "stop(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  nameWithType: "LiveEventsInner.stop(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stop(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stop*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public void stop(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "removeOutputsOnStop"
      type: "java.lang.Boolean"
      description: "The flag indicates if remove LiveOutputs on Stop."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "stopAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "stopAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.stopAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public Observable<Void> stopAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "stopAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "stopAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LiveEventsInner.stopAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public ServiceFuture<Void> stopAsync(String resourceGroupName, String accountName, String liveEventName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  id: "stopAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "stopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  nameWithType: "LiveEventsInner.stopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public Observable<Void> stopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "removeOutputsOnStop"
      type: "java.lang.Boolean"
      description: "The flag indicates if remove LiveOutputs on Stop."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "stopAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "stopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LiveEventsInner.stopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public ServiceFuture<Void> stopAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "removeOutputsOnStop"
      type: "java.lang.Boolean"
      description: "The flag indicates if remove LiveOutputs on Stop."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "stopWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "stopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  nameWithType: "LiveEventsInner.stopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public Observable<ServiceResponse<Void>> stopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  id: "stopWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "stopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  nameWithType: "LiveEventsInner.stopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Stop Live Event. Stops an existing Live Event."
  syntax:
    content: "public Observable<ServiceResponse<Void>> stopWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, Boolean removeOutputsOnStop)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "removeOutputsOnStop"
      type: "java.lang.Boolean"
      description: "The flag indicates if remove LiveOutputs on Stop."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.update(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  id: "update(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "update(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  nameWithType: "LiveEventsInner.update(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.update(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.update*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Updates a existing Live Event."
  syntax:
    content: "public LiveEventInner update(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  id: "updateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "updateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  nameWithType: "LiveEventsInner.updateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Updates a existing Live Event."
  syntax:
    content: "public Observable<LiveEventInner> updateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  id: "updateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "updateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
  nameWithType: "LiveEventsInner.updateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Updates a existing Live Event."
  syntax:
    content: "public ServiceFuture<LiveEventInner> updateAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters, ServiceCallback<LiveEventInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  id: "updateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner"
  langs:
  - "java"
  name: "updateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  nameWithType: "LiveEventsInner.updateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Updates a existing Live Event."
  syntax:
    content: "public Observable<ServiceResponse<LiveEventInner>> updateWithServiceResponseAsync(String resourceGroupName, String accountName, String liveEventName, LiveEventInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group within the Azure subscription."
    - id: "accountName"
      type: "java.lang.String"
      description: "The Media Services account name."
    - id: "liveEventName"
      type: "java.lang.String"
      description: "The name of the Live Event."
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "Live Event properties needed for creation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
      description: "the observable for the request"
references:
- uid: "retrofit2.Retrofit"
  spec.java:
  - uid: "retrofit2.Retrofit"
    name: "Retrofit"
    fullName: "retrofit2.Retrofit"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AzureMediaServicesImpl"
  name: "AzureMediaServicesImpl"
  nameWithType: "AzureMediaServicesImpl"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AzureMediaServicesImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.LiveEventsInner*"
  name: "LiveEventsInner"
  nameWithType: "LiveEventsInner.LiveEventsInner"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.LiveEventsInner"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.PagedList<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
  spec.java:
  - uid: "com.microsoft.azure.PagedList"
    name: "PagedList"
    fullName: "com.microsoft.azure.PagedList"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
    name: "LiveEventInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.list*"
  name: "list"
  nameWithType: "LiveEventsInner.list"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.list"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
  spec.java:
  - uid: "com.microsoft.azure.ListOperationCallback"
    name: "ListOperationCallback"
    fullName: "com.microsoft.azure.ListOperationCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
    name: "LiveEventInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
    name: "LiveEventInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listAsync*"
  name: "listAsync"
  nameWithType: "LiveEventsInner.listAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.Page"
    name: "Page"
    fullName: "com.microsoft.azure.Page"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
    name: "LiveEventInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.Page"
    name: "Page"
    fullName: "com.microsoft.azure.Page"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
    name: "LiveEventInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listWithServiceResponseAsync*"
  name: "listWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.listWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listSinglePageAsync*"
  name: "listSinglePageAsync"
  nameWithType: "LiveEventsInner.listSinglePageAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listSinglePageAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  name: "LiveEventInner"
  nameWithType: "LiveEventInner"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.get*"
  name: "get"
  nameWithType: "LiveEventsInner.get"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.get"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
    name: "LiveEventInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
    name: "LiveEventInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getAsync*"
  name: "getAsync"
  nameWithType: "LiveEventsInner.getAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
    name: "LiveEventInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
    name: "LiveEventInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getWithServiceResponseAsync*"
  name: "getWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.getWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.getWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.create*"
  name: "create"
  nameWithType: "LiveEventsInner.create"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.create"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync*"
  name: "createAsync"
  nameWithType: "LiveEventsInner.createAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createWithServiceResponseAsync*"
  name: "createWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.createWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.createWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreate*"
  name: "beginCreate"
  nameWithType: "LiveEventsInner.beginCreate"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreate"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync*"
  name: "beginCreateAsync"
  nameWithType: "LiveEventsInner.beginCreateAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateWithServiceResponseAsync*"
  name: "beginCreateWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.beginCreateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginCreateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.update*"
  name: "update"
  nameWithType: "LiveEventsInner.update"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.update"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateAsync*"
  name: "updateAsync"
  nameWithType: "LiveEventsInner.updateAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateWithServiceResponseAsync*"
  name: "updateWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.updateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.updateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdate*"
  name: "beginUpdate"
  nameWithType: "LiveEventsInner.beginUpdate"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdate"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateAsync*"
  name: "beginUpdateAsync"
  nameWithType: "LiveEventsInner.beginUpdateAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateWithServiceResponseAsync*"
  name: "beginUpdateWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.beginUpdateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginUpdateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.delete*"
  name: "delete"
  nameWithType: "LiveEventsInner.delete"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.delete"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteAsync*"
  name: "deleteAsync"
  nameWithType: "LiveEventsInner.deleteAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "rx.Observable<java.lang.Void>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteWithServiceResponseAsync*"
  name: "deleteWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.deleteWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.deleteWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDelete*"
  name: "beginDelete"
  nameWithType: "LiveEventsInner.beginDelete"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDelete"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteAsync*"
  name: "beginDeleteAsync"
  nameWithType: "LiveEventsInner.beginDeleteAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteWithServiceResponseAsync*"
  name: "beginDeleteWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.beginDeleteWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginDeleteWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.start*"
  name: "start"
  nameWithType: "LiveEventsInner.start"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.start"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startAsync*"
  name: "startAsync"
  nameWithType: "LiveEventsInner.startAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startWithServiceResponseAsync*"
  name: "startWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.startWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.startWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStart*"
  name: "beginStart"
  nameWithType: "LiveEventsInner.beginStart"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStart"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartAsync*"
  name: "beginStartAsync"
  nameWithType: "LiveEventsInner.beginStartAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartWithServiceResponseAsync*"
  name: "beginStartWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.beginStartWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStartWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stop*"
  name: "stop"
  nameWithType: "LiveEventsInner.stop"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stop"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync*"
  name: "stopAsync"
  nameWithType: "LiveEventsInner.stopAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopWithServiceResponseAsync*"
  name: "stopWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.stopWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.stopWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStop*"
  name: "beginStop"
  nameWithType: "LiveEventsInner.beginStop"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStop"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync*"
  name: "beginStopAsync"
  nameWithType: "LiveEventsInner.beginStopAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopWithServiceResponseAsync*"
  name: "beginStopWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.beginStopWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginStopWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.reset*"
  name: "reset"
  nameWithType: "LiveEventsInner.reset"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.reset"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetAsync*"
  name: "resetAsync"
  nameWithType: "LiveEventsInner.resetAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetWithServiceResponseAsync*"
  name: "resetWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.resetWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.resetWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginReset*"
  name: "beginReset"
  nameWithType: "LiveEventsInner.beginReset"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginReset"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetAsync*"
  name: "beginResetAsync"
  nameWithType: "LiveEventsInner.beginResetAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetWithServiceResponseAsync*"
  name: "beginResetWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.beginResetWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.beginResetWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNext*"
  name: "listNext"
  nameWithType: "LiveEventsInner.listNext"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNext"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextAsync*"
  name: "listNextAsync"
  nameWithType: "LiveEventsInner.listNextAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextWithServiceResponseAsync*"
  name: "listNextWithServiceResponseAsync"
  nameWithType: "LiveEventsInner.listNextWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextSinglePageAsync*"
  name: "listNextSinglePageAsync"
  nameWithType: "LiveEventsInner.listNextSinglePageAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.listNextSinglePageAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.LiveEventsService"
  name: "LiveEventsInner.LiveEventsService"
  nameWithType: "LiveEventsInner.LiveEventsService"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventsInner.LiveEventsService"
- uid: "com.microsoft.azure.PagedList"
  name: "PagedList"
  nameWithType: "PagedList"
  fullName: "com.microsoft.azure.PagedList"
- uid: "com.microsoft.azure.ListOperationCallback"
  name: "ListOperationCallback"
  nameWithType: "ListOperationCallback"
  fullName: "com.microsoft.azure.ListOperationCallback"
- uid: "com.microsoft.rest.ServiceFuture"
  name: "ServiceFuture"
  nameWithType: "ServiceFuture"
  fullName: "com.microsoft.rest.ServiceFuture"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.microsoft.azure.Page"
  name: "Page"
  nameWithType: "Page"
  fullName: "com.microsoft.azure.Page"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
- uid: "com.microsoft.rest.ServiceResponse"
  name: "ServiceResponse"
  nameWithType: "ServiceResponse"
  fullName: "com.microsoft.rest.ServiceResponse"
- uid: "com.microsoft.rest.ServiceCallback"
  name: "ServiceCallback"
  nameWithType: "ServiceCallback"
  fullName: "com.microsoft.rest.ServiceCallback"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
