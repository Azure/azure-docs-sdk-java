### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher
  id: _service_remoting_dispatcher
  parent: microsoft.servicefabric.services.remoting.runtime
  children:
  - microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.handleOneWay(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
  - microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
  - microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.ServiceRemotingDispatcher(ServiceContext,Service)
  href: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.yml
  langs:
  - java
  name: ServiceRemotingDispatcher
  nameWithType: ServiceRemotingDispatcher
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingDispatcher.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingDispatcher.java
    startLine: 19
  package: microsoft.servicefabric.services.remoting.runtime
  syntax:
    content: public class ServiceRemotingDispatcher implements ServiceRemotingMessageHandler
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.services.remoting._service_remoting_message_handler
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.handleOneWay(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
  id: handleOneWay(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
  parent: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher
  href: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.yml
  langs:
  - java
  name: handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  nameWithType: ServiceRemotingDispatcher.handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  fullName: void microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  overload: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.handleOneWay*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingDispatcher.java
    startLine: 55
  package: microsoft.servicefabric.services.remoting.runtime
  summary: >-
    <p>Handles a one way message from the client.</p>

    <p></p>
  syntax:
    content: public void handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
    parameters:
    - id: requestContext
      type: microsoft.servicefabric.services.remoting._service_remoting_request_context
      description: <p>Request context - contains additional information about the request </p>
    - id: messageHeaders
      type: microsoft.servicefabric.services.remoting._service_remoting_message_headers
      description: <p>Request message headers </p>
    - id: requestBody
      type: ccd9418d
      description: <p>Request message body </p>
  overridden: microsoft.servicefabric.services.remoting._service_remoting_message_handler.handleOneWay(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
  id: requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
  parent: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher
  href: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.yml
  langs:
  - java
  name: requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  nameWithType: ServiceRemotingDispatcher.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  fullName: CompletableFuture<byte[]> microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  overload: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.requestResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingDispatcher.java
    startLine: 43
  package: microsoft.servicefabric.services.remoting.runtime
  summary: >-
    <p>Handles a message from the client that requires a response from the service.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<byte[]> requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
    parameters:
    - id: requestContext
      type: microsoft.servicefabric.services.remoting._service_remoting_request_context
      description: <p>Request context - contains additional information about the request </p>
    - id: messageHeaders
      type: microsoft.servicefabric.services.remoting._service_remoting_message_headers
      description: <p>Request message headers </p>
    - id: requestBody
      type: ccd9418d
      description: <p>Request message body </p>
    return:
      type: 5fe2dfa4
      description: <p>Response body </p>
  overridden: microsoft.servicefabric.services.remoting._service_remoting_message_handler.requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.ServiceRemotingDispatcher(ServiceContext,Service)
  id: ServiceRemotingDispatcher(ServiceContext,Service)
  parent: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher
  href: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.yml
  langs:
  - java
  name: ServiceRemotingDispatcher(ServiceContext serviceContext, Service service)
  nameWithType: ServiceRemotingDispatcher.ServiceRemotingDispatcher(ServiceContext serviceContext, Service service)
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.ServiceRemotingDispatcher(ServiceContext serviceContext, Service service)
  overload: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.ServiceRemotingDispatcher*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingDispatcher.java
    startLine: 25
  package: microsoft.servicefabric.services.remoting.runtime
  syntax:
    content: public ServiceRemotingDispatcher(ServiceContext serviceContext, Service service)
    parameters:
    - id: serviceContext
      type: system.fabric._service_context
    - id: service
      type: microsoft.servicefabric.services.remoting._service
references:
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.ServiceRemotingDispatcher*
  name: ServiceRemotingDispatcher
  nameWithType: ServiceRemotingDispatcher.ServiceRemotingDispatcher
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.ServiceRemotingDispatcher
  package: microsoft.servicefabric.services.remoting.runtime
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: 5fe2dfa4
  spec.java:
  - name: CompletableFuture<byte[]>
    fullName: CompletableFuture<byte[]>
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.requestResponseAsync*
  name: requestResponseAsync
  nameWithType: ServiceRemotingDispatcher.requestResponseAsync
  fullName: CompletableFuture<byte[]> microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.requestResponseAsync
  package: microsoft.servicefabric.services.remoting.runtime
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.handleOneWay*
  name: handleOneWay
  nameWithType: ServiceRemotingDispatcher.handleOneWay
  fullName: void microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.handleOneWay
  package: microsoft.servicefabric.services.remoting.runtime
- uid: microsoft.servicefabric.services.remoting._service_remoting_message_handler
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting._service_remoting_message_handler.yml
  name: ServiceRemotingMessageHandler
  nameWithType: ServiceRemotingMessageHandler
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler
  type: Interface
  summary: <p>Defines the interface that must be implemented by the <xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref> to receive messages from the remoting transport. </p>
  syntax:
    content: public interface ServiceRemotingMessageHandler
- uid: microsoft.servicefabric.actors._actor_service_remoting_dispatcher
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_service_remoting_dispatcher.yml
  name: ActorServiceRemotingDispatcher
  nameWithType: ActorServiceRemotingDispatcher
  fullName: microsoft.servicefabric.actors.ActorServiceRemotingDispatcher
  type: Class
  summary: <p>Provides an implementation of <xref uid="" data-throw-if-not-resolved="false">ServiceRemotingMessageHandler</xref> that can dispatch messages to an actor service and to the actors hosted in the service. </p>
  syntax:
    content: public class ActorServiceRemotingDispatcher extends ServiceRemotingDispatcher
- uid: microsoft.servicefabric.services.remoting._service
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting._service.yml
  name: Service
  nameWithType: Service
  fullName: microsoft.servicefabric.services.remoting.Service
  type: Interface
  summary: <p>This is the marker interface for enabling interface Remoting for services. An <xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref> provides remoting for all interfaces implemented by the service that derive from this interface. The remoted interfaces can be accessed via Proxy on the client side. </p>
  syntax:
    content: public interface Service
- uid: microsoft.servicefabric.services.remoting.builder._service_method_dispatcher_base
  parent: microsoft.servicefabric.services.remoting.builder
  href: microsoft.servicefabric.services.remoting.builder._service_method_dispatcher_base.yml
  name: ServiceMethodDispatcherBase
  nameWithType: ServiceMethodDispatcherBase
  fullName: microsoft.servicefabric.services.remoting.builder.ServiceMethodDispatcherBase
  type: Class
  syntax:
    content: public class ServiceMethodDispatcherBase extends MethodDispatcherBaseWithSerializer
- uid: system.fabric._service_context
  parent: system.fabric
  href: system.fabric._service_context.yml
  name: ServiceContext
  nameWithType: ServiceContext
  fullName: system.fabric.ServiceContext
  type: Class
  summary: <p>Represents the service context that the service is operating under. </p>
  syntax:
    content: public class ServiceContext
- uid: microsoft.servicefabric.services.remoting._service_remoting_message_handler.requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
  parent: microsoft.servicefabric.services.remoting._service_remoting_message_handler
  href: microsoft.servicefabric.services.remoting._service_remoting_message_handler.yml
  name: requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  nameWithType: ServiceRemotingMessageHandler.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  fullName: CompletableFuture<byte[]> microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  type: Method
  summary: >-
    <p>Handles a message from the client that requires a response from the service.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<byte[]> requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
    parameters:
    - id: requestContext
      type: microsoft.servicefabric.services.remoting._service_remoting_request_context
      description: <p>Request context - contains additional information about the request </p>
    - id: messageHeaders
      type: microsoft.servicefabric.services.remoting._service_remoting_message_headers
      description: <p>Request message headers </p>
    - id: requestBody
      type: ccd9418d
      description: <p>Request message body </p>
    return:
      type: 5fe2dfa4
      description: <p>Response body </p>
- uid: microsoft.servicefabric.services.remoting._service_remoting_request_context
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting._service_remoting_request_context.yml
  name: ServiceRemotingRequestContext
  nameWithType: ServiceRemotingRequestContext
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingRequestContext
  type: Interface
  summary: <p>Defines the interface that must be implemented to provide the request context for the IServiceRemotingMessageHandler. </p>
  syntax:
    content: public interface ServiceRemotingRequestContext
- uid: microsoft.servicefabric.services.remoting._service_remoting_message_headers
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting._service_remoting_message_headers.yml
  name: ServiceRemotingMessageHeaders
  nameWithType: ServiceRemotingMessageHeaders
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  type: Class
  summary: <p>Specifies the headers that are sent along with a ServiceRemoting message. </p>
  syntax:
    content: public class ServiceRemotingMessageHeaders
- uid: microsoft.servicefabric.services.remoting._service_remoting_message_handler.handleOneWay(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
  parent: microsoft.servicefabric.services.remoting._service_remoting_message_handler
  href: microsoft.servicefabric.services.remoting._service_remoting_message_handler.yml
  name: handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  nameWithType: ServiceRemotingMessageHandler.handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  fullName: void microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler.handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  type: Method
  summary: >-
    <p>Handles a one way message from the client.</p>

    <p></p>
  syntax:
    content: public void handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
    parameters:
    - id: requestContext
      type: microsoft.servicefabric.services.remoting._service_remoting_request_context
      description: <p>Request context - contains additional information about the request </p>
    - id: messageHeaders
      type: microsoft.servicefabric.services.remoting._service_remoting_message_headers
      description: <p>Request message headers </p>
    - id: requestBody
      type: ccd9418d
      description: <p>Request message body </p>
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
