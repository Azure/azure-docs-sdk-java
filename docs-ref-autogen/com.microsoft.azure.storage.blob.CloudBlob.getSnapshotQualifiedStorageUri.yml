### YamlMime:JavaMember
nameWithType: CloudBlob.getSnapshotQualifiedStorageUri
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()
  name: getSnapshotQualifiedStorageUri()
  nameWithType: CloudBlob.getSnapshotQualifiedStorageUri()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false">StorageUri</xref> object containing the blob's URIs for both the primary and secondary locations, including snapshot query information if the blob is a snapshot.</p>
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the blob's URI for both the primary and secondary locations, including query string information if the blob is a snapshot.</p>

    <p></p>
  syntax: public final StorageUri getSnapshotQualifiedStorageUri()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()
uid: com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri*
fullName: com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()
name: getSnapshotQualifiedStorageUri()
package: com.microsoft.azure.storage.blob
metadata: {}
