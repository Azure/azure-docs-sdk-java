### YamlMime:JavaMember
nameWithType: CloudTask.withResourceFiles
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.CloudTask.withResourceFiles(List<ResourceFile> resourceFiles)
  name: withResourceFiles(List<ResourceFile> resourceFiles)
  nameWithType: CloudTask.withResourceFiles(List<ResourceFile> resourceFiles)
  parameters:
  - description: <p>the resourceFiles value to set </p>
    name: resourceFiles
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ResourceFile?alt=com.microsoft.azure.batch.protocol.models.ResourceFile&text=ResourceFile" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the CloudTask object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudTask?alt=com.microsoft.azure.batch.protocol.models.CloudTask&text=CloudTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set for multi-instance tasks, the resource files will only be downloaded to the compute node on which the primary task is executed. There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.</p>

    <p></p>
  syntax: public CloudTask withResourceFiles(List<ResourceFile> resourceFiles)
  uid: com.microsoft.azure.batch.protocol.models.CloudTask.withResourceFiles(List<ResourceFile>)
uid: com.microsoft.azure.batch.protocol.models.CloudTask.withResourceFiles*
fullName: com.microsoft.azure.batch.protocol.models.CloudTask.withResourceFiles(List<ResourceFile> resourceFiles)
name: withResourceFiles(List<ResourceFile> resourceFiles)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
