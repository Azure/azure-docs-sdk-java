### YamlMime:JavaMember
nameWithType: MultiShardStatement.executeQueryAsync
type: method
members:
- fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync()
  name: executeQueryAsync()
  nameWithType: MultiShardStatement.executeQueryAsync()
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the commandText is null or empty, or if the specified command behavior is not supported such as CloseConnection or SingleRow. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the commandTimeout elapsed prior to completion. </p>
  returns:
    description: <p>a task wrapping the <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false">MultiShardResultSet</xref> instance with the overall concatenated result set. </p>
    type: Callable&lt;<xref href="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet?alt=com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet&text=MultiShardResultSet" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>The ExecuteReader methods of the MultiShardStatement execute the given command statement on each shard and return the concatenation (i.e. UNION ALL) of the individual results from the shards in a <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false">MultiShardResultSet</xref>. The execution policy regarding result completeness can be controlled by setting the MultiShardExecutionPolicy. The default execution policy is to return complete results.</p>

    <p></p>
  syntax: public Callable<MultiShardResultSet> executeQueryAsync()
  uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync()
- fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync(CommandBehavior behavior)
  name: executeQueryAsync(CommandBehavior behavior)
  nameWithType: MultiShardStatement.executeQueryAsync(CommandBehavior behavior)
  parameters:
  - description: <p>Command behavior to use </p>
    name: behavior
    type: <xref href="com.microsoft.azure.elasticdb.query.logging.CommandBehavior?alt=com.microsoft.azure.elasticdb.query.logging.CommandBehavior&text=CommandBehavior" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the commandText is null or empty, or if the specified command behavior is not supported such as CloseConnection or SingleRow. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the commandTimeout elapsed prior to completion. </p>
  returns:
    description: <p>a task wrapping the <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false">MultiShardResultSet</xref> instance with the overall concatenated result set. </p>
    type: Callable&lt;<xref href="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet?alt=com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet&text=MultiShardResultSet" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>The ExecuteReader methods of the MultiShardStatement execute the given command statement on each shard and return the concatenation (i.e. UNION ALL) of the individual results from the shards in a <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false">MultiShardResultSet</xref>. The execution policy regarding result completeness can be controlled by setting the MultiShardExecutionPolicy. The default execution policy is to return complete results.</p>

    <p></p>
  syntax: public Callable<MultiShardResultSet> executeQueryAsync(CommandBehavior behavior)
  uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync(CommandBehavior)
- fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  name: executeQueryAsync(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  nameWithType: MultiShardStatement.executeQueryAsync(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  parameters:
  - description: <p>Command behavior to use </p>
    name: behavior
    type: <xref href="com.microsoft.azure.elasticdb.query.logging.CommandBehavior?alt=com.microsoft.azure.elasticdb.query.logging.CommandBehavior&text=CommandBehavior" data-throw-if-not-resolved="False"/>
  - description: <p>The retry policy to use when executing commands against the shards </p>
    name: commandRetryPolicy
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>The execution policy to use </p>
    name: executionPolicy
    type: <xref href="com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionPolicy?alt=com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionPolicy&text=MultiShardExecutionPolicy" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>If the commandText is null or empty </p>
  returns:
    description: <p>A task with a ResultT that encompasses results from all shards Any exceptions during command execution are conveyed via the returned Task </p>
    type: Callable&lt;<xref href="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet?alt=com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet&text=MultiShardResultSet" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Executes the given query against all shards asynchronously.</p>

    <p></p>
  syntax: public Callable<MultiShardResultSet> executeQueryAsync(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync(CommandBehavior,RetryPolicy,MultiShardExecutionPolicy)
uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync*
fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync()
name: executeQueryAsync()
package: com.microsoft.azure.elasticdb.query.multishard
metadata: {}
