### YamlMime:JavaType
uid: "com.azure.messaging.servicebus.ServiceBusTransactionContext"
fullName: "com.azure.messaging.servicebus.ServiceBusTransactionContext"
name: "ServiceBusTransactionContext"
nameWithType: "ServiceBusTransactionContext"
summary: "Represents transaction in service. This object just contains transaction id. Transaction management operations like create transaction, rollback, and commit operation need to be done using the sender or receiver clients.\n\nA transaction times out after 2 minutes. The transaction timer starts when the first operation in the transaction starts.\n\n**Creating and using a transaction**\n\n```java\n// This mono creates a transaction and caches the output value, so we can associate operations with the\n // transaction. It does not cache the value if it is an error or completes with no items, effectively retrying\n // the operation.\n Mono<ServiceBusTransactionContext> transactionContext = receiver.createTransaction()\n     .cache(value -> Duration.ofMillis(Long.MAX_VALUE),\n         error -> Duration.ZERO,\n         () -> Duration.ZERO);\n \n transactionContext.flatMap(transaction -> {\n     // Process messages and associate operations with the transaction.\n     Mono<Void> operations = Mono.when(\n         receiver.receiveDeferredMessage(sequenceNumber).flatMap(message ->\n             receiver.complete(message, new CompleteOptions().setTransactionContext(transaction))),\n         receiver.abandon(receivedMessage, new AbandonOptions().setTransactionContext(transaction)));\n \n     // Finally, either commit or rollback the transaction once all the operations are associated with it.\n     return operations.flatMap(transactionOperations -> receiver.commitTransaction(transaction));\n });\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServiceBusTransactionContext"
methods:
- "com.azure.messaging.servicebus.ServiceBusTransactionContext.getTransactionId()"
type: "class"
metadata: {}
package: "com.azure.messaging.servicebus"
artifact: com.azure:azure-messaging-servicebus:7.0.1
