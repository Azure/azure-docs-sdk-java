### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol._tasks
  id: _tasks
  parent: com.microsoft.azure.batch.protocol
  children:
  - com.microsoft.azure.batch.protocol._tasks.add(String,TaskAddParameter)
  - com.microsoft.azure.batch.protocol._tasks.add(String,TaskAddParameter,TaskAddOptions)
  - com.microsoft.azure.batch.protocol._tasks.addAsync(String,TaskAddParameter)
  - com.microsoft.azure.batch.protocol._tasks.addAsync(String,TaskAddParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol._tasks.addAsync(String,TaskAddParameter,TaskAddOptions)
  - com.microsoft.azure.batch.protocol._tasks.addAsync(String,TaskAddParameter,TaskAddOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol._tasks.addCollection(String,List<TaskAddParameter>)
  - com.microsoft.azure.batch.protocol._tasks.addCollection(String,List<TaskAddParameter>,TaskAddCollectionOptions)
  - com.microsoft.azure.batch.protocol._tasks.addCollectionAsync(String,List<TaskAddParameter>)
  - com.microsoft.azure.batch.protocol._tasks.addCollectionAsync(String,List<TaskAddParameter>,final ServiceCallback<TaskAddCollectionResult>)
  - com.microsoft.azure.batch.protocol._tasks.addCollectionAsync(String,List<TaskAddParameter>,TaskAddCollectionOptions)
  - com.microsoft.azure.batch.protocol._tasks.addCollectionAsync(String,List<TaskAddParameter>,TaskAddCollectionOptions,final ServiceCallback<TaskAddCollectionResult>)
  - com.microsoft.azure.batch.protocol._tasks.addCollectionWithServiceResponseAsync(String,List<TaskAddParameter>)
  - com.microsoft.azure.batch.protocol._tasks.addCollectionWithServiceResponseAsync(String,List<TaskAddParameter>,TaskAddCollectionOptions)
  - com.microsoft.azure.batch.protocol._tasks.addWithServiceResponseAsync(String,TaskAddParameter)
  - com.microsoft.azure.batch.protocol._tasks.addWithServiceResponseAsync(String,TaskAddParameter,TaskAddOptions)
  - com.microsoft.azure.batch.protocol._tasks.delete(String,String)
  - com.microsoft.azure.batch.protocol._tasks.delete(String,String,TaskDeleteOptions)
  - com.microsoft.azure.batch.protocol._tasks.deleteAsync(String,String)
  - com.microsoft.azure.batch.protocol._tasks.deleteAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol._tasks.deleteAsync(String,String,TaskDeleteOptions)
  - com.microsoft.azure.batch.protocol._tasks.deleteAsync(String,String,TaskDeleteOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol._tasks.deleteWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol._tasks.deleteWithServiceResponseAsync(String,String,TaskDeleteOptions)
  - com.microsoft.azure.batch.protocol._tasks.get(String,String)
  - com.microsoft.azure.batch.protocol._tasks.get(String,String,TaskGetOptions)
  - com.microsoft.azure.batch.protocol._tasks.getAsync(String,String)
  - com.microsoft.azure.batch.protocol._tasks.getAsync(String,String,final ServiceCallback<CloudTask>)
  - com.microsoft.azure.batch.protocol._tasks.getAsync(String,String,TaskGetOptions)
  - com.microsoft.azure.batch.protocol._tasks.getAsync(String,String,TaskGetOptions,final ServiceCallback<CloudTask>)
  - com.microsoft.azure.batch.protocol._tasks.getWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol._tasks.getWithServiceResponseAsync(String,String,TaskGetOptions)
  - com.microsoft.azure.batch.protocol._tasks.list(final String)
  - com.microsoft.azure.batch.protocol._tasks.list(final String,final TaskListOptions)
  - com.microsoft.azure.batch.protocol._tasks.listAsync(final String)
  - com.microsoft.azure.batch.protocol._tasks.listAsync(final String,final ListOperationCallback<CloudTask>)
  - com.microsoft.azure.batch.protocol._tasks.listAsync(final String,final TaskListOptions)
  - com.microsoft.azure.batch.protocol._tasks.listAsync(final String,final TaskListOptions,final ListOperationCallback<CloudTask>)
  - com.microsoft.azure.batch.protocol._tasks.listNext(final String)
  - com.microsoft.azure.batch.protocol._tasks.listNext(final String,final TaskListNextOptions)
  - com.microsoft.azure.batch.protocol._tasks.listNextAsync(final String)
  - com.microsoft.azure.batch.protocol._tasks.listNextAsync(final String,final ServiceFuture<List<CloudTask>>,final ListOperationCallback<CloudTask>)
  - com.microsoft.azure.batch.protocol._tasks.listNextAsync(final String,final TaskListNextOptions)
  - com.microsoft.azure.batch.protocol._tasks.listNextAsync(final String,final TaskListNextOptions,final ServiceFuture<List<CloudTask>>,final ListOperationCallback<CloudTask>)
  - com.microsoft.azure.batch.protocol._tasks.listNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol._tasks.listNextWithServiceResponseAsync(final String,final TaskListNextOptions)
  - com.microsoft.azure.batch.protocol._tasks.listSubtasks(String,String)
  - com.microsoft.azure.batch.protocol._tasks.listSubtasks(String,String,TaskListSubtasksOptions)
  - com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync(String,String)
  - com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync(String,String,final ServiceCallback<CloudTaskListSubtasksResult>)
  - com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync(String,String,TaskListSubtasksOptions)
  - com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync(String,String,TaskListSubtasksOptions,final ServiceCallback<CloudTaskListSubtasksResult>)
  - com.microsoft.azure.batch.protocol._tasks.listSubtasksWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol._tasks.listSubtasksWithServiceResponseAsync(String,String,TaskListSubtasksOptions)
  - com.microsoft.azure.batch.protocol._tasks.listWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol._tasks.listWithServiceResponseAsync(final String,final TaskListOptions)
  - com.microsoft.azure.batch.protocol._tasks.reactivate(String,String)
  - com.microsoft.azure.batch.protocol._tasks.reactivate(String,String,TaskReactivateOptions)
  - com.microsoft.azure.batch.protocol._tasks.reactivateAsync(String,String)
  - com.microsoft.azure.batch.protocol._tasks.reactivateAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol._tasks.reactivateAsync(String,String,TaskReactivateOptions)
  - com.microsoft.azure.batch.protocol._tasks.reactivateAsync(String,String,TaskReactivateOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol._tasks.reactivateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol._tasks.reactivateWithServiceResponseAsync(String,String,TaskReactivateOptions)
  - com.microsoft.azure.batch.protocol._tasks.terminate(String,String)
  - com.microsoft.azure.batch.protocol._tasks.terminate(String,String,TaskTerminateOptions)
  - com.microsoft.azure.batch.protocol._tasks.terminateAsync(String,String)
  - com.microsoft.azure.batch.protocol._tasks.terminateAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol._tasks.terminateAsync(String,String,TaskTerminateOptions)
  - com.microsoft.azure.batch.protocol._tasks.terminateAsync(String,String,TaskTerminateOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol._tasks.terminateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol._tasks.terminateWithServiceResponseAsync(String,String,TaskTerminateOptions)
  - com.microsoft.azure.batch.protocol._tasks.update(String,String)
  - com.microsoft.azure.batch.protocol._tasks.update(String,String,TaskConstraints,TaskUpdateOptions)
  - com.microsoft.azure.batch.protocol._tasks.updateAsync(String,String)
  - com.microsoft.azure.batch.protocol._tasks.updateAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol._tasks.updateAsync(String,String,TaskConstraints,TaskUpdateOptions)
  - com.microsoft.azure.batch.protocol._tasks.updateAsync(String,String,TaskConstraints,TaskUpdateOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol._tasks.updateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol._tasks.updateWithServiceResponseAsync(String,String,TaskConstraints,TaskUpdateOptions)
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: Tasks
  nameWithType: Tasks
  fullName: com.microsoft.azure.batch.protocol.Tasks
  type: Interface
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
      branch: master
      repo: https://github.com/Azure/azure-batch-sdk-for-java
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 49
  package: com.microsoft.azure.batch.protocol
  summary: <p>An instance of this class provides access to all the operations defined in <xref uid="com.microsoft.azure.batch.protocol._tasks" data-throw-if-not-resolved="false">Tasks</xref>. </p>
  syntax: &o1
    content: public interface Tasks
- uid: com.microsoft.azure.batch.protocol._tasks.add(String,TaskAddParameter)
  id: add(String,TaskAddParameter)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: add(String jobId, TaskAddParameter task)
  nameWithType: Tasks.add(String jobId, TaskAddParameter task)
  fullName: void com.microsoft.azure.batch.protocol.Tasks.add(String jobId, TaskAddParameter task)
  overload: com.microsoft.azure.batch.protocol._tasks.add*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 59
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a task to the specified job.</p>

    <p></p>
  syntax:
    content: public void add(String jobId, TaskAddParameter task)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task is to be added. </p>
    - id: task
      type: com.microsoft.azure.batch.protocol.models._task_add_parameter
      description: <p>The task to be added. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.add(String,TaskAddParameter,TaskAddOptions)
  id: add(String,TaskAddParameter,TaskAddOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: add(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions)
  nameWithType: Tasks.add(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions)
  fullName: void com.microsoft.azure.batch.protocol.Tasks.add(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.add*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 101
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a task to the specified job.</p>

    <p></p>
  syntax:
    content: public void add(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task is to be added. </p>
    - id: task
      type: com.microsoft.azure.batch.protocol.models._task_add_parameter
      description: <p>The task to be added. </p>
    - id: taskAddOptions
      type: com.microsoft.azure.batch.protocol.models._task_add_options
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addAsync(String,TaskAddParameter)
  id: addAsync(String,TaskAddParameter)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addAsync(String jobId, TaskAddParameter task)
  nameWithType: Tasks.addAsync(String jobId, TaskAddParameter task)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Tasks.addAsync(String jobId, TaskAddParameter task)
  overload: com.microsoft.azure.batch.protocol._tasks.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 80
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a task to the specified job.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addAsync(String jobId, TaskAddParameter task)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task is to be added. </p>
    - id: task
      type: com.microsoft.azure.batch.protocol.models._task_add_parameter
      description: <p>The task to be added. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addAsync(String,TaskAddParameter,final ServiceCallback<Void>)
  id: addAsync(String,TaskAddParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addAsync(String jobId, TaskAddParameter task, final ServiceCallback<Void> serviceCallback)
  nameWithType: Tasks.addAsync(String jobId, TaskAddParameter task, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.addAsync(String jobId, TaskAddParameter task, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 70
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a task to the specified job.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addAsync(String jobId, TaskAddParameter task, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task is to be added. </p>
    - id: task
      type: com.microsoft.azure.batch.protocol.models._task_add_parameter
      description: <p>The task to be added. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addAsync(String,TaskAddParameter,TaskAddOptions)
  id: addAsync(String,TaskAddParameter,TaskAddOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addAsync(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions)
  nameWithType: Tasks.addAsync(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Tasks.addAsync(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 124
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a task to the specified job.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addAsync(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task is to be added. </p>
    - id: task
      type: com.microsoft.azure.batch.protocol.models._task_add_parameter
      description: <p>The task to be added. </p>
    - id: taskAddOptions
      type: com.microsoft.azure.batch.protocol.models._task_add_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addAsync(String,TaskAddParameter,TaskAddOptions,final ServiceCallback<Void>)
  id: addAsync(String,TaskAddParameter,TaskAddOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addAsync(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Tasks.addAsync(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.addAsync(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 113
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a task to the specified job.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addAsync(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task is to be added. </p>
    - id: task
      type: com.microsoft.azure.batch.protocol.models._task_add_parameter
      description: <p>The task to be added. </p>
    - id: taskAddOptions
      type: com.microsoft.azure.batch.protocol.models._task_add_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addCollection(String,List<TaskAddParameter>)
  id: addCollection(String,List<TaskAddParameter>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addCollection(String jobId, List<TaskAddParameter> value)
  nameWithType: Tasks.addCollection(String jobId, List<TaskAddParameter> value)
  fullName: TaskAddCollectionResult com.microsoft.azure.batch.protocol.Tasks.addCollection(String jobId, List<TaskAddParameter> value)
  overload: com.microsoft.azure.batch.protocol._tasks.addCollection*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 237
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a collection of tasks to the specified job. Note that each task must have a unique ID. The Batch service may not return the results for each task in the same order the tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same task ids during a retry so that if the prior operation succeeded, the retry will not create extra tasks unexpectedly.</p>

    <p></p>
  syntax:
    content: public TaskAddCollectionResult addCollection(String jobId, List<TaskAddParameter> value)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task collection is to be added. </p>
    - id: value
      type: 5618da2dcom.microsoft.azure.batch.protocol.models._task_add_parametera08ddfce
      description: <p>The collection of tasks to add. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._task_add_collection_result
      description: <p>the TaskAddCollectionResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addCollection(String,List<TaskAddParameter>,TaskAddCollectionOptions)
  id: addCollection(String,List<TaskAddParameter>,TaskAddCollectionOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addCollection(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  nameWithType: Tasks.addCollection(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  fullName: TaskAddCollectionResult com.microsoft.azure.batch.protocol.Tasks.addCollection(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.addCollection*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 284
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a collection of tasks to the specified job. Note that each task must have a unique ID. The Batch service may not return the results for each task in the same order the tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same task ids during a retry so that if the prior operation succeeded, the retry will not create extra tasks unexpectedly.</p>

    <p></p>
  syntax:
    content: public TaskAddCollectionResult addCollection(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task collection is to be added. </p>
    - id: value
      type: 5618da2dcom.microsoft.azure.batch.protocol.models._task_add_parametera08ddfce
      description: <p>The collection of tasks to add. </p>
    - id: taskAddCollectionOptions
      type: com.microsoft.azure.batch.protocol.models._task_add_collection_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._task_add_collection_result
      description: <p>the TaskAddCollectionResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addCollectionAsync(String,List<TaskAddParameter>)
  id: addCollectionAsync(String,List<TaskAddParameter>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addCollectionAsync(String jobId, List<TaskAddParameter> value)
  nameWithType: Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value)
  fullName: Observable<TaskAddCollectionResult> com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value)
  overload: com.microsoft.azure.batch.protocol._tasks.addCollectionAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 260
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a collection of tasks to the specified job. Note that each task must have a unique ID. The Batch service may not return the results for each task in the same order the tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same task ids during a retry so that if the prior operation succeeded, the retry will not create extra tasks unexpectedly.</p>

    <p></p>
  syntax:
    content: public Observable<TaskAddCollectionResult> addCollectionAsync(String jobId, List<TaskAddParameter> value)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task collection is to be added. </p>
    - id: value
      type: 5618da2dcom.microsoft.azure.batch.protocol.models._task_add_parametera08ddfce
      description: <p>The collection of tasks to add. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._task_add_collection_resulta08ddfce
      description: <p>the observable to the TaskAddCollectionResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addCollectionAsync(String,List<TaskAddParameter>,final ServiceCallback<TaskAddCollectionResult>)
  id: addCollectionAsync(String,List<TaskAddParameter>,final ServiceCallback<TaskAddCollectionResult>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addCollectionAsync(String jobId, List<TaskAddParameter> value, final ServiceCallback<TaskAddCollectionResult> serviceCallback)
  nameWithType: Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value, final ServiceCallback<TaskAddCollectionResult> serviceCallback)
  fullName: ServiceFuture<TaskAddCollectionResult> com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value, final ServiceCallback<TaskAddCollectionResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.addCollectionAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 249
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a collection of tasks to the specified job. Note that each task must have a unique ID. The Batch service may not return the results for each task in the same order the tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same task ids during a retry so that if the prior operation succeeded, the retry will not create extra tasks unexpectedly.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<TaskAddCollectionResult> addCollectionAsync(String jobId, List<TaskAddParameter> value, final ServiceCallback<TaskAddCollectionResult> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task collection is to be added. </p>
    - id: value
      type: 5618da2dcom.microsoft.azure.batch.protocol.models._task_add_parametera08ddfce
      description: <p>The collection of tasks to add. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._task_add_collection_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._task_add_collection_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addCollectionAsync(String,List<TaskAddParameter>,TaskAddCollectionOptions)
  id: addCollectionAsync(String,List<TaskAddParameter>,TaskAddCollectionOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  nameWithType: Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  fullName: Observable<TaskAddCollectionResult> com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.addCollectionAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 309
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a collection of tasks to the specified job. Note that each task must have a unique ID. The Batch service may not return the results for each task in the same order the tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same task ids during a retry so that if the prior operation succeeded, the retry will not create extra tasks unexpectedly.</p>

    <p></p>
  syntax:
    content: public Observable<TaskAddCollectionResult> addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task collection is to be added. </p>
    - id: value
      type: 5618da2dcom.microsoft.azure.batch.protocol.models._task_add_parametera08ddfce
      description: <p>The collection of tasks to add. </p>
    - id: taskAddCollectionOptions
      type: com.microsoft.azure.batch.protocol.models._task_add_collection_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._task_add_collection_resulta08ddfce
      description: <p>the observable to the TaskAddCollectionResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addCollectionAsync(String,List<TaskAddParameter>,TaskAddCollectionOptions,final ServiceCallback<TaskAddCollectionResult>)
  id: addCollectionAsync(String,List<TaskAddParameter>,TaskAddCollectionOptions,final ServiceCallback<TaskAddCollectionResult>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions, final ServiceCallback<TaskAddCollectionResult> serviceCallback)
  nameWithType: Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions, final ServiceCallback<TaskAddCollectionResult> serviceCallback)
  fullName: ServiceFuture<TaskAddCollectionResult> com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions, final ServiceCallback<TaskAddCollectionResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.addCollectionAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 297
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a collection of tasks to the specified job. Note that each task must have a unique ID. The Batch service may not return the results for each task in the same order the tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same task ids during a retry so that if the prior operation succeeded, the retry will not create extra tasks unexpectedly.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<TaskAddCollectionResult> addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions, final ServiceCallback<TaskAddCollectionResult> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task collection is to be added. </p>
    - id: value
      type: 5618da2dcom.microsoft.azure.batch.protocol.models._task_add_parametera08ddfce
      description: <p>The collection of tasks to add. </p>
    - id: taskAddCollectionOptions
      type: com.microsoft.azure.batch.protocol.models._task_add_collection_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._task_add_collection_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._task_add_collection_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addCollectionWithServiceResponseAsync(String,List<TaskAddParameter>)
  id: addCollectionWithServiceResponseAsync(String,List<TaskAddParameter>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addCollectionWithServiceResponseAsync(String jobId, List<TaskAddParameter> value)
  nameWithType: Tasks.addCollectionWithServiceResponseAsync(String jobId, List<TaskAddParameter> value)
  fullName: Observable<ServiceResponseWithHeaders<TaskAddCollectionResult, TaskAddCollectionHeaders>> com.microsoft.azure.batch.protocol.Tasks.addCollectionWithServiceResponseAsync(String jobId, List<TaskAddParameter> value)
  overload: com.microsoft.azure.batch.protocol._tasks.addCollectionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 271
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a collection of tasks to the specified job. Note that each task must have a unique ID. The Batch service may not return the results for each task in the same order the tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same task ids during a retry so that if the prior operation succeeded, the retry will not create extra tasks unexpectedly.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<TaskAddCollectionResult, TaskAddCollectionHeaders>> addCollectionWithServiceResponseAsync(String jobId, List<TaskAddParameter> value)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task collection is to be added. </p>
    - id: value
      type: 5618da2dcom.microsoft.azure.batch.protocol.models._task_add_parametera08ddfce
      description: <p>The collection of tasks to add. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._task_add_collection_resultb33c76fccom.microsoft.azure.batch.protocol.models._task_add_collection_headerse7daa122
      description: <p>the observable to the TaskAddCollectionResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addCollectionWithServiceResponseAsync(String,List<TaskAddParameter>,TaskAddCollectionOptions)
  id: addCollectionWithServiceResponseAsync(String,List<TaskAddParameter>,TaskAddCollectionOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addCollectionWithServiceResponseAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  nameWithType: Tasks.addCollectionWithServiceResponseAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  fullName: Observable<ServiceResponseWithHeaders<TaskAddCollectionResult, TaskAddCollectionHeaders>> com.microsoft.azure.batch.protocol.Tasks.addCollectionWithServiceResponseAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.addCollectionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 321
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a collection of tasks to the specified job. Note that each task must have a unique ID. The Batch service may not return the results for each task in the same order the tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same task ids during a retry so that if the prior operation succeeded, the retry will not create extra tasks unexpectedly.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<TaskAddCollectionResult, TaskAddCollectionHeaders>> addCollectionWithServiceResponseAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task collection is to be added. </p>
    - id: value
      type: 5618da2dcom.microsoft.azure.batch.protocol.models._task_add_parametera08ddfce
      description: <p>The collection of tasks to add. </p>
    - id: taskAddCollectionOptions
      type: com.microsoft.azure.batch.protocol.models._task_add_collection_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._task_add_collection_resultb33c76fccom.microsoft.azure.batch.protocol.models._task_add_collection_headerse7daa122
      description: <p>the observable to the TaskAddCollectionResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addWithServiceResponseAsync(String,TaskAddParameter)
  id: addWithServiceResponseAsync(String,TaskAddParameter)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addWithServiceResponseAsync(String jobId, TaskAddParameter task)
  nameWithType: Tasks.addWithServiceResponseAsync(String jobId, TaskAddParameter task)
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskAddHeaders>> com.microsoft.azure.batch.protocol.Tasks.addWithServiceResponseAsync(String jobId, TaskAddParameter task)
  overload: com.microsoft.azure.batch.protocol._tasks.addWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 90
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a task to the specified job.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, TaskAddHeaders>> addWithServiceResponseAsync(String jobId, TaskAddParameter task)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task is to be added. </p>
    - id: task
      type: com.microsoft.azure.batch.protocol.models._task_add_parameter
      description: <p>The task to be added. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._task_add_headerse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.addWithServiceResponseAsync(String,TaskAddParameter,TaskAddOptions)
  id: addWithServiceResponseAsync(String,TaskAddParameter,TaskAddOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: addWithServiceResponseAsync(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions)
  nameWithType: Tasks.addWithServiceResponseAsync(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskAddHeaders>> com.microsoft.azure.batch.protocol.Tasks.addWithServiceResponseAsync(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.addWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 135
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Adds a task to the specified job.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, TaskAddHeaders>> addWithServiceResponseAsync(String jobId, TaskAddParameter task, TaskAddOptions taskAddOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to which the task is to be added. </p>
    - id: task
      type: com.microsoft.azure.batch.protocol.models._task_add_parameter
      description: <p>The task to be added. </p>
    - id: taskAddOptions
      type: com.microsoft.azure.batch.protocol.models._task_add_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._task_add_headerse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.delete(String,String)
  id: delete(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: delete(String jobId, String taskId)
  nameWithType: Tasks.delete(String jobId, String taskId)
  fullName: void com.microsoft.azure.batch.protocol.Tasks.delete(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.delete*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 333
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Deletes a task from the specified job. When a task is deleted, all of the files in its directory on the compute node where it ran are also deleted (regardless of the retention time). For multi-instance tasks, the delete task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public void delete(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job from which to delete the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to delete. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.delete(String,String,TaskDeleteOptions)
  id: delete(String,String,TaskDeleteOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: delete(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  nameWithType: Tasks.delete(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  fullName: void com.microsoft.azure.batch.protocol.Tasks.delete(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.delete*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 379
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Deletes a task from the specified job. When a task is deleted, all of the files in its directory on the compute node where it ran are also deleted (regardless of the retention time). For multi-instance tasks, the delete task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public void delete(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job from which to delete the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to delete. </p>
    - id: taskDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._task_delete_options
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.deleteAsync(String,String)
  id: deleteAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: deleteAsync(String jobId, String taskId)
  nameWithType: Tasks.deleteAsync(String jobId, String taskId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Tasks.deleteAsync(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 356
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Deletes a task from the specified job. When a task is deleted, all of the files in its directory on the compute node where it ran are also deleted (regardless of the retention time). For multi-instance tasks, the delete task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteAsync(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job from which to delete the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to delete. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.deleteAsync(String,String,final ServiceCallback<Void>)
  id: deleteAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: deleteAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Tasks.deleteAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.deleteAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 345
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Deletes a task from the specified job. When a task is deleted, all of the files in its directory on the compute node where it ran are also deleted (regardless of the retention time). For multi-instance tasks, the delete task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job from which to delete the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to delete. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.deleteAsync(String,String,TaskDeleteOptions)
  id: deleteAsync(String,String,TaskDeleteOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: deleteAsync(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  nameWithType: Tasks.deleteAsync(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Tasks.deleteAsync(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 404
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Deletes a task from the specified job. When a task is deleted, all of the files in its directory on the compute node where it ran are also deleted (regardless of the retention time). For multi-instance tasks, the delete task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteAsync(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job from which to delete the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to delete. </p>
    - id: taskDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._task_delete_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.deleteAsync(String,String,TaskDeleteOptions,final ServiceCallback<Void>)
  id: deleteAsync(String,String,TaskDeleteOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: deleteAsync(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Tasks.deleteAsync(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.deleteAsync(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 392
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Deletes a task from the specified job. When a task is deleted, all of the files in its directory on the compute node where it ran are also deleted (regardless of the retention time). For multi-instance tasks, the delete task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job from which to delete the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to delete. </p>
    - id: taskDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._task_delete_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.deleteWithServiceResponseAsync(String,String)
  id: deleteWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: deleteWithServiceResponseAsync(String jobId, String taskId)
  nameWithType: Tasks.deleteWithServiceResponseAsync(String jobId, String taskId)
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskDeleteHeaders>> com.microsoft.azure.batch.protocol.Tasks.deleteWithServiceResponseAsync(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.deleteWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 367
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Deletes a task from the specified job. When a task is deleted, all of the files in its directory on the compute node where it ran are also deleted (regardless of the retention time). For multi-instance tasks, the delete task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, TaskDeleteHeaders>> deleteWithServiceResponseAsync(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job from which to delete the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to delete. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._task_delete_headerse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.deleteWithServiceResponseAsync(String,String,TaskDeleteOptions)
  id: deleteWithServiceResponseAsync(String,String,TaskDeleteOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: deleteWithServiceResponseAsync(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  nameWithType: Tasks.deleteWithServiceResponseAsync(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskDeleteHeaders>> com.microsoft.azure.batch.protocol.Tasks.deleteWithServiceResponseAsync(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.deleteWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 416
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Deletes a task from the specified job. When a task is deleted, all of the files in its directory on the compute node where it ran are also deleted (regardless of the retention time). For multi-instance tasks, the delete task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, TaskDeleteHeaders>> deleteWithServiceResponseAsync(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job from which to delete the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to delete. </p>
    - id: taskDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._task_delete_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._task_delete_headerse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.get(String,String)
  id: get(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: get(String jobId, String taskId)
  nameWithType: Tasks.get(String jobId, String taskId)
  fullName: CloudTask com.microsoft.azure.batch.protocol.Tasks.get(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 429
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Gets information about the specified task. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public CloudTask get(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to get information about. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._cloud_task
      description: <p>the CloudTask object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.get(String,String,TaskGetOptions)
  id: get(String,String,TaskGetOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: get(String jobId, String taskId, TaskGetOptions taskGetOptions)
  nameWithType: Tasks.get(String jobId, String taskId, TaskGetOptions taskGetOptions)
  fullName: CloudTask com.microsoft.azure.batch.protocol.Tasks.get(String jobId, String taskId, TaskGetOptions taskGetOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 476
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Gets information about the specified task. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public CloudTask get(String jobId, String taskId, TaskGetOptions taskGetOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to get information about. </p>
    - id: taskGetOptions
      type: com.microsoft.azure.batch.protocol.models._task_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._cloud_task
      description: <p>the CloudTask object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.getAsync(String,String)
  id: getAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: getAsync(String jobId, String taskId)
  nameWithType: Tasks.getAsync(String jobId, String taskId)
  fullName: Observable<CloudTask> com.microsoft.azure.batch.protocol.Tasks.getAsync(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 452
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Gets information about the specified task. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public Observable<CloudTask> getAsync(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to get information about. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the observable to the CloudTask object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.getAsync(String,String,final ServiceCallback<CloudTask>)
  id: getAsync(String,String,final ServiceCallback<CloudTask>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: getAsync(String jobId, String taskId, final ServiceCallback<CloudTask> serviceCallback)
  nameWithType: Tasks.getAsync(String jobId, String taskId, final ServiceCallback<CloudTask> serviceCallback)
  fullName: ServiceFuture<CloudTask> com.microsoft.azure.batch.protocol.Tasks.getAsync(String jobId, String taskId, final ServiceCallback<CloudTask> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 441
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Gets information about the specified task. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CloudTask> getAsync(String jobId, String taskId, final ServiceCallback<CloudTask> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to get information about. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.getAsync(String,String,TaskGetOptions)
  id: getAsync(String,String,TaskGetOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: getAsync(String jobId, String taskId, TaskGetOptions taskGetOptions)
  nameWithType: Tasks.getAsync(String jobId, String taskId, TaskGetOptions taskGetOptions)
  fullName: Observable<CloudTask> com.microsoft.azure.batch.protocol.Tasks.getAsync(String jobId, String taskId, TaskGetOptions taskGetOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 501
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Gets information about the specified task. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public Observable<CloudTask> getAsync(String jobId, String taskId, TaskGetOptions taskGetOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to get information about. </p>
    - id: taskGetOptions
      type: com.microsoft.azure.batch.protocol.models._task_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the observable to the CloudTask object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.getAsync(String,String,TaskGetOptions,final ServiceCallback<CloudTask>)
  id: getAsync(String,String,TaskGetOptions,final ServiceCallback<CloudTask>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: getAsync(String jobId, String taskId, TaskGetOptions taskGetOptions, final ServiceCallback<CloudTask> serviceCallback)
  nameWithType: Tasks.getAsync(String jobId, String taskId, TaskGetOptions taskGetOptions, final ServiceCallback<CloudTask> serviceCallback)
  fullName: ServiceFuture<CloudTask> com.microsoft.azure.batch.protocol.Tasks.getAsync(String jobId, String taskId, TaskGetOptions taskGetOptions, final ServiceCallback<CloudTask> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 489
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Gets information about the specified task. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CloudTask> getAsync(String jobId, String taskId, TaskGetOptions taskGetOptions, final ServiceCallback<CloudTask> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to get information about. </p>
    - id: taskGetOptions
      type: com.microsoft.azure.batch.protocol.models._task_get_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.getWithServiceResponseAsync(String,String)
  id: getWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String jobId, String taskId)
  nameWithType: Tasks.getWithServiceResponseAsync(String jobId, String taskId)
  fullName: Observable<ServiceResponseWithHeaders<CloudTask, TaskGetHeaders>> com.microsoft.azure.batch.protocol.Tasks.getWithServiceResponseAsync(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 463
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Gets information about the specified task. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<CloudTask, TaskGetHeaders>> getWithServiceResponseAsync(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to get information about. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._cloud_taskb33c76fccom.microsoft.azure.batch.protocol.models._task_get_headerse7daa122
      description: <p>the observable to the CloudTask object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.getWithServiceResponseAsync(String,String,TaskGetOptions)
  id: getWithServiceResponseAsync(String,String,TaskGetOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String jobId, String taskId, TaskGetOptions taskGetOptions)
  nameWithType: Tasks.getWithServiceResponseAsync(String jobId, String taskId, TaskGetOptions taskGetOptions)
  fullName: Observable<ServiceResponseWithHeaders<CloudTask, TaskGetHeaders>> com.microsoft.azure.batch.protocol.Tasks.getWithServiceResponseAsync(String jobId, String taskId, TaskGetOptions taskGetOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 513
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Gets information about the specified task. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<CloudTask, TaskGetHeaders>> getWithServiceResponseAsync(String jobId, String taskId, TaskGetOptions taskGetOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to get information about. </p>
    - id: taskGetOptions
      type: com.microsoft.azure.batch.protocol.models._task_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._cloud_taskb33c76fccom.microsoft.azure.batch.protocol.models._task_get_headerse7daa122
      description: <p>the observable to the CloudTask object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.list(final String)
  id: list(final String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: list(final String jobId)
  nameWithType: Tasks.list(final String jobId)
  fullName: PagedList<CloudTask> com.microsoft.azure.batch.protocol.Tasks.list(final String jobId)
  overload: com.microsoft.azure.batch.protocol._tasks.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 147
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudTask> list(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the PagedList&lt;CloudTask&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.list(final String,final TaskListOptions)
  id: list(final String,final TaskListOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: list(final String jobId, final TaskListOptions taskListOptions)
  nameWithType: Tasks.list(final String jobId, final TaskListOptions taskListOptions)
  fullName: PagedList<CloudTask> com.microsoft.azure.batch.protocol.Tasks.list(final String jobId, final TaskListOptions taskListOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 190
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudTask> list(final String jobId, final TaskListOptions taskListOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: taskListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._task_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the PagedList&lt;CloudTask&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listAsync(final String)
  id: listAsync(final String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listAsync(final String jobId)
  nameWithType: Tasks.listAsync(final String jobId)
  fullName: Observable<Page<CloudTask>> com.microsoft.azure.batch.protocol.Tasks.listAsync(final String jobId)
  overload: com.microsoft.azure.batch.protocol._tasks.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 168
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudTask>> listAsync(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_taske7daa122
      description: <p>the observable to the PagedList&lt;CloudTask&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listAsync(final String,final ListOperationCallback<CloudTask>)
  id: listAsync(final String,final ListOperationCallback<CloudTask>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listAsync(final String jobId, final ListOperationCallback<CloudTask> serviceCallback)
  nameWithType: Tasks.listAsync(final String jobId, final ListOperationCallback<CloudTask> serviceCallback)
  fullName: ServiceFuture<List<CloudTask>> com.microsoft.azure.batch.protocol.Tasks.listAsync(final String jobId, final ListOperationCallback<CloudTask> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 158
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudTask>> listAsync(final String jobId, final ListOperationCallback<CloudTask> serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_taske7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listAsync(final String,final TaskListOptions)
  id: listAsync(final String,final TaskListOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listAsync(final String jobId, final TaskListOptions taskListOptions)
  nameWithType: Tasks.listAsync(final String jobId, final TaskListOptions taskListOptions)
  fullName: Observable<Page<CloudTask>> com.microsoft.azure.batch.protocol.Tasks.listAsync(final String jobId, final TaskListOptions taskListOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 213
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudTask>> listAsync(final String jobId, final TaskListOptions taskListOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: taskListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._task_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_taske7daa122
      description: <p>the observable to the PagedList&lt;CloudTask&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listAsync(final String,final TaskListOptions,final ListOperationCallback<CloudTask>)
  id: listAsync(final String,final TaskListOptions,final ListOperationCallback<CloudTask>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listAsync(final String jobId, final TaskListOptions taskListOptions, final ListOperationCallback<CloudTask> serviceCallback)
  nameWithType: Tasks.listAsync(final String jobId, final TaskListOptions taskListOptions, final ListOperationCallback<CloudTask> serviceCallback)
  fullName: ServiceFuture<List<CloudTask>> com.microsoft.azure.batch.protocol.Tasks.listAsync(final String jobId, final TaskListOptions taskListOptions, final ListOperationCallback<CloudTask> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 202
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudTask>> listAsync(final String jobId, final TaskListOptions taskListOptions, final ListOperationCallback<CloudTask> serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: taskListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._task_list_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_taske7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listNext(final String)
  id: listNext(final String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listNext(final String nextPageLink)
  nameWithType: Tasks.listNext(final String nextPageLink)
  fullName: PagedList<CloudTask> com.microsoft.azure.batch.protocol.Tasks.listNext(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol._tasks.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 903
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudTask> listNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the PagedList&lt;CloudTask&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listNext(final String,final TaskListNextOptions)
  id: listNext(final String,final TaskListNextOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listNext(final String nextPageLink, final TaskListNextOptions taskListNextOptions)
  nameWithType: Tasks.listNext(final String nextPageLink, final TaskListNextOptions taskListNextOptions)
  fullName: PagedList<CloudTask> com.microsoft.azure.batch.protocol.Tasks.listNext(final String nextPageLink, final TaskListNextOptions taskListNextOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 947
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public PagedList<CloudTask> listNext(final String nextPageLink, final TaskListNextOptions taskListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: taskListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._task_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the PagedList&lt;CloudTask&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listNextAsync(final String)
  id: listNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink)
  nameWithType: Tasks.listNextAsync(final String nextPageLink)
  fullName: Observable<Page<CloudTask>> com.microsoft.azure.batch.protocol.Tasks.listNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol._tasks.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 925
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudTask>> listNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_taske7daa122
      description: <p>the observable to the PagedList&lt;CloudTask&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listNextAsync(final String,final ServiceFuture<List<CloudTask>>,final ListOperationCallback<CloudTask>)
  id: listNextAsync(final String,final ServiceFuture<List<CloudTask>>,final ListOperationCallback<CloudTask>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudTask>> serviceFuture, final ListOperationCallback<CloudTask> serviceCallback)
  nameWithType: Tasks.listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudTask>> serviceFuture, final ListOperationCallback<CloudTask> serviceCallback)
  fullName: ServiceFuture<List<CloudTask>> com.microsoft.azure.batch.protocol.Tasks.listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudTask>> serviceFuture, final ListOperationCallback<CloudTask> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 915
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudTask>> listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudTask>> serviceFuture, final ListOperationCallback<CloudTask> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._cloud_taske7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_taske7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listNextAsync(final String,final TaskListNextOptions)
  id: listNextAsync(final String,final TaskListNextOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final TaskListNextOptions taskListNextOptions)
  nameWithType: Tasks.listNextAsync(final String nextPageLink, final TaskListNextOptions taskListNextOptions)
  fullName: Observable<Page<CloudTask>> com.microsoft.azure.batch.protocol.Tasks.listNextAsync(final String nextPageLink, final TaskListNextOptions taskListNextOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 971
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CloudTask>> listNextAsync(final String nextPageLink, final TaskListNextOptions taskListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: taskListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._task_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._cloud_taske7daa122
      description: <p>the observable to the PagedList&lt;CloudTask&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listNextAsync(final String,final TaskListNextOptions,final ServiceFuture<List<CloudTask>>,final ListOperationCallback<CloudTask>)
  id: listNextAsync(final String,final TaskListNextOptions,final ServiceFuture<List<CloudTask>>,final ListOperationCallback<CloudTask>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final TaskListNextOptions taskListNextOptions, final ServiceFuture<List<CloudTask>> serviceFuture, final ListOperationCallback<CloudTask> serviceCallback)
  nameWithType: Tasks.listNextAsync(final String nextPageLink, final TaskListNextOptions taskListNextOptions, final ServiceFuture<List<CloudTask>> serviceFuture, final ListOperationCallback<CloudTask> serviceCallback)
  fullName: ServiceFuture<List<CloudTask>> com.microsoft.azure.batch.protocol.Tasks.listNextAsync(final String nextPageLink, final TaskListNextOptions taskListNextOptions, final ServiceFuture<List<CloudTask>> serviceFuture, final ListOperationCallback<CloudTask> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 960
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CloudTask>> listNextAsync(final String nextPageLink, final TaskListNextOptions taskListNextOptions, final ServiceFuture<List<CloudTask>> serviceFuture, final ListOperationCallback<CloudTask> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: taskListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._task_list_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._cloud_taske7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._cloud_taske7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listNextWithServiceResponseAsync(final String)
  id: listNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: Tasks.listNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudTask>, TaskListHeaders>> com.microsoft.azure.batch.protocol.Tasks.listNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol._tasks.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 935
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudTask>, TaskListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_task8135b5ebcom.microsoft.azure.batch.protocol.models._task_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudTask&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listNextWithServiceResponseAsync(final String,final TaskListNextOptions)
  id: listNextWithServiceResponseAsync(final String,final TaskListNextOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink, final TaskListNextOptions taskListNextOptions)
  nameWithType: Tasks.listNextWithServiceResponseAsync(final String nextPageLink, final TaskListNextOptions taskListNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudTask>, TaskListHeaders>> com.microsoft.azure.batch.protocol.Tasks.listNextWithServiceResponseAsync(final String nextPageLink, final TaskListNextOptions taskListNextOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 982
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudTask>, TaskListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink, final TaskListNextOptions taskListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: taskListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._task_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_task8135b5ebcom.microsoft.azure.batch.protocol.models._task_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudTask&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listSubtasks(String,String)
  id: listSubtasks(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listSubtasks(String jobId, String taskId)
  nameWithType: Tasks.listSubtasks(String jobId, String taskId)
  fullName: CloudTaskListSubtasksResult com.microsoft.azure.batch.protocol.Tasks.listSubtasks(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.listSubtasks*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 617
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the subtasks that are associated with the specified multi-instance task. If the task is not a multi-instance task then this returns an empty collection.</p>

    <p></p>
  syntax:
    content: public CloudTaskListSubtasksResult listSubtasks(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_result
      description: <p>the CloudTaskListSubtasksResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listSubtasks(String,String,TaskListSubtasksOptions)
  id: listSubtasks(String,String,TaskListSubtasksOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listSubtasks(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  nameWithType: Tasks.listSubtasks(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  fullName: CloudTaskListSubtasksResult com.microsoft.azure.batch.protocol.Tasks.listSubtasks(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.listSubtasks*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 664
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the subtasks that are associated with the specified multi-instance task. If the task is not a multi-instance task then this returns an empty collection.</p>

    <p></p>
  syntax:
    content: public CloudTaskListSubtasksResult listSubtasks(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task. </p>
    - id: taskListSubtasksOptions
      type: com.microsoft.azure.batch.protocol.models._task_list_subtasks_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_result
      description: <p>the CloudTaskListSubtasksResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync(String,String)
  id: listSubtasksAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listSubtasksAsync(String jobId, String taskId)
  nameWithType: Tasks.listSubtasksAsync(String jobId, String taskId)
  fullName: Observable<CloudTaskListSubtasksResult> com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 640
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the subtasks that are associated with the specified multi-instance task. If the task is not a multi-instance task then this returns an empty collection.</p>

    <p></p>
  syntax:
    content: public Observable<CloudTaskListSubtasksResult> listSubtasksAsync(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_resulta08ddfce
      description: <p>the observable to the CloudTaskListSubtasksResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync(String,String,final ServiceCallback<CloudTaskListSubtasksResult>)
  id: listSubtasksAsync(String,String,final ServiceCallback<CloudTaskListSubtasksResult>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listSubtasksAsync(String jobId, String taskId, final ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)
  nameWithType: Tasks.listSubtasksAsync(String jobId, String taskId, final ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)
  fullName: ServiceFuture<CloudTaskListSubtasksResult> com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync(String jobId, String taskId, final ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 629
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the subtasks that are associated with the specified multi-instance task. If the task is not a multi-instance task then this returns an empty collection.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CloudTaskListSubtasksResult> listSubtasksAsync(String jobId, String taskId, final ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync(String,String,TaskListSubtasksOptions)
  id: listSubtasksAsync(String,String,TaskListSubtasksOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  nameWithType: Tasks.listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  fullName: Observable<CloudTaskListSubtasksResult> com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 689
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the subtasks that are associated with the specified multi-instance task. If the task is not a multi-instance task then this returns an empty collection.</p>

    <p></p>
  syntax:
    content: public Observable<CloudTaskListSubtasksResult> listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task. </p>
    - id: taskListSubtasksOptions
      type: com.microsoft.azure.batch.protocol.models._task_list_subtasks_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_resulta08ddfce
      description: <p>the observable to the CloudTaskListSubtasksResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync(String,String,TaskListSubtasksOptions,final ServiceCallback<CloudTaskListSubtasksResult>)
  id: listSubtasksAsync(String,String,TaskListSubtasksOptions,final ServiceCallback<CloudTaskListSubtasksResult>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions, final ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)
  nameWithType: Tasks.listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions, final ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)
  fullName: ServiceFuture<CloudTaskListSubtasksResult> com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions, final ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 677
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the subtasks that are associated with the specified multi-instance task. If the task is not a multi-instance task then this returns an empty collection.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CloudTaskListSubtasksResult> listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions, final ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task. </p>
    - id: taskListSubtasksOptions
      type: com.microsoft.azure.batch.protocol.models._task_list_subtasks_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listSubtasksWithServiceResponseAsync(String,String)
  id: listSubtasksWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listSubtasksWithServiceResponseAsync(String jobId, String taskId)
  nameWithType: Tasks.listSubtasksWithServiceResponseAsync(String jobId, String taskId)
  fullName: Observable<ServiceResponseWithHeaders<CloudTaskListSubtasksResult, TaskListSubtasksHeaders>> com.microsoft.azure.batch.protocol.Tasks.listSubtasksWithServiceResponseAsync(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.listSubtasksWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 651
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the subtasks that are associated with the specified multi-instance task. If the task is not a multi-instance task then this returns an empty collection.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<CloudTaskListSubtasksResult, TaskListSubtasksHeaders>> listSubtasksWithServiceResponseAsync(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_resultb33c76fccom.microsoft.azure.batch.protocol.models._task_list_subtasks_headerse7daa122
      description: <p>the observable to the CloudTaskListSubtasksResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listSubtasksWithServiceResponseAsync(String,String,TaskListSubtasksOptions)
  id: listSubtasksWithServiceResponseAsync(String,String,TaskListSubtasksOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listSubtasksWithServiceResponseAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  nameWithType: Tasks.listSubtasksWithServiceResponseAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  fullName: Observable<ServiceResponseWithHeaders<CloudTaskListSubtasksResult, TaskListSubtasksHeaders>> com.microsoft.azure.batch.protocol.Tasks.listSubtasksWithServiceResponseAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.listSubtasksWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 701
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the subtasks that are associated with the specified multi-instance task. If the task is not a multi-instance task then this returns an empty collection.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<CloudTaskListSubtasksResult, TaskListSubtasksHeaders>> listSubtasksWithServiceResponseAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task. </p>
    - id: taskListSubtasksOptions
      type: com.microsoft.azure.batch.protocol.models._task_list_subtasks_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_resultb33c76fccom.microsoft.azure.batch.protocol.models._task_list_subtasks_headerse7daa122
      description: <p>the observable to the CloudTaskListSubtasksResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listWithServiceResponseAsync(final String)
  id: listWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listWithServiceResponseAsync(final String jobId)
  nameWithType: Tasks.listWithServiceResponseAsync(final String jobId)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudTask>, TaskListHeaders>> com.microsoft.azure.batch.protocol.Tasks.listWithServiceResponseAsync(final String jobId)
  overload: com.microsoft.azure.batch.protocol._tasks.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 178
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudTask>, TaskListHeaders>> listWithServiceResponseAsync(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_task8135b5ebcom.microsoft.azure.batch.protocol.models._task_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudTask&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.listWithServiceResponseAsync(final String,final TaskListOptions)
  id: listWithServiceResponseAsync(final String,final TaskListOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: listWithServiceResponseAsync(final String jobId, final TaskListOptions taskListOptions)
  nameWithType: Tasks.listWithServiceResponseAsync(final String jobId, final TaskListOptions taskListOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudTask>, TaskListHeaders>> com.microsoft.azure.batch.protocol.Tasks.listWithServiceResponseAsync(final String jobId, final TaskListOptions taskListOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 224
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Lists all of the tasks that are associated with the specified job. For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task. Use the list subtasks API to retrieve information about subtasks.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudTask>, TaskListHeaders>> listWithServiceResponseAsync(final String jobId, final TaskListOptions taskListOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: taskListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._task_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_task8135b5ebcom.microsoft.azure.batch.protocol.models._task_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;CloudTask&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.reactivate(String,String)
  id: reactivate(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: reactivate(String jobId, String taskId)
  nameWithType: Tasks.reactivate(String jobId, String taskId)
  fullName: void com.microsoft.azure.batch.protocol.Tasks.reactivate(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.reactivate*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 808
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Reactivates the specified task. Reactivation makes a task eligible to be retried again up to its maximum retry count. The task's state is changed to active. As the task is no longer in the completed state, any previous exit code or scheduling error is no longer available after reactivation. This will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0). Additionally, this will fail if the job has completed (or is terminating or deleting).</p>

    <p></p>
  syntax:
    content: public void reactivate(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to reactivate. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.reactivate(String,String,TaskReactivateOptions)
  id: reactivate(String,String,TaskReactivateOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: reactivate(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions)
  nameWithType: Tasks.reactivate(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions)
  fullName: void com.microsoft.azure.batch.protocol.Tasks.reactivate(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.reactivate*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 854
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Reactivates the specified task. Reactivation makes a task eligible to be retried again up to its maximum retry count. The task's state is changed to active. As the task is no longer in the completed state, any previous exit code or scheduling error is no longer available after reactivation. This will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0). Additionally, this will fail if the job has completed (or is terminating or deleting).</p>

    <p></p>
  syntax:
    content: public void reactivate(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to reactivate. </p>
    - id: taskReactivateOptions
      type: com.microsoft.azure.batch.protocol.models._task_reactivate_options
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.reactivateAsync(String,String)
  id: reactivateAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: reactivateAsync(String jobId, String taskId)
  nameWithType: Tasks.reactivateAsync(String jobId, String taskId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Tasks.reactivateAsync(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.reactivateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 831
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Reactivates the specified task. Reactivation makes a task eligible to be retried again up to its maximum retry count. The task's state is changed to active. As the task is no longer in the completed state, any previous exit code or scheduling error is no longer available after reactivation. This will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0). Additionally, this will fail if the job has completed (or is terminating or deleting).</p>

    <p></p>
  syntax:
    content: public Observable<Void> reactivateAsync(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to reactivate. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.reactivateAsync(String,String,final ServiceCallback<Void>)
  id: reactivateAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: reactivateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Tasks.reactivateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.reactivateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.reactivateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 820
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Reactivates the specified task. Reactivation makes a task eligible to be retried again up to its maximum retry count. The task's state is changed to active. As the task is no longer in the completed state, any previous exit code or scheduling error is no longer available after reactivation. This will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0). Additionally, this will fail if the job has completed (or is terminating or deleting).</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> reactivateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to reactivate. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.reactivateAsync(String,String,TaskReactivateOptions)
  id: reactivateAsync(String,String,TaskReactivateOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: reactivateAsync(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions)
  nameWithType: Tasks.reactivateAsync(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Tasks.reactivateAsync(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.reactivateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 879
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Reactivates the specified task. Reactivation makes a task eligible to be retried again up to its maximum retry count. The task's state is changed to active. As the task is no longer in the completed state, any previous exit code or scheduling error is no longer available after reactivation. This will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0). Additionally, this will fail if the job has completed (or is terminating or deleting).</p>

    <p></p>
  syntax:
    content: public Observable<Void> reactivateAsync(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to reactivate. </p>
    - id: taskReactivateOptions
      type: com.microsoft.azure.batch.protocol.models._task_reactivate_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.reactivateAsync(String,String,TaskReactivateOptions,final ServiceCallback<Void>)
  id: reactivateAsync(String,String,TaskReactivateOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: reactivateAsync(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Tasks.reactivateAsync(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.reactivateAsync(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.reactivateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 867
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Reactivates the specified task. Reactivation makes a task eligible to be retried again up to its maximum retry count. The task's state is changed to active. As the task is no longer in the completed state, any previous exit code or scheduling error is no longer available after reactivation. This will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0). Additionally, this will fail if the job has completed (or is terminating or deleting).</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> reactivateAsync(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to reactivate. </p>
    - id: taskReactivateOptions
      type: com.microsoft.azure.batch.protocol.models._task_reactivate_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.reactivateWithServiceResponseAsync(String,String)
  id: reactivateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: reactivateWithServiceResponseAsync(String jobId, String taskId)
  nameWithType: Tasks.reactivateWithServiceResponseAsync(String jobId, String taskId)
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskReactivateHeaders>> com.microsoft.azure.batch.protocol.Tasks.reactivateWithServiceResponseAsync(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.reactivateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 842
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Reactivates the specified task. Reactivation makes a task eligible to be retried again up to its maximum retry count. The task's state is changed to active. As the task is no longer in the completed state, any previous exit code or scheduling error is no longer available after reactivation. This will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0). Additionally, this will fail if the job has completed (or is terminating or deleting).</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, TaskReactivateHeaders>> reactivateWithServiceResponseAsync(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to reactivate. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._task_reactivate_headerse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.reactivateWithServiceResponseAsync(String,String,TaskReactivateOptions)
  id: reactivateWithServiceResponseAsync(String,String,TaskReactivateOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: reactivateWithServiceResponseAsync(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions)
  nameWithType: Tasks.reactivateWithServiceResponseAsync(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskReactivateHeaders>> com.microsoft.azure.batch.protocol.Tasks.reactivateWithServiceResponseAsync(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.reactivateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 891
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Reactivates the specified task. Reactivation makes a task eligible to be retried again up to its maximum retry count. The task's state is changed to active. As the task is no longer in the completed state, any previous exit code or scheduling error is no longer available after reactivation. This will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0). Additionally, this will fail if the job has completed (or is terminating or deleting).</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, TaskReactivateHeaders>> reactivateWithServiceResponseAsync(String jobId, String taskId, TaskReactivateOptions taskReactivateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to reactivate. </p>
    - id: taskReactivateOptions
      type: com.microsoft.azure.batch.protocol.models._task_reactivate_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._task_reactivate_headerse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.terminate(String,String)
  id: terminate(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: terminate(String jobId, String taskId)
  nameWithType: Tasks.terminate(String jobId, String taskId)
  fullName: void com.microsoft.azure.batch.protocol.Tasks.terminate(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.terminate*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 713
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Terminates the specified task. When the task has been terminated, it moves to the completed state. For multi-instance tasks, the terminate task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public void terminate(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to terminate. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.terminate(String,String,TaskTerminateOptions)
  id: terminate(String,String,TaskTerminateOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: terminate(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  nameWithType: Tasks.terminate(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  fullName: void com.microsoft.azure.batch.protocol.Tasks.terminate(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.terminate*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 759
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Terminates the specified task. When the task has been terminated, it moves to the completed state. For multi-instance tasks, the terminate task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public void terminate(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to terminate. </p>
    - id: taskTerminateOptions
      type: com.microsoft.azure.batch.protocol.models._task_terminate_options
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.terminateAsync(String,String)
  id: terminateAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: terminateAsync(String jobId, String taskId)
  nameWithType: Tasks.terminateAsync(String jobId, String taskId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Tasks.terminateAsync(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.terminateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 736
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Terminates the specified task. When the task has been terminated, it moves to the completed state. For multi-instance tasks, the terminate task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public Observable<Void> terminateAsync(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to terminate. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.terminateAsync(String,String,final ServiceCallback<Void>)
  id: terminateAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: terminateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Tasks.terminateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.terminateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.terminateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 725
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Terminates the specified task. When the task has been terminated, it moves to the completed state. For multi-instance tasks, the terminate task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> terminateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to terminate. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.terminateAsync(String,String,TaskTerminateOptions)
  id: terminateAsync(String,String,TaskTerminateOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: terminateAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  nameWithType: Tasks.terminateAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Tasks.terminateAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.terminateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 784
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Terminates the specified task. When the task has been terminated, it moves to the completed state. For multi-instance tasks, the terminate task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public Observable<Void> terminateAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to terminate. </p>
    - id: taskTerminateOptions
      type: com.microsoft.azure.batch.protocol.models._task_terminate_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.terminateAsync(String,String,TaskTerminateOptions,final ServiceCallback<Void>)
  id: terminateAsync(String,String,TaskTerminateOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: terminateAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Tasks.terminateAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.terminateAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.terminateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 772
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Terminates the specified task. When the task has been terminated, it moves to the completed state. For multi-instance tasks, the terminate task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> terminateAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to terminate. </p>
    - id: taskTerminateOptions
      type: com.microsoft.azure.batch.protocol.models._task_terminate_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.terminateWithServiceResponseAsync(String,String)
  id: terminateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: terminateWithServiceResponseAsync(String jobId, String taskId)
  nameWithType: Tasks.terminateWithServiceResponseAsync(String jobId, String taskId)
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskTerminateHeaders>> com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.terminateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 747
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Terminates the specified task. When the task has been terminated, it moves to the completed state. For multi-instance tasks, the terminate task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, TaskTerminateHeaders>> terminateWithServiceResponseAsync(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to terminate. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._task_terminate_headerse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.terminateWithServiceResponseAsync(String,String,TaskTerminateOptions)
  id: terminateWithServiceResponseAsync(String,String,TaskTerminateOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: terminateWithServiceResponseAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  nameWithType: Tasks.terminateWithServiceResponseAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskTerminateHeaders>> com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.terminateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 796
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Terminates the specified task. When the task has been terminated, it moves to the completed state. For multi-instance tasks, the terminate task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, TaskTerminateHeaders>> terminateWithServiceResponseAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to terminate. </p>
    - id: taskTerminateOptions
      type: com.microsoft.azure.batch.protocol.models._task_terminate_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._task_terminate_headerse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.update(String,String)
  id: update(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: update(String jobId, String taskId)
  nameWithType: Tasks.update(String jobId, String taskId)
  fullName: void com.microsoft.azure.batch.protocol.Tasks.update(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.update*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 524
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Updates the properties of the specified task.</p>

    <p></p>
  syntax:
    content: public void update(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to update. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.update(String,String,TaskConstraints,TaskUpdateOptions)
  id: update(String,String,TaskConstraints,TaskUpdateOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: update(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  nameWithType: Tasks.update(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  fullName: void com.microsoft.azure.batch.protocol.Tasks.update(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.update*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 567
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Updates the properties of the specified task.</p>

    <p></p>
  syntax:
    content: public void update(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to update. </p>
    - id: constraints
      type: com.microsoft.azure.batch.protocol.models._task_constraints
      description: <p>Constraints that apply to this task. If omitted, the task is given the default constraints. </p>
    - id: taskUpdateOptions
      type: com.microsoft.azure.batch.protocol.models._task_update_options
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol._tasks.updateAsync(String,String)
  id: updateAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: updateAsync(String jobId, String taskId)
  nameWithType: Tasks.updateAsync(String jobId, String taskId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Tasks.updateAsync(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.updateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 545
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Updates the properties of the specified task.</p>

    <p></p>
  syntax:
    content: public Observable<Void> updateAsync(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to update. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.updateAsync(String,String,final ServiceCallback<Void>)
  id: updateAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: updateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Tasks.updateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.updateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.updateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 535
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Updates the properties of the specified task.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> updateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to update. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.updateAsync(String,String,TaskConstraints,TaskUpdateOptions)
  id: updateAsync(String,String,TaskConstraints,TaskUpdateOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  nameWithType: Tasks.updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Tasks.updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.updateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 592
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Updates the properties of the specified task.</p>

    <p></p>
  syntax:
    content: public Observable<Void> updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to update. </p>
    - id: constraints
      type: com.microsoft.azure.batch.protocol.models._task_constraints
      description: <p>Constraints that apply to this task. If omitted, the task is given the default constraints. </p>
    - id: taskUpdateOptions
      type: com.microsoft.azure.batch.protocol.models._task_update_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.updateAsync(String,String,TaskConstraints,TaskUpdateOptions,final ServiceCallback<Void>)
  id: updateAsync(String,String,TaskConstraints,TaskUpdateOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Tasks.updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol._tasks.updateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 580
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Updates the properties of the specified task.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to update. </p>
    - id: constraints
      type: com.microsoft.azure.batch.protocol.models._task_constraints
      description: <p>Constraints that apply to this task. If omitted, the task is given the default constraints. </p>
    - id: taskUpdateOptions
      type: com.microsoft.azure.batch.protocol.models._task_update_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.updateWithServiceResponseAsync(String,String)
  id: updateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: updateWithServiceResponseAsync(String jobId, String taskId)
  nameWithType: Tasks.updateWithServiceResponseAsync(String jobId, String taskId)
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskUpdateHeaders>> com.microsoft.azure.batch.protocol.Tasks.updateWithServiceResponseAsync(String jobId, String taskId)
  overload: com.microsoft.azure.batch.protocol._tasks.updateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 555
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Updates the properties of the specified task.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, TaskUpdateHeaders>> updateWithServiceResponseAsync(String jobId, String taskId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to update. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._task_update_headerse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol._tasks.updateWithServiceResponseAsync(String,String,TaskConstraints,TaskUpdateOptions)
  id: updateWithServiceResponseAsync(String,String,TaskConstraints,TaskUpdateOptions)
  parent: com.microsoft.azure.batch.protocol._tasks
  href: com.microsoft.azure.batch.protocol._tasks.yml
  langs:
  - java
  name: updateWithServiceResponseAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  nameWithType: Tasks.updateWithServiceResponseAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskUpdateHeaders>> com.microsoft.azure.batch.protocol.Tasks.updateWithServiceResponseAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  overload: com.microsoft.azure.batch.protocol._tasks.updateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Tasks.java
    startLine: 604
  package: com.microsoft.azure.batch.protocol
  summary: >-
    <p>Updates the properties of the specified task.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, TaskUpdateHeaders>> updateWithServiceResponseAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job containing the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task to update. </p>
    - id: constraints
      type: com.microsoft.azure.batch.protocol.models._task_constraints
      description: <p>Constraints that apply to this task. If omitted, the task is given the default constraints. </p>
    - id: taskUpdateOptions
      type: com.microsoft.azure.batch.protocol.models._task_update_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._task_update_headerse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: c8683d81
  spec.java:
  - name: BatchErrorException
    fullName: BatchErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.batch.protocol._tasks.add*
  name: add
  nameWithType: Tasks.add
  fullName: void com.microsoft.azure.batch.protocol.Tasks.add
  package: com.microsoft.azure.batch.protocol
- uid: 1c186eb5
  spec.java:
  - name: final ServiceCallback<Void>
    fullName: final ServiceCallback<Void>
- uid: aa81d378
  spec.java:
  - name: ServiceFuture<Void>
    fullName: ServiceFuture<Void>
- uid: com.microsoft.azure.batch.protocol._tasks.addAsync*
  name: addAsync
  nameWithType: Tasks.addAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.addAsync
  package: com.microsoft.azure.batch.protocol
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._task_add_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._task_add_headers
    name: TaskAddHeaders
    fullName: com.microsoft.azure.batch.protocol.models.TaskAddHeaders
    href: com.microsoft.azure.batch.protocol.models._task_add_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol._tasks.addWithServiceResponseAsync*
  name: addWithServiceResponseAsync
  nameWithType: Tasks.addWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskAddHeaders>> com.microsoft.azure.batch.protocol.Tasks.addWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 36b27be0com.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task
    name: CloudTask
    fullName: com.microsoft.azure.batch.protocol.models.CloudTask
    href: com.microsoft.azure.batch.protocol.models._cloud_task.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol._tasks.list*
  name: list
  nameWithType: Tasks.list
  fullName: PagedList<CloudTask> com.microsoft.azure.batch.protocol.Tasks.list
  package: com.microsoft.azure.batch.protocol
- uid: 3c4303efcom.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task
    name: CloudTask
    fullName: com.microsoft.azure.batch.protocol.models.CloudTask
    href: com.microsoft.azure.batch.protocol.models._cloud_task.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.batch.protocol.models._cloud_taske7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task
    name: CloudTask
    fullName: com.microsoft.azure.batch.protocol.models.CloudTask
    href: com.microsoft.azure.batch.protocol.models._cloud_task.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol._tasks.listAsync*
  name: listAsync
  nameWithType: Tasks.listAsync
  fullName: ServiceFuture<List<CloudTask>> com.microsoft.azure.batch.protocol.Tasks.listAsync
  package: com.microsoft.azure.batch.protocol
- uid: 32da0907com.microsoft.azure.batch.protocol.models._cloud_taske7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task
    name: CloudTask
    fullName: com.microsoft.azure.batch.protocol.models.CloudTask
    href: com.microsoft.azure.batch.protocol.models._cloud_task.yml
  - name: '>>'
    fullName: '>>'
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models._cloud_task8135b5ebcom.microsoft.azure.batch.protocol.models._task_list_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task
    name: CloudTask
    fullName: com.microsoft.azure.batch.protocol.models.CloudTask
    href: com.microsoft.azure.batch.protocol.models._cloud_task.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models._task_list_headers
    name: TaskListHeaders
    fullName: com.microsoft.azure.batch.protocol.models.TaskListHeaders
    href: com.microsoft.azure.batch.protocol.models._task_list_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol._tasks.listWithServiceResponseAsync*
  name: listWithServiceResponseAsync
  nameWithType: Tasks.listWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudTask>, TaskListHeaders>> com.microsoft.azure.batch.protocol.Tasks.listWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._task_list_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._task_list_options
    name: TaskListOptions
    fullName: com.microsoft.azure.batch.protocol.models.TaskListOptions
    href: com.microsoft.azure.batch.protocol.models._task_list_options.yml
- uid: 5618da2dcom.microsoft.azure.batch.protocol.models._task_add_parametera08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.batch.protocol.models._task_add_parameter
    name: TaskAddParameter
    fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter
    href: com.microsoft.azure.batch.protocol.models._task_add_parameter.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol._tasks.addCollection*
  name: addCollection
  nameWithType: Tasks.addCollection
  fullName: TaskAddCollectionResult com.microsoft.azure.batch.protocol.Tasks.addCollection
  package: com.microsoft.azure.batch.protocol
- uid: 897eb10acom.microsoft.azure.batch.protocol.models._task_add_collection_resulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models._task_add_collection_result
    name: TaskAddCollectionResult
    fullName: com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult
    href: com.microsoft.azure.batch.protocol.models._task_add_collection_result.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models._task_add_collection_resulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models._task_add_collection_result
    name: TaskAddCollectionResult
    fullName: com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult
    href: com.microsoft.azure.batch.protocol.models._task_add_collection_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol._tasks.addCollectionAsync*
  name: addCollectionAsync
  nameWithType: Tasks.addCollectionAsync
  fullName: ServiceFuture<TaskAddCollectionResult> com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync
  package: com.microsoft.azure.batch.protocol
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models._task_add_collection_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models._task_add_collection_result
    name: TaskAddCollectionResult
    fullName: com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult
    href: com.microsoft.azure.batch.protocol.models._task_add_collection_result.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models._task_add_collection_resultb33c76fccom.microsoft.azure.batch.protocol.models._task_add_collection_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models._task_add_collection_result
    name: TaskAddCollectionResult
    fullName: com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult
    href: com.microsoft.azure.batch.protocol.models._task_add_collection_result.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models._task_add_collection_headers
    name: TaskAddCollectionHeaders
    fullName: com.microsoft.azure.batch.protocol.models.TaskAddCollectionHeaders
    href: com.microsoft.azure.batch.protocol.models._task_add_collection_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol._tasks.addCollectionWithServiceResponseAsync*
  name: addCollectionWithServiceResponseAsync
  nameWithType: Tasks.addCollectionWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<TaskAddCollectionResult, TaskAddCollectionHeaders>> com.microsoft.azure.batch.protocol.Tasks.addCollectionWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol._tasks.delete*
  name: delete
  nameWithType: Tasks.delete
  fullName: void com.microsoft.azure.batch.protocol.Tasks.delete
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol._tasks.deleteAsync*
  name: deleteAsync
  nameWithType: Tasks.deleteAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.deleteAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._task_delete_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._task_delete_headers
    name: TaskDeleteHeaders
    fullName: com.microsoft.azure.batch.protocol.models.TaskDeleteHeaders
    href: com.microsoft.azure.batch.protocol.models._task_delete_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol._tasks.deleteWithServiceResponseAsync*
  name: deleteWithServiceResponseAsync
  nameWithType: Tasks.deleteWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskDeleteHeaders>> com.microsoft.azure.batch.protocol.Tasks.deleteWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol._tasks.get*
  name: get
  nameWithType: Tasks.get
  fullName: CloudTask com.microsoft.azure.batch.protocol.Tasks.get
  package: com.microsoft.azure.batch.protocol
- uid: 897eb10acom.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task
    name: CloudTask
    fullName: com.microsoft.azure.batch.protocol.models.CloudTask
    href: com.microsoft.azure.batch.protocol.models._cloud_task.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task
    name: CloudTask
    fullName: com.microsoft.azure.batch.protocol.models.CloudTask
    href: com.microsoft.azure.batch.protocol.models._cloud_task.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol._tasks.getAsync*
  name: getAsync
  nameWithType: Tasks.getAsync
  fullName: ServiceFuture<CloudTask> com.microsoft.azure.batch.protocol.Tasks.getAsync
  package: com.microsoft.azure.batch.protocol
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models._cloud_taska08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task
    name: CloudTask
    fullName: com.microsoft.azure.batch.protocol.models.CloudTask
    href: com.microsoft.azure.batch.protocol.models._cloud_task.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models._cloud_taskb33c76fccom.microsoft.azure.batch.protocol.models._task_get_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task
    name: CloudTask
    fullName: com.microsoft.azure.batch.protocol.models.CloudTask
    href: com.microsoft.azure.batch.protocol.models._cloud_task.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models._task_get_headers
    name: TaskGetHeaders
    fullName: com.microsoft.azure.batch.protocol.models.TaskGetHeaders
    href: com.microsoft.azure.batch.protocol.models._task_get_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol._tasks.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: Tasks.getWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<CloudTask, TaskGetHeaders>> com.microsoft.azure.batch.protocol.Tasks.getWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol._tasks.update*
  name: update
  nameWithType: Tasks.update
  fullName: void com.microsoft.azure.batch.protocol.Tasks.update
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol._tasks.updateAsync*
  name: updateAsync
  nameWithType: Tasks.updateAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.updateAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._task_update_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._task_update_headers
    name: TaskUpdateHeaders
    fullName: com.microsoft.azure.batch.protocol.models.TaskUpdateHeaders
    href: com.microsoft.azure.batch.protocol.models._task_update_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol._tasks.updateWithServiceResponseAsync*
  name: updateWithServiceResponseAsync
  nameWithType: Tasks.updateWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskUpdateHeaders>> com.microsoft.azure.batch.protocol.Tasks.updateWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol._tasks.listSubtasks*
  name: listSubtasks
  nameWithType: Tasks.listSubtasks
  fullName: CloudTaskListSubtasksResult com.microsoft.azure.batch.protocol.Tasks.listSubtasks
  package: com.microsoft.azure.batch.protocol
- uid: 897eb10acom.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_resulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_result
    name: CloudTaskListSubtasksResult
    fullName: com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult
    href: com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_result.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_resulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_result
    name: CloudTaskListSubtasksResult
    fullName: com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult
    href: com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol._tasks.listSubtasksAsync*
  name: listSubtasksAsync
  nameWithType: Tasks.listSubtasksAsync
  fullName: ServiceFuture<CloudTaskListSubtasksResult> com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync
  package: com.microsoft.azure.batch.protocol
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_result
    name: CloudTaskListSubtasksResult
    fullName: com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult
    href: com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_result.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_resultb33c76fccom.microsoft.azure.batch.protocol.models._task_list_subtasks_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_result
    name: CloudTaskListSubtasksResult
    fullName: com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult
    href: com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_result.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models._task_list_subtasks_headers
    name: TaskListSubtasksHeaders
    fullName: com.microsoft.azure.batch.protocol.models.TaskListSubtasksHeaders
    href: com.microsoft.azure.batch.protocol.models._task_list_subtasks_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol._tasks.listSubtasksWithServiceResponseAsync*
  name: listSubtasksWithServiceResponseAsync
  nameWithType: Tasks.listSubtasksWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<CloudTaskListSubtasksResult, TaskListSubtasksHeaders>> com.microsoft.azure.batch.protocol.Tasks.listSubtasksWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol._tasks.terminate*
  name: terminate
  nameWithType: Tasks.terminate
  fullName: void com.microsoft.azure.batch.protocol.Tasks.terminate
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol._tasks.terminateAsync*
  name: terminateAsync
  nameWithType: Tasks.terminateAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.terminateAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._task_terminate_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._task_terminate_headers
    name: TaskTerminateHeaders
    fullName: com.microsoft.azure.batch.protocol.models.TaskTerminateHeaders
    href: com.microsoft.azure.batch.protocol.models._task_terminate_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol._tasks.terminateWithServiceResponseAsync*
  name: terminateWithServiceResponseAsync
  nameWithType: Tasks.terminateWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskTerminateHeaders>> com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol._tasks.reactivate*
  name: reactivate
  nameWithType: Tasks.reactivate
  fullName: void com.microsoft.azure.batch.protocol.Tasks.reactivate
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol._tasks.reactivateAsync*
  name: reactivateAsync
  nameWithType: Tasks.reactivateAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Tasks.reactivateAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._task_reactivate_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._task_reactivate_headers
    name: TaskReactivateHeaders
    fullName: com.microsoft.azure.batch.protocol.models.TaskReactivateHeaders
    href: com.microsoft.azure.batch.protocol.models._task_reactivate_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol._tasks.reactivateWithServiceResponseAsync*
  name: reactivateWithServiceResponseAsync
  nameWithType: Tasks.reactivateWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, TaskReactivateHeaders>> com.microsoft.azure.batch.protocol.Tasks.reactivateWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol._tasks.listNext*
  name: listNext
  nameWithType: Tasks.listNext
  fullName: PagedList<CloudTask> com.microsoft.azure.batch.protocol.Tasks.listNext
  package: com.microsoft.azure.batch.protocol
- uid: bd82102acom.microsoft.azure.batch.protocol.models._cloud_taske7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models._cloud_task
    name: CloudTask
    fullName: com.microsoft.azure.batch.protocol.models.CloudTask
    href: com.microsoft.azure.batch.protocol.models._cloud_task.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol._tasks.listNextAsync*
  name: listNextAsync
  nameWithType: Tasks.listNextAsync
  fullName: ServiceFuture<List<CloudTask>> com.microsoft.azure.batch.protocol.Tasks.listNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol._tasks.listNextWithServiceResponseAsync*
  name: listNextWithServiceResponseAsync
  nameWithType: Tasks.listNextWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<CloudTask>, TaskListHeaders>> com.microsoft.azure.batch.protocol.Tasks.listNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._task_list_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._task_list_next_options
    name: TaskListNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.TaskListNextOptions
    href: com.microsoft.azure.batch.protocol.models._task_list_next_options.yml
- uid: com.microsoft.azure.batch.protocol.models._task_add_parameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_add_parameter.yml
  name: TaskAddParameter
  nameWithType: TaskAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  type: Class
  summary: <p>An Azure Batch task to add. </p>
  syntax:
    content: public class TaskAddParameter
- uid: com.microsoft.azure.batch.protocol.models._task_add_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_add_headers.yml
  name: TaskAddHeaders
  nameWithType: TaskAddHeaders
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddHeaders
  type: Class
  summary: <p>Defines headers for Add operation. </p>
  syntax:
    content: public class TaskAddHeaders
- uid: com.microsoft.azure.batch.protocol.models._task_add_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_add_options.yml
  name: TaskAddOptions
  nameWithType: TaskAddOptions
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddOptions
  type: Class
  summary: <p>Additional parameters for the Task_add operation. </p>
  syntax:
    content: public class TaskAddOptions
- uid: com.microsoft.azure.batch.protocol.models._cloud_task
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._cloud_task.yml
  name: CloudTask
  nameWithType: CloudTask
  fullName: com.microsoft.azure.batch.protocol.models.CloudTask
  type: Class
  summary: <p>An Azure Batch task. </p>
  syntax:
    content: public class CloudTask
- uid: com.microsoft.azure.batch.protocol.models._task_list_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_list_headers.yml
  name: TaskListHeaders
  nameWithType: TaskListHeaders
  fullName: com.microsoft.azure.batch.protocol.models.TaskListHeaders
  type: Class
  summary: <p>Defines headers for List operation. </p>
  syntax:
    content: public class TaskListHeaders
- uid: com.microsoft.azure.batch.protocol.models._task_list_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_list_options.yml
  name: TaskListOptions
  nameWithType: TaskListOptions
  fullName: com.microsoft.azure.batch.protocol.models.TaskListOptions
  type: Class
  summary: <p>Additional parameters for the Task_list operation. </p>
  syntax:
    content: public class TaskListOptions
- uid: com.microsoft.azure.batch.protocol.models._task_add_collection_result
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_add_collection_result.yml
  name: TaskAddCollectionResult
  nameWithType: TaskAddCollectionResult
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult
  type: Class
  summary: <p>The result of adding a collection of tasks to a job. </p>
  syntax:
    content: public class TaskAddCollectionResult
- uid: com.microsoft.azure.batch.protocol.models._task_add_collection_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_add_collection_headers.yml
  name: TaskAddCollectionHeaders
  nameWithType: TaskAddCollectionHeaders
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddCollectionHeaders
  type: Class
  summary: <p>Defines headers for AddCollection operation. </p>
  syntax:
    content: public class TaskAddCollectionHeaders
- uid: com.microsoft.azure.batch.protocol.models._task_add_collection_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_add_collection_options.yml
  name: TaskAddCollectionOptions
  nameWithType: TaskAddCollectionOptions
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddCollectionOptions
  type: Class
  summary: <p>Additional parameters for the Task_addCollection operation. </p>
  syntax:
    content: public class TaskAddCollectionOptions
- uid: com.microsoft.azure.batch.protocol.models._task_delete_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_delete_headers.yml
  name: TaskDeleteHeaders
  nameWithType: TaskDeleteHeaders
  fullName: com.microsoft.azure.batch.protocol.models.TaskDeleteHeaders
  type: Class
  summary: <p>Defines headers for Delete operation. </p>
  syntax:
    content: public class TaskDeleteHeaders
- uid: com.microsoft.azure.batch.protocol.models._task_delete_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_delete_options.yml
  name: TaskDeleteOptions
  nameWithType: TaskDeleteOptions
  fullName: com.microsoft.azure.batch.protocol.models.TaskDeleteOptions
  type: Class
  summary: <p>Additional parameters for the Task_delete operation. </p>
  syntax:
    content: public class TaskDeleteOptions
- uid: com.microsoft.azure.batch.protocol.models._task_get_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_get_headers.yml
  name: TaskGetHeaders
  nameWithType: TaskGetHeaders
  fullName: com.microsoft.azure.batch.protocol.models.TaskGetHeaders
  type: Class
  summary: <p>Defines headers for Get operation. </p>
  syntax:
    content: public class TaskGetHeaders
- uid: com.microsoft.azure.batch.protocol.models._task_get_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_get_options.yml
  name: TaskGetOptions
  nameWithType: TaskGetOptions
  fullName: com.microsoft.azure.batch.protocol.models.TaskGetOptions
  type: Class
  summary: <p>Additional parameters for the Task_get operation. </p>
  syntax:
    content: public class TaskGetOptions
- uid: com.microsoft.azure.batch.protocol.models._task_update_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_update_headers.yml
  name: TaskUpdateHeaders
  nameWithType: TaskUpdateHeaders
  fullName: com.microsoft.azure.batch.protocol.models.TaskUpdateHeaders
  type: Class
  summary: <p>Defines headers for Update operation. </p>
  syntax:
    content: public class TaskUpdateHeaders
- uid: com.microsoft.azure.batch.protocol.models._task_constraints
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_constraints.yml
  name: TaskConstraints
  nameWithType: TaskConstraints
  fullName: com.microsoft.azure.batch.protocol.models.TaskConstraints
  type: Class
  summary: <p>Execution constraints to apply to a task. </p>
  syntax:
    content: public class TaskConstraints
- uid: com.microsoft.azure.batch.protocol.models._task_update_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_update_options.yml
  name: TaskUpdateOptions
  nameWithType: TaskUpdateOptions
  fullName: com.microsoft.azure.batch.protocol.models.TaskUpdateOptions
  type: Class
  summary: <p>Additional parameters for the Task_update operation. </p>
  syntax:
    content: public class TaskUpdateOptions
- uid: com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_result
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._cloud_task_list_subtasks_result.yml
  name: CloudTaskListSubtasksResult
  nameWithType: CloudTaskListSubtasksResult
  fullName: com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult
  type: Class
  summary: <p>The result of listing the subtasks of a task. </p>
  syntax:
    content: public class CloudTaskListSubtasksResult
- uid: com.microsoft.azure.batch.protocol.models._task_list_subtasks_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_list_subtasks_headers.yml
  name: TaskListSubtasksHeaders
  nameWithType: TaskListSubtasksHeaders
  fullName: com.microsoft.azure.batch.protocol.models.TaskListSubtasksHeaders
  type: Class
  summary: <p>Defines headers for ListSubtasks operation. </p>
  syntax:
    content: public class TaskListSubtasksHeaders
- uid: com.microsoft.azure.batch.protocol.models._task_list_subtasks_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_list_subtasks_options.yml
  name: TaskListSubtasksOptions
  nameWithType: TaskListSubtasksOptions
  fullName: com.microsoft.azure.batch.protocol.models.TaskListSubtasksOptions
  type: Class
  summary: <p>Additional parameters for the Task_listSubtasks operation. </p>
  syntax:
    content: public class TaskListSubtasksOptions
- uid: com.microsoft.azure.batch.protocol.models._task_terminate_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_terminate_headers.yml
  name: TaskTerminateHeaders
  nameWithType: TaskTerminateHeaders
  fullName: com.microsoft.azure.batch.protocol.models.TaskTerminateHeaders
  type: Class
  summary: <p>Defines headers for Terminate operation. </p>
  syntax:
    content: public class TaskTerminateHeaders
- uid: com.microsoft.azure.batch.protocol.models._task_terminate_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_terminate_options.yml
  name: TaskTerminateOptions
  nameWithType: TaskTerminateOptions
  fullName: com.microsoft.azure.batch.protocol.models.TaskTerminateOptions
  type: Class
  summary: <p>Additional parameters for the Task_terminate operation. </p>
  syntax:
    content: public class TaskTerminateOptions
- uid: com.microsoft.azure.batch.protocol.models._task_reactivate_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_reactivate_headers.yml
  name: TaskReactivateHeaders
  nameWithType: TaskReactivateHeaders
  fullName: com.microsoft.azure.batch.protocol.models.TaskReactivateHeaders
  type: Class
  summary: <p>Defines headers for Reactivate operation. </p>
  syntax:
    content: public class TaskReactivateHeaders
- uid: com.microsoft.azure.batch.protocol.models._task_reactivate_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_reactivate_options.yml
  name: TaskReactivateOptions
  nameWithType: TaskReactivateOptions
  fullName: com.microsoft.azure.batch.protocol.models.TaskReactivateOptions
  type: Class
  summary: <p>Additional parameters for the Task_reactivate operation. </p>
  syntax:
    content: public class TaskReactivateOptions
- uid: com.microsoft.azure.batch.protocol.models._task_list_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_list_next_options.yml
  name: TaskListNextOptions
  nameWithType: TaskListNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.TaskListNextOptions
  type: Class
  summary: <p>Additional parameters for the listNext operation. </p>
  syntax:
    content: public class TaskListNextOptions
- uid: com.microsoft.azure.batch.protocol._tasks
  parent: com.microsoft.azure.batch.protocol
  href: com.microsoft.azure.batch.protocol._tasks.yml
  name: Tasks
  nameWithType: Tasks
  fullName: com.microsoft.azure.batch.protocol.Tasks
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref uid="com.microsoft.azure.batch.protocol._tasks" data-throw-if-not-resolved="false">Tasks</xref>. </p>
  syntax: *o1
