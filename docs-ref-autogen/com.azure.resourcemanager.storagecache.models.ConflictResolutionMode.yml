### YamlMime:JavaType
uid: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode"
fullName: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode"
name: "ConflictResolutionMode"
nameWithType: "ConflictResolutionMode"
summary: "How the import job will handle conflicts."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.ExpandableStringEnum?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.core.util.ExpandableStringEnum?alt=com.azure.core.util.ExpandableStringEnum&text=ExpandableStringEnum\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.util.ExpandableStringEnum.<T>fromString(java.lang.String,java.lang.Class<T>)?alt=com.azure.core.util.ExpandableStringEnum.<T>fromString&text=<T>fromString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.ExpandableStringEnum.<T>values(java.lang.Class<T>)?alt=com.azure.core.util.ExpandableStringEnum.<T>values&text=<T>values\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.ExpandableStringEnum.equals(java.lang.Object)?alt=com.azure.core.util.ExpandableStringEnum.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.ExpandableStringEnum.getValue()?alt=com.azure.core.util.ExpandableStringEnum.getValue&text=getValue\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.ExpandableStringEnum.hashCode()?alt=com.azure.core.util.ExpandableStringEnum.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.ExpandableStringEnum.toString()?alt=com.azure.core.util.ExpandableStringEnum.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ConflictResolutionMode**</br> extends <xref href=\"com.azure.core.util.ExpandableStringEnum?alt=com.azure.core.util.ExpandableStringEnum&text=ExpandableStringEnum\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.ConflictResolutionMode?alt=com.azure.resourcemanager.storagecache.models.ConflictResolutionMode&text=ConflictResolutionMode\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.ConflictResolutionMode()"
  fullName: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.ConflictResolutionMode()"
  name: "ConflictResolutionMode()"
  nameWithType: "ConflictResolutionMode.ConflictResolutionMode()"
  summary: "Creates a new instance of Conflict<wbr>Resolution<wbr>Mode value."
  deprecatedTag: "Use the <xref uid=\"com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.fromString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#fromString(String)\"></xref> factory method."
  syntax: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Deprecated.html\">@Deprecated</a></br>public ConflictResolutionMode()"
  desc: "Creates a new instance of ConflictResolutionMode value."
  hasDeprecatedTag: true
fields:
- uid: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.FAIL"
  fullName: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.FAIL"
  name: "FAIL"
  nameWithType: "ConflictResolutionMode.FAIL"
  summary: "Static value Fail for Conflict<wbr>Resolution<wbr>Mode."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.ConflictResolutionMode?alt=com.azure.resourcemanager.storagecache.models.ConflictResolutionMode&text=ConflictResolutionMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final ConflictResolutionMode FAIL"
  desc: "Static value Fail for ConflictResolutionMode."
- uid: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.OVERWRITE_ALWAYS"
  fullName: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.OVERWRITE_ALWAYS"
  name: "OVERWRITE_ALWAYS"
  nameWithType: "ConflictResolutionMode.OVERWRITE_ALWAYS"
  summary: "Static value Overwrite<wbr>Always for Conflict<wbr>Resolution<wbr>Mode."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.ConflictResolutionMode?alt=com.azure.resourcemanager.storagecache.models.ConflictResolutionMode&text=ConflictResolutionMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final ConflictResolutionMode OVERWRITE_ALWAYS"
  desc: "Static value OverwriteAlways for ConflictResolutionMode."
- uid: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.OVERWRITE_IF_DIRTY"
  fullName: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.OVERWRITE_IF_DIRTY"
  name: "OVERWRITE_IF_DIRTY"
  nameWithType: "ConflictResolutionMode.OVERWRITE_IF_DIRTY"
  summary: "Static value Overwrite<wbr>IfDirty for Conflict<wbr>Resolution<wbr>Mode."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.ConflictResolutionMode?alt=com.azure.resourcemanager.storagecache.models.ConflictResolutionMode&text=ConflictResolutionMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final ConflictResolutionMode OVERWRITE_IF_DIRTY"
  desc: "Static value OverwriteIfDirty for ConflictResolutionMode."
- uid: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.SKIP"
  fullName: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.SKIP"
  name: "SKIP"
  nameWithType: "ConflictResolutionMode.SKIP"
  summary: "Static value Skip for Conflict<wbr>Resolution<wbr>Mode."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.ConflictResolutionMode?alt=com.azure.resourcemanager.storagecache.models.ConflictResolutionMode&text=ConflictResolutionMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final ConflictResolutionMode SKIP"
  desc: "Static value Skip for ConflictResolutionMode."
methods:
- uid: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.fromString(java.lang.String)"
  fullName: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.fromString(String name)"
  name: "fromString(String name)"
  nameWithType: "ConflictResolutionMode.fromString(String name)"
  summary: "Creates or finds a Conflict<wbr>Resolution<wbr>Mode from its string representation."
  modifiers:
  - "static"
  parameters:
  - description: "a name to look for."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public static ConflictResolutionMode fromString(String name)"
  desc: "Creates or finds a ConflictResolutionMode from its string representation."
  returns:
    description: "the corresponding ConflictResolutionMode."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.ConflictResolutionMode?alt=com.azure.resourcemanager.storagecache.models.ConflictResolutionMode&text=ConflictResolutionMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.values()"
  fullName: "com.azure.resourcemanager.storagecache.models.ConflictResolutionMode.values()"
  name: "values()"
  nameWithType: "ConflictResolutionMode.values()"
  summary: "Gets known Conflict<wbr>Resolution<wbr>Mode values."
  modifiers:
  - "static"
  syntax: "public static Collection<ConflictResolutionMode> values()"
  desc: "Gets known ConflictResolutionMode values."
  returns:
    description: "known ConflictResolutionMode values."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html\">Collection</a>&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.ConflictResolutionMode?alt=com.azure.resourcemanager.storagecache.models.ConflictResolutionMode&text=ConflictResolutionMode\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "How the import job will handle conflicts. For example, if the import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or was not previously imported. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/ for a thorough explanation of these resolution modes."
metadata: {}
package: "com.azure.resourcemanager.storagecache.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storagecache:1.0.0
