### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.datalake.analytics.models.CatalogItem?alt=com.microsoft.azure.management.datalake.analytics.models.CatalogItem&text=CatalogItem" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.computeAccountName()
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.version()
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.withComputeAccountName(String)
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.withVersion(UUID)
methods:
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlSchema.databaseName()
  name: databaseName()
  nameWithType: USqlSchema.databaseName()
  returns:
    description: <p>the databaseName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the databaseName value.</p>

    <p></p>
  syntax: public String databaseName()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlSchema.databaseName()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlSchema.name()
  name: name()
  nameWithType: USqlSchema.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name value.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlSchema.name()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlSchema.withDatabaseName(String databaseName)
  name: withDatabaseName(String databaseName)
  nameWithType: USqlSchema.withDatabaseName(String databaseName)
  parameters:
  - description: <p>the databaseName value to set </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlSchema object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlSchema?alt=com.microsoft.azure.management.datalake.analytics.models.USqlSchema&text=USqlSchema" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the databaseName value.</p>

    <p></p>
  syntax: public USqlSchema withDatabaseName(String databaseName)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlSchema.withDatabaseName(String)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlSchema.withName(String name)
  name: withName(String name)
  nameWithType: USqlSchema.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlSchema object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlSchema?alt=com.microsoft.azure.management.datalake.analytics.models.USqlSchema&text=USqlSchema" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name value.</p>

    <p></p>
  syntax: public USqlSchema withName(String name)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlSchema.withName(String)
nameWithType: USqlSchema
syntax: public class USqlSchema extends CatalogItem
type: class
uid: com.microsoft.azure.management.datalake.analytics.models.USqlSchema
fullName: com.microsoft.azure.management.datalake.analytics.models.USqlSchema
name: USqlSchema
package: com.microsoft.azure.management.datalake.analytics.models
summary: <p>A Data Lake Analytics catalog U-SQL schema item. </p>
metadata: {}
