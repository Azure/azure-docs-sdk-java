### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  id: AsyncDocumentClient
  parent: com.microsoft.azure.cosmosdb.rx
  children:
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close()
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String,Attachment,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String,InputStream,MediaOptions,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection(String,DocumentCollection,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase(Database,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument(String,Object,RequestOptions,boolean)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission(String,Permission,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure(String,StoredProcedure,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger(String,Trigger,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser(String,User,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String,Object [])
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String,RequestOptions,Object [])
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy()
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount()
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint()
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint()
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint()
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.monitor(MeterRegistry)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed(String,ChangeFeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases(FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia(String)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer(String)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers(FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment(Attachment,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection(DocumentCollection,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(Document,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(String,Object,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer(Offer)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission(Permission,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure(StoredProcedure,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger(Trigger,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser(User,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction(UserDefinedFunction,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia(String,InputStream,MediaOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String,Attachment,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String,InputStream,MediaOptions,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument(String,Object,RequestOptions,boolean)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission(String,Permission,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure(String,StoredProcedure,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger(String,Trigger,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser(String,User,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: AsyncDocumentClient
  nameWithType: AsyncDocumentClient
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  type: Interface
  source:
    remote: &o0
      path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
      branch: master
      repo: https://github.com/Azure/azure-cosmosdb-java
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 90
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Provides a client-side logical representation of the Azure Cosmos DB database service. This async client is used to configure and execute requests against the service.</p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsyncDocumentClient\"></xref> async APIs return <a href=\"https://github.com/ReactiveX/RxJava\">rxJava</a>'s<code>Observable \r\n    </code> , and so you can use rxJava <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> functionality. <b>The async <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> based APIs perform the requested operation only after subscription.</b></p>\r\n<p>The service client encapsulates the endpoint and credentials used to access the Cosmos DB service. </p>\r\n<p>To instantiate you can use the <xref uid=\"com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.Builder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Builder\"></xref><pre><code>ConnectionPolicy connectionPolicy = new ConnectionPolicy();\r\n    connectionPolicy.setConnectionMode(ConnectionMode.Direct);\r\n    AsyncDocumentClient client = new AsyncDocumentClient.Builder()\r\n            .withServiceEndpoint(serviceEndpoint)\r\n            .withMasterKeyOrResourceToken(masterKey)\r\n            .withConnectionPolicy(connectionPolicy)\r\n            .withConsistencyLevel(ConsistencyLevel.Session)\r\n            .build();\r\n    </code></pre></p>"
  syntax: &o1
    content: public interface AsyncDocumentClient
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close()
  id: close()
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: close()
  nameWithType: AsyncDocumentClient.close()
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close()
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1527
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Close this <xref uid=\"com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsyncDocumentClient\"></xref> instance and cleans up the resources. </p>"
  syntax:
    content: public void close()
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String,Attachment,RequestOptions)
  id: createAttachment(String,Attachment,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createAttachment(String documentLink, Attachment attachment, RequestOptions options)
  nameWithType: AsyncDocumentClient.createAttachment(String documentLink, Attachment attachment, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String documentLink, Attachment attachment, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1023
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates an attachment. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the created attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> createAttachment(String documentLink, Attachment attachment, RequestOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: attachment
      type: com.microsoft.azure.cosmosdb.Attachment
      description: <p>the attachment to create. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Attachmente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String,InputStream,MediaOptions,RequestOptions)
  id: createAttachment(String,InputStream,MediaOptions,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  nameWithType: AsyncDocumentClient.createAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1151
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates an attachment. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the created attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> createAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: mediaStream
      type: 76fcb9b7
      description: <p>the media stream for creating the attachment. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.MediaOptions
      description: <p>the media options. </p>
    - id: requestOptions
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Attachmente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection(String,DocumentCollection,RequestOptions)
  id: createCollection(String,DocumentCollection,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)
  nameWithType: AsyncDocumentClient.createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 417
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a document collection. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the created collection. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<DocumentCollection>> createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: collection
      type: com.microsoft.azure.cosmosdb.DocumentCollection
      description: <p>the collection. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.DocumentCollectione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created collection or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase(Database,RequestOptions)
  id: createDatabase(Database,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createDatabase(Database database, RequestOptions options)
  nameWithType: AsyncDocumentClient.createDatabase(Database database, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase(Database database, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 339
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a database. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the created database. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Database>> createDatabase(Database database, RequestOptions options)
    parameters:
    - id: database
      type: com.microsoft.azure.cosmosdb.Database
      description: <p>the database. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Databasee7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created database or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument(String,Object,RequestOptions,boolean)
  id: createDocument(String,Object,RequestOptions,boolean)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  nameWithType: AsyncDocumentClient.createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 513
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a document. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the created document. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Document>> createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the link to the parent document collection. </p>
    - id: document
      type: "79317049"
      description: <p>the document represented as a POJO or Document object. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    - id: disableAutomaticIdGeneration
      type: 4fc6e284
      description: <p>the flag for disabling automatic id generation. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Documente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission(String,Permission,RequestOptions)
  id: createPermission(String,Permission,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createPermission(String userLink, Permission permission, RequestOptions options)
  nameWithType: AsyncDocumentClient.createPermission(String userLink, Permission permission, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission(String userLink, Permission permission, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1355
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a permission. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the created permission. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Permission>> createPermission(String userLink, Permission permission, RequestOptions options)
    parameters:
    - id: userLink
      type: "26831127"
      description: <p>the user link. </p>
    - id: permission
      type: com.microsoft.azure.cosmosdb.Permission
      description: <p>the permission to create. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Permissione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created permission or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure(String,StoredProcedure,RequestOptions)
  id: createStoredProcedure(String,StoredProcedure,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  nameWithType: AsyncDocumentClient.createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 664
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a stored procedure. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the created stored procedure. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<StoredProcedure>> createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: storedProcedure
      type: com.microsoft.azure.cosmosdb.StoredProcedure
      description: <p>the stored procedure to create. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.StoredProceduree7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created stored procedure or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger(String,Trigger,RequestOptions)
  id: createTrigger(String,Trigger,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  nameWithType: AsyncDocumentClient.createTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 803
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a trigger. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the created trigger. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Trigger>> createTrigger(String collectionLink, Trigger trigger, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: trigger
      type: com.microsoft.azure.cosmosdb.Trigger
      description: <p>the trigger. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Triggere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created trigger or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser(String,User,RequestOptions)
  id: createUser(String,User,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createUser(String databaseLink, User user, RequestOptions options)
  nameWithType: AsyncDocumentClient.createUser(String databaseLink, User user, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser(String databaseLink, User user, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1247
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a user. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the created user. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<User>> createUser(String databaseLink, User user, RequestOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: user
      type: com.microsoft.azure.cosmosdb.User
      description: <p>the user to create. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Usere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created user or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
  id: createUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  nameWithType: AsyncDocumentClient.createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 911
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a user defined function. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the created user defined function. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<UserDefinedFunction>> createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: udf
      type: com.microsoft.azure.cosmosdb.UserDefinedFunction
      description: <p>the user defined function. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.UserDefinedFunctione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created user defined function or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment(String,RequestOptions)
  id: deleteAttachment(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteAttachment(String attachmentLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteAttachment(String attachmentLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment(String attachmentLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1063
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes an attachment. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response for the deleted attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> deleteAttachment(String attachmentLink, RequestOptions options)
    parameters:
    - id: attachmentLink
      type: "26831127"
      description: <p>the attachment link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Attachmente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection(String,RequestOptions)
  id: deleteCollection(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteCollection(String collectionLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteCollection(String collectionLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection(String collectionLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 444
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a document collection by the collection link. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response for the deleted database. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<DocumentCollection>> deleteCollection(String collectionLink, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.DocumentCollectione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted database or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict(String,RequestOptions)
  id: deleteConflict(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteConflict(String conflictLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteConflict(String conflictLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict(String conflictLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1233
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a conflict. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response for the deleted conflict. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Conflict>> deleteConflict(String conflictLink, RequestOptions options)
    parameters:
    - id: conflictLink
      type: "26831127"
      description: <p>the conflict link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Conflicte7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted conflict or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase(String,RequestOptions)
  id: deleteDatabase(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteDatabase(String databaseLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteDatabase(String databaseLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase(String databaseLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 352
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a database. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the deleted database. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Database>> deleteDatabase(String databaseLink, RequestOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Databasee7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the deleted database or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument(String,RequestOptions)
  id: deleteDocument(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteDocument(String documentLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteDocument(String documentLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument(String documentLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 570
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a document by the document link. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response for the deleted document. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Document>> deleteDocument(String documentLink, RequestOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Documente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission(String,RequestOptions)
  id: deletePermission(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deletePermission(String permissionLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deletePermission(String permissionLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission(String permissionLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1395
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a permission. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response for the deleted permission. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Permission>> deletePermission(String permissionLink, RequestOptions options)
    parameters:
    - id: permissionLink
      type: "26831127"
      description: <p>the permission link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Permissione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted permission or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure(String,RequestOptions)
  id: deleteStoredProcedure(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteStoredProcedure(String storedProcedureLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteStoredProcedure(String storedProcedureLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure(String storedProcedureLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 706
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a stored procedure by the stored procedure link. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response for the deleted stored procedure. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<StoredProcedure>> deleteStoredProcedure(String storedProcedureLink, RequestOptions options)
    parameters:
    - id: storedProcedureLink
      type: "26831127"
      description: <p>the stored procedure link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.StoredProceduree7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted stored procedure or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger(String,RequestOptions)
  id: deleteTrigger(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteTrigger(String triggerLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteTrigger(String triggerLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger(String triggerLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 843
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a trigger. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response for the deleted trigger. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Trigger>> deleteTrigger(String triggerLink, RequestOptions options)
    parameters:
    - id: triggerLink
      type: "26831127"
      description: <p>the trigger link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Triggere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted trigger or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser(String,RequestOptions)
  id: deleteUser(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteUser(String userLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteUser(String userLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser(String userLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1287
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a user. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response for the deleted user. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<User>> deleteUser(String userLink, RequestOptions options)
    parameters:
    - id: userLink
      type: "26831127"
      description: <p>the user link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Usere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted user or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction(String,RequestOptions)
  id: deleteUserDefinedFunction(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteUserDefinedFunction(String udfLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteUserDefinedFunction(String udfLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction(String udfLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 953
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a user defined function. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response for the deleted user defined function. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<UserDefinedFunction>> deleteUserDefinedFunction(String udfLink, RequestOptions options)
    parameters:
    - id: udfLink
      type: "26831127"
      description: <p>the user defined function link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.UserDefinedFunctione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted user defined function or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String,Object [])
  id: executeStoredProcedure(String,Object [])
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)
  nameWithType: AsyncDocumentClient.executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 774
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Executes a stored procedure by the stored procedure link. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the stored procedure response. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StoredProcedureResponse> executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)
    parameters:
    - id: storedProcedureLink
      type: "26831127"
      description: <p>the stored procedure link. </p>
    - id: procedureParams
      type: 055b929b
      description: <p>the array of procedure parameter values. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.StoredProcedureResponsea08ddfce
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the stored procedure response or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String,RequestOptions,Object [])
  id: executeStoredProcedure(String,RequestOptions,Object [])
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)
  nameWithType: AsyncDocumentClient.executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 788
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Executes a stored procedure by the stored procedure link. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the stored procedure response. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StoredProcedureResponse> executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)
    parameters:
    - id: storedProcedureLink
      type: "26831127"
      description: <p>the stored procedure link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    - id: procedureParams
      type: 055b929b
      description: <p>the array of procedure parameter values. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.StoredProcedureResponsea08ddfce
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the stored procedure response or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy()
  id: getConnectionPolicy()
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: getConnectionPolicy()
  nameWithType: AsyncDocumentClient.getConnectionPolicy()
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy()
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 326
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Gets the connection policy</p>\r\n<p></p>"
  syntax:
    content: public ConnectionPolicy getConnectionPolicy()
    return:
      type: com.microsoft.azure.cosmosdb.ConnectionPolicy
      description: <p>the connection policy </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount()
  id: getDatabaseAccount()
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: getDatabaseAccount()
  nameWithType: AsyncDocumentClient.getDatabaseAccount()
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount()
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1522
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Gets database account information. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the database account. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DatabaseAccount> getDatabaseAccount()
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.DatabaseAccounta08ddfce
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the database account or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint()
  id: getReadEndpoint()
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: getReadEndpoint()
  nameWithType: AsyncDocumentClient.getReadEndpoint()
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint()
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 319
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Gets the current read endpoint chosen based on availability and preference.</p>\r\n<p></p>"
  syntax:
    content: public URI getReadEndpoint()
    return:
      type: "62304784"
      description: <p>the read endpoint URI </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint()
  id: getServiceEndpoint()
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: getServiceEndpoint()
  nameWithType: AsyncDocumentClient.getServiceEndpoint()
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint()
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 305
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Gets the default service endpoint as passed in by the user during construction.</p>\r\n<p></p>"
  syntax:
    content: public URI getServiceEndpoint()
    return:
      type: "62304784"
      description: <p>the service endpoint URI </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint()
  id: getWriteEndpoint()
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: getWriteEndpoint()
  nameWithType: AsyncDocumentClient.getWriteEndpoint()
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint()
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 312
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Gets the current write endpoint chosen based on availability and preference.</p>\r\n<p></p>"
  syntax:
    content: public URI getWriteEndpoint()
    return:
      type: "62304784"
      description: <p>the write endpoint URI </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.monitor(MeterRegistry)
  id: monitor(MeterRegistry)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: monitor(MeterRegistry registry)
  nameWithType: AsyncDocumentClient.monitor(MeterRegistry registry)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.monitor(MeterRegistry registry)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.monitor*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 296
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Adds a meter registry for reporting Direct TCP metrics</p>\r\n<p></p>"
  syntax:
    content: public static void monitor(MeterRegistry registry)
    parameters:
    - id: registry
      type: d17dd54c
      description: <p>a meter registry to use for reporting Direct TCP metrics </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String,SqlQuerySpec,FeedOptions)
  id: queryAttachments(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryAttachments(String documentLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryAttachments(String documentLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String documentLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1136
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for attachments. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained attachments. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Attachment>> queryAttachments(String documentLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: querySpec
      type: com.microsoft.azure.cosmosdb.SqlQuerySpec
      description: <p>the SQL query specification. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Attachmente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained attachments or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String,String,FeedOptions)
  id: queryAttachments(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryAttachments(String documentLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryAttachments(String documentLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String documentLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1122
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for attachments. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained attachments. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Attachment>> queryAttachments(String documentLink, String query, FeedOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Attachmente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained attachments or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String,SqlQuerySpec,FeedOptions)
  id: queryCollections(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 498
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for document collections in a database. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response of the obtained collections. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<DocumentCollection>> queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: querySpec
      type: com.microsoft.azure.cosmosdb.SqlQuerySpec
      description: <p>the SQL query specification. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.DocumentCollectione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained collections or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String,String,FeedOptions)
  id: queryCollections(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryCollections(String databaseLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryCollections(String databaseLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String databaseLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 484
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for document collections in a database. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response of the obtained collections. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<DocumentCollection>> queryCollections(String databaseLink, String query, FeedOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.DocumentCollectione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained collections or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String,SqlQuerySpec,FeedOptions)
  id: queryConflicts(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1220
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for conflicts. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained conflicts. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Conflict>> queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: querySpec
      type: com.microsoft.azure.cosmosdb.SqlQuerySpec
      description: <p>the SQL query specification. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Conflicte7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained conflicts or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String,String,FeedOptions)
  id: queryConflicts(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryConflicts(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryConflicts(String collectionLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String collectionLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1206
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for conflicts. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained conflicts. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Conflict>> queryConflicts(String collectionLink, String query, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Conflicte7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained conflicts or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(SqlQuerySpec,FeedOptions)
  id: queryDatabases(SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryDatabases(SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryDatabases(SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 403
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for databases. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response of the obtained databases. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Database>> queryDatabases(SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: querySpec
      type: com.microsoft.azure.cosmosdb.SqlQuerySpec
      description: <p>the SQL query specification. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Databasee7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained databases or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(String,FeedOptions)
  id: queryDatabases(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryDatabases(String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryDatabases(String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 390
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for databases. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response of the read databases. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Database>> queryDatabases(String query, FeedOptions options)
    parameters:
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Databasee7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of read databases or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed(String,ChangeFeedOptions)
  id: queryDocumentChangeFeed(String,ChangeFeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)
  nameWithType: AsyncDocumentClient.queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 637
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for documents change feed in a document collection. After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained documents. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Document>> queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the link to the parent document collection. </p>
    - id: changeFeedOptions
      type: com.microsoft.azure.cosmosdb.ChangeFeedOptions
      description: <p>the change feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Documente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained documents or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String,SqlQuerySpec,FeedOptions)
  id: queryDocuments(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 625
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for documents in a document collection. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response of the obtained documents. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Document>> queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the link to the parent document collection. </p>
    - id: querySpec
      type: com.microsoft.azure.cosmosdb.SqlQuerySpec
      description: <p>the SQL query specification. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Documente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained documents or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String,String,FeedOptions)
  id: queryDocuments(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryDocuments(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryDocuments(String collectionLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String collectionLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 611
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for documents in a document collection. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response of the obtained documents. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Document>> queryDocuments(String collectionLink, String query, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the link to the parent document collection. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Documente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(SqlQuerySpec,FeedOptions)
  id: queryOffers(SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryOffers(SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryOffers(SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1511
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for offers in a database. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of obtained obtained offers. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Offer>> queryOffers(SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: querySpec
      type: com.microsoft.azure.cosmosdb.SqlQuerySpec
      description: <p>the query specification. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Offere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained offers or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(String,FeedOptions)
  id: queryOffers(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryOffers(String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryOffers(String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1498
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for offers in a database. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of obtained obtained offers. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Offer>> queryOffers(String query, FeedOptions options)
    parameters:
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Offere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained offers or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String,SqlQuerySpec,FeedOptions)
  id: queryPermissions(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryPermissions(String permissionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryPermissions(String permissionLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String permissionLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1449
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for permissions. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained permissions. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Permission>> queryPermissions(String permissionLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: permissionLink
      type: "26831127"
      description: <p>the permission link. </p>
    - id: querySpec
      type: com.microsoft.azure.cosmosdb.SqlQuerySpec
      description: <p>the SQL query specification. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Permissione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained permissions or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String,String,FeedOptions)
  id: queryPermissions(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryPermissions(String permissionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryPermissions(String permissionLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String permissionLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1435
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for permissions. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained permissions. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Permission>> queryPermissions(String permissionLink, String query, FeedOptions options)
    parameters:
    - id: permissionLink
      type: "26831127"
      description: <p>the permission link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Permissione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained permissions or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String,SqlQuerySpec,FeedOptions)
  id: queryStoredProcedures(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 760
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for stored procedures in a document collection. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained stored procedures. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<StoredProcedure>> queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: querySpec
      type: com.microsoft.azure.cosmosdb.SqlQuerySpec
      description: <p>the SQL query specification. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.StoredProceduree7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained stored procedures or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String,String,FeedOptions)
  id: queryStoredProcedures(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryStoredProcedures(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryStoredProcedures(String collectionLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String collectionLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 746
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for stored procedures in a document collection. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained stored procedures. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<StoredProcedure>> queryStoredProcedures(String collectionLink, String query, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.StoredProceduree7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained stored procedures or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String,SqlQuerySpec,FeedOptions)
  id: queryTriggers(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 897
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for triggers. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained triggers. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Trigger>> queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: querySpec
      type: com.microsoft.azure.cosmosdb.SqlQuerySpec
      description: <p>the SQL query specification. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Triggere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained triggers or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String,String,FeedOptions)
  id: queryTriggers(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryTriggers(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryTriggers(String collectionLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String collectionLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 883
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for triggers. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained triggers. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Trigger>> queryTriggers(String collectionLink, String query, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Triggere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained triggers or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String,SqlQuerySpec,FeedOptions)
  id: queryUserDefinedFunctions(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1008
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for user defined functions. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained user defined functions. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<UserDefinedFunction>> queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: querySpec
      type: com.microsoft.azure.cosmosdb.SqlQuerySpec
      description: <p>the SQL query specification. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.UserDefinedFunctione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained user defined functions or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String,String,FeedOptions)
  id: queryUserDefinedFunctions(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 993
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for user defined functions. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained user defined functions. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<UserDefinedFunction>> queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.UserDefinedFunctione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained user defined functions or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String,SqlQuerySpec,FeedOptions)
  id: queryUsers(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1341
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for users. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained users. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<User>> queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: querySpec
      type: com.microsoft.azure.cosmosdb.SqlQuerySpec
      description: <p>the SQL query specification. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Usere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained users or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String,String,FeedOptions)
  id: queryUsers(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryUsers(String databaseLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryUsers(String databaseLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String databaseLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1327
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for users. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained users. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<User>> queryUsers(String databaseLink, String query, FeedOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Usere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained users or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment(String,RequestOptions)
  id: readAttachment(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readAttachment(String attachmentLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readAttachment(String attachmentLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment(String attachmentLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1076
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads an attachment. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the read attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> readAttachment(String attachmentLink, RequestOptions options)
    parameters:
    - id: attachmentLink
      type: "26831127"
      description: <p>the attachment link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Attachmente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments(String,FeedOptions)
  id: readAttachments(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readAttachments(String documentLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readAttachments(String documentLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments(String documentLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1089
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all attachments in a document. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the read attachments. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Attachment>> readAttachments(String documentLink, FeedOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Attachmente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read attachments or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection(String,RequestOptions)
  id: readCollection(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readCollection(String collectionLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readCollection(String collectionLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection(String collectionLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 457
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a document collection by the collection link. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the read collection. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<DocumentCollection>> readCollection(String collectionLink, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.DocumentCollectione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read collection or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections(String,FeedOptions)
  id: readCollections(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readCollections(String databaseLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readCollections(String databaseLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections(String databaseLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 470
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all document collections in a database. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response of the read collections. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<DocumentCollection>> readCollections(String databaseLink, FeedOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the fee options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.DocumentCollectione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read collections or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict(String,RequestOptions)
  id: readConflict(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readConflict(String conflictLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readConflict(String conflictLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict(String conflictLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1179
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a conflict. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the read conflict. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Conflict>> readConflict(String conflictLink, RequestOptions options)
    parameters:
    - id: conflictLink
      type: "26831127"
      description: <p>the conflict link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Conflicte7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read conflict or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts(String,FeedOptions)
  id: readConflicts(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readConflicts(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readConflicts(String collectionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts(String collectionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1192
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all conflicts in a document collection. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the read conflicts. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Conflict>> readConflicts(String collectionLink, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Conflicte7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read conflicts or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase(String,RequestOptions)
  id: readDatabase(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readDatabase(String databaseLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readDatabase(String databaseLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase(String databaseLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 365
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a database. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the read database. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Database>> readDatabase(String databaseLink, RequestOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Databasee7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read database or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases(FeedOptions)
  id: readDatabases(FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readDatabases(FeedOptions options)
  nameWithType: AsyncDocumentClient.readDatabases(FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases(FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 377
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all databases. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response of the read databases. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Database>> readDatabases(FeedOptions options)
    parameters:
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Databasee7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of read databases or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument(String,RequestOptions)
  id: readDocument(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readDocument(String documentLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readDocument(String documentLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument(String documentLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 583
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a document by the document link. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the read document. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Document>> readDocument(String documentLink, RequestOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Documente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments(String,FeedOptions)
  id: readDocuments(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readDocuments(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readDocuments(String collectionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments(String collectionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 596
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all documents in a document collection. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response of the read documents. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Document>> readDocuments(String collectionLink, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Documente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read documents or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia(String)
  id: readMedia(String)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readMedia(String mediaLink)
  nameWithType: AsyncDocumentClient.readMedia(String mediaLink)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia(String mediaLink)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1098
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a media by the media link.</p>\r\n<p></p>"
  syntax:
    content: public Observable<MediaResponse> readMedia(String mediaLink)
    parameters:
    - id: mediaLink
      type: "26831127"
      description: <p>the media link. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.MediaResponsea08ddfce
      description: <p>the media response. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer(String)
  id: readOffer(String)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readOffer(String offerLink)
  nameWithType: AsyncDocumentClient.readOffer(String offerLink)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer(String offerLink)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1473
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads an offer. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the read offer. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Offer>> readOffer(String offerLink)
    parameters:
    - id: offerLink
      type: "26831127"
      description: <p>the offer link. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Offere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read offer or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers(FeedOptions)
  id: readOffers(FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readOffers(FeedOptions options)
  nameWithType: AsyncDocumentClient.readOffers(FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers(FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1485
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads offers. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the read offers. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Offer>> readOffers(FeedOptions options)
    parameters:
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Offere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read offers or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges(String,FeedOptions)
  id: readPartitionKeyRanges(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readPartitionKeyRanges(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readPartitionKeyRanges(String collectionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges(String collectionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 650
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all partition key ranges in a document collection. After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the obtained partition key ranges. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<PartitionKeyRange>> readPartitionKeyRanges(String collectionLink, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the link to the parent document collection. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.PartitionKeyRangee7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained partition key ranges or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission(String,RequestOptions)
  id: readPermission(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readPermission(String permissionLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readPermission(String permissionLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission(String permissionLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1408
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a permission. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the read permission. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Permission>> readPermission(String permissionLink, RequestOptions options)
    parameters:
    - id: permissionLink
      type: "26831127"
      description: <p>the permission link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Permissione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read permission or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions(String,FeedOptions)
  id: readPermissions(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readPermissions(String permissionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readPermissions(String permissionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions(String permissionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1421
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all permissions. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the read permissions. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Permission>> readPermissions(String permissionLink, FeedOptions options)
    parameters:
    - id: permissionLink
      type: "26831127"
      description: <p>the permission link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Permissione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read permissions or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure(String,RequestOptions)
  id: readStoredProcedure(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readStoredProcedure(String storedProcedureLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readStoredProcedure(String storedProcedureLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure(String storedProcedureLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 719
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Read a stored procedure by the stored procedure link. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the read stored procedure. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<StoredProcedure>> readStoredProcedure(String storedProcedureLink, RequestOptions options)
    parameters:
    - id: storedProcedureLink
      type: "26831127"
      description: <p>the stored procedure link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.StoredProceduree7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read stored procedure or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures(String,FeedOptions)
  id: readStoredProcedures(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readStoredProcedures(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readStoredProcedures(String collectionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures(String collectionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 732
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all stored procedures in a document collection link. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the read stored procedures. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<StoredProcedure>> readStoredProcedures(String collectionLink, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.StoredProceduree7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read stored procedures or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger(String,RequestOptions)
  id: readTrigger(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readTrigger(String triggerLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readTrigger(String triggerLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger(String triggerLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 856
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a trigger by the trigger link. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response for the read trigger. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Trigger>> readTrigger(String triggerLink, RequestOptions options)
    parameters:
    - id: triggerLink
      type: "26831127"
      description: <p>the trigger link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Triggere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the read trigger or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers(String,FeedOptions)
  id: readTriggers(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readTriggers(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readTriggers(String collectionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers(String collectionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 869
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all triggers in a document collection. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the read triggers. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Trigger>> readTriggers(String collectionLink, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Triggere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read triggers or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser(String,RequestOptions)
  id: readUser(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readUser(String userLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readUser(String userLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser(String userLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1300
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a user. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the read user. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<User>> readUser(String userLink, RequestOptions options)
    parameters:
    - id: userLink
      type: "26831127"
      description: <p>the user link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Usere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read user or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction(String,RequestOptions)
  id: readUserDefinedFunction(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readUserDefinedFunction(String udfLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readUserDefinedFunction(String udfLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction(String udfLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 966
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Read a user defined function. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response for the read user defined function. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<UserDefinedFunction>> readUserDefinedFunction(String udfLink, RequestOptions options)
    parameters:
    - id: udfLink
      type: "26831127"
      description: <p>the user defined function link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.UserDefinedFunctione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the read user defined function or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions(String,FeedOptions)
  id: readUserDefinedFunctions(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readUserDefinedFunctions(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readUserDefinedFunctions(String collectionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions(String collectionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 979
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all user defined functions in a document collection. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the read user defined functions. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<UserDefinedFunction>> readUserDefinedFunctions(String collectionLink, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.UserDefinedFunctione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read user defined functions or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers(String,FeedOptions)
  id: readUsers(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readUsers(String databaseLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readUsers(String databaseLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers(String databaseLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1313
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all users in a database. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will contain one or several feed response pages of the read users. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<User>> readUsers(String databaseLink, FeedOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.FeedOptions
      description: <p>the feed options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Usere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read users or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment(Attachment,RequestOptions)
  id: replaceAttachment(Attachment,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceAttachment(Attachment attachment, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceAttachment(Attachment attachment, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment(Attachment attachment, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1050
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces an attachment. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the replaced attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> replaceAttachment(Attachment attachment, RequestOptions options)
    parameters:
    - id: attachment
      type: com.microsoft.azure.cosmosdb.Attachment
      description: <p>the attachment to use. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Attachmente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection(DocumentCollection,RequestOptions)
  id: replaceCollection(DocumentCollection,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceCollection(DocumentCollection collection, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceCollection(DocumentCollection collection, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection(DocumentCollection collection, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 431
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a document collection. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the replaced document collection. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<DocumentCollection>> replaceCollection(DocumentCollection collection, RequestOptions options)
    parameters:
    - id: collection
      type: com.microsoft.azure.cosmosdb.DocumentCollection
      description: <p>the document collection to use. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.DocumentCollectione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced document collection or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(Document,RequestOptions)
  id: replaceDocument(Document,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceDocument(Document document, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceDocument(Document document, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(Document document, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 557
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a document with the passed in document. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the replaced document. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Document>> replaceDocument(Document document, RequestOptions options)
    parameters:
    - id: document
      type: com.microsoft.azure.cosmosdb.Document
      description: <p>the document to replace (containing the document id). </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Documente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(String,Object,RequestOptions)
  id: replaceDocument(String,Object,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceDocument(String documentLink, Object document, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceDocument(String documentLink, Object document, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(String documentLink, Object document, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 544
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a document using a POJO object. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the replaced document. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Document>> replaceDocument(String documentLink, Object document, RequestOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: document
      type: "79317049"
      description: <p>the document represented as a POJO or Document object. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Documente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer(Offer)
  id: replaceOffer(Offer)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceOffer(Offer offer)
  nameWithType: AsyncDocumentClient.replaceOffer(Offer offer)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer(Offer offer)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1461
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces an offer. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the replaced offer. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Offer>> replaceOffer(Offer offer)
    parameters:
    - id: offer
      type: com.microsoft.azure.cosmosdb.Offer
      description: <p>the offer to use. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Offere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced offer or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission(Permission,RequestOptions)
  id: replacePermission(Permission,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replacePermission(Permission permission, RequestOptions options)
  nameWithType: AsyncDocumentClient.replacePermission(Permission permission, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission(Permission permission, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1382
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a permission. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the replaced permission. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Permission>> replacePermission(Permission permission, RequestOptions options)
    parameters:
    - id: permission
      type: com.microsoft.azure.cosmosdb.Permission
      description: <p>the permission to use. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Permissione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced permission or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure(StoredProcedure,RequestOptions)
  id: replaceStoredProcedure(StoredProcedure,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 693
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a stored procedure. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the replaced stored procedure. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<StoredProcedure>> replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)
    parameters:
    - id: storedProcedure
      type: com.microsoft.azure.cosmosdb.StoredProcedure
      description: <p>the stored procedure to use. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.StoredProceduree7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced stored procedure or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger(Trigger,RequestOptions)
  id: replaceTrigger(Trigger,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceTrigger(Trigger trigger, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceTrigger(Trigger trigger, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger(Trigger trigger, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 830
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a trigger. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the replaced trigger. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Trigger>> replaceTrigger(Trigger trigger, RequestOptions options)
    parameters:
    - id: trigger
      type: com.microsoft.azure.cosmosdb.Trigger
      description: <p>the trigger to use. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Triggere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced trigger or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser(User,RequestOptions)
  id: replaceUser(User,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceUser(User user, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceUser(User user, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser(User user, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1274
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a user. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the replaced user. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<User>> replaceUser(User user, RequestOptions options)
    parameters:
    - id: user
      type: com.microsoft.azure.cosmosdb.User
      description: <p>the user to use. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Usere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced user or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction(UserDefinedFunction,RequestOptions)
  id: replaceUserDefinedFunction(UserDefinedFunction,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 940
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a user defined function. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the replaced user defined function. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<UserDefinedFunction>> replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)
    parameters:
    - id: udf
      type: com.microsoft.azure.cosmosdb.UserDefinedFunction
      description: <p>the user defined function. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.UserDefinedFunctione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced user defined function or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia(String,InputStream,MediaOptions)
  id: updateMedia(String,InputStream,MediaOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: updateMedia(String mediaLink, InputStream mediaStream, MediaOptions options)
  nameWithType: AsyncDocumentClient.updateMedia(String mediaLink, InputStream mediaStream, MediaOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia(String mediaLink, InputStream mediaStream, MediaOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1108
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Updates a media by the media link.</p>\r\n<p></p>"
  syntax:
    content: public Observable<MediaResponse> updateMedia(String mediaLink, InputStream mediaStream, MediaOptions options)
    parameters:
    - id: mediaLink
      type: "26831127"
      description: <p>the media link. </p>
    - id: mediaStream
      type: 76fcb9b7
      description: <p>the media stream to upload. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.MediaOptions
      description: <p>the media options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.MediaResponsea08ddfce
      description: <p>the media response. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String,Attachment,RequestOptions)
  id: upsertAttachment(String,Attachment,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertAttachment(String documentLink, Attachment attachment, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertAttachment(String documentLink, Attachment attachment, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String documentLink, Attachment attachment, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1037
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts an attachment. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the upserted attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> upsertAttachment(String documentLink, Attachment attachment, RequestOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: attachment
      type: com.microsoft.azure.cosmosdb.Attachment
      description: <p>the attachment to upsert. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Attachmente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String,InputStream,MediaOptions,RequestOptions)
  id: upsertAttachment(String,InputStream,MediaOptions,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  nameWithType: AsyncDocumentClient.upsertAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1166
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts an attachment to the media stream </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the upserted attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> upsertAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: mediaStream
      type: 76fcb9b7
      description: <p>the media stream for upserting the attachment. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.MediaOptions
      description: <p>the media options. </p>
    - id: requestOptions
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Attachmente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument(String,Object,RequestOptions,boolean)
  id: upsertDocument(String,Object,RequestOptions,boolean)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  nameWithType: AsyncDocumentClient.upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 529
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts a document. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the upserted document. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Document>> upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the link to the parent document collection. </p>
    - id: document
      type: "79317049"
      description: <p>the document represented as a POJO or Document object to upsert. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    - id: disableAutomaticIdGeneration
      type: 4fc6e284
      description: <p>the flag for disabling automatic id generation. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Documente7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission(String,Permission,RequestOptions)
  id: upsertPermission(String,Permission,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertPermission(String userLink, Permission permission, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertPermission(String userLink, Permission permission, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission(String userLink, Permission permission, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1369
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts a permission. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the upserted permission. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Permission>> upsertPermission(String userLink, Permission permission, RequestOptions options)
    parameters:
    - id: userLink
      type: "26831127"
      description: <p>the user link. </p>
    - id: permission
      type: com.microsoft.azure.cosmosdb.Permission
      description: <p>the permission to upsert. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Permissione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted permission or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure(String,StoredProcedure,RequestOptions)
  id: upsertStoredProcedure(String,StoredProcedure,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 679
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts a stored procedure. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the upserted stored procedure. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<StoredProcedure>> upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: storedProcedure
      type: com.microsoft.azure.cosmosdb.StoredProcedure
      description: <p>the stored procedure to upsert. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.StoredProceduree7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted stored procedure or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger(String,Trigger,RequestOptions)
  id: upsertTrigger(String,Trigger,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 817
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts a trigger. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the upserted trigger. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Trigger>> upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: trigger
      type: com.microsoft.azure.cosmosdb.Trigger
      description: <p>the trigger to upsert. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Triggere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted trigger or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser(String,User,RequestOptions)
  id: upsertUser(String,User,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertUser(String databaseLink, User user, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertUser(String databaseLink, User user, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser(String databaseLink, User user, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1261
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts a user. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the upserted user. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<User>> upsertUser(String databaseLink, User user, RequestOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: user
      type: com.microsoft.azure.cosmosdb.User
      description: <p>the user to upsert. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Usere7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted user or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
  id: upsertUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 926
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts a user defined function. </p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> upon successful completion will contain a single resource response with the upserted user defined function. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<UserDefinedFunction>> upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: udf
      type: com.microsoft.azure.cosmosdb.UserDefinedFunction
      description: <p>the user defined function to upsert. </p>
    - id: options
      type: com.microsoft.azure.cosmosdb.RequestOptions
      description: <p>the request options. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.UserDefinedFunctione7daa122
      description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted user defined function or an error. </p>
references:
- uid: d17dd54c
  spec.java:
  - name: MeterRegistry
    fullName: MeterRegistry
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.monitor*
  name: monitor
  nameWithType: AsyncDocumentClient.monitor
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.monitor
  package: com.microsoft.azure.cosmosdb.rx
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint*
  name: getServiceEndpoint
  nameWithType: AsyncDocumentClient.getServiceEndpoint
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint*
  name: getWriteEndpoint
  nameWithType: AsyncDocumentClient.getWriteEndpoint
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint*
  name: getReadEndpoint
  nameWithType: AsyncDocumentClient.getReadEndpoint
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy*
  name: getConnectionPolicy
  nameWithType: AsyncDocumentClient.getConnectionPolicy
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Databasee7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.ResourceResponse
    name: ResourceResponse
    fullName: com.microsoft.azure.cosmosdb.ResourceResponse
    href: com.microsoft.azure.cosmosdb.ResourceResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Database
    name: Database
    fullName: com.microsoft.azure.cosmosdb.Database
    href: com.microsoft.azure.cosmosdb.Database.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase*
  name: createDatabase
  nameWithType: AsyncDocumentClient.createDatabase
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase
  package: com.microsoft.azure.cosmosdb.rx
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase*
  name: deleteDatabase
  nameWithType: AsyncDocumentClient.deleteDatabase
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase*
  name: readDatabase
  nameWithType: AsyncDocumentClient.readDatabase
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Databasee7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.FeedResponse
    name: FeedResponse
    fullName: com.microsoft.azure.cosmosdb.FeedResponse
    href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Database
    name: Database
    fullName: com.microsoft.azure.cosmosdb.Database
    href: com.microsoft.azure.cosmosdb.Database.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases*
  name: readDatabases
  nameWithType: AsyncDocumentClient.readDatabases
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases*
  name: queryDatabases
  nameWithType: AsyncDocumentClient.queryDatabases
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.DocumentCollectione7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.ResourceResponse
    name: ResourceResponse
    fullName: com.microsoft.azure.cosmosdb.ResourceResponse
    href: com.microsoft.azure.cosmosdb.ResourceResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.DocumentCollection
    name: DocumentCollection
    fullName: com.microsoft.azure.cosmosdb.DocumentCollection
    href: com.microsoft.azure.cosmosdb.DocumentCollection.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection*
  name: createCollection
  nameWithType: AsyncDocumentClient.createCollection
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection*
  name: replaceCollection
  nameWithType: AsyncDocumentClient.replaceCollection
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection*
  name: deleteCollection
  nameWithType: AsyncDocumentClient.deleteCollection
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection*
  name: readCollection
  nameWithType: AsyncDocumentClient.readCollection
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.DocumentCollectione7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.FeedResponse
    name: FeedResponse
    fullName: com.microsoft.azure.cosmosdb.FeedResponse
    href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.DocumentCollection
    name: DocumentCollection
    fullName: com.microsoft.azure.cosmosdb.DocumentCollection
    href: com.microsoft.azure.cosmosdb.DocumentCollection.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections*
  name: readCollections
  nameWithType: AsyncDocumentClient.readCollections
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections*
  name: queryCollections
  nameWithType: AsyncDocumentClient.queryCollections
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections
  package: com.microsoft.azure.cosmosdb.rx
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Documente7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.ResourceResponse
    name: ResourceResponse
    fullName: com.microsoft.azure.cosmosdb.ResourceResponse
    href: com.microsoft.azure.cosmosdb.ResourceResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Document
    name: Document
    fullName: com.microsoft.azure.cosmosdb.Document
    href: com.microsoft.azure.cosmosdb.Document.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument*
  name: createDocument
  nameWithType: AsyncDocumentClient.createDocument
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument*
  name: upsertDocument
  nameWithType: AsyncDocumentClient.upsertDocument
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument*
  name: replaceDocument
  nameWithType: AsyncDocumentClient.replaceDocument
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument*
  name: deleteDocument
  nameWithType: AsyncDocumentClient.deleteDocument
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument*
  name: readDocument
  nameWithType: AsyncDocumentClient.readDocument
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Documente7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.FeedResponse
    name: FeedResponse
    fullName: com.microsoft.azure.cosmosdb.FeedResponse
    href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Document
    name: Document
    fullName: com.microsoft.azure.cosmosdb.Document
    href: com.microsoft.azure.cosmosdb.Document.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments*
  name: readDocuments
  nameWithType: AsyncDocumentClient.readDocuments
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments*
  name: queryDocuments
  nameWithType: AsyncDocumentClient.queryDocuments
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed*
  name: queryDocumentChangeFeed
  nameWithType: AsyncDocumentClient.queryDocumentChangeFeed
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.PartitionKeyRangee7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.FeedResponse
    name: FeedResponse
    fullName: com.microsoft.azure.cosmosdb.FeedResponse
    href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.PartitionKeyRange
    name: PartitionKeyRange
    fullName: com.microsoft.azure.cosmosdb.PartitionKeyRange
    href: com.microsoft.azure.cosmosdb.PartitionKeyRange.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges*
  name: readPartitionKeyRanges
  nameWithType: AsyncDocumentClient.readPartitionKeyRanges
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.StoredProceduree7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.ResourceResponse
    name: ResourceResponse
    fullName: com.microsoft.azure.cosmosdb.ResourceResponse
    href: com.microsoft.azure.cosmosdb.ResourceResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.StoredProcedure
    name: StoredProcedure
    fullName: com.microsoft.azure.cosmosdb.StoredProcedure
    href: com.microsoft.azure.cosmosdb.StoredProcedure.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure*
  name: createStoredProcedure
  nameWithType: AsyncDocumentClient.createStoredProcedure
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure*
  name: upsertStoredProcedure
  nameWithType: AsyncDocumentClient.upsertStoredProcedure
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure*
  name: replaceStoredProcedure
  nameWithType: AsyncDocumentClient.replaceStoredProcedure
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure*
  name: deleteStoredProcedure
  nameWithType: AsyncDocumentClient.deleteStoredProcedure
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure*
  name: readStoredProcedure
  nameWithType: AsyncDocumentClient.readStoredProcedure
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.StoredProceduree7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.FeedResponse
    name: FeedResponse
    fullName: com.microsoft.azure.cosmosdb.FeedResponse
    href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.StoredProcedure
    name: StoredProcedure
    fullName: com.microsoft.azure.cosmosdb.StoredProcedure
    href: com.microsoft.azure.cosmosdb.StoredProcedure.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures*
  name: readStoredProcedures
  nameWithType: AsyncDocumentClient.readStoredProcedures
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures*
  name: queryStoredProcedures
  nameWithType: AsyncDocumentClient.queryStoredProcedures
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures
  package: com.microsoft.azure.cosmosdb.rx
- uid: 055b929b
  spec.java:
  - name: Object []
    fullName: Object []
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.StoredProcedureResponsea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.StoredProcedureResponse
    name: StoredProcedureResponse
    fullName: com.microsoft.azure.cosmosdb.StoredProcedureResponse
    href: com.microsoft.azure.cosmosdb.StoredProcedureResponse.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure*
  name: executeStoredProcedure
  nameWithType: AsyncDocumentClient.executeStoredProcedure
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Triggere7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.ResourceResponse
    name: ResourceResponse
    fullName: com.microsoft.azure.cosmosdb.ResourceResponse
    href: com.microsoft.azure.cosmosdb.ResourceResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Trigger
    name: Trigger
    fullName: com.microsoft.azure.cosmosdb.Trigger
    href: com.microsoft.azure.cosmosdb.Trigger.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger*
  name: createTrigger
  nameWithType: AsyncDocumentClient.createTrigger
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger*
  name: upsertTrigger
  nameWithType: AsyncDocumentClient.upsertTrigger
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger*
  name: replaceTrigger
  nameWithType: AsyncDocumentClient.replaceTrigger
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger*
  name: deleteTrigger
  nameWithType: AsyncDocumentClient.deleteTrigger
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger*
  name: readTrigger
  nameWithType: AsyncDocumentClient.readTrigger
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Triggere7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.FeedResponse
    name: FeedResponse
    fullName: com.microsoft.azure.cosmosdb.FeedResponse
    href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Trigger
    name: Trigger
    fullName: com.microsoft.azure.cosmosdb.Trigger
    href: com.microsoft.azure.cosmosdb.Trigger.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers*
  name: readTriggers
  nameWithType: AsyncDocumentClient.readTriggers
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers*
  name: queryTriggers
  nameWithType: AsyncDocumentClient.queryTriggers
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.UserDefinedFunctione7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.ResourceResponse
    name: ResourceResponse
    fullName: com.microsoft.azure.cosmosdb.ResourceResponse
    href: com.microsoft.azure.cosmosdb.ResourceResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.UserDefinedFunction
    name: UserDefinedFunction
    fullName: com.microsoft.azure.cosmosdb.UserDefinedFunction
    href: com.microsoft.azure.cosmosdb.UserDefinedFunction.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction*
  name: createUserDefinedFunction
  nameWithType: AsyncDocumentClient.createUserDefinedFunction
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction*
  name: upsertUserDefinedFunction
  nameWithType: AsyncDocumentClient.upsertUserDefinedFunction
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction*
  name: replaceUserDefinedFunction
  nameWithType: AsyncDocumentClient.replaceUserDefinedFunction
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction*
  name: deleteUserDefinedFunction
  nameWithType: AsyncDocumentClient.deleteUserDefinedFunction
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction*
  name: readUserDefinedFunction
  nameWithType: AsyncDocumentClient.readUserDefinedFunction
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.UserDefinedFunctione7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.FeedResponse
    name: FeedResponse
    fullName: com.microsoft.azure.cosmosdb.FeedResponse
    href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.UserDefinedFunction
    name: UserDefinedFunction
    fullName: com.microsoft.azure.cosmosdb.UserDefinedFunction
    href: com.microsoft.azure.cosmosdb.UserDefinedFunction.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions*
  name: readUserDefinedFunctions
  nameWithType: AsyncDocumentClient.readUserDefinedFunctions
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions*
  name: queryUserDefinedFunctions
  nameWithType: AsyncDocumentClient.queryUserDefinedFunctions
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Attachmente7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.ResourceResponse
    name: ResourceResponse
    fullName: com.microsoft.azure.cosmosdb.ResourceResponse
    href: com.microsoft.azure.cosmosdb.ResourceResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Attachment
    name: Attachment
    fullName: com.microsoft.azure.cosmosdb.Attachment
    href: com.microsoft.azure.cosmosdb.Attachment.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment*
  name: createAttachment
  nameWithType: AsyncDocumentClient.createAttachment
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment*
  name: upsertAttachment
  nameWithType: AsyncDocumentClient.upsertAttachment
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment*
  name: replaceAttachment
  nameWithType: AsyncDocumentClient.replaceAttachment
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment*
  name: deleteAttachment
  nameWithType: AsyncDocumentClient.deleteAttachment
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment*
  name: readAttachment
  nameWithType: AsyncDocumentClient.readAttachment
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Attachmente7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.FeedResponse
    name: FeedResponse
    fullName: com.microsoft.azure.cosmosdb.FeedResponse
    href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Attachment
    name: Attachment
    fullName: com.microsoft.azure.cosmosdb.Attachment
    href: com.microsoft.azure.cosmosdb.Attachment.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments*
  name: readAttachments
  nameWithType: AsyncDocumentClient.readAttachments
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.MediaResponsea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.MediaResponse
    name: MediaResponse
    fullName: com.microsoft.azure.cosmosdb.MediaResponse
    href: com.microsoft.azure.cosmosdb.MediaResponse.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia*
  name: readMedia
  nameWithType: AsyncDocumentClient.readMedia
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia
  package: com.microsoft.azure.cosmosdb.rx
- uid: 76fcb9b7
  spec.java:
  - name: InputStream
    fullName: InputStream
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia*
  name: updateMedia
  nameWithType: AsyncDocumentClient.updateMedia
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments*
  name: queryAttachments
  nameWithType: AsyncDocumentClient.queryAttachments
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Conflicte7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.ResourceResponse
    name: ResourceResponse
    fullName: com.microsoft.azure.cosmosdb.ResourceResponse
    href: com.microsoft.azure.cosmosdb.ResourceResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Conflict
    name: Conflict
    fullName: com.microsoft.azure.cosmosdb.Conflict
    href: com.microsoft.azure.cosmosdb.Conflict.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict*
  name: readConflict
  nameWithType: AsyncDocumentClient.readConflict
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Conflicte7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.FeedResponse
    name: FeedResponse
    fullName: com.microsoft.azure.cosmosdb.FeedResponse
    href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Conflict
    name: Conflict
    fullName: com.microsoft.azure.cosmosdb.Conflict
    href: com.microsoft.azure.cosmosdb.Conflict.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts*
  name: readConflicts
  nameWithType: AsyncDocumentClient.readConflicts
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts*
  name: queryConflicts
  nameWithType: AsyncDocumentClient.queryConflicts
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict*
  name: deleteConflict
  nameWithType: AsyncDocumentClient.deleteConflict
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Usere7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.ResourceResponse
    name: ResourceResponse
    fullName: com.microsoft.azure.cosmosdb.ResourceResponse
    href: com.microsoft.azure.cosmosdb.ResourceResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.User
    name: User
    fullName: com.microsoft.azure.cosmosdb.User
    href: com.microsoft.azure.cosmosdb.User.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser*
  name: createUser
  nameWithType: AsyncDocumentClient.createUser
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser*
  name: upsertUser
  nameWithType: AsyncDocumentClient.upsertUser
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser*
  name: replaceUser
  nameWithType: AsyncDocumentClient.replaceUser
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser*
  name: deleteUser
  nameWithType: AsyncDocumentClient.deleteUser
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser*
  name: readUser
  nameWithType: AsyncDocumentClient.readUser
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Usere7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.FeedResponse
    name: FeedResponse
    fullName: com.microsoft.azure.cosmosdb.FeedResponse
    href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.User
    name: User
    fullName: com.microsoft.azure.cosmosdb.User
    href: com.microsoft.azure.cosmosdb.User.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers*
  name: readUsers
  nameWithType: AsyncDocumentClient.readUsers
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers*
  name: queryUsers
  nameWithType: AsyncDocumentClient.queryUsers
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Permissione7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.ResourceResponse
    name: ResourceResponse
    fullName: com.microsoft.azure.cosmosdb.ResourceResponse
    href: com.microsoft.azure.cosmosdb.ResourceResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Permission
    name: Permission
    fullName: com.microsoft.azure.cosmosdb.Permission
    href: com.microsoft.azure.cosmosdb.Permission.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission*
  name: createPermission
  nameWithType: AsyncDocumentClient.createPermission
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission*
  name: upsertPermission
  nameWithType: AsyncDocumentClient.upsertPermission
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission*
  name: replacePermission
  nameWithType: AsyncDocumentClient.replacePermission
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission*
  name: deletePermission
  nameWithType: AsyncDocumentClient.deletePermission
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission*
  name: readPermission
  nameWithType: AsyncDocumentClient.readPermission
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Permissione7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.FeedResponse
    name: FeedResponse
    fullName: com.microsoft.azure.cosmosdb.FeedResponse
    href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Permission
    name: Permission
    fullName: com.microsoft.azure.cosmosdb.Permission
    href: com.microsoft.azure.cosmosdb.Permission.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions*
  name: readPermissions
  nameWithType: AsyncDocumentClient.readPermissions
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions*
  name: queryPermissions
  nameWithType: AsyncDocumentClient.queryPermissions
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.ResourceResponse78504a52com.microsoft.azure.cosmosdb.Offere7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.ResourceResponse
    name: ResourceResponse
    fullName: com.microsoft.azure.cosmosdb.ResourceResponse
    href: com.microsoft.azure.cosmosdb.ResourceResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Offer
    name: Offer
    fullName: com.microsoft.azure.cosmosdb.Offer
    href: com.microsoft.azure.cosmosdb.Offer.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer*
  name: replaceOffer
  nameWithType: AsyncDocumentClient.replaceOffer
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer*
  name: readOffer
  nameWithType: AsyncDocumentClient.readOffer
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.FeedResponse78504a52com.microsoft.azure.cosmosdb.Offere7daa122
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.FeedResponse
    name: FeedResponse
    fullName: com.microsoft.azure.cosmosdb.FeedResponse
    href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cosmosdb.Offer
    name: Offer
    fullName: com.microsoft.azure.cosmosdb.Offer
    href: com.microsoft.azure.cosmosdb.Offer.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers*
  name: readOffers
  nameWithType: AsyncDocumentClient.readOffers
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers*
  name: queryOffers
  nameWithType: AsyncDocumentClient.queryOffers
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers
  package: com.microsoft.azure.cosmosdb.rx
- uid: c2d0e8c6com.microsoft.azure.cosmosdb.DatabaseAccounta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cosmosdb.DatabaseAccount
    name: DatabaseAccount
    fullName: com.microsoft.azure.cosmosdb.DatabaseAccount
    href: com.microsoft.azure.cosmosdb.DatabaseAccount.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount*
  name: getDatabaseAccount
  nameWithType: AsyncDocumentClient.getDatabaseAccount
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close*
  name: close
  nameWithType: AsyncDocumentClient.close
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.ConnectionPolicy
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.ConnectionPolicy.yml
  name: ConnectionPolicy
  nameWithType: ConnectionPolicy
  fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy
  type: Class
  summary: "<p>Represents the Connection policy associated with a DocumentClient in the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class ConnectionPolicy
- uid: com.microsoft.azure.cosmosdb.ResourceResponse
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.ResourceResponse.yml
  name: ResourceResponse<T>
  nameWithType: ResourceResponse<T>
  fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T>
  type: Class
  summary: "<p>Represents the service response to a request made from DocumentClient in the Azure Cosmos DB database service. Contains both the resource and the response headers.</p>\r\n<p></p>"
  syntax:
    content: public class ResourceResponse<T extends Resource>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>the resource type of the resource response. </p>
- uid: com.microsoft.azure.cosmosdb.Database
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.Database.yml
  name: Database
  nameWithType: Database
  fullName: com.microsoft.azure.cosmosdb.Database
  type: Class
  summary: "<p>Represents a Database in the Azure Cosmos DB database service. A database manages users, permissions and a set of collections </p>\r\n<p>Each Azure Cosmos DB Service is able to support multiple independent named databases, with the database being the logical container for data. Each Database consists of one or more collections, each of which in turn contain one or more documents. Since databases are an an administrative resource and the Service Master Key will be required in order to access and successfully complete any action using the User APIs. </p>"
  syntax:
    content: public class Database
- uid: com.microsoft.azure.cosmosdb.RequestOptions
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.RequestOptions.yml
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.microsoft.azure.cosmosdb.RequestOptions
  type: Class
  summary: "<p>Encapsulates options that can be specified for a request issued to the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class RequestOptions
- uid: com.microsoft.azure.cosmosdb.FeedResponse
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.FeedResponse.yml
  name: FeedResponse<T>
  nameWithType: FeedResponse<T>
  fullName: com.microsoft.azure.cosmosdb.FeedResponse<T>
  type: Class
  syntax:
    content: public class FeedResponse<T extends Resource>
    typeParameters:
    - id: T
      type: 8ce1ecb9
- uid: com.microsoft.azure.cosmosdb.FeedOptions
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.FeedOptions.yml
  name: FeedOptions
  nameWithType: FeedOptions
  fullName: com.microsoft.azure.cosmosdb.FeedOptions
  type: Class
  summary: "<p>Specifies the options associated with feed methods (enumeration operations) in the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class FeedOptions
- uid: com.microsoft.azure.cosmosdb.SqlQuerySpec
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.SqlQuerySpec.yml
  name: SqlQuerySpec
  nameWithType: SqlQuerySpec
  fullName: com.microsoft.azure.cosmosdb.SqlQuerySpec
  type: Class
  summary: "<p>Represents a SQL query in the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class SqlQuerySpec
- uid: com.microsoft.azure.cosmosdb.DocumentCollection
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.DocumentCollection.yml
  name: DocumentCollection
  nameWithType: DocumentCollection
  fullName: com.microsoft.azure.cosmosdb.DocumentCollection
  type: Class
  summary: "<p>Represents a document collection in the Azure Cosmos DB database service. A collection is a named logical container for documents. </p>\r\n<p>A database may contain zero or more named collections and each collection consists of zero or more JSON documents. Being schema-free, the documents in a collection do not need to share the same structure or fields. Since collections are application resources, they can be authorized using either the master key or resource keys. </p>"
  syntax:
    content: public class DocumentCollection
- uid: com.microsoft.azure.cosmosdb.Document
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.Document.yml
  name: Document
  nameWithType: Document
  fullName: com.microsoft.azure.cosmosdb.Document
  type: Class
  summary: "<p>Represents a document in the Azure Cosmos DB database service. </p>\r\n<p>A document is a structured JSON document. There is no set schema for the JSON documents, and a document may contain any number of custom properties as well as an optional list of attachments. Document is an application resource and can be authorized using the master key or resource keys. </p>"
  syntax:
    content: public class Document
- uid: com.microsoft.azure.cosmosdb.ChangeFeedOptions
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.ChangeFeedOptions.yml
  name: ChangeFeedOptions
  nameWithType: ChangeFeedOptions
  fullName: com.microsoft.azure.cosmosdb.ChangeFeedOptions
  type: Class
  summary: "<p>Specifies the options associated with change feed methods (enumeration operations) in the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class ChangeFeedOptions
- uid: com.microsoft.azure.cosmosdb.PartitionKeyRange
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.PartitionKeyRange.yml
  name: PartitionKeyRange
  nameWithType: PartitionKeyRange
  fullName: com.microsoft.azure.cosmosdb.PartitionKeyRange
  type: Class
  summary: "<p>Represent a partition key range in the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class PartitionKeyRange
- uid: com.microsoft.azure.cosmosdb.StoredProcedure
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.StoredProcedure.yml
  name: StoredProcedure
  nameWithType: StoredProcedure
  fullName: com.microsoft.azure.cosmosdb.StoredProcedure
  type: Class
  summary: "<p>Represents a stored procedure in the Azure Cosmos DB database service. </p>\r\n<p>Cosmos DB allows stored procedures to be executed in the storage tier, directly against a document collection. The script gets executed under ACID transactions on the primary storage partition of the specified collection. For additional details, refer to the server-side JavaScript API documentation. </p>"
  syntax:
    content: public class StoredProcedure
- uid: com.microsoft.azure.cosmosdb.StoredProcedureResponse
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.StoredProcedureResponse.yml
  name: StoredProcedureResponse
  nameWithType: StoredProcedureResponse
  fullName: com.microsoft.azure.cosmosdb.StoredProcedureResponse
  type: Class
  summary: "<p>Represents the response returned from a stored procedure in the Azure Cosmos DB database service. Wraps the response body and headers. </p>"
  syntax:
    content: public class StoredProcedureResponse
- uid: com.microsoft.azure.cosmosdb.Trigger
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.Trigger.yml
  name: Trigger
  nameWithType: Trigger
  fullName: com.microsoft.azure.cosmosdb.Trigger
  type: Class
  summary: "<p>Represents a trigger in the Azure Cosmos DB database service. </p>\r\n<p>Cosmos DB supports pre and post triggers defined in JavaScript to be executed on creates, updates and deletes. For additional details, refer to the server-side JavaScript API documentation. </p>"
  syntax:
    content: public class Trigger
- uid: com.microsoft.azure.cosmosdb.UserDefinedFunction
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.UserDefinedFunction.yml
  name: UserDefinedFunction
  nameWithType: UserDefinedFunction
  fullName: com.microsoft.azure.cosmosdb.UserDefinedFunction
  type: Class
  summary: "<p>Represents a user defined function in the Azure Cosmos DB database service. </p>\r\n<p>Cosmos DB supports JavaScript UDFs which can be used inside queries, stored procedures and triggers. For additional details, refer to the server-side JavaScript API documentation. </p>"
  syntax:
    content: public class UserDefinedFunction
- uid: com.microsoft.azure.cosmosdb.Attachment
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.Attachment.yml
  name: Attachment
  nameWithType: Attachment
  fullName: com.microsoft.azure.cosmosdb.Attachment
  type: Class
  summary: "<p>Represents a document attachment in the Azure Cosmos DB database service. </p>\r\n<p>Each document may contain zero or more attachments. Attachments can be of any MIME type - text, image, binary data. These are stored externally in Azure Blob storage. Attachments are automatically deleted when the parent document is deleted. </p>"
  syntax:
    content: public class Attachment
- uid: com.microsoft.azure.cosmosdb.MediaResponse
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.MediaResponse.yml
  name: MediaResponse
  nameWithType: MediaResponse
  fullName: com.microsoft.azure.cosmosdb.MediaResponse
  type: Class
  summary: "<p>Response associated with retrieving attachment content in the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class MediaResponse
- uid: com.microsoft.azure.cosmosdb.MediaOptions
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.MediaOptions.yml
  name: MediaOptions
  nameWithType: MediaOptions
  fullName: com.microsoft.azure.cosmosdb.MediaOptions
  type: Class
  summary: "<p>Options used with attachment content (aka media) creation in the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class MediaOptions
- uid: com.microsoft.azure.cosmosdb.Conflict
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.Conflict.yml
  name: Conflict
  nameWithType: Conflict
  fullName: com.microsoft.azure.cosmosdb.Conflict
  type: Class
  summary: "<p>Represents a conflict in the version of a particular resource in the Azure Cosmos DB database service. </p>\r\n<p>During rare failure scenarios, conflicts are generated for the documents in transit. Clients can inspect the respective conflict instances for resources and operations in conflict. </p>"
  syntax:
    content: public class Conflict
- uid: com.microsoft.azure.cosmosdb.User
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.User.yml
  name: User
  nameWithType: User
  fullName: com.microsoft.azure.cosmosdb.User
  type: Class
  summary: "<p>Represents a database user in the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class User
- uid: com.microsoft.azure.cosmosdb.Permission
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.Permission.yml
  name: Permission
  nameWithType: Permission
  fullName: com.microsoft.azure.cosmosdb.Permission
  type: Class
  summary: "<p>Represents a per-User Permission to access a specific resource e.g. Document or Collection in the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class Permission
- uid: com.microsoft.azure.cosmosdb.Offer
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.Offer.yml
  name: Offer
  nameWithType: Offer
  fullName: com.microsoft.azure.cosmosdb.Offer
  type: Class
  summary: "<p>Represents an offer in the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class Offer
- uid: com.microsoft.azure.cosmosdb.DatabaseAccount
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.DatabaseAccount.yml
  name: DatabaseAccount
  nameWithType: DatabaseAccount
  fullName: com.microsoft.azure.cosmosdb.DatabaseAccount
  type: Class
  summary: "<p>Represents a database account in the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class DatabaseAccount
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  parent: com.microsoft.azure.cosmosdb.rx
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  name: AsyncDocumentClient
  nameWithType: AsyncDocumentClient
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  type: Interface
  summary: "<p>Provides a client-side logical representation of the Azure Cosmos DB database service. This async client is used to configure and execute requests against the service.</p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsyncDocumentClient\"></xref> async APIs return <a href=\"https://github.com/ReactiveX/RxJava\">rxJava</a>'s<code>Observable \r\n    </code> , and so you can use rxJava <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> functionality. <b>The async <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Observable\"></xref> based APIs perform the requested operation only after subscription.</b></p>\r\n<p>The service client encapsulates the endpoint and credentials used to access the Cosmos DB service. </p>\r\n<p>To instantiate you can use the <xref uid=\"com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.Builder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Builder\"></xref><pre><code>ConnectionPolicy connectionPolicy = new ConnectionPolicy();\r\n    connectionPolicy.setConnectionMode(ConnectionMode.Direct);\r\n    AsyncDocumentClient client = new AsyncDocumentClient.Builder()\r\n            .withServiceEndpoint(serviceEndpoint)\r\n            .withMasterKeyOrResourceToken(masterKey)\r\n            .withConnectionPolicy(connectionPolicy)\r\n            .withConsistencyLevel(ConsistencyLevel.Session)\r\n            .build();\r\n    </code></pre></p>"
  syntax: *o1
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.Builder
  parent: com.microsoft.azure.cosmosdb.rx
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.Builder.yml
  name: AsyncDocumentClient.Builder
  nameWithType: AsyncDocumentClient.Builder
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.Builder
  type: Class
  summary: "<p>Helper class to build <xref uid=\"com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsyncDocumentClient\"></xref> instances as logical representation of the Azure Cosmos DB database service.</p>\r\n<p>\r\n  <pre>\r\n    <code>ConnectionPolicy connectionPolicy = new ConnectionPolicy();\r\n    connectionPolicy.setConnectionMode(ConnectionMode.Direct);\r\n    AsyncDocumentClient client = new AsyncDocumentClient.Builder()\r\n            .withServiceEndpoint(serviceEndpoint)\r\n            .withMasterKeyOrResourceToken(masterKey)\r\n            .withConnectionPolicy(connectionPolicy)\r\n            .withConsistencyLevel(ConsistencyLevel.Session)\r\n            .build();\r\n    </code>\r\n  </pre>\r\n</p>"
  syntax:
    content: public class Builder
