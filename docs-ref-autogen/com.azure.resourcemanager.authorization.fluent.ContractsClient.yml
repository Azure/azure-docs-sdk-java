### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient"
fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient"
name: "ContractsClient"
nameWithType: "ContractsClient"
summary: "An instance of this class provides access to all the operations defined in ContractsClient."
syntax: "public interface ContractsClient"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberGroups(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberGroups(String contractId, ContractsCheckMemberGroupsRequestBody body)"
  name: "checkMemberGroups(String contractId, ContractsCheckMemberGroupsRequestBody body)"
  nameWithType: "ContractsClient.checkMemberGroups(String contractId, ContractsCheckMemberGroupsRequestBody body)"
  summary: "Invoke action checkMemberGroups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberGroupsRequestBody&text=ContractsCheckMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<String> checkMemberGroups(String contractId, ContractsCheckMemberGroupsRequestBody body)"
  returns:
    description: "array of String."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberGroupsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberGroupsAsync(String contractId, ContractsCheckMemberGroupsRequestBody body)"
  name: "checkMemberGroupsAsync(String contractId, ContractsCheckMemberGroupsRequestBody body)"
  nameWithType: "ContractsClient.checkMemberGroupsAsync(String contractId, ContractsCheckMemberGroupsRequestBody body)"
  summary: "Invoke action checkMemberGroups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberGroupsRequestBody&text=ContractsCheckMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<String>> checkMemberGroupsAsync(String contractId, ContractsCheckMemberGroupsRequestBody body)"
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberGroupsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberGroupsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberGroupsWithResponse(String contractId, ContractsCheckMemberGroupsRequestBody body, Context context)"
  name: "checkMemberGroupsWithResponse(String contractId, ContractsCheckMemberGroupsRequestBody body, Context context)"
  nameWithType: "ContractsClient.checkMemberGroupsWithResponse(String contractId, ContractsCheckMemberGroupsRequestBody body, Context context)"
  summary: "Invoke action checkMemberGroups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberGroupsRequestBody&text=ContractsCheckMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<String>> checkMemberGroupsWithResponse(String contractId, ContractsCheckMemberGroupsRequestBody body, Context context)"
  returns:
    description: "array of String."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberGroupsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberGroupsWithResponseAsync(String contractId, ContractsCheckMemberGroupsRequestBody body)"
  name: "checkMemberGroupsWithResponseAsync(String contractId, ContractsCheckMemberGroupsRequestBody body)"
  nameWithType: "ContractsClient.checkMemberGroupsWithResponseAsync(String contractId, ContractsCheckMemberGroupsRequestBody body)"
  summary: "Invoke action checkMemberGroups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberGroupsRequestBody&text=ContractsCheckMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<String>>> checkMemberGroupsWithResponseAsync(String contractId, ContractsCheckMemberGroupsRequestBody body)"
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberObjects(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberObjects(String contractId, ContractsCheckMemberObjectsRequestBody body)"
  name: "checkMemberObjects(String contractId, ContractsCheckMemberObjectsRequestBody body)"
  nameWithType: "ContractsClient.checkMemberObjects(String contractId, ContractsCheckMemberObjectsRequestBody body)"
  summary: "Invoke action checkMemberObjects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberObjectsRequestBody&text=ContractsCheckMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<String> checkMemberObjects(String contractId, ContractsCheckMemberObjectsRequestBody body)"
  returns:
    description: "array of String."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberObjectsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberObjectsAsync(String contractId, ContractsCheckMemberObjectsRequestBody body)"
  name: "checkMemberObjectsAsync(String contractId, ContractsCheckMemberObjectsRequestBody body)"
  nameWithType: "ContractsClient.checkMemberObjectsAsync(String contractId, ContractsCheckMemberObjectsRequestBody body)"
  summary: "Invoke action checkMemberObjects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberObjectsRequestBody&text=ContractsCheckMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<String>> checkMemberObjectsAsync(String contractId, ContractsCheckMemberObjectsRequestBody body)"
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberObjectsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberObjectsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberObjectsWithResponse(String contractId, ContractsCheckMemberObjectsRequestBody body, Context context)"
  name: "checkMemberObjectsWithResponse(String contractId, ContractsCheckMemberObjectsRequestBody body, Context context)"
  nameWithType: "ContractsClient.checkMemberObjectsWithResponse(String contractId, ContractsCheckMemberObjectsRequestBody body, Context context)"
  summary: "Invoke action checkMemberObjects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberObjectsRequestBody&text=ContractsCheckMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<String>> checkMemberObjectsWithResponse(String contractId, ContractsCheckMemberObjectsRequestBody body, Context context)"
  returns:
    description: "array of String."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberObjectsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.checkMemberObjectsWithResponseAsync(String contractId, ContractsCheckMemberObjectsRequestBody body)"
  name: "checkMemberObjectsWithResponseAsync(String contractId, ContractsCheckMemberObjectsRequestBody body)"
  nameWithType: "ContractsClient.checkMemberObjectsWithResponseAsync(String contractId, ContractsCheckMemberObjectsRequestBody body)"
  summary: "Invoke action checkMemberObjects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsCheckMemberObjectsRequestBody&text=ContractsCheckMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<String>>> checkMemberObjectsWithResponseAsync(String contractId, ContractsCheckMemberObjectsRequestBody body)"
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getAvailableExtensionProperties(com.azure.resourcemanager.authorization.fluent.models.ContractsGetAvailableExtensionPropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getAvailableExtensionProperties(ContractsGetAvailableExtensionPropertiesRequestBody body)"
  name: "getAvailableExtensionProperties(ContractsGetAvailableExtensionPropertiesRequestBody body)"
  nameWithType: "ContractsClient.getAvailableExtensionProperties(ContractsGetAvailableExtensionPropertiesRequestBody body)"
  summary: "Invoke action getAvailableExtensionProperties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetAvailableExtensionPropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetAvailableExtensionPropertiesRequestBody&text=ContractsGetAvailableExtensionPropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<MicrosoftGraphExtensionPropertyInner> getAvailableExtensionProperties(ContractsGetAvailableExtensionPropertiesRequestBody body)"
  returns:
    description: "array of microsoft."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner&text=MicrosoftGraphExtensionPropertyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getAvailableExtensionPropertiesAsync(com.azure.resourcemanager.authorization.fluent.models.ContractsGetAvailableExtensionPropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getAvailableExtensionPropertiesAsync(ContractsGetAvailableExtensionPropertiesRequestBody body)"
  name: "getAvailableExtensionPropertiesAsync(ContractsGetAvailableExtensionPropertiesRequestBody body)"
  nameWithType: "ContractsClient.getAvailableExtensionPropertiesAsync(ContractsGetAvailableExtensionPropertiesRequestBody body)"
  summary: "Invoke action getAvailableExtensionProperties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetAvailableExtensionPropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetAvailableExtensionPropertiesRequestBody&text=ContractsGetAvailableExtensionPropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<MicrosoftGraphExtensionPropertyInner>> getAvailableExtensionPropertiesAsync(ContractsGetAvailableExtensionPropertiesRequestBody body)"
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner&text=MicrosoftGraphExtensionPropertyInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getAvailableExtensionPropertiesWithResponse(com.azure.resourcemanager.authorization.fluent.models.ContractsGetAvailableExtensionPropertiesRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getAvailableExtensionPropertiesWithResponse(ContractsGetAvailableExtensionPropertiesRequestBody body, Context context)"
  name: "getAvailableExtensionPropertiesWithResponse(ContractsGetAvailableExtensionPropertiesRequestBody body, Context context)"
  nameWithType: "ContractsClient.getAvailableExtensionPropertiesWithResponse(ContractsGetAvailableExtensionPropertiesRequestBody body, Context context)"
  summary: "Invoke action getAvailableExtensionProperties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetAvailableExtensionPropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetAvailableExtensionPropertiesRequestBody&text=ContractsGetAvailableExtensionPropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<MicrosoftGraphExtensionPropertyInner>> getAvailableExtensionPropertiesWithResponse(ContractsGetAvailableExtensionPropertiesRequestBody body, Context context)"
  returns:
    description: "array of microsoft."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner&text=MicrosoftGraphExtensionPropertyInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getAvailableExtensionPropertiesWithResponseAsync(com.azure.resourcemanager.authorization.fluent.models.ContractsGetAvailableExtensionPropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getAvailableExtensionPropertiesWithResponseAsync(ContractsGetAvailableExtensionPropertiesRequestBody body)"
  name: "getAvailableExtensionPropertiesWithResponseAsync(ContractsGetAvailableExtensionPropertiesRequestBody body)"
  nameWithType: "ContractsClient.getAvailableExtensionPropertiesWithResponseAsync(ContractsGetAvailableExtensionPropertiesRequestBody body)"
  summary: "Invoke action getAvailableExtensionProperties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetAvailableExtensionPropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetAvailableExtensionPropertiesRequestBody&text=ContractsGetAvailableExtensionPropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<MicrosoftGraphExtensionPropertyInner>>> getAvailableExtensionPropertiesWithResponseAsync(ContractsGetAvailableExtensionPropertiesRequestBody body)"
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner&text=MicrosoftGraphExtensionPropertyInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getByIds(com.azure.resourcemanager.authorization.fluent.models.ContractsGetByIdsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getByIds(ContractsGetByIdsRequestBody body)"
  name: "getByIds(ContractsGetByIdsRequestBody body)"
  nameWithType: "ContractsClient.getByIds(ContractsGetByIdsRequestBody body)"
  summary: "Invoke action getByIds."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetByIdsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetByIdsRequestBody&text=ContractsGetByIdsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<MicrosoftGraphDirectoryObjectInner> getByIds(ContractsGetByIdsRequestBody body)"
  returns:
    description: "array of microsoft."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getByIdsAsync(com.azure.resourcemanager.authorization.fluent.models.ContractsGetByIdsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getByIdsAsync(ContractsGetByIdsRequestBody body)"
  name: "getByIdsAsync(ContractsGetByIdsRequestBody body)"
  nameWithType: "ContractsClient.getByIdsAsync(ContractsGetByIdsRequestBody body)"
  summary: "Invoke action getByIds."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetByIdsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetByIdsRequestBody&text=ContractsGetByIdsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<MicrosoftGraphDirectoryObjectInner>> getByIdsAsync(ContractsGetByIdsRequestBody body)"
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getByIdsWithResponse(com.azure.resourcemanager.authorization.fluent.models.ContractsGetByIdsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getByIdsWithResponse(ContractsGetByIdsRequestBody body, Context context)"
  name: "getByIdsWithResponse(ContractsGetByIdsRequestBody body, Context context)"
  nameWithType: "ContractsClient.getByIdsWithResponse(ContractsGetByIdsRequestBody body, Context context)"
  summary: "Invoke action getByIds."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetByIdsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetByIdsRequestBody&text=ContractsGetByIdsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<MicrosoftGraphDirectoryObjectInner>> getByIdsWithResponse(ContractsGetByIdsRequestBody body, Context context)"
  returns:
    description: "array of microsoft."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getByIdsWithResponseAsync(com.azure.resourcemanager.authorization.fluent.models.ContractsGetByIdsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getByIdsWithResponseAsync(ContractsGetByIdsRequestBody body)"
  name: "getByIdsWithResponseAsync(ContractsGetByIdsRequestBody body)"
  nameWithType: "ContractsClient.getByIdsWithResponseAsync(ContractsGetByIdsRequestBody body)"
  summary: "Invoke action getByIds."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetByIdsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetByIdsRequestBody&text=ContractsGetByIdsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<MicrosoftGraphDirectoryObjectInner>>> getByIdsWithResponseAsync(ContractsGetByIdsRequestBody body)"
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberGroups(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberGroups(String contractId, ContractsGetMemberGroupsRequestBody body)"
  name: "getMemberGroups(String contractId, ContractsGetMemberGroupsRequestBody body)"
  nameWithType: "ContractsClient.getMemberGroups(String contractId, ContractsGetMemberGroupsRequestBody body)"
  summary: "Invoke action getMemberGroups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberGroupsRequestBody&text=ContractsGetMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<String> getMemberGroups(String contractId, ContractsGetMemberGroupsRequestBody body)"
  returns:
    description: "array of String."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberGroupsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberGroupsAsync(String contractId, ContractsGetMemberGroupsRequestBody body)"
  name: "getMemberGroupsAsync(String contractId, ContractsGetMemberGroupsRequestBody body)"
  nameWithType: "ContractsClient.getMemberGroupsAsync(String contractId, ContractsGetMemberGroupsRequestBody body)"
  summary: "Invoke action getMemberGroups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberGroupsRequestBody&text=ContractsGetMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<String>> getMemberGroupsAsync(String contractId, ContractsGetMemberGroupsRequestBody body)"
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberGroupsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberGroupsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberGroupsWithResponse(String contractId, ContractsGetMemberGroupsRequestBody body, Context context)"
  name: "getMemberGroupsWithResponse(String contractId, ContractsGetMemberGroupsRequestBody body, Context context)"
  nameWithType: "ContractsClient.getMemberGroupsWithResponse(String contractId, ContractsGetMemberGroupsRequestBody body, Context context)"
  summary: "Invoke action getMemberGroups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberGroupsRequestBody&text=ContractsGetMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<String>> getMemberGroupsWithResponse(String contractId, ContractsGetMemberGroupsRequestBody body, Context context)"
  returns:
    description: "array of String."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberGroupsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberGroupsWithResponseAsync(String contractId, ContractsGetMemberGroupsRequestBody body)"
  name: "getMemberGroupsWithResponseAsync(String contractId, ContractsGetMemberGroupsRequestBody body)"
  nameWithType: "ContractsClient.getMemberGroupsWithResponseAsync(String contractId, ContractsGetMemberGroupsRequestBody body)"
  summary: "Invoke action getMemberGroups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberGroupsRequestBody&text=ContractsGetMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<String>>> getMemberGroupsWithResponseAsync(String contractId, ContractsGetMemberGroupsRequestBody body)"
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberObjects(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberObjects(String contractId, ContractsGetMemberObjectsRequestBody body)"
  name: "getMemberObjects(String contractId, ContractsGetMemberObjectsRequestBody body)"
  nameWithType: "ContractsClient.getMemberObjects(String contractId, ContractsGetMemberObjectsRequestBody body)"
  summary: "Invoke action getMemberObjects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberObjectsRequestBody&text=ContractsGetMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<String> getMemberObjects(String contractId, ContractsGetMemberObjectsRequestBody body)"
  returns:
    description: "array of String."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberObjectsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberObjectsAsync(String contractId, ContractsGetMemberObjectsRequestBody body)"
  name: "getMemberObjectsAsync(String contractId, ContractsGetMemberObjectsRequestBody body)"
  nameWithType: "ContractsClient.getMemberObjectsAsync(String contractId, ContractsGetMemberObjectsRequestBody body)"
  summary: "Invoke action getMemberObjects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberObjectsRequestBody&text=ContractsGetMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<String>> getMemberObjectsAsync(String contractId, ContractsGetMemberObjectsRequestBody body)"
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberObjectsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberObjectsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberObjectsWithResponse(String contractId, ContractsGetMemberObjectsRequestBody body, Context context)"
  name: "getMemberObjectsWithResponse(String contractId, ContractsGetMemberObjectsRequestBody body, Context context)"
  nameWithType: "ContractsClient.getMemberObjectsWithResponse(String contractId, ContractsGetMemberObjectsRequestBody body, Context context)"
  summary: "Invoke action getMemberObjects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberObjectsRequestBody&text=ContractsGetMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<String>> getMemberObjectsWithResponse(String contractId, ContractsGetMemberObjectsRequestBody body, Context context)"
  returns:
    description: "array of String."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberObjectsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.getMemberObjectsWithResponseAsync(String contractId, ContractsGetMemberObjectsRequestBody body)"
  name: "getMemberObjectsWithResponseAsync(String contractId, ContractsGetMemberObjectsRequestBody body)"
  nameWithType: "ContractsClient.getMemberObjectsWithResponseAsync(String contractId, ContractsGetMemberObjectsRequestBody body)"
  summary: "Invoke action getMemberObjects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsGetMemberObjectsRequestBody&text=ContractsGetMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<String>>> getMemberObjectsWithResponseAsync(String contractId, ContractsGetMemberObjectsRequestBody body)"
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.restore(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.restore(String contractId)"
  name: "restore(String contractId)"
  nameWithType: "ContractsClient.restore(String contractId)"
  summary: "Invoke action restore."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphDirectoryObjectInner restore(String contractId)"
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.restoreAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.restoreAsync(String contractId)"
  name: "restoreAsync(String contractId)"
  nameWithType: "ContractsClient.restoreAsync(String contractId)"
  summary: "Invoke action restore."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphDirectoryObjectInner> restoreAsync(String contractId)"
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.restoreWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.restoreWithResponse(String contractId, Context context)"
  name: "restoreWithResponse(String contractId, Context context)"
  nameWithType: "ContractsClient.restoreWithResponse(String contractId, Context context)"
  summary: "Invoke action restore."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphDirectoryObjectInner> restoreWithResponse(String contractId, Context context)"
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.restoreWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.restoreWithResponseAsync(String contractId)"
  name: "restoreWithResponseAsync(String contractId)"
  nameWithType: "ContractsClient.restoreWithResponseAsync(String contractId)"
  summary: "Invoke action restore."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphDirectoryObjectInner>> restoreWithResponseAsync(String contractId)"
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.validateProperties(com.azure.resourcemanager.authorization.fluent.models.ContractsValidatePropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.validateProperties(ContractsValidatePropertiesRequestBody body)"
  name: "validateProperties(ContractsValidatePropertiesRequestBody body)"
  nameWithType: "ContractsClient.validateProperties(ContractsValidatePropertiesRequestBody body)"
  summary: "Invoke action validateProperties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsValidatePropertiesRequestBody&text=ContractsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void validateProperties(ContractsValidatePropertiesRequestBody body)"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.validatePropertiesAsync(com.azure.resourcemanager.authorization.fluent.models.ContractsValidatePropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.validatePropertiesAsync(ContractsValidatePropertiesRequestBody body)"
  name: "validatePropertiesAsync(ContractsValidatePropertiesRequestBody body)"
  nameWithType: "ContractsClient.validatePropertiesAsync(ContractsValidatePropertiesRequestBody body)"
  summary: "Invoke action validateProperties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsValidatePropertiesRequestBody&text=ContractsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> validatePropertiesAsync(ContractsValidatePropertiesRequestBody body)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.validatePropertiesWithResponse(com.azure.resourcemanager.authorization.fluent.models.ContractsValidatePropertiesRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.validatePropertiesWithResponse(ContractsValidatePropertiesRequestBody body, Context context)"
  name: "validatePropertiesWithResponse(ContractsValidatePropertiesRequestBody body, Context context)"
  nameWithType: "ContractsClient.validatePropertiesWithResponse(ContractsValidatePropertiesRequestBody body, Context context)"
  summary: "Invoke action validateProperties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsValidatePropertiesRequestBody&text=ContractsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> validatePropertiesWithResponse(ContractsValidatePropertiesRequestBody body, Context context)"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsClient.validatePropertiesWithResponseAsync(com.azure.resourcemanager.authorization.fluent.models.ContractsValidatePropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsClient.validatePropertiesWithResponseAsync(ContractsValidatePropertiesRequestBody body)"
  name: "validatePropertiesWithResponseAsync(ContractsValidatePropertiesRequestBody body)"
  nameWithType: "ContractsClient.validatePropertiesWithResponseAsync(ContractsValidatePropertiesRequestBody body)"
  summary: "Invoke action validateProperties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsValidatePropertiesRequestBody&text=ContractsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> validatePropertiesWithResponseAsync(ContractsValidatePropertiesRequestBody body)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.14.0
