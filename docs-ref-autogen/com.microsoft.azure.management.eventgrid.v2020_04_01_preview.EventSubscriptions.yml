### YamlMime:JavaType
uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions"
fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions"
name: "EventSubscriptions"
nameWithType: "EventSubscriptions"
summary: "Type representing Event<wbr>Subscriptions."
syntax: "public interface EventSubscriptions extends SupportsCreating<EventSubscription.DefinitionStages.Blank>, SupportsListingByResourceGroup<EventSubscription>, SupportsListing<EventSubscription>, HasInner<EventSubscriptionsInner>"
methods:
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.deleteAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.deleteAsync(String scope, String eventSubscriptionName)"
  name: "deleteAsync(String scope, String eventSubscriptionName)"
  nameWithType: "EventSubscriptions.deleteAsync(String scope, String eventSubscriptionName)"
  summary: "Delete an event subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the event subscription."
    name: "eventSubscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable deleteAsync(String scope, String eventSubscriptionName)"
  desc: "Delete an event subscription. Delete an existing event subscription."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.getAsync(String scope, String eventSubscriptionName)"
  name: "getAsync(String scope, String eventSubscriptionName)"
  nameWithType: "EventSubscriptions.getAsync(String scope, String eventSubscriptionName)"
  summary: "Get an event subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the event subscription."
    name: "eventSubscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventSubscription> getAsync(String scope, String eventSubscriptionName)"
  desc: "Get an event subscription. Get properties of an event subscription."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription&text=EventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.getFullUrlAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.getFullUrlAsync(String scope, String eventSubscriptionName)"
  name: "getFullUrlAsync(String scope, String eventSubscriptionName)"
  nameWithType: "EventSubscriptions.getFullUrlAsync(String scope, String eventSubscriptionName)"
  summary: "Get full URL of an event subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the event subscription."
    name: "eventSubscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventSubscriptionFullUrl> getFullUrlAsync(String scope, String eventSubscriptionName)"
  desc: "Get full URL of an event subscription. Get the full endpoint URL for an event subscription."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptionFullUrl?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptionFullUrl&text=EventSubscriptionFullUrl\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listByDomainTopicAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listByDomainTopicAsync(String resourceGroupName, String domainName, String topicName)"
  name: "listByDomainTopicAsync(String resourceGroupName, String domainName, String topicName)"
  nameWithType: "EventSubscriptions.listByDomainTopicAsync(String resourceGroupName, String domainName, String topicName)"
  summary: "List all event subscriptions for a specific domain topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the top level domain."
    name: "domainName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the domain topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventSubscription> listByDomainTopicAsync(String resourceGroupName, String domainName, String topicName)"
  desc: "List all event subscriptions for a specific domain topic. List all event subscriptions that have been created for a specific domain topic."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription&text=EventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listByResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listByResourceAsync(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName)"
  name: "listByResourceAsync(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName)"
  nameWithType: "EventSubscriptions.listByResourceAsync(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName)"
  summary: "List all event subscriptions for a specific topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Namespace of the provider of the topic."
    name: "providerNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the resource type."
    name: "resourceTypeName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventSubscription> listByResourceAsync(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName)"
  desc: "List all event subscriptions for a specific topic. List all event subscriptions that have been created for a specific topic."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription&text=EventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listGlobalByResourceGroupForTopicTypeAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listGlobalByResourceGroupForTopicTypeAsync(String resourceGroupName, String topicTypeName)"
  name: "listGlobalByResourceGroupForTopicTypeAsync(String resourceGroupName, String topicTypeName)"
  nameWithType: "EventSubscriptions.listGlobalByResourceGroupForTopicTypeAsync(String resourceGroupName, String topicTypeName)"
  summary: "List all global event subscriptions under a resource group for a topic type."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic type."
    name: "topicTypeName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventSubscription> listGlobalByResourceGroupForTopicTypeAsync(String resourceGroupName, String topicTypeName)"
  desc: "List all global event subscriptions under a resource group for a topic type. List all global event subscriptions under a resource group for a specific topic type."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription&text=EventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listGlobalBySubscriptionForTopicTypeAsync(java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listGlobalBySubscriptionForTopicTypeAsync(String topicTypeName)"
  name: "listGlobalBySubscriptionForTopicTypeAsync(String topicTypeName)"
  nameWithType: "EventSubscriptions.listGlobalBySubscriptionForTopicTypeAsync(String topicTypeName)"
  summary: "List all global event subscriptions for a topic type."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the topic type."
    name: "topicTypeName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventSubscription> listGlobalBySubscriptionForTopicTypeAsync(String topicTypeName)"
  desc: "List all global event subscriptions for a topic type. List all global event subscriptions under an Azure subscription for a topic type."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription&text=EventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listRegionalByResourceGroupAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listRegionalByResourceGroupAsync(String resourceGroupName, String location)"
  name: "listRegionalByResourceGroupAsync(String resourceGroupName, String location)"
  nameWithType: "EventSubscriptions.listRegionalByResourceGroupAsync(String resourceGroupName, String location)"
  summary: "List all regional event subscriptions under an Azure subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the location."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventSubscription> listRegionalByResourceGroupAsync(String resourceGroupName, String location)"
  desc: "List all regional event subscriptions under an Azure subscription and resource group. List all event subscriptions from the given location under a specific Azure subscription and resource group."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription&text=EventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listRegionalByResourceGroupForTopicTypeAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listRegionalByResourceGroupForTopicTypeAsync(String resourceGroupName, String location, String topicTypeName)"
  name: "listRegionalByResourceGroupForTopicTypeAsync(String resourceGroupName, String location, String topicTypeName)"
  nameWithType: "EventSubscriptions.listRegionalByResourceGroupForTopicTypeAsync(String resourceGroupName, String location, String topicTypeName)"
  summary: "List all regional event subscriptions under an Azure subscription and resource group for a topic type."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the location."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic type."
    name: "topicTypeName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventSubscription> listRegionalByResourceGroupForTopicTypeAsync(String resourceGroupName, String location, String topicTypeName)"
  desc: "List all regional event subscriptions under an Azure subscription and resource group for a topic type. List all event subscriptions from the given location under a specific Azure subscription and resource group and topic type."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription&text=EventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listRegionalBySubscriptionAsync(java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listRegionalBySubscriptionAsync(String location)"
  name: "listRegionalBySubscriptionAsync(String location)"
  nameWithType: "EventSubscriptions.listRegionalBySubscriptionAsync(String location)"
  summary: "List all regional event subscriptions under an Azure subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the location."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventSubscription> listRegionalBySubscriptionAsync(String location)"
  desc: "List all regional event subscriptions under an Azure subscription. List all event subscriptions from the given location under a specific Azure subscription."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription&text=EventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listRegionalBySubscriptionForTopicTypeAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptions.listRegionalBySubscriptionForTopicTypeAsync(String location, String topicTypeName)"
  name: "listRegionalBySubscriptionForTopicTypeAsync(String location, String topicTypeName)"
  nameWithType: "EventSubscriptions.listRegionalBySubscriptionForTopicTypeAsync(String location, String topicTypeName)"
  summary: "List all regional event subscriptions under an Azure subscription for a topic type."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the location."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic type."
    name: "topicTypeName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventSubscription> listRegionalBySubscriptionForTopicTypeAsync(String location, String topicTypeName)"
  desc: "List all regional event subscriptions under an Azure subscription for a topic type. List all event subscriptions from the given location under a specific Azure subscription and topic type."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription&text=EventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Type representing EventSubscriptions."
implements:
- "<xref href=\"com.microsoft.azure.arm.collection.SupportsCreating?alt=com.microsoft.azure.arm.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription.DefinitionStages.Blank?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.collection.SupportsListing?alt=com.microsoft.azure.arm.collection.SupportsListing&text=SupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription&text=EventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.implementation.EventSubscriptionsInner?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.implementation.EventSubscriptionsInner&text=EventSubscriptionsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.resources.collection.SupportsListingByResourceGroup?alt=com.microsoft.azure.arm.resources.collection.SupportsListingByResourceGroup&text=SupportsListingByResourceGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscription&text=EventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview"
artifact: com.microsoft.azure.eventgrid.v2020_04_01_preview:azure-mgmt-eventgrid:1.0.0-beta-3
