### YamlMime:JavaType
uid: "com.microsoft.azure.documentdb.RangePartitionResolver"
fullName: "com.microsoft.azure.documentdb.RangePartitionResolver<T>"
name: "RangePartitionResolver<T>"
nameWithType: "RangePartitionResolver<T>"
summary: "RangePartitionResolver implements partitioning based on the ranges in the Azure Cosmos DB database service. It allows you to distribute requests and data across a number of partitions by implementing PartitionResolver interface."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RangePartitionResolver<T> implements PartitionResolver"
constructors:
- "com.microsoft.azure.documentdb.RangePartitionResolver.RangePartitionResolver(com.microsoft.azure.documentdb.PartitionKeyExtractor,java.util.Map<com.microsoft.azure.documentdb.Range<T>,java.lang.String>)"
methods:
- "com.microsoft.azure.documentdb.RangePartitionResolver.resolveForCreate(java.lang.Object)"
- "com.microsoft.azure.documentdb.RangePartitionResolver.resolveForRead(java.lang.Object)"
type: "class"
typeParameters:
- name: "T"
implements:
- "<xref href=\"com.microsoft.azure.documentdb.PartitionResolver?alt=com.microsoft.azure.documentdb.PartitionResolver&text=PartitionResolver\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.documentdb"
artifact: com.microsoft.azure:azure-documentdb:2.4.7
