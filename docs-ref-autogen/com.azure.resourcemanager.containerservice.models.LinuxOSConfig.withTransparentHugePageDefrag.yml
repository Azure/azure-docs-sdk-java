### YamlMime:JavaMember
uid: "com.azure.resourcemanager.containerservice.models.LinuxOSConfig.withTransparentHugePageDefrag*"
fullName: "com.azure.resourcemanager.containerservice.models.LinuxOSConfig.withTransparentHugePageDefrag"
name: "withTransparentHugePageDefrag"
nameWithType: "LinuxOSConfig.withTransparentHugePageDefrag"
members:
- uid: "com.azure.resourcemanager.containerservice.models.LinuxOSConfig.withTransparentHugePageDefrag(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.LinuxOSConfig.withTransparentHugePageDefrag(String transparentHugePageDefrag)"
  name: "withTransparentHugePageDefrag(String transparentHugePageDefrag)"
  nameWithType: "LinuxOSConfig.withTransparentHugePageDefrag(String transparentHugePageDefrag)"
  summary: "Set the transparentHugePageDefrag property: Whether the kernel should make aggressive use of memory compaction to make more hugepages available. Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see \\[Transparent Hugepages\\](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html\\#admin-guide-transhuge)."
  parameters:
  - description: "the transparentHugePageDefrag value to set."
    name: "transparentHugePageDefrag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LinuxOSConfig withTransparentHugePageDefrag(String transparentHugePageDefrag)"
  returns:
    description: "the LinuxOSConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.LinuxOSConfig?alt=com.azure.resourcemanager.containerservice.models.LinuxOSConfig&text=LinuxOSConfig\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.containerservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.13.0
