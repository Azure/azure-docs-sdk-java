### YamlMime:JavaType
uid: "com.microsoft.azure.eventhubs.RetryPolicy"
fullName: "com.microsoft.azure.eventhubs.RetryPolicy"
name: "RetryPolicy"
nameWithType: "RetryPolicy"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class RetryPolicy"
constructors:
- uid: "com.microsoft.azure.eventhubs.RetryPolicy.RetryPolicy(java.lang.String)"
  fullName: "com.microsoft.azure.eventhubs.RetryPolicy.RetryPolicy(String name)"
  name: "RetryPolicy(String name)"
  nameWithType: "RetryPolicy.RetryPolicy(String name)"
  modifiers:
  - "protected"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected RetryPolicy(String name)"
methods:
- uid: "com.microsoft.azure.eventhubs.RetryPolicy.getDefault()"
  fullName: "com.microsoft.azure.eventhubs.RetryPolicy.getDefault()"
  name: "getDefault()"
  nameWithType: "RetryPolicy.getDefault()"
  modifiers:
  - "static"
  syntax: "public static RetryPolicy getDefault()"
  returns:
    type: "<xref href=\"com.microsoft.azure.eventhubs.RetryPolicy?alt=com.microsoft.azure.eventhubs.RetryPolicy&text=RetryPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventhubs.RetryPolicy.getNextRetryInterval(java.lang.String,java.lang.Exception,java.time.Duration)"
  fullName: "com.microsoft.azure.eventhubs.RetryPolicy.getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)"
  name: "getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)"
  nameWithType: "RetryPolicy.getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)"
  summary: "Gets the Interval after which next<wbr>Retry should be done."
  parameters:
  - description: "clientId"
    name: "clientId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "lastException"
    name: "lastException"
    type: "<xref href=\"java.lang.Exception?alt=java.lang.Exception&text=Exception\" data-throw-if-not-resolved=\"False\" />"
  - description: "remainingTime to retry"
    name: "remainingTime"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Duration getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)"
  desc: "Gets the Interval after which nextRetry should be done."
  returns:
    description: "returns 'null' Duration when not Allowed"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventhubs.RetryPolicy.getNoRetry()"
  fullName: "com.microsoft.azure.eventhubs.RetryPolicy.getNoRetry()"
  name: "getNoRetry()"
  nameWithType: "RetryPolicy.getNoRetry()"
  modifiers:
  - "static"
  syntax: "public static RetryPolicy getNoRetry()"
  returns:
    type: "<xref href=\"com.microsoft.azure.eventhubs.RetryPolicy?alt=com.microsoft.azure.eventhubs.RetryPolicy&text=RetryPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventhubs.RetryPolicy.getRetryCount(java.lang.String)"
  fullName: "com.microsoft.azure.eventhubs.RetryPolicy.getRetryCount(String clientId)"
  name: "getRetryCount(String clientId)"
  nameWithType: "RetryPolicy.getRetryCount(String clientId)"
  modifiers:
  - "protected"
  parameters:
  - name: "clientId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected int getRetryCount(String clientId)"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventhubs.RetryPolicy.incrementRetryCount(java.lang.String)"
  fullName: "com.microsoft.azure.eventhubs.RetryPolicy.incrementRetryCount(String clientId)"
  name: "incrementRetryCount(String clientId)"
  nameWithType: "RetryPolicy.incrementRetryCount(String clientId)"
  parameters:
  - name: "clientId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void incrementRetryCount(String clientId)"
- uid: "com.microsoft.azure.eventhubs.RetryPolicy.isRetryableException(java.lang.Exception)"
  fullName: "com.microsoft.azure.eventhubs.RetryPolicy.isRetryableException(Exception exception)"
  name: "isRetryableException(Exception exception)"
  nameWithType: "RetryPolicy.isRetryableException(Exception exception)"
  modifiers:
  - "static"
  parameters:
  - name: "exception"
    type: "<xref href=\"java.lang.Exception?alt=java.lang.Exception&text=Exception\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean isRetryableException(Exception exception)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventhubs.RetryPolicy.onGetNextRetryInterval(java.lang.String,java.lang.Exception,java.time.Duration,int)"
  fullName: "com.microsoft.azure.eventhubs.RetryPolicy.onGetNextRetryInterval(String clientId, Exception lastException, Duration remainingTime, int baseWaitTime)"
  name: "onGetNextRetryInterval(String clientId, Exception lastException, Duration remainingTime, int baseWaitTime)"
  nameWithType: "RetryPolicy.onGetNextRetryInterval(String clientId, Exception lastException, Duration remainingTime, int baseWaitTime)"
  modifiers:
  - "protected"
  - "abstract"
  parameters:
  - name: "clientId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "lastException"
    type: "<xref href=\"java.lang.Exception?alt=java.lang.Exception&text=Exception\" data-throw-if-not-resolved=\"False\" />"
  - name: "remainingTime"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - name: "baseWaitTime"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected abstract Duration onGetNextRetryInterval(String clientId, Exception lastException, Duration remainingTime, int baseWaitTime)"
  returns:
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventhubs.RetryPolicy.resetRetryCount(java.lang.String)"
  fullName: "com.microsoft.azure.eventhubs.RetryPolicy.resetRetryCount(String clientId)"
  name: "resetRetryCount(String clientId)"
  nameWithType: "RetryPolicy.resetRetryCount(String clientId)"
  parameters:
  - name: "clientId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void resetRetryCount(String clientId)"
- uid: "com.microsoft.azure.eventhubs.RetryPolicy.toString()"
  fullName: "com.microsoft.azure.eventhubs.RetryPolicy.toString()"
  name: "toString()"
  nameWithType: "RetryPolicy.toString()"
  overridden: "java.lang.Object.toString()"
  syntax: "public String toString()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.eventhubs"
artifact: com.microsoft.azure:azure-eventhubs:3.2.2
