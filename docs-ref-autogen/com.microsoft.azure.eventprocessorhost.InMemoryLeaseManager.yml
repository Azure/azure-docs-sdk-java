### YamlMime:JavaType
constructors:
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.InMemoryLeaseManager()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.eventprocessorhost.ILeaseManager?alt=com.microsoft.azure.eventprocessorhost.ILeaseManager&text=ILeaseManager" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.acquireLease(CompleteLease)
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.createAllLeasesIfNotExists(List<String>)
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.createLeaseStoreIfNotExists()
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.deleteLease(CompleteLease)
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.deleteLeaseStore()
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.getAllLeases()
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.getLease(String)
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.getLeaseDurationInMilliseconds()
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.initialize(HostContext)
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.leaseStoreExists()
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.notifyOnSteal(String,String,Callable<?>)
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.releaseLease(CompleteLease)
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.renewLease(CompleteLease)
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.setLatency(long)
- com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager.updateLease(CompleteLease)
nameWithType: InMemoryLeaseManager
syntax: public class InMemoryLeaseManager implements ILeaseManager
type: class
uid: com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager
fullName: com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager
name: InMemoryLeaseManager
package: com.microsoft.azure.eventprocessorhost
metadata: {}
