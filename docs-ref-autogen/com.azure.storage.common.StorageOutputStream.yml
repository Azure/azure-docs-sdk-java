### YamlMime:ManagedReference
items:
- uid: com.azure.storage.common.StorageOutputStream
  id: StorageOutputStream
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common
  children:
  - com.azure.storage.common.StorageOutputStream.StorageOutputStream(int)
  - com.azure.storage.common.StorageOutputStream.checkStreamState()
  - com.azure.storage.common.StorageOutputStream.close()
  - com.azure.storage.common.StorageOutputStream.dispatchWrite(byte[],int,long)
  - com.azure.storage.common.StorageOutputStream.flush()
  - com.azure.storage.common.StorageOutputStream.lastError
  - com.azure.storage.common.StorageOutputStream.write(byte[])
  - com.azure.storage.common.StorageOutputStream.write(byte[],int,int)
  - com.azure.storage.common.StorageOutputStream.write(int)
  - com.azure.storage.common.StorageOutputStream.writeInternal(byte[],int,int)
  langs:
  - java
  name: StorageOutputStream
  nameWithType: StorageOutputStream
  fullName: com.azure.storage.common.StorageOutputStream
  type: Class
  package: com.azure.storage.common
  summary: StorageOutputStream allows for uploading data to an Azure Storage service using stream concepts.
  syntax:
    content: public abstract class StorageOutputStream extends OutputStream
  inheritance:
  - java.lang.Object
  - java.io.OutputStream
  inheritedMembers:
  - java.io.OutputStream.close()
  - java.io.OutputStream.flush()
  - java.io.OutputStream.nullOutputStream()
  - java.io.OutputStream.write(byte[])
  - java.io.OutputStream.write(byte[],int,int)
  - java.io.OutputStream.write(int)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.common.StorageOutputStream.StorageOutputStream(int)
  id: StorageOutputStream(int)
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.StorageOutputStream
  langs:
  - java
  name: StorageOutputStream(int writeThreshold)
  nameWithType: StorageOutputStream.StorageOutputStream(int writeThreshold)
  fullName: com.azure.storage.common.StorageOutputStream.StorageOutputStream(int writeThreshold)
  overload: com.azure.storage.common.StorageOutputStream.StorageOutputStream*
  type: Constructor
  package: com.azure.storage.common
  syntax:
    content: protected StorageOutputStream(int writeThreshold)
    parameters:
    - id: writeThreshold
      type: int
- uid: com.azure.storage.common.StorageOutputStream.checkStreamState()
  id: checkStreamState()
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.StorageOutputStream
  langs:
  - java
  name: checkStreamState()
  nameWithType: StorageOutputStream.checkStreamState()
  fullName: com.azure.storage.common.StorageOutputStream.checkStreamState()
  overload: com.azure.storage.common.StorageOutputStream.checkStreamState*
  type: Method
  package: com.azure.storage.common
  summary: Helper function to check if the stream is faulted, if it is it surfaces the exception.
  syntax:
    content: protected void checkStreamState()
- uid: com.azure.storage.common.StorageOutputStream.close()
  id: close()
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.StorageOutputStream
  langs:
  - java
  name: close()
  nameWithType: StorageOutputStream.close()
  fullName: com.azure.storage.common.StorageOutputStream.close()
  overload: com.azure.storage.common.StorageOutputStream.close*
  type: Method
  package: com.azure.storage.common
  summary: Closes this output stream and releases any system resources associated with this stream. If any data remains in the buffer it is committed to the service.
  syntax:
    content: public synchronized void close()
  exceptions:
  - type: java.io.IOException
    description: If an I/O error occurs.
- uid: com.azure.storage.common.StorageOutputStream.dispatchWrite(byte[],int,long)
  id: dispatchWrite(byte[],int,long)
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.StorageOutputStream
  langs:
  - java
  name: dispatchWrite(byte[] data, int writeLength, long offset)
  nameWithType: StorageOutputStream.dispatchWrite(byte[] data, int writeLength, long offset)
  fullName: com.azure.storage.common.StorageOutputStream.dispatchWrite(byte[] data, int writeLength, long offset)
  overload: com.azure.storage.common.StorageOutputStream.dispatchWrite*
  type: Method
  package: com.azure.storage.common
  syntax:
    content: protected abstract Mono<Void> dispatchWrite(byte[] data, int writeLength, long offset)
    parameters:
    - id: data
      type: byte[]
    - id: writeLength
      type: int
    - id: offset
      type: long
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
- uid: com.azure.storage.common.StorageOutputStream.flush()
  id: flush()
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.StorageOutputStream
  langs:
  - java
  name: flush()
  nameWithType: StorageOutputStream.flush()
  fullName: com.azure.storage.common.StorageOutputStream.flush()
  overload: com.azure.storage.common.StorageOutputStream.flush*
  type: Method
  package: com.azure.storage.common
  summary: Flushes this output stream and forces any buffered output bytes to be written out. If any data remains in the buffer it is committed to the service.
  syntax:
    content: public void flush()
- uid: com.azure.storage.common.StorageOutputStream.lastError
  id: lastError
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.StorageOutputStream
  langs:
  - java
  name: lastError
  nameWithType: StorageOutputStream.lastError
  fullName: com.azure.storage.common.StorageOutputStream.lastError
  type: Field
  package: com.azure.storage.common
  syntax:
    content: protected volatile IOException lastError
    return:
      type: java.io.IOException
- uid: com.azure.storage.common.StorageOutputStream.write(byte[])
  id: write(byte[])
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.StorageOutputStream
  langs:
  - java
  name: write(byte[] data)
  nameWithType: StorageOutputStream.write(byte[] data)
  fullName: com.azure.storage.common.StorageOutputStream.write(byte[] data)
  overload: com.azure.storage.common.StorageOutputStream.write*
  type: Method
  package: com.azure.storage.common
  summary: Writes `b.length` bytes from the specified byte array to this output stream.
  syntax:
    content: public void write(byte[] data)
    parameters:
    - id: data
      type: byte[]
      description: A <code>byte</code> array which represents the data to write.
- uid: com.azure.storage.common.StorageOutputStream.write(byte[],int,int)
  id: write(byte[],int,int)
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.StorageOutputStream
  langs:
  - java
  name: write(byte[] data, int offset, int length)
  nameWithType: StorageOutputStream.write(byte[] data, int offset, int length)
  fullName: com.azure.storage.common.StorageOutputStream.write(byte[] data, int offset, int length)
  overload: com.azure.storage.common.StorageOutputStream.write*
  type: Method
  package: com.azure.storage.common
  summary: Writes length bytes from the specified byte array starting at offset to this output stream.
  syntax:
    content: public void write(byte[] data, int offset, int length)
    parameters:
    - id: data
      type: byte[]
      description: A <code>byte</code> array which represents the data to write.
    - id: offset
      type: int
      description: An <code>int</code> which represents the start offset in the data.
    - id: length
      type: int
      description: An <code>int</code> which represents the number of bytes to write.
- uid: com.azure.storage.common.StorageOutputStream.write(int)
  id: write(int)
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.StorageOutputStream
  langs:
  - java
  name: write(int byteVal)
  nameWithType: StorageOutputStream.write(int byteVal)
  fullName: com.azure.storage.common.StorageOutputStream.write(int byteVal)
  overload: com.azure.storage.common.StorageOutputStream.write*
  type: Method
  package: com.azure.storage.common
  summary: >-
    Writes the specified byte to this output stream. The general contract for write is that one byte is written to the output stream. The byte to be written is the eight low-order bits of the argument b. The 24 high-order bits of b are ignored.


    `true` is acceptable for you.
  syntax:
    content: public void write(int byteVal)
    parameters:
    - id: byteVal
      type: int
      description: An <code>int</code> which represents the byte value to write.
- uid: com.azure.storage.common.StorageOutputStream.writeInternal(byte[],int,int)
  id: writeInternal(byte[],int,int)
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.StorageOutputStream
  langs:
  - java
  name: writeInternal(byte[] data, int offset, int length)
  nameWithType: StorageOutputStream.writeInternal(byte[] data, int offset, int length)
  fullName: com.azure.storage.common.StorageOutputStream.writeInternal(byte[] data, int offset, int length)
  overload: com.azure.storage.common.StorageOutputStream.writeInternal*
  type: Method
  package: com.azure.storage.common
  summary: Writes the data to the buffer and triggers writes to the service as needed.
  syntax:
    content: protected void writeInternal(byte[] data, int offset, int length)
    parameters:
    - id: data
      type: byte[]
      description: A <code>byte</code> array which represents the data to write.
    - id: offset
      type: int
      description: An <code>int</code> which represents the start offset in the data.
    - id: length
      type: int
      description: An <code>int</code> which represents the number of bytes to write.
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.storage.common.StorageOutputStream.StorageOutputStream*
  name: StorageOutputStream
  nameWithType: StorageOutputStream.StorageOutputStream
  fullName: com.azure.storage.common.StorageOutputStream.StorageOutputStream
  package: com.azure.storage.common
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.common.StorageOutputStream.dispatchWrite*
  name: dispatchWrite
  nameWithType: StorageOutputStream.dispatchWrite
  fullName: com.azure.storage.common.StorageOutputStream.dispatchWrite
  package: com.azure.storage.common
- uid: com.azure.storage.common.StorageOutputStream.writeInternal*
  name: writeInternal
  nameWithType: StorageOutputStream.writeInternal
  fullName: com.azure.storage.common.StorageOutputStream.writeInternal
  package: com.azure.storage.common
- uid: com.azure.storage.common.StorageOutputStream.checkStreamState*
  name: checkStreamState
  nameWithType: StorageOutputStream.checkStreamState
  fullName: com.azure.storage.common.StorageOutputStream.checkStreamState
  package: com.azure.storage.common
- uid: com.azure.storage.common.StorageOutputStream.flush*
  name: flush
  nameWithType: StorageOutputStream.flush
  fullName: com.azure.storage.common.StorageOutputStream.flush
  package: com.azure.storage.common
- uid: com.azure.storage.common.StorageOutputStream.write*
  name: write
  nameWithType: StorageOutputStream.write
  fullName: com.azure.storage.common.StorageOutputStream.write
  package: com.azure.storage.common
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.azure.storage.common.StorageOutputStream.close*
  name: close
  nameWithType: StorageOutputStream.close
  fullName: com.azure.storage.common.StorageOutputStream.close
  package: com.azure.storage.common
- uid: java.io.OutputStream
  name: OutputStream
  nameWithType: OutputStream
  fullName: java.io.OutputStream
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.io.OutputStream.write(int)
  name: OutputStream.write(int)
  nameWithType: OutputStream.write(int)
  fullName: java.io.OutputStream.write(int)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.io.OutputStream.flush()
  name: OutputStream.flush()
  nameWithType: OutputStream.flush()
  fullName: java.io.OutputStream.flush()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.io.OutputStream.close()
  name: OutputStream.close()
  nameWithType: OutputStream.close()
  fullName: java.io.OutputStream.close()
- uid: java.io.OutputStream.nullOutputStream()
  name: OutputStream.nullOutputStream()
  nameWithType: OutputStream.nullOutputStream()
  fullName: java.io.OutputStream.nullOutputStream()
- uid: java.io.OutputStream.write(byte[],int,int)
  name: OutputStream.write(byte[],int,int)
  nameWithType: OutputStream.write(byte[],int,int)
  fullName: java.io.OutputStream.write(byte[],int,int)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.io.OutputStream.write(byte[])
  name: OutputStream.write(byte[])
  nameWithType: OutputStream.write(byte[])
  fullName: java.io.OutputStream.write(byte[])
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
