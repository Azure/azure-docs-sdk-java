### YamlMime:JavaType
uid: "com.azure.storage.common.StorageOutputStream"
fullName: "com.azure.storage.common.StorageOutputStream"
name: "StorageOutputStream"
nameWithType: "StorageOutputStream"
summary: "Storage<wbr>Output<wbr>Stream allows for uploading data to an Azure Storage service using stream concepts."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.OutputStream?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.io.OutputStream.close()"
- "java.io.OutputStream.flush()"
- "java.io.OutputStream.nullOutputStream()"
- "java.io.OutputStream.write(byte[])"
- "java.io.OutputStream.write(byte[],int,int)"
- "java.io.OutputStream.write(int)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class StorageOutputStream extends OutputStream"
constructors:
- uid: "com.azure.storage.common.StorageOutputStream.StorageOutputStream(int)"
  fullName: "com.azure.storage.common.StorageOutputStream.StorageOutputStream(int writeThreshold)"
  name: "StorageOutputStream(int writeThreshold)"
  nameWithType: "StorageOutputStream.StorageOutputStream(int writeThreshold)"
  summary: "Creates a new instance of <xref uid=\"com.azure.storage.common.StorageOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageOutputStream\"></xref>."
  modifiers:
  - "protected"
  parameters:
  - description: "How many bytes the output will retain before it initiates a write to the Storage service."
    name: "writeThreshold"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected StorageOutputStream(int writeThreshold)"
  desc: "Creates a new instance of <xref uid=\"com.azure.storage.common.StorageOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageOutputStream\"></xref>."
fields:
- uid: "com.azure.storage.common.StorageOutputStream.lastError"
  fullName: "com.azure.storage.common.StorageOutputStream.lastError"
  name: "lastError"
  nameWithType: "StorageOutputStream.lastError"
  summary: "Holds the last exception this stream encountered."
  modifiers:
  - "protected"
  - "volatile"
  field:
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected volatile IOException lastError"
  desc: "Holds the last exception this stream encountered."
methods:
- uid: "com.azure.storage.common.StorageOutputStream.checkStreamState()"
  fullName: "com.azure.storage.common.StorageOutputStream.checkStreamState()"
  name: "checkStreamState()"
  nameWithType: "StorageOutputStream.checkStreamState()"
  summary: "Helper function to check if the stream is faulted, if it is it surfaces the exception."
  modifiers:
  - "protected"
  syntax: "protected void checkStreamState()"
  desc: "Helper function to check if the stream is faulted, if it is it surfaces the exception."
- uid: "com.azure.storage.common.StorageOutputStream.close()"
  fullName: "com.azure.storage.common.StorageOutputStream.close()"
  name: "close()"
  nameWithType: "StorageOutputStream.close()"
  summary: "Closes this output stream and releases any system resources associated with this stream."
  modifiers:
  - "synchronized"
  overridden: "java.io.OutputStream.close()"
  syntax: "public synchronized void close()"
  exceptions:
  - description: "If an I/O error occurs."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Closes this output stream and releases any system resources associated with this stream. If any data remains in the buffer it is committed to the service."
- uid: "com.azure.storage.common.StorageOutputStream.dispatchWrite(byte[],int,long)"
  fullName: "com.azure.storage.common.StorageOutputStream.dispatchWrite(byte[] data, int writeLength, long offset)"
  name: "dispatchWrite(byte[] data, int writeLength, long offset)"
  nameWithType: "StorageOutputStream.dispatchWrite(byte[] data, int writeLength, long offset)"
  summary: "Dispatches a write operation to the Storage service."
  modifiers:
  - "protected"
  - "abstract"
  parameters:
  - description: "The data to send."
    name: "data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "Length of the data."
    name: "writeLength"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The offset to write the data."
    name: "offset"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected abstract Mono<Void> dispatchWrite(byte[] data, int writeLength, long offset)"
  desc: "Dispatches a write operation to the Storage service."
  returns:
    description: "A reactive response that indicates completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.common.StorageOutputStream.flush()"
  fullName: "com.azure.storage.common.StorageOutputStream.flush()"
  name: "flush()"
  nameWithType: "StorageOutputStream.flush()"
  summary: "Flushes this output stream and forces any buffered output bytes to be written out."
  overridden: "java.io.OutputStream.flush()"
  syntax: "public void flush()"
  desc: "Flushes this output stream and forces any buffered output bytes to be written out. If any data remains in the buffer it is committed to the service."
- uid: "com.azure.storage.common.StorageOutputStream.write(byte[])"
  fullName: "com.azure.storage.common.StorageOutputStream.write(byte[] data)"
  name: "write(byte[] data)"
  nameWithType: "StorageOutputStream.write(byte[] data)"
  summary: "Writes `b.length` bytes from the specified byte array to this output stream."
  overridden: "java.io.OutputStream.write(byte[])"
  parameters:
  - description: "A <code>byte</code> array which represents the data to write."
    name: "data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void write(byte[] data)"
  desc: "Writes `b.length` bytes from the specified byte array to this output stream."
- uid: "com.azure.storage.common.StorageOutputStream.write(byte[],int,int)"
  fullName: "com.azure.storage.common.StorageOutputStream.write(byte[] data, int offset, int length)"
  name: "write(byte[] data, int offset, int length)"
  nameWithType: "StorageOutputStream.write(byte[] data, int offset, int length)"
  summary: "Writes length bytes from the specified byte array starting at offset to this output stream."
  overridden: "java.io.OutputStream.write(byte[],int,int)"
  parameters:
  - description: "A <code>byte</code> array which represents the data to write."
    name: "data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "An <code>int</code> which represents the start offset in the data."
    name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "An <code>int</code> which represents the number of bytes to write."
    name: "length"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void write(byte[] data, int offset, int length)"
  desc: "Writes length bytes from the specified byte array starting at offset to this output stream."
- uid: "com.azure.storage.common.StorageOutputStream.write(int)"
  fullName: "com.azure.storage.common.StorageOutputStream.write(int byteVal)"
  name: "write(int byteVal)"
  nameWithType: "StorageOutputStream.write(int byteVal)"
  summary: "Writes the specified byte to this output stream."
  overridden: "java.io.OutputStream.write(int)"
  parameters:
  - description: "An <code>int</code> which represents the byte value to write."
    name: "byteVal"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void write(int byteVal)"
  desc: "Writes the specified byte to this output stream. The general contract for write is that one byte is written to the output stream. The byte to be written is the eight low-order bits of the argument b. The 24 high-order bits of b are ignored.\n\n`true` is acceptable for you."
- uid: "com.azure.storage.common.StorageOutputStream.writeInternal(byte[],int,int)"
  fullName: "com.azure.storage.common.StorageOutputStream.writeInternal(byte[] data, int offset, int length)"
  name: "writeInternal(byte[] data, int offset, int length)"
  nameWithType: "StorageOutputStream.writeInternal(byte[] data, int offset, int length)"
  summary: "Writes the data to the buffer and triggers writes to the service as needed."
  modifiers:
  - "protected"
  parameters:
  - description: "A <code>byte</code> array which represents the data to write."
    name: "data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "An <code>int</code> which represents the start offset in the data."
    name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "An <code>int</code> which represents the number of bytes to write."
    name: "length"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void writeInternal(byte[] data, int offset, int length)"
  desc: "Writes the data to the buffer and triggers writes to the service as needed."
type: "class"
desc: "StorageOutputStream allows for uploading data to an Azure Storage service using stream concepts."
metadata: {}
package: "com.azure.storage.common"
artifact: com.azure:azure-storage-common:12.18.0
