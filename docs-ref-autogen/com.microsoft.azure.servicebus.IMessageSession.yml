### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.IMessageSession"
fullName: "com.microsoft.azure.servicebus.IMessageSession"
name: "IMessageSession"
nameWithType: "IMessageSession"
summary: "Describes a Session object. IMessageSession can be used to perform operations on sessions.\n\nService Bus Sessions, also called 'Groups' in the AMQP 1.0 protocol, are unbounded sequences of related messages. ServiceBus guarantees ordering of messages in a session.\n\nAny sender can create a session when submitting messages into a Topic or Queue by setting the <xref uid=\"com.microsoft.azure.servicebus.Message.sessionId\" data-throw-if-not-resolved=\"false\">Message#sessionId</xref> property on Message to some application defined unique identifier. At the AMQP 1.0 protocol level, this value maps to the group-id property.\n\nSessions come into existence when there is at least one message with the session's SessionId in the Queue or Topic subscription. Once a Session exists, there is no defined moment or gesture for when the session expires or disappears."
syntax: "public interface IMessageSession extends IMessageReceiver"
methods:
- "com.microsoft.azure.servicebus.IMessageSession.getLockedUntilUtc()"
- "com.microsoft.azure.servicebus.IMessageSession.getSessionId()"
- "com.microsoft.azure.servicebus.IMessageSession.getState()"
- "com.microsoft.azure.servicebus.IMessageSession.getStateAsync()"
- "com.microsoft.azure.servicebus.IMessageSession.renewSessionLock()"
- "com.microsoft.azure.servicebus.IMessageSession.renewSessionLockAsync()"
- "com.microsoft.azure.servicebus.IMessageSession.setState(byte[])"
- "com.microsoft.azure.servicebus.IMessageSession.setStateAsync(byte[])"
type: "interface"
implements:
- "<xref href=\"com.microsoft.azure.servicebus.IMessageReceiver?alt=com.microsoft.azure.servicebus.IMessageReceiver&text=IMessageReceiver\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.servicebus"
artifact: com.microsoft.azure:azure-servicebus:3.4.0
