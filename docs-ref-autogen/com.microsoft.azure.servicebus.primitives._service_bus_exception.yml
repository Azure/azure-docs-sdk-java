### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception
  id: _service_bus_exception
  parent: com.microsoft.azure.servicebus.primitives
  children:
  - com.microsoft.azure.servicebus.primitives._service_bus_exception.getContext()
  - com.microsoft.azure.servicebus.primitives._service_bus_exception.getIsTransient()
  - com.microsoft.azure.servicebus.primitives._service_bus_exception.getMessage()
  - com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException(final boolean)
  - com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException(final boolean,final String)
  - com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException(final boolean,final String,final Throwable)
  - com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException(final boolean,final Throwable)
  href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
  langs:
  - java
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
  type: Class
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/ServiceBusException.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/ServiceBusException.java
    startLine: 12
  package: com.microsoft.azure.servicebus.primitives
  summary: "<p>This is the base exception that service bus will generate for all error cases. </p>"
  syntax:
    content: public class ServiceBusException
  inheritance:
  - java.lang.Object
  - Exception
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception.getContext()
  id: getContext()
  parent: com.microsoft.azure.servicebus.primitives._service_bus_exception
  href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
  langs:
  - java
  name: getContext()
  nameWithType: ServiceBusException.getContext()
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException.getContext()
  overload: com.microsoft.azure.servicebus.primitives._service_bus_exception.getContext*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/ServiceBusException.java
    startLine: 63
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public ErrorContext getContext()
    return:
      type: 881228a4
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception.getIsTransient()
  id: getIsTransient()
  parent: com.microsoft.azure.servicebus.primitives._service_bus_exception
  href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
  langs:
  - java
  name: getIsTransient()
  nameWithType: ServiceBusException.getIsTransient()
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException.getIsTransient()
  overload: com.microsoft.azure.servicebus.primitives._service_bus_exception.getIsTransient*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/ServiceBusException.java
    startLine: 58
  package: com.microsoft.azure.servicebus.primitives
  summary: "<p>A boolean indicating if the exception is a transient error or not. </p>"
  syntax:
    content: public boolean getIsTransient()
    return:
      type: 4fc6e284
      description: <p>returns true when user can retry the operation that generated the exception without additional intervention. </p>
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception.getMessage()
  id: getMessage()
  parent: com.microsoft.azure.servicebus.primitives._service_bus_exception
  href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
  langs:
  - java
  name: getMessage()
  nameWithType: ServiceBusException.getMessage()
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException.getMessage()
  overload: com.microsoft.azure.servicebus.primitives._service_bus_exception.getMessage*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/ServiceBusException.java
    startLine: 44
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public String getMessage()
    return:
      type: "26831127"
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException(final boolean)
  id: ServiceBusException(final boolean)
  parent: com.microsoft.azure.servicebus.primitives._service_bus_exception
  href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
  langs:
  - java
  name: ServiceBusException(final boolean isTransient)
  nameWithType: ServiceBusException.ServiceBusException(final boolean isTransient)
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException.ServiceBusException(final boolean isTransient)
  overload: com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/ServiceBusException.java
    startLine: 19
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public ServiceBusException(final boolean isTransient)
    parameters:
    - id: isTransient
      type: 4dda0764
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException(final boolean,final String)
  id: ServiceBusException(final boolean,final String)
  parent: com.microsoft.azure.servicebus.primitives._service_bus_exception
  href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
  langs:
  - java
  name: ServiceBusException(final boolean isTransient, final String message)
  nameWithType: ServiceBusException.ServiceBusException(final boolean isTransient, final String message)
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException.ServiceBusException(final boolean isTransient, final String message)
  overload: com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/ServiceBusException.java
    startLine: 25
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public ServiceBusException(final boolean isTransient, final String message)
    parameters:
    - id: isTransient
      type: 4dda0764
    - id: message
      type: 3d93591e
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException(final boolean,final String,final Throwable)
  id: ServiceBusException(final boolean,final String,final Throwable)
  parent: com.microsoft.azure.servicebus.primitives._service_bus_exception
  href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
  langs:
  - java
  name: ServiceBusException(final boolean isTransient, final String message, final Throwable cause)
  nameWithType: ServiceBusException.ServiceBusException(final boolean isTransient, final String message, final Throwable cause)
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException.ServiceBusException(final boolean isTransient, final String message, final Throwable cause)
  overload: com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/ServiceBusException.java
    startLine: 37
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public ServiceBusException(final boolean isTransient, final String message, final Throwable cause)
    parameters:
    - id: isTransient
      type: 4dda0764
    - id: message
      type: 3d93591e
    - id: cause
      type: fa00b19f
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException(final boolean,final Throwable)
  id: ServiceBusException(final boolean,final Throwable)
  parent: com.microsoft.azure.servicebus.primitives._service_bus_exception
  href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
  langs:
  - java
  name: ServiceBusException(final boolean isTransient, final Throwable cause)
  nameWithType: ServiceBusException.ServiceBusException(final boolean isTransient, final Throwable cause)
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException.ServiceBusException(final boolean isTransient, final Throwable cause)
  overload: com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/ServiceBusException.java
    startLine: 31
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public ServiceBusException(final boolean isTransient, final Throwable cause)
    parameters:
    - id: isTransient
      type: 4dda0764
    - id: cause
      type: fa00b19f
references:
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception.ServiceBusException*
  name: ServiceBusException
  nameWithType: ServiceBusException.ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException.ServiceBusException
  package: com.microsoft.azure.servicebus.primitives
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: fa00b19f
  spec.java:
  - name: final Throwable
    fullName: final Throwable
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception.getMessage*
  name: getMessage
  nameWithType: ServiceBusException.getMessage
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException.getMessage
  package: com.microsoft.azure.servicebus.primitives
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception.getIsTransient*
  name: getIsTransient
  nameWithType: ServiceBusException.getIsTransient
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException.getIsTransient
  package: com.microsoft.azure.servicebus.primitives
- uid: 881228a4
  spec.java:
  - name: ErrorContext
    fullName: ErrorContext
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception.getContext*
  name: getContext
  nameWithType: ServiceBusException.getContext
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException.getContext
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives._authorization_failed_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._authorization_failed_exception.yml
  name: AuthorizationFailedException
  nameWithType: AuthorizationFailedException
  fullName: com.microsoft.azure.servicebus.primitives.AuthorizationFailedException
  type: Class
  summary: <p>Authorization failed exception is thrown when error is encountered during authorizing user's permission to run the intended operations. When encountered this exception user should check whether the token/key provided in the connection string is valid, and has correct execution right for the intended operations (e.g. Receive call will need Listen claim associated with the key/token). </p>
  syntax:
    content: public class AuthorizationFailedException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives._communication_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._communication_exception.yml
  name: CommunicationException
  nameWithType: CommunicationException
  fullName: com.microsoft.azure.servicebus.primitives.CommunicationException
  type: Class
  summary: '<p>This exception is thrown when there is a client side connectivity issue. When receiving this exception user should check client connectivity settings to the service: <ul><li><p>Check for correct hostname and port number used in endpoint. </p></li><li><p>Check for any possible proxy settings that can block amqp ports </p></li><li><p>Check for any firewall settings that can block amqp ports </p></li><li><p>Check for any general network connectivity issues, as well as network latency. </p></li></ul></p>'
  syntax:
    content: public class CommunicationException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives._message_lock_lost_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._message_lock_lost_exception.yml
  name: MessageLockLostException
  nameWithType: MessageLockLostException
  fullName: com.microsoft.azure.servicebus.primitives.MessageLockLostException
  type: Class
  summary: <p>This exception is thrown when a receiver attempts  or  or  or  or  operation on a peek-locked message whose lock had already expired. </p>
  syntax:
    content: public class MessageLockLostException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives._message_not_found_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._message_not_found_exception.yml
  name: MessageNotFoundException
  nameWithType: MessageNotFoundException
  fullName: com.microsoft.azure.servicebus.primitives.MessageNotFoundException
  type: Class
  summary: <p>This exception is thrown when a receiver attempts to receive a message with sequence number and the message with that sequence number is not available in the queue or subscription. </p>
  syntax:
    content: public class MessageNotFoundException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives._messaging_entity_already_exists_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._messaging_entity_already_exists_exception.yml
  name: MessagingEntityAlreadyExistsException
  nameWithType: MessagingEntityAlreadyExistsException
  fullName: com.microsoft.azure.servicebus.primitives.MessagingEntityAlreadyExistsException
  type: Class
  summary: <p>This exception is thrown when a subscription client tries to create a rule with the name of an already existing rule. </p>
  syntax:
    content: public class MessagingEntityAlreadyExistsException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives._messaging_entity_disabled_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._messaging_entity_disabled_exception.yml
  name: MessagingEntityDisabledException
  nameWithType: MessagingEntityDisabledException
  fullName: com.microsoft.azure.servicebus.primitives.MessagingEntityDisabledException
  type: Class
  summary: <p>This exception is thrown when a client attempts to send messages to or receive messages from a disabled entity. An entity can be disabled for SEND operations or RECEIVE operations or both. </p>
  syntax:
    content: public class MessagingEntityDisabledException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives._messaging_entity_not_found_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._messaging_entity_not_found_exception.yml
  name: MessagingEntityNotFoundException
  nameWithType: MessagingEntityNotFoundException
  fullName: com.microsoft.azure.servicebus.primitives.MessagingEntityNotFoundException
  type: Class
  summary: <p>This exception is thrown when a client attempts to create a sender or receiver or client to a non existent entity. </p>
  syntax:
    content: public class MessagingEntityNotFoundException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives._operation_cancelled_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._operation_cancelled_exception.yml
  name: OperationCancelledException
  nameWithType: OperationCancelledException
  fullName: com.microsoft.azure.servicebus.primitives.OperationCancelledException
  type: Class
  summary: <p>This exception is thrown when the underlying Amqp layer encounter an abnormal link abort or disconnect of connection in an unexpected fashion. </p>
  syntax:
    content: public class OperationCancelledException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives._payload_size_exceeded_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._payload_size_exceeded_exception.yml
  name: PayloadSizeExceededException
  nameWithType: PayloadSizeExceededException
  fullName: com.microsoft.azure.servicebus.primitives.PayloadSizeExceededException
  type: Class
  summary: <p>this exception is thrown when user attempts to send a event data or brokered message that has exceeded the allowed payload size as defined by the service. Note that in a batch send scenario the limit can include possible batch overhead. </p>
  syntax:
    content: public class PayloadSizeExceededException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives._quota_exceeded_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._quota_exceeded_exception.yml
  name: QuotaExceededException
  nameWithType: QuotaExceededException
  fullName: com.microsoft.azure.servicebus.primitives.QuotaExceededException
  type: Class
  summary: <p>This exception is thrown to signal that a service bus entity or namespace exceeded its quota. A quota can be a limit on entity size, message size, maximum concurrent connections or maximum concurrent operations. </p>
  syntax:
    content: public class QuotaExceededException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives._receiver_disconnected_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._receiver_disconnected_exception.yml
  name: ReceiverDisconnectedException
  nameWithType: ReceiverDisconnectedException
  fullName: com.microsoft.azure.servicebus.primitives.ReceiverDisconnectedException
  type: Class
  summary: >-
    <p>This exception is thrown when a EventHubReceiver is being disconnected because of one of the following reason: <ul><li><p>user attempts to connect a non-epoch receiver to a event hub partition, when there is an epoch receiver connected to the partition. </p></li><li><p>you are using an epoch receiver for a given partition but another epoch receiver with a higher epoch value connects to the same partition. </p></li></ul>

    User should make sure either all code are using non-epoch receivers, or ensure that there is only one epoch receiver processing a given partition at any given point in time. </p>
  syntax:
    content: public class ReceiverDisconnectedException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives._server_busy_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._server_busy_exception.yml
  name: ServerBusyException
  nameWithType: ServerBusyException
  fullName: com.microsoft.azure.servicebus.primitives.ServerBusyException
  type: Class
  summary: <p>Server busy exception is thrown when the current entity's activity has put excessive load onto the service. When encountered this exception user should wait at least 4 seconds before any retry/runtime operations for the said entity again. </p>
  syntax:
    content: public class ServerBusyException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives._session_cannot_be_locked_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._session_cannot_be_locked_exception.yml
  name: SessionCannotBeLockedException
  nameWithType: SessionCannotBeLockedException
  fullName: com.microsoft.azure.servicebus.primitives.SessionCannotBeLockedException
  type: Class
  summary: <p>This exception is thrown when a client attempts to accept a session that is already locked by another client. </p>
  syntax:
    content: public class SessionCannotBeLockedException
- uid: com.microsoft.azure.servicebus.primitives._session_lock_lost_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._session_lock_lost_exception.yml
  name: SessionLockLostException
  nameWithType: SessionLockLostException
  fullName: com.microsoft.azure.servicebus.primitives.SessionLockLostException
  type: Class
  summary: <p>This exception is thrown when a session receiver performs an operation on a session after its lock is expired. When a client accepts a session, the session is locked to the receiver for a duration specified in the entity definition. When the accepted session remains idle for the duration of lock, that is no operations performed on the session, the lock expires and the session is made available to other clients. </p>
  syntax:
    content: public class SessionLockLostException
- uid: com.microsoft.azure.servicebus.primitives._timeout_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._timeout_exception.yml
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: com.microsoft.azure.servicebus.primitives.TimeoutException
  type: Class
  summary: <p>This exception is thrown when the operation has exceeded the predetermined time limit. User should check connectivity is healthy between client process and service. </p>
  syntax:
    content: public class TimeoutException
