### YamlMime:JavaType
uid: "com.azure.cosmos.models.CompositePath"
fullName: "com.azure.cosmos.models.CompositePath"
name: "CompositePath"
nameWithType: "CompositePath"
summary: "Represents a composite path of the Indexing<wbr>Policy in the Azure Cosmos DB database service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CompositePath"
constructors:
- uid: "com.azure.cosmos.models.CompositePath.CompositePath()"
  fullName: "com.azure.cosmos.models.CompositePath.CompositePath()"
  name: "CompositePath()"
  nameWithType: "CompositePath.CompositePath()"
  summary: "Constructor."
  syntax: "public CompositePath()"
  desc: "Constructor."
methods:
- uid: "com.azure.cosmos.models.CompositePath.equals(java.lang.Object)"
  fullName: "com.azure.cosmos.models.CompositePath.equals(Object o)"
  name: "equals(Object o)"
  nameWithType: "CompositePath.equals(Object o)"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  parameters:
  - name: "o"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean equals(Object o)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CompositePath.getOrder()"
  fullName: "com.azure.cosmos.models.CompositePath.getOrder()"
  name: "getOrder()"
  nameWithType: "CompositePath.getOrder()"
  summary: "Gets the sort order for the composite path."
  syntax: "public CompositePathSortOrder getOrder()"
  desc: "Gets the sort order for the composite path.\n\nFor example if you want to run the query \"SELECT \\* FROM c ORDER BY c.age asc, c.height desc\", then you need to make the order for \"/age\" \"ascending\" and the order for \"/height\" \"descending\"."
  returns:
    description: "the sort order."
    type: "<xref href=\"com.azure.cosmos.models.CompositePathSortOrder?alt=com.azure.cosmos.models.CompositePathSortOrder&text=CompositePathSortOrder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CompositePath.getPath()"
  fullName: "com.azure.cosmos.models.CompositePath.getPath()"
  name: "getPath()"
  nameWithType: "CompositePath.getPath()"
  summary: "Gets path."
  syntax: "public String getPath()"
  desc: "Gets path."
  returns:
    description: "the path."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CompositePath.hashCode()"
  fullName: "com.azure.cosmos.models.CompositePath.hashCode()"
  name: "hashCode()"
  nameWithType: "CompositePath.hashCode()"
  overridden: "java.lang.Object.hashCode()"
  syntax: "public int hashCode()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CompositePath.setOrder(com.azure.cosmos.models.CompositePathSortOrder)"
  fullName: "com.azure.cosmos.models.CompositePath.setOrder(CompositePathSortOrder order)"
  name: "setOrder(CompositePathSortOrder order)"
  nameWithType: "CompositePath.setOrder(CompositePathSortOrder order)"
  summary: "Gets the sort order for the composite path."
  parameters:
  - description: "the sort order."
    name: "order"
    type: "<xref href=\"com.azure.cosmos.models.CompositePathSortOrder?alt=com.azure.cosmos.models.CompositePathSortOrder&text=CompositePathSortOrder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompositePath setOrder(CompositePathSortOrder order)"
  desc: "Gets the sort order for the composite path.\n\nFor example if you want to run the query \"SELECT \\* FROM c ORDER BY c.age asc, c.height desc\", then you need to make the order for \"/age\" \"ascending\" and the order for \"/height\" \"descending\"."
  returns:
    description: "the CompositePath."
    type: "<xref href=\"com.azure.cosmos.models.CompositePath?alt=com.azure.cosmos.models.CompositePath&text=CompositePath\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CompositePath.setPath(java.lang.String)"
  fullName: "com.azure.cosmos.models.CompositePath.setPath(String path)"
  name: "setPath(String path)"
  nameWithType: "CompositePath.setPath(String path)"
  summary: "Sets path."
  parameters:
  - description: "the path."
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompositePath setPath(String path)"
  desc: "Sets path."
  returns:
    description: "the CompositePath."
    type: "<xref href=\"com.azure.cosmos.models.CompositePath?alt=com.azure.cosmos.models.CompositePath&text=CompositePath\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a composite path of the IndexingPolicy in the Azure Cosmos DB database service. A composite path is used in a composite index. For example if you want to run a query like \"SELECT \\* FROM c ORDER BY c.age, c.height\", then you need to add \"/age\" and \"/height\" as composite paths to your composite index."
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.34.0
