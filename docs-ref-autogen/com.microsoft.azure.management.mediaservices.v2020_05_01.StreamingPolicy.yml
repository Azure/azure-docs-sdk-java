### YamlMime:JavaType
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy"
name: "StreamingPolicy"
nameWithType: "StreamingPolicy"
summary: "Type representing Streaming<wbr>Policy."
syntax: "public interface StreamingPolicy extends HasInner<StreamingPolicyInner>, Indexable, Refreshable<StreamingPolicy>, Updatable<StreamingPolicy.Update>, HasManager<MediaManager>"
methods:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.commonEncryptionCbcs()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.commonEncryptionCbcs()"
  name: "commonEncryptionCbcs()"
  nameWithType: "StreamingPolicy.commonEncryptionCbcs()"
  modifiers:
  - "abstract"
  syntax: "public abstract CommonEncryptionCbcs commonEncryptionCbcs()"
  returns:
    description: "the commonEncryptionCbcs value."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.CommonEncryptionCbcs?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.commonEncryptionCenc()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.commonEncryptionCenc()"
  name: "commonEncryptionCenc()"
  nameWithType: "StreamingPolicy.commonEncryptionCenc()"
  modifiers:
  - "abstract"
  syntax: "public abstract CommonEncryptionCenc commonEncryptionCenc()"
  returns:
    description: "the commonEncryptionCenc value."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.CommonEncryptionCenc?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.CommonEncryptionCenc&text=CommonEncryptionCenc\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.created()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.created()"
  name: "created()"
  nameWithType: "StreamingPolicy.created()"
  modifiers:
  - "abstract"
  syntax: "public abstract DateTime created()"
  returns:
    description: "the created value."
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.defaultContentKeyPolicyName()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.defaultContentKeyPolicyName()"
  name: "defaultContentKeyPolicyName()"
  nameWithType: "StreamingPolicy.defaultContentKeyPolicyName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String defaultContentKeyPolicyName()"
  returns:
    description: "the defaultContentKeyPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.envelopeEncryption()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.envelopeEncryption()"
  name: "envelopeEncryption()"
  nameWithType: "StreamingPolicy.envelopeEncryption()"
  modifiers:
  - "abstract"
  syntax: "public abstract EnvelopeEncryption envelopeEncryption()"
  returns:
    description: "the envelopeEncryption value."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption&text=EnvelopeEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.id()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.id()"
  name: "id()"
  nameWithType: "StreamingPolicy.id()"
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.name()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.name()"
  name: "name()"
  nameWithType: "StreamingPolicy.name()"
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.noEncryption()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.noEncryption()"
  name: "noEncryption()"
  nameWithType: "StreamingPolicy.noEncryption()"
  modifiers:
  - "abstract"
  syntax: "public abstract NoEncryption noEncryption()"
  returns:
    description: "the noEncryption value."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.NoEncryption?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.NoEncryption&text=NoEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.type()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.type()"
  name: "type()"
  nameWithType: "StreamingPolicy.type()"
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Type representing StreamingPolicy."
implements:
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.StreamingPolicyInner?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.StreamingPolicyInner&text=StreamingPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.Indexable?alt=com.microsoft.azure.arm.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.arm.model.Refreshable?alt=com.microsoft.azure.arm.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy&text=StreamingPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.Updatable?alt=com.microsoft.azure.arm.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.Update?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicy.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.resources.models.HasManager?alt=com.microsoft.azure.arm.resources.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.MediaManager?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.MediaManager&text=MediaManager\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
