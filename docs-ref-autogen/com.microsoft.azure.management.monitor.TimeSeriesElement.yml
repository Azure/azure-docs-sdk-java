### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.monitor.TimeSeriesElement.data()
  name: data()
  nameWithType: TimeSeriesElement.data()
  returns:
    description: <p>the data value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.monitor.MetricValue?alt=com.microsoft.azure.management.monitor.MetricValue&text=MetricValue" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get an array of data points representing the metric values. This is only returned if a result type of data is specified.</p>

    <p></p>
  syntax: public List<MetricValue> data()
  uid: com.microsoft.azure.management.monitor.TimeSeriesElement.data()
- fullName: com.microsoft.azure.management.monitor.TimeSeriesElement.metadatavalues()
  name: metadatavalues()
  nameWithType: TimeSeriesElement.metadatavalues()
  returns:
    description: <p>the metadatavalues value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.monitor.MetadataValue?alt=com.microsoft.azure.management.monitor.MetadataValue&text=MetadataValue" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the metadata values returned if $filter was specified in the call.</p>

    <p></p>
  syntax: public List<MetadataValue> metadatavalues()
  uid: com.microsoft.azure.management.monitor.TimeSeriesElement.metadatavalues()
- fullName: com.microsoft.azure.management.monitor.TimeSeriesElement.withData(List<MetricValue> data)
  name: withData(List<MetricValue> data)
  nameWithType: TimeSeriesElement.withData(List<MetricValue> data)
  parameters:
  - description: <p>the data value to set </p>
    name: data
    type: List&lt;<xref href="com.microsoft.azure.management.monitor.MetricValue?alt=com.microsoft.azure.management.monitor.MetricValue&text=MetricValue" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the TimeSeriesElement object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.TimeSeriesElement?alt=com.microsoft.azure.management.monitor.TimeSeriesElement&text=TimeSeriesElement" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set an array of data points representing the metric values. This is only returned if a result type of data is specified.</p>

    <p></p>
  syntax: public TimeSeriesElement withData(List<MetricValue> data)
  uid: com.microsoft.azure.management.monitor.TimeSeriesElement.withData(List<MetricValue>)
- fullName: com.microsoft.azure.management.monitor.TimeSeriesElement.withMetadatavalues(List<MetadataValue> metadatavalues)
  name: withMetadatavalues(List<MetadataValue> metadatavalues)
  nameWithType: TimeSeriesElement.withMetadatavalues(List<MetadataValue> metadatavalues)
  parameters:
  - description: <p>the metadatavalues value to set </p>
    name: metadatavalues
    type: List&lt;<xref href="com.microsoft.azure.management.monitor.MetadataValue?alt=com.microsoft.azure.management.monitor.MetadataValue&text=MetadataValue" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the TimeSeriesElement object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.TimeSeriesElement?alt=com.microsoft.azure.management.monitor.TimeSeriesElement&text=TimeSeriesElement" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the metadata values returned if $filter was specified in the call.</p>

    <p></p>
  syntax: public TimeSeriesElement withMetadatavalues(List<MetadataValue> metadatavalues)
  uid: com.microsoft.azure.management.monitor.TimeSeriesElement.withMetadatavalues(List<MetadataValue>)
nameWithType: TimeSeriesElement
syntax: public class TimeSeriesElement
type: class
uid: com.microsoft.azure.management.monitor.TimeSeriesElement
fullName: com.microsoft.azure.management.monitor.TimeSeriesElement
name: TimeSeriesElement
package: com.microsoft.azure.management.monitor
summary: <p>A time series result type. The discriminator value is always TimeSeries in this case. </p>
metadata: {}
