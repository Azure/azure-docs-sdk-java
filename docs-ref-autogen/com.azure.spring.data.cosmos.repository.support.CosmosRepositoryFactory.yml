### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.support.CosmosRepositoryFactory"
fullName: "com.azure.spring.data.cosmos.repository.support.CosmosRepositoryFactory"
name: "CosmosRepositoryFactory"
nameWithType: "CosmosRepositoryFactory"
summary: "Factory class for cosmos repository contains application context and operations information"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.<R>getTargetRepositoryViaReflection(java.lang.Class<?>,java.lang.Object...)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.<R>getTargetRepositoryViaReflection(org.springframework.data.repository.core.RepositoryInformation,java.lang.Object...)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.<T,ID>getEntityInformation(java.lang.Class<T>)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.<T>getRepository(java.lang.Class<T>)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.<T>getRepository(java.lang.Class<T>,java.lang.Object)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.<T>getRepository(java.lang.Class<T>,org.springframework.data.repository.core.support.RepositoryComposition.RepositoryFragments)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.addQueryCreationListener(org.springframework.data.repository.core.support.QueryCreationListener<?>)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.addRepositoryProxyPostProcessor(org.springframework.data.repository.core.support.RepositoryProxyPostProcessor)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.getProjectionFactory(java.lang.ClassLoader,org.springframework.beans.factory.BeanFactory)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.getQueryLookupStrategy(org.springframework.data.repository.query.QueryLookupStrategy.Key,org.springframework.data.repository.query.QueryMethodEvaluationContextProvider)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.getQueryMethods()"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryBaseClass(org.springframework.data.repository.core.RepositoryMetadata)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryFragments(org.springframework.data.repository.core.RepositoryMetadata)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryInformation(org.springframework.data.repository.core.RepositoryMetadata,org.springframework.data.repository.core.support.RepositoryComposition.RepositoryFragments)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryMetadata(java.lang.Class<?>)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepository(org.springframework.data.repository.core.RepositoryInformation)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.setBeanClassLoader(java.lang.ClassLoader)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.setBeanFactory(org.springframework.beans.factory.BeanFactory)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.setEvaluationContextProvider(org.springframework.data.repository.query.QueryMethodEvaluationContextProvider)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.setNamedQueries(org.springframework.data.repository.core.NamedQueries)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.setQueryLookupStrategyKey(org.springframework.data.repository.query.QueryLookupStrategy.Key)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.setRepositoryBaseClass(java.lang.Class<?>)"
- "org.springframework.data.repository.core.support.RepositoryFactorySupport.validate(org.springframework.data.repository.core.RepositoryMetadata)"
syntax: "public class CosmosRepositoryFactory extends RepositoryFactorySupport"
constructors:
- "com.azure.spring.data.cosmos.repository.support.CosmosRepositoryFactory.CosmosRepositoryFactory(com.azure.spring.data.cosmos.core.CosmosOperations)"
methods:
- "com.azure.spring.data.cosmos.repository.support.CosmosRepositoryFactory.<T,ID>getEntityInformation(java.lang.Class<T>)"
- "com.azure.spring.data.cosmos.repository.support.CosmosRepositoryFactory.getQueryLookupStrategy(org.springframework.data.repository.query.QueryLookupStrategy.Key,org.springframework.data.repository.query.QueryMethodEvaluationContextProvider)"
- "com.azure.spring.data.cosmos.repository.support.CosmosRepositoryFactory.getRepositoryBaseClass(org.springframework.data.repository.core.RepositoryMetadata)"
- "com.azure.spring.data.cosmos.repository.support.CosmosRepositoryFactory.getTargetRepository(org.springframework.data.repository.core.RepositoryInformation)"
type: "class"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:3.3.0
