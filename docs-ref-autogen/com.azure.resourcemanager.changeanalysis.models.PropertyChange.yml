### YamlMime:JavaType
uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange"
fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange"
name: "PropertyChange"
nameWithType: "PropertyChange"
summary: "Data of a property change."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PropertyChange"
constructors:
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.PropertyChange()"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.PropertyChange()"
  name: "PropertyChange()"
  nameWithType: "PropertyChange.PropertyChange()"
  syntax: "public PropertyChange()"
methods:
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.changeCategory()"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.changeCategory()"
  name: "changeCategory()"
  nameWithType: "PropertyChange.changeCategory()"
  summary: "Get the change<wbr>Category property: The change category."
  syntax: "public ChangeCategory changeCategory()"
  desc: "Get the changeCategory property: The change category."
  returns:
    description: "the changeCategory value."
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.ChangeCategory?alt=com.azure.resourcemanager.changeanalysis.models.ChangeCategory&text=ChangeCategory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.changeType()"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.changeType()"
  name: "changeType()"
  nameWithType: "PropertyChange.changeType()"
  summary: "Get the change<wbr>Type property: The type of the change."
  syntax: "public ChangeType changeType()"
  desc: "Get the changeType property: The type of the change."
  returns:
    description: "the changeType value."
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.ChangeType?alt=com.azure.resourcemanager.changeanalysis.models.ChangeType&text=ChangeType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.description()"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.description()"
  name: "description()"
  nameWithType: "PropertyChange.description()"
  summary: "Get the description property: The description of the changed property."
  syntax: "public String description()"
  desc: "Get the description property: The description of the changed property."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.displayName()"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.displayName()"
  name: "displayName()"
  nameWithType: "PropertyChange.displayName()"
  summary: "Get the display<wbr>Name property: The enhanced display name of the json path."
  syntax: "public String displayName()"
  desc: "Get the displayName property: The enhanced display name of the json path. E.g., the json path value\\[0\\].properties will be translated to something meaningful like slots\\[\"Staging\"\\].properties."
  returns:
    description: "the displayName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.isDataMasked()"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.isDataMasked()"
  name: "isDataMasked()"
  nameWithType: "PropertyChange.isDataMasked()"
  summary: "Get the is<wbr>Data<wbr>Masked property: The boolean indicating whether the old<wbr>Value and new<wbr>Value are masked."
  syntax: "public Boolean isDataMasked()"
  desc: "Get the isDataMasked property: The boolean indicating whether the oldValue and newValue are masked. The values are masked if it contains sensitive information that the user doesn't have access to."
  returns:
    description: "the isDataMasked value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.jsonPath()"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.jsonPath()"
  name: "jsonPath()"
  nameWithType: "PropertyChange.jsonPath()"
  summary: "Get the json<wbr>Path property: The json path of the changed property."
  syntax: "public String jsonPath()"
  desc: "Get the jsonPath property: The json path of the changed property."
  returns:
    description: "the jsonPath value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.level()"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.level()"
  name: "level()"
  nameWithType: "PropertyChange.level()"
  summary: "Get the level property: The level property."
  syntax: "public Level level()"
  desc: "Get the level property: The level property."
  returns:
    description: "the level value."
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.Level?alt=com.azure.resourcemanager.changeanalysis.models.Level&text=Level\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.newValue()"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.newValue()"
  name: "newValue()"
  nameWithType: "PropertyChange.newValue()"
  summary: "Get the new<wbr>Value property: The value of the property after the change."
  syntax: "public String newValue()"
  desc: "Get the newValue property: The value of the property after the change."
  returns:
    description: "the newValue value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.oldValue()"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.oldValue()"
  name: "oldValue()"
  nameWithType: "PropertyChange.oldValue()"
  summary: "Get the old<wbr>Value property: The value of the property before the change."
  syntax: "public String oldValue()"
  desc: "Get the oldValue property: The value of the property before the change."
  returns:
    description: "the oldValue value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.validate()"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.validate()"
  name: "validate()"
  nameWithType: "PropertyChange.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withChangeCategory(com.azure.resourcemanager.changeanalysis.models.ChangeCategory)"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withChangeCategory(ChangeCategory changeCategory)"
  name: "withChangeCategory(ChangeCategory changeCategory)"
  nameWithType: "PropertyChange.withChangeCategory(ChangeCategory changeCategory)"
  summary: "Set the change<wbr>Category property: The change category."
  parameters:
  - description: "the changeCategory value to set."
    name: "changeCategory"
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.ChangeCategory?alt=com.azure.resourcemanager.changeanalysis.models.ChangeCategory&text=ChangeCategory\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PropertyChange withChangeCategory(ChangeCategory changeCategory)"
  desc: "Set the changeCategory property: The change category."
  returns:
    description: "the PropertyChange object itself."
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.PropertyChange?alt=com.azure.resourcemanager.changeanalysis.models.PropertyChange&text=PropertyChange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withChangeType(com.azure.resourcemanager.changeanalysis.models.ChangeType)"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withChangeType(ChangeType changeType)"
  name: "withChangeType(ChangeType changeType)"
  nameWithType: "PropertyChange.withChangeType(ChangeType changeType)"
  summary: "Set the change<wbr>Type property: The type of the change."
  parameters:
  - description: "the changeType value to set."
    name: "changeType"
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.ChangeType?alt=com.azure.resourcemanager.changeanalysis.models.ChangeType&text=ChangeType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PropertyChange withChangeType(ChangeType changeType)"
  desc: "Set the changeType property: The type of the change."
  returns:
    description: "the PropertyChange object itself."
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.PropertyChange?alt=com.azure.resourcemanager.changeanalysis.models.PropertyChange&text=PropertyChange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "PropertyChange.withDescription(String description)"
  summary: "Set the description property: The description of the changed property."
  parameters:
  - description: "the description value to set."
    name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PropertyChange withDescription(String description)"
  desc: "Set the description property: The description of the changed property."
  returns:
    description: "the PropertyChange object itself."
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.PropertyChange?alt=com.azure.resourcemanager.changeanalysis.models.PropertyChange&text=PropertyChange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withDisplayName(java.lang.String)"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withDisplayName(String displayName)"
  name: "withDisplayName(String displayName)"
  nameWithType: "PropertyChange.withDisplayName(String displayName)"
  summary: "Set the display<wbr>Name property: The enhanced display name of the json path."
  parameters:
  - description: "the displayName value to set."
    name: "displayName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PropertyChange withDisplayName(String displayName)"
  desc: "Set the displayName property: The enhanced display name of the json path. E.g., the json path value\\[0\\].properties will be translated to something meaningful like slots\\[\"Staging\"\\].properties."
  returns:
    description: "the PropertyChange object itself."
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.PropertyChange?alt=com.azure.resourcemanager.changeanalysis.models.PropertyChange&text=PropertyChange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withIsDataMasked(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withIsDataMasked(Boolean isDataMasked)"
  name: "withIsDataMasked(Boolean isDataMasked)"
  nameWithType: "PropertyChange.withIsDataMasked(Boolean isDataMasked)"
  summary: "Set the is<wbr>Data<wbr>Masked property: The boolean indicating whether the old<wbr>Value and new<wbr>Value are masked."
  parameters:
  - description: "the isDataMasked value to set."
    name: "isDataMasked"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PropertyChange withIsDataMasked(Boolean isDataMasked)"
  desc: "Set the isDataMasked property: The boolean indicating whether the oldValue and newValue are masked. The values are masked if it contains sensitive information that the user doesn't have access to."
  returns:
    description: "the PropertyChange object itself."
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.PropertyChange?alt=com.azure.resourcemanager.changeanalysis.models.PropertyChange&text=PropertyChange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withJsonPath(java.lang.String)"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withJsonPath(String jsonPath)"
  name: "withJsonPath(String jsonPath)"
  nameWithType: "PropertyChange.withJsonPath(String jsonPath)"
  summary: "Set the json<wbr>Path property: The json path of the changed property."
  parameters:
  - description: "the jsonPath value to set."
    name: "jsonPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PropertyChange withJsonPath(String jsonPath)"
  desc: "Set the jsonPath property: The json path of the changed property."
  returns:
    description: "the PropertyChange object itself."
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.PropertyChange?alt=com.azure.resourcemanager.changeanalysis.models.PropertyChange&text=PropertyChange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withLevel(com.azure.resourcemanager.changeanalysis.models.Level)"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withLevel(Level level)"
  name: "withLevel(Level level)"
  nameWithType: "PropertyChange.withLevel(Level level)"
  summary: "Set the level property: The level property."
  parameters:
  - description: "the level value to set."
    name: "level"
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.Level?alt=com.azure.resourcemanager.changeanalysis.models.Level&text=Level\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PropertyChange withLevel(Level level)"
  desc: "Set the level property: The level property."
  returns:
    description: "the PropertyChange object itself."
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.PropertyChange?alt=com.azure.resourcemanager.changeanalysis.models.PropertyChange&text=PropertyChange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withNewValue(java.lang.String)"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withNewValue(String newValue)"
  name: "withNewValue(String newValue)"
  nameWithType: "PropertyChange.withNewValue(String newValue)"
  summary: "Set the new<wbr>Value property: The value of the property after the change."
  parameters:
  - description: "the newValue value to set."
    name: "newValue"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PropertyChange withNewValue(String newValue)"
  desc: "Set the newValue property: The value of the property after the change."
  returns:
    description: "the PropertyChange object itself."
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.PropertyChange?alt=com.azure.resourcemanager.changeanalysis.models.PropertyChange&text=PropertyChange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withOldValue(java.lang.String)"
  fullName: "com.azure.resourcemanager.changeanalysis.models.PropertyChange.withOldValue(String oldValue)"
  name: "withOldValue(String oldValue)"
  nameWithType: "PropertyChange.withOldValue(String oldValue)"
  summary: "Set the old<wbr>Value property: The value of the property before the change."
  parameters:
  - description: "the oldValue value to set."
    name: "oldValue"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PropertyChange withOldValue(String oldValue)"
  desc: "Set the oldValue property: The value of the property before the change."
  returns:
    description: "the PropertyChange object itself."
    type: "<xref href=\"com.azure.resourcemanager.changeanalysis.models.PropertyChange?alt=com.azure.resourcemanager.changeanalysis.models.PropertyChange&text=PropertyChange\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Data of a property change."
metadata: {}
package: "com.azure.resourcemanager.changeanalysis.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-changeanalysis:1.0.0
