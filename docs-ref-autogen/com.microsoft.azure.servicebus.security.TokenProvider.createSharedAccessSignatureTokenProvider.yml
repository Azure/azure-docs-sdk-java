### YamlMime:JavaMember
nameWithType: TokenProvider.createSharedAccessSignatureTokenProvider
type: method
members:
- fullName: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(String sasKeyName, String sasKey)
  name: createSharedAccessSignatureTokenProvider(String sasKeyName, String sasKey)
  nameWithType: TokenProvider.createSharedAccessSignatureTokenProvider(String sasKeyName, String sasKey)
  parameters:
  - description: <p>SAS key name </p>
    name: sasKeyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>SAS key value </p>
    name: sasKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an instance of Shared Access Signature token provider with the given key name, key value. </p>
    type: <xref href="com.microsoft.azure.servicebus.security.TokenProvider?alt=com.microsoft.azure.servicebus.security.TokenProvider&text=TokenProvider" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a Shared Access Signature token provider with the given key name and key value. Returned token provider creates tokens with validity of 20 minutes. This is a utility method. </p>
  syntax: public static TokenProvider createSharedAccessSignatureTokenProvider(String sasKeyName, String sasKey)
  uid: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(String,String)
- fullName: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(String sasToken, Instant sasTokenValidUntil)
  name: createSharedAccessSignatureTokenProvider(String sasToken, Instant sasTokenValidUntil)
  nameWithType: TokenProvider.createSharedAccessSignatureTokenProvider(String sasToken, Instant sasTokenValidUntil)
  parameters:
  - description: <p>Already created Shared Access Signature token to be returned by <xref uid="com.microsoft.azure.servicebus.security.TokenProvider.getSecurityTokenAsync(String)" data-throw-if-not-resolved="false">getSecurityTokenAsync(String)</xref> method. </p>
    name: sasToken
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Instant when the token expires </p>
    name: sasTokenValidUntil
    type: <xref href="Instant?alt=Instant&text=Instant" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an instance of Shared Access Signature token provider that always returns an already created token. </p>
    type: <xref href="com.microsoft.azure.servicebus.security.TokenProvider?alt=com.microsoft.azure.servicebus.security.TokenProvider&text=TokenProvider" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a Shared Access Signature token provider that always returns an already created token. This is a utility method. </p>
  syntax: public static TokenProvider createSharedAccessSignatureTokenProvider(String sasToken, Instant sasTokenValidUntil)
  uid: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(String,Instant)
uid: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider*
fullName: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(String sasKeyName, String sasKey)
name: createSharedAccessSignatureTokenProvider(String sasKeyName, String sasKey)
package: com.microsoft.azure.servicebus.security
metadata: {}
