### YamlMime:JavaType
uid: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity"
fullName: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity"
name: "EncryptionPropertiesIdentity"
nameWithType: "EncryptionPropertiesIdentity"
summary: "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **EncryptionPropertiesIdentity**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity?alt=com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity&text=EncryptionPropertiesIdentity\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.EncryptionPropertiesIdentity()"
  fullName: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.EncryptionPropertiesIdentity()"
  name: "EncryptionPropertiesIdentity()"
  nameWithType: "EncryptionPropertiesIdentity.EncryptionPropertiesIdentity()"
  summary: "Creates an instance of Encryption<wbr>Properties<wbr>Identity class."
  syntax: "public EncryptionPropertiesIdentity()"
  desc: "Creates an instance of EncryptionPropertiesIdentity class."
methods:
- uid: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "EncryptionPropertiesIdentity.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Encryption<wbr>Properties<wbr>Identity from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static EncryptionPropertiesIdentity fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the EncryptionPropertiesIdentity."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads an instance of EncryptionPropertiesIdentity from the JsonReader."
  returns:
    description: "An instance of EncryptionPropertiesIdentity if the JsonReader was pointing to an instance of it, or null\n if it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity?alt=com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity&text=EncryptionPropertiesIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.resourceId()"
  fullName: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.resourceId()"
  name: "resourceId()"
  nameWithType: "EncryptionPropertiesIdentity.resourceId()"
  summary: "Get the resource<wbr>Id property: User assigned identity to use for accessing key encryption key Url."
  syntax: "public String resourceId()"
  desc: "Get the resourceId property: User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
  returns:
    description: "the resourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "EncryptionPropertiesIdentity.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.type()"
  fullName: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.type()"
  name: "type()"
  nameWithType: "EncryptionPropertiesIdentity.type()"
  summary: "Get the type property: Managed identity type to use for accessing encryption key Url."
  syntax: "public Type type()"
  desc: "Get the type property: Managed identity type to use for accessing encryption key Url."
  returns:
    description: "the type value."
    type: "<xref href=\"com.azure.resourcemanager.loadtesting.models.Type?alt=com.azure.resourcemanager.loadtesting.models.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.validate()"
  fullName: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.validate()"
  name: "validate()"
  nameWithType: "EncryptionPropertiesIdentity.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.withResourceId(java.lang.String)"
  fullName: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.withResourceId(String resourceId)"
  name: "withResourceId(String resourceId)"
  nameWithType: "EncryptionPropertiesIdentity.withResourceId(String resourceId)"
  summary: "Set the resource<wbr>Id property: User assigned identity to use for accessing key encryption key Url."
  parameters:
  - description: "the resourceId value to set."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EncryptionPropertiesIdentity withResourceId(String resourceId)"
  desc: "Set the resourceId property: User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
  returns:
    description: "the EncryptionPropertiesIdentity object itself."
    type: "<xref href=\"com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity?alt=com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity&text=EncryptionPropertiesIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.withType(com.azure.resourcemanager.loadtesting.models.Type)"
  fullName: "com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity.withType(Type type)"
  name: "withType(Type type)"
  nameWithType: "EncryptionPropertiesIdentity.withType(Type type)"
  summary: "Set the type property: Managed identity type to use for accessing encryption key Url."
  parameters:
  - description: "the type value to set."
    name: "type"
    type: "<xref href=\"com.azure.resourcemanager.loadtesting.models.Type?alt=com.azure.resourcemanager.loadtesting.models.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EncryptionPropertiesIdentity withType(Type type)"
  desc: "Set the type property: Managed identity type to use for accessing encryption key Url."
  returns:
    description: "the EncryptionPropertiesIdentity object itself."
    type: "<xref href=\"com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity?alt=com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity&text=EncryptionPropertiesIdentity\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity?alt=com.azure.resourcemanager.loadtesting.models.EncryptionPropertiesIdentity&text=EncryptionPropertiesIdentity\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.loadtesting.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-loadtesting:1.1.0
