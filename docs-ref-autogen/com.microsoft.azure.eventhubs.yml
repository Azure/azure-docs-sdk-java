items:
- uid: com.microsoft.azure.eventhubs
  id: eventhubs
  children:
  - com.microsoft.azure.eventhubs._event_data
  - com.microsoft.azure.eventhubs._event_data._system_properties
  - com.microsoft.azure.eventhubs._event_hub_client
  - com.microsoft.azure.eventhubs._partition_receive_handler
  - com.microsoft.azure.eventhubs._partition_receiver
  - com.microsoft.azure.eventhubs._partition_runtime_information
  - com.microsoft.azure.eventhubs._partition_sender
  - com.microsoft.azure.eventhubs._receive_pump
  - com.microsoft.azure.eventhubs._receive_pump._i_partition_receiver
  - com.microsoft.azure.eventhubs._receiver_options
  - com.microsoft.azure.eventhubs._receiver_runtime_information
  href: com.microsoft.azure.eventhubs.yml
  langs:
  - java
  name: com.microsoft.azure.eventhubs
  nameWithType: com.microsoft.azure.eventhubs
  fullName: com.microsoft.azure.eventhubs
  type: Namespace
  source:
    remote:
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
    startLine: 4
  syntax:
    content: package com.microsoft.azure.eventhubs
references:
- uid: com.microsoft.azure.eventhubs.extensions
- uid: com.microsoft.azure.eventhubs._event_data
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data.yml
  name: EventData
  nameWithType: EventData
  fullName: com.microsoft.azure.eventhubs.EventData
  type: Class
  summary: >-
    <p>The data structure encapsulating the Event being sent-to and received-from EventHubs. Each EventHubs partition can be visualized as a Stream of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>

    <p>Serializing a received <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> with AMQP sections other than ApplicationProperties (with primitive java types) and Data section is not supported. </p>

    <p>Here's how AMQP message sections map to <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. Here's the reference used for AMQP 1.0 specification: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><preformatted>

    i.   <xref href="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false"></xref> - AMQPMessage.ApplicationProperties section

    ii.  <xref href="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false"></xref> - if AMQPMessage.Body has Data section

    iii. <xref href="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false"></xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections

    </preformatted> While using client libraries released by Microsoft Azure EventHubs, sections (i) and (ii) alone are sufficient. Section (iii) is used for advanced scenarios, where the sending application uses third-party AMQP library to send the message to EventHubs and the receiving application uses this client library to receive <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class EventData
- uid: com.microsoft.azure.eventhubs._event_hub_client
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: EventHubClient
  nameWithType: EventHubClient
  fullName: com.microsoft.azure.eventhubs.EventHubClient
  type: Class
  summary: >-
    <p>Anchor class - all EventHub client operations STARTS here.</p>

    <p></p>
  syntax:
    content: public class EventHubClient extends ClientEntity
- uid: com.microsoft.azure.eventhubs._partition_receive_handler
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
  name: PartitionReceiveHandler
  nameWithType: PartitionReceiveHandler
  fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
  type: Class
  summary: >-
    <p>A handler class for the receive operation. Use any implementation of this abstract class to specify user action when using <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>'s setReceiveHandler().</p>

    <p></p>
  syntax:
    content: public class PartitionReceiveHandler
- uid: com.microsoft.azure.eventhubs._partition_receiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: PartitionReceiver
  nameWithType: PartitionReceiver
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver
  type: Class
  summary: >-
    <p>This is a logical representation of receiving from a EventHub partition. </p>

    <p>A <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> is tied to a ConsumerGroup + EventHub Partition combination. <itemizedlist><listitem><p>If an epoch based <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> (i.e., <xref href="com.microsoft.azure.eventhubs._partition_receiver.getEpoch()" data-throw-if-not-resolved="false"></xref> != 0) is created, EventHubs service will guarantee only 1 active receiver exists per ConsumerGroup + Partition combo. This is the recommended approach to create a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. </p></listitem><listitem><p>Multiple receivers per ConsumerGroup + Partition combo can be created using non-epoch receivers. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public class PartitionReceiver extends ClientEntity implements IReceiverSettingsProvider
- uid: com.microsoft.azure.eventhubs._partition_runtime_information
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_runtime_information.yml
  name: PartitionRuntimeInformation
  nameWithType: PartitionRuntimeInformation
  fullName: com.microsoft.azure.eventhubs.PartitionRuntimeInformation
  type: Class
  syntax:
    content: public class PartitionRuntimeInformation
- uid: com.microsoft.azure.eventhubs._partition_sender
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_sender.yml
  name: PartitionSender
  nameWithType: PartitionSender
  fullName: com.microsoft.azure.eventhubs.PartitionSender
  type: Class
  summary: >-
    <p>This sender class is a logical representation of sending events to a specific EventHub partition. Do not use this class if you do not care about sending events to specific partitions. Instead, use <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> method.</p>

    <p></p>
  syntax:
    content: public class PartitionSender extends ClientEntity
- uid: com.microsoft.azure.eventhubs._receive_pump
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receive_pump.yml
  name: ReceivePump
  nameWithType: ReceivePump
  fullName: com.microsoft.azure.eventhubs.ReceivePump
  type: Class
  syntax:
    content: public class ReceivePump
- uid: com.microsoft.azure.eventhubs._receiver_options
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receiver_options.yml
  name: ReceiverOptions
  nameWithType: ReceiverOptions
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions
  type: Class
  summary: <p>Represents various optional behaviors which can be turned on or off during the creation of a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ReceiverOptions
- uid: com.microsoft.azure.eventhubs._receiver_runtime_information
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receiver_runtime_information.yml
  name: ReceiverRuntimeInformation
  nameWithType: ReceiverRuntimeInformation
  fullName: com.microsoft.azure.eventhubs.ReceiverRuntimeInformation
  type: Class
  summary: <p>Represents the temporal receiver runtime information for a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. Current received <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> and <xref href="com.microsoft.azure.eventhubs._receiver_runtime_information" data-throw-if-not-resolved="false"></xref> can be used to find approximate value of pending events (which are not processed yet). </p>
  syntax:
    content: public class ReceiverRuntimeInformation
- uid: com.microsoft.azure.eventhubs._receive_pump._i_partition_receiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receive_pump._i_partition_receiver.yml
  name: ReceivePump.IPartitionReceiver
  nameWithType: ReceivePump.IPartitionReceiver
  fullName: com.microsoft.azure.eventhubs.ReceivePump.IPartitionReceiver
  type: Interface
  syntax:
    content: public interface IPartitionReceiver
- uid: com.microsoft.azure.eventhubs._event_data._system_properties
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data._system_properties.yml
  name: EventData.SystemProperties
  nameWithType: EventData.SystemProperties
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties
  type: Class
  syntax:
    content: public class SystemProperties
