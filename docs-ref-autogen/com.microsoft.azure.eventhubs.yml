### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs
  id: eventhubs
  children:
  - com.microsoft.azure.eventhubs._authorization_failed_exception
  - com.microsoft.azure.eventhubs._batch_options
  - com.microsoft.azure.eventhubs._communication_exception
  - com.microsoft.azure.eventhubs._connection_string_builder
  - com.microsoft.azure.eventhubs._error_context
  - com.microsoft.azure.eventhubs._event_data
  - com.microsoft.azure.eventhubs._event_data._system_properties
  - com.microsoft.azure.eventhubs._event_data_batch
  - com.microsoft.azure.eventhubs._event_hub_client
  - com.microsoft.azure.eventhubs._event_hub_exception
  - com.microsoft.azure.eventhubs._event_hub_runtime_information
  - com.microsoft.azure.eventhubs._event_position
  - com.microsoft.azure.eventhubs._illegal_connection_string_format_exception
  - com.microsoft.azure.eventhubs._illegal_entity_exception
  - com.microsoft.azure.eventhubs._operation_cancelled_exception
  - com.microsoft.azure.eventhubs._partition_receive_handler
  - com.microsoft.azure.eventhubs._partition_receiver
  - com.microsoft.azure.eventhubs._partition_runtime_information
  - com.microsoft.azure.eventhubs._partition_sender
  - com.microsoft.azure.eventhubs._payload_size_exceeded_exception
  - com.microsoft.azure.eventhubs._quota_exceeded_exception
  - com.microsoft.azure.eventhubs._receiver_disconnected_exception
  - com.microsoft.azure.eventhubs._receiver_options
  - com.microsoft.azure.eventhubs._receiver_runtime_information
  - com.microsoft.azure.eventhubs._retry_policy
  - com.microsoft.azure.eventhubs._server_busy_exception
  - com.microsoft.azure.eventhubs._timeout_exception
  href: com.microsoft.azure.eventhubs.yml
  langs:
  - java
  name: com.microsoft.azure.eventhubs
  nameWithType: com.microsoft.azure.eventhubs
  fullName: com.microsoft.azure.eventhubs
  type: Namespace
  source:
    remote:
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/AuthorizationFailedException.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/AuthorizationFailedException.java
    startLine: 4
  syntax:
    content: package com.microsoft.azure.eventhubs
references:
- uid: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl.yml
  name: com.microsoft.azure.eventhubs.impl
  nameWithType: com.microsoft.azure.eventhubs.impl
  fullName: com.microsoft.azure.eventhubs.impl
  type: Namespace
  syntax:
    content: package com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs._authorization_failed_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._authorization_failed_exception.yml
  name: AuthorizationFailedException
  nameWithType: AuthorizationFailedException
  fullName: com.microsoft.azure.eventhubs.AuthorizationFailedException
  type: Class
  summary: >-
    <p>Authorization failed exception is thrown when error is encountered during authorizing user's permission to run the intended operations. When encountered this exception user should check whether the token/key provided in the connection string (e.g. one passed to <xref uid="com.microsoft.azure.eventhubs._event_hub_client.create(final String,final Executor)" data-throw-if-not-resolved="false">EventHubClient#create(String, Executor)</xref>) is valid, and has correct execution right for the intended operations (e.g. Receive call will need Listen claim associated with the key/token).</p>

    <p></p>
  syntax:
    content: public class AuthorizationFailedException extends EventHubException
- uid: com.microsoft.azure.eventhubs._batch_options
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._batch_options.yml
  name: BatchOptions
  nameWithType: BatchOptions
  fullName: com.microsoft.azure.eventhubs.BatchOptions
  type: Class
  summary: "<p>\r\n  <xref uid=\"com.microsoft.azure.eventhubs._batch_options\" data-throw-if-not-resolved=\"false\">BatchOptions</xref> is used to create <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref>es.</p>\r\n<p>If you're creating <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref>es with <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client\" data-throw-if-not-resolved=\"false\">EventHubClient</xref>, then you can set a partitionKey and maxMessageSize using the .with() method. Alternatively, if you'd like the default settings, simply construct <xref uid=\"com.microsoft.azure.eventhubs._batch_options\" data-throw-if-not-resolved=\"false\">BatchOptions</xref> with the void constructor. Default settings:<itemizedlist><listitem><p>partitionKey is null</p></listitem><listitem><p>maxMessageSize is the maximum allowed size</p></listitem></itemizedlist></p>\r\n<p>If you're creating <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref>es with <xref uid=\"com.microsoft.azure.eventhubs._partition_sender\" data-throw-if-not-resolved=\"false\">PartitionSender</xref>, then you can only set a maxMessageSize using the .with() method. Alternatively, if you'd like the default settings, simply construct <xref uid=\"com.microsoft.azure.eventhubs._batch_options\" data-throw-if-not-resolved=\"false\">BatchOptions</xref> with the void constructor. Default settings:<itemizedlist><listitem><p>maxMessageSize is the maximum allowed size</p></listitem><listitem><p>Note: if you set a partition key, an <xref uid=\"\" data-throw-if-not-resolved=\"false\">IllegalArgumentException</xref> will be thrown.</p></listitem></itemizedlist></p>\r\n<p>To construct either type of batch, create a <xref uid=\"com.microsoft.azure.eventhubs._batch_options\" data-throw-if-not-resolved=\"false\">BatchOptions</xref> object and pass it into the appropriate createBatch method. If using <xref uid=\"com.microsoft.azure.eventhubs._partition_sender\" data-throw-if-not-resolved=\"false\">PartitionSender</xref>, then use (<xref uid=\"com.microsoft.azure.eventhubs._partition_sender.createBatch(BatchOptions)\" data-throw-if-not-resolved=\"false\">PartitionSender#createBatch(BatchOptions)</xref>. If using <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client\" data-throw-if-not-resolved=\"false\">EventHubClient</xref>, then use <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client.createBatch(BatchOptions)\" data-throw-if-not-resolved=\"false\">EventHubClient#createBatch(BatchOptions)</xref>.</p>\r\n<p>\r\n  <pre>\r\n    <code>// Note: For all examples, 'client' is an instance of EventHubClient. The usage is the same for PartitionSender,\r\n    however, you can NOT set a partition key when using PartitionSender\r\n    \r\n    // Create EventDataBatch with defaults\r\n    EventDataBatch edb1 = client.createBatch();\r\n    \r\n    // Create EventDataBatch with custom partitionKey\r\n    BatchOptions options = new BatchOptions().with( options -&gt; options.partitionKey = \"foo\");\r\n    EventDataBatch edb2 = client.createBatch(options);\r\n    \r\n    // Create EventDataBatch with custom partitionKey and maxMessageSize\r\n    BatchOptions options = new BatchOptions().with ( options -&gt; {\r\n        options.partitionKey = \"foo\";\r\n        options.maxMessageSize = 100 * 1024;\r\n    };\r\n    EventDataBatch edb3 = client.createBatch(options);\r\n    </code>\r\n  </pre>\r\n</p>"
  syntax:
    content: public class BatchOptions
- uid: com.microsoft.azure.eventhubs._communication_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._communication_exception.yml
  name: CommunicationException
  nameWithType: CommunicationException
  fullName: com.microsoft.azure.eventhubs.CommunicationException
  type: Class
  summary: >-
    <p>This exception is thrown when there is a client side connectivity issue. When receiving this exception user should check client connectivity settings to the service: <itemizedlist><listitem><p>Check for correct hostname and port number used in endpoint. </p></listitem><listitem><p>Check for any possible proxy settings that can block amqp ports </p></listitem><listitem><p>Check for any firewall settings that can block amqp ports </p></listitem><listitem><p>Check for any general network connectivity issues, as well as network latency. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public class CommunicationException extends EventHubException
- uid: com.microsoft.azure.eventhubs._connection_string_builder
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._connection_string_builder.yml
  name: ConnectionStringBuilder
  nameWithType: ConnectionStringBuilder
  fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder
  type: Class
  summary: "<p>\r\n  <xref uid=\"com.microsoft.azure.eventhubs._connection_string_builder\" data-throw-if-not-resolved=\"false\">ConnectionStringBuilder</xref> can be used to construct a connection string which can establish communication with Event Hub instances. In addition to constructing a connection string, the <xref uid=\"com.microsoft.azure.eventhubs._connection_string_builder\" data-throw-if-not-resolved=\"false\">ConnectionStringBuilder</xref> can be used to modify an existing connection string. </p>\r\n<p>Sample Code: <pre><code>// Construct a new connection string\r\n       ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder()\r\n           .setNamespaceName(\"EventHubsNamespaceName\")\r\n           .setEventHubName(\"EventHubsEntityName\")\r\n           .setSasKeyName(\"SharedAccessSignatureKeyName\")\r\n           .setSasKey(\"SharedAccessSignatureKey\")\r\n    \r\n    string connString = connectionStringBuilder.build();\r\n    \r\n    // Modify an existing connection string\r\n    ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(existingConnectionString)\r\n        .setEventHubName(\"SomeOtherEventHubsName\")\r\n        .setOperationTimeout(Duration.ofSeconds(30)\r\n    \r\n    string connString = connectionStringBuilder.build();\r\n    </code></pre></p>\r\n<p>A connection string is basically a string consisting of key-value pairs separated by \";\". The basic format is {{ &lt;}key{&gt;}={ &lt;}value{&gt;}[;{ &lt;}key{&gt;}={ &lt;}value{&gt;}]} where supported key name are as follow: <itemizedlist><listitem><p>Endpoint - the URL that contains the EventHubs namespace </p></listitem><listitem><p>EntityPath - the EventHub name which you are connecting to </p></listitem><listitem><p>SharedAccessKeyName - the key name to the corresponding shared access policy rule for the namespace, or entity. </p></listitem><listitem><p>SharedAccessKey - the key for the corresponding shared access policy rule of the namespace or entity. </p></listitem></itemizedlist></p>"
  syntax:
    content: public class ConnectionStringBuilder
- uid: com.microsoft.azure.eventhubs._error_context
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._error_context.yml
  name: ErrorContext
  nameWithType: ErrorContext
  fullName: com.microsoft.azure.eventhubs.ErrorContext
  type: Class
  syntax:
    content: public class ErrorContext
- uid: com.microsoft.azure.eventhubs._event_data
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data.yml
  name: EventData
  nameWithType: EventData
  fullName: com.microsoft.azure.eventhubs.EventData
  type: Interface
  summary: >-
    <p>The data structure encapsulating the Event being sent-to and received-from EventHubs. Each EventHubs partition can be visualized as a Stream of <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>

    <p>Serializing a received <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive java types) and Data section is not supported. </p>

    <p>Here's how AMQP message sections map to <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Here's the reference used for AMQP 1.0 specification: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><pre>

    i.   <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> - AMQPMessage.ApplicationProperties section

    ii.  <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref> - if AMQPMessage.Body has Data section

    iii. <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections

    </pre> While using client libraries released by Microsoft Azure EventHubs, sections (i) and (ii) alone are sufficient. Section (iii) is used for advanced scenarios, where the sending application uses third-party AMQP library to send the message to EventHubs and the receiving application uses this client library to receive <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
  syntax:
    content: public interface EventData
- uid: com.microsoft.azure.eventhubs._event_data_batch
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data_batch.yml
  name: EventDataBatch
  nameWithType: EventDataBatch
  fullName: com.microsoft.azure.eventhubs.EventDataBatch
  type: Interface
  summary: <p>Helper for creating a batch/collection of <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> objects to be used while Sending to EventHubs </p>
  syntax:
    content: public interface EventDataBatch
- uid: com.microsoft.azure.eventhubs._event_hub_client
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: EventHubClient
  nameWithType: EventHubClient
  fullName: com.microsoft.azure.eventhubs.EventHubClient
  type: Interface
  summary: >-
    <p>Anchor class - all EventHub client operations STARTS here.</p>

    <p></p>
  syntax:
    content: public interface EventHubClient
- uid: com.microsoft.azure.eventhubs._event_hub_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_hub_exception.yml
  name: EventHubException
  nameWithType: EventHubException
  fullName: com.microsoft.azure.eventhubs.EventHubException
  type: Class
  summary: <p>This is the base exception that service bus will produce for all error cases. </p>
  syntax:
    content: public class EventHubException
- uid: com.microsoft.azure.eventhubs._event_hub_runtime_information
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_hub_runtime_information.yml
  name: EventHubRuntimeInformation
  nameWithType: EventHubRuntimeInformation
  fullName: com.microsoft.azure.eventhubs.EventHubRuntimeInformation
  type: Class
  summary: <p>Holds information about Event Hubs which can come handy while performing data-plane operations like <xref uid="com.microsoft.azure.eventhubs._event_hub_client.createPartitionSender(final String)" data-throw-if-not-resolved="false">EventHubClient#createPartitionSender(String)</xref> and <xref uid="com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final EventPosition)" data-throw-if-not-resolved="false">EventHubClient#createReceiver(String, String, EventPosition)</xref></p>
  syntax:
    content: public class EventHubRuntimeInformation
- uid: com.microsoft.azure.eventhubs._event_position
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_position.yml
  name: EventPosition
  nameWithType: EventPosition
  fullName: com.microsoft.azure.eventhubs.EventPosition
  type: Interface
  summary: <p>Defines a position of an <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> in the event hub partition. The position can be an Offset, Sequence Number, or EnqueuedTime. </p>
  syntax:
    content: public interface EventPosition
- uid: com.microsoft.azure.eventhubs._illegal_connection_string_format_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._illegal_connection_string_format_exception.yml
  name: IllegalConnectionStringFormatException
  nameWithType: IllegalConnectionStringFormatException
  fullName: com.microsoft.azure.eventhubs.IllegalConnectionStringFormatException
  type: Class
  summary: <p>This exception is thrown when the connection string provided does not meet the requirement for connection. </p>
  syntax:
    content: public class IllegalConnectionStringFormatException
- uid: com.microsoft.azure.eventhubs._illegal_entity_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._illegal_entity_exception.yml
  name: IllegalEntityException
  nameWithType: IllegalEntityException
  fullName: com.microsoft.azure.eventhubs.IllegalEntityException
  type: Class
  summary: >-
    <p>This exception is thrown for the following reasons: <itemizedlist><listitem><p>When the entity user attempted to connect does not exist </p></listitem><listitem><p>The entity user wants to connect is disabled </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public class IllegalEntityException extends EventHubException
- uid: com.microsoft.azure.eventhubs._operation_cancelled_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._operation_cancelled_exception.yml
  name: OperationCancelledException
  nameWithType: OperationCancelledException
  fullName: com.microsoft.azure.eventhubs.OperationCancelledException
  type: Class
  summary: <p>This exception is thrown when the underlying Amqp layer encounter an abnormal link abort or disconnect of connection in an unexpected fashion. </p>
  syntax:
    content: public class OperationCancelledException extends EventHubException
- uid: com.microsoft.azure.eventhubs._partition_receive_handler
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
  name: PartitionReceiveHandler
  nameWithType: PartitionReceiveHandler
  fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
  type: Interface
  summary: >-
    <p>The handler to invoke after receiving <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>s from Microsoft Azure EventHubs. Use any implementation of this abstract class to specify user action when using <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>'s setReceiveHandler().</p>

    <p></p>
  syntax:
    content: public interface PartitionReceiveHandler
- uid: com.microsoft.azure.eventhubs._partition_receiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: PartitionReceiver
  nameWithType: PartitionReceiver
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver
  type: Interface
  summary: >-
    <p>This is a logical representation of receiving from a EventHub partition. </p>

    <p>A <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> is tied to a ConsumerGroup + EventHub Partition combination. <itemizedlist><listitem><p>If an epoch based <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> (i.e., <xref uid="com.microsoft.azure.eventhubs._partition_receiver.getEpoch()" data-throw-if-not-resolved="false">PartitionReceiver.getEpoch</xref> != 0) is created, EventHubs service will guarantee only 1 active receiver exists per ConsumerGroup + Partition combo. This is the recommended approach to create a <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. </p></listitem><listitem><p>Multiple receivers per ConsumerGroup + Partition combo can be created using non-epoch receivers. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public interface PartitionReceiver
- uid: com.microsoft.azure.eventhubs._partition_runtime_information
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_runtime_information.yml
  name: PartitionRuntimeInformation
  nameWithType: PartitionRuntimeInformation
  fullName: com.microsoft.azure.eventhubs.PartitionRuntimeInformation
  type: Class
  syntax:
    content: public class PartitionRuntimeInformation
- uid: com.microsoft.azure.eventhubs._partition_sender
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_sender.yml
  name: PartitionSender
  nameWithType: PartitionSender
  fullName: com.microsoft.azure.eventhubs.PartitionSender
  type: Interface
  summary: >-
    <p>This sender class is a logical representation of sending events to a specific EventHub partition. Do not use this class if you do not care about sending events to specific partitions. Instead, use <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false">EventHubClient#send</xref> method.</p>

    <p></p>
  syntax:
    content: public interface PartitionSender
- uid: com.microsoft.azure.eventhubs._payload_size_exceeded_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._payload_size_exceeded_exception.yml
  name: PayloadSizeExceededException
  nameWithType: PayloadSizeExceededException
  fullName: com.microsoft.azure.eventhubs.PayloadSizeExceededException
  type: Class
  summary: >-
    <p>this exception is thrown when user attempts to send a event data or brokered message that has exceeded the allowed payload size as defined by the service. Note that in a batch send scenario the limit can include possible batch overhead.</p>

    <p></p>
  syntax:
    content: public class PayloadSizeExceededException extends EventHubException
- uid: com.microsoft.azure.eventhubs._quota_exceeded_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._quota_exceeded_exception.yml
  name: QuotaExceededException
  nameWithType: QuotaExceededException
  fullName: com.microsoft.azure.eventhubs.QuotaExceededException
  type: Class
  syntax:
    content: public class QuotaExceededException extends EventHubException
- uid: com.microsoft.azure.eventhubs._receiver_disconnected_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receiver_disconnected_exception.yml
  name: ReceiverDisconnectedException
  nameWithType: ReceiverDisconnectedException
  fullName: com.microsoft.azure.eventhubs.ReceiverDisconnectedException
  type: Class
  summary: >-
    <p>This exception is thrown when a EventHubReceiver is being disconnected because of one of the following reason: <itemizedlist><listitem><p>user attempts to connect a non-epoch receiver to a event hub partition, when there is an epoch receiver connected to the partition. </p></listitem><listitem><p>you are using an epoch receiver for a given partition but another epoch receiver with a higher epoch value connects to the same partition. </p></listitem></itemizedlist>

    User should make sure either all code are using non-epoch receivers, or ensure that there is only one epoch receiver processing a given partition at any given point in time.</p>

    <p></p>
  syntax:
    content: public class ReceiverDisconnectedException extends EventHubException
- uid: com.microsoft.azure.eventhubs._receiver_options
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receiver_options.yml
  name: ReceiverOptions
  nameWithType: ReceiverOptions
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions
  type: Class
  summary: <p>Represents various optional behaviors which can be turned on or off during the creation of a <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. </p>
  syntax:
    content: public class ReceiverOptions
- uid: com.microsoft.azure.eventhubs._receiver_runtime_information
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receiver_runtime_information.yml
  name: ReceiverRuntimeInformation
  nameWithType: ReceiverRuntimeInformation
  fullName: com.microsoft.azure.eventhubs.ReceiverRuntimeInformation
  type: Class
  summary: <p>Represents the temporal end of stream information of an EventHubs Partition. </p>
  syntax:
    content: public class ReceiverRuntimeInformation
- uid: com.microsoft.azure.eventhubs._retry_policy
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._retry_policy.yml
  name: RetryPolicy
  nameWithType: RetryPolicy
  fullName: com.microsoft.azure.eventhubs.RetryPolicy
  type: Class
  syntax:
    content: public class RetryPolicy
- uid: com.microsoft.azure.eventhubs._server_busy_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._server_busy_exception.yml
  name: ServerBusyException
  nameWithType: ServerBusyException
  fullName: com.microsoft.azure.eventhubs.ServerBusyException
  type: Class
  summary: >-
    <p>Server busy exception is thrown when the current entity's activity has put excessive load onto the service. When encountered this exception user should wait at least 4 seconds before any retry/runtime operations for the said entity again.</p>

    <p></p>
  syntax:
    content: public class ServerBusyException extends EventHubException
- uid: com.microsoft.azure.eventhubs._timeout_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._timeout_exception.yml
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: com.microsoft.azure.eventhubs.TimeoutException
  type: Class
  summary: >-
    <p>This exception is thrown when the operation has exceeded the predetermined time limit. User should check connectivity is healthy between client process and service.</p>

    <p></p>
  syntax:
    content: public class TimeoutException extends EventHubException
- uid: com.microsoft.azure.eventhubs._event_data._system_properties
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data._system_properties.yml
  name: EventData.SystemProperties
  nameWithType: EventData.SystemProperties
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties
  type: Class
  syntax:
    content: public class SystemProperties
