### YamlMime:JavaMember
uid: "com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.listAsync*"
fullName: "com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.listAsync"
name: "listAsync"
nameWithType: "ExpressRoutePortsLocationsClientImpl.listAsync"
members:
- uid: "com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.listAsync()"
  fullName: "com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.listAsync()"
  name: "listAsync()"
  nameWithType: "ExpressRoutePortsLocationsClientImpl.listAsync()"
  summary: "Retrieves all ExpressRoutePort peering locations. Does not return available bandwidths for each location. Available bandwidths can only be obtained when retrieving a specific peering location."
  syntax: "public PagedFlux<ExpressRoutePortsLocationInner> listAsync()"
  returns:
    description: "response for ListExpressRoutePortsLocations API service call."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner&text=ExpressRoutePortsLocationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.network.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
