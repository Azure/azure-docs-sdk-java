### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasParent.parent()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
methods:
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.administratorUserName()
  name: administratorUserName()
  nameWithType: VirtualMachineScaleSetVM.administratorUserName()
  returns:
    description: <p>the name of the admin user </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String administratorUserName()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.administratorUserName()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.availabilitySetId()
  name: availabilitySetId()
  nameWithType: VirtualMachineScaleSetVM.availabilitySetId()
  returns:
    description: <p>the resource ID of the availability set that this virtual machine instance belongs to </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String availabilitySetId()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.availabilitySetId()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.bootDiagnosticEnabled()
  name: bootDiagnosticEnabled()
  nameWithType: VirtualMachineScaleSetVM.bootDiagnosticEnabled()
  returns:
    description: <p>true if the boot diagnostic is enabled, false otherwise </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean bootDiagnosticEnabled()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.bootDiagnosticEnabled()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.bootDiagnosticStorageAccountUri()
  name: bootDiagnosticStorageAccountUri()
  nameWithType: VirtualMachineScaleSetVM.bootDiagnosticStorageAccountUri()
  returns:
    description: <p>the URI to the storage account storing boot diagnostics log </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String bootDiagnosticStorageAccountUri()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.bootDiagnosticStorageAccountUri()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.computerName()
  name: computerName()
  nameWithType: VirtualMachineScaleSetVM.computerName()
  returns:
    description: <p>the virtual machine instance computer name with the VM scale set prefix. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String computerName()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.computerName()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.dataDisks()
  name: dataDisks()
  nameWithType: VirtualMachineScaleSetVM.dataDisks()
  returns:
    description: <p>the managed data disks associated with this virtual machine instance, indexed by LUN </p>
    type: Map&lt;Integer, <xref href="com.microsoft.azure.management.compute.VirtualMachineDataDisk?alt=com.microsoft.azure.management.compute.VirtualMachineDataDisk&text=VirtualMachineDataDisk" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<Integer, VirtualMachineDataDisk> dataDisks()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.dataDisks()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.deallocate()
  name: deallocate()
  nameWithType: VirtualMachineScaleSetVM.deallocate()
  summary: <p>Shuts down the virtual machine instance and releases the associated compute resources. </p>
  syntax: public void deallocate()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.deallocate()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.deallocateAsync()
  name: deallocateAsync()
  nameWithType: VirtualMachineScaleSetVM.deallocateAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Shuts down the virtual machine instance and releases the associated compute resources.</p>

    <p></p>
  syntax: public Completable deallocateAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.deallocateAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.delete()
  name: delete()
  nameWithType: VirtualMachineScaleSetVM.delete()
  summary: <p>Deletes the virtual machine instance. </p>
  syntax: public void delete()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.delete()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.deleteAsync()
  name: deleteAsync()
  nameWithType: VirtualMachineScaleSetVM.deleteAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the virtual machine instance.</p>

    <p></p>
  syntax: public Completable deleteAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.deleteAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.diagnosticsProfile()
  name: diagnosticsProfile()
  nameWithType: VirtualMachineScaleSetVM.diagnosticsProfile()
  returns:
    description: <p>the diagnostics profile of the virtual machine instance </p>
    type: <xref href="com.microsoft.azure.management.compute.DiagnosticsProfile?alt=com.microsoft.azure.management.compute.DiagnosticsProfile&text=DiagnosticsProfile" data-throw-if-not-resolved="False"/>
  syntax: public DiagnosticsProfile diagnosticsProfile()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.diagnosticsProfile()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.extensions()
  name: extensions()
  nameWithType: VirtualMachineScaleSetVM.extensions()
  returns:
    description: <p>the extensions associated with the virtual machine instance, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSetVMInstanceExtension?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSetVMInstanceExtension&text=VirtualMachineScaleSetVMInstanceExtension" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, VirtualMachineScaleSetVMInstanceExtension> extensions()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.extensions()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.getNetworkInterface(String name)
  name: getNetworkInterface(String name)
  nameWithType: VirtualMachineScaleSetVM.getNetworkInterface(String name)
  parameters:
  - description: <p>the name of the network interface </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the network interface </p>
    type: <xref href="com.microsoft.azure.management.network.VirtualMachineScaleSetNetworkInterface?alt=com.microsoft.azure.management.network.VirtualMachineScaleSetNetworkInterface&text=VirtualMachineScaleSetNetworkInterface" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a network interface associated with this virtual machine instance.</p>

    <p></p>
  syntax: public VirtualMachineScaleSetNetworkInterface getNetworkInterface(String name)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.getNetworkInterface(String)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.getOSCustomImage()
  name: getOSCustomImage()
  nameWithType: VirtualMachineScaleSetVM.getOSCustomImage()
  returns:
    description: <p>the custom image that the virtual machine instance operating system is based on, null be returned otherwise </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineCustomImage?alt=com.microsoft.azure.management.compute.VirtualMachineCustomImage&text=VirtualMachineCustomImage" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachineCustomImage getOSCustomImage()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.getOSCustomImage()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.getOSPlatformImage()
  name: getOSPlatformImage()
  nameWithType: VirtualMachineScaleSetVM.getOSPlatformImage()
  returns:
    description: <p>the platform image that the virtual machine instance operating system is based on, null be returned otherwise </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineImage?alt=com.microsoft.azure.management.compute.VirtualMachineImage&text=VirtualMachineImage" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachineImage getOSPlatformImage()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.getOSPlatformImage()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.instanceId()
  name: instanceId()
  nameWithType: VirtualMachineScaleSetVM.instanceId()
  returns:
    description: <p>the instance ID assigned to this virtual machine instance </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String instanceId()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.instanceId()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.instanceView()
  name: instanceView()
  nameWithType: VirtualMachineScaleSetVM.instanceView()
  returns:
    description: <p>the instance view </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineInstanceView?alt=com.microsoft.azure.management.compute.VirtualMachineInstanceView&text=VirtualMachineInstanceView" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the instance view of the virtual machine instance. </p>

    <p>To get the latest instance view use .</p>

    <p></p>
  syntax: public VirtualMachineInstanceView instanceView()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.instanceView()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isLatestScaleSetUpdateApplied()
  name: isLatestScaleSetUpdateApplied()
  nameWithType: VirtualMachineScaleSetVM.isLatestScaleSetUpdateApplied()
  returns:
    description: <p>true if the latest scale set model changes are applied to the virtual machine instance </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isLatestScaleSetUpdateApplied()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isLatestScaleSetUpdateApplied()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isLinuxPasswordAuthenticationEnabled()
  name: isLinuxPasswordAuthenticationEnabled()
  nameWithType: VirtualMachineScaleSetVM.isLinuxPasswordAuthenticationEnabled()
  returns:
    description: <p>true if this is a Linux virtual machine and password based login is enabled, false otherwise </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isLinuxPasswordAuthenticationEnabled()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isLinuxPasswordAuthenticationEnabled()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isManagedDiskEnabled()
  name: isManagedDiskEnabled()
  nameWithType: VirtualMachineScaleSetVM.isManagedDiskEnabled()
  returns:
    description: <p>true if managed disk is used for the virtual machine's disks (os, data) </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isManagedDiskEnabled()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isManagedDiskEnabled()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isOSBasedOnCustomImage()
  name: isOSBasedOnCustomImage()
  nameWithType: VirtualMachineScaleSetVM.isOSBasedOnCustomImage()
  returns:
    description: <p>true if the operating system of the virtual machine instance is based on custom image </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isOSBasedOnCustomImage()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isOSBasedOnCustomImage()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isOSBasedOnPlatformImage()
  name: isOSBasedOnPlatformImage()
  nameWithType: VirtualMachineScaleSetVM.isOSBasedOnPlatformImage()
  returns:
    description: <p>true if the operating system of the virtual machine instance is based on platform image </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isOSBasedOnPlatformImage()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isOSBasedOnPlatformImage()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isOSBasedOnStoredImage()
  name: isOSBasedOnStoredImage()
  nameWithType: VirtualMachineScaleSetVM.isOSBasedOnStoredImage()
  returns:
    description: <p>true if the operating system of the virtual machine instance is based on stored image </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isOSBasedOnStoredImage()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isOSBasedOnStoredImage()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isWindowsAutoUpdateEnabled()
  name: isWindowsAutoUpdateEnabled()
  nameWithType: VirtualMachineScaleSetVM.isWindowsAutoUpdateEnabled()
  returns:
    description: <p>true if this is a Windows virtual machine and automatic update is turned on, false otherwise </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isWindowsAutoUpdateEnabled()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isWindowsAutoUpdateEnabled()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isWindowsVMAgentProvisioned()
  name: isWindowsVMAgentProvisioned()
  nameWithType: VirtualMachineScaleSetVM.isWindowsVMAgentProvisioned()
  returns:
    description: <p>true if this is a Windows virtual machine and VM agent is provisioned, false otherwise </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isWindowsVMAgentProvisioned()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.isWindowsVMAgentProvisioned()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.listNetworkInterfaces()
  name: listNetworkInterfaces()
  nameWithType: VirtualMachineScaleSetVM.listNetworkInterfaces()
  returns:
    description: <p>the network interfaces associated with this virtual machine instance. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.network.VirtualMachineScaleSetNetworkInterface?alt=com.microsoft.azure.management.network.VirtualMachineScaleSetNetworkInterface&text=VirtualMachineScaleSetNetworkInterface" data-throw-if-not-resolved="False"/>&gt;
  syntax: public PagedList<VirtualMachineScaleSetNetworkInterface> listNetworkInterfaces()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.listNetworkInterfaces()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.networkInterfaceIds()
  name: networkInterfaceIds()
  nameWithType: VirtualMachineScaleSetVM.networkInterfaceIds()
  returns:
    description: <p>the list of resource ID of network interface associated with the virtual machine instance </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public List<String> networkInterfaceIds()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.networkInterfaceIds()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osDiskCachingType()
  name: osDiskCachingType()
  nameWithType: VirtualMachineScaleSetVM.osDiskCachingType()
  returns:
    description: <p>the caching type of the operating system disk </p>
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  syntax: public CachingTypes osDiskCachingType()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osDiskCachingType()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osDiskId()
  name: osDiskId()
  nameWithType: VirtualMachineScaleSetVM.osDiskId()
  returns:
    description: <p>resource ID of the managed disk backing OS disk </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String osDiskId()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osDiskId()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osDiskName()
  name: osDiskName()
  nameWithType: VirtualMachineScaleSetVM.osDiskName()
  returns:
    description: <p>the name of the operating system disk </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String osDiskName()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osDiskName()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osDiskSizeInGB()
  name: osDiskSizeInGB()
  nameWithType: VirtualMachineScaleSetVM.osDiskSizeInGB()
  returns:
    description: <p>the size of the operating system disk </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int osDiskSizeInGB()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osDiskSizeInGB()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osProfile()
  name: osProfile()
  nameWithType: VirtualMachineScaleSetVM.osProfile()
  returns:
    description: <p>the operating system profile of an virtual machine instance </p>
    type: <xref href="com.microsoft.azure.management.compute.OSProfile?alt=com.microsoft.azure.management.compute.OSProfile&text=OSProfile" data-throw-if-not-resolved="False"/>
  syntax: public OSProfile osProfile()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osProfile()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osType()
  name: osType()
  nameWithType: VirtualMachineScaleSetVM.osType()
  returns:
    description: <p>the operating system type </p>
    type: <xref href="com.microsoft.azure.management.compute.OperatingSystemTypes?alt=com.microsoft.azure.management.compute.OperatingSystemTypes&text=OperatingSystemTypes" data-throw-if-not-resolved="False"/>
  syntax: public OperatingSystemTypes osType()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osType()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osUnmanagedDiskVhdUri()
  name: osUnmanagedDiskVhdUri()
  nameWithType: VirtualMachineScaleSetVM.osUnmanagedDiskVhdUri()
  returns:
    description: <p>VHD URI to the operating system disk </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String osUnmanagedDiskVhdUri()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.osUnmanagedDiskVhdUri()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.platformImageReference()
  name: platformImageReference()
  nameWithType: VirtualMachineScaleSetVM.platformImageReference()
  returns:
    description: <p>reference to the platform image that the virtual machine instance operating system is based on, null will be returned if the operating system is based on custom image </p>
    type: <xref href="com.microsoft.azure.management.compute.ImageReference?alt=com.microsoft.azure.management.compute.ImageReference&text=ImageReference" data-throw-if-not-resolved="False"/>
  syntax: public ImageReference platformImageReference()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.platformImageReference()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.powerOff()
  name: powerOff()
  nameWithType: VirtualMachineScaleSetVM.powerOff()
  summary: <p>Stops the virtual machine instance. </p>
  syntax: public void powerOff()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.powerOff()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.powerOffAsync()
  name: powerOffAsync()
  nameWithType: VirtualMachineScaleSetVM.powerOffAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Stops the virtual machine instance.</p>

    <p></p>
  syntax: public Completable powerOffAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.powerOffAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.powerState()
  name: powerState()
  nameWithType: VirtualMachineScaleSetVM.powerState()
  returns:
    description: <p>the power state of the virtual machine instance </p>
    type: <xref href="com.microsoft.azure.management.compute.PowerState?alt=com.microsoft.azure.management.compute.PowerState&text=PowerState" data-throw-if-not-resolved="False"/>
  syntax: public PowerState powerState()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.powerState()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.primaryNetworkInterfaceId()
  name: primaryNetworkInterfaceId()
  nameWithType: VirtualMachineScaleSetVM.primaryNetworkInterfaceId()
  returns:
    description: <p>resource ID of primary network interface associated with virtual machine instance </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String primaryNetworkInterfaceId()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.primaryNetworkInterfaceId()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.refreshInstanceView()
  name: refreshInstanceView()
  nameWithType: VirtualMachineScaleSetVM.refreshInstanceView()
  returns:
    description: <p>the instance view </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineInstanceView?alt=com.microsoft.azure.management.compute.VirtualMachineInstanceView&text=VirtualMachineInstanceView" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Refreshes the instance view.</p>

    <p></p>
  syntax: public VirtualMachineInstanceView refreshInstanceView()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.refreshInstanceView()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.refreshInstanceViewAsync()
  name: refreshInstanceViewAsync()
  nameWithType: VirtualMachineScaleSetVM.refreshInstanceViewAsync()
  returns:
    description: <p>an observable that emits the instance view of the virtual machine instance. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.compute.VirtualMachineInstanceView?alt=com.microsoft.azure.management.compute.VirtualMachineInstanceView&text=VirtualMachineInstanceView" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Refreshes the instance view.</p>

    <p></p>
  syntax: public Observable<VirtualMachineInstanceView> refreshInstanceViewAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.refreshInstanceViewAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.reimage()
  name: reimage()
  nameWithType: VirtualMachineScaleSetVM.reimage()
  summary: <p>Updates the version of the installed operating system in the virtual machine instance. </p>
  syntax: public void reimage()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.reimage()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.reimageAsync()
  name: reimageAsync()
  nameWithType: VirtualMachineScaleSetVM.reimageAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the version of the installed operating system in the virtual machine instance.</p>

    <p></p>
  syntax: public Completable reimageAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.reimageAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.restart()
  name: restart()
  nameWithType: VirtualMachineScaleSetVM.restart()
  summary: <p>Restarts the virtual machine instance. </p>
  syntax: public void restart()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.restart()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.restartAsync()
  name: restartAsync()
  nameWithType: VirtualMachineScaleSetVM.restartAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Restarts the virtual machine instance.</p>

    <p></p>
  syntax: public Completable restartAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.restartAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.size()
  name: size()
  nameWithType: VirtualMachineScaleSetVM.size()
  returns:
    description: <p>virtual machine instance size </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineSizeTypes?alt=com.microsoft.azure.management.compute.VirtualMachineSizeTypes&text=VirtualMachineSizeTypes" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachineSizeTypes size()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.size()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.sku()
  name: sku()
  nameWithType: VirtualMachineScaleSetVM.sku()
  returns:
    description: <p>the SKU of the virtual machine instance, this will be SKU used while creating the parent virtual machine scale set </p>
    type: <xref href="com.microsoft.azure.management.compute.Sku?alt=com.microsoft.azure.management.compute.Sku&text=Sku" data-throw-if-not-resolved="False"/>
  syntax: public Sku sku()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.sku()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.start()
  name: start()
  nameWithType: VirtualMachineScaleSetVM.start()
  summary: <p>Starts the virtual machine instance. </p>
  syntax: public void start()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.start()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.startAsync()
  name: startAsync()
  nameWithType: VirtualMachineScaleSetVM.startAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Starts the virtual machine instance.</p>

    <p></p>
  syntax: public Completable startAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.startAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.storageProfile()
  name: storageProfile()
  nameWithType: VirtualMachineScaleSetVM.storageProfile()
  returns:
    description: <p>the storage profile of the virtual machine instance </p>
    type: <xref href="com.microsoft.azure.management.compute.StorageProfile?alt=com.microsoft.azure.management.compute.StorageProfile&text=StorageProfile" data-throw-if-not-resolved="False"/>
  syntax: public StorageProfile storageProfile()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.storageProfile()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.storedImageUnmanagedVhdUri()
  name: storedImageUnmanagedVhdUri()
  nameWithType: VirtualMachineScaleSetVM.storedImageUnmanagedVhdUri()
  returns:
    description: <p>VHD URI of the custom image that the virtual machine instance operating system is based on, null will be returned if the operating system is based on platform image </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String storedImageUnmanagedVhdUri()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.storedImageUnmanagedVhdUri()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.unmanagedDataDisks()
  name: unmanagedDataDisks()
  nameWithType: VirtualMachineScaleSetVM.unmanagedDataDisks()
  returns:
    description: <p>the unmanaged data disks associated with this virtual machine instance, indexed by LUN </p>
    type: Map&lt;Integer, <xref href="com.microsoft.azure.management.compute.VirtualMachineUnmanagedDataDisk?alt=com.microsoft.azure.management.compute.VirtualMachineUnmanagedDataDisk&text=VirtualMachineUnmanagedDataDisk" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<Integer, VirtualMachineUnmanagedDataDisk> unmanagedDataDisks()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.unmanagedDataDisks()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.windowsTimeZone()
  name: windowsTimeZone()
  nameWithType: VirtualMachineScaleSetVM.windowsTimeZone()
  returns:
    description: <p>the time zone of the Windows virtual machine </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String windowsTimeZone()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM.windowsTimeZone()
nameWithType: VirtualMachineScaleSetVM
syntax: public interface VirtualMachineScaleSetVM extends Resource,ChildResource<VirtualMachineScaleSet>,Refreshable<VirtualMachineScaleSetVM>,HasInner<VirtualMachineScaleSetVMInner>
type: interface
uid: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM
fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSetVM
name: VirtualMachineScaleSetVM
package: com.microsoft.azure.management.compute
summary: <p>An immutable client-side representation of a virtual machine instance in an Azure virtual machine scale set. </p>
metadata: {}
