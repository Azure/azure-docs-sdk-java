### YamlMime:ManagedReference
items:
- uid: system.fabric.ReplicaRole
  id: ReplicaRole
  parent: system.fabric
  children:
  - system.fabric.ReplicaRole.ActiveSecondary
  - system.fabric.ReplicaRole.get(int)
  - system.fabric.ReplicaRole.getValue()
  - system.fabric.ReplicaRole.IdleSecondary
  - system.fabric.ReplicaRole.None
  - system.fabric.ReplicaRole.Primary
  - system.fabric.ReplicaRole.Unknown
  href: system.fabric.ReplicaRole.yml
  langs:
  - java
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: system.fabric.ReplicaRole
  type: Enum
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicaRole.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/ReplicaRole.java
    startLine: 10
  package: system.fabric
  summary: "<p>Indicates the role of a stateful service replica. </p>\r\n<p>\r\n  <b>Remarks:</b>Service Fabric requires different behaviors from a service replica depending on what role it currently performs. </p>"
  syntax: &o1
    content: public enum ReplicaRole
  inheritance:
  - java.lang.Object
  - java.lang.Enum<ReplicaRole>
- uid: system.fabric.ReplicaRole.ActiveSecondary
  id: ActiveSecondary
  parent: system.fabric.ReplicaRole
  href: system.fabric.ReplicaRole.yml
  langs:
  - java
  name: ActiveSecondary
  nameWithType: ReplicaRole.ActiveSecondary
  fullName: system.fabric.ReplicaRole.ActiveSecondary
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ReplicaRole.java
    startLine: 40
  package: system.fabric
  summary: "<p>Refers to a replica in the set that receives state updates from the Primary replica, applies them, and sends acknowledgements back. Secondary replicas must participate in the write quorum for a replica set. There can be multiple active Secondary replicas in a replica set at a time. The number of active Secondary replicas is configurable that the reliability subsystem should maintain. </p>"
  syntax:
    content: public ActiveSecondary=(4)
- uid: system.fabric.ReplicaRole.get(int)
  id: get(int)
  parent: system.fabric.ReplicaRole
  href: system.fabric.ReplicaRole.yml
  langs:
  - java
  name: get(int value)
  nameWithType: ReplicaRole.get(int value)
  fullName: system.fabric.ReplicaRole.get(int value)
  overload: system.fabric.ReplicaRole.get*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ReplicaRole.java
    startLine: 55
  package: system.fabric
  syntax:
    content: public static ReplicaRole get(int value)
    parameters:
    - id: value
      type: f75371fa
    return:
      type: system.fabric.ReplicaRole
- uid: system.fabric.ReplicaRole.getValue()
  id: getValue()
  parent: system.fabric.ReplicaRole
  href: system.fabric.ReplicaRole.yml
  langs:
  - java
  name: getValue()
  nameWithType: ReplicaRole.getValue()
  fullName: system.fabric.ReplicaRole.getValue()
  overload: system.fabric.ReplicaRole.getValue*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ReplicaRole.java
    startLine: 51
  package: system.fabric
  syntax:
    content: public int getValue()
    return:
      type: f75371fa
- uid: system.fabric.ReplicaRole.IdleSecondary
  id: IdleSecondary
  parent: system.fabric.ReplicaRole
  href: system.fabric.ReplicaRole.yml
  langs:
  - java
  name: IdleSecondary
  nameWithType: ReplicaRole.IdleSecondary
  fullName: system.fabric.ReplicaRole.IdleSecondary
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ReplicaRole.java
    startLine: 34
  package: system.fabric
  summary: "<p>Refers to a replica in the set that receives a state transfer from the Primary replica to prepare for becoming an active Secondary replica. There can be multiple Idle Secondary replicas in a replica set at a time. Idle Secondary replicas do not count as a part of a write quorum. </p>"
  syntax:
    content: public IdleSecondary=(3)
- uid: system.fabric.ReplicaRole.None
  id: None
  parent: system.fabric.ReplicaRole
  href: system.fabric.ReplicaRole.yml
  langs:
  - java
  name: None
  nameWithType: ReplicaRole.None
  fullName: system.fabric.ReplicaRole.None
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ReplicaRole.java
    startLine: 23
  package: system.fabric
  summary: "<p>Specifies that the replica has no responsibility in regard to the replica set. </p>\r\n<p>\r\n  <b>Remarks:</b> When <xref uid=\"system.fabric.StatefulServiceReplica.changeRoleAsync(ReplicaRole,CancellationToken)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.StatefulServiceReplica#changeRoleAsync(system.fabric.ReplicaRole, system.fabric.CancellationToken)\"></xref> indicates this role, it is safe to delete any persistent state that is associated with this replica.</p>"
  syntax:
    content: public None=(1)
- uid: system.fabric.ReplicaRole.Primary
  id: Primary
  parent: system.fabric.ReplicaRole
  href: system.fabric.ReplicaRole.yml
  langs:
  - java
  name: Primary
  nameWithType: ReplicaRole.Primary
  fullName: system.fabric.ReplicaRole.Primary
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ReplicaRole.java
    startLine: 29
  package: system.fabric
  summary: "<p>Refers to the replica in the set on which all read and write operations are complete in order to enforce strong consistency semantics. Read operations are handled directly by the Primary replica, while write operations must be acknowledged by a quorum of the replicas in the replica set. There can only be one Primary replica in a replica set at a time. </p>"
  syntax:
    content: public Primary=(2)
- uid: system.fabric.ReplicaRole.Unknown
  id: Unknown
  parent: system.fabric.ReplicaRole
  href: system.fabric.ReplicaRole.yml
  langs:
  - java
  name: Unknown
  nameWithType: ReplicaRole.Unknown
  fullName: system.fabric.ReplicaRole.Unknown
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ReplicaRole.java
    startLine: 15
  package: system.fabric
  summary: "<p>Indicates the initial role that a replica is created in. </p>"
  syntax:
    content: public Unknown=(0)
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: system.fabric.ReplicaRole.getValue*
  name: getValue
  nameWithType: ReplicaRole.getValue
  fullName: system.fabric.ReplicaRole.getValue
  package: system.fabric
- uid: system.fabric.ReplicaRole.get*
  name: get
  nameWithType: ReplicaRole.get
  fullName: system.fabric.ReplicaRole.get
  package: system.fabric
- uid: system.fabric.StatefulServiceReplica.changeRoleAsync(ReplicaRole,CancellationToken)
  parent: system.fabric.StatefulServiceReplica
  href: system.fabric.StatefulServiceReplica.yml
  name: changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: StatefulServiceReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  fullName: system.fabric.StatefulServiceReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Changes the role of a Primary or Secondary replica.</p>\r\n<p>\r\n  <b>Remarks:</b>The new role is indicated as a parameter. When the service transitions to the new role, the service has a chance to update its current listening address. The listening address is the address where clients connect to it. This enables the service when it is a Primary replica to only claim some resources such as ports when communication from clients is expected. </p>"
  syntax:
    content: public CompletableFuture<String> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    parameters:
    - id: newRole
      type: system.fabric.ReplicaRole
      description: <p>The updated <xref uid="system.fabric.ReplicaRole" data-throw-if-not-resolved="false" data-raw-source="system.fabric.ReplicaRole"></xref> that this replica should transition to. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 06be942d
      description: <p>Returns <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> of type <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.lang.String"></xref>, the serviceâ€™s new connection address that is to be associated with the replica via Service Fabric Naming. </p>
- uid: system.fabric.ReplicaRole
  parent: system.fabric
  href: system.fabric.ReplicaRole.yml
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: system.fabric.ReplicaRole
  type: Enum
  summary: "<p>Indicates the role of a stateful service replica. </p>\r\n<p>\r\n  <b>Remarks:</b>Service Fabric requires different behaviors from a service replica depending on what role it currently performs. </p>"
  syntax: *o1
