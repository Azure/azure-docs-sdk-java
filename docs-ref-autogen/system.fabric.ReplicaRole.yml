### YamlMime:JavaEnum
fields:
- fullName: system.fabric.ReplicaRole.ActiveSecondary
  name: ActiveSecondary
  nameWithType: ReplicaRole.ActiveSecondary
  summary: <p>Refers to a replica in the set that receives state updates from the Primary replica, applies them, and sends acknowledgements back. Secondary replicas must participate in the write quorum for a replica set. There can be multiple active Secondary replicas in a replica set at a time. The number of active Secondary replicas is configurable that the reliability subsystem should maintain. </p>
  uid: system.fabric.ReplicaRole.ActiveSecondary
- fullName: system.fabric.ReplicaRole.IdleSecondary
  name: IdleSecondary
  nameWithType: ReplicaRole.IdleSecondary
  summary: <p>Refers to a replica in the set that receives a state transfer from the Primary replica to prepare for becoming an active Secondary replica. There can be multiple Idle Secondary replicas in a replica set at a time. Idle Secondary replicas do not count as a part of a write quorum. </p>
  uid: system.fabric.ReplicaRole.IdleSecondary
- fullName: system.fabric.ReplicaRole.None
  name: None
  nameWithType: ReplicaRole.None
  summary: >-
    <p>Specifies that the replica has no responsibility in regard to the replica set. </p>

    <p>

      <b>Remarks:</b> When <xref uid="system.fabric.StatefulServiceReplica.changeRoleAsync(ReplicaRole,CancellationToken)" data-throw-if-not-resolved="false">system.fabric.StatefulServiceReplica#changeRoleAsync(system.fabric.ReplicaRole, system.fabric.CancellationToken)</xref> indicates this role, it is safe to delete any persistent state that is associated with this replica.</p>
  uid: system.fabric.ReplicaRole.None
- fullName: system.fabric.ReplicaRole.Primary
  name: Primary
  nameWithType: ReplicaRole.Primary
  summary: <p>Refers to the replica in the set on which all read and write operations are complete in order to enforce strong consistency semantics. Read operations are handled directly by the Primary replica, while write operations must be acknowledged by a quorum of the replicas in the replica set. There can only be one Primary replica in a replica set at a time. </p>
  uid: system.fabric.ReplicaRole.Primary
- fullName: system.fabric.ReplicaRole.Unknown
  name: Unknown
  nameWithType: ReplicaRole.Unknown
  summary: <p>Indicates the initial role that a replica is created in. </p>
  uid: system.fabric.ReplicaRole.Unknown
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="java.lang.Enum&lt;ReplicaRole&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: system.fabric.ReplicaRole.get(int value)
  name: get(int value)
  nameWithType: ReplicaRole.get(int value)
  parameters:
  - name: value
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="system.fabric.ReplicaRole?alt=system.fabric.ReplicaRole&text=ReplicaRole" data-throw-if-not-resolved="False"/>
  syntax: public static ReplicaRole get(int value)
  uid: system.fabric.ReplicaRole.get(int)
- fullName: system.fabric.ReplicaRole.getValue()
  name: getValue()
  nameWithType: ReplicaRole.getValue()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int getValue()
  uid: system.fabric.ReplicaRole.getValue()
nameWithType: ReplicaRole
syntax: public enum ReplicaRole
uid: system.fabric.ReplicaRole
name: ReplicaRole
package: system.fabric
summary: >-
  <p>Indicates the role of a stateful service replica. </p>

  <p>

    <b>Remarks:</b>Service Fabric requires different behaviors from a service replica depending on what role it currently performs. </p>
metadata: {}
