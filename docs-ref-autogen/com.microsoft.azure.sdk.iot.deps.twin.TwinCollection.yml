### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection"
fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection"
name: "TwinCollection"
nameWithType: "TwinCollection"
summary: "Representation of a single Twin collection."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractMap?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.HashMap?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "java.util.AbstractMap.equals(java.lang.Object)"
- "java.util.AbstractMap.hashCode()"
- "java.util.AbstractMap.toString()"
- "java.util.HashMap.clear()"
- "java.util.HashMap.clone()"
- "java.util.HashMap.compute(K,java.util.function.BiFunction<? super K,? super V,? extends V>)"
- "java.util.HashMap.computeIfAbsent(K,java.util.function.Function<? super K,? extends V>)"
- "java.util.HashMap.computeIfPresent(K,java.util.function.BiFunction<? super K,? super V,? extends V>)"
- "java.util.HashMap.containsKey(java.lang.Object)"
- "java.util.HashMap.containsValue(java.lang.Object)"
- "java.util.HashMap.entrySet()"
- "java.util.HashMap.forEach(java.util.function.BiConsumer<? super K,? super V>)"
- "java.util.HashMap.get(java.lang.Object)"
- "java.util.HashMap.getOrDefault(java.lang.Object,V)"
- "java.util.HashMap.isEmpty()"
- "java.util.HashMap.keySet()"
- "java.util.HashMap.merge(K,V,java.util.function.BiFunction<? super V,? super V,? extends V>)"
- "java.util.HashMap.put(K,V)"
- "java.util.HashMap.putAll(java.util.Map<? extends K,? extends V>)"
- "java.util.HashMap.putIfAbsent(K,V)"
- "java.util.HashMap.remove(java.lang.Object)"
- "java.util.HashMap.remove(java.lang.Object,java.lang.Object)"
- "java.util.HashMap.replace(K,V)"
- "java.util.HashMap.replace(K,V,V)"
- "java.util.HashMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)"
- "java.util.HashMap.size()"
- "java.util.HashMap.values()"
syntax: "public class TwinCollection extends HashMap<String,Object>"
constructors:
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.TwinCollection()"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.TwinCollection()"
  name: "TwinCollection()"
  nameWithType: "TwinCollection.TwinCollection()"
  summary: "Constructor"
  syntax: "public TwinCollection()"
  desc: "Constructor\n\nCreates an empty collection. Fill it with <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.putFinal(java.lang.String,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#putFinal(String, Object)\"></xref> or <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.putAllFinal(java.util.Map<? extends java.lang.String,?>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#putAllFinal(Map)\"></xref>."
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.TwinCollection(com.microsoft.azure.sdk.iot.deps.twin.TwinCollection)"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.TwinCollection(TwinCollection collection)"
  name: "TwinCollection(TwinCollection collection)"
  nameWithType: "TwinCollection.TwinCollection(TwinCollection collection)"
  summary: "Constructor"
  parameters:
  - description: "the Collection of <code>? extends String</code> and <code>Object</code> with the Twin collection"
    name: "collection"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection?alt=com.microsoft.azure.sdk.iot.deps.twin.TwinCollection&text=TwinCollection\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TwinCollection(TwinCollection collection)"
  desc: "Constructor\n\nCreates a new Twin collection coping the provided collection."
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.TwinCollection(java.util.Map<? extends java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.TwinCollection(Map<? extends String,Object> map)"
  name: "TwinCollection(Map<? extends String,Object> map)"
  nameWithType: "TwinCollection.TwinCollection(Map<? extends String,Object> map)"
  summary: "Constructor"
  parameters:
  - description: "the Map of <code>? extends String</code> and <code>Object</code> with the Twin collection"
    name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends java.lang.String?alt=? extends java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TwinCollection(Map<? extends String,Object> map)"
  desc: "Constructor\n\nCreates a new Twin collection coping the provided Map."
methods:
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.createFromRawCollection(java.util.Map<? extends java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.createFromRawCollection(Map<? extends String,Object> rawCollection)"
  name: "createFromRawCollection(Map<? extends String,Object> rawCollection)"
  nameWithType: "TwinCollection.createFromRawCollection(Map<? extends String,Object> rawCollection)"
  summary: "Internal Constructor from raw map."
  modifiers:
  - "protected"
  - "static"
  parameters:
  - description: "the <code>Map<? extends String, Object></code> with contain all TwinCollection information, without\n                      any differentiation between each entity is the Twin information and each entity is part\n                      of the Twin metadata."
    name: "rawCollection"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends java.lang.String?alt=? extends java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected static TwinCollection createFromRawCollection(Map<? extends String,Object> rawCollection)"
  desc: "Internal Constructor from raw map.\n\nThis internal constructor is used to the deserialization process.\n\nDuring the deserialization process, the GSON will convert both tags and properties to a raw Map, which will includes the $version and $metadata as part of the collection. So, we need to reorganize this map using the TwinCollection format. This constructor will do that.\n\nFor instance, the following JSON is a valid TwinCollection with its metadata.\n\n```java\n{\n     \"Color\":\"White\",\n     \"MaxSpeed\":{\n         \"Value\":500,\n         \"NewValue\":300\n     },\n     \"$metadata\":{\n         \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\n         \"$lastUpdatedVersion\":4,\n         \"Color\":{\n             \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\n             \"$lastUpdatedVersion\":4,\n         },\n         \"MaxSpeed\":{\n             \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\n             \"$lastUpdatedVersion\":4,\n             \"Value\":{\n                 \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\n                 \"$lastUpdatedVersion\":4\n             },\n             \"NewValue\":{\n                 \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\n                 \"$lastUpdatedVersion\":4\n             }\n         }\n     },\n     \"$version\":4\n }\n```"
  returns:
    description: "The instance of the <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinCollection\"></xref>."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection?alt=com.microsoft.azure.sdk.iot.deps.twin.TwinCollection&text=TwinCollection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadata()"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadata()"
  name: "getTwinMetadata()"
  nameWithType: "TwinCollection.getTwinMetadata()"
  summary: "Getter for the Twin<wbr>Collection metadata"
  deprecatedTag: "as of Deps version 0.7.1, please use <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadataFinal()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getTwinMetadataFinal()\"></xref>"
  syntax: "@Deprecated\npublic TwinMetadata getTwinMetadata()"
  desc: "Getter for the TwinCollection metadata"
  hasDeprecatedTag: true
  returns:
    description: "the <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata\"></xref> of the Whole TwinCollection. It can be <code>null</code>."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata?alt=com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata&text=TwinMetadata\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadata(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadata(String key)"
  name: "getTwinMetadata(String key)"
  nameWithType: "TwinCollection.getTwinMetadata(String key)"
  summary: "Getter for the entry metadata in the Twin<wbr>Collection."
  deprecatedTag: "as of Deps version 0.7.1, please use <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadataFinal(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getTwinMetadataFinal(String)\"></xref>"
  parameters:
  - description: "the <code>String</code> with the name of the entry to retrieve the metadata."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic TwinMetadata getTwinMetadata(String key)"
  desc: "Getter for the entry metadata in the TwinCollection."
  hasDeprecatedTag: true
  returns:
    description: "the <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata\"></xref> ot the specific entry in the TwinCollection. It can be <code>null</code>."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata?alt=com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata&text=TwinMetadata\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadataFinal()"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadataFinal()"
  name: "getTwinMetadataFinal()"
  nameWithType: "TwinCollection.getTwinMetadataFinal()"
  summary: "Getter for the Twin<wbr>Collection metadata"
  modifiers:
  - "final"
  syntax: "public final TwinMetadata getTwinMetadataFinal()"
  desc: "Getter for the TwinCollection metadata"
  returns:
    description: "the <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata\"></xref> of the Whole TwinCollection. It can be <code>null</code>."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata?alt=com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata&text=TwinMetadata\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadataFinal(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadataFinal(String key)"
  name: "getTwinMetadataFinal(String key)"
  nameWithType: "TwinCollection.getTwinMetadataFinal(String key)"
  summary: "Getter for the entry metadata in the Twin<wbr>Collection."
  modifiers:
  - "final"
  parameters:
  - description: "the <code>String</code> with the name of the entry to retrieve the metadata."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final TwinMetadata getTwinMetadataFinal(String key)"
  desc: "Getter for the entry metadata in the TwinCollection."
  returns:
    description: "the <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata\"></xref> ot the specific entry in the TwinCollection. It can be <code>null</code>."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata?alt=com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata&text=TwinMetadata\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getVersion()"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getVersion()"
  name: "getVersion()"
  nameWithType: "TwinCollection.getVersion()"
  summary: "Getter for the version."
  deprecatedTag: "as of Deps version 0.7.1, please use <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getVersionFinal()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getVersionFinal()\"></xref>"
  syntax: "@Deprecated\npublic Integer getVersion()"
  desc: "Getter for the version."
  hasDeprecatedTag: true
  returns:
    description: "The <code>Integer</code> with the version content. It can be <code>null</code>."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getVersionFinal()"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getVersionFinal()"
  name: "getVersionFinal()"
  nameWithType: "TwinCollection.getVersionFinal()"
  summary: "Getter for the version."
  modifiers:
  - "final"
  syntax: "public final Integer getVersionFinal()"
  desc: "Getter for the version."
  returns:
    description: "The <code>Integer</code> with the version content. It can be <code>null</code>."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.put(java.lang.String,java.lang.Object)"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.put(String key, Object value)"
  name: "put(String key, Object value)"
  nameWithType: "TwinCollection.put(String key, Object value)"
  summary: "Add a single new entry in the Twin<wbr>Collection."
  deprecatedTag: "as of Deps version 0.7.1, please use <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.putFinal(java.lang.String,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#putFinal(String, Object)\"></xref>"
  overridden: "java.util.HashMap.put(K,V)"
  parameters:
  - description: "the <code>String</code> that represent the key of the new entry. It cannot be {#code null} or empty."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>Object</code> that represents the value of the new entry. It cannot be user defined type or array."
    name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic Object put(String key, Object value)"
  desc: "Add a single new entry in the TwinCollection.\n\nOverride `HashMap.put(String, Object)`.\n\nThis function will add a single pair key value to the TwinCollection. By the Twin definition, the `Object` can contain types of `Boolean`, `Number`, `String`, `Object`, or up to 5 levels of sub-TwinCollection, but it cannot be types defined by the user or arrays."
  hasDeprecatedTag: true
  returns:
    description: "The <code>Object</code> that correspond to the last value of this key. It will be <code>null</code> if there is no previous value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.putAll(java.util.Map<? extends java.lang.String,?>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.putAll(Map<? extends String,?> map)"
  name: "putAll(Map<? extends String,?> map)"
  nameWithType: "TwinCollection.putAll(Map<? extends String,?> map)"
  summary: "Add all information in the provided Map to the Twin<wbr>Collection."
  deprecatedTag: "as of Deps version 0.7.1, please use <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.putAllFinal(java.util.Map<? extends java.lang.String,?>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#putAllFinal(Map)\"></xref>"
  overridden: "java.util.HashMap.putAll(java.util.Map<? extends K,? extends V>)"
  parameters:
  - description: "A <code>Map</code> of entries to add to the TwinCollection."
    name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends java.lang.String?alt=? extends java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,?&gt;"
  syntax: "@Deprecated\npublic void putAll(Map<? extends String,?> map)"
  desc: "Add all information in the provided Map to the TwinCollection.\n\nOverride `HashMap.putAll(Map)`.\n\nThis function will add all entries in the Map to the TwinCollection. If the provided key already exists, it will replace the value by the new one. This function will not delete or change the content of the other keys in the Map.\n\nAs defined by the Twin, the value of a entry can be an inner Map. TwinCollection will accept up to 5 levels of inner Maps."
  hasDeprecatedTag: true
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.putAllFinal(java.util.Map<? extends java.lang.String,?>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.putAllFinal(Map<? extends String,?> map)"
  name: "putAllFinal(Map<? extends String,?> map)"
  nameWithType: "TwinCollection.putAllFinal(Map<? extends String,?> map)"
  summary: "Add all information in the provided Map to the Twin<wbr>Collection."
  modifiers:
  - "final"
  parameters:
  - description: "A <code>Map</code> of entries to add to the TwinCollection."
    name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends java.lang.String?alt=? extends java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,?&gt;"
  syntax: "public final void putAllFinal(Map<? extends String,?> map)"
  desc: "Add all information in the provided Map to the TwinCollection.\n\nThis function will add all entries in the Map to the TwinCollection. If the provided key already exists, it will replace the value by the new one. This function will not delete or change the content of the other keys in the Map.\n\nAs defined by the Twin, the value of a entry can be an inner Map. TwinCollection will accept up to 5 levels of inner Maps."
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.putFinal(java.lang.String,java.lang.Object)"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.putFinal(String key, Object value)"
  name: "putFinal(String key, Object value)"
  nameWithType: "TwinCollection.putFinal(String key, Object value)"
  summary: "Add a single new entry in the Twin<wbr>Collection."
  modifiers:
  - "final"
  parameters:
  - description: "the <code>String</code> that represent the key of the new entry. It cannot be {#code null} or empty."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>Object</code> that represents the value of the new entry. It cannot be user defined type or array."
    name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final Object putFinal(String key, Object value)"
  desc: "Add a single new entry in the TwinCollection.\n\nThis function will add a single pair key value to the TwinCollection. By the Twin definition, the `Object` can contain types of `Boolean`, `Number`, `String`, `Object`, or up to 5 levels of sub-TwinCollection, but it cannot be types defined by the user or arrays."
  returns:
    description: "The <code>Object</code> that correspond to the last value of this key. It will be <code>null</code> if there is no previous value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.toJsonElement()"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.toJsonElement()"
  name: "toJsonElement()"
  nameWithType: "TwinCollection.toJsonElement()"
  summary: "Serializer"
  syntax: "public JsonElement toJsonElement()"
  desc: "Serializer\n\nCreates a `JsonElement`, which the content represents the information in this class and its subclasses in a JSON format.\n\nThis is useful if the caller will integrate this JSON with JSON from other classes to generate a consolidated JSON."
  returns:
    description: "The <code>JsonElement</code> with the content of this class."
    type: "<xref href=\"com.google.gson.JsonElement?alt=com.google.gson.JsonElement&text=JsonElement\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.toJsonElementWithMetadata()"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.toJsonElementWithMetadata()"
  name: "toJsonElementWithMetadata()"
  nameWithType: "TwinCollection.toJsonElementWithMetadata()"
  summary: "Serializer with metadata."
  modifiers:
  - "protected"
  syntax: "protected JsonElement toJsonElementWithMetadata()"
  desc: "Serializer with metadata.\n\nReturn a JsonElement with the full content of this class, including the metadata."
  returns:
    description: "The <code>JsonElement</code> with the full content of this class."
    type: "<xref href=\"com.google.gson.JsonElement?alt=com.google.gson.JsonElement&text=JsonElement\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.toString()"
  fullName: "com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.toString()"
  name: "toString()"
  nameWithType: "TwinCollection.toString()"
  summary: "Creates a pretty print JSON with the content of this class and subclasses."
  overridden: "java.util.AbstractMap.toString()"
  syntax: "public String toString()"
  desc: "Creates a pretty print JSON with the content of this class and subclasses."
  returns:
    description: "The <code>String</code> with the pretty print JSON."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Representation of a single Twin collection.\n\nThe TwinCollection is an extension of a `HashMap` of `String` and `Object` that contain individual and general versioning mechanism.\n\nBy the Twin definition, the `Object` can contain types of `Boolean`, `Number`, `String`, `Object`, or a sub-TwinCollection, but it cannot be types defined by the user or arrays.\n\nA TwinCollection can contain up to 5 levels of sub TwinCollections. Once the TwinCollection is a extension of the `HashMap`, both TwinCollection as well as its sub-TwinCollections can be casted to Map of String and Object.\n\nThe collection will be represented in the rest API as a JSON in the body. It can or cannot contain the metadata (identified by the **$** character at the beginning of the key.\n\nBecause of the Twin metadata, the character **$** is not allowed in the entry key.\n\nFor instance, the following JSON is a valid TwinCollection with its metadata.\n\n```java\n{\n     \"Color\":\"White\",\n     \"MaxSpeed\":{\n         \"Value\":500,\n         \"NewValue\":300\n     },\n     \"$metadata\":{\n         \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\n         \"$lastUpdatedVersion\":4,\n         \"Color\":{\n             \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\n             \"$lastUpdatedVersion\":4,\n         },\n         \"MaxSpeed\":{\n             \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\n             \"$lastUpdatedVersion\":4,\n             \"Value\":{\n                 \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\n                 \"$lastUpdatedVersion\":4\n             },\n             \"NewValue\":{\n                 \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\n                 \"$lastUpdatedVersion\":4\n             }\n         }\n     },\n     \"$version\":4\n }\n```\n\nThis class exposes the Twin collection with or without metadata as a Map here user can gat both the value and the metadata. For instance, in the above TwinCollection, <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.get*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#get(Object)\"></xref> for **Color** will return **White** and the <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadataFinal(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getTwinMetadataFinal(String)\"></xref> for **Color** will return the Object TwinMetadata that contain <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata.getLastUpdated()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata#getLastUpdated()\"></xref> that will returns the `Date` **2017-09-21T02:07:44.238Z** and <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata.getLastUpdatedVersion()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata#getLastUpdatedVersion()\"></xref> that will returns the `Integer` **4**.\n\nFor the nested TwinCollection, you can do the same, for instance, the following code will return the value and metadata of the **NewValue** nested in **MaxSpeed**:\n\n```java\n// Get the value of the MaxSpeed, which is a inner TwinCollection.\n      TwinCollection innerMaxSpeed = (TwinCollection) twinCollection.get(\"MaxSpeed\");\n\n      // From the inner TwinCollection, get the value of the NewValue.\n      Long maxSpeedNewValue = innerMaxSpeed.get(\"NewValue\");\n\n      // As in the root TwinCollection, the inner TwinCollection contain its own metadata.\n      // So, get the metadata information for the inner NewValue.\n      TwinMetadata maxSpeedNewValueMetadata = innerMaxSpeed.getTwinMetadataFinal(\"NewValue\");\n      Date newValueLastUpdated = maxSpeedNewValueMetadata.getLastUpdated(); //Shall contain `2017-09-21T02:07:44.238Z`\n      Integer newValueLastUpdatedVersion = maxSpeedNewValueMetadata.getLastUpdatedVersion(); //Shall contain `4`\n```"
metadata: {}
package: "com.microsoft.azure.sdk.iot.deps.twin"
artifact: com.microsoft.azure.sdk.iot:iot-deps:0.12.0
