### YamlMime:JavaMember
nameWithType: ComputeNodes.list
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.list(final String poolId)
  name: list(final String poolId)
  nameWithType: ComputeNodes.list(final String poolId)
  parameters:
  - description: <p>The ID of the pool from which you want to list nodes. </p>
    name: poolId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.ComputeNode?alt=com.microsoft.azure.batch.protocol.models.ComputeNode&text=ComputeNode" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax: public PagedList<ComputeNode> list(final String poolId)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.list(final String)
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  name: list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodes.list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  parameters:
  - description: <p>The ID of the pool from which you want to list nodes. </p>
    name: poolId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: computeNodeListOptions
    type: final <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions&text=ComputeNodeListOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.ComputeNode?alt=com.microsoft.azure.batch.protocol.models.ComputeNode&text=ComputeNode" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax: public PagedList<ComputeNode> list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.list(final String,final ComputeNodeListOptions)
uid: com.microsoft.azure.batch.protocol.ComputeNodes.list*
fullName: com.microsoft.azure.batch.protocol.ComputeNodes.list
name: list(final String poolId)
package: com.microsoft.azure.batch.protocol
metadata: {}
