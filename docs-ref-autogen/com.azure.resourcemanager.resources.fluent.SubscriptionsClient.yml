### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient"
fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient"
name: "SubscriptionsClient"
nameWithType: "SubscriptionsClient"
summary: "An instance of this class provides access to all the operations defined in Subscriptions<wbr>Client."
syntax: "public interface SubscriptionsClient"
methods:
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.checkZonePeers(java.lang.String,com.azure.resourcemanager.resources.models.CheckZonePeersRequest)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.checkZonePeers(String subscriptionId, CheckZonePeersRequest parameters)"
  name: "checkZonePeers(String subscriptionId, CheckZonePeersRequest parameters)"
  nameWithType: "SubscriptionsClient.checkZonePeers(String subscriptionId, CheckZonePeersRequest parameters)"
  summary: "Compares a subscriptions logical zone mapping."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for checking zone peers."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.CheckZonePeersRequest?alt=com.azure.resourcemanager.resources.models.CheckZonePeersRequest&text=CheckZonePeersRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckZonePeersResultInner checkZonePeers(String subscriptionId, CheckZonePeersRequest parameters)"
  desc: "Compares a subscriptions logical zone mapping."
  returns:
    description: "result of the Check zone peers operation."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.CheckZonePeersResultInner?alt=com.azure.resourcemanager.resources.fluent.models.CheckZonePeersResultInner&text=CheckZonePeersResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.checkZonePeersAsync(java.lang.String,com.azure.resourcemanager.resources.models.CheckZonePeersRequest)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.checkZonePeersAsync(String subscriptionId, CheckZonePeersRequest parameters)"
  name: "checkZonePeersAsync(String subscriptionId, CheckZonePeersRequest parameters)"
  nameWithType: "SubscriptionsClient.checkZonePeersAsync(String subscriptionId, CheckZonePeersRequest parameters)"
  summary: "Compares a subscriptions logical zone mapping."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for checking zone peers."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.CheckZonePeersRequest?alt=com.azure.resourcemanager.resources.models.CheckZonePeersRequest&text=CheckZonePeersRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<CheckZonePeersResultInner> checkZonePeersAsync(String subscriptionId, CheckZonePeersRequest parameters)"
  desc: "Compares a subscriptions logical zone mapping."
  returns:
    description: "result of the Check zone peers operation on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.CheckZonePeersResultInner?alt=com.azure.resourcemanager.resources.fluent.models.CheckZonePeersResultInner&text=CheckZonePeersResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.checkZonePeersWithResponse(java.lang.String,com.azure.resourcemanager.resources.models.CheckZonePeersRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.checkZonePeersWithResponse(String subscriptionId, CheckZonePeersRequest parameters, Context context)"
  name: "checkZonePeersWithResponse(String subscriptionId, CheckZonePeersRequest parameters, Context context)"
  nameWithType: "SubscriptionsClient.checkZonePeersWithResponse(String subscriptionId, CheckZonePeersRequest parameters, Context context)"
  summary: "Compares a subscriptions logical zone mapping."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for checking zone peers."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.CheckZonePeersRequest?alt=com.azure.resourcemanager.resources.models.CheckZonePeersRequest&text=CheckZonePeersRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CheckZonePeersResultInner> checkZonePeersWithResponse(String subscriptionId, CheckZonePeersRequest parameters, Context context)"
  desc: "Compares a subscriptions logical zone mapping."
  returns:
    description: "result of the Check zone peers operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.CheckZonePeersResultInner?alt=com.azure.resourcemanager.resources.fluent.models.CheckZonePeersResultInner&text=CheckZonePeersResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.checkZonePeersWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.CheckZonePeersRequest)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.checkZonePeersWithResponseAsync(String subscriptionId, CheckZonePeersRequest parameters)"
  name: "checkZonePeersWithResponseAsync(String subscriptionId, CheckZonePeersRequest parameters)"
  nameWithType: "SubscriptionsClient.checkZonePeersWithResponseAsync(String subscriptionId, CheckZonePeersRequest parameters)"
  summary: "Compares a subscriptions logical zone mapping."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for checking zone peers."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.CheckZonePeersRequest?alt=com.azure.resourcemanager.resources.models.CheckZonePeersRequest&text=CheckZonePeersRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<CheckZonePeersResultInner>> checkZonePeersWithResponseAsync(String subscriptionId, CheckZonePeersRequest parameters)"
  desc: "Compares a subscriptions logical zone mapping."
  returns:
    description: "result of the Check zone peers operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.CheckZonePeersResultInner?alt=com.azure.resourcemanager.resources.fluent.models.CheckZonePeersResultInner&text=CheckZonePeersResultInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.get(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.get(String subscriptionId)"
  name: "get(String subscriptionId)"
  nameWithType: "SubscriptionsClient.get(String subscriptionId)"
  summary: "Gets details about a specified subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SubscriptionInner get(String subscriptionId)"
  desc: "Gets details about a specified subscription."
  returns:
    description: "details about a specified subscription."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.SubscriptionInner?alt=com.azure.resourcemanager.resources.fluent.models.SubscriptionInner&text=SubscriptionInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.getAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.getAsync(String subscriptionId)"
  name: "getAsync(String subscriptionId)"
  nameWithType: "SubscriptionsClient.getAsync(String subscriptionId)"
  summary: "Gets details about a specified subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<SubscriptionInner> getAsync(String subscriptionId)"
  desc: "Gets details about a specified subscription."
  returns:
    description: "details about a specified subscription on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.SubscriptionInner?alt=com.azure.resourcemanager.resources.fluent.models.SubscriptionInner&text=SubscriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.getWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.getWithResponse(String subscriptionId, Context context)"
  name: "getWithResponse(String subscriptionId, Context context)"
  nameWithType: "SubscriptionsClient.getWithResponse(String subscriptionId, Context context)"
  summary: "Gets details about a specified subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SubscriptionInner> getWithResponse(String subscriptionId, Context context)"
  desc: "Gets details about a specified subscription."
  returns:
    description: "details about a specified subscription along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.SubscriptionInner?alt=com.azure.resourcemanager.resources.fluent.models.SubscriptionInner&text=SubscriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.getWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.getWithResponseAsync(String subscriptionId)"
  name: "getWithResponseAsync(String subscriptionId)"
  nameWithType: "SubscriptionsClient.getWithResponseAsync(String subscriptionId)"
  summary: "Gets details about a specified subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<SubscriptionInner>> getWithResponseAsync(String subscriptionId)"
  desc: "Gets details about a specified subscription."
  returns:
    description: "details about a specified subscription along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.SubscriptionInner?alt=com.azure.resourcemanager.resources.fluent.models.SubscriptionInner&text=SubscriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.list()"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.list()"
  name: "list()"
  nameWithType: "SubscriptionsClient.list()"
  summary: "Gets all subscriptions for a tenant."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<SubscriptionInner> list()"
  desc: "Gets all subscriptions for a tenant."
  returns:
    description: "all subscriptions for a tenant as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.SubscriptionInner?alt=com.azure.resourcemanager.resources.fluent.models.SubscriptionInner&text=SubscriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.list(Context context)"
  name: "list(Context context)"
  nameWithType: "SubscriptionsClient.list(Context context)"
  summary: "Gets all subscriptions for a tenant."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<SubscriptionInner> list(Context context)"
  desc: "Gets all subscriptions for a tenant."
  returns:
    description: "all subscriptions for a tenant as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.SubscriptionInner?alt=com.azure.resourcemanager.resources.fluent.models.SubscriptionInner&text=SubscriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.listAsync()"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.listAsync()"
  name: "listAsync()"
  nameWithType: "SubscriptionsClient.listAsync()"
  summary: "Gets all subscriptions for a tenant."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<SubscriptionInner> listAsync()"
  desc: "Gets all subscriptions for a tenant."
  returns:
    description: "all subscriptions for a tenant as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.SubscriptionInner?alt=com.azure.resourcemanager.resources.fluent.models.SubscriptionInner&text=SubscriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.listLocations(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.listLocations(String subscriptionId)"
  name: "listLocations(String subscriptionId)"
  nameWithType: "SubscriptionsClient.listLocations(String subscriptionId)"
  summary: "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<LocationInner> listLocations(String subscriptionId)"
  desc: "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list."
  returns:
    description: "location list operation response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.LocationInner?alt=com.azure.resourcemanager.resources.fluent.models.LocationInner&text=LocationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.listLocations(java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.listLocations(String subscriptionId, Boolean includeExtendedLocations, Context context)"
  name: "listLocations(String subscriptionId, Boolean includeExtendedLocations, Context context)"
  nameWithType: "SubscriptionsClient.listLocations(String subscriptionId, Boolean includeExtendedLocations, Context context)"
  summary: "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Whether to include extended locations."
    name: "includeExtendedLocations"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<LocationInner> listLocations(String subscriptionId, Boolean includeExtendedLocations, Context context)"
  desc: "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list."
  returns:
    description: "location list operation response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.LocationInner?alt=com.azure.resourcemanager.resources.fluent.models.LocationInner&text=LocationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.listLocationsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.listLocationsAsync(String subscriptionId)"
  name: "listLocationsAsync(String subscriptionId)"
  nameWithType: "SubscriptionsClient.listLocationsAsync(String subscriptionId)"
  summary: "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<LocationInner> listLocationsAsync(String subscriptionId)"
  desc: "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list."
  returns:
    description: "location list operation response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.LocationInner?alt=com.azure.resourcemanager.resources.fluent.models.LocationInner&text=LocationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.listLocationsAsync(java.lang.String,java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.resources.fluent.SubscriptionsClient.listLocationsAsync(String subscriptionId, Boolean includeExtendedLocations)"
  name: "listLocationsAsync(String subscriptionId, Boolean includeExtendedLocations)"
  nameWithType: "SubscriptionsClient.listLocationsAsync(String subscriptionId, Boolean includeExtendedLocations)"
  summary: "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Whether to include extended locations."
    name: "includeExtendedLocations"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public abstract PagedFlux<LocationInner> listLocationsAsync(String subscriptionId, Boolean includeExtendedLocations)"
  desc: "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list."
  returns:
    description: "location list operation response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.LocationInner?alt=com.azure.resourcemanager.resources.fluent.models.LocationInner&text=LocationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in SubscriptionsClient."
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
