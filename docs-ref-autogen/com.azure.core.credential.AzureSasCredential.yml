### YamlMime:JavaType
uid: "com.azure.core.credential.AzureSasCredential"
fullName: "com.azure.core.credential.AzureSasCredential"
name: "AzureSasCredential"
nameWithType: "AzureSasCredential"
summary: "Represents a credential that uses a shared access signature to authenticate to an Azure Service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureSasCredential"
constructors:
- uid: "com.azure.core.credential.AzureSasCredential.AzureSasCredential(java.lang.String)"
  fullName: "com.azure.core.credential.AzureSasCredential.AzureSasCredential(String signature)"
  name: "AzureSasCredential(String signature)"
  nameWithType: "AzureSasCredential.AzureSasCredential(String signature)"
  summary: "Creates a credential that authorizes request with the given shared access signature."
  parameters:
  - description: "The shared access signature used to authorize requests."
    name: "signature"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureSasCredential(String signature)"
  desc: "Creates a credential that authorizes request with the given shared access signature.\n\nThe `signature` passed is assumed to be encoded. This constructor is effectively the same as calling <xref uid=\"com.azure.core.credential.AzureSasCredential.AzureSasCredential(java.lang.String,java.util.function.Function<java.lang.String,java.lang.String>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"new AzureSasCredential(signature, null))\"></xref>."
- uid: "com.azure.core.credential.AzureSasCredential.AzureSasCredential(java.lang.String,java.util.function.Function<java.lang.String,java.lang.String>)"
  fullName: "com.azure.core.credential.AzureSasCredential.AzureSasCredential(String signature, Function<String,String> signatureEncoder)"
  name: "AzureSasCredential(String signature, Function<String,String> signatureEncoder)"
  nameWithType: "AzureSasCredential.AzureSasCredential(String signature, Function<String,String> signatureEncoder)"
  summary: "Creates a credential that authorizes request within the given shared access signature."
  parameters:
  - description: "The shared access signature used to authorize requests."
    name: "signature"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional function which encodes the <code>signature</code>."
    name: "signatureEncoder"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureSasCredential(String signature, Function<String,String> signatureEncoder)"
  desc: "Creates a credential that authorizes request within the given shared access signature.\n\nIf `signatureEncoder` is non-null the `signature`, and all <xref uid=\"#update(String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"updated\n signatures\"></xref>, will be encoded using the function. `signatureEncoder` should be as idempotent as possible to reduce the chance of double encoding errors."
methods:
- uid: "com.azure.core.credential.AzureSasCredential.getSignature()"
  fullName: "com.azure.core.credential.AzureSasCredential.getSignature()"
  name: "getSignature()"
  nameWithType: "AzureSasCredential.getSignature()"
  summary: "Retrieves the shared access signature associated to this credential."
  syntax: "public String getSignature()"
  desc: "Retrieves the shared access signature associated to this credential."
  returns:
    description: "The shared access signature being used to authorize requests."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.credential.AzureSasCredential.update(java.lang.String)"
  fullName: "com.azure.core.credential.AzureSasCredential.update(String signature)"
  name: "update(String signature)"
  nameWithType: "AzureSasCredential.update(String signature)"
  summary: "Rotates the shared access signature associated to this credential."
  parameters:
  - description: "The new shared access signature to be associated with this credential."
    name: "signature"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureSasCredential update(String signature)"
  desc: "Rotates the shared access signature associated to this credential."
  returns:
    description: "The updated <code>AzureSasCredential</code> object."
    type: "<xref href=\"com.azure.core.credential.AzureSasCredential?alt=com.azure.core.credential.AzureSasCredential&text=AzureSasCredential\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a credential that uses a shared access signature to authenticate to an Azure Service."
metadata: {}
package: "com.azure.core.credential"
artifact: com.azure:azure-core:1.31.0
