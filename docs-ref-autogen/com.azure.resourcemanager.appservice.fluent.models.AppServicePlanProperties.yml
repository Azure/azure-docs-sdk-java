### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties"
fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties"
name: "AppServicePlanProperties"
nameWithType: "AppServicePlanProperties"
summary: "AppServicePlan resource specific properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AppServicePlanProperties"
constructors:
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.AppServicePlanProperties()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.AppServicePlanProperties()"
  name: "AppServicePlanProperties()"
  nameWithType: "AppServicePlanProperties.AppServicePlanProperties()"
  syntax: "public AppServicePlanProperties()"
methods:
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.elasticScaleEnabled()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.elasticScaleEnabled()"
  name: "elasticScaleEnabled()"
  nameWithType: "AppServicePlanProperties.elasticScaleEnabled()"
  summary: "Get the elasticScaleEnabled property: ServerFarm supports ElasticScale. Apps in this plan will scale as if the ServerFarm was ElasticPremium sku."
  syntax: "public Boolean elasticScaleEnabled()"
  returns:
    description: "the elasticScaleEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.freeOfferExpirationTime()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.freeOfferExpirationTime()"
  name: "freeOfferExpirationTime()"
  nameWithType: "AppServicePlanProperties.freeOfferExpirationTime()"
  summary: "Get the freeOfferExpirationTime property: The time when the server farm free offer expires."
  syntax: "public OffsetDateTime freeOfferExpirationTime()"
  returns:
    description: "the freeOfferExpirationTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.geoRegion()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.geoRegion()"
  name: "geoRegion()"
  nameWithType: "AppServicePlanProperties.geoRegion()"
  summary: "Get the geoRegion property: Geographical location for the App Service plan."
  syntax: "public String geoRegion()"
  returns:
    description: "the geoRegion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.hostingEnvironmentProfile()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.hostingEnvironmentProfile()"
  name: "hostingEnvironmentProfile()"
  nameWithType: "AppServicePlanProperties.hostingEnvironmentProfile()"
  summary: "Get the hostingEnvironmentProfile property: Specification for the App Service Environment to use for the App Service plan."
  syntax: "public HostingEnvironmentProfile hostingEnvironmentProfile()"
  returns:
    description: "the hostingEnvironmentProfile value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.HostingEnvironmentProfile?alt=com.azure.resourcemanager.appservice.models.HostingEnvironmentProfile&text=HostingEnvironmentProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.hyperV()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.hyperV()"
  name: "hyperV()"
  nameWithType: "AppServicePlanProperties.hyperV()"
  summary: "Get the hyperV property: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise."
  syntax: "public Boolean hyperV()"
  returns:
    description: "the hyperV value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.isSpot()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.isSpot()"
  name: "isSpot()"
  nameWithType: "AppServicePlanProperties.isSpot()"
  summary: "Get the isSpot property: If <code>true</code>, this App Service Plan owns spot instances."
  syntax: "public Boolean isSpot()"
  returns:
    description: "the isSpot value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.isXenon()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.isXenon()"
  name: "isXenon()"
  nameWithType: "AppServicePlanProperties.isXenon()"
  summary: "Get the isXenon property: Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise."
  syntax: "public Boolean isXenon()"
  returns:
    description: "the isXenon value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.kubeEnvironmentProfile()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.kubeEnvironmentProfile()"
  name: "kubeEnvironmentProfile()"
  nameWithType: "AppServicePlanProperties.kubeEnvironmentProfile()"
  summary: "Get the kubeEnvironmentProfile property: Specification for the Kubernetes Environment to use for the App Service plan."
  syntax: "public KubeEnvironmentProfile kubeEnvironmentProfile()"
  returns:
    description: "the kubeEnvironmentProfile value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.KubeEnvironmentProfile?alt=com.azure.resourcemanager.appservice.models.KubeEnvironmentProfile&text=KubeEnvironmentProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.maximumElasticWorkerCount()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.maximumElasticWorkerCount()"
  name: "maximumElasticWorkerCount()"
  nameWithType: "AppServicePlanProperties.maximumElasticWorkerCount()"
  summary: "Get the maximumElasticWorkerCount property: Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan."
  syntax: "public Integer maximumElasticWorkerCount()"
  returns:
    description: "the maximumElasticWorkerCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.maximumNumberOfWorkers()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.maximumNumberOfWorkers()"
  name: "maximumNumberOfWorkers()"
  nameWithType: "AppServicePlanProperties.maximumNumberOfWorkers()"
  summary: "Get the maximumNumberOfWorkers property: Maximum number of instances that can be assigned to this App Service plan."
  syntax: "public Integer maximumNumberOfWorkers()"
  returns:
    description: "the maximumNumberOfWorkers value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.numberOfSites()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.numberOfSites()"
  name: "numberOfSites()"
  nameWithType: "AppServicePlanProperties.numberOfSites()"
  summary: "Get the numberOfSites property: Number of apps assigned to this App Service plan."
  syntax: "public Integer numberOfSites()"
  returns:
    description: "the numberOfSites value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.perSiteScaling()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.perSiteScaling()"
  name: "perSiteScaling()"
  nameWithType: "AppServicePlanProperties.perSiteScaling()"
  summary: "Get the perSiteScaling property: If <code>true</code>, apps assigned to this App Service plan can be scaled independently. If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan."
  syntax: "public Boolean perSiteScaling()"
  returns:
    description: "the perSiteScaling value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "AppServicePlanProperties.provisioningState()"
  summary: "Get the provisioningState property: Provisioning state of the App Service Plan."
  syntax: "public ProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProvisioningState?alt=com.azure.resourcemanager.appservice.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.reserved()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.reserved()"
  name: "reserved()"
  nameWithType: "AppServicePlanProperties.reserved()"
  summary: "Get the reserved property: If Linux app service plan <code>true</code>, <code>false</code> otherwise."
  syntax: "public Boolean reserved()"
  returns:
    description: "the reserved value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.resourceGroup()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.resourceGroup()"
  name: "resourceGroup()"
  nameWithType: "AppServicePlanProperties.resourceGroup()"
  summary: "Get the resourceGroup property: Resource group of the App Service plan."
  syntax: "public String resourceGroup()"
  returns:
    description: "the resourceGroup value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.spotExpirationTime()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.spotExpirationTime()"
  name: "spotExpirationTime()"
  nameWithType: "AppServicePlanProperties.spotExpirationTime()"
  summary: "Get the spotExpirationTime property: The time when the server farm expires. Valid only if it is a spot server farm."
  syntax: "public OffsetDateTime spotExpirationTime()"
  returns:
    description: "the spotExpirationTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.status()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.status()"
  name: "status()"
  nameWithType: "AppServicePlanProperties.status()"
  summary: "Get the status property: App Service plan status."
  syntax: "public StatusOptions status()"
  returns:
    description: "the status value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.StatusOptions?alt=com.azure.resourcemanager.appservice.models.StatusOptions&text=StatusOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.subscription()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.subscription()"
  name: "subscription()"
  nameWithType: "AppServicePlanProperties.subscription()"
  summary: "Get the subscription property: App Service plan subscription."
  syntax: "public String subscription()"
  returns:
    description: "the subscription value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.targetWorkerCount()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.targetWorkerCount()"
  name: "targetWorkerCount()"
  nameWithType: "AppServicePlanProperties.targetWorkerCount()"
  summary: "Get the targetWorkerCount property: Scaling worker count."
  syntax: "public Integer targetWorkerCount()"
  returns:
    description: "the targetWorkerCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.targetWorkerSizeId()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.targetWorkerSizeId()"
  name: "targetWorkerSizeId()"
  nameWithType: "AppServicePlanProperties.targetWorkerSizeId()"
  summary: "Get the targetWorkerSizeId property: Scaling worker size ID."
  syntax: "public Integer targetWorkerSizeId()"
  returns:
    description: "the targetWorkerSizeId value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.validate()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.validate()"
  name: "validate()"
  nameWithType: "AppServicePlanProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withElasticScaleEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withElasticScaleEnabled(Boolean elasticScaleEnabled)"
  name: "withElasticScaleEnabled(Boolean elasticScaleEnabled)"
  nameWithType: "AppServicePlanProperties.withElasticScaleEnabled(Boolean elasticScaleEnabled)"
  summary: "Set the elasticScaleEnabled property: ServerFarm supports ElasticScale. Apps in this plan will scale as if the ServerFarm was ElasticPremium sku."
  parameters:
  - description: "the elasticScaleEnabled value to set."
    name: "elasticScaleEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withElasticScaleEnabled(Boolean elasticScaleEnabled)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withFreeOfferExpirationTime(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withFreeOfferExpirationTime(OffsetDateTime freeOfferExpirationTime)"
  name: "withFreeOfferExpirationTime(OffsetDateTime freeOfferExpirationTime)"
  nameWithType: "AppServicePlanProperties.withFreeOfferExpirationTime(OffsetDateTime freeOfferExpirationTime)"
  summary: "Set the freeOfferExpirationTime property: The time when the server farm free offer expires."
  parameters:
  - description: "the freeOfferExpirationTime value to set."
    name: "freeOfferExpirationTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withFreeOfferExpirationTime(OffsetDateTime freeOfferExpirationTime)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withHostingEnvironmentProfile(com.azure.resourcemanager.appservice.models.HostingEnvironmentProfile)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withHostingEnvironmentProfile(HostingEnvironmentProfile hostingEnvironmentProfile)"
  name: "withHostingEnvironmentProfile(HostingEnvironmentProfile hostingEnvironmentProfile)"
  nameWithType: "AppServicePlanProperties.withHostingEnvironmentProfile(HostingEnvironmentProfile hostingEnvironmentProfile)"
  summary: "Set the hostingEnvironmentProfile property: Specification for the App Service Environment to use for the App Service plan."
  parameters:
  - description: "the hostingEnvironmentProfile value to set."
    name: "hostingEnvironmentProfile"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.HostingEnvironmentProfile?alt=com.azure.resourcemanager.appservice.models.HostingEnvironmentProfile&text=HostingEnvironmentProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withHostingEnvironmentProfile(HostingEnvironmentProfile hostingEnvironmentProfile)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withHyperV(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withHyperV(Boolean hyperV)"
  name: "withHyperV(Boolean hyperV)"
  nameWithType: "AppServicePlanProperties.withHyperV(Boolean hyperV)"
  summary: "Set the hyperV property: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise."
  parameters:
  - description: "the hyperV value to set."
    name: "hyperV"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withHyperV(Boolean hyperV)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withIsSpot(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withIsSpot(Boolean isSpot)"
  name: "withIsSpot(Boolean isSpot)"
  nameWithType: "AppServicePlanProperties.withIsSpot(Boolean isSpot)"
  summary: "Set the isSpot property: If <code>true</code>, this App Service Plan owns spot instances."
  parameters:
  - description: "the isSpot value to set."
    name: "isSpot"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withIsSpot(Boolean isSpot)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withIsXenon(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withIsXenon(Boolean isXenon)"
  name: "withIsXenon(Boolean isXenon)"
  nameWithType: "AppServicePlanProperties.withIsXenon(Boolean isXenon)"
  summary: "Set the isXenon property: Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise."
  parameters:
  - description: "the isXenon value to set."
    name: "isXenon"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withIsXenon(Boolean isXenon)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withKubeEnvironmentProfile(com.azure.resourcemanager.appservice.models.KubeEnvironmentProfile)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withKubeEnvironmentProfile(KubeEnvironmentProfile kubeEnvironmentProfile)"
  name: "withKubeEnvironmentProfile(KubeEnvironmentProfile kubeEnvironmentProfile)"
  nameWithType: "AppServicePlanProperties.withKubeEnvironmentProfile(KubeEnvironmentProfile kubeEnvironmentProfile)"
  summary: "Set the kubeEnvironmentProfile property: Specification for the Kubernetes Environment to use for the App Service plan."
  parameters:
  - description: "the kubeEnvironmentProfile value to set."
    name: "kubeEnvironmentProfile"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.KubeEnvironmentProfile?alt=com.azure.resourcemanager.appservice.models.KubeEnvironmentProfile&text=KubeEnvironmentProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withKubeEnvironmentProfile(KubeEnvironmentProfile kubeEnvironmentProfile)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withMaximumElasticWorkerCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withMaximumElasticWorkerCount(Integer maximumElasticWorkerCount)"
  name: "withMaximumElasticWorkerCount(Integer maximumElasticWorkerCount)"
  nameWithType: "AppServicePlanProperties.withMaximumElasticWorkerCount(Integer maximumElasticWorkerCount)"
  summary: "Set the maximumElasticWorkerCount property: Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan."
  parameters:
  - description: "the maximumElasticWorkerCount value to set."
    name: "maximumElasticWorkerCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withMaximumElasticWorkerCount(Integer maximumElasticWorkerCount)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withPerSiteScaling(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withPerSiteScaling(Boolean perSiteScaling)"
  name: "withPerSiteScaling(Boolean perSiteScaling)"
  nameWithType: "AppServicePlanProperties.withPerSiteScaling(Boolean perSiteScaling)"
  summary: "Set the perSiteScaling property: If <code>true</code>, apps assigned to this App Service plan can be scaled independently. If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan."
  parameters:
  - description: "the perSiteScaling value to set."
    name: "perSiteScaling"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withPerSiteScaling(Boolean perSiteScaling)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withReserved(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withReserved(Boolean reserved)"
  name: "withReserved(Boolean reserved)"
  nameWithType: "AppServicePlanProperties.withReserved(Boolean reserved)"
  summary: "Set the reserved property: If Linux app service plan <code>true</code>, <code>false</code> otherwise."
  parameters:
  - description: "the reserved value to set."
    name: "reserved"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withReserved(Boolean reserved)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withSpotExpirationTime(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withSpotExpirationTime(OffsetDateTime spotExpirationTime)"
  name: "withSpotExpirationTime(OffsetDateTime spotExpirationTime)"
  nameWithType: "AppServicePlanProperties.withSpotExpirationTime(OffsetDateTime spotExpirationTime)"
  summary: "Set the spotExpirationTime property: The time when the server farm expires. Valid only if it is a spot server farm."
  parameters:
  - description: "the spotExpirationTime value to set."
    name: "spotExpirationTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withSpotExpirationTime(OffsetDateTime spotExpirationTime)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withTargetWorkerCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withTargetWorkerCount(Integer targetWorkerCount)"
  name: "withTargetWorkerCount(Integer targetWorkerCount)"
  nameWithType: "AppServicePlanProperties.withTargetWorkerCount(Integer targetWorkerCount)"
  summary: "Set the targetWorkerCount property: Scaling worker count."
  parameters:
  - description: "the targetWorkerCount value to set."
    name: "targetWorkerCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withTargetWorkerCount(Integer targetWorkerCount)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withTargetWorkerSizeId(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withTargetWorkerSizeId(Integer targetWorkerSizeId)"
  name: "withTargetWorkerSizeId(Integer targetWorkerSizeId)"
  nameWithType: "AppServicePlanProperties.withTargetWorkerSizeId(Integer targetWorkerSizeId)"
  summary: "Set the targetWorkerSizeId property: Scaling worker size ID."
  parameters:
  - description: "the targetWorkerSizeId value to set."
    name: "targetWorkerSizeId"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withTargetWorkerSizeId(Integer targetWorkerSizeId)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withWorkerTierName(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withWorkerTierName(String workerTierName)"
  name: "withWorkerTierName(String workerTierName)"
  nameWithType: "AppServicePlanProperties.withWorkerTierName(String workerTierName)"
  summary: "Set the workerTierName property: Target worker tier assigned to the App Service plan."
  parameters:
  - description: "the workerTierName value to set."
    name: "workerTierName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withWorkerTierName(String workerTierName)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withZoneRedundant(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.withZoneRedundant(Boolean zoneRedundant)"
  name: "withZoneRedundant(Boolean zoneRedundant)"
  nameWithType: "AppServicePlanProperties.withZoneRedundant(Boolean zoneRedundant)"
  summary: "Set the zoneRedundant property: If <code>true</code>, this App Service Plan will perform availability zone balancing. If <code>false</code>, this App Service Plan will not perform availability zone balancing."
  parameters:
  - description: "the zoneRedundant value to set."
    name: "zoneRedundant"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanProperties withZoneRedundant(Boolean zoneRedundant)"
  returns:
    description: "the AppServicePlanProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties&text=AppServicePlanProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.workerTierName()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.workerTierName()"
  name: "workerTierName()"
  nameWithType: "AppServicePlanProperties.workerTierName()"
  summary: "Get the workerTierName property: Target worker tier assigned to the App Service plan."
  syntax: "public String workerTierName()"
  returns:
    description: "the workerTierName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.zoneRedundant()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanProperties.zoneRedundant()"
  name: "zoneRedundant()"
  nameWithType: "AppServicePlanProperties.zoneRedundant()"
  summary: "Get the zoneRedundant property: If <code>true</code>, this App Service Plan will perform availability zone balancing. If <code>false</code>, this App Service Plan will not perform availability zone balancing."
  syntax: "public Boolean zoneRedundant()"
  returns:
    description: "the zoneRedundant value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.appservice.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.14.0
