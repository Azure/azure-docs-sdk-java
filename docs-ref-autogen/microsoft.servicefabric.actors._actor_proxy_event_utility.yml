### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors._actor_proxy_event_utility
  id: _actor_proxy_event_utility
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_proxy_event_utility.subscribeAsync(ActorEventPublisher,TEvent)
  - microsoft.servicefabric.actors._actor_proxy_event_utility.subscribeAsync(ActorEventPublisher,TEvent,Duration)
  - microsoft.servicefabric.actors._actor_proxy_event_utility.unsubscribeAsync(ActorEventPublisher,TEvent)
  href: microsoft.servicefabric.actors._actor_proxy_event_utility.yml
  langs:
  - java
  name: ActorProxyEventUtility
  nameWithType: ActorProxyEventUtility
  fullName: microsoft.servicefabric.actors.ActorProxyEventUtility
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyEventUtility.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyEventUtility.java
    startLine: 8
  package: microsoft.servicefabric.actors
  summary: <p>Contains extension methods related to actor events. </p>
  syntax:
    content: public class ActorProxyEventUtility
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.actors._actor_proxy_event_utility.subscribeAsync(ActorEventPublisher,TEvent)
  id: subscribeAsync(ActorEventPublisher,TEvent)
  parent: microsoft.servicefabric.actors._actor_proxy_event_utility
  href: microsoft.servicefabric.actors._actor_proxy_event_utility.yml
  langs:
  - java
  name: subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
  nameWithType: ActorProxyEventUtility.subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
  fullName: static <TEvent extends ActorEvents> CompletableFuture<?> microsoft.servicefabric.actors.ActorProxyEventUtility.subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
  overload: microsoft.servicefabric.actors._actor_proxy_event_utility.subscribeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyEventUtility.java
    startLine: 31
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Subscribe to a published actor event.</p>

    <p>

    When actorProxy is not of type <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorProxy</xref></p>

    <p>When TEvent doesn't implement <xref uid="microsoft.servicefabric.actors._actor_events" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorEvents</xref></p>
  syntax:
    content: public static static<TEvent extends ActorEvents> CompletableFuture<?> subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
    parameters:
    - id: actorProxy
      type: microsoft.servicefabric.actors._actor_event_publisher
      description: <p>The actor that publishes the event. </p>
    - id: subscriber
      type: a0359c96
      description: <p>The subscriber that receives the event. </p>
    return:
      type: 8aed7311microsoft.servicefabric.actors._actor_eventsa598367f
      description: <p>A task that represents the asynchronous operation of subscribing to a published actor event.. </p>
  exceptions:
  - type: 6bd89211
- uid: microsoft.servicefabric.actors._actor_proxy_event_utility.subscribeAsync(ActorEventPublisher,TEvent,Duration)
  id: subscribeAsync(ActorEventPublisher,TEvent,Duration)
  parent: microsoft.servicefabric.actors._actor_proxy_event_utility
  href: microsoft.servicefabric.actors._actor_proxy_event_utility.yml
  langs:
  - java
  name: subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber, Duration resubscriptionInterval)
  nameWithType: ActorProxyEventUtility.subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber, Duration resubscriptionInterval)
  fullName: static <TEvent extends ActorEvents> CompletableFuture<?> microsoft.servicefabric.actors.ActorProxyEventUtility.subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber, Duration resubscriptionInterval)
  overload: microsoft.servicefabric.actors._actor_proxy_event_utility.subscribeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyEventUtility.java
    startLine: 58
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Subscribe to a published actor event.</p>

    <p>

    When actorProxy is not of type <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorProxy</xref></p>

    <p>When TEvent doesn't implement <xref uid="microsoft.servicefabric.actors._actor_events" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorEvents</xref></p>
  syntax:
    content: public static static<TEvent extends ActorEvents> CompletableFuture<?> subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber, Duration resubscriptionInterval)
    parameters:
    - id: actorProxy
      type: microsoft.servicefabric.actors._actor_event_publisher
      description: <p>The actor that publishes the event. </p>
    - id: subscriber
      type: a0359c96
      description: <p>The subscriber that receives the event. </p>
    - id: resubscriptionInterval
      type: e02a2de0
      description: <p>The time between re-subscription attempts. </p>
    return:
      type: 8aed7311microsoft.servicefabric.actors._actor_eventsa598367f
      description: <p>A task that represents the asynchronous operation of subscribing to a published actor event.. </p>
  exceptions:
  - type: 6bd89211
- uid: microsoft.servicefabric.actors._actor_proxy_event_utility.unsubscribeAsync(ActorEventPublisher,TEvent)
  id: unsubscribeAsync(ActorEventPublisher,TEvent)
  parent: microsoft.servicefabric.actors._actor_proxy_event_utility
  href: microsoft.servicefabric.actors._actor_proxy_event_utility.yml
  langs:
  - java
  name: unsubscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
  nameWithType: ActorProxyEventUtility.unsubscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
  fullName: static <TEvent extends ActorEvents> CompletableFuture<?> microsoft.servicefabric.actors.ActorProxyEventUtility.unsubscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
  overload: microsoft.servicefabric.actors._actor_proxy_event_utility.unsubscribeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyEventUtility.java
    startLine: 98
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Unsubscribe from a published actor event.</p>

    <p>

    When actorProxy is not of type <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorProxy</xref></p>

    <p>When TEvent doesn't implement <xref uid="microsoft.servicefabric.actors._actor_events" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorEvents</xref></p>
  syntax:
    content: public static static<TEvent extends ActorEvents> CompletableFuture<?> unsubscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
    parameters:
    - id: actorProxy
      type: microsoft.servicefabric.actors._actor_event_publisher
      description: <p>The actor that publishes the event. </p>
    - id: subscriber
      type: a0359c96
      description: <p>The subscriber that receives the event. </p>
    return:
      type: 8aed7311microsoft.servicefabric.actors._actor_eventsa598367f
      description: <p>A task that represents the asynchronous operation of un-subscribing from a published actor event. </p>
  exceptions:
  - type: 6bd89211
references:
- uid: 6bd89211
  spec.java:
  - name: java.lang.IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: a0359c96
  spec.java:
  - name: TEvent
    fullName: TEvent
- uid: 8aed7311microsoft.servicefabric.actors._actor_eventsa598367f
  spec.java:
  - name: 'static<TEvent extends '
    fullName: 'static<TEvent extends '
  - uid: microsoft.servicefabric.actors._actor_events
    name: ActorEvents
    fullName: microsoft.servicefabric.actors.ActorEvents
    href: microsoft.servicefabric.actors._actor_events.yml
  - name: '> CompletableFuture<?>'
    fullName: '> CompletableFuture<?>'
- uid: microsoft.servicefabric.actors._actor_proxy_event_utility.subscribeAsync*
  name: subscribeAsync
  nameWithType: ActorProxyEventUtility.subscribeAsync
  fullName: static <TEvent extends ActorEvents> CompletableFuture<?> microsoft.servicefabric.actors.ActorProxyEventUtility.subscribeAsync
  package: microsoft.servicefabric.actors
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: microsoft.servicefabric.actors._actor_proxy_event_utility.unsubscribeAsync*
  name: unsubscribeAsync
  nameWithType: ActorProxyEventUtility.unsubscribeAsync
  fullName: static <TEvent extends ActorEvents> CompletableFuture<?> microsoft.servicefabric.actors.ActorProxyEventUtility.unsubscribeAsync
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_events
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_events.yml
  name: ActorEvents
  nameWithType: ActorEvents
  fullName: microsoft.servicefabric.actors.ActorEvents
  type: Interface
  summary: <p>Represents actor events. Interface that creates actor events must implement this interface </p>
  syntax:
    content: public interface ActorEvents
- uid: microsoft.servicefabric.actors._actor_event_publisher
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_event_publisher.yml
  name: ActorEventPublisher
  nameWithType: ActorEventPublisher
  fullName: microsoft.servicefabric.actors.ActorEventPublisher
  type: Interface
  summary: <p>Represents publisher of actor events. Publishers of actor events must implement this interface </p>
  syntax:
    content: public interface ActorEventPublisher
- uid: microsoft.servicefabric.actors._actor_proxy
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_proxy.yml
  name: ActorProxy
  nameWithType: ActorProxy
  fullName: microsoft.servicefabric.actors.ActorProxy
  type: Interface
  summary: <p>Provides the interface for implementation of proxy access for actor service. </p>
  syntax:
    content: public interface ActorProxy
