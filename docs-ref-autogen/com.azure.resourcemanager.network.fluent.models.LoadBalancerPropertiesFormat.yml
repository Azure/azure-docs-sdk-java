### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat"
fullName: "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat"
name: "LoadBalancerPropertiesFormat"
nameWithType: "LoadBalancerPropertiesFormat"
summary: "Properties of the load balancer."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LoadBalancerPropertiesFormat"
constructors:
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.LoadBalancerPropertiesFormat()"
methods:
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.backendAddressPools()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.frontendIpConfigurations()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.inboundNatPools()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.inboundNatRules()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.loadBalancingRules()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.outboundRules()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.probes()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.provisioningState()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.resourceGuid()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.validate()"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.withBackendAddressPools(java.util.List<com.azure.resourcemanager.network.fluent.models.BackendAddressPoolInner>)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.withFrontendIpConfigurations(java.util.List<com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner>)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.withInboundNatPools(java.util.List<com.azure.resourcemanager.network.models.InboundNatPool>)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.withInboundNatRules(java.util.List<com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner>)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.withLoadBalancingRules(java.util.List<com.azure.resourcemanager.network.fluent.models.LoadBalancingRuleInner>)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.withOutboundRules(java.util.List<com.azure.resourcemanager.network.fluent.models.OutboundRuleInner>)"
- "com.azure.resourcemanager.network.fluent.models.LoadBalancerPropertiesFormat.withProbes(java.util.List<com.azure.resourcemanager.network.fluent.models.ProbeInner>)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.13.0
