### YamlMime:JavaType
uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient"
fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient"
name: "SipRoutingAsyncClient"
nameWithType: "SipRoutingAsyncClient"
summary: "Asynchronous SIP Routing Client."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SipRoutingAsyncClient**"
methods:
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.deleteTrunk(java.lang.String)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.deleteTrunk(String fqdn)"
  name: "deleteTrunk(String fqdn)"
  nameWithType: "SipRoutingAsyncClient.deleteTrunk(String fqdn)"
  summary: "Deletes SIP Trunk."
  parameters:
  - description: "SIP Trunk FQDN."
    name: "fqdn"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteTrunk(String fqdn)"
  desc: "Deletes SIP Trunk.\n\n**Code Samples**\n\n```java\nsipRoutingAsyncClient.deleteTrunk(\"<trunk fqdn>\").block();\n```"
  returns:
    description: "void."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.deleteTrunkWithResponse(java.lang.String)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.deleteTrunkWithResponse(String fqdn)"
  name: "deleteTrunkWithResponse(String fqdn)"
  nameWithType: "SipRoutingAsyncClient.deleteTrunkWithResponse(String fqdn)"
  summary: "Deletes SIP Trunk."
  parameters:
  - description: "SIP Trunk FQDN."
    name: "fqdn"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> deleteTrunkWithResponse(String fqdn)"
  desc: "Deletes SIP Trunk.\n\n**Code Samples**\n\n```java\nsipRoutingAsyncClient.deleteTrunkWithResponse(\"<trunk fqdn>\").subscribe(response -> {\n     System.out.println(\"Response status \" + response.getStatusCode());\n });\n```"
  returns:
    description: "Response object."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.getTrunk(java.lang.String)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.getTrunk(String fqdn)"
  name: "getTrunk(String fqdn)"
  nameWithType: "SipRoutingAsyncClient.getTrunk(String fqdn)"
  summary: "Gets SIP Trunk by FQDN."
  parameters:
  - description: "SIP Trunk FQDN."
    name: "fqdn"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<SipTrunk> getTrunk(String fqdn)"
  desc: "Gets SIP Trunk by FQDN.\n\n**Code Samples**\n\n```java\nsipRoutingAsyncClient.getTrunk(\"<trunk fqdn>\").subscribe(trunk ->\n     System.out.println(\"Trunk \" + trunk.getFqdn() + \":\" + trunk.getSipSignalingPort()));\n```"
  returns:
    description: "SIP Trunk if exists, null otherwise."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.getTrunkWithResponse(java.lang.String)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.getTrunkWithResponse(String fqdn)"
  name: "getTrunkWithResponse(String fqdn)"
  nameWithType: "SipRoutingAsyncClient.getTrunkWithResponse(String fqdn)"
  summary: "Gets SIP Trunk by FQDN."
  parameters:
  - description: "SIP Trunk FQDN."
    name: "fqdn"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<SipTrunk>> getTrunkWithResponse(String fqdn)"
  desc: "Gets SIP Trunk by FQDN.\n\n**Code Samples**\n\n```java\nsipRoutingAsyncClient.getTrunkWithResponse(\"<trunk fqdn>\")\n     .subscribe(response -> {\n         SipTrunk trunk = response.getValue();\n         System.out.println(\"Trunk \" + trunk.getFqdn() + \":\" + trunk.getSipSignalingPort());\n     });\n```"
  returns:
    description: "Response object with the SIP Trunk if exists, with null otherwise."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.listRoutes()"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.listRoutes()"
  name: "listRoutes()"
  nameWithType: "SipRoutingAsyncClient.listRoutes()"
  summary: "Lists SIP Trunk Routes."
  syntax: "public PagedFlux<SipTrunkRoute> listRoutes()"
  desc: "Lists SIP Trunk Routes.\n\n**Code Samples**\n\n```java\nsipRoutingAsyncClient.listRoutes().subscribe(route -> {\n     System.out.println(\"Route name: \" + route.getName());\n     System.out.println(\"Route description: \" + route.getDescription());\n     System.out.println(\"Route number pattern: \" + route.getNumberPattern());\n     System.out.println(\"Route trunks: \" + String.join(\",\", route.getTrunks()));\n });\n```"
  returns:
    description: "SIP Trunk Routes."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute&text=SipTrunkRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.listTrunks()"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.listTrunks()"
  name: "listTrunks()"
  nameWithType: "SipRoutingAsyncClient.listTrunks()"
  summary: "Lists SIP Trunks."
  syntax: "public PagedFlux<SipTrunk> listTrunks()"
  desc: "Lists SIP Trunks.\n\n**Code Samples**\n\n```java\nsipRoutingAsyncClient.listTrunks()\n     .subscribe(trunk ->\n         System.out.println(\"Trunk \" + trunk.getFqdn() + \":\" + trunk.getSipSignalingPort()));\n```"
  returns:
    description: "SIP Trunks."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.setRoutes(java.util.List<com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute>)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.setRoutes(List<SipTrunkRoute> routes)"
  name: "setRoutes(List<SipTrunkRoute> routes)"
  nameWithType: "SipRoutingAsyncClient.setRoutes(List<SipTrunkRoute> routes)"
  summary: "Sets SIP Trunk Routes."
  parameters:
  - description: "SIP Trunk Routes."
    name: "routes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute&text=SipTrunkRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Void> setRoutes(List<SipTrunkRoute> routes)"
  desc: "Sets SIP Trunk Routes.\n\n**Code Samples**\n\n```java\nsipRoutingAsyncClient.setRoutes(asList(\n     new SipTrunkRoute(\"route name1\", \".*9\").setTrunks(asList(\"<first trunk fqdn>\", \"<second trunk fqdn>\")),\n     new SipTrunkRoute(\"route name2\", \".*\").setTrunks(asList(\"<second trunk fqdn>\"))\n )).block();\n```"
  returns:
    description: "void."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.setRoutesWithResponse(java.util.List<com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute>)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.setRoutesWithResponse(List<SipTrunkRoute> routes)"
  name: "setRoutesWithResponse(List<SipTrunkRoute> routes)"
  nameWithType: "SipRoutingAsyncClient.setRoutesWithResponse(List<SipTrunkRoute> routes)"
  summary: "Sets SIP Trunk Routes."
  parameters:
  - description: "SIP Trunk Routes."
    name: "routes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute&text=SipTrunkRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Response<Void>> setRoutesWithResponse(List<SipTrunkRoute> routes)"
  desc: "Sets SIP Trunk Routes.\n\n**Code Samples**\n\n```java\nsipRoutingAsyncClient.setRoutesWithResponse(asList(\n     new SipTrunkRoute(\"route name1\", \".*9\").setTrunks(asList(\"<first trunk fqdn>\", \"<second trunk fqdn>\")),\n     new SipTrunkRoute(\"route name2\", \".*\").setTrunks(asList(\"<second trunk fqdn>\"))\n )).subscribe(response -> {\n     System.out.println(\"Response status \" + response.getStatusCode());\n });\n```"
  returns:
    description: "Response object."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.setTrunk(com.azure.communication.phonenumbers.siprouting.models.SipTrunk)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.setTrunk(SipTrunk trunk)"
  name: "setTrunk(SipTrunk trunk)"
  nameWithType: "SipRoutingAsyncClient.setTrunk(SipTrunk trunk)"
  summary: "Sets SIP Trunk."
  parameters:
  - description: "SIP Trunk."
    name: "trunk"
    type: "<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> setTrunk(SipTrunk trunk)"
  desc: "Sets SIP Trunk. If a trunk with specified FQDN already exists, it will be replaced, otherwise a new trunk will be added.\n\n**Code Samples**\n\n```java\nsipRoutingAsyncClient.setTrunk(new SipTrunk(\"<trunk fqdn>\", 12345)).block();\n```"
  returns:
    description: "void."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.setTrunks(java.util.List<com.azure.communication.phonenumbers.siprouting.models.SipTrunk>)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.setTrunks(List<SipTrunk> trunks)"
  name: "setTrunks(List<SipTrunk> trunks)"
  nameWithType: "SipRoutingAsyncClient.setTrunks(List<SipTrunk> trunks)"
  summary: "Sets SIP Trunks."
  parameters:
  - description: "SIP Trunks."
    name: "trunks"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Void> setTrunks(List<SipTrunk> trunks)"
  desc: "Sets SIP Trunks.\n\n**Code Samples**\n\n```java\nsipRoutingAsyncClient.setTrunks(asList(\n     new SipTrunk(\"<first trunk fqdn>\", 12345),\n     new SipTrunk(\"<second trunk fqdn>\", 23456)\n )).block();\n```"
  returns:
    description: "void."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.setTrunksWithResponse(java.util.List<com.azure.communication.phonenumbers.siprouting.models.SipTrunk>)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingAsyncClient.setTrunksWithResponse(List<SipTrunk> trunks)"
  name: "setTrunksWithResponse(List<SipTrunk> trunks)"
  nameWithType: "SipRoutingAsyncClient.setTrunksWithResponse(List<SipTrunk> trunks)"
  summary: "Sets SIP Trunks."
  parameters:
  - description: "SIP Trunks."
    name: "trunks"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Response<Void>> setTrunksWithResponse(List<SipTrunk> trunks)"
  desc: "Sets SIP Trunks.\n\n**Code Samples**\n\n```java\nsipRoutingAsyncClient.setTrunksWithResponse(asList(\n     new SipTrunk(\"<first trunk fqdn>\", 12345),\n     new SipTrunk(\"<second trunk fqdn>\", 23456)\n )).subscribe(response -> {\n     System.out.println(\"Response status \" + response.getStatusCode());\n });\n```"
  returns:
    description: "Response object."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
type: "class"
desc: "Asynchronous SIP Routing Client. This client contains all the operations for <xref uid=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SipTrunk\"></xref> and <xref uid=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SipTrunkRoute\"></xref>.\n\n**Instantiating an asynchronous SIP Routing Client using connection string**\n\n```java\nSipRoutingAsyncClient sipRoutingAsyncClient = new SipRoutingClientBuilder()\n     .connectionString(connectionString)\n     .buildAsyncClient();\n```"
metadata: {}
package: "com.azure.communication.phonenumbers.siprouting"
artifact: com.azure:azure-communication-phonenumbers:1.1.1
