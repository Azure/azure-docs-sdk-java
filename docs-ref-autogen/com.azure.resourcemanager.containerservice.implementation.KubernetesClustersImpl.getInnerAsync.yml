### YamlMime:JavaMember
uid: "com.azure.resourcemanager.containerservice.implementation.KubernetesClustersImpl.getInnerAsync*"
fullName: "com.azure.resourcemanager.containerservice.implementation.KubernetesClustersImpl.getInnerAsync"
name: "getInnerAsync"
nameWithType: "KubernetesClustersImpl.getInnerAsync"
members:
- uid: "com.azure.resourcemanager.containerservice.implementation.KubernetesClustersImpl.getInnerAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.implementation.KubernetesClustersImpl.getInnerAsync(String resourceGroupName, String name)"
  name: "getInnerAsync(String resourceGroupName, String name)"
  nameWithType: "KubernetesClustersImpl.getInnerAsync(String resourceGroupName, String name)"
  overridden: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.GroupableResourcesImpl.getInnerAsync(java.lang.String,java.lang.String)"
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Mono<ManagedClusterInner> getInnerAsync(String resourceGroupName, String name)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterInner?alt=com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterInner&text=ManagedClusterInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.containerservice.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.1.0
