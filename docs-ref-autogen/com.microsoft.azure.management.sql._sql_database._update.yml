### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql._sql_database._update
  id: _update
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._update.yml
  langs:
  - java
  name: SqlDatabase.Update
  nameWithType: SqlDatabase.Update
  fullName: com.microsoft.azure.management.sql.SqlDatabase.Update
  type: Interface
  source:
    remote:
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
      branch: 880e2022bf46b71f481107effb7c878a9ae065dd
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 387
  package: com.microsoft.azure.management.sql
  summary: <p>The template for a SQLDatabase modifyState operation, containing all the settings that can be modified. </p>
  syntax:
    content: public interface Update extends SqlDatabase.UpdateStages.WithEdition,SqlDatabase.UpdateStages.WithElasticPoolName,SqlDatabase.UpdateStages.WithMaxSizeBytes,SqlDatabase.UpdateStages.WithServiceObjective,Appliable<SqlDatabase>
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model._appliable.apply()
  - com.microsoft.azure.management.resources.fluentcore.model._appliable.applyAsync()
  - com.microsoft.azure.management.resources.fluentcore.model._appliable.applyAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withEdition(DatabaseEditions)
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.withExistingElasticPool(String)
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.withExistingElasticPool(SqlElasticPool)
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_max_size_bytes.withMaxSizeBytes(long)
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.withNewElasticPool(Creatable<SqlElasticPool>)
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.withoutElasticPool()
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_service_objective.withServiceObjective(ServiceObjectiveName)
references:
- uid: com.microsoft.azure.management.resources.fluentcore.model._appliable.apply()
  parent: com.microsoft.azure.management.resources.fluentcore.model._appliable
  href: com.microsoft.azure.management.resources.fluentcore.model._appliable.yml
  name: apply()
  nameWithType: Appliable<T>.apply()
  fullName: T com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.apply()
  type: Method
  summary: >-
    <p>Execute the update request.</p>

    <p></p>
  syntax:
    content: public T apply()
    return:
      type: 8ce1ecb9
      description: <p>the updated resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._appliable.applyAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model._appliable
  href: com.microsoft.azure.management.resources.fluentcore.model._appliable.yml
  name: applyAsync()
  nameWithType: Appliable<T>.applyAsync()
  fullName: Observable<T> com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.applyAsync()
  type: Method
  summary: >-
    <p>Execute the update request asynchronously.</p>

    <p></p>
  syntax:
    content: public Observable<T> applyAsync()
    return:
      type: c4094ba1
      description: <p>the handle to the REST call </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._appliable.applyAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model._appliable
  href: com.microsoft.azure.management.resources.fluentcore.model._appliable.yml
  name: applyAsync(final ServiceCallback<T> callback)
  nameWithType: Appliable<T>.applyAsync(final ServiceCallback<T> callback)
  fullName: ServiceFuture<T> com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.applyAsync(final ServiceCallback<T> callback)
  type: Method
  summary: >-
    <p>Execute the update request asynchronously.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<T> applyAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback for success and failure </p>
    return:
      type: c0371a4e
      description: <p>the handle to the REST call </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model._indexable
  href: com.microsoft.azure.management.resources.fluentcore.model._indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: String com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withEdition(DatabaseEditions)
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.yml
  name: withEdition(DatabaseEditions edition)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withEdition(DatabaseEditions edition)
  fullName: Update com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withEdition(DatabaseEditions edition)
  type: Method
  summary: >-
    <p>Sets the edition for the SQL Database.</p>

    <p></p>
  syntax:
    content: public Update withEdition(DatabaseEditions edition)
    parameters:
    - id: edition
      type: com.microsoft.azure.management.sql._database_editions
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.withExistingElasticPool(String)
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.yml
  name: withExistingElasticPool(String elasticPoolName)
  nameWithType: SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(String elasticPoolName)
  fullName: Update com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(String elasticPoolName)
  type: Method
  summary: >-
    <p>Sets the existing elastic pool for the SQLDatabase.</p>

    <p></p>
  syntax:
    content: public Update withExistingElasticPool(String elasticPoolName)
    parameters:
    - id: elasticPoolName
      type: "26831127"
      description: <p>for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.withExistingElasticPool(SqlElasticPool)
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.yml
  name: withExistingElasticPool(SqlElasticPool sqlElasticPool)
  nameWithType: SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool sqlElasticPool)
  fullName: Update com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool sqlElasticPool)
  type: Method
  summary: >-
    <p>Sets the existing elastic pool for the SQLDatabase.</p>

    <p></p>
  syntax:
    content: public Update withExistingElasticPool(SqlElasticPool sqlElasticPool)
    parameters:
    - id: sqlElasticPool
      type: com.microsoft.azure.management.sql._sql_elastic_pool
      description: <p>for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_max_size_bytes.withMaxSizeBytes(long)
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_max_size_bytes
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_max_size_bytes.yml
  name: withMaxSizeBytes(long maxSizeBytes)
  nameWithType: SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes(long maxSizeBytes)
  fullName: Update com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes(long maxSizeBytes)
  type: Method
  summary: <p>Sets the max size in bytes for SQL Database. </p>
  syntax:
    content: public Update withMaxSizeBytes(long maxSizeBytes)
    parameters:
    - id: maxSizeBytes
      type: 0364520f
      description: '<p>max size of the <xref uid="com.microsoft.azure.management._azure" data-throw-if-not-resolved="false">Azure</xref> SQL Database expressed in bytes. Note: Only the following sizes are supported (in addition to limitations being placed on each edition): { 100 MB | 500 MB |1 GB | 5 GB | 10 GB | 20 GB | 30 GB â€¦ 150 GB | 200 GB â€¦ 500 GB } </p>'
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.withNewElasticPool(Creatable<SqlElasticPool>)
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.yml
  name: withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  nameWithType: SqlDatabase.UpdateStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  fullName: Update com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  type: Method
  summary: >-
    <p>Sets the new elastic pool for the SQLDatabase, this will create a new elastic pool while creating database.</p>

    <p></p>
  syntax:
    content: public Update withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
    parameters:
    - id: sqlElasticPool
      type: com.microsoft.azure.management.resources.fluentcore.model._creatable78504a52com.microsoft.azure.management.sql._sql_elastic_poola08ddfce
      description: <p>creatable definition for new elastic pool to be created for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.withoutElasticPool()
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.yml
  name: withoutElasticPool()
  nameWithType: SqlDatabase.UpdateStages.WithElasticPoolName.withoutElasticPool()
  fullName: WithEdition com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withoutElasticPool()
  type: Method
  summary: >-
    <p>Removes database from it's elastic pool.</p>

    <p></p>
  syntax:
    content: public WithEdition withoutElasticPool()
    return:
      type: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_service_objective.withServiceObjective(ServiceObjectiveName)
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_service_objective
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_service_objective.yml
  name: withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  nameWithType: SqlDatabase.UpdateStages.WithServiceObjective.withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  fullName: Update com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithServiceObjective.withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  type: Method
  summary: >-
    <p>Sets the service level objective for the SQL Database.</p>

    <p></p>
  syntax:
    content: public Update withServiceObjective(ServiceObjectiveName serviceLevelObjective)
    parameters:
    - id: serviceLevelObjective
      type: com.microsoft.azure.management.sql._service_objective_name
      description: <p>service level objected for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.yml
  name: SqlDatabase.UpdateStages.WithEdition
  nameWithType: SqlDatabase.UpdateStages.WithEdition
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
  type: Interface
  summary: <p>The SQL Database definition to set the edition for database. </p>
  syntax:
    content: public interface WithEdition
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_elastic_pool_name.yml
  name: SqlDatabase.UpdateStages.WithElasticPoolName
  nameWithType: SqlDatabase.UpdateStages.WithElasticPoolName
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName
  type: Interface
  summary: <p>The SQL Database definition to set the elastic pool for database. </p>
  syntax:
    content: public interface WithElasticPoolName
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_max_size_bytes
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_max_size_bytes.yml
  name: SqlDatabase.UpdateStages.WithMaxSizeBytes
  nameWithType: SqlDatabase.UpdateStages.WithMaxSizeBytes
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes
  type: Interface
  summary: <p>The SQL Database definition to set the Max Size in Bytes for database. </p>
  syntax:
    content: public interface WithMaxSizeBytes
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_service_objective
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_service_objective.yml
  name: SqlDatabase.UpdateStages.WithServiceObjective
  nameWithType: SqlDatabase.UpdateStages.WithServiceObjective
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithServiceObjective
  type: Interface
  summary: <p>The SQL Database definition to set the service level objective. </p>
  syntax:
    content: public interface WithServiceObjective
- uid: com.microsoft.azure.management.resources.fluentcore.model._appliable
  parent: com.microsoft.azure.management.resources.fluentcore.model
  href: com.microsoft.azure.management.resources.fluentcore.model._appliable.yml
  name: Appliable<T>
  nameWithType: Appliable<T>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>
  type: Interface
  summary: >-
    <p>The base interface for all template interfaces that support update operations.</p>

    <p></p>
  syntax:
    content: public interface Appliable<T> extends Indexable
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the resource returned from the update. </p>
