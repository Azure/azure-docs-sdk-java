### YamlMime:JavaMember
nameWithType: InternalClient.registerConnectionStatusChangeCallback
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.device.InternalClient.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
  name: registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
  nameWithType: InternalClient.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
  parameters:
  - description: <p>The callback to be fired when the connection status of the device changes. Can be null to unset this listener as long as the provided callbackContext is also null. </p>
    name: callback
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback?alt=com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback&text=IotHubConnectionStatusChangeCallback" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>a context to be passed to the callback. Can be<code>nullÂ 

          </code> . </p>
    name: callbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if provided callback is null </p>
  summary: >-
    <p>Registers a callback to be executed when the connection status of the device changes. The callback will be fired with a status and a reason why the device's status changed. When the callback is fired, the provided context will be provided alongside the status and reason.</p>

    <p>This connection status callback is not triggered by any upstream connection change events. For example, if if the connection status callback is set for a module on an IoT Edge device and that IoT Edge device loses connection to the cloud, this connection status callback won't execute since the connection between the module and the IoT Edge device hasn't changed.</p>

    <p>Note that the thread used to deliver this callback should not be used to call open()/closeNow() on the client that this callback belongs to. All open()/closeNow() operations should be done on a separate thread</p>

    <p></p>
  syntax: public void registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
  uid: com.microsoft.azure.sdk.iot.device.InternalClient.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback,Object)
uid: com.microsoft.azure.sdk.iot.device.InternalClient.registerConnectionStatusChangeCallback*
fullName: com.microsoft.azure.sdk.iot.device.InternalClient.registerConnectionStatusChangeCallback
name: registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
package: com.microsoft.azure.sdk.iot.device
metadata: {}
