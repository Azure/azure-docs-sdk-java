### YamlMime:JavaMember
uid: "com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining*"
fullName: "com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining"
name: "beginTraining"
nameWithType: "FormTrainingClient.beginTraining"
members:
- uid: "com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining(java.lang.String,boolean)"
  fullName: "com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining(String trainingFilesUrl, boolean useTrainingLabels)"
  name: "beginTraining(String trainingFilesUrl, boolean useTrainingLabels)"
  nameWithType: "FormTrainingClient.beginTraining(String trainingFilesUrl, boolean useTrainingLabels)"
  summary: "Create and train a custom model.\n\nModels are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString trainingFilesUrl = \"{SAS-URL-of-your-container-in-blob-storage}\";\n boolean useTrainingLabels = true;\n CustomFormModel customFormModel =\n     formTrainingClient.beginTraining(trainingFilesUrl, useTrainingLabels).getFinalResult();\n System.out.printf(\"Model Id: %s%n\", customFormModel.getModelId());\n System.out.printf(\"Model Status: %s%n\", customFormModel.getModelStatus());\n customFormModel.getSubmodels()\n     .forEach(customFormSubmodel -> customFormSubmodel.getFields()\n         .forEach((key, customFormModelField) ->\n             System.out.printf(\"Form Type: %s Field Text: %s Field Accuracy: %f%n\",\n                 key, customFormModelField.getName(), customFormModelField.getAccuracy())));\n```"
  parameters:
  - description: "an externally accessible Azure storage blob container Uri (preferably a Shared Access\n Signature Uri).\n For instructions on setting up forms for training in an Azure Storage Blob Container, see\n https://docs.microsoft.com/azure/cognitive-services/form-recognizer/build-training-data-set#upload-your-training-data"
    name: "trainingFilesUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "boolean to specify the use of labeled files for training the model."
    name: "useTrainingLabels"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<FormRecognizerOperationResult,CustomFormModel> beginTraining(String trainingFilesUrl, boolean useTrainingLabels)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the training model operation until it has completed, has failed, or has\n been cancelled. The completed operation returns the trained <xref uid=\"com.azure.ai.formrecognizer.training.models.CustomFormModel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"custom form model\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.training.models.CustomFormModel?alt=com.azure.ai.formrecognizer.training.models.CustomFormModel&text=CustomFormModel\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining(java.lang.String,boolean,com.azure.ai.formrecognizer.training.models.TrainingOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining(String trainingFilesUrl, boolean useTrainingLabels, TrainingOptions trainingOptions, Context context)"
  name: "beginTraining(String trainingFilesUrl, boolean useTrainingLabels, TrainingOptions trainingOptions, Context context)"
  nameWithType: "FormTrainingClient.beginTraining(String trainingFilesUrl, boolean useTrainingLabels, TrainingOptions trainingOptions, Context context)"
  summary: "Create and train a custom model. Models are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString trainingFilesUrl = \"{SAS-URL-of-your-container-in-blob-storage}\";\n TrainingFileFilter trainingFileFilter = new TrainingFileFilter().setSubfoldersIncluded(false).setPrefix(\"Invoice\");\n boolean useTrainingLabels = true;\n \n CustomFormModel customFormModel = formTrainingClient.beginTraining(trainingFilesUrl, useTrainingLabels,\n     new TrainingOptions()\n         .setTrainingFileFilter(trainingFileFilter)\n         .setPollInterval(Duration.ofSeconds(5)), Context.NONE)\n     .getFinalResult();\n \n System.out.printf(\"Model Id: %s%n\", customFormModel.getModelId());\n System.out.printf(\"Model Status: %s%n\", customFormModel.getModelStatus());\n customFormModel.getSubmodels()\n     .forEach(customFormSubmodel -> customFormSubmodel.getFields()\n         .forEach((key, customFormModelField) ->\n             System.out.printf(\"Form Type: %s Field Text: %s Field Accuracy: %f%n\",\n                 key, customFormModelField.getName(), customFormModelField.getAccuracy())));\n```"
  parameters:
  - description: "an externally accessible Azure storage blob container Uri (preferably a\n Shared Access Signature Uri).\n For instructions on setting up forms for training in an Azure Storage Blob Container, see\n https://docs.microsoft.com/azure/cognitive-services/form-recognizer/build-training-data-set#upload-your-training-data"
    name: "trainingFilesUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "boolean to specify the use of labeled files for training the model."
    name: "useTrainingLabels"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional configurable <xref uid=\"com.azure.ai.formrecognizer.training.models.TrainingOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref>\n that may be passed when training a model."
    name: "trainingOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.training.models.TrainingOptions?alt=com.azure.ai.formrecognizer.training.models.TrainingOptions&text=TrainingOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<FormRecognizerOperationResult,CustomFormModel> beginTraining(String trainingFilesUrl, boolean useTrainingLabels, TrainingOptions trainingOptions, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the training model operation until it has completed, has failed, or has\n been cancelled. The completed operation returns the trained <xref uid=\"com.azure.ai.formrecognizer.training.models.CustomFormModel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"custom form model\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.training.models.CustomFormModel?alt=com.azure.ai.formrecognizer.training.models.CustomFormModel&text=CustomFormModel\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.formrecognizer.training"
artifact: com.azure:azure-ai-formrecognizer:3.0.4
