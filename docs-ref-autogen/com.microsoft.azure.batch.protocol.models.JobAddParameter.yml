### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter
  id: JobAddParameter
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.JobAddParameter()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.commonEnvironmentSettings()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.constraints()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.displayName()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.id()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.jobManagerTask()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.jobPreparationTask()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.jobReleaseTask()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.metadata()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.networkConfiguration()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.onAllTasksComplete()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.onTaskFailure()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.poolInfo()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.priority()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.usesTaskDependencies()
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withCommonEnvironmentSettings(java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withConstraints(com.microsoft.azure.batch.protocol.models.JobConstraints)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withDisplayName(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withId(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobManagerTask(com.microsoft.azure.batch.protocol.models.JobManagerTask)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobPreparationTask(com.microsoft.azure.batch.protocol.models.JobPreparationTask)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobReleaseTask(com.microsoft.azure.batch.protocol.models.JobReleaseTask)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withNetworkConfiguration(com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnAllTasksComplete(com.microsoft.azure.batch.protocol.models.OnAllTasksComplete)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnTaskFailure(com.microsoft.azure.batch.protocol.models.OnTaskFailure)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withPoolInfo(com.microsoft.azure.batch.protocol.models.PoolInformation)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withPriority(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.JobAddParameter.withUsesTaskDependencies(java.lang.Boolean)
  langs:
  - java
  name: JobAddParameter
  nameWithType: JobAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: An Azure Batch Job to add.
  syntax:
    content: public class JobAddParameter
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.JobAddParameter()
  id: JobAddParameter()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: JobAddParameter()
  nameWithType: JobAddParameter.JobAddParameter()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.JobAddParameter()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.JobAddParameter*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public JobAddParameter()
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.commonEnvironmentSettings()
  id: commonEnvironmentSettings()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: commonEnvironmentSettings()
  nameWithType: JobAddParameter.commonEnvironmentSettings()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.commonEnvironmentSettings()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.commonEnvironmentSettings*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get individual Tasks can override an environment setting specified here by specifying the same setting name with a different value.
  syntax:
    content: public List<EnvironmentSetting> commonEnvironmentSettings()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>
      description: the commonEnvironmentSettings value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.constraints()
  id: constraints()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: constraints()
  nameWithType: JobAddParameter.constraints()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.constraints()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.constraints*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the execution constraints for the Job.
  syntax:
    content: public JobConstraints constraints()
    return:
      type: com.microsoft.azure.batch.protocol.models.JobConstraints
      description: the constraints value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.displayName()
  id: displayName()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: displayName()
  nameWithType: JobAddParameter.displayName()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.displayName()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.displayName*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
  syntax:
    content: public String displayName()
    return:
      type: java.lang.String
      description: the displayName value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.id()
  id: id()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: id()
  nameWithType: JobAddParameter.id()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.id()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.id*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case).
  syntax:
    content: public String id()
    return:
      type: java.lang.String
      description: the id value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobManagerTask()
  id: jobManagerTask()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: jobManagerTask()
  nameWithType: JobAddParameter.jobManagerTask()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobManagerTask()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobManagerTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job. The Job Manager Task's typical purpose is to control and/or monitor Job execution, for example by deciding what additional Tasks to run, determining when the work is complete, etc. (However, a Job Manager Task is not restricted to these activities - it is a fully-fledged Task in the system and perform whatever actions are required for the Job.) For example, a Job Manager Task might download a file specified as a parameter, analyze the contents of that file and submit additional Tasks based on those contents.
  syntax:
    content: public JobManagerTask jobManagerTask()
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: the jobManagerTask value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobPreparationTask()
  id: jobPreparationTask()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: jobPreparationTask()
  nameWithType: JobAddParameter.jobPreparationTask()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobPreparationTask()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobPreparationTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node.
  syntax:
    content: public JobPreparationTask jobPreparationTask()
    return:
      type: com.microsoft.azure.batch.protocol.models.JobPreparationTask
      description: the jobPreparationTask value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobReleaseTask()
  id: jobReleaseTask()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: jobReleaseTask()
  nameWithType: JobAddParameter.jobReleaseTask()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobReleaseTask()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobReleaseTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get a Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Nodes that have run the Job Preparation Task. The primary purpose of the Job Release Task is to undo changes to Compute Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation.
  syntax:
    content: public JobReleaseTask jobReleaseTask()
    return:
      type: com.microsoft.azure.batch.protocol.models.JobReleaseTask
      description: the jobReleaseTask value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.metadata()
  id: metadata()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: metadata()
  nameWithType: JobAddParameter.metadata()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.metadata()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.metadata*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the Batch service does not assign any meaning to metadata; it is solely for the use of user code.
  syntax:
    content: public List<MetadataItem> metadata()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: the metadata value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.networkConfiguration()
  id: networkConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: networkConfiguration()
  nameWithType: JobAddParameter.networkConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.networkConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.networkConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the networkConfiguration value.
  syntax:
    content: public JobNetworkConfiguration networkConfiguration()
    return:
      type: com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration
      description: the networkConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.onAllTasksComplete()
  id: onAllTasksComplete()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: onAllTasksComplete()
  nameWithType: JobAddParameter.onAllTasksComplete()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.onAllTasksComplete()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.onAllTasksComplete*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction. Possible values include: 'noAction', 'terminateJob'."
  syntax:
    content: public OnAllTasksComplete onAllTasksComplete()
    return:
      type: com.microsoft.azure.batch.protocol.models.OnAllTasksComplete
      description: the onAllTasksComplete value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.onTaskFailure()
  id: onTaskFailure()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: onTaskFailure()
  nameWithType: JobAddParameter.onTaskFailure()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.onTaskFailure()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.onTaskFailure*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get a Task is considered to have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction. Possible values include: 'noAction', 'performExitOptionsJobAction'."
  syntax:
    content: public OnTaskFailure onTaskFailure()
    return:
      type: com.microsoft.azure.batch.protocol.models.OnTaskFailure
      description: the onTaskFailure value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.poolInfo()
  id: poolInfo()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: poolInfo()
  nameWithType: JobAddParameter.poolInfo()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.poolInfo()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.poolInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the poolInfo value.
  syntax:
    content: public PoolInformation poolInfo()
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolInformation
      description: the poolInfo value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.priority()
  id: priority()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: priority()
  nameWithType: JobAddParameter.priority()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.priority()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.priority*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.
  syntax:
    content: public Integer priority()
    return:
      type: java.lang.Integer
      description: the priority value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.usesTaskDependencies()
  id: usesTaskDependencies()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: usesTaskDependencies()
  nameWithType: JobAddParameter.usesTaskDependencies()
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.usesTaskDependencies()
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.usesTaskDependencies*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the usesTaskDependencies value.
  syntax:
    content: public Boolean usesTaskDependencies()
    return:
      type: java.lang.Boolean
      description: the usesTaskDependencies value
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withCommonEnvironmentSettings(java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>)
  id: withCommonEnvironmentSettings(java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)
  nameWithType: JobAddParameter.withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withCommonEnvironmentSettings*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set individual Tasks can override an environment setting specified here by specifying the same setting name with a different value.
  syntax:
    content: public JobAddParameter withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)
    parameters:
    - id: commonEnvironmentSettings
      type: java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>
      description: the commonEnvironmentSettings value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withConstraints(com.microsoft.azure.batch.protocol.models.JobConstraints)
  id: withConstraints(com.microsoft.azure.batch.protocol.models.JobConstraints)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withConstraints(JobConstraints constraints)
  nameWithType: JobAddParameter.withConstraints(JobConstraints constraints)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withConstraints(JobConstraints constraints)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withConstraints*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the execution constraints for the Job.
  syntax:
    content: public JobAddParameter withConstraints(JobConstraints constraints)
    parameters:
    - id: constraints
      type: com.microsoft.azure.batch.protocol.models.JobConstraints
      description: the constraints value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withDisplayName(java.lang.String)
  id: withDisplayName(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withDisplayName(String displayName)
  nameWithType: JobAddParameter.withDisplayName(String displayName)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withDisplayName(String displayName)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withDisplayName*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
  syntax:
    content: public JobAddParameter withDisplayName(String displayName)
    parameters:
    - id: displayName
      type: java.lang.String
      description: the displayName value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withId(java.lang.String)
  id: withId(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withId(String id)
  nameWithType: JobAddParameter.withId(String id)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withId(String id)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withId*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case).
  syntax:
    content: public JobAddParameter withId(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the id value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobManagerTask(com.microsoft.azure.batch.protocol.models.JobManagerTask)
  id: withJobManagerTask(com.microsoft.azure.batch.protocol.models.JobManagerTask)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withJobManagerTask(JobManagerTask jobManagerTask)
  nameWithType: JobAddParameter.withJobManagerTask(JobManagerTask jobManagerTask)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobManagerTask(JobManagerTask jobManagerTask)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobManagerTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job. The Job Manager Task's typical purpose is to control and/or monitor Job execution, for example by deciding what additional Tasks to run, determining when the work is complete, etc. (However, a Job Manager Task is not restricted to these activities - it is a fully-fledged Task in the system and perform whatever actions are required for the Job.) For example, a Job Manager Task might download a file specified as a parameter, analyze the contents of that file and submit additional Tasks based on those contents.
  syntax:
    content: public JobAddParameter withJobManagerTask(JobManagerTask jobManagerTask)
    parameters:
    - id: jobManagerTask
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: the jobManagerTask value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobPreparationTask(com.microsoft.azure.batch.protocol.models.JobPreparationTask)
  id: withJobPreparationTask(com.microsoft.azure.batch.protocol.models.JobPreparationTask)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withJobPreparationTask(JobPreparationTask jobPreparationTask)
  nameWithType: JobAddParameter.withJobPreparationTask(JobPreparationTask jobPreparationTask)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobPreparationTask(JobPreparationTask jobPreparationTask)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobPreparationTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node.
  syntax:
    content: public JobAddParameter withJobPreparationTask(JobPreparationTask jobPreparationTask)
    parameters:
    - id: jobPreparationTask
      type: com.microsoft.azure.batch.protocol.models.JobPreparationTask
      description: the jobPreparationTask value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobReleaseTask(com.microsoft.azure.batch.protocol.models.JobReleaseTask)
  id: withJobReleaseTask(com.microsoft.azure.batch.protocol.models.JobReleaseTask)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withJobReleaseTask(JobReleaseTask jobReleaseTask)
  nameWithType: JobAddParameter.withJobReleaseTask(JobReleaseTask jobReleaseTask)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobReleaseTask(JobReleaseTask jobReleaseTask)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobReleaseTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set a Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Nodes that have run the Job Preparation Task. The primary purpose of the Job Release Task is to undo changes to Compute Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation.
  syntax:
    content: public JobAddParameter withJobReleaseTask(JobReleaseTask jobReleaseTask)
    parameters:
    - id: jobReleaseTask
      type: com.microsoft.azure.batch.protocol.models.JobReleaseTask
      description: the jobReleaseTask value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  id: withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: JobAddParameter.withMetadata(List<MetadataItem> metadata)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withMetadata(List<MetadataItem> metadata)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withMetadata*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the Batch service does not assign any meaning to metadata; it is solely for the use of user code.
  syntax:
    content: public JobAddParameter withMetadata(List<MetadataItem> metadata)
    parameters:
    - id: metadata
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: the metadata value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withNetworkConfiguration(com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration)
  id: withNetworkConfiguration(com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)
  nameWithType: JobAddParameter.withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withNetworkConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the networkConfiguration value.
  syntax:
    content: public JobAddParameter withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)
    parameters:
    - id: networkConfiguration
      type: com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration
      description: the networkConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnAllTasksComplete(com.microsoft.azure.batch.protocol.models.OnAllTasksComplete)
  id: withOnAllTasksComplete(com.microsoft.azure.batch.protocol.models.OnAllTasksComplete)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)
  nameWithType: JobAddParameter.withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnAllTasksComplete*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction. Possible values include: 'noAction', 'terminateJob'."
  syntax:
    content: public JobAddParameter withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)
    parameters:
    - id: onAllTasksComplete
      type: com.microsoft.azure.batch.protocol.models.OnAllTasksComplete
      description: the onAllTasksComplete value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnTaskFailure(com.microsoft.azure.batch.protocol.models.OnTaskFailure)
  id: withOnTaskFailure(com.microsoft.azure.batch.protocol.models.OnTaskFailure)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withOnTaskFailure(OnTaskFailure onTaskFailure)
  nameWithType: JobAddParameter.withOnTaskFailure(OnTaskFailure onTaskFailure)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnTaskFailure(OnTaskFailure onTaskFailure)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnTaskFailure*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set a Task is considered to have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction. Possible values include: 'noAction', 'performExitOptionsJobAction'."
  syntax:
    content: public JobAddParameter withOnTaskFailure(OnTaskFailure onTaskFailure)
    parameters:
    - id: onTaskFailure
      type: com.microsoft.azure.batch.protocol.models.OnTaskFailure
      description: the onTaskFailure value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withPoolInfo(com.microsoft.azure.batch.protocol.models.PoolInformation)
  id: withPoolInfo(com.microsoft.azure.batch.protocol.models.PoolInformation)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withPoolInfo(PoolInformation poolInfo)
  nameWithType: JobAddParameter.withPoolInfo(PoolInformation poolInfo)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withPoolInfo(PoolInformation poolInfo)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withPoolInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the poolInfo value.
  syntax:
    content: public JobAddParameter withPoolInfo(PoolInformation poolInfo)
    parameters:
    - id: poolInfo
      type: com.microsoft.azure.batch.protocol.models.PoolInformation
      description: the poolInfo value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withPriority(java.lang.Integer)
  id: withPriority(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withPriority(Integer priority)
  nameWithType: JobAddParameter.withPriority(Integer priority)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withPriority(Integer priority)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withPriority*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.
  syntax:
    content: public JobAddParameter withPriority(Integer priority)
    parameters:
    - id: priority
      type: java.lang.Integer
      description: the priority value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withUsesTaskDependencies(java.lang.Boolean)
  id: withUsesTaskDependencies(java.lang.Boolean)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobAddParameter
  langs:
  - java
  name: withUsesTaskDependencies(Boolean usesTaskDependencies)
  nameWithType: JobAddParameter.withUsesTaskDependencies(Boolean usesTaskDependencies)
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withUsesTaskDependencies(Boolean usesTaskDependencies)
  overload: com.microsoft.azure.batch.protocol.models.JobAddParameter.withUsesTaskDependencies*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the usesTaskDependencies value.
  syntax:
    content: public JobAddParameter withUsesTaskDependencies(Boolean usesTaskDependencies)
    parameters:
    - id: usesTaskDependencies
      type: java.lang.Boolean
      description: the usesTaskDependencies value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: the JobAddParameter object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.JobAddParameter*
  name: JobAddParameter
  nameWithType: JobAddParameter.JobAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.JobAddParameter
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.id*
  name: id
  nameWithType: JobAddParameter.id
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.id
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withId*
  name: withId
  nameWithType: JobAddParameter.withId
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.displayName*
  name: displayName
  nameWithType: JobAddParameter.displayName
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.displayName
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withDisplayName*
  name: withDisplayName
  nameWithType: JobAddParameter.withDisplayName
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withDisplayName
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.priority*
  name: priority
  nameWithType: JobAddParameter.priority
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.priority
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withPriority*
  name: withPriority
  nameWithType: JobAddParameter.withPriority
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withPriority
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints
  name: JobConstraints
  nameWithType: JobConstraints
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.constraints*
  name: constraints
  nameWithType: JobAddParameter.constraints
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.constraints
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withConstraints*
  name: withConstraints
  nameWithType: JobAddParameter.withConstraints
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withConstraints
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask
  name: JobManagerTask
  nameWithType: JobManagerTask
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobManagerTask*
  name: jobManagerTask
  nameWithType: JobAddParameter.jobManagerTask
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobManagerTask
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobManagerTask*
  name: withJobManagerTask
  nameWithType: JobAddParameter.withJobManagerTask
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobManagerTask
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobPreparationTask
  name: JobPreparationTask
  nameWithType: JobPreparationTask
  fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTask
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobPreparationTask*
  name: jobPreparationTask
  nameWithType: JobAddParameter.jobPreparationTask
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobPreparationTask
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobPreparationTask*
  name: withJobPreparationTask
  nameWithType: JobAddParameter.withJobPreparationTask
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobPreparationTask
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobReleaseTask
  name: JobReleaseTask
  nameWithType: JobReleaseTask
  fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTask
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobReleaseTask*
  name: jobReleaseTask
  nameWithType: JobAddParameter.jobReleaseTask
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.jobReleaseTask
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobReleaseTask*
  name: withJobReleaseTask
  nameWithType: JobAddParameter.withJobReleaseTask
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobReleaseTask
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
    name: EnvironmentSetting
    fullName: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.commonEnvironmentSettings*
  name: commonEnvironmentSettings
  nameWithType: JobAddParameter.commonEnvironmentSettings
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.commonEnvironmentSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withCommonEnvironmentSettings*
  name: withCommonEnvironmentSettings
  nameWithType: JobAddParameter.withCommonEnvironmentSettings
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withCommonEnvironmentSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolInformation
  name: PoolInformation
  nameWithType: PoolInformation
  fullName: com.microsoft.azure.batch.protocol.models.PoolInformation
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.poolInfo*
  name: poolInfo
  nameWithType: JobAddParameter.poolInfo
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.poolInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withPoolInfo*
  name: withPoolInfo
  nameWithType: JobAddParameter.withPoolInfo
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withPoolInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.OnAllTasksComplete
  name: OnAllTasksComplete
  nameWithType: OnAllTasksComplete
  fullName: com.microsoft.azure.batch.protocol.models.OnAllTasksComplete
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.onAllTasksComplete*
  name: onAllTasksComplete
  nameWithType: JobAddParameter.onAllTasksComplete
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.onAllTasksComplete
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnAllTasksComplete*
  name: withOnAllTasksComplete
  nameWithType: JobAddParameter.withOnAllTasksComplete
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnAllTasksComplete
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.OnTaskFailure
  name: OnTaskFailure
  nameWithType: OnTaskFailure
  fullName: com.microsoft.azure.batch.protocol.models.OnTaskFailure
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.onTaskFailure*
  name: onTaskFailure
  nameWithType: JobAddParameter.onTaskFailure
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.onTaskFailure
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnTaskFailure*
  name: withOnTaskFailure
  nameWithType: JobAddParameter.withOnTaskFailure
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnTaskFailure
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.MetadataItem
    name: MetadataItem
    fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.metadata*
  name: metadata
  nameWithType: JobAddParameter.metadata
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.metadata
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withMetadata*
  name: withMetadata
  nameWithType: JobAddParameter.withMetadata
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withMetadata
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.usesTaskDependencies*
  name: usesTaskDependencies
  nameWithType: JobAddParameter.usesTaskDependencies
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.usesTaskDependencies
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withUsesTaskDependencies*
  name: withUsesTaskDependencies
  nameWithType: JobAddParameter.withUsesTaskDependencies
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withUsesTaskDependencies
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration
  name: JobNetworkConfiguration
  nameWithType: JobNetworkConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.networkConfiguration*
  name: networkConfiguration
  nameWithType: JobAddParameter.networkConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.networkConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter.withNetworkConfiguration*
  name: withNetworkConfiguration
  nameWithType: JobAddParameter.withNetworkConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter.withNetworkConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
  name: EnvironmentSetting
  nameWithType: EnvironmentSetting
  fullName: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
- uid: com.microsoft.azure.batch.protocol.models.MetadataItem
  name: MetadataItem
  nameWithType: MetadataItem
  fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
