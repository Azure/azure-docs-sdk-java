### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter"
fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter"
name: "JobAddParameter"
nameWithType: "JobAddParameter"
summary: "An Azure Batch Job to add."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class JobAddParameter"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.JobAddParameter()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.JobAddParameter()"
  name: "JobAddParameter()"
  nameWithType: "JobAddParameter.JobAddParameter()"
  syntax: "public JobAddParameter()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.commonEnvironmentSettings()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.commonEnvironmentSettings()"
  name: "commonEnvironmentSettings()"
  nameWithType: "JobAddParameter.commonEnvironmentSettings()"
  summary: "Get individual Tasks can override an environment setting specified here by specifying the same setting name with a different value."
  syntax: "public List<EnvironmentSetting> commonEnvironmentSettings()"
  desc: "Get individual Tasks can override an environment setting specified here by specifying the same setting name with a different value."
  returns:
    description: "the commonEnvironmentSettings value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.EnvironmentSetting?alt=com.microsoft.azure.batch.protocol.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.constraints()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.constraints()"
  name: "constraints()"
  nameWithType: "JobAddParameter.constraints()"
  summary: "Get the execution constraints for the Job."
  syntax: "public JobConstraints constraints()"
  desc: "Get the execution constraints for the Job."
  returns:
    description: "the constraints value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.displayName()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.displayName()"
  name: "displayName()"
  nameWithType: "JobAddParameter.displayName()"
  summary: "Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  syntax: "public String displayName()"
  desc: "Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the displayName value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.id()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.id()"
  name: "id()"
  nameWithType: "JobAddParameter.id()"
  summary: "Get the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters."
  syntax: "public String id()"
  desc: "Get the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case)."
  returns:
    description: "the id value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.jobManagerTask()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.jobManagerTask()"
  name: "jobManagerTask()"
  nameWithType: "JobAddParameter.jobManagerTask()"
  summary: "Get if the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job."
  syntax: "public JobManagerTask jobManagerTask()"
  desc: "Get if the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job. The Job Manager Task's typical purpose is to control and/or monitor Job execution, for example by deciding what additional Tasks to run, determining when the work is complete, etc. (However, a Job Manager Task is not restricted to these activities - it is a fully-fledged Task in the system and perform whatever actions are required for the Job.) For example, a Job Manager Task might download a file specified as a parameter, analyze the contents of that file and submit additional Tasks based on those contents."
  returns:
    description: "the jobManagerTask value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobManagerTask?alt=com.microsoft.azure.batch.protocol.models.JobManagerTask&text=JobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.jobPreparationTask()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.jobPreparationTask()"
  name: "jobPreparationTask()"
  nameWithType: "JobAddParameter.jobPreparationTask()"
  summary: "Get if a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
  syntax: "public JobPreparationTask jobPreparationTask()"
  desc: "Get if a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
  returns:
    description: "the jobPreparationTask value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationTask?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTask&text=JobPreparationTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.jobReleaseTask()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.jobReleaseTask()"
  name: "jobReleaseTask()"
  nameWithType: "JobAddParameter.jobReleaseTask()"
  summary: "Get a Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job."
  syntax: "public JobReleaseTask jobReleaseTask()"
  desc: "Get a Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Nodes that have run the Job Preparation Task. The primary purpose of the Job Release Task is to undo changes to Compute Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation."
  returns:
    description: "the jobReleaseTask value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.metadata()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.metadata()"
  name: "metadata()"
  nameWithType: "JobAddParameter.metadata()"
  summary: "Get the Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  syntax: "public List<MetadataItem> metadata()"
  desc: "Get the Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  returns:
    description: "the metadata value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.networkConfiguration()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.networkConfiguration()"
  name: "networkConfiguration()"
  nameWithType: "JobAddParameter.networkConfiguration()"
  summary: "Get the network<wbr>Configuration value."
  syntax: "public JobNetworkConfiguration networkConfiguration()"
  desc: "Get the networkConfiguration value."
  returns:
    description: "the networkConfiguration value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration?alt=com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration&text=JobNetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.onAllTasksComplete()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.onAllTasksComplete()"
  name: "onAllTasksComplete()"
  nameWithType: "JobAddParameter.onAllTasksComplete()"
  summary: "Get note that if a Job contains no Tasks, then all Tasks are considered complete."
  syntax: "public OnAllTasksComplete onAllTasksComplete()"
  desc: "Get note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction. Possible values include: 'noAction', 'terminateJob'."
  returns:
    description: "the onAllTasksComplete value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.onTaskFailure()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.onTaskFailure()"
  name: "onTaskFailure()"
  nameWithType: "JobAddParameter.onTaskFailure()"
  summary: "Get a Task is considered to have failed if has a failure<wbr>Info."
  syntax: "public OnTaskFailure onTaskFailure()"
  desc: "Get a Task is considered to have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction. Possible values include: 'noAction', 'performExitOptionsJobAction'."
  returns:
    description: "the onTaskFailure value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.OnTaskFailure?alt=com.microsoft.azure.batch.protocol.models.OnTaskFailure&text=OnTaskFailure\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.poolInfo()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.poolInfo()"
  name: "poolInfo()"
  nameWithType: "JobAddParameter.poolInfo()"
  summary: "Get the pool<wbr>Info value."
  syntax: "public PoolInformation poolInfo()"
  desc: "Get the poolInfo value."
  returns:
    description: "the poolInfo value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.priority()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.priority()"
  name: "priority()"
  nameWithType: "JobAddParameter.priority()"
  summary: "Get priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority."
  syntax: "public Integer priority()"
  desc: "Get priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0."
  returns:
    description: "the priority value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.usesTaskDependencies()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.usesTaskDependencies()"
  name: "usesTaskDependencies()"
  nameWithType: "JobAddParameter.usesTaskDependencies()"
  summary: "Get the uses<wbr>Task<wbr>Dependencies value."
  syntax: "public Boolean usesTaskDependencies()"
  desc: "Get the usesTaskDependencies value."
  returns:
    description: "the usesTaskDependencies value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withCommonEnvironmentSettings(java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  name: "withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  nameWithType: "JobAddParameter.withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  summary: "Set individual Tasks can override an environment setting specified here by specifying the same setting name with a different value."
  parameters:
  - description: "the commonEnvironmentSettings value to set"
    name: "commonEnvironmentSettings"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.EnvironmentSetting?alt=com.microsoft.azure.batch.protocol.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JobAddParameter withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  desc: "Set individual Tasks can override an environment setting specified here by specifying the same setting name with a different value."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withConstraints(com.microsoft.azure.batch.protocol.models.JobConstraints)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withConstraints(JobConstraints constraints)"
  name: "withConstraints(JobConstraints constraints)"
  nameWithType: "JobAddParameter.withConstraints(JobConstraints constraints)"
  summary: "Set the execution constraints for the Job."
  parameters:
  - description: "the constraints value to set"
    name: "constraints"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobAddParameter withConstraints(JobConstraints constraints)"
  desc: "Set the execution constraints for the Job."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withDisplayName(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withDisplayName(String displayName)"
  name: "withDisplayName(String displayName)"
  nameWithType: "JobAddParameter.withDisplayName(String displayName)"
  summary: "Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  parameters:
  - description: "the displayName value to set"
    name: "displayName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobAddParameter withDisplayName(String displayName)"
  desc: "Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withId(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withId(String id)"
  name: "withId(String id)"
  nameWithType: "JobAddParameter.withId(String id)"
  summary: "Set the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters."
  parameters:
  - description: "the id value to set"
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobAddParameter withId(String id)"
  desc: "Set the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case)."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobManagerTask(com.microsoft.azure.batch.protocol.models.JobManagerTask)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobManagerTask(JobManagerTask jobManagerTask)"
  name: "withJobManagerTask(JobManagerTask jobManagerTask)"
  nameWithType: "JobAddParameter.withJobManagerTask(JobManagerTask jobManagerTask)"
  summary: "Set if the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job."
  parameters:
  - description: "the jobManagerTask value to set"
    name: "jobManagerTask"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobManagerTask?alt=com.microsoft.azure.batch.protocol.models.JobManagerTask&text=JobManagerTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobAddParameter withJobManagerTask(JobManagerTask jobManagerTask)"
  desc: "Set if the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job. The Job Manager Task's typical purpose is to control and/or monitor Job execution, for example by deciding what additional Tasks to run, determining when the work is complete, etc. (However, a Job Manager Task is not restricted to these activities - it is a fully-fledged Task in the system and perform whatever actions are required for the Job.) For example, a Job Manager Task might download a file specified as a parameter, analyze the contents of that file and submit additional Tasks based on those contents."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobPreparationTask(com.microsoft.azure.batch.protocol.models.JobPreparationTask)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobPreparationTask(JobPreparationTask jobPreparationTask)"
  name: "withJobPreparationTask(JobPreparationTask jobPreparationTask)"
  nameWithType: "JobAddParameter.withJobPreparationTask(JobPreparationTask jobPreparationTask)"
  summary: "Set if a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
  parameters:
  - description: "the jobPreparationTask value to set"
    name: "jobPreparationTask"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationTask?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTask&text=JobPreparationTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobAddParameter withJobPreparationTask(JobPreparationTask jobPreparationTask)"
  desc: "Set if a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobReleaseTask(com.microsoft.azure.batch.protocol.models.JobReleaseTask)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withJobReleaseTask(JobReleaseTask jobReleaseTask)"
  name: "withJobReleaseTask(JobReleaseTask jobReleaseTask)"
  nameWithType: "JobAddParameter.withJobReleaseTask(JobReleaseTask jobReleaseTask)"
  summary: "Set a Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job."
  parameters:
  - description: "the jobReleaseTask value to set"
    name: "jobReleaseTask"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobAddParameter withJobReleaseTask(JobReleaseTask jobReleaseTask)"
  desc: "Set a Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Nodes that have run the Job Preparation Task. The primary purpose of the Job Release Task is to undo changes to Compute Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withMetadata(List<MetadataItem> metadata)"
  name: "withMetadata(List<MetadataItem> metadata)"
  nameWithType: "JobAddParameter.withMetadata(List<MetadataItem> metadata)"
  summary: "Set the Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  parameters:
  - description: "the metadata value to set"
    name: "metadata"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JobAddParameter withMetadata(List<MetadataItem> metadata)"
  desc: "Set the Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withNetworkConfiguration(com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)"
  name: "withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)"
  nameWithType: "JobAddParameter.withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)"
  summary: "Set the network<wbr>Configuration value."
  parameters:
  - description: "the networkConfiguration value to set"
    name: "networkConfiguration"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration?alt=com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration&text=JobNetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobAddParameter withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)"
  desc: "Set the networkConfiguration value."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnAllTasksComplete(com.microsoft.azure.batch.protocol.models.OnAllTasksComplete)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)"
  name: "withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)"
  nameWithType: "JobAddParameter.withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)"
  summary: "Set note that if a Job contains no Tasks, then all Tasks are considered complete."
  parameters:
  - description: "the onAllTasksComplete value to set"
    name: "onAllTasksComplete"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobAddParameter withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)"
  desc: "Set note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction. Possible values include: 'noAction', 'terminateJob'."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnTaskFailure(com.microsoft.azure.batch.protocol.models.OnTaskFailure)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withOnTaskFailure(OnTaskFailure onTaskFailure)"
  name: "withOnTaskFailure(OnTaskFailure onTaskFailure)"
  nameWithType: "JobAddParameter.withOnTaskFailure(OnTaskFailure onTaskFailure)"
  summary: "Set a Task is considered to have failed if has a failure<wbr>Info."
  parameters:
  - description: "the onTaskFailure value to set"
    name: "onTaskFailure"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.OnTaskFailure?alt=com.microsoft.azure.batch.protocol.models.OnTaskFailure&text=OnTaskFailure\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobAddParameter withOnTaskFailure(OnTaskFailure onTaskFailure)"
  desc: "Set a Task is considered to have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction. Possible values include: 'noAction', 'performExitOptionsJobAction'."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withPoolInfo(com.microsoft.azure.batch.protocol.models.PoolInformation)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withPoolInfo(PoolInformation poolInfo)"
  name: "withPoolInfo(PoolInformation poolInfo)"
  nameWithType: "JobAddParameter.withPoolInfo(PoolInformation poolInfo)"
  summary: "Set the pool<wbr>Info value."
  parameters:
  - description: "the poolInfo value to set"
    name: "poolInfo"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobAddParameter withPoolInfo(PoolInformation poolInfo)"
  desc: "Set the poolInfo value."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withPriority(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withPriority(Integer priority)"
  name: "withPriority(Integer priority)"
  nameWithType: "JobAddParameter.withPriority(Integer priority)"
  summary: "Set priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority."
  parameters:
  - description: "the priority value to set"
    name: "priority"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobAddParameter withPriority(Integer priority)"
  desc: "Set priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withUsesTaskDependencies(java.lang.Boolean)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobAddParameter.withUsesTaskDependencies(Boolean usesTaskDependencies)"
  name: "withUsesTaskDependencies(Boolean usesTaskDependencies)"
  nameWithType: "JobAddParameter.withUsesTaskDependencies(Boolean usesTaskDependencies)"
  summary: "Set the uses<wbr>Task<wbr>Dependencies value."
  parameters:
  - description: "the usesTaskDependencies value to set"
    name: "usesTaskDependencies"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobAddParameter withUsesTaskDependencies(Boolean usesTaskDependencies)"
  desc: "Set the usesTaskDependencies value."
  returns:
    description: "the JobAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "An Azure Batch Job to add."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
