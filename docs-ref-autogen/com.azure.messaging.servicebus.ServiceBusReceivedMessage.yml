### YamlMime:JavaType
uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage"
fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage"
name: "ServiceBusReceivedMessage"
nameWithType: "ServiceBusReceivedMessage"
summary: "The data structure encapsulating the message received from Service Bus."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServiceBusReceivedMessage"
methods:
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getApplicationProperties()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getApplicationProperties()"
  name: "getApplicationProperties()"
  nameWithType: "ServiceBusReceivedMessage.getApplicationProperties()"
  summary: "Gets the set of free-form <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> properties which may be used for passing metadata associated with the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> during Service Bus operations."
  syntax: "public Map<String,Object> getApplicationProperties()"
  desc: "Gets the set of free-form <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> properties which may be used for passing metadata associated with the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> during Service Bus operations. A common use-case for `properties()` is to associate serialization hints for the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage.getBody()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getBody()\"></xref> as an aid to consumers who wish to deserialize the binary data."
  returns:
    description: "Application properties associated with this <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref>."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getBody()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getBody()"
  name: "getBody()"
  nameWithType: "ServiceBusReceivedMessage.getBody()"
  summary: "Gets the payload wrapped by the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref>."
  syntax: "public BinaryData getBody()"
  desc: "Gets the payload wrapped by the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref>.\n\nThe <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref> wraps byte array and is an abstraction over many different ways it can be represented. It provides convenience APIs to serialize/deserialize the object.\n\nIf the means for deserializing the raw data is not apparent to consumers, a common technique is to make use of <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage.getApplicationProperties()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getApplicationProperties()\"></xref> when creating the event, to associate serialization hints as an aid to consumers who wish to deserialize the binary data."
  returns:
    description: "Binary data representing the payload."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getContentType()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getContentType()"
  name: "getContentType()"
  nameWithType: "ServiceBusReceivedMessage.getContentType()"
  summary: "Gets the content type of the message."
  syntax: "public String getContentType()"
  desc: "Gets the content type of the message.\n\nOptionally describes the payload of the message, with a descriptor following the format of RFC2045, Section 5, for example \"application/json\"."
  returns:
    description: "The contentType of the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref>."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getCorrelationId()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getCorrelationId()"
  name: "getCorrelationId()"
  nameWithType: "ServiceBusReceivedMessage.getCorrelationId()"
  summary: "Gets a correlation identifier."
  syntax: "public String getCorrelationId()"
  desc: "Gets a correlation identifier.\n\nAllows an application to specify a context for the message for the purposes of correlation, for example reflecting the MessageId of a message that is being replied to."
  returns:
    description: "The correlation id of this message."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterErrorDescription()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterErrorDescription()"
  name: "getDeadLetterErrorDescription()"
  nameWithType: "ServiceBusReceivedMessage.getDeadLetterErrorDescription()"
  summary: "Gets the description for a message that has been dead-lettered."
  syntax: "public String getDeadLetterErrorDescription()"
  desc: "Gets the description for a message that has been dead-lettered."
  returns:
    description: "The description for a message that has been dead-lettered; <code>null</code> otherwise."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterReason()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterReason()"
  name: "getDeadLetterReason()"
  nameWithType: "ServiceBusReceivedMessage.getDeadLetterReason()"
  summary: "Gets the reason a message was dead-lettered."
  syntax: "public String getDeadLetterReason()"
  desc: "Gets the reason a message was dead-lettered."
  returns:
    description: "The reason a message was dead-lettered; <code>null</code> otherwise."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterSource()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterSource()"
  name: "getDeadLetterSource()"
  nameWithType: "ServiceBusReceivedMessage.getDeadLetterSource()"
  summary: "Gets the name of the queue or subscription that this message was enqueued on, before it was dead-lettered."
  syntax: "public String getDeadLetterSource()"
  desc: "Gets the name of the queue or subscription that this message was enqueued on, before it was dead-lettered.\n\nThis value is only set in messages that have been dead-lettered and subsequently auto-forwarded from the dead-letter queue to another entity."
  returns:
    description: "The entity in which the message was dead-lettered; <code>null</code> otherwise."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeliveryCount()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeliveryCount()"
  name: "getDeliveryCount()"
  nameWithType: "ServiceBusReceivedMessage.getDeliveryCount()"
  summary: "Gets the number of the times this message was delivered to clients."
  syntax: "public long getDeliveryCount()"
  desc: "Gets the number of the times this message was delivered to clients.\n\nThe count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver."
  returns:
    description: "delivery count of this message."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedSequenceNumber()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedSequenceNumber()"
  name: "getEnqueuedSequenceNumber()"
  nameWithType: "ServiceBusReceivedMessage.getEnqueuedSequenceNumber()"
  summary: "Gets the enqueued sequence number assigned to a message by Service Bus."
  syntax: "public long getEnqueuedSequenceNumber()"
  desc: "Gets the enqueued sequence number assigned to a message by Service Bus.\n\nThe sequence number is a unique 64-bit integer first assigned to a message as it is accepted at its original point of submission."
  returns:
    description: "The enqueued sequence number of this message"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedTime()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedTime()"
  name: "getEnqueuedTime()"
  nameWithType: "ServiceBusReceivedMessage.getEnqueuedTime()"
  summary: "Gets the datetime at which this message was enqueued in Azure Service Bus."
  syntax: "public OffsetDateTime getEnqueuedTime()"
  desc: "Gets the datetime at which this message was enqueued in Azure Service Bus.\n\nThe UTC datetime at which the message has been accepted and stored in the entity. For scheduled messages, this reflects the time when the message was activated. This value can be used as an authoritative and neutral arrival time indicator when the receiver does not want to trust the sender's clock."
  returns:
    description: "The datetime at which the message was enqueued in Azure Service Bus."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getExpiresAt()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getExpiresAt()"
  name: "getExpiresAt()"
  nameWithType: "ServiceBusReceivedMessage.getExpiresAt()"
  summary: "Gets the datetime at which this message will expire."
  syntax: "public OffsetDateTime getExpiresAt()"
  desc: "Gets the datetime at which this message will expire.\n\nThe value is the UTC datetime for when the message is scheduled for removal and will no longer available for retrieval from the entity. Expiry is controlled by the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"time-to-live\"></xref> property. This property is computed from <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedTime()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"enqueued time\"></xref> plus <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"time-to-live\"></xref>."
  returns:
    description: "The <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OffsetDateTime\"></xref> at which this message expires."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockToken()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockToken()"
  name: "getLockToken()"
  nameWithType: "ServiceBusReceivedMessage.getLockToken()"
  summary: "Gets the lock token for the current message."
  syntax: "public String getLockToken()"
  desc: "Gets the lock token for the current message.\n\nThe lock token is a reference to the lock that is being held by the broker in <xref uid=\"com.azure.messaging.servicebus.models.ServiceBusReceiveMode.PEEK_LOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiveMode#PEEK_LOCK\"></xref> mode. Locks are used to explicitly settle messages as explained in the [product documentation][]. The token can also be used to pin the lock permanently through the [Deferral API][] and take the message out of the regular delivery state flow. This property is read-only.\n\n\n[product documentation]: https://docs.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement\n[Deferral API]: https://docs.microsoft.com/azure/service-bus-messaging/message-deferral"
  returns:
    description: "The lock-token for this message. <code>null</code> for messages retrieved via\n <xref uid=\"com.azure.messaging.servicebus.models.ServiceBusReceiveMode.RECEIVE_AND_DELETE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiveMode#RECEIVE_AND_DELETE\"></xref> mode."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockedUntil()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockedUntil()"
  name: "getLockedUntil()"
  nameWithType: "ServiceBusReceivedMessage.getLockedUntil()"
  summary: "Gets the datetime at which the lock of this message expires."
  syntax: "public OffsetDateTime getLockedUntil()"
  desc: "Gets the datetime at which the lock of this message expires.\n\nFor messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC datetime until which the message is held locked in the queue/subscription. When the lock expires, the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeliveryCount()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"delivery count\"></xref> is incremented and the message is again available for retrieval. This property is read-only."
  returns:
    description: "the datetime at which the lock of this message expires if the message is received using <xref uid=\"com.azure.messaging.servicebus.models.ServiceBusReceiveMode.PEEK_LOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiveMode#PEEK_LOCK\"></xref> mode. Otherwise it returns null."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getMessageId()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getMessageId()"
  name: "getMessageId()"
  nameWithType: "ServiceBusReceivedMessage.getMessageId()"
  summary: "Gets the identifier for the message."
  syntax: "public String getMessageId()"
  desc: "Gets the identifier for the message.\n\nThe message identifier is an application-defined value that uniquely identifies the message and its payload. The identifier is a free-form string and can reflect a GUID or an identifier derived from the application context. If enabled, the [duplicate detection][] feature identifies and removes second and further submissions of messages with the same `messageId`.\n\n\n[duplicate detection]: https://docs.microsoft.com/azure/service-bus-messaging/duplicate-detection"
  returns:
    description: "Id of the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref>."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getPartitionKey()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getPartitionKey()"
  name: "getPartitionKey()"
  nameWithType: "ServiceBusReceivedMessage.getPartitionKey()"
  summary: "Gets the partition key for sending a message to a partitioned entity."
  syntax: "public String getPartitionKey()"
  desc: "Gets the partition key for sending a message to a partitioned entity.\n\nFor [partitioned entities][], setting this value enables assigning related messages to the same internal partition, so that submission sequence order is correctly recorded. The partition is chosen by a hash function over this value and cannot be chosen directly. For session-aware entities, the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSessionId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"sessionId\"></xref> property overrides this value.\n\n\n[partitioned entities]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning"
  returns:
    description: "The partition key of this message."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getRawAmqpMessage()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getRawAmqpMessage()"
  name: "getRawAmqpMessage()"
  nameWithType: "ServiceBusReceivedMessage.getRawAmqpMessage()"
  summary: "The representation of message as defined by AMQP protocol."
  syntax: "public AmqpAnnotatedMessage getRawAmqpMessage()"
  desc: "The representation of message as defined by AMQP protocol."
  returns:
    description: "the <xref uid=\"com.azure.core.amqp.models.AmqpAnnotatedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpAnnotatedMessage\"></xref> representing AMQP message."
    type: "<xref href=\"com.azure.core.amqp.models.AmqpAnnotatedMessage?alt=com.azure.core.amqp.models.AmqpAnnotatedMessage&text=AmqpAnnotatedMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyTo()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyTo()"
  name: "getReplyTo()"
  nameWithType: "ServiceBusReceivedMessage.getReplyTo()"
  summary: "Gets the address of an entity to send replies to."
  syntax: "public String getReplyTo()"
  desc: "Gets the address of an entity to send replies to.\n\nThis optional and application-defined value is a standard way to express a reply path to the receiver of the message. When a sender expects a reply, it sets the value to the absolute or relative path of the queue or topic it expects the reply to be sent to."
  returns:
    description: "ReplyTo property value of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyToSessionId()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyToSessionId()"
  name: "getReplyToSessionId()"
  nameWithType: "ServiceBusReceivedMessage.getReplyToSessionId()"
  summary: "Gets or sets a session identifier augmenting the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyTo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReplyTo\"></xref> address."
  syntax: "public String getReplyToSessionId()"
  desc: "Gets or sets a session identifier augmenting the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyTo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReplyTo\"></xref> address.\n\nThis value augments the ReplyTo information and specifies which SessionId should be set for the reply when sent to the reply entity."
  returns:
    description: "ReplyToSessionId property value of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getScheduledEnqueueTime()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getScheduledEnqueueTime()"
  name: "getScheduledEnqueueTime()"
  nameWithType: "ServiceBusReceivedMessage.getScheduledEnqueueTime()"
  summary: "Gets the scheduled enqueue time of this message."
  syntax: "public OffsetDateTime getScheduledEnqueueTime()"
  desc: "Gets the scheduled enqueue time of this message.\n\nThis value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given datetime; the actual activation time depends on the queue's workload and its state."
  returns:
    description: "the datetime at which the message will be enqueued in Azure Service Bus"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSequenceNumber()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSequenceNumber()"
  name: "getSequenceNumber()"
  nameWithType: "ServiceBusReceivedMessage.getSequenceNumber()"
  summary: "Gets the unique number assigned to a message by Service Bus."
  syntax: "public long getSequenceNumber()"
  desc: "Gets the unique number assigned to a message by Service Bus.\n\nThe sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier. For partitioned entities, the topmost 16 bits reflect the partition identifier. Sequence numbers monotonically increase and are gapless. They roll over to 0 when the 48-64 bit range is exhausted. This property is read-only."
  returns:
    description: "sequence number of this message"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSessionId()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSessionId()"
  name: "getSessionId()"
  nameWithType: "ServiceBusReceivedMessage.getSessionId()"
  summary: "Gets the session id of the message."
  syntax: "public String getSessionId()"
  desc: "Gets the session id of the message.\n\nFor session-aware entities, this application-defined value specifies the session affiliation of the message. Messages with the same session identifier are subject to summary locking and enable exact in-order processing and demultiplexing. For session-unaware entities, this value is ignored. See [Message Sessions][].\n\n\n[Message Sessions]: https://docs.microsoft.com/azure/service-bus-messaging/message-sessions"
  returns:
    description: "The session id of the <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref>."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getState()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getState()"
  name: "getState()"
  nameWithType: "ServiceBusReceivedMessage.getState()"
  summary: "Gets the state of the message."
  syntax: "public ServiceBusMessageState getState()"
  desc: "Gets the state of the message. The state of the message can be Active, Deferred, or Scheduled. Deferred messages have Deferred state, scheduled messages have Scheduled state, all other messages have Active state."
  returns:
    description: "The state of the message."
    type: "<xref href=\"com.azure.messaging.servicebus.models.ServiceBusMessageState?alt=com.azure.messaging.servicebus.models.ServiceBusMessageState&text=ServiceBusMessageState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSubject()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSubject()"
  name: "getSubject()"
  nameWithType: "ServiceBusReceivedMessage.getSubject()"
  summary: "Gets the subject for the message."
  syntax: "public String getSubject()"
  desc: "Gets the subject for the message.\n\nThis property enables the application to indicate the purpose of the message to the receiver in a standardized fashion, similar to an email subject line. The mapped AMQP property is \"subject\"."
  returns:
    description: "The subject for the message."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTimeToLive()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTimeToLive()"
  name: "getTimeToLive()"
  nameWithType: "ServiceBusReceivedMessage.getTimeToLive()"
  summary: "Gets the duration before this message expires."
  syntax: "public Duration getTimeToLive()"
  desc: "Gets the duration before this message expires.\n\nThis value is the relative duration after which the message expires, starting from the datetime the message has been accepted and stored by the broker, as captured in <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage.getScheduledEnqueueTime()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getScheduledEnqueueTime()\"></xref>. When not set explicitly, the assumed value is the DefaultTimeToLive set for the respective queue or topic. A message-level TimeToLive value cannot be longer than the entity's DefaultTimeToLive setting and it is silently adjusted if it does."
  returns:
    description: "Time to live duration of this message"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTo()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTo()"
  name: "getTo()"
  nameWithType: "ServiceBusReceivedMessage.getTo()"
  summary: "Gets the \"to\" address."
  syntax: "public String getTo()"
  desc: "Gets the \"to\" address.\n\nThis property is reserved for future use in routing scenarios and presently ignored by the broker itself. Applications can use this value in rule-driven [auto-forward chaining][] scenarios to indicate the intended logical destination of the message.\n\n\n[auto-forward chaining]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding"
  returns:
    description: "\"To\" property value of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The data structure encapsulating the message received from Service Bus. The message structure is discussed in detail in the [product documentation][].\n\n\n[product documentation]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads"
metadata: {}
package: "com.azure.messaging.servicebus"
artifact: com.azure:azure-messaging-servicebus:7.10.1
