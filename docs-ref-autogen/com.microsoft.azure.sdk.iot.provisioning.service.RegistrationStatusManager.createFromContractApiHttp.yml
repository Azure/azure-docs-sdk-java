### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.createFromContractApiHttp*"
fullName: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.createFromContractApiHttp"
name: "createFromContractApiHttp"
nameWithType: "RegistrationStatusManager.createFromContractApiHttp"
members:
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.createFromContractApiHttp(com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.createFromContractApiHttp(ContractApiHttp contractApiHttp)"
  name: "createFromContractApiHttp(ContractApiHttp contractApiHttp)"
  nameWithType: "RegistrationStatusManager.createFromContractApiHttp(ContractApiHttp contractApiHttp)"
  summary: "Create a new instance of the RegistrationStatusManager using the provided connection string and https as the transport protocol."
  parameters:
  - description: "is the class that cares the Http connection."
    name: "contractApiHttp"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp?alt=com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp&text=ContractApiHttp\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RegistrationStatusManager createFromContractApiHttp(ContractApiHttp contractApiHttp)"
  returns:
    description: "The <code>RegistrationStatusManager</code> with the new instance of this class."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager?alt=com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager&text=RegistrationStatusManager\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.provisioning.service"
artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
