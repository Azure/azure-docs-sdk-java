### YamlMime:JavaMember
nameWithType: DigitalTwinAsyncClient.invokeComponentCommand
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
  name: invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
  nameWithType: DigitalTwinAsyncClient.invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The component name under which the command is defined. </p>
    name: componentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command to be invoked. </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>can be thrown if the provided payload cannot be deserialized into a valid Json object. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse&text=DigitalTwinCommandResponse" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Invoke a command on a digital twin component. </p>
  syntax: public Observable<DigitalTwinCommandResponse> invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeComponentCommand(String,String,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeComponentCommand(String digitalTwinId, String componentName, String commandName, String payload)
  name: invokeComponentCommand(String digitalTwinId, String componentName, String commandName, String payload)
  nameWithType: DigitalTwinAsyncClient.invokeComponentCommand(String digitalTwinId, String componentName, String commandName, String payload)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The component name under which the command is defined. </p>
    name: componentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command to be invoked. </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command payload. </p>
    name: payload
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>can be thrown if the provided payload cannot be deserialized into a valid Json object. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse&text=DigitalTwinCommandResponse" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Invoke a command on a digital twin component. </p>
  syntax: public Observable<DigitalTwinCommandResponse> invokeComponentCommand(String digitalTwinId, String componentName, String commandName, String payload)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeComponentCommand(String,String,String,String)
uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeComponentCommand*
fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeComponentCommand
name: invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
package: com.microsoft.azure.sdk.iot.service.digitaltwin
metadata: {}
