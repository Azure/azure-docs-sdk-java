### YamlMime:JavaMember
nameWithType: Providers.registerAsync
type: method
members:
- fullName: com.microsoft.azure.management.resources.Providers.registerAsync(String resourceProviderNamespace)
  name: registerAsync(String resourceProviderNamespace)
  nameWithType: Providers.registerAsync(String resourceProviderNamespace)
  parameters:
  - description: <p>Namespace of the resource provider </p>
    name: resourceProviderNamespace
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call returning the registered provider if successful </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Registers provider to be used with a subscription asynchronously.</p>

    <p></p>
  syntax: public Observable<Provider> registerAsync(String resourceProviderNamespace)
  uid: com.microsoft.azure.management.resources.Providers.registerAsync(String)
- fullName: com.microsoft.azure.management.resources.Providers.registerAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)
  name: registerAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)
  nameWithType: Providers.registerAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)
  parameters:
  - description: <p>Namespace of the resource provider </p>
    name: resourceProviderNamespace
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure with the ProviderInner object wrapped as parameter if successful </p>
    name: callback
    type: ServiceCallback&lt;<xref href="com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>a handle to cancel the request </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Registers provider to be used with a subscription asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Provider> registerAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)
  uid: com.microsoft.azure.management.resources.Providers.registerAsync(String,ServiceCallback<Provider>)
uid: com.microsoft.azure.management.resources.Providers.registerAsync*
fullName: com.microsoft.azure.management.resources.Providers.registerAsync(String resourceProviderNamespace)
name: registerAsync(String resourceProviderNamespace)
package: com.microsoft.azure.management.resources
metadata: {}
