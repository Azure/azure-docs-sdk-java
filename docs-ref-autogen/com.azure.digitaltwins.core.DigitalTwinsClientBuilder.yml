### YamlMime:ManagedReference
items:
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  id: DigitalTwinsClientBuilder
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core
  children:
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.DigitalTwinsClientBuilder()
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildAsyncClient()
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildClient()
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.clientOptions(com.azure.core.util.ClientOptions)
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.configuration(com.azure.core.util.Configuration)
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.credential(com.azure.core.credential.TokenCredential)
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.endpoint(java.lang.String)
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.httpClient(com.azure.core.http.HttpClient)
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.serializer(com.azure.core.util.serializer.JsonSerializer)
  - com.azure.digitaltwins.core.DigitalTwinsClientBuilder.serviceVersion(com.azure.digitaltwins.core.DigitalTwinsServiceVersion)
  langs:
  - java
  name: DigitalTwinsClientBuilder
  nameWithType: DigitalTwinsClientBuilder
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  type: Class
  package: com.azure.digitaltwins.core
  summary: This class provides a fluent builder API to help aid the configuration and instantiation of <xref uid="com.azure.digitaltwins.core.DigitalTwinsClient" data-throw-if-not-resolved="false">DigitalTwinsClients</xref> and <xref uid="com.azure.digitaltwins.core.DigitalTwinsAsyncClient" data-throw-if-not-resolved="false">DigitalTwinsAsyncClients</xref>, call <xref uid="com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildClient()" data-throw-if-not-resolved="false">buildClient</xref> and <xref uid="com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildAsyncClient()" data-throw-if-not-resolved="false">buildAsyncClient</xref> respectively to construct an instance of the desired client.
  syntax:
    content: public final class DigitalTwinsClientBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.DigitalTwinsClientBuilder()
  id: DigitalTwinsClientBuilder()
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: DigitalTwinsClientBuilder()
  nameWithType: DigitalTwinsClientBuilder.DigitalTwinsClientBuilder()
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.DigitalTwinsClientBuilder()
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.DigitalTwinsClientBuilder*
  type: Constructor
  package: com.azure.digitaltwins.core
  summary: The public constructor for DigitalTwinsClientBuilder
  syntax:
    content: public DigitalTwinsClientBuilder()
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  id: addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: addPolicy(HttpPipelinePolicy pipelinePolicy)
  nameWithType: DigitalTwinsClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.addPolicy*
  type: Method
  package: com.azure.digitaltwins.core
  summary: Adds a pipeline policy to apply on each request sent. The policy will be added after the retry policy. If the method is called multiple times, all policies will be added and their order preserved.
  syntax:
    content: public DigitalTwinsClientBuilder addPolicy(HttpPipelinePolicy pipelinePolicy)
    parameters:
    - id: pipelinePolicy
      type: com.azure.core.http.policy.HttpPipelinePolicy
      description: a pipeline policy
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
      description: the updated DigitalTwinsClientBuilder instance for fluent building.
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildAsyncClient()
  id: buildAsyncClient()
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: buildAsyncClient()
  nameWithType: DigitalTwinsClientBuilder.buildAsyncClient()
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildAsyncClient()
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildAsyncClient*
  type: Method
  package: com.azure.digitaltwins.core
  summary: Create a <xref uid="com.azure.digitaltwins.core.DigitalTwinsAsyncClient" data-throw-if-not-resolved="false">DigitalTwinsAsyncClient</xref> based on the builder settings.
  syntax:
    content: public DigitalTwinsAsyncClient buildAsyncClient()
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsAsyncClient
      description: the created synchronous DigitalTwinsAsyncClient
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildClient()
  id: buildClient()
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: buildClient()
  nameWithType: DigitalTwinsClientBuilder.buildClient()
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildClient()
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildClient*
  type: Method
  package: com.azure.digitaltwins.core
  summary: Create a <xref uid="com.azure.digitaltwins.core.DigitalTwinsClient" data-throw-if-not-resolved="false">DigitalTwinsClient</xref> based on the builder settings.
  syntax:
    content: public DigitalTwinsClient buildClient()
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsClient
      description: the created synchronous DigitalTwinsClient
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.clientOptions(com.azure.core.util.ClientOptions)
  id: clientOptions(com.azure.core.util.ClientOptions)
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: clientOptions(ClientOptions clientOptions)
  nameWithType: DigitalTwinsClientBuilder.clientOptions(ClientOptions clientOptions)
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.clientOptions(ClientOptions clientOptions)
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.clientOptions*
  type: Method
  package: com.azure.digitaltwins.core
  summary: >-
    Sets the <xref uid="com.azure.core.util.ClientOptions" data-throw-if-not-resolved="false">ClientOptions</xref> which enables various options to be set on the client. For example setting an `applicationId` using <xref uid="com.azure.core.util.ClientOptions.setApplicationId*" data-throw-if-not-resolved="false">ClientOptions#setApplicationId(String)</xref> to configure the <xref uid="" data-throw-if-not-resolved="false">UserAgentPolicy</xref> for telemetry/monitoring purposes.


    More About [Azure Core: Telemetry policy][Azure Core_ Telemetry policy]



    [Azure Core_ Telemetry policy]: https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy
  syntax:
    content: public DigitalTwinsClientBuilder clientOptions(ClientOptions clientOptions)
    parameters:
    - id: clientOptions
      type: com.azure.core.util.ClientOptions
      description: the <xref uid="com.azure.core.util.ClientOptions" data-throw-if-not-resolved="false">ClientOptions</xref> to be set on the client.
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
      description: The updated KeyClientBuilder object.
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.configuration(com.azure.core.util.Configuration)
  id: configuration(com.azure.core.util.Configuration)
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: configuration(Configuration configuration)
  nameWithType: DigitalTwinsClientBuilder.configuration(Configuration configuration)
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.configuration(Configuration configuration)
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.configuration*
  type: Method
  package: com.azure.digitaltwins.core
  summary: >-
    Sets the configuration store that is used during construction of the service client. The default configuration store is a clone of the <xref uid="Configuration#getGlobalConfiguration()" data-throw-if-not-resolved="false">global
     configuration store</xref>, use <xref uid="com.azure.core.util.Configuration.NONE" data-throw-if-not-resolved="false">Configuration#NONE</xref> to bypass using configuration settings during construction.
  syntax:
    content: public DigitalTwinsClientBuilder configuration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.azure.core.util.Configuration
      description: The configuration store used to
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
      description: The updated DigitalTwinsClientBuilder object for fluent building.
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.credential(com.azure.core.credential.TokenCredential)
  id: credential(com.azure.core.credential.TokenCredential)
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: credential(TokenCredential tokenCredential)
  nameWithType: DigitalTwinsClientBuilder.credential(TokenCredential tokenCredential)
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.credential(TokenCredential tokenCredential)
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.credential*
  type: Method
  package: com.azure.digitaltwins.core
  summary: Set the authentication token provider that the built client will use for all service requests. This field is mandatory to set unless you set the http pipeline directly and that set pipeline has an authentication policy configured.
  syntax:
    content: public DigitalTwinsClientBuilder credential(TokenCredential tokenCredential)
    parameters:
    - id: tokenCredential
      type: com.azure.core.credential.TokenCredential
      description: the authentication token provider.
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
      description: the updated DigitalTwinsClientBuilder instance for fluent building.
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.endpoint(java.lang.String)
  id: endpoint(java.lang.String)
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: endpoint(String endpoint)
  nameWithType: DigitalTwinsClientBuilder.endpoint(String endpoint)
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.endpoint(String endpoint)
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.endpoint*
  type: Method
  package: com.azure.digitaltwins.core
  summary: Set the service endpoint that the built client will communicate with. This field is mandatory to set.
  syntax:
    content: public DigitalTwinsClientBuilder endpoint(String endpoint)
    parameters:
    - id: endpoint
      type: java.lang.String
      description: URL of the service.
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
      description: the updated DigitalTwinsClientBuilder instance for fluent building.
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.httpClient(com.azure.core.http.HttpClient)
  id: httpClient(com.azure.core.http.HttpClient)
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: httpClient(HttpClient httpClient)
  nameWithType: DigitalTwinsClientBuilder.httpClient(HttpClient httpClient)
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.httpClient(HttpClient httpClient)
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.httpClient*
  type: Method
  package: com.azure.digitaltwins.core
  summary: Sets the <xref uid="com.azure.core.http.HttpClient" data-throw-if-not-resolved="false">HttpClient</xref> to use for sending a receiving requests to and from the service.
  syntax:
    content: public DigitalTwinsClientBuilder httpClient(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: com.azure.core.http.HttpClient
      description: HttpClient to use for requests.
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
      description: the updated DigitalTwinsClientBuilder instance for fluent building.
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  id: httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: httpLogOptions(HttpLogOptions logOptions)
  nameWithType: DigitalTwinsClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.httpLogOptions*
  type: Method
  package: com.azure.digitaltwins.core
  summary: Sets the <xref uid="com.azure.core.http.policy.HttpLogOptions" data-throw-if-not-resolved="false">HttpLogOptions</xref> for service requests.
  syntax:
    content: public DigitalTwinsClientBuilder httpLogOptions(HttpLogOptions logOptions)
    parameters:
    - id: logOptions
      type: com.azure.core.http.policy.HttpLogOptions
      description: The logging configuration to use when sending and receiving HTTP requests/responses.
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
      description: the updated DigitalTwinsClientBuilder instance for fluent building.
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  id: pipeline(com.azure.core.http.HttpPipeline)
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: pipeline(HttpPipeline httpPipeline)
  nameWithType: DigitalTwinsClientBuilder.pipeline(HttpPipeline httpPipeline)
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.pipeline(HttpPipeline httpPipeline)
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.pipeline*
  type: Method
  package: com.azure.digitaltwins.core
  summary: >-
    Sets the <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref> to use for the service client.


    If `pipeline` is set, all other settings are ignored, aside from <xref uid="com.azure.digitaltwins.core.DigitalTwinsClientBuilder.endpoint(java.lang.String)" data-throw-if-not-resolved="false">endpoint</xref>.
  syntax:
    content: public DigitalTwinsClientBuilder pipeline(HttpPipeline httpPipeline)
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: HttpPipeline to use for sending service requests and receiving responses.
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
      description: the updated DigitalTwinsClientBuilder instance for fluent building.
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)
  id: retryPolicy(com.azure.core.http.policy.RetryPolicy)
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: retryPolicy(RetryPolicy retryPolicy)
  nameWithType: DigitalTwinsClientBuilder.retryPolicy(RetryPolicy retryPolicy)
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.retryPolicy(RetryPolicy retryPolicy)
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.retryPolicy*
  type: Method
  package: com.azure.digitaltwins.core
  summary: Sets the <xref uid="com.azure.core.http.policy.HttpPipelinePolicy" data-throw-if-not-resolved="false">HttpPipelinePolicy</xref> that is used as the retry policy for each request that is sent. The default retry policy will be used if not provided. The default retry policy is <xref uid="com.azure.core.http.policy.RetryPolicy.RetryPolicy*" data-throw-if-not-resolved="false">RetryPolicy#RetryPolicy()</xref>. For implementing custom retry logic, see <xref uid="com.azure.core.http.policy.RetryPolicy" data-throw-if-not-resolved="false">RetryPolicy</xref> as an example.
  syntax:
    content: public DigitalTwinsClientBuilder retryPolicy(RetryPolicy retryPolicy)
    parameters:
    - id: retryPolicy
      type: com.azure.core.http.policy.RetryPolicy
      description: the retry policy applied to each request.
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
      description: The updated ConfigurationClientBuilder object.
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.serializer(com.azure.core.util.serializer.JsonSerializer)
  id: serializer(com.azure.core.util.serializer.JsonSerializer)
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: serializer(JsonSerializer jsonSerializer)
  nameWithType: DigitalTwinsClientBuilder.serializer(JsonSerializer jsonSerializer)
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.serializer(JsonSerializer jsonSerializer)
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.serializer*
  type: Method
  package: com.azure.digitaltwins.core
  summary: Custom JSON serializer that is used to handle model types that are not contained in the Azure Digital Twins library.
  syntax:
    content: public DigitalTwinsClientBuilder serializer(JsonSerializer jsonSerializer)
    parameters:
    - id: jsonSerializer
      type: com.azure.core.util.serializer.JsonSerializer
      description: The serializer to deserialize response payloads into user defined models.
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
      description: The updated DigitalTwinsClientBuilder object.
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.serviceVersion(com.azure.digitaltwins.core.DigitalTwinsServiceVersion)
  id: serviceVersion(com.azure.digitaltwins.core.DigitalTwinsServiceVersion)
  artifact: com.azure:azure-digitaltwins-core:1.0.1
  parent: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
  langs:
  - java
  name: serviceVersion(DigitalTwinsServiceVersion serviceVersion)
  nameWithType: DigitalTwinsClientBuilder.serviceVersion(DigitalTwinsServiceVersion serviceVersion)
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.serviceVersion(DigitalTwinsServiceVersion serviceVersion)
  overload: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.serviceVersion*
  type: Method
  package: com.azure.digitaltwins.core
  summary: >-
    Sets the <xref uid="com.azure.digitaltwins.core.DigitalTwinsServiceVersion" data-throw-if-not-resolved="false">DigitalTwinsServiceVersion</xref> that is used when making API requests.


    If a service version is not provided, the service version that will be used will be the latest known service version based on the version of the client library being used. If no service version is specified, updating to a newer version of the client library will have the result of potentially moving to a newer service version.


    Targeting a specific service version may also mean that the service will return an error for newer APIs.
  syntax:
    content: public DigitalTwinsClientBuilder serviceVersion(DigitalTwinsServiceVersion serviceVersion)
    parameters:
    - id: serviceVersion
      type: com.azure.digitaltwins.core.DigitalTwinsServiceVersion
      description: The service API version to use.
    return:
      type: com.azure.digitaltwins.core.DigitalTwinsClientBuilder
      description: the updated DigitalTwinsClientBuilder instance for fluent building.
references:
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.DigitalTwinsClientBuilder*
  name: DigitalTwinsClientBuilder
  nameWithType: DigitalTwinsClientBuilder.DigitalTwinsClientBuilder
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.DigitalTwinsClientBuilder
  package: com.azure.digitaltwins.core
- uid: com.azure.digitaltwins.core.DigitalTwinsClient
  name: DigitalTwinsClient
  nameWithType: DigitalTwinsClient
  fullName: com.azure.digitaltwins.core.DigitalTwinsClient
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildClient*
  name: buildClient
  nameWithType: DigitalTwinsClientBuilder.buildClient
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildClient
  package: com.azure.digitaltwins.core
- uid: com.azure.digitaltwins.core.DigitalTwinsAsyncClient
  name: DigitalTwinsAsyncClient
  nameWithType: DigitalTwinsAsyncClient
  fullName: com.azure.digitaltwins.core.DigitalTwinsAsyncClient
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildAsyncClient*
  name: buildAsyncClient
  nameWithType: DigitalTwinsClientBuilder.buildAsyncClient
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.buildAsyncClient
  package: com.azure.digitaltwins.core
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.endpoint*
  name: endpoint
  nameWithType: DigitalTwinsClientBuilder.endpoint
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.endpoint
  package: com.azure.digitaltwins.core
- uid: com.azure.core.credential.TokenCredential
  spec.java:
  - uid: com.azure.core.credential.TokenCredential
    name: TokenCredential
    fullName: com.azure.core.credential.TokenCredential
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.credential*
  name: credential
  nameWithType: DigitalTwinsClientBuilder.credential
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.credential
  package: com.azure.digitaltwins.core
- uid: com.azure.digitaltwins.core.DigitalTwinsServiceVersion
  name: DigitalTwinsServiceVersion
  nameWithType: DigitalTwinsServiceVersion
  fullName: com.azure.digitaltwins.core.DigitalTwinsServiceVersion
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.serviceVersion*
  name: serviceVersion
  nameWithType: DigitalTwinsClientBuilder.serviceVersion
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.serviceVersion
  package: com.azure.digitaltwins.core
- uid: com.azure.core.http.HttpClient
  spec.java:
  - uid: com.azure.core.http.HttpClient
    name: HttpClient
    fullName: com.azure.core.http.HttpClient
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.httpClient*
  name: httpClient
  nameWithType: DigitalTwinsClientBuilder.httpClient
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.httpClient
  package: com.azure.digitaltwins.core
- uid: com.azure.core.http.policy.HttpLogOptions
  spec.java:
  - uid: com.azure.core.http.policy.HttpLogOptions
    name: HttpLogOptions
    fullName: com.azure.core.http.policy.HttpLogOptions
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.httpLogOptions*
  name: httpLogOptions
  nameWithType: DigitalTwinsClientBuilder.httpLogOptions
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.httpLogOptions
  package: com.azure.digitaltwins.core
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  spec.java:
  - uid: com.azure.core.http.policy.HttpPipelinePolicy
    name: HttpPipelinePolicy
    fullName: com.azure.core.http.policy.HttpPipelinePolicy
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.addPolicy*
  name: addPolicy
  nameWithType: DigitalTwinsClientBuilder.addPolicy
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.addPolicy
  package: com.azure.digitaltwins.core
- uid: com.azure.core.http.policy.RetryPolicy
  spec.java:
  - uid: com.azure.core.http.policy.RetryPolicy
    name: RetryPolicy
    fullName: com.azure.core.http.policy.RetryPolicy
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.retryPolicy*
  name: retryPolicy
  nameWithType: DigitalTwinsClientBuilder.retryPolicy
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.retryPolicy
  package: com.azure.digitaltwins.core
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.pipeline*
  name: pipeline
  nameWithType: DigitalTwinsClientBuilder.pipeline
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.pipeline
  package: com.azure.digitaltwins.core
- uid: com.azure.core.util.Configuration
  spec.java:
  - uid: com.azure.core.util.Configuration
    name: Configuration
    fullName: com.azure.core.util.Configuration
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.configuration*
  name: configuration
  nameWithType: DigitalTwinsClientBuilder.configuration
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.configuration
  package: com.azure.digitaltwins.core
- uid: com.azure.core.util.serializer.JsonSerializer
  spec.java:
  - uid: com.azure.core.util.serializer.JsonSerializer
    name: JsonSerializer
    fullName: com.azure.core.util.serializer.JsonSerializer
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.serializer*
  name: serializer
  nameWithType: DigitalTwinsClientBuilder.serializer
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.serializer
  package: com.azure.digitaltwins.core
- uid: com.azure.core.util.ClientOptions
  spec.java:
  - uid: com.azure.core.util.ClientOptions
    name: ClientOptions
    fullName: com.azure.core.util.ClientOptions
- uid: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.clientOptions*
  name: clientOptions
  nameWithType: DigitalTwinsClientBuilder.clientOptions
  fullName: com.azure.digitaltwins.core.DigitalTwinsClientBuilder.clientOptions
  package: com.azure.digitaltwins.core
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
