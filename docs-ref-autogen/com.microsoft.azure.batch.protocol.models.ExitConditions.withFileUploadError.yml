### YamlMime:JavaMember
nameWithType: ExitConditions.withFileUploadError
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.ExitConditions.withFileUploadError(ExitOptions fileUploadError)
  name: withFileUploadError(ExitOptions fileUploadError)
  nameWithType: ExitConditions.withFileUploadError(ExitOptions fileUploadError)
  parameters:
  - description: <p>the fileUploadError value to set </p>
    name: fileUploadError
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExitConditions object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitConditions?alt=com.microsoft.azure.batch.protocol.models.ExitConditions&text=ExitConditions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if the task exited with an exit code that was specified via exitCodes or exitCodeRanges, and then encountered a file upload error, then the action specified by the exit code takes precedence.</p>

    <p></p>
  syntax: public ExitConditions withFileUploadError(ExitOptions fileUploadError)
  uid: com.microsoft.azure.batch.protocol.models.ExitConditions.withFileUploadError(ExitOptions)
uid: com.microsoft.azure.batch.protocol.models.ExitConditions.withFileUploadError*
fullName: com.microsoft.azure.batch.protocol.models.ExitConditions.withFileUploadError(ExitOptions fileUploadError)
name: withFileUploadError(ExitOptions fileUploadError)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
