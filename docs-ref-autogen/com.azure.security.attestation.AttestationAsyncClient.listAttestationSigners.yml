### YamlMime:JavaMember
uid: "com.azure.security.attestation.AttestationAsyncClient.listAttestationSigners*"
fullName: "com.azure.security.attestation.AttestationAsyncClient.listAttestationSigners"
name: "listAttestationSigners"
nameWithType: "AttestationAsyncClient.listAttestationSigners"
members:
- uid: "com.azure.security.attestation.AttestationAsyncClient.listAttestationSigners()"
  fullName: "com.azure.security.attestation.AttestationAsyncClient.listAttestationSigners()"
  name: "listAttestationSigners()"
  nameWithType: "AttestationAsyncClient.listAttestationSigners()"
  summary: "Retrieves the list of <xref uid=\"com.azure.security.attestation.models.AttestationSigner\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationSigner\"></xref> objects associated with this attestation instance.\n\nAn <xref uid=\"com.azure.security.attestation.models.AttestationSigner\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationSigner\"></xref> represents an X.509 certificate chain and KeyId which can be used to validate an attestation token returned by the service.\n\n**Retrieve Attestation Signers for this async client.**\n\n```java\nMono<AttestationSignerCollection> signersMono = client.listAttestationSigners();\n signersMono.subscribe(signers -> signers.getAttestationSigners().forEach(cert -> {\n     System.out.println(\"Found certificate.\");\n     if (cert.getKeyId() != null) {\n         System.out.println(\"    Certificate Key ID: \" + cert.getKeyId());\n     } else {\n         System.out.println(\"    Signer does not have a Key ID\");\n     }\n     cert.getCertificates().forEach(chainElement -> {\n         System.out.println(\"        Cert Subject: \" + chainElement.getSubjectDN().getName());\n         System.out.println(\"        Cert Issuer: \" + chainElement.getIssuerDN().getName());\n     });\n }));\n```"
  syntax: "public Mono<AttestationSignerCollection> listAttestationSigners()"
  returns:
    description: "Returns an array of <xref uid=\"com.azure.security.attestation.models.AttestationSigner\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationSigner\"></xref> objects."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.attestation.models.AttestationSignerCollection?alt=com.azure.security.attestation.models.AttestationSignerCollection&text=AttestationSignerCollection\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.attestation"
artifact: com.azure:azure-security-attestation:1.1.0
