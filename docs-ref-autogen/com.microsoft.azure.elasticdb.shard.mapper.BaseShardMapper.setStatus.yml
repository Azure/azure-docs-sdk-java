### YamlMime:JavaMember
nameWithType: BaseShardMapper.setStatus
type: method
members:
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate)
  name: setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate)
  nameWithType: BaseShardMapper.setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate)
  parameters:
  - description: <p>Mapping being added. </p>
    name: mapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  - description: <p>Status of <em>mapping</em> mapping being added. </p>
    name: status
    type: <xref href="StatusT?alt=StatusT&text=StatusT" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct new status from <em>status</em> input status. </p>
    name: getStatus
    type: <xref href="Function%3CStatusT%2C+StatusT%3E?alt=Function<StatusT, StatusT>&text=Function%3CStatusT%2C+StatusT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct new update from new status returned by <em>getStatus</em> getStatus. </p>
    name: createUpdate
    type: <xref href="Function%3CStatusT%2C+UpdateT%3E?alt=Function<StatusT, UpdateT>&text=Function%3CStatusT%2C+UpdateT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to perform update from the <em>mapping</em> input mapping and the update object returned by <em>getStatus</em> createUpdate . </p>
    name: runUpdate
    type: <xref href="ActionGeneric3Param%3CMappingT%2C+UpdateT%2C+UUID%2C+MappingT%3E?alt=ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT>&text=ActionGeneric3Param%3CMappingT%2C+UpdateT%2C+UUID%2C+MappingT%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="static%3CMappingT%2C+UpdateT%2C+StatusT%3E+MappingT?alt=static<MappingT, UpdateT, StatusT> MappingT&text=static%3CMappingT%2C+UpdateT%2C+StatusT%3E+MappingT" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the status of a shard mapping </p>

    <p></p>
  syntax: protected static static<MappingT, UpdateT, StatusT> MappingT setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.setStatus(MappingT,StatusT,Function<StatusT, StatusT>,Function<StatusT, UpdateT>,ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT>)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate, UUID lockOwnerId)
  name: setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate, UUID lockOwnerId)
  nameWithType: BaseShardMapper.setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate, UUID lockOwnerId)
  parameters:
  - description: <p>Mapping being added. </p>
    name: mapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  - description: <p>Status of <em>mapping</em> mapping being added. </p>
    name: status
    type: <xref href="StatusT?alt=StatusT&text=StatusT" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct new status from <em>status</em> input status. </p>
    name: getStatus
    type: <xref href="Function%3CStatusT%2C+StatusT%3E?alt=Function<StatusT, StatusT>&text=Function%3CStatusT%2C+StatusT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct new update from new status returned by <em>getStatus</em> getStatus. </p>
    name: createUpdate
    type: <xref href="Function%3CStatusT%2C+UpdateT%3E?alt=Function<StatusT, UpdateT>&text=Function%3CStatusT%2C+UpdateT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to perform update from the <em>mapping</em> input mapping and the update object returned by <em>getStatus</em> createUpdate . </p>
    name: runUpdate
    type: <xref href="ActionGeneric3Param%3CMappingT%2C+UpdateT%2C+UUID%2C+MappingT%3E?alt=ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT>&text=ActionGeneric3Param%3CMappingT%2C+UpdateT%2C+UUID%2C+MappingT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Lock owner id of this mapping </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="static%3CMappingT%2C+UpdateT%2C+StatusT%3E+MappingT?alt=static<MappingT, UpdateT, StatusT> MappingT&text=static%3CMappingT%2C+UpdateT%2C+StatusT%3E+MappingT" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the status of a shard mapping </p>

    <p></p>
  syntax: protected static static<MappingT, UpdateT, StatusT> MappingT setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate, UUID lockOwnerId)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.setStatus(MappingT,StatusT,Function<StatusT, StatusT>,Function<StatusT, UpdateT>,ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT>,UUID)
uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.setStatus*
fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate)
name: setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate)
package: com.microsoft.azure.elasticdb.shard.mapper
metadata: {}
