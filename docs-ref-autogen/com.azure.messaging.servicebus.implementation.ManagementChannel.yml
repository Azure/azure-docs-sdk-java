### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel
  id: ManagementChannel
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation
  children:
  - com.azure.messaging.servicebus.implementation.ManagementChannel.cancelScheduledMessages(java.lang.Iterable<java.lang.Long>,java.lang.String)
  - com.azure.messaging.servicebus.implementation.ManagementChannel.close()
  - com.azure.messaging.servicebus.implementation.ManagementChannel.getSessionState(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.implementation.ManagementChannel.peek(long,java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.implementation.ManagementChannel.peek(long,java.lang.String,java.lang.String,int)
  - com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessages(com.azure.messaging.servicebus.models.ServiceBusReceiveMode,java.lang.String,java.lang.String,java.lang.Iterable<java.lang.Long>)
  - com.azure.messaging.servicebus.implementation.ManagementChannel.renewMessageLock(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.implementation.ManagementChannel.renewSessionLock(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.implementation.ManagementChannel.schedule(java.util.List<com.azure.messaging.servicebus.ServiceBusMessage>,java.time.OffsetDateTime,int,java.lang.String,com.azure.messaging.servicebus.ServiceBusTransactionContext)
  - com.azure.messaging.servicebus.implementation.ManagementChannel.setSessionState(java.lang.String,byte[],java.lang.String)
  - com.azure.messaging.servicebus.implementation.ManagementChannel.updateDisposition(java.lang.String,com.azure.messaging.servicebus.implementation.DispositionStatus,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,com.azure.messaging.servicebus.ServiceBusTransactionContext)
  langs:
  - java
  name: ManagementChannel
  nameWithType: ManagementChannel
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel
  type: Class
  package: com.azure.messaging.servicebus.implementation
  summary: Channel responsible for Service Bus related metadata, peek and management plane operations. Management plane operations increasing quotas, etc.
  syntax:
    content: public class ManagementChannel implements ServiceBusManagementNode
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.messaging.servicebus.implementation.ServiceBusManagementNode
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.ManagementChannel(reactor.core.publisher.Mono<com.azure.core.amqp.implementation.RequestResponseChannel>,java.lang.String,java.lang.String,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.MessageSerializer,java.time.Duration)
  id: ManagementChannel(reactor.core.publisher.Mono<com.azure.core.amqp.implementation.RequestResponseChannel>,java.lang.String,java.lang.String,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.MessageSerializer,java.time.Duration)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.ManagementChannel
  langs:
  - java
  name: ManagementChannel(Mono<RequestResponseChannel> createChannel, String fullyQualifiedNamespace, String entityPath, TokenManager tokenManager, MessageSerializer messageSerializer, Duration operationTimeout)
  nameWithType: ManagementChannel.ManagementChannel(Mono<RequestResponseChannel> createChannel, String fullyQualifiedNamespace, String entityPath, TokenManager tokenManager, MessageSerializer messageSerializer, Duration operationTimeout)
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.ManagementChannel(Mono<RequestResponseChannel> createChannel, String fullyQualifiedNamespace, String entityPath, TokenManager tokenManager, MessageSerializer messageSerializer, Duration operationTimeout)
  overload: com.azure.messaging.servicebus.implementation.ManagementChannel.ManagementChannel*
  type: Constructor
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: " ManagementChannel(Mono<RequestResponseChannel> createChannel, String fullyQualifiedNamespace, String entityPath, TokenManager tokenManager, MessageSerializer messageSerializer, Duration operationTimeout)"
    parameters:
    - id: createChannel
      type: reactor.core.publisher.Mono<com.azure.core.amqp.implementation.RequestResponseChannel>
    - id: fullyQualifiedNamespace
      type: java.lang.String
    - id: entityPath
      type: java.lang.String
    - id: tokenManager
      type: com.azure.core.amqp.implementation.TokenManager
    - id: messageSerializer
      type: com.azure.core.amqp.implementation.MessageSerializer
    - id: operationTimeout
      type: java.time.Duration
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.cancelScheduledMessages(java.lang.Iterable<java.lang.Long>,java.lang.String)
  id: cancelScheduledMessages(java.lang.Iterable<java.lang.Long>,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.ManagementChannel
  langs:
  - java
  name: cancelScheduledMessages(Iterable<Long> sequenceNumbers, String associatedLinkName)
  nameWithType: ManagementChannel.cancelScheduledMessages(Iterable<Long> sequenceNumbers, String associatedLinkName)
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.cancelScheduledMessages(Iterable<Long> sequenceNumbers, String associatedLinkName)
  overload: com.azure.messaging.servicebus.implementation.ManagementChannel.cancelScheduledMessages*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Cancels the enqueuing of an already sent scheduled messages, if it was not already enqueued.
  syntax:
    content: public Mono<Void> cancelScheduledMessages(Iterable<Long> sequenceNumbers, String associatedLinkName)
    parameters:
    - id: sequenceNumbers
      type: java.lang.Iterable<java.lang.Long>
    - id: associatedLinkName
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.close()
  id: close()
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.ManagementChannel
  langs:
  - java
  name: close()
  nameWithType: ManagementChannel.close()
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.close()
  overload: com.azure.messaging.servicebus.implementation.ManagementChannel.close*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: public void close()
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.getSessionState(java.lang.String,java.lang.String)
  id: getSessionState(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.ManagementChannel
  langs:
  - java
  name: getSessionState(String sessionId, String associatedLinkName)
  nameWithType: ManagementChannel.getSessionState(String sessionId, String associatedLinkName)
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.getSessionState(String sessionId, String associatedLinkName)
  overload: com.azure.messaging.servicebus.implementation.ManagementChannel.getSessionState*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Gets the session state.
  syntax:
    content: public Mono<byte[]> getSessionState(String sessionId, String associatedLinkName)
    parameters:
    - id: sessionId
      type: java.lang.String
    - id: associatedLinkName
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<byte[]>
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.peek(long,java.lang.String,java.lang.String)
  id: peek(long,java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.ManagementChannel
  langs:
  - java
  name: peek(long fromSequenceNumber, String sessionId, String associatedLinkName)
  nameWithType: ManagementChannel.peek(long fromSequenceNumber, String sessionId, String associatedLinkName)
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.peek(long fromSequenceNumber, String sessionId, String associatedLinkName)
  overload: com.azure.messaging.servicebus.implementation.ManagementChannel.peek*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: public Mono<ServiceBusReceivedMessage> peek(long fromSequenceNumber, String sessionId, String associatedLinkName)
    parameters:
    - id: fromSequenceNumber
      type: long
    - id: sessionId
      type: java.lang.String
    - id: associatedLinkName
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<com.azure.messaging.servicebus.ServiceBusReceivedMessage>
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.peek(long,java.lang.String,java.lang.String,int)
  id: peek(long,java.lang.String,java.lang.String,int)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.ManagementChannel
  langs:
  - java
  name: peek(long fromSequenceNumber, String sessionId, String associatedLinkName, int maxMessages)
  nameWithType: ManagementChannel.peek(long fromSequenceNumber, String sessionId, String associatedLinkName, int maxMessages)
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.peek(long fromSequenceNumber, String sessionId, String associatedLinkName, int maxMessages)
  overload: com.azure.messaging.servicebus.implementation.ManagementChannel.peek*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Reads the next batch of active messages without changing the state of the receiver or the message source.
  syntax:
    content: public Flux<ServiceBusReceivedMessage> peek(long fromSequenceNumber, String sessionId, String associatedLinkName, int maxMessages)
    parameters:
    - id: fromSequenceNumber
      type: long
    - id: sessionId
      type: java.lang.String
    - id: associatedLinkName
      type: java.lang.String
    - id: maxMessages
      type: int
    return:
      type: reactor.core.publisher.Flux<com.azure.messaging.servicebus.ServiceBusReceivedMessage>
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessages(com.azure.messaging.servicebus.models.ServiceBusReceiveMode,java.lang.String,java.lang.String,java.lang.Iterable<java.lang.Long>)
  id: receiveDeferredMessages(com.azure.messaging.servicebus.models.ServiceBusReceiveMode,java.lang.String,java.lang.String,java.lang.Iterable<java.lang.Long>)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.ManagementChannel
  langs:
  - java
  name: receiveDeferredMessages(ServiceBusReceiveMode receiveMode, String sessionId, String associatedLinkName, Iterable<Long> sequenceNumbers)
  nameWithType: ManagementChannel.receiveDeferredMessages(ServiceBusReceiveMode receiveMode, String sessionId, String associatedLinkName, Iterable<Long> sequenceNumbers)
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessages(ServiceBusReceiveMode receiveMode, String sessionId, String associatedLinkName, Iterable<Long> sequenceNumbers)
  overload: com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessages*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Receives a deferred <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref>. Deferred messages can only be received by using sequence number.
  syntax:
    content: public Flux<ServiceBusReceivedMessage> receiveDeferredMessages(ServiceBusReceiveMode receiveMode, String sessionId, String associatedLinkName, Iterable<Long> sequenceNumbers)
    parameters:
    - id: receiveMode
      type: com.azure.messaging.servicebus.models.ServiceBusReceiveMode
    - id: sessionId
      type: java.lang.String
    - id: associatedLinkName
      type: java.lang.String
    - id: sequenceNumbers
      type: java.lang.Iterable<java.lang.Long>
    return:
      type: reactor.core.publisher.Flux<com.azure.messaging.servicebus.ServiceBusReceivedMessage>
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.renewMessageLock(java.lang.String,java.lang.String)
  id: renewMessageLock(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.ManagementChannel
  langs:
  - java
  name: renewMessageLock(String lockToken, String associatedLinkName)
  nameWithType: ManagementChannel.renewMessageLock(String lockToken, String associatedLinkName)
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.renewMessageLock(String lockToken, String associatedLinkName)
  overload: com.azure.messaging.servicebus.implementation.ManagementChannel.renewMessageLock*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Asynchronously renews the lock on the message specified by the lock token. The lock will be renewed based on the setting specified on the entity. When a message is received in <xref uid="com.azure.messaging.servicebus.models.ServiceBusReceiveMode.PEEK_LOCK" data-throw-if-not-resolved="false">ServiceBusReceiveMode#PEEK_LOCK</xref> mode, the message is locked on the server for this receiver instance for a duration as specified during the Queue/Subscription creation (LockDuration). If processing of the message requires longer than this duration, the lock needs to be renewed. For each renewal, the lock is reset to the entity's LockDuration value.
  syntax:
    content: public Mono<OffsetDateTime> renewMessageLock(String lockToken, String associatedLinkName)
    parameters:
    - id: lockToken
      type: java.lang.String
    - id: associatedLinkName
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<java.time.OffsetDateTime>
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.renewSessionLock(java.lang.String,java.lang.String)
  id: renewSessionLock(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.ManagementChannel
  langs:
  - java
  name: renewSessionLock(String sessionId, String associatedLinkName)
  nameWithType: ManagementChannel.renewSessionLock(String sessionId, String associatedLinkName)
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.renewSessionLock(String sessionId, String associatedLinkName)
  overload: com.azure.messaging.servicebus.implementation.ManagementChannel.renewSessionLock*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Renews the lock on the session.
  syntax:
    content: public Mono<OffsetDateTime> renewSessionLock(String sessionId, String associatedLinkName)
    parameters:
    - id: sessionId
      type: java.lang.String
    - id: associatedLinkName
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<java.time.OffsetDateTime>
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.schedule(java.util.List<com.azure.messaging.servicebus.ServiceBusMessage>,java.time.OffsetDateTime,int,java.lang.String,com.azure.messaging.servicebus.ServiceBusTransactionContext)
  id: schedule(java.util.List<com.azure.messaging.servicebus.ServiceBusMessage>,java.time.OffsetDateTime,int,java.lang.String,com.azure.messaging.servicebus.ServiceBusTransactionContext)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.ManagementChannel
  langs:
  - java
  name: schedule(List<ServiceBusMessage> messages, OffsetDateTime scheduledEnqueueTime, int maxLinkSize, String associatedLinkName, ServiceBusTransactionContext transactionContext)
  nameWithType: ManagementChannel.schedule(List<ServiceBusMessage> messages, OffsetDateTime scheduledEnqueueTime, int maxLinkSize, String associatedLinkName, ServiceBusTransactionContext transactionContext)
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.schedule(List<ServiceBusMessage> messages, OffsetDateTime scheduledEnqueueTime, int maxLinkSize, String associatedLinkName, ServiceBusTransactionContext transactionContext)
  overload: com.azure.messaging.servicebus.implementation.ManagementChannel.schedule*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Sends a scheduled <xref uid="java.util.List" data-throw-if-not-resolved="false">List</xref> of messages to the Azure Service Bus entity this sender is connected to. Scheduled messages are enqueued and made available to receivers only at the scheduled enqueue time. This is an asynchronous method returning a CompletableFuture which completes when the message is sent to the entity. The CompletableFuture, on completion, returns the sequence numbers of the scheduled messages which can be used to cancel the scheduling of the message.
  syntax:
    content: public Flux<Long> schedule(List<ServiceBusMessage> messages, OffsetDateTime scheduledEnqueueTime, int maxLinkSize, String associatedLinkName, ServiceBusTransactionContext transactionContext)
    parameters:
    - id: messages
      type: java.util.List<com.azure.messaging.servicebus.ServiceBusMessage>
    - id: scheduledEnqueueTime
      type: java.time.OffsetDateTime
    - id: maxLinkSize
      type: int
    - id: associatedLinkName
      type: java.lang.String
    - id: transactionContext
      type: com.azure.messaging.servicebus.ServiceBusTransactionContext
    return:
      type: reactor.core.publisher.Flux<java.lang.Long>
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.setSessionState(java.lang.String,byte[],java.lang.String)
  id: setSessionState(java.lang.String,byte[],java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.ManagementChannel
  langs:
  - java
  name: setSessionState(String sessionId, byte[] state, String associatedLinkName)
  nameWithType: ManagementChannel.setSessionState(String sessionId, byte[] state, String associatedLinkName)
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.setSessionState(String sessionId, byte[] state, String associatedLinkName)
  overload: com.azure.messaging.servicebus.implementation.ManagementChannel.setSessionState*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Updates the session state.
  syntax:
    content: public Mono<Void> setSessionState(String sessionId, byte[] state, String associatedLinkName)
    parameters:
    - id: sessionId
      type: java.lang.String
    - id: state
      type: byte[]
    - id: associatedLinkName
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.updateDisposition(java.lang.String,com.azure.messaging.servicebus.implementation.DispositionStatus,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,com.azure.messaging.servicebus.ServiceBusTransactionContext)
  id: updateDisposition(java.lang.String,com.azure.messaging.servicebus.implementation.DispositionStatus,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,com.azure.messaging.servicebus.ServiceBusTransactionContext)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.ManagementChannel
  langs:
  - java
  name: updateDisposition(String lockToken, DispositionStatus dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, String sessionId, String associatedLinkName, ServiceBusTransactionContext transactionContext)
  nameWithType: ManagementChannel.updateDisposition(String lockToken, DispositionStatus dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, String sessionId, String associatedLinkName, ServiceBusTransactionContext transactionContext)
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.updateDisposition(String lockToken, DispositionStatus dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, String sessionId, String associatedLinkName, ServiceBusTransactionContext transactionContext)
  overload: com.azure.messaging.servicebus.implementation.ManagementChannel.updateDisposition*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Updates the disposition status of a message given its lock token.
  syntax:
    content: public Mono<Void> updateDisposition(String lockToken, DispositionStatus dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, String sessionId, String associatedLinkName, ServiceBusTransactionContext transactionContext)
    parameters:
    - id: lockToken
      type: java.lang.String
    - id: dispositionStatus
      type: com.azure.messaging.servicebus.implementation.DispositionStatus
    - id: deadLetterReason
      type: java.lang.String
    - id: deadLetterErrorDescription
      type: java.lang.String
    - id: propertiesToModify
      type: java.util.Map<java.lang.String,java.lang.Object>
    - id: sessionId
      type: java.lang.String
    - id: associatedLinkName
      type: java.lang.String
    - id: transactionContext
      type: com.azure.messaging.servicebus.ServiceBusTransactionContext
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
references:
- uid: reactor.core.publisher.Mono<com.azure.core.amqp.implementation.RequestResponseChannel>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.amqp.implementation.RequestResponseChannel
    name: RequestResponseChannel
    fullName: com.azure.core.amqp.implementation.RequestResponseChannel
  - name: '>'
    fullName: '>'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.amqp.implementation.TokenManager
  spec.java:
  - uid: com.azure.core.amqp.implementation.TokenManager
    name: TokenManager
    fullName: com.azure.core.amqp.implementation.TokenManager
- uid: com.azure.core.amqp.implementation.MessageSerializer
  spec.java:
  - uid: com.azure.core.amqp.implementation.MessageSerializer
    name: MessageSerializer
    fullName: com.azure.core.amqp.implementation.MessageSerializer
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.ManagementChannel*
  name: ManagementChannel
  nameWithType: ManagementChannel.ManagementChannel
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.ManagementChannel
  package: com.azure.messaging.servicebus.implementation
- uid: java.lang.Iterable<java.lang.Long>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.cancelScheduledMessages*
  name: cancelScheduledMessages
  nameWithType: ManagementChannel.cancelScheduledMessages
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.cancelScheduledMessages
  package: com.azure.messaging.servicebus.implementation
- uid: reactor.core.publisher.Mono<byte[]>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.getSessionState*
  name: getSessionState
  nameWithType: ManagementChannel.getSessionState
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.getSessionState
  package: com.azure.messaging.servicebus.implementation
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: reactor.core.publisher.Mono<com.azure.messaging.servicebus.ServiceBusReceivedMessage>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage
    name: ServiceBusReceivedMessage
    fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.peek*
  name: peek
  nameWithType: ManagementChannel.peek
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.peek
  package: com.azure.messaging.servicebus.implementation
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: reactor.core.publisher.Flux<com.azure.messaging.servicebus.ServiceBusReceivedMessage>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage
    name: ServiceBusReceivedMessage
    fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.models.ServiceBusReceiveMode
  name: ServiceBusReceiveMode
  nameWithType: ServiceBusReceiveMode
  fullName: com.azure.messaging.servicebus.models.ServiceBusReceiveMode
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessages*
  name: receiveDeferredMessages
  nameWithType: ManagementChannel.receiveDeferredMessages
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessages
  package: com.azure.messaging.servicebus.implementation
- uid: reactor.core.publisher.Mono<java.time.OffsetDateTime>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.time.OffsetDateTime
    name: OffsetDateTime
    fullName: java.time.OffsetDateTime
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.renewMessageLock*
  name: renewMessageLock
  nameWithType: ManagementChannel.renewMessageLock
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.renewMessageLock
  package: com.azure.messaging.servicebus.implementation
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.renewSessionLock*
  name: renewSessionLock
  nameWithType: ManagementChannel.renewSessionLock
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.renewSessionLock
  package: com.azure.messaging.servicebus.implementation
- uid: java.util.List<com.azure.messaging.servicebus.ServiceBusMessage>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.ServiceBusMessage
    name: ServiceBusMessage
    fullName: com.azure.messaging.servicebus.ServiceBusMessage
  - name: '>'
    fullName: '>'
- uid: java.time.OffsetDateTime
  spec.java:
  - uid: java.time.OffsetDateTime
    name: OffsetDateTime
    fullName: java.time.OffsetDateTime
- uid: com.azure.messaging.servicebus.ServiceBusTransactionContext
  name: ServiceBusTransactionContext
  nameWithType: ServiceBusTransactionContext
  fullName: com.azure.messaging.servicebus.ServiceBusTransactionContext
- uid: reactor.core.publisher.Flux<java.lang.Long>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.schedule*
  name: schedule
  nameWithType: ManagementChannel.schedule
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.schedule
  package: com.azure.messaging.servicebus.implementation
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.setSessionState*
  name: setSessionState
  nameWithType: ManagementChannel.setSessionState
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.setSessionState
  package: com.azure.messaging.servicebus.implementation
- uid: com.azure.messaging.servicebus.implementation.DispositionStatus
  name: DispositionStatus
  nameWithType: DispositionStatus
  fullName: com.azure.messaging.servicebus.implementation.DispositionStatus
- uid: java.util.Map<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.updateDisposition*
  name: updateDisposition
  nameWithType: ManagementChannel.updateDisposition
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.updateDisposition
  package: com.azure.messaging.servicebus.implementation
- uid: com.azure.messaging.servicebus.implementation.ManagementChannel.close*
  name: close
  nameWithType: ManagementChannel.close
  fullName: com.azure.messaging.servicebus.implementation.ManagementChannel.close
  package: com.azure.messaging.servicebus.implementation
- uid: com.azure.messaging.servicebus.implementation.ServiceBusManagementNode
  name: ServiceBusManagementNode
  nameWithType: ServiceBusManagementNode
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusManagementNode
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.amqp.implementation.RequestResponseChannel
  name: RequestResponseChannel
  nameWithType: RequestResponseChannel
  fullName: com.azure.core.amqp.implementation.RequestResponseChannel
- uid: java.lang.Long
  name: Long
  nameWithType: Long
  fullName: java.lang.Long
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  name: ServiceBusReceivedMessage
  nameWithType: ServiceBusReceivedMessage
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.messaging.servicebus.ServiceBusMessage
  name: ServiceBusMessage
  nameWithType: ServiceBusMessage
  fullName: com.azure.messaging.servicebus.ServiceBusMessage
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
