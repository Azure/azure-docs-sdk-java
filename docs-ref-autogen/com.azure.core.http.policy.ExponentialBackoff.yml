### YamlMime:ManagedReference
items:
- uid: com.azure.core.http.policy.ExponentialBackoff
  id: ExponentialBackoff
  artifact: com.azure:azure-core:1.5.0
  parent: com.azure.core.http.policy
  children:
  - com.azure.core.http.policy.ExponentialBackoff.ExponentialBackoff()
  - com.azure.core.http.policy.ExponentialBackoff.ExponentialBackoff(int,java.time.Duration,java.time.Duration)
  - com.azure.core.http.policy.ExponentialBackoff.calculateRetryDelay(int)
  - com.azure.core.http.policy.ExponentialBackoff.getMaxRetries()
  langs:
  - java
  name: ExponentialBackoff
  nameWithType: ExponentialBackoff
  fullName: com.azure.core.http.policy.ExponentialBackoff
  type: Class
  package: com.azure.core.http.policy
  summary: A truncated exponential backoff implementation of <xref uid="com.azure.core.http.policy.RetryStrategy" data-throw-if-not-resolved="false">RetryStrategy</xref> that has a delay duration that exponentially increases with each retry attempt until an upper bound is reached after which every retry attempt is delayed by the provided max delay duration.
  syntax:
    content: public class ExponentialBackoff implements RetryStrategy
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.core.http.policy.RetryStrategy
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.http.policy.ExponentialBackoff.ExponentialBackoff()
  id: ExponentialBackoff()
  artifact: com.azure:azure-core:1.5.0
  parent: com.azure.core.http.policy.ExponentialBackoff
  langs:
  - java
  name: ExponentialBackoff()
  nameWithType: ExponentialBackoff.ExponentialBackoff()
  fullName: com.azure.core.http.policy.ExponentialBackoff.ExponentialBackoff()
  overload: com.azure.core.http.policy.ExponentialBackoff.ExponentialBackoff*
  type: Constructor
  package: com.azure.core.http.policy
  summary: Creates an instance of <xref uid="com.azure.core.http.policy.ExponentialBackoff" data-throw-if-not-resolved="false">ExponentialBackoff</xref> with a maximum of three retry attempts. This strategy starts with a delay of 800 milliseconds and exponentially increases with each additional retry attempt.
  syntax:
    content: public ExponentialBackoff()
- uid: com.azure.core.http.policy.ExponentialBackoff.ExponentialBackoff(int,java.time.Duration,java.time.Duration)
  id: ExponentialBackoff(int,java.time.Duration,java.time.Duration)
  artifact: com.azure:azure-core:1.5.0
  parent: com.azure.core.http.policy.ExponentialBackoff
  langs:
  - java
  name: ExponentialBackoff(int maxRetries, Duration baseDelay, Duration maxDelay)
  nameWithType: ExponentialBackoff.ExponentialBackoff(int maxRetries, Duration baseDelay, Duration maxDelay)
  fullName: com.azure.core.http.policy.ExponentialBackoff.ExponentialBackoff(int maxRetries, Duration baseDelay, Duration maxDelay)
  overload: com.azure.core.http.policy.ExponentialBackoff.ExponentialBackoff*
  type: Constructor
  package: com.azure.core.http.policy
  summary: Creates an instance of <xref uid="com.azure.core.http.policy.ExponentialBackoff" data-throw-if-not-resolved="false">ExponentialBackoff</xref>.
  syntax:
    content: public ExponentialBackoff(int maxRetries, Duration baseDelay, Duration maxDelay)
    parameters:
    - id: maxRetries
      type: int
      description: The max retry attempts that can be made.
    - id: baseDelay
      type: java.time.Duration
      description: The base delay duration for retry.
    - id: maxDelay
      type: java.time.Duration
      description: The max delay duration for retry.
- uid: com.azure.core.http.policy.ExponentialBackoff.calculateRetryDelay(int)
  id: calculateRetryDelay(int)
  artifact: com.azure:azure-core:1.5.0
  parent: com.azure.core.http.policy.ExponentialBackoff
  langs:
  - java
  name: calculateRetryDelay(int retryAttempts)
  nameWithType: ExponentialBackoff.calculateRetryDelay(int retryAttempts)
  fullName: com.azure.core.http.policy.ExponentialBackoff.calculateRetryDelay(int retryAttempts)
  overload: com.azure.core.http.policy.ExponentialBackoff.calculateRetryDelay*
  type: Method
  package: com.azure.core.http.policy
  summary: Computes the delay between each retry.
  syntax:
    content: public Duration calculateRetryDelay(int retryAttempts)
    parameters:
    - id: retryAttempts
      type: int
    return:
      type: java.time.Duration
- uid: com.azure.core.http.policy.ExponentialBackoff.getMaxRetries()
  id: getMaxRetries()
  artifact: com.azure:azure-core:1.5.0
  parent: com.azure.core.http.policy.ExponentialBackoff
  langs:
  - java
  name: getMaxRetries()
  nameWithType: ExponentialBackoff.getMaxRetries()
  fullName: com.azure.core.http.policy.ExponentialBackoff.getMaxRetries()
  overload: com.azure.core.http.policy.ExponentialBackoff.getMaxRetries*
  type: Method
  package: com.azure.core.http.policy
  summary: Max number of retry attempts to be make.
  syntax:
    content: public int getMaxRetries()
    return:
      type: int
references:
- uid: com.azure.core.http.policy.ExponentialBackoff.ExponentialBackoff*
  name: ExponentialBackoff
  nameWithType: ExponentialBackoff.ExponentialBackoff
  fullName: com.azure.core.http.policy.ExponentialBackoff.ExponentialBackoff
  package: com.azure.core.http.policy
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.http.policy.ExponentialBackoff.getMaxRetries*
  name: getMaxRetries
  nameWithType: ExponentialBackoff.getMaxRetries
  fullName: com.azure.core.http.policy.ExponentialBackoff.getMaxRetries
  package: com.azure.core.http.policy
- uid: com.azure.core.http.policy.ExponentialBackoff.calculateRetryDelay*
  name: calculateRetryDelay
  nameWithType: ExponentialBackoff.calculateRetryDelay
  fullName: com.azure.core.http.policy.ExponentialBackoff.calculateRetryDelay
  package: com.azure.core.http.policy
- uid: com.azure.core.http.policy.RetryStrategy
  name: RetryStrategy
  nameWithType: RetryStrategy
  fullName: com.azure.core.http.policy.RetryStrategy
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
