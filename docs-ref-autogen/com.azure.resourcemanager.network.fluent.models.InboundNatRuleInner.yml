### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner"
fullName: "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner"
name: "InboundNatRuleInner"
nameWithType: "InboundNatRuleInner"
summary: "Inbound NAT rule of the load balancer."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.SubResource\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.SubResource.id()"
- "com.azure.core.management.SubResource.withId(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class InboundNatRuleInner extends SubResource"
constructors:
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.InboundNatRuleInner()"
methods:
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.backendIpConfiguration()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.backendPort()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.enableFloatingIp()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.enableTcpReset()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.etag()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.frontendIpConfiguration()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.frontendPort()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.idleTimeoutInMinutes()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.name()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.protocol()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.provisioningState()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.type()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.validate()"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.withBackendPort(java.lang.Integer)"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.withEnableFloatingIp(java.lang.Boolean)"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.withEnableTcpReset(java.lang.Boolean)"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.withFrontendIpConfiguration(com.azure.core.management.SubResource)"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.withFrontendPort(java.lang.Integer)"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.withIdleTimeoutInMinutes(java.lang.Integer)"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.withName(java.lang.String)"
- "com.azure.resourcemanager.network.fluent.models.InboundNatRuleInner.withProtocol(com.azure.resourcemanager.network.models.TransportProtocol)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
