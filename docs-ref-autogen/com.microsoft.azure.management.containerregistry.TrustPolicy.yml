### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerregistry.TrustPolicy.status()
  name: status()
  nameWithType: TrustPolicy.status()
  returns:
    description: <p>the status value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.PolicyStatus?alt=com.microsoft.azure.management.containerregistry.PolicyStatus&text=PolicyStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the value that indicates whether the policy is enabled or not. Possible values include: 'enabled', 'disabled'.</p>

    <p></p>
  syntax: public PolicyStatus status()
  uid: com.microsoft.azure.management.containerregistry.TrustPolicy.status()
- fullName: com.microsoft.azure.management.containerregistry.TrustPolicy.type()
  name: type()
  nameWithType: TrustPolicy.type()
  returns:
    description: <p>the type value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.TrustPolicyType?alt=com.microsoft.azure.management.containerregistry.TrustPolicyType&text=TrustPolicyType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the type of trust policy. Possible values include: 'Notary'.</p>

    <p></p>
  syntax: public TrustPolicyType type()
  uid: com.microsoft.azure.management.containerregistry.TrustPolicy.type()
- fullName: com.microsoft.azure.management.containerregistry.TrustPolicy.withStatus(PolicyStatus status)
  name: withStatus(PolicyStatus status)
  nameWithType: TrustPolicy.withStatus(PolicyStatus status)
  parameters:
  - description: <p>the status value to set </p>
    name: status
    type: <xref href="com.microsoft.azure.management.containerregistry.PolicyStatus?alt=com.microsoft.azure.management.containerregistry.PolicyStatus&text=PolicyStatus" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TrustPolicy object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.TrustPolicy?alt=com.microsoft.azure.management.containerregistry.TrustPolicy&text=TrustPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the value that indicates whether the policy is enabled or not. Possible values include: 'enabled', 'disabled'.</p>

    <p></p>
  syntax: public TrustPolicy withStatus(PolicyStatus status)
  uid: com.microsoft.azure.management.containerregistry.TrustPolicy.withStatus(PolicyStatus)
- fullName: com.microsoft.azure.management.containerregistry.TrustPolicy.withType(TrustPolicyType type)
  name: withType(TrustPolicyType type)
  nameWithType: TrustPolicy.withType(TrustPolicyType type)
  parameters:
  - description: <p>the type value to set </p>
    name: type
    type: <xref href="com.microsoft.azure.management.containerregistry.TrustPolicyType?alt=com.microsoft.azure.management.containerregistry.TrustPolicyType&text=TrustPolicyType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TrustPolicy object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.TrustPolicy?alt=com.microsoft.azure.management.containerregistry.TrustPolicy&text=TrustPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the type of trust policy. Possible values include: 'Notary'.</p>

    <p></p>
  syntax: public TrustPolicy withType(TrustPolicyType type)
  uid: com.microsoft.azure.management.containerregistry.TrustPolicy.withType(TrustPolicyType)
nameWithType: TrustPolicy
syntax: public class TrustPolicy
type: class
uid: com.microsoft.azure.management.containerregistry.TrustPolicy
fullName: com.microsoft.azure.management.containerregistry.TrustPolicy
name: TrustPolicy
package: com.microsoft.azure.management.containerregistry
summary: <p>An object that represents content trust policy for a container registry. </p>
metadata: {}
