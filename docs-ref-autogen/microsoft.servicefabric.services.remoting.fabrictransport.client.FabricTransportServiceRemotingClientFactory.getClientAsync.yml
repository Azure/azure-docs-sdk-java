### YamlMime:JavaMember
nameWithType: FabricTransportServiceRemotingClientFactory.getClientAsync
type: method
members:
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  name: getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  overridden: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)
  parameters:
  - description: <p>Previous ResolvedServicePartition value </p>
    name: previousRsp
    type: <xref href="system.fabric.ResolvedServicePartition?alt=system.fabric.ResolvedServicePartition&text=ResolvedServicePartition" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies which replica in the partition identified by the partition key, the client should connect to </p>
    name: targetReplicaSelector
    type: <xref href="microsoft.servicefabric.services.communication.client.TargetReplicaSelector?alt=microsoft.servicefabric.services.communication.client.TargetReplicaSelector&text=TargetReplicaSelector" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies which listener in the endpoint of the chosen replica, to which the client should connect to </p>
    name: listenerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the retry policy that should be used for exceptions that occur when creating the client.</p>
    name: retrySettings
    type: <xref href="microsoft.servicefabric.services.communication.client.OperationRetrySettings?alt=microsoft.servicefabric.services.communication.client.OperationRetrySettings&text=OperationRetrySettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. The result of the Task is the CommunicationClient( <xref uid="microsoft.servicefabric.services.communication.client.CommunicationClient" data-throw-if-not-resolved="false">microsoft.servicefabric.services.communication.client.CommunicationClient</xref>) object. </p>
    type: CompletableFuture&lt;<xref href="microsoft.servicefabric.services.remoting.client.ServiceRemotingClient?alt=microsoft.servicefabric.services.remoting.client.ServiceRemotingClient&text=ServiceRemotingClient" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Re-resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</p>

    <p></p>
  syntax: public CompletableFuture<ServiceRemotingClient> getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  name: getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: FabricTransportServiceRemotingClientFactory.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  overridden: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
  parameters:
  - description: <p>Uri of the service to resolve </p>
    name: serviceUri
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>Key that identifies the partition to resolve </p>
    name: partitionKey
    type: <xref href="microsoft.servicefabric.services.client.ServicePartitionKey?alt=microsoft.servicefabric.services.client.ServicePartitionKey&text=ServicePartitionKey" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies which replica in the partition identified by the partition key, the client should connect to </p>
    name: targetReplicaSelector
    type: <xref href="microsoft.servicefabric.services.communication.client.TargetReplicaSelector?alt=microsoft.servicefabric.services.communication.client.TargetReplicaSelector&text=TargetReplicaSelector" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies which listener in the endpoint of the chosen replica, to which the client should connect to </p>
    name: listenerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the retry policy that should be used for exceptions that occur when creating the client.</p>
    name: retrySettings
    type: <xref href="microsoft.servicefabric.services.communication.client.OperationRetrySettings?alt=microsoft.servicefabric.services.communication.client.OperationRetrySettings&text=OperationRetrySettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. The result of the Task is the CommunicationClient( <xref uid="microsoft.servicefabric.services.communication.client.CommunicationClient" data-throw-if-not-resolved="false">microsoft.servicefabric.services.communication.client.CommunicationClient</xref>) object. </p>
    type: CompletableFuture&lt;<xref href="microsoft.servicefabric.services.remoting.client.ServiceRemotingClient?alt=microsoft.servicefabric.services.remoting.client.ServiceRemotingClient&text=ServiceRemotingClient" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</p>

    <p></p>
  syntax: public CompletableFuture<ServiceRemotingClient> getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
uid: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync*
fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
name: getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
package: microsoft.servicefabric.services.remoting.fabrictransport.client
metadata: {}
