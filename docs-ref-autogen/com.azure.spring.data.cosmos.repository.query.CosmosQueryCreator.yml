### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator"
fullName: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator"
name: "CosmosQueryCreator"
nameWithType: "CosmosQueryCreator"
summary: "TODO: String based query, based on how cosmosDB provides."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.repository.query.parser.AbstractQueryCreator?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
- classRef: "<xref href=\"org.springframework.data.repository.query.parser.AbstractQueryCreator?alt=org.springframework.data.repository.query.parser.AbstractQueryCreator&text=AbstractQueryCreator\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.springframework.data.repository.query.parser.AbstractQueryCreator.and(org.springframework.data.repository.query.parser.Part,S,java.util.Iterator<java.lang.Object>)?alt=org.springframework.data.repository.query.parser.AbstractQueryCreator.and&text=and\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.parser.AbstractQueryCreator.complete(S,org.springframework.data.domain.Sort)?alt=org.springframework.data.repository.query.parser.AbstractQueryCreator.complete&text=complete\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.parser.AbstractQueryCreator.create(org.springframework.data.repository.query.parser.Part,java.util.Iterator<java.lang.Object>)?alt=org.springframework.data.repository.query.parser.AbstractQueryCreator.create&text=create\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery()?alt=org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery&text=createQuery\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(org.springframework.data.domain.Sort)?alt=org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery&text=createQuery\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.parser.AbstractQueryCreator.or(S,S)?alt=org.springframework.data.repository.query.parser.AbstractQueryCreator.or&text=or\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **CosmosQueryCreator**</br> extends <xref href=\"org.springframework.data.repository.query.parser.AbstractQueryCreator?alt=org.springframework.data.repository.query.parser.AbstractQueryCreator&text=AbstractQueryCreator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.spring.data.cosmos.core.query.Criteria?alt=com.azure.spring.data.cosmos.core.query.Criteria&text=Criteria\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.CosmosQueryCreator(org.springframework.data.repository.query.parser.PartTree,com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor,org.springframework.data.mapping.context.MappingContext<?,com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty>)"
  fullName: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.CosmosQueryCreator(PartTree tree, CosmosParameterAccessor accessor, MappingContext<?,CosmosPersistentProperty> mappingContext)"
  name: "CosmosQueryCreator(PartTree tree, CosmosParameterAccessor accessor, MappingContext<?,CosmosPersistentProperty> mappingContext)"
  nameWithType: "CosmosQueryCreator.CosmosQueryCreator(PartTree tree, CosmosParameterAccessor accessor, MappingContext<?,CosmosPersistentProperty> mappingContext)"
  summary: "Creates a new <xref uid=\"com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosQueryCreator\"></xref>."
  parameters:
  - description: "must not be null."
    name: "tree"
    type: "<xref href=\"org.springframework.data.repository.query.parser.PartTree?alt=org.springframework.data.repository.query.parser.PartTree&text=PartTree\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null."
    name: "accessor"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor?alt=com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor&text=CosmosParameterAccessor\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null."
    name: "mappingContext"
    type: "<xref href=\"org.springframework.data.mapping.context.MappingContext?alt=org.springframework.data.mapping.context.MappingContext&text=MappingContext\" data-throw-if-not-resolved=\"False\" />&lt;?,<xref href=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty?alt=com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty&text=CosmosPersistentProperty\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosQueryCreator(PartTree tree, CosmosParameterAccessor accessor, MappingContext<?,CosmosPersistentProperty> mappingContext)"
  desc: "Creates a new <xref uid=\"com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosQueryCreator\"></xref>. <xref uid=\"com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosParameterAccessor\"></xref> is used to hand actual parameter values into the callback methods as well as to apply dynamic sorting via a <xref uid=\"org.springframework.data.domain.Sort\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Sort\"></xref> parameter."
methods:
- uid: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.and(org.springframework.data.repository.query.parser.Part,com.azure.spring.data.cosmos.core.query.Criteria,java.util.Iterator<java.lang.Object>)"
  fullName: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.and(Part part, Criteria base, Iterator<Object> parameters)"
  name: "and(Part part, Criteria base, Iterator<Object> parameters)"
  nameWithType: "CosmosQueryCreator.and(Part part, Criteria base, Iterator<Object> parameters)"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.repository.query.parser.AbstractQueryCreator.and(org.springframework.data.repository.query.parser.Part,S,java.util.Iterator<java.lang.Object>)"
  parameters:
  - name: "part"
    type: "<xref href=\"org.springframework.data.repository.query.parser.Part?alt=org.springframework.data.repository.query.parser.Part&text=Part\" data-throw-if-not-resolved=\"False\" />"
  - name: "base"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.Criteria?alt=com.azure.spring.data.cosmos.core.query.Criteria&text=Criteria\" data-throw-if-not-resolved=\"False\" />"
  - name: "parameters"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html\">Iterator</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>&gt;"
  syntax: "protected Criteria and(Part part, Criteria base, Iterator<Object> parameters)"
  returns:
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.Criteria?alt=com.azure.spring.data.cosmos.core.query.Criteria&text=Criteria\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.complete(com.azure.spring.data.cosmos.core.query.Criteria,org.springframework.data.domain.Sort)"
  fullName: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.complete(Criteria criteria, Sort sort)"
  name: "complete(Criteria criteria, Sort sort)"
  nameWithType: "CosmosQueryCreator.complete(Criteria criteria, Sort sort)"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.repository.query.parser.AbstractQueryCreator.complete(S,org.springframework.data.domain.Sort)"
  parameters:
  - name: "criteria"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.Criteria?alt=com.azure.spring.data.cosmos.core.query.Criteria&text=Criteria\" data-throw-if-not-resolved=\"False\" />"
  - name: "sort"
    type: "<xref href=\"org.springframework.data.domain.Sort?alt=org.springframework.data.domain.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected CosmosQuery complete(Criteria criteria, Sort sort)"
  returns:
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.create(org.springframework.data.repository.query.parser.Part,java.util.Iterator<java.lang.Object>)"
  fullName: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.create(Part part, Iterator<Object> parameters)"
  name: "create(Part part, Iterator<Object> parameters)"
  nameWithType: "CosmosQueryCreator.create(Part part, Iterator<Object> parameters)"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.repository.query.parser.AbstractQueryCreator.create(org.springframework.data.repository.query.parser.Part,java.util.Iterator<java.lang.Object>)"
  parameters:
  - name: "part"
    type: "<xref href=\"org.springframework.data.repository.query.parser.Part?alt=org.springframework.data.repository.query.parser.Part&text=Part\" data-throw-if-not-resolved=\"False\" />"
  - name: "parameters"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html\">Iterator</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>&gt;"
  syntax: "protected Criteria create(Part part, Iterator<Object> parameters)"
  returns:
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.Criteria?alt=com.azure.spring.data.cosmos.core.query.Criteria&text=Criteria\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.or(com.azure.spring.data.cosmos.core.query.Criteria,com.azure.spring.data.cosmos.core.query.Criteria)"
  fullName: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.or(Criteria base, Criteria criteria)"
  name: "or(Criteria base, Criteria criteria)"
  nameWithType: "CosmosQueryCreator.or(Criteria base, Criteria criteria)"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.repository.query.parser.AbstractQueryCreator.or(S,S)"
  parameters:
  - name: "base"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.Criteria?alt=com.azure.spring.data.cosmos.core.query.Criteria&text=Criteria\" data-throw-if-not-resolved=\"False\" />"
  - name: "criteria"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.Criteria?alt=com.azure.spring.data.cosmos.core.query.Criteria&text=Criteria\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Criteria or(Criteria base, Criteria criteria)"
  returns:
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.Criteria?alt=com.azure.spring.data.cosmos.core.query.Criteria&text=Criteria\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "TODO: String based query, based on how cosmosDB provides. StringCosmosQuery class, How to bind values to the query. if CosmosDb already has binding capability, if not we would have to do it here in some creative way.query creator are associated with part tree queries,"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.query"
artifact: com.azure:azure-spring-data-cosmos:3.47.0
