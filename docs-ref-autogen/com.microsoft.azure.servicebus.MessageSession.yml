### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.MessageSession"
fullName: "com.microsoft.azure.servicebus.MessageSession"
name: "MessageSession"
nameWithType: "MessageSession"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.servicebus.primitives.ClientEntity\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.servicebus.InitializableEntity\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.servicebus.MessageReceiver\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.getEntityPath()"
- "com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver()"
- "com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount()"
- "com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode()"
- "com.microsoft.azure.servicebus.MessageReceiver.getRequestedSessionId()"
- "com.microsoft.azure.servicebus.MessageReceiver.isBrowsableSession()"
- "com.microsoft.azure.servicebus.MessageReceiver.isSessionReceiver()"
- "com.microsoft.azure.servicebus.MessageReceiver.onClose()"
- "com.microsoft.azure.servicebus.MessageReceiver.peek()"
- "com.microsoft.azure.servicebus.MessageReceiver.peek(long)"
- "com.microsoft.azure.servicebus.MessageReceiver.peekAsync()"
- "com.microsoft.azure.servicebus.MessageReceiver.peekAsync(long)"
- "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(int)"
- "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(long,int)"
- "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(int)"
- "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(long,int)"
- "com.microsoft.azure.servicebus.MessageReceiver.receive()"
- "com.microsoft.azure.servicebus.MessageReceiver.receive(java.time.Duration)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync()"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync(java.time.Duration)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int,java.time.Duration)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int,java.time.Duration)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage(long)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync(long)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection<java.lang.Long>)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)"
- "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(com.microsoft.azure.servicebus.IMessage)"
- "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)"
- "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
- "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
- "com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount(int)"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class MessageSession extends MessageReceiver implements IMessageSession"
methods:
- "com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc()"
- "com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId()"
- "com.microsoft.azure.servicebus.MessageSession.getSessionId()"
- "com.microsoft.azure.servicebus.MessageSession.getState()"
- "com.microsoft.azure.servicebus.MessageSession.getStateAsync()"
- "com.microsoft.azure.servicebus.MessageSession.isBrowsableSession()"
- "com.microsoft.azure.servicebus.MessageSession.isSessionReceiver()"
- "com.microsoft.azure.servicebus.MessageSession.renewSessionLock()"
- "com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync()"
- "com.microsoft.azure.servicebus.MessageSession.setState(byte[])"
- "com.microsoft.azure.servicebus.MessageSession.setStateAsync(byte[])"
type: "class"
implements:
- "<xref href=\"com.microsoft.azure.servicebus.IMessageSession?alt=com.microsoft.azure.servicebus.IMessageSession&text=IMessageSession\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.servicebus"
artifact: com.microsoft.azure:azure-servicebus:3.4.0
