### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.MessageSession"
fullName: "com.microsoft.azure.servicebus.MessageSession"
name: "MessageSession"
nameWithType: "MessageSession"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.servicebus.primitives.ClientEntity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.servicebus.InitializableEntity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.servicebus.MessageReceiver?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- "com.microsoft.azure.servicebus.MessageReceiver.getEntityPath()"
- "com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver()"
- "com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount()"
- "com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode()"
- "com.microsoft.azure.servicebus.MessageReceiver.getRequestedSessionId()"
- "com.microsoft.azure.servicebus.MessageReceiver.isBrowsableSession()"
- "com.microsoft.azure.servicebus.MessageReceiver.isSessionReceiver()"
- "com.microsoft.azure.servicebus.MessageReceiver.onClose()"
- "com.microsoft.azure.servicebus.MessageReceiver.peek()"
- "com.microsoft.azure.servicebus.MessageReceiver.peek(long)"
- "com.microsoft.azure.servicebus.MessageReceiver.peekAsync()"
- "com.microsoft.azure.servicebus.MessageReceiver.peekAsync(long)"
- "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(int)"
- "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(long,int)"
- "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(int)"
- "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(long,int)"
- "com.microsoft.azure.servicebus.MessageReceiver.receive()"
- "com.microsoft.azure.servicebus.MessageReceiver.receive(java.time.Duration)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync()"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync(java.time.Duration)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int,java.time.Duration)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int,java.time.Duration)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage(long)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync(long)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection<java.lang.Long>)"
- "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)"
- "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(com.microsoft.azure.servicebus.IMessage)"
- "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)"
- "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(java.util.UUID)"
- "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
- "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
- "com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount(int)"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
- "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class MessageSession extends MessageReceiver implements IMessageSession"
methods:
- uid: "com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc()"
  name: "getLockedUntilUtc()"
  nameWithType: "MessageSession.getLockedUntilUtc()"
  syntax: "public Instant getLockedUntilUtc()"
  returns:
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId()"
  name: "getRequestedSessionId()"
  nameWithType: "MessageSession.getRequestedSessionId()"
  modifiers:
  - "protected"
  overridden: "com.microsoft.azure.servicebus.MessageReceiver.getRequestedSessionId()"
  syntax: "protected String getRequestedSessionId()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.MessageSession.getSessionId()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.getSessionId()"
  name: "getSessionId()"
  nameWithType: "MessageSession.getSessionId()"
  syntax: "public String getSessionId()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.MessageSession.getState()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.getState()"
  name: "getState()"
  nameWithType: "MessageSession.getState()"
  summary: "Gets the session state."
  syntax: "public byte[] getState()"
  exceptions:
  - type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Gets the session state."
  returns:
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.azure.servicebus.MessageSession.getStateAsync()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.getStateAsync()"
  name: "getStateAsync()"
  nameWithType: "MessageSession.getStateAsync()"
  summary: "Asynchronously gets the session state."
  syntax: "public CompletableFuture<byte[]> getStateAsync()"
  desc: "Asynchronously gets the session state."
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
- uid: "com.microsoft.azure.servicebus.MessageSession.isBrowsableSession()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.isBrowsableSession()"
  name: "isBrowsableSession()"
  nameWithType: "MessageSession.isBrowsableSession()"
  modifiers:
  - "protected"
  overridden: "com.microsoft.azure.servicebus.MessageReceiver.isBrowsableSession()"
  syntax: "protected boolean isBrowsableSession()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.MessageSession.isSessionReceiver()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.isSessionReceiver()"
  name: "isSessionReceiver()"
  nameWithType: "MessageSession.isSessionReceiver()"
  modifiers:
  - "protected"
  - "final"
  overridden: "com.microsoft.azure.servicebus.MessageReceiver.isSessionReceiver()"
  syntax: "protected final boolean isSessionReceiver()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.MessageSession.renewSessionLock()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.renewSessionLock()"
  name: "renewSessionLock()"
  nameWithType: "MessageSession.renewSessionLock()"
  summary: "Renews the lock on the session specified by the <xref uid=\"com.microsoft.azure.servicebus.IMessageSession.getSessionId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession#getSessionId()\"></xref>."
  syntax: "public void renewSessionLock()"
  exceptions:
  - type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Renews the lock on the session specified by the <xref uid=\"com.microsoft.azure.servicebus.IMessageSession.getSessionId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession#getSessionId()\"></xref>. The lock will be renewed based on the setting specified on the entity.\n\nWhen you accept a session, the session is locked for this client instance by the service for a duration as specified during the Queue/Subscription creation. If processing of the session requires longer than this duration, the session-lock needs to be renewed. For each renewal, the session-lock is renewed by the entity's LockDuration.\n\nRenewal of session renews all the messages in the session as well. Each individual message need not be renewed."
- uid: "com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync()"
  name: "renewSessionLockAsync()"
  nameWithType: "MessageSession.renewSessionLockAsync()"
  summary: "Renews the lock on the session specified by the <xref uid=\"com.microsoft.azure.servicebus.IMessageSession.getSessionId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession#getSessionId()\"></xref>."
  syntax: "public CompletableFuture<Void> renewSessionLockAsync()"
  desc: "Renews the lock on the session specified by the <xref uid=\"com.microsoft.azure.servicebus.IMessageSession.getSessionId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession#getSessionId()\"></xref>. The lock will be renewed based on the setting specified on the entity."
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.MessageSession.setState(byte[])"
  fullName: "com.microsoft.azure.servicebus.MessageSession.setState(byte[] sessionState)"
  name: "setState(byte[] sessionState)"
  nameWithType: "MessageSession.setState(byte[] sessionState)"
  summary: "Set a custom state on the session which can be later retrieved using <xref uid=\"com.microsoft.azure.servicebus.IMessageSession.getState()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession#getState()\"></xref>."
  parameters:
  - name: "sessionState"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void setState(byte[] sessionState)"
  exceptions:
  - type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Set a custom state on the session which can be later retrieved using <xref uid=\"com.microsoft.azure.servicebus.IMessageSession.getState()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession#getState()\"></xref>."
- uid: "com.microsoft.azure.servicebus.MessageSession.setStateAsync(byte[])"
  fullName: "com.microsoft.azure.servicebus.MessageSession.setStateAsync(byte[] sessionState)"
  name: "setStateAsync(byte[] sessionState)"
  nameWithType: "MessageSession.setStateAsync(byte[] sessionState)"
  summary: "Asynchronously set a custom state on the session which can be later retrieved using <xref uid=\"com.microsoft.azure.servicebus.IMessageSession.getState()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession#getState()\"></xref>."
  parameters:
  - name: "sessionState"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CompletableFuture<Void> setStateAsync(byte[] sessionState)"
  desc: "Asynchronously set a custom state on the session which can be later retrieved using <xref uid=\"com.microsoft.azure.servicebus.IMessageSession.getState()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession#getState()\"></xref>."
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
implements:
- "<xref href=\"com.microsoft.azure.servicebus.IMessageSession?alt=com.microsoft.azure.servicebus.IMessageSession&text=IMessageSession\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.servicebus"
artifact: com.microsoft.azure:azure-servicebus:3.6.6
