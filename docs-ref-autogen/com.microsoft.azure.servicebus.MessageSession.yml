### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.MessageSession
  id: MessageSession
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc()
  - com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId()
  - com.microsoft.azure.servicebus.MessageSession.getSessionId()
  - com.microsoft.azure.servicebus.MessageSession.getState()
  - com.microsoft.azure.servicebus.MessageSession.getStateAsync()
  - com.microsoft.azure.servicebus.MessageSession.isBrowsableSession()
  - com.microsoft.azure.servicebus.MessageSession.isSessionReceiver()
  - com.microsoft.azure.servicebus.MessageSession.renewSessionLock()
  - com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync()
  - com.microsoft.azure.servicebus.MessageSession.setState(byte[])
  - com.microsoft.azure.servicebus.MessageSession.setStateAsync(byte[])
  langs:
  - java
  name: MessageSession
  nameWithType: MessageSession
  fullName: com.microsoft.azure.servicebus.MessageSession
  type: Class
  package: com.microsoft.azure.servicebus
  syntax:
    content: public class MessageSession extends MessageReceiver implements IMessageSession
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.servicebus.primitives.ClientEntity
  - com.microsoft.azure.servicebus.InitializableEntity
  - com.microsoft.azure.servicebus.MessageReceiver
  implements:
  - com.microsoft.azure.servicebus.IMessageSession
  inheritedMembers:
  - com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID)
  - com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
  - com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID)
  - com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
  - com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID)
  - com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID)
  - com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
  - com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID)
  - com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
  - com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID)
  - com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
  - com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.MessageReceiver.getEntityPath()
  - com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver()
  - com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount()
  - com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode()
  - com.microsoft.azure.servicebus.MessageReceiver.getRequestedSessionId()
  - com.microsoft.azure.servicebus.MessageReceiver.isBrowsableSession()
  - com.microsoft.azure.servicebus.MessageReceiver.isSessionReceiver()
  - com.microsoft.azure.servicebus.MessageReceiver.onClose()
  - com.microsoft.azure.servicebus.MessageReceiver.peek()
  - com.microsoft.azure.servicebus.MessageReceiver.peek(long)
  - com.microsoft.azure.servicebus.MessageReceiver.peekAsync()
  - com.microsoft.azure.servicebus.MessageReceiver.peekAsync(long)
  - com.microsoft.azure.servicebus.MessageReceiver.peekBatch(int)
  - com.microsoft.azure.servicebus.MessageReceiver.peekBatch(long,int)
  - com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(int)
  - com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(long,int)
  - com.microsoft.azure.servicebus.MessageReceiver.receive()
  - com.microsoft.azure.servicebus.MessageReceiver.receive(java.time.Duration)
  - com.microsoft.azure.servicebus.MessageReceiver.receiveAsync()
  - com.microsoft.azure.servicebus.MessageReceiver.receiveAsync(java.time.Duration)
  - com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int)
  - com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int,java.time.Duration)
  - com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int)
  - com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int,java.time.Duration)
  - com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage(long)
  - com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync(long)
  - com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection<java.lang.Long>)
  - com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)
  - com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(com.microsoft.azure.servicebus.IMessage)
  - com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(java.util.UUID)
  - com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)
  - com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(java.util.UUID)
  - com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)
  - com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)
  - com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount(int)
  - com.microsoft.azure.servicebus.primitives.ClientEntity.close()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.servicebus.MessageSession.MessageSession(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  id: MessageSession(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: MessageSession(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType, String requestedSessionId, ReceiveMode receiveMode)
  nameWithType: MessageSession.MessageSession(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType, String requestedSessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.MessageSession.MessageSession(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType, String requestedSessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.MessageSession.MessageSession*
  type: Constructor
  package: com.microsoft.azure.servicebus
  syntax:
    content: " MessageSession(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType, String requestedSessionId, ReceiveMode receiveMode)"
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
    - id: entityPath
      type: java.lang.String
    - id: entityType
      type: com.microsoft.azure.servicebus.primitives.MessagingEntityType
    - id: requestedSessionId
      type: java.lang.String
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
- uid: com.microsoft.azure.servicebus.MessageSession.MessageSession(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  id: MessageSession(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: MessageSession(URI namespaceEndpointURI, String entityPath, MessagingEntityType entityType, String requestedSessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: MessageSession.MessageSession(URI namespaceEndpointURI, String entityPath, MessagingEntityType entityType, String requestedSessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.MessageSession.MessageSession(URI namespaceEndpointURI, String entityPath, MessagingEntityType entityType, String requestedSessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.MessageSession.MessageSession*
  type: Constructor
  package: com.microsoft.azure.servicebus
  syntax:
    content: " MessageSession(URI namespaceEndpointURI, String entityPath, MessagingEntityType entityType, String requestedSessionId, ClientSettings clientSettings, ReceiveMode receiveMode)"
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
    - id: entityPath
      type: java.lang.String
    - id: entityType
      type: com.microsoft.azure.servicebus.primitives.MessagingEntityType
    - id: requestedSessionId
      type: java.lang.String
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
- uid: com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc()
  id: getLockedUntilUtc()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: getLockedUntilUtc()
  nameWithType: MessageSession.getLockedUntilUtc()
  fullName: com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc()
  overload: com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc*
  type: Method
  package: com.microsoft.azure.servicebus
  syntax:
    content: public Instant getLockedUntilUtc()
    return:
      type: java.time.Instant
- uid: com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId()
  id: getRequestedSessionId()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: getRequestedSessionId()
  nameWithType: MessageSession.getRequestedSessionId()
  fullName: com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId()
  overload: com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId*
  type: Method
  package: com.microsoft.azure.servicebus
  syntax:
    content: protected String getRequestedSessionId()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.servicebus.MessageSession.getSessionId()
  id: getSessionId()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: getSessionId()
  nameWithType: MessageSession.getSessionId()
  fullName: com.microsoft.azure.servicebus.MessageSession.getSessionId()
  overload: com.microsoft.azure.servicebus.MessageSession.getSessionId*
  type: Method
  package: com.microsoft.azure.servicebus
  syntax:
    content: public String getSessionId()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.servicebus.MessageSession.getState()
  id: getState()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: getState()
  nameWithType: MessageSession.getState()
  fullName: com.microsoft.azure.servicebus.MessageSession.getState()
  overload: com.microsoft.azure.servicebus.MessageSession.getState*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Gets the session state.
  syntax:
    content: public byte[] getState()
    return:
      type: byte[]
  exceptions:
  - type: java.lang.InterruptedException
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
- uid: com.microsoft.azure.servicebus.MessageSession.getStateAsync()
  id: getStateAsync()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: getStateAsync()
  nameWithType: MessageSession.getStateAsync()
  fullName: com.microsoft.azure.servicebus.MessageSession.getStateAsync()
  overload: com.microsoft.azure.servicebus.MessageSession.getStateAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously gets the session state.
  syntax:
    content: public CompletableFuture<byte[]> getStateAsync()
    return:
      type: java.util.concurrent.CompletableFuture<byte[]>
- uid: com.microsoft.azure.servicebus.MessageSession.isBrowsableSession()
  id: isBrowsableSession()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: isBrowsableSession()
  nameWithType: MessageSession.isBrowsableSession()
  fullName: com.microsoft.azure.servicebus.MessageSession.isBrowsableSession()
  overload: com.microsoft.azure.servicebus.MessageSession.isBrowsableSession*
  type: Method
  package: com.microsoft.azure.servicebus
  syntax:
    content: protected boolean isBrowsableSession()
    return:
      type: boolean
- uid: com.microsoft.azure.servicebus.MessageSession.isSessionReceiver()
  id: isSessionReceiver()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: isSessionReceiver()
  nameWithType: MessageSession.isSessionReceiver()
  fullName: com.microsoft.azure.servicebus.MessageSession.isSessionReceiver()
  overload: com.microsoft.azure.servicebus.MessageSession.isSessionReceiver*
  type: Method
  package: com.microsoft.azure.servicebus
  syntax:
    content: protected final boolean isSessionReceiver()
    return:
      type: boolean
- uid: com.microsoft.azure.servicebus.MessageSession.renewSessionLock()
  id: renewSessionLock()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: renewSessionLock()
  nameWithType: MessageSession.renewSessionLock()
  fullName: com.microsoft.azure.servicebus.MessageSession.renewSessionLock()
  overload: com.microsoft.azure.servicebus.MessageSession.renewSessionLock*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: >-
    Renews the lock on the session specified by the <xref uid="com.microsoft.azure.servicebus.IMessageSession.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref>. The lock will be renewed based on the setting specified on the entity.


    When you accept a session, the session is locked for this client instance by the service for a duration as specified during the Queue/Subscription creation. If processing of the session requires longer than this duration, the session-lock needs to be renewed. For each renewal, the session-lock is renewed by the entity's LockDuration.


    Renewal of session renews all the messages in the session as well. Each individual message need not be renewed.
  syntax:
    content: public void renewSessionLock()
  exceptions:
  - type: java.lang.InterruptedException
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
- uid: com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync()
  id: renewSessionLockAsync()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: renewSessionLockAsync()
  nameWithType: MessageSession.renewSessionLockAsync()
  fullName: com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync()
  overload: com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Renews the lock on the session specified by the <xref uid="com.microsoft.azure.servicebus.IMessageSession.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref>. The lock will be renewed based on the setting specified on the entity.
  syntax:
    content: public CompletableFuture<Void> renewSessionLockAsync()
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.servicebus.MessageSession.setState(byte[])
  id: setState(byte[])
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: setState(byte[] sessionState)
  nameWithType: MessageSession.setState(byte[] sessionState)
  fullName: com.microsoft.azure.servicebus.MessageSession.setState(byte[] sessionState)
  overload: com.microsoft.azure.servicebus.MessageSession.setState*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Set a custom state on the session which can be later retrieved using <xref uid="com.microsoft.azure.servicebus.IMessageSession.getState()" data-throw-if-not-resolved="false">IMessageSession#getState()</xref>.
  syntax:
    content: public void setState(byte[] sessionState)
    parameters:
    - id: sessionState
      type: byte[]
  exceptions:
  - type: java.lang.InterruptedException
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
- uid: com.microsoft.azure.servicebus.MessageSession.setStateAsync(byte[])
  id: setStateAsync(byte[])
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageSession
  langs:
  - java
  name: setStateAsync(byte[] sessionState)
  nameWithType: MessageSession.setStateAsync(byte[] sessionState)
  fullName: com.microsoft.azure.servicebus.MessageSession.setStateAsync(byte[] sessionState)
  overload: com.microsoft.azure.servicebus.MessageSession.setStateAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously set a custom state on the session which can be later retrieved using <xref uid="com.microsoft.azure.servicebus.IMessageSession.getState()" data-throw-if-not-resolved="false">IMessageSession#getState()</xref>.
  syntax:
    content: public CompletableFuture<Void> setStateAsync(byte[] sessionState)
    parameters:
    - id: sessionState
      type: byte[]
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
references:
- uid: java.net.URI
  spec.java:
  - uid: java.net.URI
    name: URI
    fullName: java.net.URI
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.servicebus.primitives.MessagingEntityType
  name: MessagingEntityType
  nameWithType: MessagingEntityType
  fullName: com.microsoft.azure.servicebus.primitives.MessagingEntityType
- uid: com.microsoft.azure.servicebus.ClientSettings
  name: ClientSettings
  nameWithType: ClientSettings
  fullName: com.microsoft.azure.servicebus.ClientSettings
- uid: com.microsoft.azure.servicebus.ReceiveMode
  name: ReceiveMode
  nameWithType: ReceiveMode
  fullName: com.microsoft.azure.servicebus.ReceiveMode
- uid: com.microsoft.azure.servicebus.MessageSession.MessageSession*
  name: MessageSession
  nameWithType: MessageSession.MessageSession
  fullName: com.microsoft.azure.servicebus.MessageSession.MessageSession
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.primitives.MessagingFactory
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.servicebus.primitives.MessagingFactory
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.servicebus.MessageSession.isSessionReceiver*
  name: isSessionReceiver
  nameWithType: MessageSession.isSessionReceiver
  fullName: com.microsoft.azure.servicebus.MessageSession.isSessionReceiver
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageSession.isBrowsableSession*
  name: isBrowsableSession
  nameWithType: MessageSession.isBrowsableSession
  fullName: com.microsoft.azure.servicebus.MessageSession.isBrowsableSession
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId*
  name: getRequestedSessionId
  nameWithType: MessageSession.getRequestedSessionId
  fullName: com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId
  package: com.microsoft.azure.servicebus
- uid: java.time.Instant
  spec.java:
  - uid: java.time.Instant
    name: Instant
    fullName: java.time.Instant
- uid: com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc*
  name: getLockedUntilUtc
  nameWithType: MessageSession.getLockedUntilUtc
  fullName: com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc
  package: com.microsoft.azure.servicebus
- uid: java.lang.InterruptedException
  spec.java:
  - uid: java.lang.InterruptedException
    name: InterruptedException
    fullName: java.lang.InterruptedException
- uid: com.microsoft.azure.servicebus.primitives.ServiceBusException
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
- uid: com.microsoft.azure.servicebus.MessageSession.renewSessionLock*
  name: renewSessionLock
  nameWithType: MessageSession.renewSessionLock
  fullName: com.microsoft.azure.servicebus.MessageSession.renewSessionLock
  package: com.microsoft.azure.servicebus
- uid: java.util.concurrent.CompletableFuture<java.lang.Void>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync*
  name: renewSessionLockAsync
  nameWithType: MessageSession.renewSessionLockAsync
  fullName: com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync
  package: com.microsoft.azure.servicebus
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.servicebus.MessageSession.setState*
  name: setState
  nameWithType: MessageSession.setState
  fullName: com.microsoft.azure.servicebus.MessageSession.setState
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageSession.setStateAsync*
  name: setStateAsync
  nameWithType: MessageSession.setStateAsync
  fullName: com.microsoft.azure.servicebus.MessageSession.setStateAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageSession.getState*
  name: getState
  nameWithType: MessageSession.getState
  fullName: com.microsoft.azure.servicebus.MessageSession.getState
  package: com.microsoft.azure.servicebus
- uid: java.util.concurrent.CompletableFuture<byte[]>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.MessageSession.getStateAsync*
  name: getStateAsync
  nameWithType: MessageSession.getStateAsync
  fullName: com.microsoft.azure.servicebus.MessageSession.getStateAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageSession.getSessionId*
  name: getSessionId
  nameWithType: MessageSession.getSessionId
  fullName: com.microsoft.azure.servicebus.MessageSession.getSessionId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageReceiver
  name: MessageReceiver
  nameWithType: MessageReceiver
  fullName: com.microsoft.azure.servicebus.MessageReceiver
- uid: com.microsoft.azure.servicebus.IMessageSession
  name: IMessageSession
  nameWithType: IMessageSession
  fullName: com.microsoft.azure.servicebus.IMessageSession
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int,java.time.Duration)
  name: MessageReceiver.receiveBatch(int,Duration)
  nameWithType: MessageReceiver.receiveBatch(int,Duration)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int,java.time.Duration)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.deadLetter(UUID,TransactionContext)
  nameWithType: MessageReceiver.deadLetter(UUID,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.peekAsync()
  name: MessageReceiver.peekAsync()
  nameWithType: MessageReceiver.peekAsync()
  fullName: com.microsoft.azure.servicebus.MessageReceiver.peekAsync()
- uid: com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID)
  name: MessageReceiver.complete(UUID)
  nameWithType: MessageReceiver.complete(UUID)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID)
- uid: com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID)
  name: MessageReceiver.completeAsync(UUID)
  nameWithType: MessageReceiver.completeAsync(UUID)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID)
- uid: com.microsoft.azure.servicebus.MessageReceiver.getRequestedSessionId()
  name: MessageReceiver.getRequestedSessionId()
  nameWithType: MessageReceiver.getRequestedSessionId()
  fullName: com.microsoft.azure.servicebus.MessageReceiver.getRequestedSessionId()
- uid: com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID)
  name: MessageReceiver.deferAsync(UUID)
  nameWithType: MessageReceiver.deferAsync(UUID)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection<java.lang.Long>)
  name: MessageReceiver.receiveDeferredMessageBatch(Collection<Long>)
  nameWithType: MessageReceiver.receiveDeferredMessageBatch(Collection<Long>)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection<java.lang.Long>)
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.close()
  name: ClientEntity.close()
  nameWithType: ClientEntity.close()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.close()
- uid: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(java.util.UUID)
  name: MessageReceiver.renewMessageLockAsync(UUID)
  nameWithType: MessageReceiver.renewMessageLockAsync(UUID)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(java.util.UUID)
- uid: com.microsoft.azure.servicebus.MessageReceiver.receiveAsync(java.time.Duration)
  name: MessageReceiver.receiveAsync(Duration)
  nameWithType: MessageReceiver.receiveAsync(Duration)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receiveAsync(java.time.Duration)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
  name: MessageReceiver.deadLetter(UUID,Map<String,Object>)
  nameWithType: MessageReceiver.deadLetter(UUID,Map<String,Object>)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
- uid: com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID)
  name: MessageReceiver.abandon(UUID)
  nameWithType: MessageReceiver.abandon(UUID)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID)
- uid: com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount()
  name: MessageReceiver.getPrefetchCount()
  nameWithType: MessageReceiver.getPrefetchCount()
  fullName: com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.deadLetterAsync(UUID,String,String,TransactionContext)
  nameWithType: MessageReceiver.deadLetterAsync(UUID,String,String,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  name: MessageReceiver.deadLetter(UUID,String,String,Map<String,Object>)
  nameWithType: MessageReceiver.deadLetter(UUID,String,String,Map<String,Object>)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.deadLetterAsync(UUID,String,String,Map<String,Object>,TransactionContext)
  nameWithType: MessageReceiver.deadLetterAsync(UUID,String,String,Map<String,Object>,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(com.microsoft.azure.servicebus.IMessage)
  name: MessageReceiver.renewMessageLock(IMessage)
  nameWithType: MessageReceiver.renewMessageLock(IMessage)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(com.microsoft.azure.servicebus.IMessage)
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
  name: ClientEntity.setClosed()
  nameWithType: ClientEntity.setClosed()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode()
  name: MessageReceiver.getReceiveMode()
  nameWithType: MessageReceiver.getReceiveMode()
  fullName: com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode()
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()
  name: ClientEntity.setClosing()
  nameWithType: ClientEntity.setClosing()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.deadLetter(UUID,Map<String,Object>,TransactionContext)
  nameWithType: MessageReceiver.deadLetter(UUID,Map<String,Object>,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)
  name: ClientEntity.throwIfClosed(Throwable)
  nameWithType: ClientEntity.throwIfClosed(Throwable)
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)
- uid: com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage(long)
  name: MessageReceiver.receiveDeferredMessage(long)
  nameWithType: MessageReceiver.receiveDeferredMessage(long)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage(long)
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
  name: ClientEntity.closeAsync()
  nameWithType: ClientEntity.closeAsync()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync(long)
  name: MessageReceiver.receiveDeferredMessageAsync(long)
  nameWithType: MessageReceiver.receiveDeferredMessageAsync(long)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync(long)
- uid: com.microsoft.azure.servicebus.MessageReceiver.onClose()
  name: MessageReceiver.onClose()
  nameWithType: MessageReceiver.onClose()
  fullName: com.microsoft.azure.servicebus.MessageReceiver.onClose()
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
  name: ClientEntity.getIsClosingOrClosed()
  nameWithType: ClientEntity.getIsClosingOrClosed()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
- uid: com.microsoft.azure.servicebus.MessageReceiver.peekAsync(long)
  name: MessageReceiver.peekAsync(long)
  nameWithType: MessageReceiver.peekAsync(long)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.peekAsync(long)
- uid: com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
  name: MessageReceiver.abandonAsync(UUID,Map<String,Object>)
  nameWithType: MessageReceiver.abandonAsync(UUID,Map<String,Object>)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
- uid: com.microsoft.azure.servicebus.MessageReceiver.peek(long)
  name: MessageReceiver.peek(long)
  nameWithType: MessageReceiver.peek(long)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.peek(long)
- uid: com.microsoft.azure.servicebus.MessageReceiver.receiveAsync()
  name: MessageReceiver.receiveAsync()
  nameWithType: MessageReceiver.receiveAsync()
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receiveAsync()
- uid: com.microsoft.azure.servicebus.MessageReceiver.getEntityPath()
  name: MessageReceiver.getEntityPath()
  nameWithType: MessageReceiver.getEntityPath()
  fullName: com.microsoft.azure.servicebus.MessageReceiver.getEntityPath()
- uid: com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int)
  name: MessageReceiver.receiveBatchAsync(int)
  nameWithType: MessageReceiver.receiveBatchAsync(int)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.deadLetter(UUID,String,String,Map<String,Object>,TransactionContext)
  nameWithType: MessageReceiver.deadLetter(UUID,String,String,Map<String,Object>,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount(int)
  name: MessageReceiver.setPrefetchCount(int)
  nameWithType: MessageReceiver.setPrefetchCount(int)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount(int)
- uid: com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.defer(UUID,Map<String,Object>,TransactionContext)
  nameWithType: MessageReceiver.defer(UUID,Map<String,Object>,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)
  name: MessageReceiver.renewMessageLockBatch(Collection<? extends IMessage>)
  nameWithType: MessageReceiver.renewMessageLockBatch(Collection<? extends IMessage>)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
  name: ClientEntity.finalize()
  nameWithType: ClientEntity.finalize()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
- uid: com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID)
  name: MessageReceiver.defer(UUID)
  nameWithType: MessageReceiver.defer(UUID)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID)
- uid: com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.abandonAsync(UUID,TransactionContext)
  nameWithType: MessageReceiver.abandonAsync(UUID,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
  name: MessageReceiver.abandon(UUID,Map<String,Object>)
  nameWithType: MessageReceiver.abandon(UUID,Map<String,Object>)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
- uid: com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.completeAsync(UUID,TransactionContext)
  nameWithType: MessageReceiver.completeAsync(UUID,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.defer(UUID,TransactionContext)
  nameWithType: MessageReceiver.defer(UUID,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.receive()
  name: MessageReceiver.receive()
  nameWithType: MessageReceiver.receive()
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receive()
- uid: com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
  name: MessageReceiver.defer(UUID,Map<String,Object>)
  nameWithType: MessageReceiver.defer(UUID,Map<String,Object>)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
- uid: com.microsoft.azure.servicebus.MessageReceiver.peekBatch(int)
  name: MessageReceiver.peekBatch(int)
  nameWithType: MessageReceiver.peekBatch(int)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.peekBatch(int)
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
  name: ClientEntity.getIsClosed()
  nameWithType: ClientEntity.getIsClosed()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
- uid: com.microsoft.azure.servicebus.MessageReceiver.peek()
  name: MessageReceiver.peek()
  nameWithType: MessageReceiver.peek()
  fullName: com.microsoft.azure.servicebus.MessageReceiver.peek()
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.deadLetter(UUID,String,String,TransactionContext)
  nameWithType: MessageReceiver.deadLetter(UUID,String,String,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)
  name: MessageReceiver.receiveDeferredMessageBatchAsync(Collection<Long>)
  nameWithType: MessageReceiver.receiveDeferredMessageBatchAsync(Collection<Long>)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)
- uid: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)
  name: MessageReceiver.renewMessageLockAsync(IMessage)
  nameWithType: MessageReceiver.renewMessageLockAsync(IMessage)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.deadLetterAsync(UUID,Map<String,Object>,TransactionContext)
  nameWithType: MessageReceiver.deadLetterAsync(UUID,Map<String,Object>,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID)
  name: MessageReceiver.abandonAsync(UUID)
  nameWithType: MessageReceiver.abandonAsync(UUID)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.deadLetterAsync(UUID,TransactionContext)
  nameWithType: MessageReceiver.deadLetterAsync(UUID,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
  name: MessageReceiver.deadLetterAsync(UUID,Map<String,Object>)
  nameWithType: MessageReceiver.deadLetterAsync(UUID,Map<String,Object>)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String)
  name: MessageReceiver.deadLetter(UUID,String,String)
  nameWithType: MessageReceiver.deadLetter(UUID,String,String)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String)
- uid: com.microsoft.azure.servicebus.MessageReceiver.peekBatch(long,int)
  name: MessageReceiver.peekBatch(long,int)
  nameWithType: MessageReceiver.peekBatch(long,int)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.peekBatch(long,int)
- uid: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(java.util.UUID)
  name: MessageReceiver.renewMessageLock(UUID)
  nameWithType: MessageReceiver.renewMessageLock(UUID)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(java.util.UUID)
- uid: com.microsoft.azure.servicebus.MessageReceiver.isSessionReceiver()
  name: MessageReceiver.isSessionReceiver()
  nameWithType: MessageReceiver.isSessionReceiver()
  fullName: com.microsoft.azure.servicebus.MessageReceiver.isSessionReceiver()
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID)
  name: MessageReceiver.deadLetterAsync(UUID)
  nameWithType: MessageReceiver.deadLetterAsync(UUID)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID)
- uid: com.microsoft.azure.servicebus.MessageReceiver.receive(java.time.Duration)
  name: MessageReceiver.receive(Duration)
  nameWithType: MessageReceiver.receive(Duration)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receive(java.time.Duration)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
  name: MessageReceiver.deferAsync(UUID,Map<String,Object>)
  nameWithType: MessageReceiver.deferAsync(UUID,Map<String,Object>)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)
- uid: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)
  name: MessageReceiver.renewMessageLockBatchAsync(Collection<? extends IMessage>)
  nameWithType: MessageReceiver.renewMessageLockBatchAsync(Collection<? extends IMessage>)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)
- uid: com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver()
  name: MessageReceiver.getInternalReceiver()
  nameWithType: MessageReceiver.getInternalReceiver()
  fullName: com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver()
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  name: MessageReceiver.deadLetterAsync(UUID,String,String,Map<String,Object>)
  nameWithType: MessageReceiver.deadLetterAsync(UUID,String,String,Map<String,Object>)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
- uid: com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(int)
  name: MessageReceiver.peekBatchAsync(int)
  nameWithType: MessageReceiver.peekBatchAsync(int)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(int)
- uid: com.microsoft.azure.servicebus.MessageReceiver.isBrowsableSession()
  name: MessageReceiver.isBrowsableSession()
  nameWithType: MessageReceiver.isBrowsableSession()
  fullName: com.microsoft.azure.servicebus.MessageReceiver.isBrowsableSession()
- uid: com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.deferAsync(UUID,TransactionContext)
  nameWithType: MessageReceiver.deferAsync(UUID,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int)
  name: MessageReceiver.receiveBatch(int)
  nameWithType: MessageReceiver.receiveBatch(int)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.deferAsync(UUID,Map<String,Object>,TransactionContext)
  nameWithType: MessageReceiver.deferAsync(UUID,Map<String,Object>,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID)
  name: MessageReceiver.deadLetter(UUID)
  nameWithType: MessageReceiver.deadLetter(UUID)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)
  name: MessageReceiver.deadLetterAsync(UUID,String,String)
  nameWithType: MessageReceiver.deadLetterAsync(UUID,String,String)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
  name: ClientEntity.getClientId()
  nameWithType: ClientEntity.getClientId()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
- uid: com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.abandonAsync(UUID,Map<String,Object>,TransactionContext)
  nameWithType: MessageReceiver.abandonAsync(UUID,Map<String,Object>,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(long,int)
  name: MessageReceiver.peekBatchAsync(long,int)
  nameWithType: MessageReceiver.peekBatchAsync(long,int)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(long,int)
- uid: com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.complete(UUID,TransactionContext)
  nameWithType: MessageReceiver.complete(UUID,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.abandon(UUID,TransactionContext)
  nameWithType: MessageReceiver.abandon(UUID,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  name: MessageReceiver.abandon(UUID,Map<String,Object>,TransactionContext)
  nameWithType: MessageReceiver.abandon(UUID,Map<String,Object>,TransactionContext)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int,java.time.Duration)
  name: MessageReceiver.receiveBatchAsync(int,Duration)
  nameWithType: MessageReceiver.receiveBatchAsync(int,Duration)
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int,java.time.Duration)
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.util.concurrent.CompletableFuture
  name: CompletableFuture
  nameWithType: CompletableFuture
  fullName: java.util.concurrent.CompletableFuture
- uid: com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection
  name: MessageReceiver.receiveDeferredMessageBatch(Collection
  nameWithType: MessageReceiver.receiveDeferredMessageBatch(Collection
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection
- uid: java.lang.Long>)
  name: Long>)
  nameWithType: Long>)
  fullName: java.lang.Long>)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map
  name: MessageReceiver.deadLetter(UUID,Map
  nameWithType: MessageReceiver.deadLetter(UUID,Map
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map
- uid: java.lang.String,java.lang.Object>)
  name: String,Object>)
  nameWithType: String,Object>)
  fullName: java.lang.String,java.lang.Object>)
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map
  name: MessageReceiver.deadLetter(UUID,String,String,Map
  nameWithType: MessageReceiver.deadLetter(UUID,String,String,Map
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map
  name: MessageReceiver.deadLetterAsync(UUID,String,String,Map
  nameWithType: MessageReceiver.deadLetterAsync(UUID,String,String,Map
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map
- uid: java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  name: String,Object>,TransactionContext)
  nameWithType: String,Object>,TransactionContext)
  fullName: java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
- uid: com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map
  name: MessageReceiver.abandonAsync(UUID,Map
  nameWithType: MessageReceiver.abandonAsync(UUID,Map
  fullName: com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map
- uid: com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map
  name: MessageReceiver.defer(UUID,Map
  nameWithType: MessageReceiver.defer(UUID,Map
  fullName: com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map
- uid: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection
  name: MessageReceiver.renewMessageLockBatch(Collection
  nameWithType: MessageReceiver.renewMessageLockBatch(Collection
  fullName: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection
- uid: '? extends com.microsoft.azure.servicebus.IMessage>)'
  name: '? extends IMessage>)'
  nameWithType: '? extends IMessage>)'
  fullName: '? extends com.microsoft.azure.servicebus.IMessage>)'
- uid: com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map
  name: MessageReceiver.abandon(UUID,Map
  nameWithType: MessageReceiver.abandon(UUID,Map
  fullName: com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map
- uid: com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection
  name: MessageReceiver.receiveDeferredMessageBatchAsync(Collection
  nameWithType: MessageReceiver.receiveDeferredMessageBatchAsync(Collection
  fullName: com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection
- uid: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map
  name: MessageReceiver.deadLetterAsync(UUID,Map
  nameWithType: MessageReceiver.deadLetterAsync(UUID,Map
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map
- uid: com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map
  name: MessageReceiver.deferAsync(UUID,Map
  nameWithType: MessageReceiver.deferAsync(UUID,Map
  fullName: com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map
- uid: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection
  name: MessageReceiver.renewMessageLockBatchAsync(Collection
  nameWithType: MessageReceiver.renewMessageLockBatchAsync(Collection
  fullName: com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection
