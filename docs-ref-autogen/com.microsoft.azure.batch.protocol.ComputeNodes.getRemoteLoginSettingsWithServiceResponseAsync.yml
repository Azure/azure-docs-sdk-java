### YamlMime:JavaMember
nameWithType: ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  name: getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult&text=ComputeNodeGetRemoteLoginSettingsResult" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders&text=ComputeNodeGetRemoteLoginSettingsHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property. For pools created with a cloud service configuration, see the GetRemoteDesktop API.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  name: getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: computeNodeGetRemoteLoginSettingsOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions&text=ComputeNodeGetRemoteLoginSettingsOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult&text=ComputeNodeGetRemoteLoginSettingsResult" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders&text=ComputeNodeGetRemoteLoginSettingsHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property. For pools created with a cloud service configuration, see the GetRemoteDesktop API.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
name: getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
package: com.microsoft.azure.batch.protocol
metadata: {}
