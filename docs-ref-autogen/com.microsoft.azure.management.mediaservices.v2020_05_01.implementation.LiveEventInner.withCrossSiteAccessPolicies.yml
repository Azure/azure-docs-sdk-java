### YamlMime:JavaMember
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.LiveEventInner.withCrossSiteAccessPolicies*"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.LiveEventInner.withCrossSiteAccessPolicies"
name: "withCrossSiteAccessPolicies"
nameWithType: "LiveEventInner.withCrossSiteAccessPolicies"
members:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.LiveEventInner.withCrossSiteAccessPolicies(com.microsoft.azure.management.mediaservices.v2020_05_01.CrossSiteAccessPolicies)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.LiveEventInner.withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies)"
  name: "withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies)"
  nameWithType: "LiveEventInner.withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies)"
  summary: "Set live event cross site access policies."
  parameters:
  - description: "the crossSiteAccessPolicies value to set"
    name: "crossSiteAccessPolicies"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.CrossSiteAccessPolicies?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.CrossSiteAccessPolicies&text=CrossSiteAccessPolicies\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LiveEventInner withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies)"
  returns:
    description: "the LiveEventInner object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.LiveEventInner?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.LiveEventInner&text=LiveEventInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01.implementation"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
