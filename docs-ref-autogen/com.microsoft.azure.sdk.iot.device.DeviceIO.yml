### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO
  id: DeviceIO
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device
  children:
  - com.microsoft.azure.sdk.iot.device.DeviceIO.close()
  - com.microsoft.azure.sdk.iot.device.DeviceIO.execute(com.microsoft.azure.sdk.iot.device.transport.IotHubConnectionStatus,com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason,java.lang.Throwable,java.lang.Object)
  - com.microsoft.azure.sdk.iot.device.DeviceIO.getProtocol()
  - com.microsoft.azure.sdk.iot.device.DeviceIO.getReceivePeriodInMilliseconds()
  - com.microsoft.azure.sdk.iot.device.DeviceIO.getSendPeriodInMilliseconds()
  - com.microsoft.azure.sdk.iot.device.DeviceIO.isEmpty()
  - com.microsoft.azure.sdk.iot.device.DeviceIO.isOpen()
  - com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexClose()
  - com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStateCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback,java.lang.Object)
  - com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStatusChangeCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback,java.lang.Object)
  - com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync(com.microsoft.azure.sdk.iot.device.Message,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object,java.lang.String)
  - com.microsoft.azure.sdk.iot.device.DeviceIO.setReceivePeriodInMilliseconds(long)
  - com.microsoft.azure.sdk.iot.device.DeviceIO.setSendPeriodInMilliseconds(long)
  langs:
  - java
  name: DeviceIO
  nameWithType: DeviceIO
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO
  type: Class
  package: com.microsoft.azure.sdk.iot.device
  summary: The task scheduler for sending and receiving messages for the Device Client
  syntax:
    content: public final class DeviceIO implements IotHubConnectionStatusChangeCallback
  inheritance:
  - java.lang.Object
  implements:
  - com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.DeviceIO(com.microsoft.azure.sdk.iot.device.DeviceClientConfig,long,long)
  id: DeviceIO(com.microsoft.azure.sdk.iot.device.DeviceClientConfig,long,long)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: DeviceIO(DeviceClientConfig config, long sendPeriodInMilliseconds, long receivePeriodInMilliseconds)
  nameWithType: DeviceIO.DeviceIO(DeviceClientConfig config, long sendPeriodInMilliseconds, long receivePeriodInMilliseconds)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.DeviceIO(DeviceClientConfig config, long sendPeriodInMilliseconds, long receivePeriodInMilliseconds)
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.DeviceIO*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device
  summary: Constructor that takes a connection string as an argument.
  syntax:
    content: " DeviceIO(DeviceClientConfig config, long sendPeriodInMilliseconds, long receivePeriodInMilliseconds)"
    parameters:
    - id: config
      type: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
      description: the connection configuration.
    - id: sendPeriodInMilliseconds
      type: long
      description: the period of time that iot hub will try to send messages in milliseconds.
    - id: receivePeriodInMilliseconds
      type: long
      description: the period of time that iot hub will try to receive messages in milliseconds.
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.close()
  id: close()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: close()
  nameWithType: DeviceIO.close()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.close()
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.close*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Completes all current outstanding requests and closes the IoT Hub client. Must be called to terminate the background thread that is sending data to IoT Hub. After `close()` is called, the IoT Hub client is no longer usable. If the client is already closed, the function shall do nothing.
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
    description: if the connection to an IoT Hub cannot be closed.
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.execute(com.microsoft.azure.sdk.iot.device.transport.IotHubConnectionStatus,com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason,java.lang.Throwable,java.lang.Object)
  id: execute(com.microsoft.azure.sdk.iot.device.transport.IotHubConnectionStatus,com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason,java.lang.Throwable,java.lang.Object)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: execute(IotHubConnectionStatus status, IotHubConnectionStatusChangeReason statusChangeReason, Throwable throwable, Object callbackContext)
  nameWithType: DeviceIO.execute(IotHubConnectionStatus status, IotHubConnectionStatusChangeReason statusChangeReason, Throwable throwable, Object callbackContext)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.execute(IotHubConnectionStatus status, IotHubConnectionStatusChangeReason statusChangeReason, Throwable throwable, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.execute*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Callback that is executed when the connection status of this sdk to the iot hub changes. Includes details for more context on why that change occurred.
  syntax:
    content: public void execute(IotHubConnectionStatus status, IotHubConnectionStatusChangeReason statusChangeReason, Throwable throwable, Object callbackContext)
    parameters:
    - id: status
      type: com.microsoft.azure.sdk.iot.device.transport.IotHubConnectionStatus
    - id: statusChangeReason
      type: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason
    - id: throwable
      type: java.lang.Throwable
    - id: callbackContext
      type: java.lang.Object
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.getProtocol()
  id: getProtocol()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: getProtocol()
  nameWithType: DeviceIO.getProtocol()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.getProtocol()
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.getProtocol*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Getter for the transport protocol.
  syntax:
    content: public IotHubClientProtocol getProtocol()
    return:
      type: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
      description: a protocol for transport.
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.getReceivePeriodInMilliseconds()
  id: getReceivePeriodInMilliseconds()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: getReceivePeriodInMilliseconds()
  nameWithType: DeviceIO.getReceivePeriodInMilliseconds()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.getReceivePeriodInMilliseconds()
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.getReceivePeriodInMilliseconds*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Getter for the receive period in milliseconds.
  syntax:
    content: public long getReceivePeriodInMilliseconds()
    return:
      type: long
      description: a long with the number of milliseconds between receives.
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.getSendPeriodInMilliseconds()
  id: getSendPeriodInMilliseconds()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: getSendPeriodInMilliseconds()
  nameWithType: DeviceIO.getSendPeriodInMilliseconds()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.getSendPeriodInMilliseconds()
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.getSendPeriodInMilliseconds*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Getter for the send period in milliseconds.
  syntax:
    content: public long getSendPeriodInMilliseconds()
    return:
      type: long
      description: a long with the number of milliseconds between sends.
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.isEmpty()
  id: isEmpty()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: isEmpty()
  nameWithType: DeviceIO.isEmpty()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.isEmpty()
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.isEmpty*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Getter for the transport empty queue.
  syntax:
    content: public boolean isEmpty()
    return:
      type: boolean
      description: a boolean true if the transport queue is empty, or false if there is messages to send.
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.isOpen()
  id: isOpen()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: isOpen()
  nameWithType: DeviceIO.isOpen()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.isOpen()
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.isOpen*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Getter for the connection state.
  syntax:
    content: public boolean isOpen()
    return:
      type: boolean
      description: a boolean true if the connection is open or reconnecting, and false otherwise.
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexClose()
  id: multiplexClose()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: multiplexClose()
  nameWithType: DeviceIO.multiplexClose()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexClose()
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexClose*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Completes all current outstanding requests and closes the IoT Hub client. Must be called to terminate the background thread that is sending data to IoT Hub. After `close()` is called, the IoT Hub client is no longer usable. If the client is already closed, the function shall do nothing.
  syntax:
    content: public void multiplexClose()
  exceptions:
  - type: java.io.IOException
    description: if the connection to an IoT Hub cannot be closed.
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStateCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback,java.lang.Object)
  id: registerConnectionStateCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback,java.lang.Object)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
  nameWithType: DeviceIO.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStateCallback*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Registers a callback with the configured transport to be executed whenever the connection to the device is lost or established.
  syntax:
    content: public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
    parameters:
    - id: callback
      type: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
      description: the callback to be called.
    - id: callbackContext
      type: java.lang.Object
      description: >-
        a context to be passed to the callback. Can be
         <code>null</code> if no callback is provided.
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStatusChangeCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback,java.lang.Object)
  id: registerConnectionStatusChangeCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback,java.lang.Object)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback statusChangeCallback, Object callbackContext)
  nameWithType: DeviceIO.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback statusChangeCallback, Object callbackContext)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback statusChangeCallback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStatusChangeCallback*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public void registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback statusChangeCallback, Object callbackContext)
    parameters:
    - id: statusChangeCallback
      type: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback
    - id: callbackContext
      type: java.lang.Object
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync(com.microsoft.azure.sdk.iot.device.Message,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object,java.lang.String)
  id: sendEventAsync(com.microsoft.azure.sdk.iot.device.Message,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, String deviceId)
  nameWithType: DeviceIO.sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, String deviceId)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, String deviceId)
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Asynchronously sends an event message to the IoT Hub.
  syntax:
    content: public synchronized void sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, String deviceId)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device.Message
      description: the message to be sent.
    - id: callback
      type: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
      description: >-
        the callback to be invoked when a response is received.
         Can be <code>null</code>.
    - id: callbackContext
      type: java.lang.Object
      description: >-
        a context to be passed to the callback. Can be
         <code>null</code> if no callback is provided.
    - id: deviceId
      type: java.lang.String
      description: the id of the device sending the message
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.setReceivePeriodInMilliseconds(long)
  id: setReceivePeriodInMilliseconds(long)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: setReceivePeriodInMilliseconds(long newIntervalInMilliseconds)
  nameWithType: DeviceIO.setReceivePeriodInMilliseconds(long newIntervalInMilliseconds)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.setReceivePeriodInMilliseconds(long newIntervalInMilliseconds)
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.setReceivePeriodInMilliseconds*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Setter for the receive period in milliseconds.
  syntax:
    content: public void setReceivePeriodInMilliseconds(long newIntervalInMilliseconds)
    parameters:
    - id: newIntervalInMilliseconds
      type: long
      description: is the new interval in milliseconds.
  exceptions:
  - type: java.io.IOException
    description: if the task schedule exist but there is no receive task function to call.
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.setSendPeriodInMilliseconds(long)
  id: setSendPeriodInMilliseconds(long)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceIO
  langs:
  - java
  name: setSendPeriodInMilliseconds(long newIntervalInMilliseconds)
  nameWithType: DeviceIO.setSendPeriodInMilliseconds(long newIntervalInMilliseconds)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.setSendPeriodInMilliseconds(long newIntervalInMilliseconds)
  overload: com.microsoft.azure.sdk.iot.device.DeviceIO.setSendPeriodInMilliseconds*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Setter for the send period in milliseconds.
  syntax:
    content: public void setSendPeriodInMilliseconds(long newIntervalInMilliseconds)
    parameters:
    - id: newIntervalInMilliseconds
      type: long
      description: is the new interval in milliseconds.
  exceptions:
  - type: java.io.IOException
    description: if the task schedule exist but there is no send task function to call.
references:
- uid: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
  name: DeviceClientConfig
  nameWithType: DeviceClientConfig
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.DeviceIO*
  name: DeviceIO
  nameWithType: DeviceIO.DeviceIO
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.DeviceIO
  package: com.microsoft.azure.sdk.iot.device
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.close*
  name: close
  nameWithType: DeviceIO.close
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.close
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexClose*
  name: multiplexClose
  nameWithType: DeviceIO.multiplexClose
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexClose
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.Message
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.device.Message
- uid: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
  name: IotHubEventCallback
  nameWithType: IotHubEventCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync*
  name: sendEventAsync
  nameWithType: DeviceIO.sendEventAsync
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.getReceivePeriodInMilliseconds*
  name: getReceivePeriodInMilliseconds
  nameWithType: DeviceIO.getReceivePeriodInMilliseconds
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.getReceivePeriodInMilliseconds
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.setReceivePeriodInMilliseconds*
  name: setReceivePeriodInMilliseconds
  nameWithType: DeviceIO.setReceivePeriodInMilliseconds
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.setReceivePeriodInMilliseconds
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.getSendPeriodInMilliseconds*
  name: getSendPeriodInMilliseconds
  nameWithType: DeviceIO.getSendPeriodInMilliseconds
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.getSendPeriodInMilliseconds
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.setSendPeriodInMilliseconds*
  name: setSendPeriodInMilliseconds
  nameWithType: DeviceIO.setSendPeriodInMilliseconds
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.setSendPeriodInMilliseconds
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
  name: IotHubClientProtocol
  nameWithType: IotHubClientProtocol
  fullName: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.getProtocol*
  name: getProtocol
  nameWithType: DeviceIO.getProtocol
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.getProtocol
  package: com.microsoft.azure.sdk.iot.device
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.isOpen*
  name: isOpen
  nameWithType: DeviceIO.isOpen
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.isOpen
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.isEmpty*
  name: isEmpty
  nameWithType: DeviceIO.isEmpty
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.isEmpty
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
  name: IotHubConnectionStateCallback
  nameWithType: IotHubConnectionStateCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStateCallback*
  name: registerConnectionStateCallback
  nameWithType: DeviceIO.registerConnectionStateCallback
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStateCallback
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback
  name: IotHubConnectionStatusChangeCallback
  nameWithType: IotHubConnectionStatusChangeCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStatusChangeCallback*
  name: registerConnectionStatusChangeCallback
  nameWithType: DeviceIO.registerConnectionStatusChangeCallback
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStatusChangeCallback
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubConnectionStatus
  name: IotHubConnectionStatus
  nameWithType: IotHubConnectionStatus
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubConnectionStatus
- uid: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason
  name: IotHubConnectionStatusChangeReason
  nameWithType: IotHubConnectionStatusChangeReason
  fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.microsoft.azure.sdk.iot.device.DeviceIO.execute*
  name: execute
  nameWithType: DeviceIO.execute
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.execute
  package: com.microsoft.azure.sdk.iot.device
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
