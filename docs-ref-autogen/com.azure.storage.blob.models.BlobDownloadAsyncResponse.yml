### YamlMime:JavaType
uid: "com.azure.storage.blob.models.BlobDownloadAsyncResponse"
fullName: "com.azure.storage.blob.models.BlobDownloadAsyncResponse"
name: "BlobDownloadAsyncResponse"
nameWithType: "BlobDownloadAsyncResponse"
summary: "This class contains the response information returned from the server when downloading a blob."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.http.rest.ResponseBase\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.http.rest.ResponseBase.getDeserializedHeaders()"
- "com.azure.core.http.rest.ResponseBase.getHeaders()"
- "com.azure.core.http.rest.ResponseBase.getRequest()"
- "com.azure.core.http.rest.ResponseBase.getStatusCode()"
- "com.azure.core.http.rest.ResponseBase.getValue()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BlobDownloadAsyncResponse extends ResponseBase<BlobDownloadHeaders,Flux<ByteBuffer>>"
constructors:
- "com.azure.storage.blob.models.BlobDownloadAsyncResponse.BlobDownloadAsyncResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders,reactor.core.publisher.Flux<java.nio.ByteBuffer>,com.azure.storage.blob.models.BlobDownloadHeaders)"
type: "class"
metadata: {}
package: "com.azure.storage.blob.models"
artifact: com.azure:azure-storage-blob:12.8.0
