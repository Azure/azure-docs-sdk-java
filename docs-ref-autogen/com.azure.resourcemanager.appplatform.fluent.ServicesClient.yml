### YamlMime:JavaType
uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient"
fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient"
name: "ServicesClient"
nameWithType: "ServicesClient"
summary: "An instance of this class provides access to all the operations defined in Services<wbr>Client."
syntax: "public interface ServicesClient extends InnerSupportsGet<ServiceResourceInner>, InnerSupportsListing<ServiceResourceInner>, InnerSupportsDelete<Void>"
methods:
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  name: "beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  nameWithType: "ServicesClient.beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  summary: "Create a new Service or update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the create or update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<ServiceResourceInner>,ServiceResourceInner> beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  desc: "Create a new Service or update an exiting Service."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of service resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  name: "beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  nameWithType: "ServicesClient.beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  summary: "Create a new Service or update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the create or update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<ServiceResourceInner>,ServiceResourceInner> beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  desc: "Create a new Service or update an exiting Service."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of service resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginCreateOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  name: "beginCreateOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  nameWithType: "ServicesClient.beginCreateOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  summary: "Create a new Service or update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the create or update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<ServiceResourceInner>,ServiceResourceInner> beginCreateOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  desc: "Create a new Service or update an exiting Service."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of service resource."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginDelete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginDelete(String resourceGroupName, String serviceName)"
  name: "beginDelete(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.beginDelete(String resourceGroupName, String serviceName)"
  summary: "Operation to delete a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String serviceName)"
  desc: "Operation to delete a Service."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginDelete(String resourceGroupName, String serviceName, Context context)"
  name: "beginDelete(String resourceGroupName, String serviceName, Context context)"
  nameWithType: "ServicesClient.beginDelete(String resourceGroupName, String serviceName, Context context)"
  summary: "Operation to delete a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String serviceName, Context context)"
  desc: "Operation to delete a Service."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginDeleteAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginDeleteAsync(String resourceGroupName, String serviceName)"
  name: "beginDeleteAsync(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.beginDeleteAsync(String resourceGroupName, String serviceName)"
  summary: "Operation to delete a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String serviceName)"
  desc: "Operation to delete a Service."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  name: "beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  nameWithType: "ServicesClient.beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  summary: "Operation to update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<ServiceResourceInner>,ServiceResourceInner> beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  desc: "Operation to update an exiting Service."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of service resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  name: "beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  nameWithType: "ServicesClient.beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  summary: "Operation to update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<ServiceResourceInner>,ServiceResourceInner> beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  desc: "Operation to update an exiting Service."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of service resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.beginUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  name: "beginUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  nameWithType: "ServicesClient.beginUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  summary: "Operation to update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<ServiceResourceInner>,ServiceResourceInner> beginUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  desc: "Operation to update an exiting Service."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of service resource."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.checkNameAvailability(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.checkNameAvailability(String location, NameAvailabilityParameters availabilityParameters)"
  name: "checkNameAvailability(String location, NameAvailabilityParameters availabilityParameters)"
  nameWithType: "ServicesClient.checkNameAvailability(String location, NameAvailabilityParameters availabilityParameters)"
  summary: "Checks that the resource name is valid and is not already in use."
  modifiers:
  - "abstract"
  parameters:
  - description: "the region."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters supplied to the operation."
    name: "availabilityParameters"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters?alt=com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters&text=NameAvailabilityParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract NameAvailability checkNameAvailability(String location, NameAvailabilityParameters availabilityParameters)"
  desc: "Checks that the resource name is valid and is not already in use."
  returns:
    description: "name availability result payload."
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.NameAvailability?alt=com.azure.resourcemanager.appplatform.models.NameAvailability&text=NameAvailability\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.checkNameAvailabilityAsync(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.checkNameAvailabilityAsync(String location, NameAvailabilityParameters availabilityParameters)"
  name: "checkNameAvailabilityAsync(String location, NameAvailabilityParameters availabilityParameters)"
  nameWithType: "ServicesClient.checkNameAvailabilityAsync(String location, NameAvailabilityParameters availabilityParameters)"
  summary: "Checks that the resource name is valid and is not already in use."
  modifiers:
  - "abstract"
  parameters:
  - description: "the region."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters supplied to the operation."
    name: "availabilityParameters"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters?alt=com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters&text=NameAvailabilityParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<NameAvailability> checkNameAvailabilityAsync(String location, NameAvailabilityParameters availabilityParameters)"
  desc: "Checks that the resource name is valid and is not already in use."
  returns:
    description: "name availability result payload on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.NameAvailability?alt=com.azure.resourcemanager.appplatform.models.NameAvailability&text=NameAvailability\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.checkNameAvailabilityWithResponse(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.checkNameAvailabilityWithResponse(String location, NameAvailabilityParameters availabilityParameters, Context context)"
  name: "checkNameAvailabilityWithResponse(String location, NameAvailabilityParameters availabilityParameters, Context context)"
  nameWithType: "ServicesClient.checkNameAvailabilityWithResponse(String location, NameAvailabilityParameters availabilityParameters, Context context)"
  summary: "Checks that the resource name is valid and is not already in use."
  modifiers:
  - "abstract"
  parameters:
  - description: "the region."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters supplied to the operation."
    name: "availabilityParameters"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters?alt=com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters&text=NameAvailabilityParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<NameAvailability> checkNameAvailabilityWithResponse(String location, NameAvailabilityParameters availabilityParameters, Context context)"
  desc: "Checks that the resource name is valid and is not already in use."
  returns:
    description: "name availability result payload along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.NameAvailability?alt=com.azure.resourcemanager.appplatform.models.NameAvailability&text=NameAvailability\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.checkNameAvailabilityWithResponseAsync(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.checkNameAvailabilityWithResponseAsync(String location, NameAvailabilityParameters availabilityParameters)"
  name: "checkNameAvailabilityWithResponseAsync(String location, NameAvailabilityParameters availabilityParameters)"
  nameWithType: "ServicesClient.checkNameAvailabilityWithResponseAsync(String location, NameAvailabilityParameters availabilityParameters)"
  summary: "Checks that the resource name is valid and is not already in use."
  modifiers:
  - "abstract"
  parameters:
  - description: "the region."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters supplied to the operation."
    name: "availabilityParameters"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters?alt=com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters&text=NameAvailabilityParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<NameAvailability>> checkNameAvailabilityWithResponseAsync(String location, NameAvailabilityParameters availabilityParameters)"
  desc: "Checks that the resource name is valid and is not already in use."
  returns:
    description: "name availability result payload along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.NameAvailability?alt=com.azure.resourcemanager.appplatform.models.NameAvailability&text=NameAvailability\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  name: "createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  nameWithType: "ServicesClient.createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  summary: "Create a new Service or update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the create or update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ServiceResourceInner createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  desc: "Create a new Service or update an exiting Service."
  returns:
    description: "service resource."
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  name: "createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  nameWithType: "ServicesClient.createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  summary: "Create a new Service or update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the create or update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ServiceResourceInner createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  desc: "Create a new Service or update an exiting Service."
  returns:
    description: "service resource."
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.createOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  name: "createOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  nameWithType: "ServicesClient.createOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  summary: "Create a new Service or update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the create or update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ServiceResourceInner> createOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  desc: "Create a new Service or update an exiting Service."
  returns:
    description: "service resource on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.createOrUpdateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  name: "createOrUpdateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  nameWithType: "ServicesClient.createOrUpdateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  summary: "Create a new Service or update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the create or update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  desc: "Create a new Service or update an exiting Service."
  returns:
    description: "service resource along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.delete(String resourceGroupName, String serviceName)"
  name: "delete(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.delete(String resourceGroupName, String serviceName)"
  summary: "Operation to delete a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void delete(String resourceGroupName, String serviceName)"
  desc: "Operation to delete a Service."
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.delete(String resourceGroupName, String serviceName, Context context)"
  name: "delete(String resourceGroupName, String serviceName, Context context)"
  nameWithType: "ServicesClient.delete(String resourceGroupName, String serviceName, Context context)"
  summary: "Operation to delete a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String serviceName, Context context)"
  desc: "Operation to delete a Service."
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.deleteAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.deleteAsync(String resourceGroupName, String serviceName)"
  name: "deleteAsync(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.deleteAsync(String resourceGroupName, String serviceName)"
  summary: "Operation to delete a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> deleteAsync(String resourceGroupName, String serviceName)"
  desc: "Operation to delete a Service."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.deleteWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.deleteWithResponseAsync(String resourceGroupName, String serviceName)"
  name: "deleteWithResponseAsync(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.deleteWithResponseAsync(String resourceGroupName, String serviceName)"
  summary: "Operation to delete a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String serviceName)"
  desc: "Operation to delete a Service."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.disableTestEndpoint(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.disableTestEndpoint(String resourceGroupName, String serviceName)"
  name: "disableTestEndpoint(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.disableTestEndpoint(String resourceGroupName, String serviceName)"
  summary: "Disable test endpoint functionality for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void disableTestEndpoint(String resourceGroupName, String serviceName)"
  desc: "Disable test endpoint functionality for a Service."
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.disableTestEndpointAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.disableTestEndpointAsync(String resourceGroupName, String serviceName)"
  name: "disableTestEndpointAsync(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.disableTestEndpointAsync(String resourceGroupName, String serviceName)"
  summary: "Disable test endpoint functionality for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> disableTestEndpointAsync(String resourceGroupName, String serviceName)"
  desc: "Disable test endpoint functionality for a Service."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.disableTestEndpointWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.disableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)"
  name: "disableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)"
  nameWithType: "ServicesClient.disableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)"
  summary: "Disable test endpoint functionality for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> disableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)"
  desc: "Disable test endpoint functionality for a Service."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.disableTestEndpointWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.disableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)"
  name: "disableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.disableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)"
  summary: "Disable test endpoint functionality for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Void>> disableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)"
  desc: "Disable test endpoint functionality for a Service."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.enableTestEndpoint(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.enableTestEndpoint(String resourceGroupName, String serviceName)"
  name: "enableTestEndpoint(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.enableTestEndpoint(String resourceGroupName, String serviceName)"
  summary: "Enable test endpoint functionality for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract TestKeys enableTestEndpoint(String resourceGroupName, String serviceName)"
  desc: "Enable test endpoint functionality for a Service."
  returns:
    description: "test keys payload."
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.enableTestEndpointAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.enableTestEndpointAsync(String resourceGroupName, String serviceName)"
  name: "enableTestEndpointAsync(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.enableTestEndpointAsync(String resourceGroupName, String serviceName)"
  summary: "Enable test endpoint functionality for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<TestKeys> enableTestEndpointAsync(String resourceGroupName, String serviceName)"
  desc: "Enable test endpoint functionality for a Service."
  returns:
    description: "test keys payload on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.enableTestEndpointWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.enableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)"
  name: "enableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)"
  nameWithType: "ServicesClient.enableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)"
  summary: "Enable test endpoint functionality for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<TestKeys> enableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)"
  desc: "Enable test endpoint functionality for a Service."
  returns:
    description: "test keys payload along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.enableTestEndpointWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.enableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)"
  name: "enableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.enableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)"
  summary: "Enable test endpoint functionality for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<TestKeys>> enableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)"
  desc: "Enable test endpoint functionality for a Service."
  returns:
    description: "test keys payload along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.getByResourceGroup(String resourceGroupName, String serviceName)"
  name: "getByResourceGroup(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.getByResourceGroup(String resourceGroupName, String serviceName)"
  summary: "Get a Service and its properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract ServiceResourceInner getByResourceGroup(String resourceGroupName, String serviceName)"
  desc: "Get a Service and its properties."
  returns:
    description: "a Service and its properties."
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.getByResourceGroupAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.getByResourceGroupAsync(String resourceGroupName, String serviceName)"
  name: "getByResourceGroupAsync(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.getByResourceGroupAsync(String resourceGroupName, String serviceName)"
  summary: "Get a Service and its properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<ServiceResourceInner> getByResourceGroupAsync(String resourceGroupName, String serviceName)"
  desc: "Get a Service and its properties."
  returns:
    description: "a Service and its properties on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.getByResourceGroupWithResponse(String resourceGroupName, String serviceName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String serviceName, Context context)"
  nameWithType: "ServicesClient.getByResourceGroupWithResponse(String resourceGroupName, String serviceName, Context context)"
  summary: "Get a Service and its properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ServiceResourceInner> getByResourceGroupWithResponse(String resourceGroupName, String serviceName, Context context)"
  desc: "Get a Service and its properties."
  returns:
    description: "a Service and its properties along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String serviceName)"
  name: "getByResourceGroupWithResponseAsync(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String serviceName)"
  summary: "Get a Service and its properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<ServiceResourceInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String serviceName)"
  desc: "Get a Service and its properties."
  returns:
    description: "a Service and its properties along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.list()"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.list()"
  name: "list()"
  nameWithType: "ServicesClient.list()"
  summary: "Handles requests to list all resources in a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<ServiceResourceInner> list()"
  desc: "Handles requests to list all resources in a subscription."
  returns:
    description: "object that includes an array of Service resources and a possible link for next set as paginated response\n     with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.list(Context context)"
  name: "list(Context context)"
  nameWithType: "ServicesClient.list(Context context)"
  summary: "Handles requests to list all resources in a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ServiceResourceInner> list(Context context)"
  desc: "Handles requests to list all resources in a subscription."
  returns:
    description: "object that includes an array of Service resources and a possible link for next set as paginated response\n     with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listAsync()"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listAsync()"
  name: "listAsync()"
  nameWithType: "ServicesClient.listAsync()"
  summary: "Handles requests to list all resources in a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<ServiceResourceInner> listAsync()"
  desc: "Handles requests to list all resources in a subscription."
  returns:
    description: "object that includes an array of Service resources and a possible link for next set as paginated response\n     with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "ServicesClient.listByResourceGroup(String resourceGroupName)"
  summary: "Handles requests to list all resources in a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<ServiceResourceInner> listByResourceGroup(String resourceGroupName)"
  desc: "Handles requests to list all resources in a resource group."
  returns:
    description: "object that includes an array of Service resources and a possible link for next set as paginated response\n     with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "ServicesClient.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "Handles requests to list all resources in a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ServiceResourceInner> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "Handles requests to list all resources in a resource group."
  returns:
    description: "object that includes an array of Service resources and a possible link for next set as paginated response\n     with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listByResourceGroupAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listByResourceGroupAsync(String resourceGroupName)"
  name: "listByResourceGroupAsync(String resourceGroupName)"
  nameWithType: "ServicesClient.listByResourceGroupAsync(String resourceGroupName)"
  summary: "Handles requests to list all resources in a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<ServiceResourceInner> listByResourceGroupAsync(String resourceGroupName)"
  desc: "Handles requests to list all resources in a resource group."
  returns:
    description: "object that includes an array of Service resources and a possible link for next set as paginated response\n     with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listTestKeys(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listTestKeys(String resourceGroupName, String serviceName)"
  name: "listTestKeys(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.listTestKeys(String resourceGroupName, String serviceName)"
  summary: "List test keys for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract TestKeys listTestKeys(String resourceGroupName, String serviceName)"
  desc: "List test keys for a Service."
  returns:
    description: "test keys payload."
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listTestKeysAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listTestKeysAsync(String resourceGroupName, String serviceName)"
  name: "listTestKeysAsync(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.listTestKeysAsync(String resourceGroupName, String serviceName)"
  summary: "List test keys for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<TestKeys> listTestKeysAsync(String resourceGroupName, String serviceName)"
  desc: "List test keys for a Service."
  returns:
    description: "test keys payload on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listTestKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listTestKeysWithResponse(String resourceGroupName, String serviceName, Context context)"
  name: "listTestKeysWithResponse(String resourceGroupName, String serviceName, Context context)"
  nameWithType: "ServicesClient.listTestKeysWithResponse(String resourceGroupName, String serviceName, Context context)"
  summary: "List test keys for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<TestKeys> listTestKeysWithResponse(String resourceGroupName, String serviceName, Context context)"
  desc: "List test keys for a Service."
  returns:
    description: "test keys payload along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listTestKeysWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.listTestKeysWithResponseAsync(String resourceGroupName, String serviceName)"
  name: "listTestKeysWithResponseAsync(String resourceGroupName, String serviceName)"
  nameWithType: "ServicesClient.listTestKeysWithResponseAsync(String resourceGroupName, String serviceName)"
  summary: "List test keys for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<TestKeys>> listTestKeysWithResponseAsync(String resourceGroupName, String serviceName)"
  desc: "List test keys for a Service."
  returns:
    description: "test keys payload along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.regenerateTestKey(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.RegenerateTestKeyRequestPayload)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.regenerateTestKey(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest)"
  name: "regenerateTestKey(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest)"
  nameWithType: "ServicesClient.regenerateTestKey(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest)"
  summary: "Regenerate a test key for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the operation."
    name: "regenerateTestKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.RegenerateTestKeyRequestPayload?alt=com.azure.resourcemanager.appplatform.models.RegenerateTestKeyRequestPayload&text=RegenerateTestKeyRequestPayload\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TestKeys regenerateTestKey(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest)"
  desc: "Regenerate a test key for a Service."
  returns:
    description: "test keys payload."
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.regenerateTestKeyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.RegenerateTestKeyRequestPayload)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.regenerateTestKeyAsync(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest)"
  name: "regenerateTestKeyAsync(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest)"
  nameWithType: "ServicesClient.regenerateTestKeyAsync(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest)"
  summary: "Regenerate a test key for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the operation."
    name: "regenerateTestKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.RegenerateTestKeyRequestPayload?alt=com.azure.resourcemanager.appplatform.models.RegenerateTestKeyRequestPayload&text=RegenerateTestKeyRequestPayload\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<TestKeys> regenerateTestKeyAsync(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest)"
  desc: "Regenerate a test key for a Service."
  returns:
    description: "test keys payload on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.regenerateTestKeyWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.RegenerateTestKeyRequestPayload,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.regenerateTestKeyWithResponse(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest, Context context)"
  name: "regenerateTestKeyWithResponse(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest, Context context)"
  nameWithType: "ServicesClient.regenerateTestKeyWithResponse(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest, Context context)"
  summary: "Regenerate a test key for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the operation."
    name: "regenerateTestKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.RegenerateTestKeyRequestPayload?alt=com.azure.resourcemanager.appplatform.models.RegenerateTestKeyRequestPayload&text=RegenerateTestKeyRequestPayload\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<TestKeys> regenerateTestKeyWithResponse(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest, Context context)"
  desc: "Regenerate a test key for a Service."
  returns:
    description: "test keys payload along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.regenerateTestKeyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.RegenerateTestKeyRequestPayload)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.regenerateTestKeyWithResponseAsync(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest)"
  name: "regenerateTestKeyWithResponseAsync(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest)"
  nameWithType: "ServicesClient.regenerateTestKeyWithResponseAsync(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest)"
  summary: "Regenerate a test key for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the operation."
    name: "regenerateTestKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.RegenerateTestKeyRequestPayload?alt=com.azure.resourcemanager.appplatform.models.RegenerateTestKeyRequestPayload&text=RegenerateTestKeyRequestPayload\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<TestKeys>> regenerateTestKeyWithResponseAsync(String resourceGroupName, String serviceName, RegenerateTestKeyRequestPayload regenerateTestKeyRequest)"
  desc: "Regenerate a test key for a Service."
  returns:
    description: "test keys payload along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.update(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  name: "update(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  nameWithType: "ServicesClient.update(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  summary: "Operation to update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ServiceResourceInner update(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  desc: "Operation to update an exiting Service."
  returns:
    description: "service resource."
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.update(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  name: "update(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  nameWithType: "ServicesClient.update(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  summary: "Operation to update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ServiceResourceInner update(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)"
  desc: "Operation to update an exiting Service."
  returns:
    description: "service resource."
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.updateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  name: "updateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  nameWithType: "ServicesClient.updateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  summary: "Operation to update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ServiceResourceInner> updateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  desc: "Operation to update an exiting Service."
  returns:
    description: "service resource on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ServicesClient.updateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  name: "updateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  nameWithType: "ServicesClient.updateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  summary: "Operation to update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the update operation."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  desc: "Operation to update an exiting Service."
  returns:
    description: "service resource along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ServicesClient."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete?alt=com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete&text=InnerSupportsDelete\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet?alt=com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet&text=InnerSupportsGet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing?alt=com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing&text=InnerSupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.appplatform.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.19.0
