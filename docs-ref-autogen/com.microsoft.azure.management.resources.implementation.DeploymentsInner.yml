### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  id: "DeploymentsInner"
  parent: "com.microsoft.azure.management.resources.implementation"
  children:
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.DeploymentsInner(retrofit2.Retrofit,com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.DeploymentsService"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdate(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDelete(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIf(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHash(java.lang.Object)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashAsync(java.lang.Object)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashAsync(java.lang.Object,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.TemplateHashResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashWithServiceResponseAsync(java.lang.Object)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancel(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistence(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdate(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.delete(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplate(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroup(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.list()"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.list(java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync()"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync(java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync(java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScope(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync(java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNext(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeSinglePageAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScope(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync(java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNext(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeSinglePageAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScope()"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScope(java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync()"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync(java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync(java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNext(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeSinglePageAsync()"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeSinglePageAsync(java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeWithServiceResponseAsync()"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeWithServiceResponseAsync(java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroup(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroup(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNext(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupSinglePageAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNext(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listSinglePageAsync()"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listSinglePageAsync(java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listWithServiceResponseAsync()"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listWithServiceResponseAsync(java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validate(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIf(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  - "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  langs:
  - "java"
  name: "DeploymentsInner"
  nameWithType: "DeploymentsInner"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  type: "Class"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "An instance of this class provides access to all the operations defined in Deployments."
  syntax:
    content: "public class DeploymentsInner implements InnerSupportsGet<DeploymentExtendedInner>, InnerSupportsDelete<Void>, InnerSupportsListing<DeploymentExtendedInner>"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
  - "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>"
  - "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.DeploymentsInner(retrofit2.Retrofit,com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl)"
  id: "DeploymentsInner(retrofit2.Retrofit,com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "DeploymentsInner(Retrofit retrofit, ResourceManagementClientImpl client)"
  nameWithType: "DeploymentsInner.DeploymentsInner(Retrofit retrofit, ResourceManagementClientImpl client)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.DeploymentsInner(Retrofit retrofit, ResourceManagementClientImpl client)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.DeploymentsInner*"
  type: "Constructor"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Initializes an instance of DeploymentsInner."
  syntax:
    content: "public DeploymentsInner(Retrofit retrofit, ResourceManagementClientImpl client)"
    parameters:
    - id: "retrofit"
      type: "retrofit2.Retrofit"
      description: "the Retrofit instance built from a Retrofit Builder."
    - id: "client"
      type: "com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdate(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdate(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdate*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources to a resource group. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public DeploymentExtendedInner beginCreateOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources to a resource group. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<DeploymentExtendedInner> beginCreateOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources to a resource group. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> beginCreateOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAtManagementGroupScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtManagementGroupScope(String groupId, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtManagementGroupScope(String groupId, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScope(String groupId, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at management group scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public DeploymentExtendedInner beginCreateOrUpdateAtManagementGroupScope(String groupId, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at management group scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<DeploymentExtendedInner> beginCreateOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "beginCreateOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at management group scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> beginCreateOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at management group scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> beginCreateOrUpdateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAtScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at a given scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public DeploymentExtendedInner beginCreateOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at a given scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<DeploymentExtendedInner> beginCreateOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "beginCreateOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at a given scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> beginCreateOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtScopeWithServiceResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtScopeWithServiceResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeWithServiceResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at a given scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> beginCreateOrUpdateAtScopeWithServiceResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at subscription scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public DeploymentExtendedInner beginCreateOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at subscription scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<DeploymentExtendedInner> beginCreateOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "beginCreateOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at subscription scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> beginCreateOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at subscription scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> beginCreateOrUpdateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAtTenantScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtTenantScope(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtTenantScope(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScope(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at tenant scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public DeploymentExtendedInner beginCreateOrUpdateAtTenantScope(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at tenant scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<DeploymentExtendedInner> beginCreateOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "beginCreateOrUpdateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at tenant scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> beginCreateOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateAtTenantScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAtTenantScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtTenantScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at tenant scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> beginCreateOrUpdateAtTenantScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "beginCreateOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources to a resource group. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDelete(java.lang.String,java.lang.String)"
  id: "beginDelete(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDelete(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.beginDelete(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDelete(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDelete*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public void beginDelete(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployment to delete. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAsync(java.lang.String,java.lang.String)"
  id: "beginDeleteAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAsync(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAsync(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<Void> beginDeleteAsync(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployment to delete. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginDeleteAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAsync(String resourceGroupName, String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.beginDeleteAsync(String resourceGroupName, String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAsync(String resourceGroupName, String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployment to delete. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScope(java.lang.String,java.lang.String)"
  id: "beginDeleteAtManagementGroupScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtManagementGroupScope(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAtManagementGroupScope(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScope(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public void beginDeleteAtManagementGroupScope(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  id: "beginDeleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<Void> beginDeleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginDeleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.beginDeleteAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public ServiceFuture<Void> beginDeleteAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "beginDeleteAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginDeleteAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScope(java.lang.String,java.lang.String)"
  id: "beginDeleteAtScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtScope(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAtScope(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScope(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public void beginDeleteAtScope(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeAsync(java.lang.String,java.lang.String)"
  id: "beginDeleteAtScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtScopeAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAtScopeAsync(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeAsync(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<Void> beginDeleteAtScopeAsync(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginDeleteAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtScopeAsync(String scope, String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.beginDeleteAtScopeAsync(String scope, String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeAsync(String scope, String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public ServiceFuture<Void> beginDeleteAtScopeAsync(String scope, String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "beginDeleteAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginDeleteAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScope(java.lang.String)"
  id: "beginDeleteAtSubscriptionScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtSubscriptionScope(String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAtSubscriptionScope(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScope(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public void beginDeleteAtSubscriptionScope(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeAsync(java.lang.String)"
  id: "beginDeleteAtSubscriptionScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAtSubscriptionScopeAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<Void> beginDeleteAtSubscriptionScopeAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginDeleteAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.beginDeleteAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public ServiceFuture<Void> beginDeleteAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  id: "beginDeleteAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginDeleteAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScope(java.lang.String)"
  id: "beginDeleteAtTenantScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtTenantScope(String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAtTenantScope(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScope(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public void beginDeleteAtTenantScope(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeAsync(java.lang.String)"
  id: "beginDeleteAtTenantScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtTenantScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAtTenantScopeAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<Void> beginDeleteAtTenantScopeAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginDeleteAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtTenantScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.beginDeleteAtTenantScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public ServiceFuture<Void> beginDeleteAtTenantScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  id: "beginDeleteAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginDeleteAtTenantScopeWithServiceResponseAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "beginDeleteWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginDeleteWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployment to delete. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIf(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  id: "beginWhatIf(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginWhatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsInner.beginWhatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIf*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  syntax:
    content: "public WhatIfOperationResultInner beginWhatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group the template will be deployed to. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to validate."
    return:
      type: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
      description: "the WhatIfOperationResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  id: "beginWhatIfAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginWhatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsInner.beginWhatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  syntax:
    content: "public Observable<WhatIfOperationResultInner> beginWhatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group the template will be deployed to. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
      description: "the observable to the WhatIfOperationResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>)"
  id: "beginWhatIfAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginWhatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.beginWhatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  syntax:
    content: "public ServiceFuture<WhatIfOperationResultInner> beginWhatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group the template will be deployed to. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to validate."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  id: "beginWhatIfAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginWhatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsInner.beginWhatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  syntax:
    content: "public WhatIfOperationResultInner beginWhatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to What If."
    return:
      type: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
      description: "the WhatIfOperationResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  id: "beginWhatIfAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginWhatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  syntax:
    content: "public Observable<WhatIfOperationResultInner> beginWhatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to What If."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
      description: "the observable to the WhatIfOperationResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>)"
  id: "beginWhatIfAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginWhatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  syntax:
    content: "public ServiceFuture<WhatIfOperationResultInner> beginWhatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to What If."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  id: "beginWhatIfAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginWhatIfAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsInner.beginWhatIfAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentWhatIf parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentWhatIf parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  syntax:
    content: "public Observable<ServiceResponseWithHeaders<WhatIfOperationResultInner,DeploymentsWhatIfAtSubscriptionScopeHeaders>> beginWhatIfAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentWhatIf parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to What If."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner,com.microsoft.azure.management.resources.DeploymentsWhatIfAtSubscriptionScopeHeaders>>"
      description: "the observable to the WhatIfOperationResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  id: "beginWhatIfWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "beginWhatIfWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsInner.beginWhatIfWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  syntax:
    content: "public Observable<ServiceResponseWithHeaders<WhatIfOperationResultInner,DeploymentsWhatIfHeaders>> beginWhatIfWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group the template will be deployed to. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner,com.microsoft.azure.management.resources.DeploymentsWhatIfHeaders>>"
      description: "the observable to the WhatIfOperationResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHash(java.lang.Object)"
  id: "calculateTemplateHash(java.lang.Object)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "calculateTemplateHash(Object template)"
  nameWithType: "DeploymentsInner.calculateTemplateHash(Object template)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHash(Object template)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHash*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Calculate the hash of the given template."
  syntax:
    content: "public TemplateHashResultInner calculateTemplateHash(Object template)"
    parameters:
    - id: "template"
      type: "java.lang.Object"
      description: "The template provided to calculate hash."
    return:
      type: "com.microsoft.azure.management.resources.implementation.TemplateHashResultInner"
      description: "the TemplateHashResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashAsync(java.lang.Object)"
  id: "calculateTemplateHashAsync(java.lang.Object)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "calculateTemplateHashAsync(Object template)"
  nameWithType: "DeploymentsInner.calculateTemplateHashAsync(Object template)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashAsync(Object template)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Calculate the hash of the given template."
  syntax:
    content: "public Observable<TemplateHashResultInner> calculateTemplateHashAsync(Object template)"
    parameters:
    - id: "template"
      type: "java.lang.Object"
      description: "The template provided to calculate hash."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.TemplateHashResultInner>"
      description: "the observable to the TemplateHashResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashAsync(java.lang.Object,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.TemplateHashResultInner>)"
  id: "calculateTemplateHashAsync(java.lang.Object,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.TemplateHashResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "calculateTemplateHashAsync(Object template, ServiceCallback<TemplateHashResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.calculateTemplateHashAsync(Object template, ServiceCallback<TemplateHashResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashAsync(Object template, ServiceCallback<TemplateHashResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Calculate the hash of the given template."
  syntax:
    content: "public ServiceFuture<TemplateHashResultInner> calculateTemplateHashAsync(Object template, ServiceCallback<TemplateHashResultInner> serviceCallback)"
    parameters:
    - id: "template"
      type: "java.lang.Object"
      description: "The template provided to calculate hash."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.TemplateHashResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.TemplateHashResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashWithServiceResponseAsync(java.lang.Object)"
  id: "calculateTemplateHashWithServiceResponseAsync(java.lang.Object)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "calculateTemplateHashWithServiceResponseAsync(Object template)"
  nameWithType: "DeploymentsInner.calculateTemplateHashWithServiceResponseAsync(Object template)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashWithServiceResponseAsync(Object template)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Calculate the hash of the given template."
  syntax:
    content: "public Observable<ServiceResponse<TemplateHashResultInner>> calculateTemplateHashWithServiceResponseAsync(Object template)"
    parameters:
    - id: "template"
      type: "java.lang.Object"
      description: "The template provided to calculate hash."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.TemplateHashResultInner>>"
      description: "the observable to the TemplateHashResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancel(java.lang.String,java.lang.String)"
  id: "cancel(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancel(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.cancel(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancel(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancel*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed."
  syntax:
    content: "public void cancel(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAsync(java.lang.String,java.lang.String)"
  id: "cancelAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAsync(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAsync(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed."
  syntax:
    content: "public Observable<Void> cancelAsync(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "cancelAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAsync(String resourceGroupName, String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.cancelAsync(String resourceGroupName, String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAsync(String resourceGroupName, String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed."
  syntax:
    content: "public ServiceFuture<Void> cancelAsync(String resourceGroupName, String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScope(java.lang.String,java.lang.String)"
  id: "cancelAtManagementGroupScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtManagementGroupScope(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAtManagementGroupScope(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScope(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public void cancelAtManagementGroupScope(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  id: "cancelAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public Observable<Void> cancelAtManagementGroupScopeAsync(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "cancelAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.cancelAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public ServiceFuture<Void> cancelAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "cancelAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public Observable<ServiceResponse<Void>> cancelAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScope(java.lang.String,java.lang.String)"
  id: "cancelAtScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtScope(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAtScope(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScope(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public void cancelAtScope(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeAsync(java.lang.String,java.lang.String)"
  id: "cancelAtScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtScopeAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAtScopeAsync(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeAsync(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public Observable<Void> cancelAtScopeAsync(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "cancelAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtScopeAsync(String scope, String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.cancelAtScopeAsync(String scope, String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeAsync(String scope, String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public ServiceFuture<Void> cancelAtScopeAsync(String scope, String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "cancelAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public Observable<ServiceResponse<Void>> cancelAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScope(java.lang.String)"
  id: "cancelAtSubscriptionScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtSubscriptionScope(String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAtSubscriptionScope(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScope(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public void cancelAtSubscriptionScope(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeAsync(java.lang.String)"
  id: "cancelAtSubscriptionScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAtSubscriptionScopeAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public Observable<Void> cancelAtSubscriptionScopeAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "cancelAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.cancelAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public ServiceFuture<Void> cancelAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  id: "cancelAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public Observable<ServiceResponse<Void>> cancelAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScope(java.lang.String)"
  id: "cancelAtTenantScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtTenantScope(String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAtTenantScope(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScope(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public void cancelAtTenantScope(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeAsync(java.lang.String)"
  id: "cancelAtTenantScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtTenantScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAtTenantScopeAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public Observable<Void> cancelAtTenantScopeAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "cancelAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtTenantScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.cancelAtTenantScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public ServiceFuture<Void> cancelAtTenantScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  id: "cancelAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.cancelAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  syntax:
    content: "public Observable<ServiceResponse<Void>> cancelAtTenantScopeWithServiceResponseAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "cancelWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "cancelWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.cancelWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Cancels a currently running template deployment. You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed."
  syntax:
    content: "public Observable<ServiceResponse<Void>> cancelWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistence(java.lang.String,java.lang.String)"
  id: "checkExistence(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistence(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistence(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistence(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistence*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public boolean checkExistence(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployment to check. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "boolean"
      description: "the boolean object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAsync(java.lang.String,java.lang.String)"
  id: "checkExistenceAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAsync(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAsync(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public Observable<Boolean> checkExistenceAsync(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployment to check. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Boolean>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  id: "checkExistenceAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAsync(String resourceGroupName, String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  nameWithType: "DeploymentsInner.checkExistenceAsync(String resourceGroupName, String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAsync(String resourceGroupName, String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public ServiceFuture<Boolean> checkExistenceAsync(String resourceGroupName, String deploymentName, ServiceCallback<Boolean> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployment to check. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Boolean>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Boolean>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScope(java.lang.String,java.lang.String)"
  id: "checkExistenceAtManagementGroupScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtManagementGroupScope(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAtManagementGroupScope(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScope(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public boolean checkExistenceAtManagementGroupScope(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "boolean"
      description: "the boolean object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  id: "checkExistenceAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public Observable<Boolean> checkExistenceAtManagementGroupScopeAsync(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Boolean>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  id: "checkExistenceAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  nameWithType: "DeploymentsInner.checkExistenceAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public ServiceFuture<Boolean> checkExistenceAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Boolean> serviceCallback)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Boolean>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Boolean>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "checkExistenceAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public Observable<ServiceResponse<Boolean>> checkExistenceAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Boolean>>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScope(java.lang.String,java.lang.String)"
  id: "checkExistenceAtScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtScope(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAtScope(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScope(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public boolean checkExistenceAtScope(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "boolean"
      description: "the boolean object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeAsync(java.lang.String,java.lang.String)"
  id: "checkExistenceAtScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtScopeAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAtScopeAsync(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeAsync(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public Observable<Boolean> checkExistenceAtScopeAsync(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Boolean>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  id: "checkExistenceAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtScopeAsync(String scope, String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  nameWithType: "DeploymentsInner.checkExistenceAtScopeAsync(String scope, String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeAsync(String scope, String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public ServiceFuture<Boolean> checkExistenceAtScopeAsync(String scope, String deploymentName, ServiceCallback<Boolean> serviceCallback)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Boolean>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Boolean>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "checkExistenceAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public Observable<ServiceResponse<Boolean>> checkExistenceAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Boolean>>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScope(java.lang.String)"
  id: "checkExistenceAtSubscriptionScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtSubscriptionScope(String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAtSubscriptionScope(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScope(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public boolean checkExistenceAtSubscriptionScope(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "boolean"
      description: "the boolean object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeAsync(java.lang.String)"
  id: "checkExistenceAtSubscriptionScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAtSubscriptionScopeAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public Observable<Boolean> checkExistenceAtSubscriptionScopeAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Boolean>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  id: "checkExistenceAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  nameWithType: "DeploymentsInner.checkExistenceAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public ServiceFuture<Boolean> checkExistenceAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Boolean> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Boolean>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Boolean>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  id: "checkExistenceAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public Observable<ServiceResponse<Boolean>> checkExistenceAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Boolean>>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScope(java.lang.String)"
  id: "checkExistenceAtTenantScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtTenantScope(String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAtTenantScope(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScope(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public boolean checkExistenceAtTenantScope(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "boolean"
      description: "the boolean object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeAsync(java.lang.String)"
  id: "checkExistenceAtTenantScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtTenantScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAtTenantScopeAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public Observable<Boolean> checkExistenceAtTenantScopeAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Boolean>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  id: "checkExistenceAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtTenantScopeAsync(String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  nameWithType: "DeploymentsInner.checkExistenceAtTenantScopeAsync(String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeAsync(String deploymentName, ServiceCallback<Boolean> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public ServiceFuture<Boolean> checkExistenceAtTenantScopeAsync(String deploymentName, ServiceCallback<Boolean> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Boolean>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Boolean>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  id: "checkExistenceAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public Observable<ServiceResponse<Boolean>> checkExistenceAtTenantScopeWithServiceResponseAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Boolean>>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "checkExistenceWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "checkExistenceWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.checkExistenceWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether the deployment exists."
  syntax:
    content: "public Observable<ServiceResponse<Boolean>> checkExistenceWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployment to check. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Boolean>>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdate(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdate(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdate*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources to a resource group. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public DeploymentExtendedInner createOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources to a resource group. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<DeploymentExtendedInner> createOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "createOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.createOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources to a resource group. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> createOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAtManagementGroupScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtManagementGroupScope(String groupId, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAtManagementGroupScope(String groupId, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScope(String groupId, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at management group scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public DeploymentExtendedInner createOrUpdateAtManagementGroupScope(String groupId, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at management group scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<DeploymentExtendedInner> createOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "createOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at management group scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> createOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at management group scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> createOrUpdateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAtScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at a given scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public DeploymentExtendedInner createOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at a given scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<DeploymentExtendedInner> createOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "createOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.createOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at a given scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> createOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtScopeWithServiceResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAtScopeWithServiceResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeWithServiceResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at a given scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> createOrUpdateAtScopeWithServiceResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at subscription scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public DeploymentExtendedInner createOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at subscription scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<DeploymentExtendedInner> createOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "createOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at subscription scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> createOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at subscription scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> createOrUpdateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAtTenantScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtTenantScope(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAtTenantScope(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScope(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at tenant scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public DeploymentExtendedInner createOrUpdateAtTenantScope(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at tenant scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<DeploymentExtendedInner> createOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "createOrUpdateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.createOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at tenant scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> createOrUpdateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateAtTenantScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateAtTenantScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateAtTenantScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources at tenant scope. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> createOrUpdateAtTenantScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "createOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "createOrUpdateWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deploys resources to a resource group. You can provide the template and parameters directly in the request or link to JSON files."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> createOrUpdateWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Additional parameters supplied to the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.delete(java.lang.String,java.lang.String)"
  id: "delete(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "delete(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.delete(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.delete(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.delete*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public void delete(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployment to delete. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAsync(java.lang.String,java.lang.String)"
  id: "deleteAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAsync(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAsync(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<Void> deleteAsync(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployment to delete. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "deleteAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAsync(String resourceGroupName, String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.deleteAsync(String resourceGroupName, String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAsync(String resourceGroupName, String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public ServiceFuture<Void> deleteAsync(String resourceGroupName, String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployment to delete. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScope(java.lang.String,java.lang.String)"
  id: "deleteAtManagementGroupScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtManagementGroupScope(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAtManagementGroupScope(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScope(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public void deleteAtManagementGroupScope(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  id: "deleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<Void> deleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "deleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.deleteAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public ServiceFuture<Void> deleteAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "deleteAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<ServiceResponse<Void>> deleteAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScope(java.lang.String,java.lang.String)"
  id: "deleteAtScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtScope(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAtScope(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScope(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public void deleteAtScope(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeAsync(java.lang.String,java.lang.String)"
  id: "deleteAtScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtScopeAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAtScopeAsync(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeAsync(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<Void> deleteAtScopeAsync(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "deleteAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtScopeAsync(String scope, String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.deleteAtScopeAsync(String scope, String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeAsync(String scope, String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public ServiceFuture<Void> deleteAtScopeAsync(String scope, String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "deleteAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<ServiceResponse<Void>> deleteAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScope(java.lang.String)"
  id: "deleteAtSubscriptionScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtSubscriptionScope(String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAtSubscriptionScope(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScope(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public void deleteAtSubscriptionScope(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeAsync(java.lang.String)"
  id: "deleteAtSubscriptionScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAtSubscriptionScopeAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<Void> deleteAtSubscriptionScopeAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "deleteAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.deleteAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public ServiceFuture<Void> deleteAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  id: "deleteAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<ServiceResponse<Void>> deleteAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScope(java.lang.String)"
  id: "deleteAtTenantScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtTenantScope(String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAtTenantScope(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScope(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public void deleteAtTenantScope(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeAsync(java.lang.String)"
  id: "deleteAtTenantScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtTenantScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAtTenantScopeAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<Void> deleteAtTenantScopeAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "deleteAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtTenantScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  nameWithType: "DeploymentsInner.deleteAtTenantScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public ServiceFuture<Void> deleteAtTenantScopeAsync(String deploymentName, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  id: "deleteAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.deleteAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<ServiceResponse<Void>> deleteAtTenantScopeWithServiceResponseAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "deleteWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "deleteWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.deleteWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a deployment from the deployment history. A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  syntax:
    content: "public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployment to delete. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplate(java.lang.String,java.lang.String)"
  id: "exportTemplate(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplate(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplate(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplate(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplate*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public DeploymentExportResultInner exportTemplate(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
      description: "the DeploymentExportResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAsync(java.lang.String,java.lang.String)"
  id: "exportTemplateAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAsync(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAsync(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public Observable<DeploymentExportResultInner> exportTemplateAsync(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the observable to the DeploymentExportResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  id: "exportTemplateAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAsync(String resourceGroupName, String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.exportTemplateAsync(String resourceGroupName, String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAsync(String resourceGroupName, String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public ServiceFuture<DeploymentExportResultInner> exportTemplateAsync(String resourceGroupName, String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScope(java.lang.String,java.lang.String)"
  id: "exportTemplateAtManagementGroupScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtManagementGroupScope(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAtManagementGroupScope(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScope(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public DeploymentExportResultInner exportTemplateAtManagementGroupScope(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
      description: "the DeploymentExportResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  id: "exportTemplateAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public Observable<DeploymentExportResultInner> exportTemplateAtManagementGroupScopeAsync(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the observable to the DeploymentExportResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  id: "exportTemplateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.exportTemplateAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public ServiceFuture<DeploymentExportResultInner> exportTemplateAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "exportTemplateAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExportResultInner>> exportTemplateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>>"
      description: "the observable to the DeploymentExportResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScope(java.lang.String,java.lang.String)"
  id: "exportTemplateAtScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtScope(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAtScope(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScope(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public DeploymentExportResultInner exportTemplateAtScope(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
      description: "the DeploymentExportResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeAsync(java.lang.String,java.lang.String)"
  id: "exportTemplateAtScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtScopeAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAtScopeAsync(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeAsync(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public Observable<DeploymentExportResultInner> exportTemplateAtScopeAsync(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the observable to the DeploymentExportResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  id: "exportTemplateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtScopeAsync(String scope, String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.exportTemplateAtScopeAsync(String scope, String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeAsync(String scope, String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public ServiceFuture<DeploymentExportResultInner> exportTemplateAtScopeAsync(String scope, String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "exportTemplateAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExportResultInner>> exportTemplateAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>>"
      description: "the observable to the DeploymentExportResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScope(java.lang.String)"
  id: "exportTemplateAtSubscriptionScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtSubscriptionScope(String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAtSubscriptionScope(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScope(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public DeploymentExportResultInner exportTemplateAtSubscriptionScope(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
      description: "the DeploymentExportResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeAsync(java.lang.String)"
  id: "exportTemplateAtSubscriptionScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAtSubscriptionScopeAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public Observable<DeploymentExportResultInner> exportTemplateAtSubscriptionScopeAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the observable to the DeploymentExportResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  id: "exportTemplateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.exportTemplateAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public ServiceFuture<DeploymentExportResultInner> exportTemplateAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  id: "exportTemplateAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExportResultInner>> exportTemplateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>>"
      description: "the observable to the DeploymentExportResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScope(java.lang.String)"
  id: "exportTemplateAtTenantScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtTenantScope(String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAtTenantScope(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScope(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public DeploymentExportResultInner exportTemplateAtTenantScope(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
      description: "the DeploymentExportResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeAsync(java.lang.String)"
  id: "exportTemplateAtTenantScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtTenantScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAtTenantScopeAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public Observable<DeploymentExportResultInner> exportTemplateAtTenantScopeAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the observable to the DeploymentExportResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  id: "exportTemplateAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtTenantScopeAsync(String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.exportTemplateAtTenantScopeAsync(String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeAsync(String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public ServiceFuture<DeploymentExportResultInner> exportTemplateAtTenantScopeAsync(String deploymentName, ServiceCallback<DeploymentExportResultInner> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  id: "exportTemplateAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExportResultInner>> exportTemplateAtTenantScopeWithServiceResponseAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>>"
      description: "the observable to the DeploymentExportResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "exportTemplateWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "exportTemplateWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.exportTemplateWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Exports the template used for specified deployment."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExportResultInner>> exportTemplateWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>>"
      description: "the observable to the DeploymentExportResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScope(java.lang.String,java.lang.String)"
  id: "getAtManagementGroupScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtManagementGroupScope(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.getAtManagementGroupScope(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScope(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public DeploymentExtendedInner getAtManagementGroupScope(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  id: "getAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.getAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public Observable<DeploymentExtendedInner> getAtManagementGroupScopeAsync(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "getAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.getAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> getAtManagementGroupScopeAsync(String groupId, String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "getAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsInner.getAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> getAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScope(java.lang.String,java.lang.String)"
  id: "getAtScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtScope(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.getAtScope(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScope(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public DeploymentExtendedInner getAtScope(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeAsync(java.lang.String,java.lang.String)"
  id: "getAtScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtScopeAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.getAtScopeAsync(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeAsync(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public Observable<DeploymentExtendedInner> getAtScopeAsync(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "getAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtScopeAsync(String scope, String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.getAtScopeAsync(String scope, String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeAsync(String scope, String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> getAtScopeAsync(String scope, String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "getAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsInner.getAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> getAtScopeWithServiceResponseAsync(String scope, String deploymentName)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScope(java.lang.String)"
  id: "getAtSubscriptionScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtSubscriptionScope(String deploymentName)"
  nameWithType: "DeploymentsInner.getAtSubscriptionScope(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScope(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public DeploymentExtendedInner getAtSubscriptionScope(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeAsync(java.lang.String)"
  id: "getAtSubscriptionScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.getAtSubscriptionScopeAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public Observable<DeploymentExtendedInner> getAtSubscriptionScopeAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "getAtSubscriptionScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.getAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> getAtSubscriptionScopeAsync(String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  id: "getAtSubscriptionScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.getAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> getAtSubscriptionScopeWithServiceResponseAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScope(java.lang.String)"
  id: "getAtTenantScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtTenantScope(String deploymentName)"
  nameWithType: "DeploymentsInner.getAtTenantScope(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScope(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public DeploymentExtendedInner getAtTenantScope(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeAsync(java.lang.String)"
  id: "getAtTenantScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtTenantScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.getAtTenantScopeAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public Observable<DeploymentExtendedInner> getAtTenantScopeAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "getAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtTenantScopeAsync(String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.getAtTenantScopeAsync(String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeAsync(String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> getAtTenantScopeAsync(String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  id: "getAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsInner.getAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeWithServiceResponseAsync(String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> getAtTenantScopeWithServiceResponseAsync(String deploymentName)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroup(java.lang.String,java.lang.String)"
  id: "getByResourceGroup(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getByResourceGroup(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.getByResourceGroup(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroup(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroup*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public DeploymentExtendedInner getByResourceGroup(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
      description: "the DeploymentExtendedInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupAsync(java.lang.String,java.lang.String)"
  id: "getByResourceGroupAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getByResourceGroupAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.getByResourceGroupAsync(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupAsync(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public Observable<DeploymentExtendedInner> getByResourceGroupAsync(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "getByResourceGroupAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getByResourceGroupAsync(String resourceGroupName, String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.getByResourceGroupAsync(String resourceGroupName, String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupAsync(String resourceGroupName, String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public ServiceFuture<DeploymentExtendedInner> getByResourceGroupAsync(String resourceGroupName, String deploymentName, ServiceCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "getByResourceGroupWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a deployment."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentExtendedInner>> getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String deploymentName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the DeploymentExtendedInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.list()"
  id: "list()"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "list()"
  nameWithType: "DeploymentsInner.list()"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.list()"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.list*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> list()"
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.list(java.lang.String,java.lang.Integer)"
  id: "list(java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "list(String filter, Integer top)"
  nameWithType: "DeploymentsInner.list(String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.list(String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.list*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> list(String filter, Integer top)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync()"
  id: "listAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAsync()"
  nameWithType: "DeploymentsInner.listAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listAsync()"
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAsync(ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listAsync(ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync(ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listAsync(ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync(java.lang.String,java.lang.Integer)"
  id: "listAsync(java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAsync(String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAsync(String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync(String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listAsync(String filter, Integer top)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync(java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listAsync(java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAsync(String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listAsync(String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync(String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listAsync(String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScope(java.lang.String)"
  id: "listAtManagementGroupScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScope(String groupId)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScope(String groupId)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScope(String groupId)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listAtManagementGroupScope(String groupId)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScope(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listAtManagementGroupScope(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScope(String groupId, String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScope(String groupId, String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScope(String groupId, String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listAtManagementGroupScope(String groupId, String filter, Integer top)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync(java.lang.String)"
  id: "listAtManagementGroupScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeAsync(String groupId)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeAsync(String groupId)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync(String groupId)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listAtManagementGroupScopeAsync(String groupId)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listAtManagementGroupScopeAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeAsync(String groupId, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeAsync(String groupId, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync(String groupId, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listAtManagementGroupScopeAsync(String groupId, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listAtManagementGroupScopeAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeAsync(String groupId, String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeAsync(String groupId, String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync(String groupId, String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listAtManagementGroupScopeAsync(String groupId, String filter, Integer top)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync(java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listAtManagementGroupScopeAsync(java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeAsync(String groupId, String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeAsync(String groupId, String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync(String groupId, String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listAtManagementGroupScopeAsync(String groupId, String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNext(java.lang.String)"
  id: "listAtManagementGroupScopeNext(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeNext(String nextPageLink)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeNext(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNext(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNext*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listAtManagementGroupScopeNext(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextAsync(java.lang.String)"
  id: "listAtManagementGroupScopeNextAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeNextAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeNextAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listAtManagementGroupScopeNextAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listAtManagementGroupScopeNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listAtManagementGroupScopeNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    - id: "serviceFuture"
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the ServiceFuture object tracking the Retrofit calls"
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextSinglePageAsync(java.lang.String)"
  id: "listAtManagementGroupScopeNextSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeNextSinglePageAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeNextSinglePageAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextSinglePageAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group. ServiceResponse> \\* @param nextPageLink The NextLink from the previous successful call to List operation."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtManagementGroupScopeNextSinglePageAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextWithServiceResponseAsync(java.lang.String)"
  id: "listAtManagementGroupScopeNextWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeNextWithServiceResponseAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextWithServiceResponseAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtManagementGroupScopeNextWithServiceResponseAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeSinglePageAsync(java.lang.String)"
  id: "listAtManagementGroupScopeSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeSinglePageAsync(String groupId)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeSinglePageAsync(String groupId)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeSinglePageAsync(String groupId)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtManagementGroupScopeSinglePageAsync(String groupId)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeSinglePageAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listAtManagementGroupScopeSinglePageAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeSinglePageAsync(String groupId, String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeSinglePageAsync(String groupId, String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeSinglePageAsync(String groupId, String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group. ServiceResponse> \\* @param groupId The management group ID. ServiceResponse> \\* @param filter The filter to apply on the operation. For example, you can use $filter=provisioningState eq '\\{state\\}'. ServiceResponse> \\* @param top The number of results to get. If null is passed, returns all deployments."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtManagementGroupScopeSinglePageAsync(String groupId, String filter, Integer top)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
    - id: "filter"
      type: "java.lang.String"
    - id: "top"
      type: "java.lang.Integer"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync(java.lang.String)"
  id: "listAtManagementGroupScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeWithServiceResponseAsync(String groupId)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync(String groupId)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync(String groupId)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtManagementGroupScopeWithServiceResponseAsync(String groupId)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtManagementGroupScopeWithServiceResponseAsync(String groupId, String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync(String groupId, String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync(String groupId, String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a management group."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtManagementGroupScopeWithServiceResponseAsync(String groupId, String filter, Integer top)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScope(java.lang.String)"
  id: "listAtScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScope(String scope)"
  nameWithType: "DeploymentsInner.listAtScope(String scope)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScope(String scope)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listAtScope(String scope)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScope(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listAtScope(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScope(String scope, String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAtScope(String scope, String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScope(String scope, String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listAtScope(String scope, String filter, Integer top)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync(java.lang.String)"
  id: "listAtScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeAsync(String scope)"
  nameWithType: "DeploymentsInner.listAtScopeAsync(String scope)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync(String scope)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listAtScopeAsync(String scope)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listAtScopeAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeAsync(String scope, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listAtScopeAsync(String scope, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync(String scope, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listAtScopeAsync(String scope, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listAtScopeAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeAsync(String scope, String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAtScopeAsync(String scope, String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync(String scope, String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listAtScopeAsync(String scope, String filter, Integer top)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync(java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listAtScopeAsync(java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeAsync(String scope, String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listAtScopeAsync(String scope, String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync(String scope, String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listAtScopeAsync(String scope, String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNext(java.lang.String)"
  id: "listAtScopeNext(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeNext(String nextPageLink)"
  nameWithType: "DeploymentsInner.listAtScopeNext(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNext(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNext*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listAtScopeNext(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextAsync(java.lang.String)"
  id: "listAtScopeNextAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeNextAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listAtScopeNextAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listAtScopeNextAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listAtScopeNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listAtScopeNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listAtScopeNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    - id: "serviceFuture"
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the ServiceFuture object tracking the Retrofit calls"
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextSinglePageAsync(java.lang.String)"
  id: "listAtScopeNextSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeNextSinglePageAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listAtScopeNextSinglePageAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextSinglePageAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope. ServiceResponse> \\* @param nextPageLink The NextLink from the previous successful call to List operation."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtScopeNextSinglePageAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextWithServiceResponseAsync(java.lang.String)"
  id: "listAtScopeNextWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listAtScopeNextWithServiceResponseAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextWithServiceResponseAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtScopeNextWithServiceResponseAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeSinglePageAsync(java.lang.String)"
  id: "listAtScopeSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeSinglePageAsync(String scope)"
  nameWithType: "DeploymentsInner.listAtScopeSinglePageAsync(String scope)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeSinglePageAsync(String scope)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtScopeSinglePageAsync(String scope)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeSinglePageAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listAtScopeSinglePageAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeSinglePageAsync(String scope, String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAtScopeSinglePageAsync(String scope, String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeSinglePageAsync(String scope, String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope. ServiceResponse> \\* @param scope The scope of a deployment. ServiceResponse> \\* @param filter The filter to apply on the operation. For example, you can use $filter=provisioningState eq '\\{state\\}'. ServiceResponse> \\* @param top The number of results to get. If null is passed, returns all deployments."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtScopeSinglePageAsync(String scope, String filter, Integer top)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
    - id: "filter"
      type: "java.lang.String"
    - id: "top"
      type: "java.lang.Integer"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeWithServiceResponseAsync(java.lang.String)"
  id: "listAtScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeWithServiceResponseAsync(String scope)"
  nameWithType: "DeploymentsInner.listAtScopeWithServiceResponseAsync(String scope)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeWithServiceResponseAsync(String scope)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtScopeWithServiceResponseAsync(String scope)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtScopeWithServiceResponseAsync(String scope, String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAtScopeWithServiceResponseAsync(String scope, String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeWithServiceResponseAsync(String scope, String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the given scope."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtScopeWithServiceResponseAsync(String scope, String filter, Integer top)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScope()"
  id: "listAtTenantScope()"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScope()"
  nameWithType: "DeploymentsInner.listAtTenantScope()"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScope()"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listAtTenantScope()"
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScope(java.lang.String,java.lang.Integer)"
  id: "listAtTenantScope(java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScope(String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAtTenantScope(String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScope(String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listAtTenantScope(String filter, Integer top)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync()"
  id: "listAtTenantScopeAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeAsync()"
  nameWithType: "DeploymentsInner.listAtTenantScopeAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listAtTenantScopeAsync()"
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listAtTenantScopeAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeAsync(ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listAtTenantScopeAsync(ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync(ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listAtTenantScopeAsync(ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync(java.lang.String,java.lang.Integer)"
  id: "listAtTenantScopeAsync(java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeAsync(String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAtTenantScopeAsync(String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync(String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listAtTenantScopeAsync(String filter, Integer top)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync(java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listAtTenantScopeAsync(java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeAsync(String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listAtTenantScopeAsync(String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync(String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listAtTenantScopeAsync(String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNext(java.lang.String)"
  id: "listAtTenantScopeNext(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeNext(String nextPageLink)"
  nameWithType: "DeploymentsInner.listAtTenantScopeNext(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNext(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNext*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listAtTenantScopeNext(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextAsync(java.lang.String)"
  id: "listAtTenantScopeNextAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeNextAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listAtTenantScopeNextAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listAtTenantScopeNextAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listAtTenantScopeNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listAtTenantScopeNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listAtTenantScopeNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    - id: "serviceFuture"
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the ServiceFuture object tracking the Retrofit calls"
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextSinglePageAsync(java.lang.String)"
  id: "listAtTenantScopeNextSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeNextSinglePageAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listAtTenantScopeNextSinglePageAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextSinglePageAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope. ServiceResponse> \\* @param nextPageLink The NextLink from the previous successful call to List operation."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtTenantScopeNextSinglePageAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextWithServiceResponseAsync(java.lang.String)"
  id: "listAtTenantScopeNextWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listAtTenantScopeNextWithServiceResponseAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextWithServiceResponseAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtTenantScopeNextWithServiceResponseAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeSinglePageAsync()"
  id: "listAtTenantScopeSinglePageAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeSinglePageAsync()"
  nameWithType: "DeploymentsInner.listAtTenantScopeSinglePageAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeSinglePageAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtTenantScopeSinglePageAsync()"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeSinglePageAsync(java.lang.String,java.lang.Integer)"
  id: "listAtTenantScopeSinglePageAsync(java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeSinglePageAsync(String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAtTenantScopeSinglePageAsync(String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeSinglePageAsync(String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope. ServiceResponse> \\* @param filter The filter to apply on the operation. For example, you can use $filter=provisioningState eq '\\{state\\}'. ServiceResponse> \\* @param top The number of results to get. If null is passed, returns all deployments."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtTenantScopeSinglePageAsync(String filter, Integer top)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
    - id: "top"
      type: "java.lang.Integer"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeWithServiceResponseAsync()"
  id: "listAtTenantScopeWithServiceResponseAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeWithServiceResponseAsync()"
  nameWithType: "DeploymentsInner.listAtTenantScopeWithServiceResponseAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeWithServiceResponseAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtTenantScopeWithServiceResponseAsync()"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeWithServiceResponseAsync(java.lang.String,java.lang.Integer)"
  id: "listAtTenantScopeWithServiceResponseAsync(java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listAtTenantScopeWithServiceResponseAsync(String filter, Integer top)"
  nameWithType: "DeploymentsInner.listAtTenantScopeWithServiceResponseAsync(String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeWithServiceResponseAsync(String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments at the tenant scope."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listAtTenantScopeWithServiceResponseAsync(String filter, Integer top)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroup(java.lang.String)"
  id: "listByResourceGroup(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "DeploymentsInner.listByResourceGroup(String resourceGroupName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroup(String resourceGroupName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroup*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listByResourceGroup(String resourceGroupName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployments to get. The name is case insensitive."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroup(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listByResourceGroup(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroup(String resourceGroupName, String filter, Integer top)"
  nameWithType: "DeploymentsInner.listByResourceGroup(String resourceGroupName, String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroup(String resourceGroupName, String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroup*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listByResourceGroup(String resourceGroupName, String filter, Integer top)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployments to get. The name is case insensitive."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync(java.lang.String)"
  id: "listByResourceGroupAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupAsync(String resourceGroupName)"
  nameWithType: "DeploymentsInner.listByResourceGroupAsync(String resourceGroupName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync(String resourceGroupName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listByResourceGroupAsync(String resourceGroupName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployments to get. The name is case insensitive."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listByResourceGroupAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupAsync(String resourceGroupName, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listByResourceGroupAsync(String resourceGroupName, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync(String resourceGroupName, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listByResourceGroupAsync(String resourceGroupName, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployments to get. The name is case insensitive."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupAsync(String resourceGroupName, String filter, Integer top)"
  nameWithType: "DeploymentsInner.listByResourceGroupAsync(String resourceGroupName, String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync(String resourceGroupName, String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listByResourceGroupAsync(String resourceGroupName, String filter, Integer top)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployments to get. The name is case insensitive."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupAsync(String resourceGroupName, String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listByResourceGroupAsync(String resourceGroupName, String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync(String resourceGroupName, String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listByResourceGroupAsync(String resourceGroupName, String filter, Integer top, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployments to get. The name is case insensitive."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNext(java.lang.String)"
  id: "listByResourceGroupNext(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupNext(String nextPageLink)"
  nameWithType: "DeploymentsInner.listByResourceGroupNext(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNext(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNext*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listByResourceGroupNext(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextAsync(java.lang.String)"
  id: "listByResourceGroupNextAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupNextAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listByResourceGroupNextAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listByResourceGroupNextAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listByResourceGroupNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listByResourceGroupNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listByResourceGroupNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    - id: "serviceFuture"
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the ServiceFuture object tracking the Retrofit calls"
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextSinglePageAsync(java.lang.String)"
  id: "listByResourceGroupNextSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupNextSinglePageAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listByResourceGroupNextSinglePageAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextSinglePageAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group. ServiceResponse> \\* @param nextPageLink The NextLink from the previous successful call to List operation."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listByResourceGroupNextSinglePageAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextWithServiceResponseAsync(java.lang.String)"
  id: "listByResourceGroupNextWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listByResourceGroupNextWithServiceResponseAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextWithServiceResponseAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listByResourceGroupNextWithServiceResponseAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupSinglePageAsync(java.lang.String)"
  id: "listByResourceGroupSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupSinglePageAsync(String resourceGroupName)"
  nameWithType: "DeploymentsInner.listByResourceGroupSinglePageAsync(String resourceGroupName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupSinglePageAsync(String resourceGroupName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listByResourceGroupSinglePageAsync(String resourceGroupName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployments to get. The name is case insensitive."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupSinglePageAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listByResourceGroupSinglePageAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupSinglePageAsync(String resourceGroupName, String filter, Integer top)"
  nameWithType: "DeploymentsInner.listByResourceGroupSinglePageAsync(String resourceGroupName, String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupSinglePageAsync(String resourceGroupName, String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group. ServiceResponse> \\* @param resourceGroupName The name of the resource group with the deployments to get. The name is case insensitive. ServiceResponse> \\* @param filter The filter to apply on the operation. For example, you can use $filter=provisioningState eq '\\{state\\}'. ServiceResponse> \\* @param top The number of results to get. If null is passed, returns all deployments."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listByResourceGroupSinglePageAsync(String resourceGroupName, String filter, Integer top)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
    - id: "filter"
      type: "java.lang.String"
    - id: "top"
      type: "java.lang.Integer"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupWithServiceResponseAsync(java.lang.String)"
  id: "listByResourceGroupWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupWithServiceResponseAsync(String resourceGroupName)"
  nameWithType: "DeploymentsInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listByResourceGroupWithServiceResponseAsync(String resourceGroupName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployments to get. The name is case insensitive."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listByResourceGroupWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listByResourceGroupWithServiceResponseAsync(String resourceGroupName, String filter, Integer top)"
  nameWithType: "DeploymentsInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName, String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName, String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a resource group."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listByResourceGroupWithServiceResponseAsync(String resourceGroupName, String filter, Integer top)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group with the deployments to get. The name is case insensitive."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNext(java.lang.String)"
  id: "listNext(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listNext(String nextPageLink)"
  nameWithType: "DeploymentsInner.listNext(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNext(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNext*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public PagedList<DeploymentExtendedInner> listNext(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextAsync(java.lang.String)"
  id: "listNextAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listNextAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listNextAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public Observable<Page<DeploymentExtendedInner>> listNextAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  id: "listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  nameWithType: "DeploymentsInner.listNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public ServiceFuture<List<DeploymentExtendedInner>> listNextAsync(String nextPageLink, ServiceFuture<List<DeploymentExtendedInner>> serviceFuture, ListOperationCallback<DeploymentExtendedInner> serviceCallback)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    - id: "serviceFuture"
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the ServiceFuture object tracking the Retrofit calls"
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextSinglePageAsync(java.lang.String)"
  id: "listNextSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listNextSinglePageAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listNextSinglePageAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextSinglePageAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription. ServiceResponse> \\* @param nextPageLink The NextLink from the previous successful call to List operation."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listNextSinglePageAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextWithServiceResponseAsync(java.lang.String)"
  id: "listNextWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "DeploymentsInner.listNextWithServiceResponseAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextWithServiceResponseAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listNextWithServiceResponseAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listSinglePageAsync()"
  id: "listSinglePageAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listSinglePageAsync()"
  nameWithType: "DeploymentsInner.listSinglePageAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listSinglePageAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listSinglePageAsync()"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listSinglePageAsync(java.lang.String,java.lang.Integer)"
  id: "listSinglePageAsync(java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listSinglePageAsync(String filter, Integer top)"
  nameWithType: "DeploymentsInner.listSinglePageAsync(String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listSinglePageAsync(String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription. ServiceResponse> \\* @param filter The filter to apply on the operation. For example, you can use $filter=provisioningState eq '\\{state\\}'. ServiceResponse> \\* @param top The number of results to get. If null is passed, returns all deployments."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listSinglePageAsync(String filter, Integer top)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
    - id: "top"
      type: "java.lang.Integer"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the PagedList&lt;DeploymentExtendedInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listWithServiceResponseAsync()"
  id: "listWithServiceResponseAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listWithServiceResponseAsync()"
  nameWithType: "DeploymentsInner.listWithServiceResponseAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listWithServiceResponseAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listWithServiceResponseAsync()"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listWithServiceResponseAsync(java.lang.String,java.lang.Integer)"
  id: "listWithServiceResponseAsync(java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "listWithServiceResponseAsync(String filter, Integer top)"
  nameWithType: "DeploymentsInner.listWithServiceResponseAsync(String filter, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listWithServiceResponseAsync(String filter, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the deployments for a subscription."
  syntax:
    content: "public Observable<ServiceResponse<Page<DeploymentExtendedInner>>> listWithServiceResponseAsync(String filter, Integer top)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to get. If null is passed, returns all deployments."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
      description: "the observable to the PagedList&lt;DeploymentExtendedInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validate(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validate(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validate*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public DeploymentValidateResultInner validate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group the template will be deployed to. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
      description: "the DeploymentValidateResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public Observable<DeploymentValidateResultInner> validateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group the template will be deployed to. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the observable to the DeploymentValidateResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  id: "validateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.validateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public ServiceFuture<DeploymentValidateResultInner> validateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group the template will be deployed to. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAtManagementGroupScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtManagementGroupScope(String groupId, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAtManagementGroupScope(String groupId, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScope(String groupId, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public DeploymentValidateResultInner validateAtManagementGroupScope(String groupId, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
      description: "the DeploymentValidateResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public Observable<DeploymentValidateResultInner> validateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the observable to the DeploymentValidateResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  id: "validateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.validateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public ServiceFuture<DeploymentValidateResultInner> validateAtManagementGroupScopeAsync(String groupId, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAtManagementGroupScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentValidateResultInner>> validateAtManagementGroupScopeWithServiceResponseAsync(String groupId, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "groupId"
      type: "java.lang.String"
      description: "The management group ID."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>>"
      description: "the observable to the DeploymentValidateResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAtScope(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public DeploymentValidateResultInner validateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
      description: "the DeploymentValidateResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public Observable<DeploymentValidateResultInner> validateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the observable to the DeploymentValidateResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  id: "validateAtScopeAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.validateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public ServiceFuture<DeploymentValidateResultInner> validateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAtScopeWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtScopeWithServiceResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAtScopeWithServiceResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeWithServiceResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentValidateResultInner>> validateAtScopeWithServiceResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "scope"
      type: "java.lang.String"
      description: "The scope of a deployment."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>>"
      description: "the observable to the DeploymentValidateResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public DeploymentValidateResultInner validateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
      description: "the DeploymentValidateResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public Observable<DeploymentValidateResultInner> validateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the observable to the DeploymentValidateResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  id: "validateAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.validateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public ServiceFuture<DeploymentValidateResultInner> validateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentValidateResultInner>> validateAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>>"
      description: "the observable to the DeploymentValidateResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAtTenantScope(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtTenantScope(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAtTenantScope(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScope(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public DeploymentValidateResultInner validateAtTenantScope(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
      description: "the DeploymentValidateResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public Observable<DeploymentValidateResultInner> validateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the observable to the DeploymentValidateResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  id: "validateAtTenantScopeAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.validateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public ServiceFuture<DeploymentValidateResultInner> validateAtTenantScopeAsync(String deploymentName, DeploymentInner parameters, ServiceCallback<DeploymentValidateResultInner> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateAtTenantScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateAtTenantScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateAtTenantScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentValidateResultInner>> validateAtTenantScopeWithServiceResponseAsync(String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>>"
      description: "the observable to the DeploymentValidateResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  id: "validateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.DeploymentInner)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "validateWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsInner.validateWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  syntax:
    content: "public Observable<ServiceResponse<DeploymentValidateResultInner>> validateWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group the template will be deployed to. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>>"
      description: "the observable to the DeploymentValidateResultInner object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIf(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  id: "whatIf(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "whatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsInner.whatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIf*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  syntax:
    content: "public WhatIfOperationResultInner whatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group the template will be deployed to. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to validate."
    return:
      type: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
      description: "the WhatIfOperationResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  id: "whatIfAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "whatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsInner.whatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  syntax:
    content: "public Observable<WhatIfOperationResultInner> whatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group the template will be deployed to. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>)"
  id: "whatIfAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "whatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.whatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  syntax:
    content: "public ServiceFuture<WhatIfOperationResultInner> whatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group the template will be deployed to. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to validate."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  id: "whatIfAtSubscriptionScope(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "whatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsInner.whatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  syntax:
    content: "public WhatIfOperationResultInner whatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to What If."
    return:
      type: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
      description: "the WhatIfOperationResultInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  id: "whatIfAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "whatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsInner.whatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  syntax:
    content: "public Observable<WhatIfOperationResultInner> whatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to What If."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>)"
  id: "whatIfAtSubscriptionScopeAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "whatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
  nameWithType: "DeploymentsInner.whatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  syntax:
    content: "public ServiceFuture<WhatIfOperationResultInner> whatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters, ServiceCallback<WhatIfOperationResultInner> serviceCallback)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to What If."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  id: "whatIfAtSubscriptionScopeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "whatIfAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsInner.whatIfAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentWhatIf parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentWhatIf parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  syntax:
    content: "public Observable<ServiceResponseWithHeaders<WhatIfOperationResultInner,DeploymentsWhatIfAtSubscriptionScopeHeaders>> whatIfAtSubscriptionScopeWithServiceResponseAsync(String deploymentName, DeploymentWhatIf parameters)"
    parameters:
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to What If."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner,com.microsoft.azure.management.resources.DeploymentsWhatIfAtSubscriptionScopeHeaders>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  id: "whatIfWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.DeploymentWhatIf)"
  parent: "com.microsoft.azure.management.resources.implementation.DeploymentsInner"
  langs:
  - "java"
  name: "whatIfWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsInner.whatIfWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  syntax:
    content: "public Observable<ServiceResponseWithHeaders<WhatIfOperationResultInner,DeploymentsWhatIfHeaders>> whatIfWithServiceResponseAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group the template will be deployed to. The name is case insensitive."
    - id: "deploymentName"
      type: "java.lang.String"
      description: "The name of the deployment."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.DeploymentWhatIf"
      description: "Parameters to validate."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner,com.microsoft.azure.management.resources.DeploymentsWhatIfHeaders>>"
      description: "the observable for the request"
references:
- uid: "retrofit2.Retrofit"
  spec.java:
  - uid: "retrofit2.Retrofit"
    name: "Retrofit"
    fullName: "retrofit2.Retrofit"
- uid: "com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl"
  name: "ResourceManagementClientImpl"
  nameWithType: "ResourceManagementClientImpl"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.DeploymentsInner*"
  name: "DeploymentsInner"
  nameWithType: "DeploymentsInner.DeploymentsInner"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.DeploymentsInner"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScope*"
  name: "deleteAtScope"
  nameWithType: "DeploymentsInner.deleteAtScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeAsync*"
  name: "deleteAtScopeAsync"
  nameWithType: "DeploymentsInner.deleteAtScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<java.lang.Void>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeWithServiceResponseAsync*"
  name: "deleteAtScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.deleteAtScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScope*"
  name: "beginDeleteAtScope"
  nameWithType: "DeploymentsInner.beginDeleteAtScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeAsync*"
  name: "beginDeleteAtScopeAsync"
  nameWithType: "DeploymentsInner.beginDeleteAtScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeWithServiceResponseAsync*"
  name: "beginDeleteAtScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.beginDeleteAtScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScope*"
  name: "checkExistenceAtScope"
  nameWithType: "DeploymentsInner.checkExistenceAtScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.rest.ServiceCallback<java.lang.Boolean>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<java.lang.Boolean>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeAsync*"
  name: "checkExistenceAtScopeAsync"
  nameWithType: "DeploymentsInner.checkExistenceAtScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<java.lang.Boolean>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Boolean>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeWithServiceResponseAsync*"
  name: "checkExistenceAtScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.checkExistenceAtScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
  name: "DeploymentInner"
  nameWithType: "DeploymentInner"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentInner"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
  name: "DeploymentExtendedInner"
  nameWithType: "DeploymentExtendedInner"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScope*"
  name: "createOrUpdateAtScope"
  nameWithType: "DeploymentsInner.createOrUpdateAtScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
    name: "DeploymentExtendedInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
    name: "DeploymentExtendedInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeAsync*"
  name: "createOrUpdateAtScopeAsync"
  nameWithType: "DeploymentsInner.createOrUpdateAtScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
    name: "DeploymentExtendedInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
    name: "DeploymentExtendedInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeWithServiceResponseAsync*"
  name: "createOrUpdateAtScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.createOrUpdateAtScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScope*"
  name: "beginCreateOrUpdateAtScope"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeAsync*"
  name: "beginCreateOrUpdateAtScopeAsync"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeWithServiceResponseAsync*"
  name: "beginCreateOrUpdateAtScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScope*"
  name: "getAtScope"
  nameWithType: "DeploymentsInner.getAtScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeAsync*"
  name: "getAtScopeAsync"
  nameWithType: "DeploymentsInner.getAtScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeWithServiceResponseAsync*"
  name: "getAtScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.getAtScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScope*"
  name: "cancelAtScope"
  nameWithType: "DeploymentsInner.cancelAtScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeAsync*"
  name: "cancelAtScopeAsync"
  nameWithType: "DeploymentsInner.cancelAtScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeWithServiceResponseAsync*"
  name: "cancelAtScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.cancelAtScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
  name: "DeploymentValidateResultInner"
  nameWithType: "DeploymentValidateResultInner"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScope*"
  name: "validateAtScope"
  nameWithType: "DeploymentsInner.validateAtScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
    name: "DeploymentValidateResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
    name: "DeploymentValidateResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeAsync*"
  name: "validateAtScopeAsync"
  nameWithType: "DeploymentsInner.validateAtScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
    name: "DeploymentValidateResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
    name: "DeploymentValidateResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentValidateResultInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeWithServiceResponseAsync*"
  name: "validateAtScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.validateAtScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
  name: "DeploymentExportResultInner"
  nameWithType: "DeploymentExportResultInner"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScope*"
  name: "exportTemplateAtScope"
  nameWithType: "DeploymentsInner.exportTemplateAtScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
    name: "DeploymentExportResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
    name: "DeploymentExportResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeAsync*"
  name: "exportTemplateAtScopeAsync"
  nameWithType: "DeploymentsInner.exportTemplateAtScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
    name: "DeploymentExportResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
    name: "DeploymentExportResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExportResultInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeWithServiceResponseAsync*"
  name: "exportTemplateAtScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.exportTemplateAtScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
  spec.java:
  - uid: "com.microsoft.azure.PagedList"
    name: "PagedList"
    fullName: "com.microsoft.azure.PagedList"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
    name: "DeploymentExtendedInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScope*"
  name: "listAtScope"
  nameWithType: "DeploymentsInner.listAtScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
  spec.java:
  - uid: "com.microsoft.azure.ListOperationCallback"
    name: "ListOperationCallback"
    fullName: "com.microsoft.azure.ListOperationCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
    name: "DeploymentExtendedInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
    name: "DeploymentExtendedInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync*"
  name: "listAtScopeAsync"
  nameWithType: "DeploymentsInner.listAtScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.Page"
    name: "Page"
    fullName: "com.microsoft.azure.Page"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
    name: "DeploymentExtendedInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.Page"
    name: "Page"
    fullName: "com.microsoft.azure.Page"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
    name: "DeploymentExtendedInner"
    fullName: "com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeWithServiceResponseAsync*"
  name: "listAtScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.listAtScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeSinglePageAsync*"
  name: "listAtScopeSinglePageAsync"
  nameWithType: "DeploymentsInner.listAtScopeSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScope*"
  name: "deleteAtTenantScope"
  nameWithType: "DeploymentsInner.deleteAtTenantScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeAsync*"
  name: "deleteAtTenantScopeAsync"
  nameWithType: "DeploymentsInner.deleteAtTenantScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeWithServiceResponseAsync*"
  name: "deleteAtTenantScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.deleteAtTenantScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtTenantScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScope*"
  name: "beginDeleteAtTenantScope"
  nameWithType: "DeploymentsInner.beginDeleteAtTenantScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeAsync*"
  name: "beginDeleteAtTenantScopeAsync"
  nameWithType: "DeploymentsInner.beginDeleteAtTenantScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeWithServiceResponseAsync*"
  name: "beginDeleteAtTenantScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.beginDeleteAtTenantScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtTenantScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScope*"
  name: "checkExistenceAtTenantScope"
  nameWithType: "DeploymentsInner.checkExistenceAtTenantScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeAsync*"
  name: "checkExistenceAtTenantScopeAsync"
  nameWithType: "DeploymentsInner.checkExistenceAtTenantScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeWithServiceResponseAsync*"
  name: "checkExistenceAtTenantScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.checkExistenceAtTenantScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtTenantScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScope*"
  name: "createOrUpdateAtTenantScope"
  nameWithType: "DeploymentsInner.createOrUpdateAtTenantScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeAsync*"
  name: "createOrUpdateAtTenantScopeAsync"
  nameWithType: "DeploymentsInner.createOrUpdateAtTenantScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeWithServiceResponseAsync*"
  name: "createOrUpdateAtTenantScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.createOrUpdateAtTenantScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtTenantScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScope*"
  name: "beginCreateOrUpdateAtTenantScope"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtTenantScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync*"
  name: "beginCreateOrUpdateAtTenantScopeAsync"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeWithServiceResponseAsync*"
  name: "beginCreateOrUpdateAtTenantScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtTenantScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtTenantScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScope*"
  name: "getAtTenantScope"
  nameWithType: "DeploymentsInner.getAtTenantScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeAsync*"
  name: "getAtTenantScopeAsync"
  nameWithType: "DeploymentsInner.getAtTenantScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeWithServiceResponseAsync*"
  name: "getAtTenantScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.getAtTenantScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtTenantScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScope*"
  name: "cancelAtTenantScope"
  nameWithType: "DeploymentsInner.cancelAtTenantScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeAsync*"
  name: "cancelAtTenantScopeAsync"
  nameWithType: "DeploymentsInner.cancelAtTenantScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeWithServiceResponseAsync*"
  name: "cancelAtTenantScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.cancelAtTenantScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtTenantScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScope*"
  name: "validateAtTenantScope"
  nameWithType: "DeploymentsInner.validateAtTenantScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeAsync*"
  name: "validateAtTenantScopeAsync"
  nameWithType: "DeploymentsInner.validateAtTenantScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeWithServiceResponseAsync*"
  name: "validateAtTenantScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.validateAtTenantScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtTenantScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScope*"
  name: "exportTemplateAtTenantScope"
  nameWithType: "DeploymentsInner.exportTemplateAtTenantScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeAsync*"
  name: "exportTemplateAtTenantScopeAsync"
  nameWithType: "DeploymentsInner.exportTemplateAtTenantScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeWithServiceResponseAsync*"
  name: "exportTemplateAtTenantScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.exportTemplateAtTenantScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtTenantScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScope*"
  name: "listAtTenantScope"
  nameWithType: "DeploymentsInner.listAtTenantScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync*"
  name: "listAtTenantScopeAsync"
  nameWithType: "DeploymentsInner.listAtTenantScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeWithServiceResponseAsync*"
  name: "listAtTenantScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.listAtTenantScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeSinglePageAsync*"
  name: "listAtTenantScopeSinglePageAsync"
  nameWithType: "DeploymentsInner.listAtTenantScopeSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScope*"
  name: "deleteAtManagementGroupScope"
  nameWithType: "DeploymentsInner.deleteAtManagementGroupScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeAsync*"
  name: "deleteAtManagementGroupScopeAsync"
  nameWithType: "DeploymentsInner.deleteAtManagementGroupScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeWithServiceResponseAsync*"
  name: "deleteAtManagementGroupScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.deleteAtManagementGroupScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtManagementGroupScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScope*"
  name: "beginDeleteAtManagementGroupScope"
  nameWithType: "DeploymentsInner.beginDeleteAtManagementGroupScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeAsync*"
  name: "beginDeleteAtManagementGroupScopeAsync"
  nameWithType: "DeploymentsInner.beginDeleteAtManagementGroupScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeWithServiceResponseAsync*"
  name: "beginDeleteAtManagementGroupScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.beginDeleteAtManagementGroupScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtManagementGroupScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScope*"
  name: "checkExistenceAtManagementGroupScope"
  nameWithType: "DeploymentsInner.checkExistenceAtManagementGroupScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeAsync*"
  name: "checkExistenceAtManagementGroupScopeAsync"
  nameWithType: "DeploymentsInner.checkExistenceAtManagementGroupScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeWithServiceResponseAsync*"
  name: "checkExistenceAtManagementGroupScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.checkExistenceAtManagementGroupScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtManagementGroupScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScope*"
  name: "createOrUpdateAtManagementGroupScope"
  nameWithType: "DeploymentsInner.createOrUpdateAtManagementGroupScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync*"
  name: "createOrUpdateAtManagementGroupScopeAsync"
  nameWithType: "DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeWithServiceResponseAsync*"
  name: "createOrUpdateAtManagementGroupScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.createOrUpdateAtManagementGroupScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtManagementGroupScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScope*"
  name: "beginCreateOrUpdateAtManagementGroupScope"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtManagementGroupScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync*"
  name: "beginCreateOrUpdateAtManagementGroupScopeAsync"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeWithServiceResponseAsync*"
  name: "beginCreateOrUpdateAtManagementGroupScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtManagementGroupScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScope*"
  name: "getAtManagementGroupScope"
  nameWithType: "DeploymentsInner.getAtManagementGroupScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeAsync*"
  name: "getAtManagementGroupScopeAsync"
  nameWithType: "DeploymentsInner.getAtManagementGroupScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeWithServiceResponseAsync*"
  name: "getAtManagementGroupScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.getAtManagementGroupScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtManagementGroupScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScope*"
  name: "cancelAtManagementGroupScope"
  nameWithType: "DeploymentsInner.cancelAtManagementGroupScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeAsync*"
  name: "cancelAtManagementGroupScopeAsync"
  nameWithType: "DeploymentsInner.cancelAtManagementGroupScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeWithServiceResponseAsync*"
  name: "cancelAtManagementGroupScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.cancelAtManagementGroupScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtManagementGroupScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScope*"
  name: "validateAtManagementGroupScope"
  nameWithType: "DeploymentsInner.validateAtManagementGroupScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeAsync*"
  name: "validateAtManagementGroupScopeAsync"
  nameWithType: "DeploymentsInner.validateAtManagementGroupScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeWithServiceResponseAsync*"
  name: "validateAtManagementGroupScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.validateAtManagementGroupScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtManagementGroupScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScope*"
  name: "exportTemplateAtManagementGroupScope"
  nameWithType: "DeploymentsInner.exportTemplateAtManagementGroupScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeAsync*"
  name: "exportTemplateAtManagementGroupScopeAsync"
  nameWithType: "DeploymentsInner.exportTemplateAtManagementGroupScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeWithServiceResponseAsync*"
  name: "exportTemplateAtManagementGroupScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.exportTemplateAtManagementGroupScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtManagementGroupScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScope*"
  name: "listAtManagementGroupScope"
  nameWithType: "DeploymentsInner.listAtManagementGroupScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync*"
  name: "listAtManagementGroupScopeAsync"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync*"
  name: "listAtManagementGroupScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeSinglePageAsync*"
  name: "listAtManagementGroupScopeSinglePageAsync"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScope*"
  name: "deleteAtSubscriptionScope"
  nameWithType: "DeploymentsInner.deleteAtSubscriptionScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeAsync*"
  name: "deleteAtSubscriptionScopeAsync"
  nameWithType: "DeploymentsInner.deleteAtSubscriptionScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeWithServiceResponseAsync*"
  name: "deleteAtSubscriptionScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.deleteAtSubscriptionScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAtSubscriptionScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScope*"
  name: "beginDeleteAtSubscriptionScope"
  nameWithType: "DeploymentsInner.beginDeleteAtSubscriptionScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeAsync*"
  name: "beginDeleteAtSubscriptionScopeAsync"
  nameWithType: "DeploymentsInner.beginDeleteAtSubscriptionScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeWithServiceResponseAsync*"
  name: "beginDeleteAtSubscriptionScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.beginDeleteAtSubscriptionScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAtSubscriptionScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScope*"
  name: "checkExistenceAtSubscriptionScope"
  nameWithType: "DeploymentsInner.checkExistenceAtSubscriptionScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeAsync*"
  name: "checkExistenceAtSubscriptionScopeAsync"
  nameWithType: "DeploymentsInner.checkExistenceAtSubscriptionScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeWithServiceResponseAsync*"
  name: "checkExistenceAtSubscriptionScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.checkExistenceAtSubscriptionScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAtSubscriptionScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScope*"
  name: "createOrUpdateAtSubscriptionScope"
  nameWithType: "DeploymentsInner.createOrUpdateAtSubscriptionScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync*"
  name: "createOrUpdateAtSubscriptionScopeAsync"
  nameWithType: "DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeWithServiceResponseAsync*"
  name: "createOrUpdateAtSubscriptionScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.createOrUpdateAtSubscriptionScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAtSubscriptionScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScope*"
  name: "beginCreateOrUpdateAtSubscriptionScope"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtSubscriptionScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync*"
  name: "beginCreateOrUpdateAtSubscriptionScopeAsync"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeWithServiceResponseAsync*"
  name: "beginCreateOrUpdateAtSubscriptionScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAtSubscriptionScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScope*"
  name: "getAtSubscriptionScope"
  nameWithType: "DeploymentsInner.getAtSubscriptionScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeAsync*"
  name: "getAtSubscriptionScopeAsync"
  nameWithType: "DeploymentsInner.getAtSubscriptionScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeWithServiceResponseAsync*"
  name: "getAtSubscriptionScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.getAtSubscriptionScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getAtSubscriptionScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScope*"
  name: "cancelAtSubscriptionScope"
  nameWithType: "DeploymentsInner.cancelAtSubscriptionScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeAsync*"
  name: "cancelAtSubscriptionScopeAsync"
  nameWithType: "DeploymentsInner.cancelAtSubscriptionScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeWithServiceResponseAsync*"
  name: "cancelAtSubscriptionScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.cancelAtSubscriptionScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAtSubscriptionScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScope*"
  name: "validateAtSubscriptionScope"
  nameWithType: "DeploymentsInner.validateAtSubscriptionScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeAsync*"
  name: "validateAtSubscriptionScopeAsync"
  nameWithType: "DeploymentsInner.validateAtSubscriptionScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeWithServiceResponseAsync*"
  name: "validateAtSubscriptionScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.validateAtSubscriptionScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAtSubscriptionScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.DeploymentWhatIf"
  name: "DeploymentWhatIf"
  nameWithType: "DeploymentWhatIf"
  fullName: "com.microsoft.azure.management.resources.DeploymentWhatIf"
- uid: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
  name: "WhatIfOperationResultInner"
  nameWithType: "WhatIfOperationResultInner"
  fullName: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScope*"
  name: "whatIfAtSubscriptionScope"
  nameWithType: "DeploymentsInner.whatIfAtSubscriptionScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
    name: "WhatIfOperationResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
    name: "WhatIfOperationResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeAsync*"
  name: "whatIfAtSubscriptionScopeAsync"
  nameWithType: "DeploymentsInner.whatIfAtSubscriptionScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
    name: "WhatIfOperationResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner,com.microsoft.azure.management.resources.DeploymentsWhatIfAtSubscriptionScopeHeaders>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponseWithHeaders"
    name: "ServiceResponseWithHeaders"
    fullName: "com.microsoft.rest.ServiceResponseWithHeaders"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
    name: "WhatIfOperationResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.management.resources.DeploymentsWhatIfAtSubscriptionScopeHeaders"
    name: "DeploymentsWhatIfAtSubscriptionScopeHeaders"
    fullName: "com.microsoft.azure.management.resources.DeploymentsWhatIfAtSubscriptionScopeHeaders"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeWithServiceResponseAsync*"
  name: "whatIfAtSubscriptionScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.whatIfAtSubscriptionScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAtSubscriptionScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScope*"
  name: "beginWhatIfAtSubscriptionScope"
  nameWithType: "DeploymentsInner.beginWhatIfAtSubscriptionScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync*"
  name: "beginWhatIfAtSubscriptionScopeAsync"
  nameWithType: "DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeWithServiceResponseAsync*"
  name: "beginWhatIfAtSubscriptionScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.beginWhatIfAtSubscriptionScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAtSubscriptionScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScope*"
  name: "exportTemplateAtSubscriptionScope"
  nameWithType: "DeploymentsInner.exportTemplateAtSubscriptionScope"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeAsync*"
  name: "exportTemplateAtSubscriptionScopeAsync"
  nameWithType: "DeploymentsInner.exportTemplateAtSubscriptionScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeWithServiceResponseAsync*"
  name: "exportTemplateAtSubscriptionScopeWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.exportTemplateAtSubscriptionScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAtSubscriptionScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.list*"
  name: "list"
  nameWithType: "DeploymentsInner.list"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.list"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync*"
  name: "listAsync"
  nameWithType: "DeploymentsInner.listAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listWithServiceResponseAsync*"
  name: "listWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.listWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listSinglePageAsync*"
  name: "listSinglePageAsync"
  nameWithType: "DeploymentsInner.listSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.delete*"
  name: "delete"
  nameWithType: "DeploymentsInner.delete"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.delete"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAsync*"
  name: "deleteAsync"
  nameWithType: "DeploymentsInner.deleteAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteWithServiceResponseAsync*"
  name: "deleteWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.deleteWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.deleteWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDelete*"
  name: "beginDelete"
  nameWithType: "DeploymentsInner.beginDelete"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDelete"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAsync*"
  name: "beginDeleteAsync"
  nameWithType: "DeploymentsInner.beginDeleteAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteWithServiceResponseAsync*"
  name: "beginDeleteWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.beginDeleteWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginDeleteWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistence*"
  name: "checkExistence"
  nameWithType: "DeploymentsInner.checkExistence"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistence"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAsync*"
  name: "checkExistenceAsync"
  nameWithType: "DeploymentsInner.checkExistenceAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceWithServiceResponseAsync*"
  name: "checkExistenceWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.checkExistenceWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.checkExistenceWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdate*"
  name: "createOrUpdate"
  nameWithType: "DeploymentsInner.createOrUpdate"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdate"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAsync*"
  name: "createOrUpdateAsync"
  nameWithType: "DeploymentsInner.createOrUpdateAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateWithServiceResponseAsync*"
  name: "createOrUpdateWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.createOrUpdateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.createOrUpdateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdate*"
  name: "beginCreateOrUpdate"
  nameWithType: "DeploymentsInner.beginCreateOrUpdate"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdate"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAsync*"
  name: "beginCreateOrUpdateAsync"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateWithServiceResponseAsync*"
  name: "beginCreateOrUpdateWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.beginCreateOrUpdateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginCreateOrUpdateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroup*"
  name: "getByResourceGroup"
  nameWithType: "DeploymentsInner.getByResourceGroup"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroup"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupAsync*"
  name: "getByResourceGroupAsync"
  nameWithType: "DeploymentsInner.getByResourceGroupAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupWithServiceResponseAsync*"
  name: "getByResourceGroupWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.getByResourceGroupWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.getByResourceGroupWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancel*"
  name: "cancel"
  nameWithType: "DeploymentsInner.cancel"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancel"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAsync*"
  name: "cancelAsync"
  nameWithType: "DeploymentsInner.cancelAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelWithServiceResponseAsync*"
  name: "cancelWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.cancelWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.cancelWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validate*"
  name: "validate"
  nameWithType: "DeploymentsInner.validate"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validate"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAsync*"
  name: "validateAsync"
  nameWithType: "DeploymentsInner.validateAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateWithServiceResponseAsync*"
  name: "validateWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.validateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.validateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIf*"
  name: "whatIf"
  nameWithType: "DeploymentsInner.whatIf"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIf"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAsync*"
  name: "whatIfAsync"
  nameWithType: "DeploymentsInner.whatIfAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner,com.microsoft.azure.management.resources.DeploymentsWhatIfHeaders>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponseWithHeaders"
    name: "ServiceResponseWithHeaders"
    fullName: "com.microsoft.rest.ServiceResponseWithHeaders"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
    name: "WhatIfOperationResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.management.resources.DeploymentsWhatIfHeaders"
    name: "DeploymentsWhatIfHeaders"
    fullName: "com.microsoft.azure.management.resources.DeploymentsWhatIfHeaders"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfWithServiceResponseAsync*"
  name: "whatIfWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.whatIfWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.whatIfWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIf*"
  name: "beginWhatIf"
  nameWithType: "DeploymentsInner.beginWhatIf"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIf"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAsync*"
  name: "beginWhatIfAsync"
  nameWithType: "DeploymentsInner.beginWhatIfAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfWithServiceResponseAsync*"
  name: "beginWhatIfWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.beginWhatIfWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.beginWhatIfWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplate*"
  name: "exportTemplate"
  nameWithType: "DeploymentsInner.exportTemplate"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplate"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAsync*"
  name: "exportTemplateAsync"
  nameWithType: "DeploymentsInner.exportTemplateAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateWithServiceResponseAsync*"
  name: "exportTemplateWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.exportTemplateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.exportTemplateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroup*"
  name: "listByResourceGroup"
  nameWithType: "DeploymentsInner.listByResourceGroup"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroup"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync*"
  name: "listByResourceGroupAsync"
  nameWithType: "DeploymentsInner.listByResourceGroupAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupWithServiceResponseAsync*"
  name: "listByResourceGroupWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.listByResourceGroupWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupSinglePageAsync*"
  name: "listByResourceGroupSinglePageAsync"
  nameWithType: "DeploymentsInner.listByResourceGroupSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.microsoft.azure.management.resources.implementation.TemplateHashResultInner"
  name: "TemplateHashResultInner"
  nameWithType: "TemplateHashResultInner"
  fullName: "com.microsoft.azure.management.resources.implementation.TemplateHashResultInner"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHash*"
  name: "calculateTemplateHash"
  nameWithType: "DeploymentsInner.calculateTemplateHash"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHash"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.TemplateHashResultInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.TemplateHashResultInner"
    name: "TemplateHashResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.TemplateHashResultInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.TemplateHashResultInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.TemplateHashResultInner"
    name: "TemplateHashResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.TemplateHashResultInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashAsync*"
  name: "calculateTemplateHashAsync"
  nameWithType: "DeploymentsInner.calculateTemplateHashAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.resources.implementation.TemplateHashResultInner>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.TemplateHashResultInner"
    name: "TemplateHashResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.TemplateHashResultInner"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.TemplateHashResultInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.TemplateHashResultInner"
    name: "TemplateHashResultInner"
    fullName: "com.microsoft.azure.management.resources.implementation.TemplateHashResultInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashWithServiceResponseAsync*"
  name: "calculateTemplateHashWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.calculateTemplateHashWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.calculateTemplateHashWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNext*"
  name: "listAtScopeNext"
  nameWithType: "DeploymentsInner.listAtScopeNext"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNext"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextAsync*"
  name: "listAtScopeNextAsync"
  nameWithType: "DeploymentsInner.listAtScopeNextAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextWithServiceResponseAsync*"
  name: "listAtScopeNextWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.listAtScopeNextWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextSinglePageAsync*"
  name: "listAtScopeNextSinglePageAsync"
  nameWithType: "DeploymentsInner.listAtScopeNextSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtScopeNextSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNext*"
  name: "listAtTenantScopeNext"
  nameWithType: "DeploymentsInner.listAtTenantScopeNext"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNext"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextAsync*"
  name: "listAtTenantScopeNextAsync"
  nameWithType: "DeploymentsInner.listAtTenantScopeNextAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextWithServiceResponseAsync*"
  name: "listAtTenantScopeNextWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.listAtTenantScopeNextWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextSinglePageAsync*"
  name: "listAtTenantScopeNextSinglePageAsync"
  nameWithType: "DeploymentsInner.listAtTenantScopeNextSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtTenantScopeNextSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNext*"
  name: "listAtManagementGroupScopeNext"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeNext"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNext"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextAsync*"
  name: "listAtManagementGroupScopeNextAsync"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeNextAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextWithServiceResponseAsync*"
  name: "listAtManagementGroupScopeNextWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeNextWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextSinglePageAsync*"
  name: "listAtManagementGroupScopeNextSinglePageAsync"
  nameWithType: "DeploymentsInner.listAtManagementGroupScopeNextSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listAtManagementGroupScopeNextSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNext*"
  name: "listNext"
  nameWithType: "DeploymentsInner.listNext"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNext"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextAsync*"
  name: "listNextAsync"
  nameWithType: "DeploymentsInner.listNextAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextWithServiceResponseAsync*"
  name: "listNextWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.listNextWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextSinglePageAsync*"
  name: "listNextSinglePageAsync"
  nameWithType: "DeploymentsInner.listNextSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listNextSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNext*"
  name: "listByResourceGroupNext"
  nameWithType: "DeploymentsInner.listByResourceGroupNext"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNext"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextAsync*"
  name: "listByResourceGroupNextAsync"
  nameWithType: "DeploymentsInner.listByResourceGroupNextAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextWithServiceResponseAsync*"
  name: "listByResourceGroupNextWithServiceResponseAsync"
  nameWithType: "DeploymentsInner.listByResourceGroupNextWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextSinglePageAsync*"
  name: "listByResourceGroupNextSinglePageAsync"
  nameWithType: "DeploymentsInner.listByResourceGroupNextSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.listByResourceGroupNextSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
  name: "InnerSupportsGet<DeploymentExtendedInner>"
  nameWithType: "InnerSupportsGet<DeploymentExtendedInner>"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>"
  name: "InnerSupportsDelete<Void>"
  nameWithType: "InnerSupportsDelete<Void>"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
  name: "InnerSupportsListing<DeploymentExtendedInner>"
  nameWithType: "InnerSupportsListing<DeploymentExtendedInner>"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing<com.microsoft.azure.management.resources.implementation.DeploymentExtendedInner>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.DeploymentsService"
  name: "DeploymentsInner.DeploymentsService"
  nameWithType: "DeploymentsInner.DeploymentsService"
  fullName: "com.microsoft.azure.management.resources.implementation.DeploymentsInner.DeploymentsService"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "com.microsoft.rest.ServiceCallback"
  name: "ServiceCallback"
  nameWithType: "ServiceCallback"
  fullName: "com.microsoft.rest.ServiceCallback"
- uid: "com.microsoft.rest.ServiceFuture"
  name: "ServiceFuture"
  nameWithType: "ServiceFuture"
  fullName: "com.microsoft.rest.ServiceFuture"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
- uid: "com.microsoft.rest.ServiceResponse"
  name: "ServiceResponse"
  nameWithType: "ServiceResponse"
  fullName: "com.microsoft.rest.ServiceResponse"
- uid: "java.lang.Boolean"
  name: "Boolean"
  nameWithType: "Boolean"
  fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.PagedList"
  name: "PagedList"
  nameWithType: "PagedList"
  fullName: "com.microsoft.azure.PagedList"
- uid: "com.microsoft.azure.ListOperationCallback"
  name: "ListOperationCallback"
  nameWithType: "ListOperationCallback"
  fullName: "com.microsoft.azure.ListOperationCallback"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.microsoft.azure.Page"
  name: "Page"
  nameWithType: "Page"
  fullName: "com.microsoft.azure.Page"
- uid: "com.microsoft.rest.ServiceResponseWithHeaders"
  name: "ServiceResponseWithHeaders"
  nameWithType: "ServiceResponseWithHeaders"
  fullName: "com.microsoft.rest.ServiceResponseWithHeaders"
- uid: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner,com.microsoft.azure.management.resources.DeploymentsWhatIfAtSubscriptionScopeHeaders"
  name: "WhatIfOperationResultInner,DeploymentsWhatIfAtSubscriptionScopeHeaders"
  nameWithType: "WhatIfOperationResultInner,DeploymentsWhatIfAtSubscriptionScopeHeaders"
  fullName: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner,com.microsoft.azure.management.resources.DeploymentsWhatIfAtSubscriptionScopeHeaders"
- uid: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner,com.microsoft.azure.management.resources.DeploymentsWhatIfHeaders"
  name: "WhatIfOperationResultInner,DeploymentsWhatIfHeaders"
  nameWithType: "WhatIfOperationResultInner,DeploymentsWhatIfHeaders"
  fullName: "com.microsoft.azure.management.resources.implementation.WhatIfOperationResultInner,com.microsoft.azure.management.resources.DeploymentsWhatIfHeaders"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet"
  name: "InnerSupportsGet"
  nameWithType: "InnerSupportsGet"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete"
  name: "InnerSupportsDelete"
  nameWithType: "InnerSupportsDelete"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing"
  name: "InnerSupportsListing"
  nameWithType: "InnerSupportsListing"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing"
