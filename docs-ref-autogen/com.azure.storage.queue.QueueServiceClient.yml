### YamlMime:ManagedReference
items:
- uid: com.azure.storage.queue.QueueServiceClient
  id: QueueServiceClient
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue
  children:
  - com.azure.storage.queue.QueueServiceClient.createQueue(java.lang.String)
  - com.azure.storage.queue.QueueServiceClient.createQueueWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.queue.QueueServiceClient.deleteQueue(java.lang.String)
  - com.azure.storage.queue.QueueServiceClient.deleteQueueWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.queue.QueueServiceClient.generateAccountSas(com.azure.storage.common.sas.AccountSasSignatureValues)
  - com.azure.storage.queue.QueueServiceClient.getAccountName()
  - com.azure.storage.queue.QueueServiceClient.getHttpPipeline()
  - com.azure.storage.queue.QueueServiceClient.getProperties()
  - com.azure.storage.queue.QueueServiceClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.queue.QueueServiceClient.getQueueClient(java.lang.String)
  - com.azure.storage.queue.QueueServiceClient.getQueueServiceUrl()
  - com.azure.storage.queue.QueueServiceClient.getServiceVersion()
  - com.azure.storage.queue.QueueServiceClient.getStatistics()
  - com.azure.storage.queue.QueueServiceClient.getStatisticsWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.queue.QueueServiceClient.listQueues()
  - com.azure.storage.queue.QueueServiceClient.listQueues(com.azure.storage.queue.models.QueuesSegmentOptions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.queue.QueueServiceClient.setProperties(com.azure.storage.queue.models.QueueServiceProperties)
  - com.azure.storage.queue.QueueServiceClient.setPropertiesWithResponse(com.azure.storage.queue.models.QueueServiceProperties,java.time.Duration,com.azure.core.util.Context)
  langs:
  - java
  name: QueueServiceClient
  nameWithType: QueueServiceClient
  fullName: com.azure.storage.queue.QueueServiceClient
  type: Class
  package: com.azure.storage.queue
  summary: >-
    This class provides a client that contains all the operations for interacting with a queue account in Azure Storage. Operations allowed by the client are creating, listing, and deleting queues, retrieving and updating properties of the account, and retrieving statistics of the account.


    **Instantiating an Synchronous Queue Service Client**


    ```java

    QueueServiceClient client = new QueueServiceClientBuilder()
         .connectionString("connectionstring")
         .endpoint("endpoint")
         .buildClient();
    ```


    View <xref uid="com.azure.storage.queue.QueueServiceClientBuilder" data-throw-if-not-resolved="false">this</xref> for additional ways to construct the client.
  syntax:
    content: public final class QueueServiceClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.queue.QueueServiceClient.QueueServiceClient(com.azure.storage.queue.QueueServiceAsyncClient)
  id: QueueServiceClient(com.azure.storage.queue.QueueServiceAsyncClient)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: QueueServiceClient(QueueServiceAsyncClient client)
  nameWithType: QueueServiceClient.QueueServiceClient(QueueServiceAsyncClient client)
  fullName: com.azure.storage.queue.QueueServiceClient.QueueServiceClient(QueueServiceAsyncClient client)
  overload: com.azure.storage.queue.QueueServiceClient.QueueServiceClient*
  type: Constructor
  package: com.azure.storage.queue
  summary: Creates a QueueServiceClient that wraps a QueueServiceAsyncClient and blocks requests.
  syntax:
    content: " QueueServiceClient(QueueServiceAsyncClient client)"
    parameters:
    - id: client
      type: com.azure.storage.queue.QueueServiceAsyncClient
      description: QueueServiceAsyncClient that is used to send requests
- uid: com.azure.storage.queue.QueueServiceClient.createQueue(java.lang.String)
  id: createQueue(java.lang.String)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: createQueue(String queueName)
  nameWithType: QueueServiceClient.createQueue(String queueName)
  fullName: com.azure.storage.queue.QueueServiceClient.createQueue(String queueName)
  overload: com.azure.storage.queue.QueueServiceClient.createQueue*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Creates a queue in the storage account with the specified name and returns a QueueClient to interact with it.


    **Code Samples**


    Create the queue "test"


    ```java

    client.createQueue("myqueue");
     System.out.println("Complete creating queue.");
    ```
  syntax:
    content: public QueueClient createQueue(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue
    return:
      type: com.azure.storage.queue.QueueClient
      description: A response containing the QueueClient and the status of creating the queue
- uid: com.azure.storage.queue.QueueServiceClient.createQueueWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)
  id: createQueueWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: createQueueWithResponse(String queueName, Map<String,String> metadata, Duration timeout, Context context)
  nameWithType: QueueServiceClient.createQueueWithResponse(String queueName, Map<String,String> metadata, Duration timeout, Context context)
  fullName: com.azure.storage.queue.QueueServiceClient.createQueueWithResponse(String queueName, Map<String,String> metadata, Duration timeout, Context context)
  overload: com.azure.storage.queue.QueueServiceClient.createQueueWithResponse*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Creates a queue in the storage account with the specified name and metadata and returns a QueueClient to interact with it.


    **Code Samples**


    Create the queue "test" with metadata "queue:metadata"


    ```java

    Response<QueueClient> response = client.createQueueWithResponse("myqueue",
         Collections.singletonMap("queue", "metadata"), Duration.ofSeconds(1), new Context(key1, value1));
     System.out.println("Complete creating queue with status code: " + response.getStatusCode());
    ```
  syntax:
    content: public Response<QueueClient> createQueueWithResponse(String queueName, Map<String,String> metadata, Duration timeout, Context context)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the queue
    - id: timeout
      type: java.time.Duration
      description: >-
        An optional timeout applied to the operation. If a response is not returned before the timeout
         concludes a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.queue.QueueClient>
      description: A response containing the QueueClient and the status of creating the queue
- uid: com.azure.storage.queue.QueueServiceClient.deleteQueue(java.lang.String)
  id: deleteQueue(java.lang.String)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: deleteQueue(String queueName)
  nameWithType: QueueServiceClient.deleteQueue(String queueName)
  fullName: com.azure.storage.queue.QueueServiceClient.deleteQueue(String queueName)
  overload: com.azure.storage.queue.QueueServiceClient.deleteQueue*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Deletes a queue in the storage account


    **Code Samples**


    Delete the queue "test"


    ```java

    client.deleteQueue("myqueue");
     System.out.println("Complete deleting the queue.");
    ```
  syntax:
    content: public void deleteQueue(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue
- uid: com.azure.storage.queue.QueueServiceClient.deleteQueueWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  id: deleteQueueWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: deleteQueueWithResponse(String queueName, Duration timeout, Context context)
  nameWithType: QueueServiceClient.deleteQueueWithResponse(String queueName, Duration timeout, Context context)
  fullName: com.azure.storage.queue.QueueServiceClient.deleteQueueWithResponse(String queueName, Duration timeout, Context context)
  overload: com.azure.storage.queue.QueueServiceClient.deleteQueueWithResponse*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Deletes a queue in the storage account


    **Code Samples**


    Delete the queue "test"


    ```java

    Response<Void> response = client.deleteQueueWithResponse("myqueue", Duration.ofSeconds(1),
         new Context(key1, value1));
     System.out.println("Complete deleting the queue with status code: " + response.getStatusCode());
    ```
  syntax:
    content: public Response<Void> deleteQueueWithResponse(String queueName, Duration timeout, Context context)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue
    - id: timeout
      type: java.time.Duration
      description: >-
        An optional timeout applied to the operation. If a response is not returned before the timeout
         concludes a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response containing the status of deleting the queue
- uid: com.azure.storage.queue.QueueServiceClient.generateAccountSas(com.azure.storage.common.sas.AccountSasSignatureValues)
  id: generateAccountSas(com.azure.storage.common.sas.AccountSasSignatureValues)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)
  nameWithType: QueueServiceClient.generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)
  fullName: com.azure.storage.queue.QueueServiceClient.generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)
  overload: com.azure.storage.queue.QueueServiceClient.generateAccountSas*
  type: Method
  package: com.azure.storage.queue
  summary: "Generates an account SAS for the Azure Storage account using the specified <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\">AccountSasSignatureValues</xref>. Note : The client must be authenticated via <xref uid=\"\" data-throw-if-not-resolved=\"false\">StorageSharedKeyCredential</xref>\n\nSee <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\">AccountSasSignatureValues</xref> for more information on how to construct an account SAS.\n\n**Generating an account SAS**\n\nThe snippet below generates an AccountSasSignatureValues object that lasts for two days and gives the user read and list access to queue and file shares.\n\n```java\nAccountSasPermission permissions = new AccountSasPermission()\n     .setListPermission(true)\n     .setReadPermission(true);\n AccountSasResourceType resourceTypes = new AccountSasResourceType().setContainer(true).setObject(true);\n AccountSasService services = new AccountSasService().setQueueAccess(true).setFileAccess(true);\n OffsetDateTime expiryTime = OffsetDateTime.now().plus(Duration.ofDays(2));\n \n AccountSasSignatureValues sasValues =\n     new AccountSasSignatureValues(expiryTime, permissions, services, resourceTypes);\n \n // Client must be authenticated via StorageSharedKeyCredential\n String sas = queueServiceClient.generateAccountSas(sasValues);\n```"
  syntax:
    content: public String generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)
    parameters:
    - id: accountSasSignatureValues
      type: com.azure.storage.common.sas.AccountSasSignatureValues
      description: <xref uid="com.azure.storage.common.sas.AccountSasSignatureValues" data-throw-if-not-resolved="false">AccountSasSignatureValues</xref>
    return:
      type: java.lang.String
      description: A <code>String</code> representing all SAS query parameters.
- uid: com.azure.storage.queue.QueueServiceClient.getAccountName()
  id: getAccountName()
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: getAccountName()
  nameWithType: QueueServiceClient.getAccountName()
  fullName: com.azure.storage.queue.QueueServiceClient.getAccountName()
  overload: com.azure.storage.queue.QueueServiceClient.getAccountName*
  type: Method
  package: com.azure.storage.queue
  summary: Get associated account name.
  syntax:
    content: public String getAccountName()
    return:
      type: java.lang.String
      description: account name associated with this storage resource.
- uid: com.azure.storage.queue.QueueServiceClient.getHttpPipeline()
  id: getHttpPipeline()
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: getHttpPipeline()
  nameWithType: QueueServiceClient.getHttpPipeline()
  fullName: com.azure.storage.queue.QueueServiceClient.getHttpPipeline()
  overload: com.azure.storage.queue.QueueServiceClient.getHttpPipeline*
  type: Method
  package: com.azure.storage.queue
  summary: Gets the <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref> powering this client.
  syntax:
    content: public HttpPipeline getHttpPipeline()
    return:
      type: com.azure.core.http.HttpPipeline
      description: The pipeline.
- uid: com.azure.storage.queue.QueueServiceClient.getProperties()
  id: getProperties()
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: getProperties()
  nameWithType: QueueServiceClient.getProperties()
  fullName: com.azure.storage.queue.QueueServiceClient.getProperties()
  overload: com.azure.storage.queue.QueueServiceClient.getProperties*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Retrieves the properties of the storage account's Queue service. The properties range from storage analytics and metric to CORS (Cross-Origin Resource Sharing).


    **Code Samples**


    Retrieve Queue service properties


    ```java

    QueueServiceProperties properties = client.getProperties();
     System.out.printf("Hour metrics enabled: %b, Minute metrics enabled: %b",
         properties.getHourMetrics().isEnabled(), properties.getMinuteMetrics().isEnabled());
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-queue-service-properties
  syntax:
    content: public QueueServiceProperties getProperties()
    return:
      type: com.azure.storage.queue.models.QueueServiceProperties
      description: Storage account Queue service properties
- uid: com.azure.storage.queue.QueueServiceClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: getPropertiesWithResponse(Duration timeout, Context context)
  nameWithType: QueueServiceClient.getPropertiesWithResponse(Duration timeout, Context context)
  fullName: com.azure.storage.queue.QueueServiceClient.getPropertiesWithResponse(Duration timeout, Context context)
  overload: com.azure.storage.queue.QueueServiceClient.getPropertiesWithResponse*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Retrieves the properties of the storage account's Queue service. The properties range from storage analytics and metric to CORS (Cross-Origin Resource Sharing).


    **Code Samples**


    Retrieve Queue service properties


    ```java

    QueueServiceProperties properties = client.getPropertiesWithResponse(Duration.ofSeconds(1),
         new Context(key1, value1)).getValue();
     System.out.printf("Hour metrics enabled: %b, Minute metrics enabled: %b",
         properties.getHourMetrics().isEnabled(), properties.getMinuteMetrics().isEnabled());
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-queue-service-properties
  syntax:
    content: public Response<QueueServiceProperties> getPropertiesWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: >-
        An optional timeout applied to the operation. If a response is not returned before the timeout
         concludes a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.queue.models.QueueServiceProperties>
      description: A response containing the Storage account Queue service properties
- uid: com.azure.storage.queue.QueueServiceClient.getQueueClient(java.lang.String)
  id: getQueueClient(java.lang.String)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: getQueueClient(String queueName)
  nameWithType: QueueServiceClient.getQueueClient(String queueName)
  fullName: com.azure.storage.queue.QueueServiceClient.getQueueClient(String queueName)
  overload: com.azure.storage.queue.QueueServiceClient.getQueueClient*
  type: Method
  package: com.azure.storage.queue
  summary: Constructs a QueueClient that interacts with the specified queue. This will not create the queue in the storage account if it doesn't exist.
  syntax:
    content: public QueueClient getQueueClient(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue
    return:
      type: com.azure.storage.queue.QueueClient
      description: QueueClient that interacts with the specified queue
- uid: com.azure.storage.queue.QueueServiceClient.getQueueServiceUrl()
  id: getQueueServiceUrl()
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: getQueueServiceUrl()
  nameWithType: QueueServiceClient.getQueueServiceUrl()
  fullName: com.azure.storage.queue.QueueServiceClient.getQueueServiceUrl()
  overload: com.azure.storage.queue.QueueServiceClient.getQueueServiceUrl*
  type: Method
  package: com.azure.storage.queue
  syntax:
    content: public String getQueueServiceUrl()
    return:
      type: java.lang.String
      description: the URL of the storage queue
- uid: com.azure.storage.queue.QueueServiceClient.getServiceVersion()
  id: getServiceVersion()
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: getServiceVersion()
  nameWithType: QueueServiceClient.getServiceVersion()
  fullName: com.azure.storage.queue.QueueServiceClient.getServiceVersion()
  overload: com.azure.storage.queue.QueueServiceClient.getServiceVersion*
  type: Method
  package: com.azure.storage.queue
  summary: Gets the service version the client is using.
  syntax:
    content: public QueueServiceVersion getServiceVersion()
    return:
      type: com.azure.storage.queue.QueueServiceVersion
      description: the service version the client is using.
- uid: com.azure.storage.queue.QueueServiceClient.getStatistics()
  id: getStatistics()
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: getStatistics()
  nameWithType: QueueServiceClient.getStatistics()
  fullName: com.azure.storage.queue.QueueServiceClient.getStatistics()
  overload: com.azure.storage.queue.QueueServiceClient.getStatistics*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Retrieves the geo replication information about the Queue service.


    **Code Samples**


    Retrieve the geo replication information


    ```java

    QueueServiceStatistics stats = client.getStatistics();
     System.out.printf("Geo replication status: %s, Last synced: %s",
         stats.getGeoReplication().getStatus(), stats.getGeoReplication().getLastSyncTime());
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-queue-service-stats
  syntax:
    content: public QueueServiceStatistics getStatistics()
    return:
      type: com.azure.storage.queue.models.QueueServiceStatistics
      description: The geo replication information about the Queue service
- uid: com.azure.storage.queue.QueueServiceClient.getStatisticsWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: getStatisticsWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: getStatisticsWithResponse(Duration timeout, Context context)
  nameWithType: QueueServiceClient.getStatisticsWithResponse(Duration timeout, Context context)
  fullName: com.azure.storage.queue.QueueServiceClient.getStatisticsWithResponse(Duration timeout, Context context)
  overload: com.azure.storage.queue.QueueServiceClient.getStatisticsWithResponse*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Retrieves the geo replication information about the Queue service.


    **Code Samples**


    Retrieve the geo replication information


    ```java

    QueueServiceStatistics stats = client.getStatisticsWithResponse(Duration.ofSeconds(1),
         new Context(key1, value1)).getValue();
     System.out.printf("Geo replication status: %s, Last synced: %s",
         stats.getGeoReplication().getStatus(), stats.getGeoReplication().getLastSyncTime());
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-queue-service-stats
  syntax:
    content: public Response<QueueServiceStatistics> getStatisticsWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: >-
        An optional timeout applied to the operation. If a response is not returned before the timeout
         concludes a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.queue.models.QueueServiceStatistics>
      description: A response containing the geo replication information about the Queue service
- uid: com.azure.storage.queue.QueueServiceClient.listQueues()
  id: listQueues()
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: listQueues()
  nameWithType: QueueServiceClient.listQueues()
  fullName: com.azure.storage.queue.QueueServiceClient.listQueues()
  overload: com.azure.storage.queue.QueueServiceClient.listQueues*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Lists all queues in the storage account without their metadata.


    **Code Samples**


    List all queues in the account


    ```java

    client.listQueues().forEach(
         queueItem -> System.out.printf("Queue %s exists in the account", queueItem.getName())
     );
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-queues1
  syntax:
    content: public PagedIterable<QueueItem> listQueues()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.storage.queue.models.QueueItem>
      description: <xref uid="com.azure.storage.queue.models.QueueItem" data-throw-if-not-resolved="false">Queues</xref> in the storage account
- uid: com.azure.storage.queue.QueueServiceClient.listQueues(com.azure.storage.queue.models.QueuesSegmentOptions,java.time.Duration,com.azure.core.util.Context)
  id: listQueues(com.azure.storage.queue.models.QueuesSegmentOptions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: listQueues(QueuesSegmentOptions options, Duration timeout, Context context)
  nameWithType: QueueServiceClient.listQueues(QueuesSegmentOptions options, Duration timeout, Context context)
  fullName: com.azure.storage.queue.QueueServiceClient.listQueues(QueuesSegmentOptions options, Duration timeout, Context context)
  overload: com.azure.storage.queue.QueueServiceClient.listQueues*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Lists the queues in the storage account that pass the filter. Pass true to <xref uid="com.azure.storage.queue.models.QueuesSegmentOptions.setIncludeMetadata(boolean)" data-throw-if-not-resolved="false">includeMetadata</xref> to have metadata returned for the queues.


    **Code Samples**


    List all queues that begin with "azure"


    ```java

    client.listQueues(new QueuesSegmentOptions().setPrefix("azure"), Duration.ofSeconds(1),
         new Context(key1, value1)).forEach(
             queueItem -> System.out.printf("Queue %s exists in the account and has metadata %s",
             queueItem.getName(), queueItem.getMetadata())
     );
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-queues1
  syntax:
    content: public PagedIterable<QueueItem> listQueues(QueuesSegmentOptions options, Duration timeout, Context context)
    parameters:
    - id: options
      type: com.azure.storage.queue.models.QueuesSegmentOptions
      description: Options for listing queues
    - id: timeout
      type: java.time.Duration
      description: >-
        An optional timeout applied to the operation. If a response is not returned before the timeout
         concludes a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.storage.queue.models.QueueItem>
      description: <xref uid="com.azure.storage.queue.models.QueueItem" data-throw-if-not-resolved="false">Queues</xref> in the storage account that satisfy the filter requirements
- uid: com.azure.storage.queue.QueueServiceClient.setProperties(com.azure.storage.queue.models.QueueServiceProperties)
  id: setProperties(com.azure.storage.queue.models.QueueServiceProperties)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: setProperties(QueueServiceProperties properties)
  nameWithType: QueueServiceClient.setProperties(QueueServiceProperties properties)
  fullName: com.azure.storage.queue.QueueServiceClient.setProperties(QueueServiceProperties properties)
  overload: com.azure.storage.queue.QueueServiceClient.setProperties*
  type: Method
  package: com.azure.storage.queue
  summary: "Sets the properties for the storage account's Queue service. The properties range from storage analytics and metric to CORS (Cross-Origin Resource Sharing). To maintain the CORS in the Queue service pass a `null` value for <xref uid=\"com.azure.storage.queue.models.QueueServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\">CORS</xref>. To disable all CORS in the Queue service pass an empty list for <xref uid=\"com.azure.storage.queue.models.QueueServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\">CORS</xref>.\n\n**Code Sample**\n\nClear CORS in the Queue service\n\n```java\nQueueServiceProperties properties = client.getProperties();\n properties.setCors(Collections.emptyList());\n \n client.setProperties(properties);\n System.out.println(\"Setting Queue service properties completed.\");\n```\n\nEnable Minute and Hour Metrics\n\n```java\nQueueServiceProperties properties = client.getProperties();\n properties.getMinuteMetrics().setEnabled(true);\n properties.getHourMetrics().setEnabled(true);\n client.setProperties(properties);\n System.out.println(\"Setting Queue service properties completed.\");\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-queue-service-properties"
  syntax:
    content: public void setProperties(QueueServiceProperties properties)
    parameters:
    - id: properties
      type: com.azure.storage.queue.models.QueueServiceProperties
      description: Storage account Queue service properties
- uid: com.azure.storage.queue.QueueServiceClient.setPropertiesWithResponse(com.azure.storage.queue.models.QueueServiceProperties,java.time.Duration,com.azure.core.util.Context)
  id: setPropertiesWithResponse(com.azure.storage.queue.models.QueueServiceProperties,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueServiceClient
  langs:
  - java
  name: setPropertiesWithResponse(QueueServiceProperties properties, Duration timeout, Context context)
  nameWithType: QueueServiceClient.setPropertiesWithResponse(QueueServiceProperties properties, Duration timeout, Context context)
  fullName: com.azure.storage.queue.QueueServiceClient.setPropertiesWithResponse(QueueServiceProperties properties, Duration timeout, Context context)
  overload: com.azure.storage.queue.QueueServiceClient.setPropertiesWithResponse*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Sets the properties for the storage account's Queue service. The properties range from storage analytics and metric to CORS (Cross-Origin Resource Sharing). To maintain the CORS in the Queue service pass a `null` value for <xref uid="com.azure.storage.queue.models.QueueServiceProperties.getCors()" data-throw-if-not-resolved="false">CORS</xref>. To disable all CORS in the Queue service pass an empty list for <xref uid="com.azure.storage.queue.models.QueueServiceProperties.getCors()" data-throw-if-not-resolved="false">CORS</xref>.


    **Code Sample**


    Clear CORS in the Queue service


    ```java

    QueueServiceProperties properties = client.getProperties();
     properties.setCors(Collections.emptyList());
     Response<Void> response = client.setPropertiesWithResponse(properties, Duration.ofSeconds(1),
         new Context(key1, value1));
     System.out.printf("Setting Queue service properties completed with status code %d", response.getStatusCode());
    ```


    Enable Minute and Hour Metrics


    ```java

    QueueServiceProperties properties = client.getProperties();
     properties.getMinuteMetrics().setEnabled(true);
     properties.getHourMetrics().setEnabled(true);
     Response<Void> response = client.setPropertiesWithResponse(properties, Duration.ofSeconds(1),
         new Context(key1, value1));
     System.out.printf("Setting Queue service properties completed with status code %d", response.getStatusCode());
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-queue-service-properties
  syntax:
    content: public Response<Void> setPropertiesWithResponse(QueueServiceProperties properties, Duration timeout, Context context)
    parameters:
    - id: properties
      type: com.azure.storage.queue.models.QueueServiceProperties
      description: Storage account Queue service properties
    - id: timeout
      type: java.time.Duration
      description: >-
        An optional timeout applied to the operation. If a response is not returned before the timeout
         concludes a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response that only contains headers and response status code
references:
- uid: com.azure.storage.queue.QueueServiceAsyncClient
  name: QueueServiceAsyncClient
  nameWithType: QueueServiceAsyncClient
  fullName: com.azure.storage.queue.QueueServiceAsyncClient
- uid: com.azure.storage.queue.QueueServiceClient.QueueServiceClient*
  name: QueueServiceClient
  nameWithType: QueueServiceClient.QueueServiceClient
  fullName: com.azure.storage.queue.QueueServiceClient.QueueServiceClient
  package: com.azure.storage.queue
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.queue.QueueServiceClient.getQueueServiceUrl*
  name: getQueueServiceUrl
  nameWithType: QueueServiceClient.getQueueServiceUrl
  fullName: com.azure.storage.queue.QueueServiceClient.getQueueServiceUrl
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueServiceVersion
  name: QueueServiceVersion
  nameWithType: QueueServiceVersion
  fullName: com.azure.storage.queue.QueueServiceVersion
- uid: com.azure.storage.queue.QueueServiceClient.getServiceVersion*
  name: getServiceVersion
  nameWithType: QueueServiceClient.getServiceVersion
  fullName: com.azure.storage.queue.QueueServiceClient.getServiceVersion
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueClient
  name: QueueClient
  nameWithType: QueueClient
  fullName: com.azure.storage.queue.QueueClient
- uid: com.azure.storage.queue.QueueServiceClient.getQueueClient*
  name: getQueueClient
  nameWithType: QueueServiceClient.getQueueClient
  fullName: com.azure.storage.queue.QueueServiceClient.getQueueClient
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueServiceClient.createQueue*
  name: createQueue
  nameWithType: QueueServiceClient.createQueue
  fullName: com.azure.storage.queue.QueueServiceClient.createQueue
  package: com.azure.storage.queue
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.storage.queue.QueueClient>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.queue.QueueClient
    name: QueueClient
    fullName: com.azure.storage.queue.QueueClient
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.queue.QueueServiceClient.createQueueWithResponse*
  name: createQueueWithResponse
  nameWithType: QueueServiceClient.createQueueWithResponse
  fullName: com.azure.storage.queue.QueueServiceClient.createQueueWithResponse
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueServiceClient.deleteQueue*
  name: deleteQueue
  nameWithType: QueueServiceClient.deleteQueue
  fullName: com.azure.storage.queue.QueueServiceClient.deleteQueue
  package: com.azure.storage.queue
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.queue.QueueServiceClient.deleteQueueWithResponse*
  name: deleteQueueWithResponse
  nameWithType: QueueServiceClient.deleteQueueWithResponse
  fullName: com.azure.storage.queue.QueueServiceClient.deleteQueueWithResponse
  package: com.azure.storage.queue
- uid: com.azure.core.http.rest.PagedIterable<com.azure.storage.queue.models.QueueItem>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.storage.queue.models.QueueItem
    name: QueueItem
    fullName: com.azure.storage.queue.models.QueueItem
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.queue.QueueServiceClient.listQueues*
  name: listQueues
  nameWithType: QueueServiceClient.listQueues
  fullName: com.azure.storage.queue.QueueServiceClient.listQueues
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.models.QueuesSegmentOptions
  name: QueuesSegmentOptions
  nameWithType: QueuesSegmentOptions
  fullName: com.azure.storage.queue.models.QueuesSegmentOptions
- uid: com.azure.storage.queue.models.QueueServiceProperties
  name: QueueServiceProperties
  nameWithType: QueueServiceProperties
  fullName: com.azure.storage.queue.models.QueueServiceProperties
- uid: com.azure.storage.queue.QueueServiceClient.getProperties*
  name: getProperties
  nameWithType: QueueServiceClient.getProperties
  fullName: com.azure.storage.queue.QueueServiceClient.getProperties
  package: com.azure.storage.queue
- uid: com.azure.core.http.rest.Response<com.azure.storage.queue.models.QueueServiceProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.queue.models.QueueServiceProperties
    name: QueueServiceProperties
    fullName: com.azure.storage.queue.models.QueueServiceProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.queue.QueueServiceClient.getPropertiesWithResponse*
  name: getPropertiesWithResponse
  nameWithType: QueueServiceClient.getPropertiesWithResponse
  fullName: com.azure.storage.queue.QueueServiceClient.getPropertiesWithResponse
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueServiceClient.setProperties*
  name: setProperties
  nameWithType: QueueServiceClient.setProperties
  fullName: com.azure.storage.queue.QueueServiceClient.setProperties
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueServiceClient.setPropertiesWithResponse*
  name: setPropertiesWithResponse
  nameWithType: QueueServiceClient.setPropertiesWithResponse
  fullName: com.azure.storage.queue.QueueServiceClient.setPropertiesWithResponse
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.models.QueueServiceStatistics
  name: QueueServiceStatistics
  nameWithType: QueueServiceStatistics
  fullName: com.azure.storage.queue.models.QueueServiceStatistics
- uid: com.azure.storage.queue.QueueServiceClient.getStatistics*
  name: getStatistics
  nameWithType: QueueServiceClient.getStatistics
  fullName: com.azure.storage.queue.QueueServiceClient.getStatistics
  package: com.azure.storage.queue
- uid: com.azure.core.http.rest.Response<com.azure.storage.queue.models.QueueServiceStatistics>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.queue.models.QueueServiceStatistics
    name: QueueServiceStatistics
    fullName: com.azure.storage.queue.models.QueueServiceStatistics
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.queue.QueueServiceClient.getStatisticsWithResponse*
  name: getStatisticsWithResponse
  nameWithType: QueueServiceClient.getStatisticsWithResponse
  fullName: com.azure.storage.queue.QueueServiceClient.getStatisticsWithResponse
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueServiceClient.getAccountName*
  name: getAccountName
  nameWithType: QueueServiceClient.getAccountName
  fullName: com.azure.storage.queue.QueueServiceClient.getAccountName
  package: com.azure.storage.queue
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.storage.queue.QueueServiceClient.getHttpPipeline*
  name: getHttpPipeline
  nameWithType: QueueServiceClient.getHttpPipeline
  fullName: com.azure.storage.queue.QueueServiceClient.getHttpPipeline
  package: com.azure.storage.queue
- uid: com.azure.storage.common.sas.AccountSasSignatureValues
  spec.java:
  - uid: com.azure.storage.common.sas.AccountSasSignatureValues
    name: AccountSasSignatureValues
    fullName: com.azure.storage.common.sas.AccountSasSignatureValues
- uid: com.azure.storage.queue.QueueServiceClient.generateAccountSas*
  name: generateAccountSas
  nameWithType: QueueServiceClient.generateAccountSas
  fullName: com.azure.storage.queue.QueueServiceClient.generateAccountSas
  package: com.azure.storage.queue
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.storage.queue.models.QueueItem
  name: QueueItem
  nameWithType: QueueItem
  fullName: com.azure.storage.queue.models.QueueItem
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
