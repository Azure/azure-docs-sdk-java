### YamlMime:JavaType
uid: "com.azure.storage.file.share.models.ShareFileUploadRangeOptions"
fullName: "com.azure.storage.file.share.models.ShareFileUploadRangeOptions"
name: "ShareFileUploadRangeOptions"
nameWithType: "ShareFileUploadRangeOptions"
summary: "Extended options that may be passed when uploading a file range."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ShareFileUploadRangeOptions"
constructors:
- "com.azure.storage.file.share.models.ShareFileUploadRangeOptions.ShareFileUploadRangeOptions(java.io.InputStream,long)"
- "com.azure.storage.file.share.models.ShareFileUploadRangeOptions.ShareFileUploadRangeOptions(reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)"
methods:
- "com.azure.storage.file.share.models.ShareFileUploadRangeOptions.getDataFlux()"
- "com.azure.storage.file.share.models.ShareFileUploadRangeOptions.getDataStream()"
- "com.azure.storage.file.share.models.ShareFileUploadRangeOptions.getLength()"
- "com.azure.storage.file.share.models.ShareFileUploadRangeOptions.getOffset()"
- "com.azure.storage.file.share.models.ShareFileUploadRangeOptions.getRequestConditions()"
- "com.azure.storage.file.share.models.ShareFileUploadRangeOptions.setOffset(java.lang.Long)"
- "com.azure.storage.file.share.models.ShareFileUploadRangeOptions.setRequestConditions(com.azure.storage.file.share.models.ShareRequestConditions)"
type: "class"
metadata: {}
package: "com.azure.storage.file.share.models"
artifact: com.azure:azure-storage-file-share:12.12.0
