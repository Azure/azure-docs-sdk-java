### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.deleteImmutabilityPolicyWithResponse*"
fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.deleteImmutabilityPolicyWithResponse"
name: "deleteImmutabilityPolicyWithResponse"
nameWithType: "BlobAsyncClientBase.deleteImmutabilityPolicyWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.deleteImmutabilityPolicyWithResponse()"
  fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.deleteImmutabilityPolicyWithResponse()"
  name: "deleteImmutabilityPolicyWithResponse()"
  nameWithType: "BlobAsyncClientBase.deleteImmutabilityPolicyWithResponse()"
  summary: "Deletes the immutability policy on a blob, blob snapshot or blob version.\n\nNOTE: Blob Versioning must be enabled on your storage account and the blob must be in a container with immutable storage with versioning enabled to call this API.\n\n**Code Samples**\n\n```java\nclient.deleteImmutabilityPolicyWithResponse().subscribe(response ->\n     System.out.println(\"Delete immutability policy completed with status: \" + response.getStatusCode()));\n```"
  syntax: "public Mono<Response<Void>> deleteImmutabilityPolicyWithResponse()"
  returns:
    description: "A reactive response signalling completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.15.0
