### YamlMime:JavaType
uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilters"
fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilters"
name: "RaiContentFilters"
nameWithType: "RaiContentFilters"
summary: "Resource collection API of Rai<wbr>Content<wbr>Filters."
syntax: "public interface **RaiContentFilters**"
methods:
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilters.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilters.get(String location, String filterName)"
  name: "get(String location, String filterName)"
  nameWithType: "RaiContentFilters.get(String location, String filterName)"
  summary: "Get Content Filters by Name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource location."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the RAI Content Filter."
    name: "filterName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract RaiContentFilter get(String location, String filterName)"
  desc: "Get Content Filters by Name."
  returns:
    description: "content Filters by Name."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiContentFilter?alt=com.azure.resourcemanager.cognitiveservices.models.RaiContentFilter&text=RaiContentFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilters.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilters.getWithResponse(String location, String filterName, Context context)"
  name: "getWithResponse(String location, String filterName, Context context)"
  nameWithType: "RaiContentFilters.getWithResponse(String location, String filterName, Context context)"
  summary: "Get Content Filters by Name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource location."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the RAI Content Filter."
    name: "filterName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<RaiContentFilter> getWithResponse(String location, String filterName, Context context)"
  desc: "Get Content Filters by Name."
  returns:
    description: "content Filters by Name along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiContentFilter?alt=com.azure.resourcemanager.cognitiveservices.models.RaiContentFilter&text=RaiContentFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilters.list(java.lang.String)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilters.list(String location)"
  name: "list(String location)"
  nameWithType: "RaiContentFilters.list(String location)"
  summary: "List Content Filters types."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource location."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<RaiContentFilter> list(String location)"
  desc: "List Content Filters types."
  returns:
    description: "the list of Content Filters as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiContentFilter?alt=com.azure.resourcemanager.cognitiveservices.models.RaiContentFilter&text=RaiContentFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilters.list(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilters.list(String location, Context context)"
  name: "list(String location, Context context)"
  nameWithType: "RaiContentFilters.list(String location, Context context)"
  summary: "List Content Filters types."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource location."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RaiContentFilter> list(String location, Context context)"
  desc: "List Content Filters types."
  returns:
    description: "the list of Content Filters as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiContentFilter?alt=com.azure.resourcemanager.cognitiveservices.models.RaiContentFilter&text=RaiContentFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of RaiContentFilters."
metadata: {}
package: "com.azure.resourcemanager.cognitiveservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cognitiveservices:1.1.0
