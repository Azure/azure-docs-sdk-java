### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient"
fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient"
name: "RoleAssignmentsClient"
nameWithType: "RoleAssignmentsClient"
summary: "An instance of this class provides access to all the operations defined in Role<wbr>Assignments<wbr>Client."
syntax: "public interface **RoleAssignmentsClient**</br> extends <xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing?alt=com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing&text=InnerSupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;, <xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete?alt=com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete&text=InnerSupportsDelete\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)"
  name: "create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)"
  nameWithType: "RoleAssignmentsClient.create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)"
  summary: "Create or update a role assignment by scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the role assignment. It can be any valid GUID."
    name: "roleAssignmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the role assignment."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters?alt=com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters&text=RoleAssignmentCreateParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RoleAssignmentInner create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)"
  desc: "Create or update a role assignment by scope and name."
  returns:
    description: "role Assignments."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)"
  name: "createAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)"
  nameWithType: "RoleAssignmentsClient.createAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)"
  summary: "Create or update a role assignment by scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the role assignment. It can be any valid GUID."
    name: "roleAssignmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the role assignment."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters?alt=com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters&text=RoleAssignmentCreateParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<RoleAssignmentInner> createAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)"
  desc: "Create or update a role assignment by scope and name."
  returns:
    description: "role Assignments on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createById(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createById(String roleAssignmentId, RoleAssignmentCreateParameters parameters)"
  name: "createById(String roleAssignmentId, RoleAssignmentCreateParameters parameters)"
  nameWithType: "RoleAssignmentsClient.createById(String roleAssignmentId, RoleAssignmentCreateParameters parameters)"
  summary: "Create or update a role assignment by ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the role assignment."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters?alt=com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters&text=RoleAssignmentCreateParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RoleAssignmentInner createById(String roleAssignmentId, RoleAssignmentCreateParameters parameters)"
  desc: "Create or update a role assignment by ID."
  returns:
    description: "role Assignments."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdAsync(String roleAssignmentId, RoleAssignmentCreateParameters parameters)"
  name: "createByIdAsync(String roleAssignmentId, RoleAssignmentCreateParameters parameters)"
  nameWithType: "RoleAssignmentsClient.createByIdAsync(String roleAssignmentId, RoleAssignmentCreateParameters parameters)"
  summary: "Create or update a role assignment by ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the role assignment."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters?alt=com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters&text=RoleAssignmentCreateParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<RoleAssignmentInner> createByIdAsync(String roleAssignmentId, RoleAssignmentCreateParameters parameters)"
  desc: "Create or update a role assignment by ID."
  returns:
    description: "role Assignments on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponse(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponse(String roleAssignmentId, RoleAssignmentCreateParameters parameters, Context context)"
  name: "createByIdWithResponse(String roleAssignmentId, RoleAssignmentCreateParameters parameters, Context context)"
  nameWithType: "RoleAssignmentsClient.createByIdWithResponse(String roleAssignmentId, RoleAssignmentCreateParameters parameters, Context context)"
  summary: "Create or update a role assignment by ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the role assignment."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters?alt=com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters&text=RoleAssignmentCreateParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<RoleAssignmentInner> createByIdWithResponse(String roleAssignmentId, RoleAssignmentCreateParameters parameters, Context context)"
  desc: "Create or update a role assignment by ID."
  returns:
    description: "role Assignments along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponseAsync(String roleAssignmentId, RoleAssignmentCreateParameters parameters)"
  name: "createByIdWithResponseAsync(String roleAssignmentId, RoleAssignmentCreateParameters parameters)"
  nameWithType: "RoleAssignmentsClient.createByIdWithResponseAsync(String roleAssignmentId, RoleAssignmentCreateParameters parameters)"
  summary: "Create or update a role assignment by ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the role assignment."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters?alt=com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters&text=RoleAssignmentCreateParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<RoleAssignmentInner>> createByIdWithResponseAsync(String roleAssignmentId, RoleAssignmentCreateParameters parameters)"
  desc: "Create or update a role assignment by ID."
  returns:
    description: "role Assignments along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponse(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)"
  name: "createWithResponse(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)"
  nameWithType: "RoleAssignmentsClient.createWithResponse(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)"
  summary: "Create or update a role assignment by scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the role assignment. It can be any valid GUID."
    name: "roleAssignmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the role assignment."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters?alt=com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters&text=RoleAssignmentCreateParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<RoleAssignmentInner> createWithResponse(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)"
  desc: "Create or update a role assignment by scope and name."
  returns:
    description: "role Assignments along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponseAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)"
  name: "createWithResponseAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)"
  nameWithType: "RoleAssignmentsClient.createWithResponseAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)"
  summary: "Create or update a role assignment by scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the role assignment. It can be any valid GUID."
    name: "roleAssignmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the role assignment."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters?alt=com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters&text=RoleAssignmentCreateParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<RoleAssignmentInner>> createWithResponseAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)"
  desc: "Create or update a role assignment by scope and name."
  returns:
    description: "role Assignments along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.delete(String scope, String roleAssignmentName)"
  name: "delete(String scope, String roleAssignmentName)"
  nameWithType: "RoleAssignmentsClient.delete(String scope, String roleAssignmentName)"
  summary: "Delete a role assignment by scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the role assignment. It can be any valid GUID."
    name: "roleAssignmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract RoleAssignmentInner delete(String scope, String roleAssignmentName)"
  desc: "Delete a role assignment by scope and name."
  returns:
    description: "role Assignments."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteAsync(String scope, String roleAssignmentName)"
  name: "deleteAsync(String scope, String roleAssignmentName)"
  nameWithType: "RoleAssignmentsClient.deleteAsync(String scope, String roleAssignmentName)"
  summary: "Delete a role assignment by scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the role assignment. It can be any valid GUID."
    name: "roleAssignmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<RoleAssignmentInner> deleteAsync(String scope, String roleAssignmentName)"
  desc: "Delete a role assignment by scope and name."
  returns:
    description: "role Assignments on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteById(String roleAssignmentId)"
  name: "deleteById(String roleAssignmentId)"
  nameWithType: "RoleAssignmentsClient.deleteById(String roleAssignmentId)"
  summary: "Delete a role assignment by ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract RoleAssignmentInner deleteById(String roleAssignmentId)"
  desc: "Delete a role assignment by ID."
  returns:
    description: "role Assignments."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdAsync(String roleAssignmentId)"
  name: "deleteByIdAsync(String roleAssignmentId)"
  nameWithType: "RoleAssignmentsClient.deleteByIdAsync(String roleAssignmentId)"
  summary: "Delete a role assignment by ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<RoleAssignmentInner> deleteByIdAsync(String roleAssignmentId)"
  desc: "Delete a role assignment by ID."
  returns:
    description: "role Assignments on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponse(String roleAssignmentId, String tenantId, Context context)"
  name: "deleteByIdWithResponse(String roleAssignmentId, String tenantId, Context context)"
  nameWithType: "RoleAssignmentsClient.deleteByIdWithResponse(String roleAssignmentId, String tenantId, Context context)"
  summary: "Delete a role assignment by ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<RoleAssignmentInner> deleteByIdWithResponse(String roleAssignmentId, String tenantId, Context context)"
  desc: "Delete a role assignment by ID."
  returns:
    description: "role Assignments along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponseAsync(String roleAssignmentId, String tenantId)"
  name: "deleteByIdWithResponseAsync(String roleAssignmentId, String tenantId)"
  nameWithType: "RoleAssignmentsClient.deleteByIdWithResponseAsync(String roleAssignmentId, String tenantId)"
  summary: "Delete a role assignment by ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<RoleAssignmentInner>> deleteByIdWithResponseAsync(String roleAssignmentId, String tenantId)"
  desc: "Delete a role assignment by ID."
  returns:
    description: "role Assignments along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponse(String scope, String roleAssignmentName, String tenantId, Context context)"
  name: "deleteWithResponse(String scope, String roleAssignmentName, String tenantId, Context context)"
  nameWithType: "RoleAssignmentsClient.deleteWithResponse(String scope, String roleAssignmentName, String tenantId, Context context)"
  summary: "Delete a role assignment by scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the role assignment. It can be any valid GUID."
    name: "roleAssignmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<RoleAssignmentInner> deleteWithResponse(String scope, String roleAssignmentName, String tenantId, Context context)"
  desc: "Delete a role assignment by scope and name."
  returns:
    description: "role Assignments along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponseAsync(String scope, String roleAssignmentName, String tenantId)"
  name: "deleteWithResponseAsync(String scope, String roleAssignmentName, String tenantId)"
  nameWithType: "RoleAssignmentsClient.deleteWithResponseAsync(String scope, String roleAssignmentName, String tenantId)"
  summary: "Delete a role assignment by scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the role assignment. It can be any valid GUID."
    name: "roleAssignmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<RoleAssignmentInner>> deleteWithResponseAsync(String scope, String roleAssignmentName, String tenantId)"
  desc: "Delete a role assignment by scope and name."
  returns:
    description: "role Assignments along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.get(String scope, String roleAssignmentName)"
  name: "get(String scope, String roleAssignmentName)"
  nameWithType: "RoleAssignmentsClient.get(String scope, String roleAssignmentName)"
  summary: "Get a role assignment by scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the role assignment. It can be any valid GUID."
    name: "roleAssignmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract RoleAssignmentInner get(String scope, String roleAssignmentName)"
  desc: "Get a role assignment by scope and name."
  returns:
    description: "a role assignment by scope and name."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getAsync(String scope, String roleAssignmentName)"
  name: "getAsync(String scope, String roleAssignmentName)"
  nameWithType: "RoleAssignmentsClient.getAsync(String scope, String roleAssignmentName)"
  summary: "Get a role assignment by scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the role assignment. It can be any valid GUID."
    name: "roleAssignmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<RoleAssignmentInner> getAsync(String scope, String roleAssignmentName)"
  desc: "Get a role assignment by scope and name."
  returns:
    description: "a role assignment by scope and name on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById(String roleAssignmentId)"
  name: "getById(String roleAssignmentId)"
  nameWithType: "RoleAssignmentsClient.getById(String roleAssignmentId)"
  summary: "Get a role assignment by ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract RoleAssignmentInner getById(String roleAssignmentId)"
  desc: "Get a role assignment by ID."
  returns:
    description: "a role assignment by ID."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdAsync(String roleAssignmentId)"
  name: "getByIdAsync(String roleAssignmentId)"
  nameWithType: "RoleAssignmentsClient.getByIdAsync(String roleAssignmentId)"
  summary: "Get a role assignment by ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<RoleAssignmentInner> getByIdAsync(String roleAssignmentId)"
  desc: "Get a role assignment by ID."
  returns:
    description: "a role assignment by ID on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponse(String roleAssignmentId, String tenantId, Context context)"
  name: "getByIdWithResponse(String roleAssignmentId, String tenantId, Context context)"
  nameWithType: "RoleAssignmentsClient.getByIdWithResponse(String roleAssignmentId, String tenantId, Context context)"
  summary: "Get a role assignment by ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<RoleAssignmentInner> getByIdWithResponse(String roleAssignmentId, String tenantId, Context context)"
  desc: "Get a role assignment by ID."
  returns:
    description: "a role assignment by ID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponseAsync(String roleAssignmentId, String tenantId)"
  name: "getByIdWithResponseAsync(String roleAssignmentId, String tenantId)"
  nameWithType: "RoleAssignmentsClient.getByIdWithResponseAsync(String roleAssignmentId, String tenantId)"
  summary: "Get a role assignment by ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<RoleAssignmentInner>> getByIdWithResponseAsync(String roleAssignmentId, String tenantId)"
  desc: "Get a role assignment by ID."
  returns:
    description: "a role assignment by ID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponse(String scope, String roleAssignmentName, String tenantId, Context context)"
  name: "getWithResponse(String scope, String roleAssignmentName, String tenantId, Context context)"
  nameWithType: "RoleAssignmentsClient.getWithResponse(String scope, String roleAssignmentName, String tenantId, Context context)"
  summary: "Get a role assignment by scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the role assignment. It can be any valid GUID."
    name: "roleAssignmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<RoleAssignmentInner> getWithResponse(String scope, String roleAssignmentName, String tenantId, Context context)"
  desc: "Get a role assignment by scope and name."
  returns:
    description: "a role assignment by scope and name along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponseAsync(String scope, String roleAssignmentName, String tenantId)"
  name: "getWithResponseAsync(String scope, String roleAssignmentName, String tenantId)"
  nameWithType: "RoleAssignmentsClient.getWithResponseAsync(String scope, String roleAssignmentName, String tenantId)"
  summary: "Get a role assignment by scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the role assignment. It can be any valid GUID."
    name: "roleAssignmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<RoleAssignmentInner>> getWithResponseAsync(String scope, String roleAssignmentName, String tenantId)"
  desc: "Get a role assignment by scope and name."
  returns:
    description: "a role assignment by scope and name along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list()"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list()"
  name: "list()"
  nameWithType: "RoleAssignmentsClient.list()"
  summary: "List all role assignments that apply to a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<RoleAssignmentInner> list()"
  desc: "List all role assignments that apply to a subscription."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list(String filter, String tenantId, Context context)"
  name: "list(String filter, String tenantId, Context context)"
  nameWithType: "RoleAssignmentsClient.list(String filter, String tenantId, Context context)"
  summary: "List all role assignments that apply to a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or\n     above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope\n     for the specified principal."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RoleAssignmentInner> list(String filter, String tenantId, Context context)"
  desc: "List all role assignments that apply to a subscription."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync()"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync()"
  name: "listAsync()"
  nameWithType: "RoleAssignmentsClient.listAsync()"
  summary: "List all role assignments that apply to a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<RoleAssignmentInner> listAsync()"
  desc: "List all role assignments that apply to a subscription."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync(String filter, String tenantId)"
  name: "listAsync(String filter, String tenantId)"
  nameWithType: "RoleAssignmentsClient.listAsync(String filter, String tenantId)"
  summary: "List all role assignments that apply to a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or\n     above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope\n     for the specified principal."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<RoleAssignmentInner> listAsync(String filter, String tenantId)"
  desc: "List all role assignments that apply to a subscription."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "RoleAssignmentsClient.listByResourceGroup(String resourceGroupName)"
  summary: "List all role assignments that apply to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<RoleAssignmentInner> listByResourceGroup(String resourceGroupName)"
  desc: "List all role assignments that apply to a resource group."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(String resourceGroupName, String filter, String tenantId, Context context)"
  name: "listByResourceGroup(String resourceGroupName, String filter, String tenantId, Context context)"
  nameWithType: "RoleAssignmentsClient.listByResourceGroup(String resourceGroupName, String filter, String tenantId, Context context)"
  summary: "List all role assignments that apply to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or\n     above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope\n     for the specified principal."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RoleAssignmentInner> listByResourceGroup(String resourceGroupName, String filter, String tenantId, Context context)"
  desc: "List all role assignments that apply to a resource group."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(String resourceGroupName)"
  name: "listByResourceGroupAsync(String resourceGroupName)"
  nameWithType: "RoleAssignmentsClient.listByResourceGroupAsync(String resourceGroupName)"
  summary: "List all role assignments that apply to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<RoleAssignmentInner> listByResourceGroupAsync(String resourceGroupName)"
  desc: "List all role assignments that apply to a resource group."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(String resourceGroupName, String filter, String tenantId)"
  name: "listByResourceGroupAsync(String resourceGroupName, String filter, String tenantId)"
  nameWithType: "RoleAssignmentsClient.listByResourceGroupAsync(String resourceGroupName, String filter, String tenantId)"
  summary: "List all role assignments that apply to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or\n     above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope\n     for the specified principal."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<RoleAssignmentInner> listByResourceGroupAsync(String resourceGroupName, String filter, String tenantId)"
  desc: "List all role assignments that apply to a resource group."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName)"
  name: "listForResource(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName)"
  nameWithType: "RoleAssignmentsClient.listForResource(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName)"
  summary: "List all role assignments that apply to a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The resource type name. For example the type name of a web app is 'sites' (from\n     Microsoft.Web/sites)."
    name: "resourceType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The resource name."
    name: "resourceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<RoleAssignmentInner> listForResource(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName)"
  desc: "List all role assignments that apply to a resource."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName, String filter, String tenantId, Context context)"
  name: "listForResource(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName, String filter, String tenantId, Context context)"
  nameWithType: "RoleAssignmentsClient.listForResource(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName, String filter, String tenantId, Context context)"
  summary: "List all role assignments that apply to a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The resource type name. For example the type name of a web app is 'sites' (from\n     Microsoft.Web/sites)."
    name: "resourceType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The resource name."
    name: "resourceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or\n     above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope\n     for the specified principal."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RoleAssignmentInner> listForResource(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName, String filter, String tenantId, Context context)"
  desc: "List all role assignments that apply to a resource."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName)"
  name: "listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName)"
  nameWithType: "RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName)"
  summary: "List all role assignments that apply to a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The resource type name. For example the type name of a web app is 'sites' (from\n     Microsoft.Web/sites)."
    name: "resourceType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The resource name."
    name: "resourceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<RoleAssignmentInner> listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName)"
  desc: "List all role assignments that apply to a resource."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName, String filter, String tenantId)"
  name: "listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName, String filter, String tenantId)"
  nameWithType: "RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName, String filter, String tenantId)"
  summary: "List all role assignments that apply to a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The resource type name. For example the type name of a web app is 'sites' (from\n     Microsoft.Web/sites)."
    name: "resourceType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The resource name."
    name: "resourceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or\n     above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope\n     for the specified principal."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<RoleAssignmentInner> listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName, String filter, String tenantId)"
  desc: "List all role assignments that apply to a resource."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(String scope)"
  name: "listForScope(String scope)"
  nameWithType: "RoleAssignmentsClient.listForScope(String scope)"
  summary: "List all role assignments that apply to a scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<RoleAssignmentInner> listForScope(String scope)"
  desc: "List all role assignments that apply to a scope."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(String scope, String filter, String tenantId, String skipToken, Context context)"
  name: "listForScope(String scope, String filter, String tenantId, String skipToken, Context context)"
  nameWithType: "RoleAssignmentsClient.listForScope(String scope, String filter, String tenantId, String skipToken, Context context)"
  summary: "List all role assignments that apply to a scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or\n     above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope\n     for the specified principal."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The skipToken to apply on the operation. Use $skipToken={skiptoken} to return paged role\n     assignments following the skipToken passed. Only supported on provider level calls."
    name: "skipToken"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RoleAssignmentInner> listForScope(String scope, String filter, String tenantId, String skipToken, Context context)"
  desc: "List all role assignments that apply to a scope."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(String scope)"
  name: "listForScopeAsync(String scope)"
  nameWithType: "RoleAssignmentsClient.listForScopeAsync(String scope)"
  summary: "List all role assignments that apply to a scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<RoleAssignmentInner> listForScopeAsync(String scope)"
  desc: "List all role assignments that apply to a scope."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(String scope, String filter, String tenantId, String skipToken)"
  name: "listForScopeAsync(String scope, String filter, String tenantId, String skipToken)"
  nameWithType: "RoleAssignmentsClient.listForScopeAsync(String scope, String filter, String tenantId, String skipToken)"
  summary: "List all role assignments that apply to a scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or\n     above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope\n     for the specified principal."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The skipToken to apply on the operation. Use $skipToken={skiptoken} to return paged role\n     assignments following the skipToken passed. Only supported on provider level calls."
    name: "skipToken"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<RoleAssignmentInner> listForScopeAsync(String scope, String filter, String tenantId, String skipToken)"
  desc: "List all role assignments that apply to a scope."
  returns:
    description: "role assignment list operation result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in RoleAssignmentsClient."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete?alt=com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete&text=InnerSupportsDelete\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing?alt=com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing&text=InnerSupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.34.0
