### YamlMime:JavaType
uid: "com.azure.storage.internal.avro.implementation.AvroReaderFactory"
fullName: "com.azure.storage.internal.avro.implementation.AvroReaderFactory"
name: "AvroReaderFactory"
nameWithType: "AvroReaderFactory"
summary: "Factory class for <xref uid=\"com.azure.storage.internal.avro.implementation.AvroReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AvroReader\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AvroReaderFactory"
constructors:
- "com.azure.storage.internal.avro.implementation.AvroReaderFactory.AvroReaderFactory()"
methods:
- "com.azure.storage.internal.avro.implementation.AvroReaderFactory.getAvroReader(reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
- "com.azure.storage.internal.avro.implementation.AvroReaderFactory.getAvroReader(reactor.core.publisher.Flux<java.nio.ByteBuffer>,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,long)"
type: "class"
metadata: {}
package: "com.azure.storage.internal.avro.implementation"
artifact: com.azure:azure-storage-internal-avro:12.0.2
