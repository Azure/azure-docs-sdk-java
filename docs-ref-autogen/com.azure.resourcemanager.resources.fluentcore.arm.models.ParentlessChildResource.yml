### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.arm.models.ParentlessChildResource"
fullName: "com.azure.resourcemanager.resources.fluentcore.arm.models.ParentlessChildResource<ParentT>"
name: "ParentlessChildResource<ParentT>"
nameWithType: "ParentlessChildResource<ParentT>"
summary: "Base interface used by child resources that do not immediately have their parent attached to them but are instead available directly off other entry points."
syntax: "public interface ParentlessChildResource<ParentT> extends Indexable, HasName"
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.models.ParentlessChildResource.getParent()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.models.ParentlessChildResource<ParentT>.getParent()"
  name: "getParent()"
  nameWithType: "ParentlessChildResource<ParentT>.getParent()"
  modifiers:
  - "abstract"
  syntax: "public abstract ParentT getParent()"
  returns:
    description: "the parent of this child object"
    type: "<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
typeParameters:
- description: "parent interface"
  name: "ParentT"
desc: "Base interface used by child resources that do not immediately have their parent attached to them but are instead available directly off other entry points."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.HasName?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasName&text=HasName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.arm.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
