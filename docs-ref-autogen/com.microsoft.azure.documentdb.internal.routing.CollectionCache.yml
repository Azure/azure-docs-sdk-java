### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache"
  id: "CollectionCache"
  parent: "com.microsoft.azure.documentdb.internal.routing"
  children:
  - "com.microsoft.azure.documentdb.internal.routing.CollectionCache.CollectionCache(java.util.concurrent.ExecutorService)"
  - "com.microsoft.azure.documentdb.internal.routing.CollectionCache.getByName(java.lang.String)"
  - "com.microsoft.azure.documentdb.internal.routing.CollectionCache.getByRid(java.lang.String)"
  - "com.microsoft.azure.documentdb.internal.routing.CollectionCache.refresh(java.lang.String)"
  - "com.microsoft.azure.documentdb.internal.routing.CollectionCache.resolveByName(java.lang.String)"
  - "com.microsoft.azure.documentdb.internal.routing.CollectionCache.resolveCollection(com.microsoft.azure.documentdb.internal.AbstractDocumentServiceRequest)"
  langs:
  - "java"
  name: "CollectionCache"
  nameWithType: "CollectionCache"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache"
  type: "Class"
  package: "com.microsoft.azure.documentdb.internal.routing"
  summary: "Cache to provide resource id lookup based on resource name"
  syntax:
    content: "public abstract class CollectionCache"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.CollectionCache(java.util.concurrent.ExecutorService)"
  id: "CollectionCache(java.util.concurrent.ExecutorService)"
  parent: "com.microsoft.azure.documentdb.internal.routing.CollectionCache"
  langs:
  - "java"
  name: "CollectionCache(ExecutorService executorService)"
  nameWithType: "CollectionCache.CollectionCache(ExecutorService executorService)"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.CollectionCache(ExecutorService executorService)"
  overload: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.CollectionCache*"
  type: "Constructor"
  package: "com.microsoft.azure.documentdb.internal.routing"
  syntax:
    content: " CollectionCache(ExecutorService executorService)"
    parameters:
    - id: "executorService"
      type: "java.util.concurrent.ExecutorService"
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.getByName(java.lang.String)"
  id: "getByName(java.lang.String)"
  parent: "com.microsoft.azure.documentdb.internal.routing.CollectionCache"
  langs:
  - "java"
  name: "getByName(String resourceAddress)"
  nameWithType: "CollectionCache.getByName(String resourceAddress)"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.getByName(String resourceAddress)"
  overload: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.getByName*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal.routing"
  syntax:
    content: "protected abstract DocumentCollection getByName(String resourceAddress)"
    parameters:
    - id: "resourceAddress"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.documentdb.DocumentCollection"
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.getByRid(java.lang.String)"
  id: "getByRid(java.lang.String)"
  parent: "com.microsoft.azure.documentdb.internal.routing.CollectionCache"
  langs:
  - "java"
  name: "getByRid(String collectionRid)"
  nameWithType: "CollectionCache.getByRid(String collectionRid)"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.getByRid(String collectionRid)"
  overload: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.getByRid*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal.routing"
  syntax:
    content: "protected abstract DocumentCollection getByRid(String collectionRid)"
    parameters:
    - id: "collectionRid"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.documentdb.DocumentCollection"
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.refresh(java.lang.String)"
  id: "refresh(java.lang.String)"
  parent: "com.microsoft.azure.documentdb.internal.routing.CollectionCache"
  langs:
  - "java"
  name: "refresh(String resourceAddress)"
  nameWithType: "CollectionCache.refresh(String resourceAddress)"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.refresh(String resourceAddress)"
  overload: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.refresh*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal.routing"
  summary: "This method is only used in client SDK in retry policy as it doesn't have request handy."
  syntax:
    content: "public void refresh(String resourceAddress)"
    parameters:
    - id: "resourceAddress"
      type: "java.lang.String"
      description: "a string represents resource address"
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.resolveByName(java.lang.String)"
  id: "resolveByName(java.lang.String)"
  parent: "com.microsoft.azure.documentdb.internal.routing.CollectionCache"
  langs:
  - "java"
  name: "resolveByName(String resourceAddress)"
  nameWithType: "CollectionCache.resolveByName(String resourceAddress)"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.resolveByName(String resourceAddress)"
  overload: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.resolveByName*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal.routing"
  syntax:
    content: "public DocumentCollection resolveByName(String resourceAddress)"
    parameters:
    - id: "resourceAddress"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.documentdb.DocumentCollection"
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.resolveCollection(com.microsoft.azure.documentdb.internal.AbstractDocumentServiceRequest)"
  id: "resolveCollection(com.microsoft.azure.documentdb.internal.AbstractDocumentServiceRequest)"
  parent: "com.microsoft.azure.documentdb.internal.routing.CollectionCache"
  langs:
  - "java"
  name: "resolveCollection(AbstractDocumentServiceRequest request)"
  nameWithType: "CollectionCache.resolveCollection(AbstractDocumentServiceRequest request)"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.resolveCollection(AbstractDocumentServiceRequest request)"
  overload: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.resolveCollection*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal.routing"
  summary: "Resolves a request to a collection in a sticky manner. Unless request.ForceNameCacheRefresh is equal to true, it will return the same collection."
  syntax:
    content: "public DocumentCollection resolveCollection(AbstractDocumentServiceRequest request)"
    parameters:
    - id: "request"
      type: "com.microsoft.azure.documentdb.internal.AbstractDocumentServiceRequest"
      description: "Request to resolve"
    return:
      type: "com.microsoft.azure.documentdb.DocumentCollection"
      description: "Instance of DocumentCollection"
references:
- uid: "java.util.concurrent.ExecutorService"
  spec.java:
  - uid: "java.util.concurrent.ExecutorService"
    name: "ExecutorService"
    fullName: "java.util.concurrent.ExecutorService"
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.CollectionCache*"
  name: "CollectionCache"
  nameWithType: "CollectionCache.CollectionCache"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.CollectionCache"
  package: "com.microsoft.azure.documentdb.internal.routing"
- uid: "com.microsoft.azure.documentdb.internal.AbstractDocumentServiceRequest"
  name: "AbstractDocumentServiceRequest"
  nameWithType: "AbstractDocumentServiceRequest"
  fullName: "com.microsoft.azure.documentdb.internal.AbstractDocumentServiceRequest"
- uid: "com.microsoft.azure.documentdb.DocumentCollection"
  name: "DocumentCollection"
  nameWithType: "DocumentCollection"
  fullName: "com.microsoft.azure.documentdb.DocumentCollection"
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.resolveCollection*"
  name: "resolveCollection"
  nameWithType: "CollectionCache.resolveCollection"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.resolveCollection"
  package: "com.microsoft.azure.documentdb.internal.routing"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.refresh*"
  name: "refresh"
  nameWithType: "CollectionCache.refresh"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.refresh"
  package: "com.microsoft.azure.documentdb.internal.routing"
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.resolveByName*"
  name: "resolveByName"
  nameWithType: "CollectionCache.resolveByName"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.resolveByName"
  package: "com.microsoft.azure.documentdb.internal.routing"
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.getByRid*"
  name: "getByRid"
  nameWithType: "CollectionCache.getByRid"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.getByRid"
  package: "com.microsoft.azure.documentdb.internal.routing"
- uid: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.getByName*"
  name: "getByName"
  nameWithType: "CollectionCache.getByName"
  fullName: "com.microsoft.azure.documentdb.internal.routing.CollectionCache.getByName"
  package: "com.microsoft.azure.documentdb.internal.routing"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
