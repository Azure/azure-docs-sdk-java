### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode"
fullName: "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT,NodeT>"
name: "DAGNode<DataT,NodeT>"
nameWithType: "DAGNode<DataT,NodeT>"
summary: "The type representing node in a <xref uid=\"com.microsoft.azure.management.resources.fluentcore.dag.DAGraph\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DAGraph\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.dag.Node\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.management.resources.fluentcore.dag.Node.addChild(java.lang.String)"
- "com.microsoft.azure.management.resources.fluentcore.dag.Node.children()"
- "com.microsoft.azure.management.resources.fluentcore.dag.Node.data()"
- "com.microsoft.azure.management.resources.fluentcore.dag.Node.hasChildren()"
- "com.microsoft.azure.management.resources.fluentcore.dag.Node.key()"
- "com.microsoft.azure.management.resources.fluentcore.dag.Node.owner()"
- "com.microsoft.azure.management.resources.fluentcore.dag.Node.removeChild(java.lang.String)"
- "com.microsoft.azure.management.resources.fluentcore.dag.Node.setOwner(com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT,NodeT>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DAGNode<DataT,NodeT> extends Node<DataT,NodeT>"
constructors:
- "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.DAGNode(java.lang.String,DataT)"
methods:
- "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.addDependency(java.lang.String)"
- "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.addDependent(java.lang.String)"
- "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.dependencyKeys()"
- "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.hasDependencies()"
- "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.initialize()"
- "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.isPreparer()"
- "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.lock()"
- "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.onFaultedResolution(java.lang.String,java.lang.Throwable)"
- "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.onSuccessfulResolution(java.lang.String)"
- "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.removeDependency(java.lang.String)"
- "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.setPreparer(boolean)"
type: "class"
typeParameters:
- name: "DataT"
- name: "NodeT"
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.dag"
artifact: com.microsoft.azure:azure-mgmt-resources:1.38.1
