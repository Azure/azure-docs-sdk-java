### YamlMime:JavaType
uid: "com.azure.core.util.serializer.SerializerAdapter"
fullName: "com.azure.core.util.serializer.SerializerAdapter"
name: "SerializerAdapter"
nameWithType: "SerializerAdapter"
summary: "An interface defining the behaviors of a serializer."
syntax: "public interface SerializerAdapter"
methods:
- uid: "com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(byte[],java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(byte[] bytes, Type type, SerializerEncoding encoding)"
  name: "<T>deserialize(byte[] bytes, Type type, SerializerEncoding encoding)"
  nameWithType: "SerializerAdapter.<T>deserialize(byte[] bytes, Type type, SerializerEncoding encoding)"
  summary: "Deserializes a byte array into an object."
  modifiers:
  - "default"
  parameters:
  - description: "The byte array to deserialize."
    name: "bytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The type of the deserialized object."
    name: "type"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deserialization encoding."
    name: "encoding"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerEncoding?alt=com.azure.core.util.serializer.SerializerEncoding&text=SerializerEncoding\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default T <T>deserialize(byte[] bytes, Type type, SerializerEncoding encoding)"
  exceptions:
  - description: "If an IO exception was thrown during serialization."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Deserializes a byte array into an object."
  returns:
    description: "The string deserialized into an object."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(com.azure.core.http.HttpHeaders,java.lang.reflect.Type)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(HttpHeaders headers, Type type)"
  name: "<T>deserialize(HttpHeaders headers, Type type)"
  nameWithType: "SerializerAdapter.<T>deserialize(HttpHeaders headers, Type type)"
  summary: "Deserialize the provided headers returned from a REST API to an entity instance declared as the model to hold 'Matching' headers."
  modifiers:
  - "abstract"
  parameters:
  - description: "the REST API returned headers"
    name: "headers"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  - description: "the type to deserialize"
    name: "type"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T <T>deserialize(HttpHeaders headers, Type type)"
  exceptions:
  - description: "If an I/O error occurs"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Deserialize the provided headers returned from a REST API to an entity instance declared as the model to hold 'Matching' headers.\n\n'Matching' headers are the REST API returned headers those with:\n\n1.  header names same as name of a properties in the entity.\n2.  header names start with value of <xref uid=\"com.azure.core.annotation.HeaderCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.annotation.HeaderCollection\"></xref> annotation applied to the properties in the entity.\n\nWhen needed, the 'header entity' types must be declared as first generic argument of <xref uid=\"com.azure.core.http.rest.ResponseBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.http.rest.ResponseBase\"></xref> returned by java proxy method corresponding to the REST API. e.g. `Mono> getMetadata(args);` `class FooMetadataHeaders { String name; {@literal @}HeaderCollection(\"header-collection-prefix-\") Map headerCollection; }` in the case of above example, this method produces an instance of FooMetadataHeaders from provided `headers`."
  returns:
    description: "instance of header entity type created based on provided <code>headers</code>, if header entity model does\n not exist then return null"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(java.io.InputStream,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(InputStream inputStream, Type type, SerializerEncoding encoding)"
  name: "<T>deserialize(InputStream inputStream, Type type, SerializerEncoding encoding)"
  nameWithType: "SerializerAdapter.<T>deserialize(InputStream inputStream, Type type, SerializerEncoding encoding)"
  summary: "Deserializes a stream into an object."
  modifiers:
  - "default"
  parameters:
  - description: "The <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref> to deserialize."
    name: "inputStream"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The type of the deserialized object."
    name: "type"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deserialization encoding."
    name: "encoding"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerEncoding?alt=com.azure.core.util.serializer.SerializerEncoding&text=SerializerEncoding\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default T <T>deserialize(InputStream inputStream, Type type, SerializerEncoding encoding)"
  exceptions:
  - description: "If an IO exception was thrown during serialization."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Deserializes a stream into an object."
  returns:
    description: "The stream deserialized into an object."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(String value, Type type, SerializerEncoding encoding)"
  name: "<T>deserialize(String value, Type type, SerializerEncoding encoding)"
  nameWithType: "SerializerAdapter.<T>deserialize(String value, Type type, SerializerEncoding encoding)"
  summary: "Deserializes a string into an object."
  modifiers:
  - "abstract"
  parameters:
  - description: "The string to deserialize."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The type of the deserialized object."
    name: "type"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The deserialization encoding."
    name: "encoding"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerEncoding?alt=com.azure.core.util.serializer.SerializerEncoding&text=SerializerEncoding\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T <T>deserialize(String value, Type type, SerializerEncoding encoding)"
  exceptions:
  - description: "If an IO exception was thrown during deserialization."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Deserializes a string into an object."
  returns:
    description: "The string deserialized into an object."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.serializer.SerializerAdapter.<T>deserializeHeader(com.azure.core.util.Header,java.lang.reflect.Type)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.<T>deserializeHeader(Header header, Type type)"
  name: "<T>deserializeHeader(Header header, Type type)"
  nameWithType: "SerializerAdapter.<T>deserializeHeader(Header header, Type type)"
  summary: "Deserializes the provided header returned from a REST API to en entity instance declared as the model of the header."
  modifiers:
  - "default"
  parameters:
  - description: "The header."
    name: "header"
    type: "<xref href=\"com.azure.core.util.Header?alt=com.azure.core.util.Header&text=Header\" data-throw-if-not-resolved=\"False\" />"
  - description: "The type that represents the deserialized header."
    name: "type"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default T <T>deserializeHeader(Header header, Type type)"
  exceptions:
  - description: "If an I/O error occurs."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Deserializes the provided header returned from a REST API to en entity instance declared as the model of the header."
  returns:
    description: "A new instance of the type that represents the deserialized header."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.serializer.SerializerAdapter.serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.serialize(Object object, SerializerEncoding encoding)"
  name: "serialize(Object object, SerializerEncoding encoding)"
  nameWithType: "SerializerAdapter.serialize(Object object, SerializerEncoding encoding)"
  summary: "Serializes an object into a string."
  modifiers:
  - "abstract"
  parameters:
  - description: "The object to serialize."
    name: "object"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "The serialization encoding."
    name: "encoding"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerEncoding?alt=com.azure.core.util.serializer.SerializerEncoding&text=SerializerEncoding\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract String serialize(Object object, SerializerEncoding encoding)"
  exceptions:
  - description: "If an IO exception was thrown during serialization."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Serializes an object into a string."
  returns:
    description: "The object serialized as a string using the specified encoding. If the object is null, null is returned."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.serializer.SerializerAdapter.serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding,java.io.OutputStream)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.serialize(Object object, SerializerEncoding encoding, OutputStream outputStream)"
  name: "serialize(Object object, SerializerEncoding encoding, OutputStream outputStream)"
  nameWithType: "SerializerAdapter.serialize(Object object, SerializerEncoding encoding, OutputStream outputStream)"
  summary: "Serializes an object and writes its output into an <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref>."
  modifiers:
  - "default"
  parameters:
  - description: "The object to serialize."
    name: "object"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "The serialization encoding."
    name: "encoding"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerEncoding?alt=com.azure.core.util.serializer.SerializerEncoding&text=SerializerEncoding\" data-throw-if-not-resolved=\"False\" />"
  - description: "The <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> where the serialized object will be written."
    name: "outputStream"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default void serialize(Object object, SerializerEncoding encoding, OutputStream outputStream)"
  exceptions:
  - description: "If an IO exception was thrown during serialization."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Serializes an object and writes its output into an <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref>."
- uid: "com.azure.core.util.serializer.SerializerAdapter.serializeIterable(java.lang.Iterable<?>,com.azure.core.util.serializer.CollectionFormat)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.serializeIterable(Iterable<?> iterable, CollectionFormat format)"
  name: "serializeIterable(Iterable<?> iterable, CollectionFormat format)"
  nameWithType: "SerializerAdapter.serializeIterable(Iterable<?> iterable, CollectionFormat format)"
  summary: "Serializes an iterable into a string with the delimiter specified with the Swagger collection format joining each individual serialized items in the list."
  modifiers:
  - "default"
  parameters:
  - description: "The iterable to serialize."
    name: "iterable"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - description: "The collection joining format."
    name: "format"
    type: "<xref href=\"com.azure.core.util.serializer.CollectionFormat?alt=com.azure.core.util.serializer.CollectionFormat&text=CollectionFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default String serializeIterable(Iterable<?> iterable, CollectionFormat format)"
  desc: "Serializes an iterable into a string with the delimiter specified with the Swagger collection format joining each individual serialized items in the list."
  returns:
    description: "The iterable serialized as a joined string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.serializer.SerializerAdapter.serializeList(java.util.List<?>,com.azure.core.util.serializer.CollectionFormat)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.serializeList(List<?> list, CollectionFormat format)"
  name: "serializeList(List<?> list, CollectionFormat format)"
  nameWithType: "SerializerAdapter.serializeList(List<?> list, CollectionFormat format)"
  summary: "Serializes a list into a string with the delimiter specified with the Swagger collection format joining each individual serialized items in the list."
  modifiers:
  - "abstract"
  parameters:
  - description: "The list to serialize."
    name: "list"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - description: "The collection joining format."
    name: "format"
    type: "<xref href=\"com.azure.core.util.serializer.CollectionFormat?alt=com.azure.core.util.serializer.CollectionFormat&text=CollectionFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract String serializeList(List<?> list, CollectionFormat format)"
  desc: "Serializes a list into a string with the delimiter specified with the Swagger collection format joining each individual serialized items in the list."
  returns:
    description: "The list serialized as a joined string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.serializer.SerializerAdapter.serializeRaw(java.lang.Object)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.serializeRaw(Object object)"
  name: "serializeRaw(Object object)"
  nameWithType: "SerializerAdapter.serializeRaw(Object object)"
  summary: "Serializes an object into a raw string, leading and trailing quotes will be trimmed."
  modifiers:
  - "abstract"
  parameters:
  - description: "The object to serialize."
    name: "object"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract String serializeRaw(Object object)"
  desc: "Serializes an object into a raw string, leading and trailing quotes will be trimmed."
  returns:
    description: "The object serialized as a string. If the object is null, null is returned."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.serializer.SerializerAdapter.serializeToBytes(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.serializeToBytes(Object object, SerializerEncoding encoding)"
  name: "serializeToBytes(Object object, SerializerEncoding encoding)"
  nameWithType: "SerializerAdapter.serializeToBytes(Object object, SerializerEncoding encoding)"
  summary: "Serializes an object into a byte array."
  modifiers:
  - "default"
  parameters:
  - description: "The object to serialize."
    name: "object"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "The serialization encoding."
    name: "encoding"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerEncoding?alt=com.azure.core.util.serializer.SerializerEncoding&text=SerializerEncoding\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default byte[] serializeToBytes(Object object, SerializerEncoding encoding)"
  exceptions:
  - description: "If an IO exception was thrown during serialization."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Serializes an object into a byte array."
  returns:
    description: "The object serialized as a byte array."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
type: "interface"
desc: "An interface defining the behaviors of a serializer."
metadata: {}
package: "com.azure.core.util.serializer"
artifact: com.azure:azure-core:1.31.0
