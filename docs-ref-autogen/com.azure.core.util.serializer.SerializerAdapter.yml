### YamlMime:ManagedReference
items:
- uid: com.azure.core.util.serializer.SerializerAdapter
  id: SerializerAdapter
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer
  children:
  - com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(com.azure.core.http.HttpHeaders,java.lang.reflect.Type)
  - com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(java.io.InputStream,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)
  - com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)
  - com.azure.core.util.serializer.SerializerAdapter.serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding)
  - com.azure.core.util.serializer.SerializerAdapter.serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding,java.io.OutputStream)
  - com.azure.core.util.serializer.SerializerAdapter.serializeList(java.util.List<?>,com.azure.core.util.serializer.CollectionFormat)
  - com.azure.core.util.serializer.SerializerAdapter.serializeRaw(java.lang.Object)
  langs:
  - java
  name: SerializerAdapter
  nameWithType: SerializerAdapter
  fullName: com.azure.core.util.serializer.SerializerAdapter
  type: Interface
  package: com.azure.core.util.serializer
  summary: An interface defining the behaviors of a serializer.
  syntax:
    content: public interface SerializerAdapter
- uid: com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(com.azure.core.http.HttpHeaders,java.lang.reflect.Type)
  id: <T>deserialize(com.azure.core.http.HttpHeaders,java.lang.reflect.Type)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.SerializerAdapter
  langs:
  - java
  name: <T>deserialize(HttpHeaders headers, Type type)
  nameWithType: SerializerAdapter.<T>deserialize(HttpHeaders headers, Type type)
  fullName: com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(HttpHeaders headers, Type type)
  overload: com.azure.core.util.serializer.SerializerAdapter.deserialize*
  type: Method
  package: com.azure.core.util.serializer
  summary: >-
    Deserialize the provided headers returned from a REST API to an entity instance declared as the model to hold 'Matching' headers. 'Matching' headers are the REST API returned headers those with:


    1.  header names same as name of a properties in the entity.

    2.  header names start with value of <xref uid="com.azure.core.annotation.HeaderCollection" data-throw-if-not-resolved="false">com.azure.core.annotation.HeaderCollection</xref> annotation applied to the properties in the entity.


    When needed, the 'header entity' types must be declared as first generic argument of <xref uid="com.azure.core.http.rest.ResponseBase" data-throw-if-not-resolved="false">com.azure.core.http.rest.ResponseBase</xref> returned by java proxy method corresponding to the REST API. e.g. `Mono> getMetadata(args);` `class FooMetadataHeaders { String name; {@literal @}HeaderCollection("header-collection-prefix-") Map headerCollection; }` in the case of above example, this method produces an instance of FooMetadataHeaders from provided `headers`.
  syntax:
    content: public abstract T <T>deserialize(HttpHeaders headers, Type type)
    parameters:
    - id: headers
      type: com.azure.core.http.HttpHeaders
      description: the REST API returned headers
    - id: type
      type: java.lang.reflect.Type
      description: the type to deserialize
    return:
      type: T
      description: >-
        instance of header entity type created based on provided <code>headers</code>, if header entity model does not
         not exists then return null
  exceptions:
  - type: java.io.IOException
    description: If an I/O error occurs
- uid: com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(java.io.InputStream,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)
  id: <T>deserialize(java.io.InputStream,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.SerializerAdapter
  langs:
  - java
  name: <T>deserialize(InputStream inputStream, Type type, SerializerEncoding encoding)
  nameWithType: SerializerAdapter.<T>deserialize(InputStream inputStream, Type type, SerializerEncoding encoding)
  fullName: com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(InputStream inputStream, Type type, SerializerEncoding encoding)
  overload: com.azure.core.util.serializer.SerializerAdapter.deserialize*
  type: Method
  package: com.azure.core.util.serializer
  summary: Deserializes a byte\[\] into a `T` object.
  syntax:
    content: public default T <T>deserialize(InputStream inputStream, Type type, SerializerEncoding encoding)
    parameters:
    - id: inputStream
      type: java.io.InputStream
      description: The <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">InputStream</xref> containing the serialized object data to deserialize.
    - id: type
      type: java.lang.reflect.Type
      description: The type to deserialize.
    - id: encoding
      type: com.azure.core.util.serializer.SerializerEncoding
      description: The encoding used to serialize value.
    return:
      type: T
      description: The deserialized object, or null if it cannot be deserialized.
  exceptions:
  - type: java.io.IOException
    description: exception from deserialization
- uid: com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)
  id: <T>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.SerializerAdapter
  langs:
  - java
  name: <T>deserialize(String value, Type type, SerializerEncoding encoding)
  nameWithType: SerializerAdapter.<T>deserialize(String value, Type type, SerializerEncoding encoding)
  fullName: com.azure.core.util.serializer.SerializerAdapter.<T>deserialize(String value, Type type, SerializerEncoding encoding)
  overload: com.azure.core.util.serializer.SerializerAdapter.deserialize*
  type: Method
  package: com.azure.core.util.serializer
  summary: Deserializes a string into a `T` object.
  syntax:
    content: public abstract T <T>deserialize(String value, Type type, SerializerEncoding encoding)
    parameters:
    - id: value
      type: java.lang.String
      description: the string value to deserialize
    - id: type
      type: java.lang.reflect.Type
      description: the type to deserialize
    - id: encoding
      type: com.azure.core.util.serializer.SerializerEncoding
      description: the encoding used in the serialized value
    return:
      type: T
      description: the deserialized object
  exceptions:
  - type: java.io.IOException
    description: exception from deserialization
- uid: com.azure.core.util.serializer.SerializerAdapter.serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding)
  id: serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.SerializerAdapter
  langs:
  - java
  name: serialize(Object object, SerializerEncoding encoding)
  nameWithType: SerializerAdapter.serialize(Object object, SerializerEncoding encoding)
  fullName: com.azure.core.util.serializer.SerializerAdapter.serialize(Object object, SerializerEncoding encoding)
  overload: com.azure.core.util.serializer.SerializerAdapter.serialize*
  type: Method
  package: com.azure.core.util.serializer
  summary: Serializes an object into a string.
  syntax:
    content: public abstract String serialize(Object object, SerializerEncoding encoding)
    parameters:
    - id: object
      type: java.lang.Object
      description: the object to serialize
    - id: encoding
      type: com.azure.core.util.serializer.SerializerEncoding
      description: the encoding to use for serialization
    return:
      type: java.lang.String
      description: the serialized string. Null if the object to serialize is null
  exceptions:
  - type: java.io.IOException
    description: exception from serialization
- uid: com.azure.core.util.serializer.SerializerAdapter.serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding,java.io.OutputStream)
  id: serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding,java.io.OutputStream)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.SerializerAdapter
  langs:
  - java
  name: serialize(Object object, SerializerEncoding encoding, OutputStream outputStream)
  nameWithType: SerializerAdapter.serialize(Object object, SerializerEncoding encoding, OutputStream outputStream)
  fullName: com.azure.core.util.serializer.SerializerAdapter.serialize(Object object, SerializerEncoding encoding, OutputStream outputStream)
  overload: com.azure.core.util.serializer.SerializerAdapter.serialize*
  type: Method
  package: com.azure.core.util.serializer
  summary: Serializes an object and writes its output into an <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref>.
  syntax:
    content: public default void serialize(Object object, SerializerEncoding encoding, OutputStream outputStream)
    parameters:
    - id: object
      type: java.lang.Object
      description: The object to serialize.
    - id: encoding
      type: com.azure.core.util.serializer.SerializerEncoding
      description: The encoding to use for serialization.
    - id: outputStream
      type: java.io.OutputStream
      description: The <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref> where the serialized object will be written.
  exceptions:
  - type: java.io.IOException
    description: exception from serialization
- uid: com.azure.core.util.serializer.SerializerAdapter.serializeList(java.util.List<?>,com.azure.core.util.serializer.CollectionFormat)
  id: serializeList(java.util.List<?>,com.azure.core.util.serializer.CollectionFormat)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.SerializerAdapter
  langs:
  - java
  name: serializeList(List<?> list, CollectionFormat format)
  nameWithType: SerializerAdapter.serializeList(List<?> list, CollectionFormat format)
  fullName: com.azure.core.util.serializer.SerializerAdapter.serializeList(List<?> list, CollectionFormat format)
  overload: com.azure.core.util.serializer.SerializerAdapter.serializeList*
  type: Method
  package: com.azure.core.util.serializer
  summary: Serializes a list into a string with the delimiter specified with the Swagger collection format joining each individual serialized items in the list.
  syntax:
    content: public abstract String serializeList(List<?> list, CollectionFormat format)
    parameters:
    - id: list
      type: java.util.List<?>
      description: the list to serialize
    - id: format
      type: com.azure.core.util.serializer.CollectionFormat
      description: the Swagger collection format
    return:
      type: java.lang.String
      description: the serialized string
- uid: com.azure.core.util.serializer.SerializerAdapter.serializeRaw(java.lang.Object)
  id: serializeRaw(java.lang.Object)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.SerializerAdapter
  langs:
  - java
  name: serializeRaw(Object object)
  nameWithType: SerializerAdapter.serializeRaw(Object object)
  fullName: com.azure.core.util.serializer.SerializerAdapter.serializeRaw(Object object)
  overload: com.azure.core.util.serializer.SerializerAdapter.serializeRaw*
  type: Method
  package: com.azure.core.util.serializer
  summary: Serializes an object into a raw string. The leading and trailing quotes will be trimmed.
  syntax:
    content: public abstract String serializeRaw(Object object)
    parameters:
    - id: object
      type: java.lang.Object
      description: the object to serialize
    return:
      type: java.lang.String
      description: the serialized string. Null if the object to serialize is null
references:
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.core.util.serializer.SerializerEncoding
  name: SerializerEncoding
  nameWithType: SerializerEncoding
  fullName: com.azure.core.util.serializer.SerializerEncoding
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.util.serializer.SerializerAdapter.serialize*
  name: serialize
  nameWithType: SerializerAdapter.serialize
  fullName: com.azure.core.util.serializer.SerializerAdapter.serialize
  package: com.azure.core.util.serializer
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: com.azure.core.util.serializer.SerializerAdapter.serializeRaw*
  name: serializeRaw
  nameWithType: SerializerAdapter.serializeRaw
  fullName: com.azure.core.util.serializer.SerializerAdapter.serializeRaw
  package: com.azure.core.util.serializer
- uid: java.util.List<?>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.core.util.serializer.CollectionFormat
  name: CollectionFormat
  nameWithType: CollectionFormat
  fullName: com.azure.core.util.serializer.CollectionFormat
- uid: com.azure.core.util.serializer.SerializerAdapter.serializeList*
  name: serializeList
  nameWithType: SerializerAdapter.serializeList
  fullName: com.azure.core.util.serializer.SerializerAdapter.serializeList
  package: com.azure.core.util.serializer
- uid: java.lang.reflect.Type
  spec.java:
  - uid: java.lang.reflect.Type
    name: Type
    fullName: java.lang.reflect.Type
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.core.util.serializer.SerializerAdapter.deserialize*
  name: <T>deserialize
  nameWithType: SerializerAdapter.<T>deserialize
  fullName: com.azure.core.util.serializer.SerializerAdapter.<T>deserialize
  package: com.azure.core.util.serializer
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: com.azure.core.http.HttpHeaders
  name: HttpHeaders
  nameWithType: HttpHeaders
  fullName: com.azure.core.http.HttpHeaders
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
