### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.file.CloudFile
  id: CloudFile
  parent: com.microsoft.azure.storage.file
  children:
  - com.microsoft.azure.storage.file.CloudFile.abortCopy(final String)
  - com.microsoft.azure.storage.file.CloudFile.abortCopy(final String,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.assertValidFilePermissionOrKey()
  - com.microsoft.azure.storage.file.CloudFile.clearRange(final long,final long)
  - com.microsoft.azure.storage.file.CloudFile.clearRange(final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.closeAllHandlesSegmented()
  - com.microsoft.azure.storage.file.CloudFile.closeAllHandlesSegmented(final ResultContinuation,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.closeHandleSegmented(String)
  - com.microsoft.azure.storage.file.CloudFile.closeHandleSegmented(String,ResultContinuation,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.CloudFile(final CloudFile)
  - com.microsoft.azure.storage.file.CloudFile.CloudFile(final StorageUri)
  - com.microsoft.azure.storage.file.CloudFile.CloudFile(final StorageUri,final StorageCredentials)
  - com.microsoft.azure.storage.file.CloudFile.CloudFile(final StorageUri,final String,final CloudFileShare)
  - com.microsoft.azure.storage.file.CloudFile.CloudFile(final URI)
  - com.microsoft.azure.storage.file.CloudFile.CloudFile(final URI,final StorageCredentials)
  - com.microsoft.azure.storage.file.CloudFile.create(final long)
  - com.microsoft.azure.storage.file.CloudFile.create(final long,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.delete()
  - com.microsoft.azure.storage.file.CloudFile.delete(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.deleteIfExists()
  - com.microsoft.azure.storage.file.CloudFile.deleteIfExists(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.download(final OutputStream)
  - com.microsoft.azure.storage.file.CloudFile.download(final OutputStream,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.downloadAttributes()
  - com.microsoft.azure.storage.file.CloudFile.downloadAttributes(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.downloadFileRanges()
  - com.microsoft.azure.storage.file.CloudFile.downloadFileRanges(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.downloadRange(final long,final Long,final OutputStream)
  - com.microsoft.azure.storage.file.CloudFile.downloadRange(final long,final Long,final OutputStream,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.downloadRangeInternal(final long,final Long,final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray(final long,final Long,final byte [],final int)
  - com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray(final long,final Long,final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.downloadText()
  - com.microsoft.azure.storage.file.CloudFile.downloadText(final String,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.downloadToByteArray(final byte [],final int)
  - com.microsoft.azure.storage.file.CloudFile.downloadToByteArray(final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.downloadToFile(final String)
  - com.microsoft.azure.storage.file.CloudFile.downloadToFile(final String,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.exists()
  - com.microsoft.azure.storage.file.CloudFile.exists(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.fileServiceClient
  - com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy,final SharedAccessFileHeaders,final String)
  - com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy,final SharedAccessFileHeaders,final String,final IPRange,final SharedAccessProtocols)
  - com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy,final String)
  - com.microsoft.azure.storage.file.CloudFile.getCopyState()
  - com.microsoft.azure.storage.file.CloudFile.getMetadata()
  - com.microsoft.azure.storage.file.CloudFile.getName()
  - com.microsoft.azure.storage.file.CloudFile.getParent()
  - com.microsoft.azure.storage.file.CloudFile.getParentNameFromURI(final StorageUri,final CloudFileShare)
  - com.microsoft.azure.storage.file.CloudFile.getProperties()
  - com.microsoft.azure.storage.file.CloudFile.getServiceClient()
  - com.microsoft.azure.storage.file.CloudFile.getShare()
  - com.microsoft.azure.storage.file.CloudFile.getStorageUri()
  - com.microsoft.azure.storage.file.CloudFile.getStreamMinimumReadSizeInBytes()
  - com.microsoft.azure.storage.file.CloudFile.getStreamWriteSizeInBytes()
  - com.microsoft.azure.storage.file.CloudFile.getTransformedAddress(final OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.getUri()
  - com.microsoft.azure.storage.file.CloudFile.listHandles()
  - com.microsoft.azure.storage.file.CloudFile.listHandles(FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.listHandlesSegmented()
  - com.microsoft.azure.storage.file.CloudFile.listHandlesSegmented(final Integer,final ResultContinuation,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.openRead()
  - com.microsoft.azure.storage.file.CloudFile.openRead(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.openWriteExisting()
  - com.microsoft.azure.storage.file.CloudFile.openWriteExisting(AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.openWriteNew(final long)
  - com.microsoft.azure.storage.file.CloudFile.openWriteNew(final long,AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.parent
  - com.microsoft.azure.storage.file.CloudFile.putRangeFromURL(final long,final long,final URI,final long)
  - com.microsoft.azure.storage.file.CloudFile.putRangeFromURL(final long,final long,final URI,final long,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.resize(long)
  - com.microsoft.azure.storage.file.CloudFile.resize(long,AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.setFilePermission(String)
  - com.microsoft.azure.storage.file.CloudFile.setMetadata(final HashMap<String, String>)
  - com.microsoft.azure.storage.file.CloudFile.setProperties(final FileProperties)
  - com.microsoft.azure.storage.file.CloudFile.setShare(final CloudFileShare)
  - com.microsoft.azure.storage.file.CloudFile.setStorageUri(final StorageUri)
  - com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes(final int)
  - com.microsoft.azure.storage.file.CloudFile.setStreamWriteSizeInBytes(final int)
  - com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudBlob)
  - com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudBlob,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudFile)
  - com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudFile,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.startCopy(final URI)
  - com.microsoft.azure.storage.file.CloudFile.startCopy(final URI,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.streamMinimumReadSizeInBytes
  - com.microsoft.azure.storage.file.CloudFile.streamWriteSizeInBytes
  - com.microsoft.azure.storage.file.CloudFile.updateEtagAndLastModifiedFromResponse(HttpURLConnection)
  - com.microsoft.azure.storage.file.CloudFile.updateLengthFromResponse(HttpURLConnection)
  - com.microsoft.azure.storage.file.CloudFile.upload(final InputStream,final long)
  - com.microsoft.azure.storage.file.CloudFile.upload(final InputStream,final long,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray(final byte [],final int,final int)
  - com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray(final byte [],final int,final int,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.uploadFromFile(final String)
  - com.microsoft.azure.storage.file.CloudFile.uploadFromFile(final String,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.uploadMetadata()
  - com.microsoft.azure.storage.file.CloudFile.uploadMetadata(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.uploadProperties()
  - com.microsoft.azure.storage.file.CloudFile.uploadProperties(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream,final long,final long)
  - com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream,final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file.CloudFile.uploadText(final String)
  - com.microsoft.azure.storage.file.CloudFile.uploadText(final String,final String,final AccessCondition,FileRequestOptions,OperationContext)
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: CloudFile
  nameWithType: CloudFile
  fullName: com.microsoft.azure.storage.file.CloudFile
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
      branch: legacy-master
      repo: https://github.com/azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 44
  package: com.microsoft.azure.storage.file
  summary: "<p>Represents a Microsoft Azure File. </p>"
  syntax: &o1
    content: public class CloudFile implements ListFileItem
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.storage.file.ListFileItem
- uid: com.microsoft.azure.storage.file.CloudFile.abortCopy(final String)
  id: abortCopy(final String)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: abortCopy(final String copyId)
  nameWithType: CloudFile.abortCopy(final String copyId)
  fullName: com.microsoft.azure.storage.file.CloudFile.abortCopy(final String copyId)
  overload: com.microsoft.azure.storage.file.CloudFile.abortCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 217
  package: com.microsoft.azure.storage.file
  summary: "<p>Aborts an ongoing Azure File copy operation.</p>\r\n<p></p>"
  syntax:
    content: public final void abortCopy(final String copyId)
    parameters:
    - id: copyId
      type: 3d93591e
      description: <p>A <code>String</code> object that identifies the copy operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.abortCopy(final String,final AccessCondition,FileRequestOptions,OperationContext)
  id: abortCopy(final String,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: abortCopy(final String copyId, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.abortCopy(final String copyId, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.abortCopy(final String copyId, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.abortCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 242
  package: com.microsoft.azure.storage.file
  summary: "<p>Aborts an ongoing Azure File copy operation.</p>\r\n<p></p>"
  syntax:
    content: public final void abortCopy(final String copyId, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: copyId
      type: 3d93591e
      description: <p>A <code>String</code> object that identifies the copy operation. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the Azure File. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.assertValidFilePermissionOrKey()
  id: assertValidFilePermissionOrKey()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: assertValidFilePermissionOrKey()
  nameWithType: CloudFile.assertValidFilePermissionOrKey()
  fullName: com.microsoft.azure.storage.file.CloudFile.assertValidFilePermissionOrKey()
  overload: com.microsoft.azure.storage.file.CloudFile.assertValidFilePermissionOrKey*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3463
  package: com.microsoft.azure.storage.file
  summary: "<p>Verifies that the directory's filePermission and properties.filePermissionKey are both not set. </p>"
  syntax:
    content: protected void assertValidFilePermissionOrKey()
- uid: com.microsoft.azure.storage.file.CloudFile.clearRange(final long,final long)
  id: clearRange(final long,final long)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: clearRange(final long offset, final long length)
  nameWithType: CloudFile.clearRange(final long offset, final long length)
  fullName: com.microsoft.azure.storage.file.CloudFile.clearRange(final long offset, final long length)
  overload: com.microsoft.azure.storage.file.CloudFile.clearRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 530
  package: com.microsoft.azure.storage.file
  summary: "<p>Clears a range from a file. </p>\r\n<p>Calling  releases the storage space used by the specified range. Ranges that have been cleared are no longer tracked as part of the file.</p>\r\n<p></p>"
  syntax:
    content: public void clearRange(final long offset, final long length)
    parameters:
    - id: offset
      type: 4c60ae65
      description: <p>The offset, in bytes, at which to begin clearing. </p>
    - id: length
      type: 4c60ae65
      description: <p>The length, in bytes, of the data range to be cleared.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.clearRange(final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
  id: clearRange(final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: clearRange(final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.clearRange(final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.clearRange(final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.clearRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 560
  package: com.microsoft.azure.storage.file
  summary: "<p>Clears a range from a file using the specified lease ID, request options, and operation context. </p>\r\n<p>Calling  releases the storage space used by the specified range. Ranges that have been cleared are no longer tracked as part of the file.</p>\r\n<p></p>"
  syntax:
    content: public void clearRange(final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset, in bytes, at which to begin clearing. </p>
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the data range to be cleared. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.closeAllHandlesSegmented()
  id: closeAllHandlesSegmented()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: closeAllHandlesSegmented()
  nameWithType: CloudFile.closeAllHandlesSegmented()
  fullName: com.microsoft.azure.storage.file.CloudFile.closeAllHandlesSegmented()
  overload: com.microsoft.azure.storage.file.CloudFile.closeAllHandlesSegmented*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2947
  package: com.microsoft.azure.storage.file
  summary: "<p>Close all SMB handles on this file.</p>\r\n<p></p>"
  syntax:
    content: public ResultSegment<Integer> closeAllHandlesSegmented()
    return:
      type: com.microsoft.azure.storage.ResultSegmentb7bc04e2
      description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> which has one element which is the number of handles closed and a continuation to follow in case the operation took too long to be completed atomically. </p>
  exceptions:
  - type: ca4f407a
- uid: com.microsoft.azure.storage.file.CloudFile.closeAllHandlesSegmented(final ResultContinuation,FileRequestOptions,OperationContext)
  id: closeAllHandlesSegmented(final ResultContinuation,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: closeAllHandlesSegmented(final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.closeAllHandlesSegmented(final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.closeAllHandlesSegmented(final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.closeAllHandlesSegmented*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2970
  package: com.microsoft.azure.storage.file
  summary: "<p>Close all SMB handles on this file.</p>\r\n<p></p>"
  syntax:
    content: public ResultSegment<Integer> closeAllHandlesSegmented(final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: continuationToken
      type: 93de0ef9com.microsoft.azure.storage.ResultContinuation
      description: <p>A <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object that represents a continuation token returned by a previous listing operation. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: com.microsoft.azure.storage.ResultSegmentb7bc04e2
      description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> which has one element which is the number of handles closed and a continuation to follow in case the operation took too long to be completed atomically. </p>
  exceptions:
  - type: ca4f407a
- uid: com.microsoft.azure.storage.file.CloudFile.closeHandleSegmented(String)
  id: closeHandleSegmented(String)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: closeHandleSegmented(String handleID)
  nameWithType: CloudFile.closeHandleSegmented(String handleID)
  fullName: com.microsoft.azure.storage.file.CloudFile.closeHandleSegmented(String handleID)
  overload: com.microsoft.azure.storage.file.CloudFile.closeHandleSegmented*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2999
  package: com.microsoft.azure.storage.file
  summary: "<p>Close all SMB handles on this file.</p>\r\n<p></p>"
  syntax:
    content: public ResultSegment<Integer> closeHandleSegmented(String handleID)
    parameters:
    - id: handleID
      type: "26831127"
      description: <p>The handle to close.</p>
    return:
      type: com.microsoft.azure.storage.ResultSegmentb7bc04e2
      description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> which has one element which is the number of handles closed and a continuation to follow in case the operation took too long to be completed atomically. </p>
  exceptions:
  - type: ca4f407a
- uid: com.microsoft.azure.storage.file.CloudFile.closeHandleSegmented(String,ResultContinuation,FileRequestOptions,OperationContext)
  id: closeHandleSegmented(String,ResultContinuation,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: closeHandleSegmented(String handleID, ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.closeHandleSegmented(String handleID, ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.closeHandleSegmented(String handleID, ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.closeHandleSegmented*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3024
  package: com.microsoft.azure.storage.file
  summary: "<p>Close all SMB handles on this file.</p>\r\n<p></p>"
  syntax:
    content: public ResultSegment<Integer> closeHandleSegmented(String handleID, ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: handleID
      type: "26831127"
      description: <p>The handle to close. </p>
    - id: continuationToken
      type: com.microsoft.azure.storage.ResultContinuation
      description: <p>A <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object that represents a continuation token returned by a previous listing operation. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: com.microsoft.azure.storage.ResultSegmentb7bc04e2
      description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> which has one element which is the number of handles closed and a continuation to follow in case the operation took too long to be completed atomically. </p>
  exceptions:
  - type: ca4f407a
- uid: com.microsoft.azure.storage.file.CloudFile.CloudFile(final CloudFile)
  id: CloudFile(final CloudFile)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: CloudFile(final CloudFile otherFile)
  nameWithType: CloudFile.CloudFile(final CloudFile otherFile)
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile(final CloudFile otherFile)
  overload: com.microsoft.azure.storage.file.CloudFile.CloudFile*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 165
  package: com.microsoft.azure.storage.file
  summary: "<p>Creates an instance of the  class by copying values from another cloud file.</p>\r\n<p></p>"
  syntax:
    content: public CloudFile(final CloudFile otherFile)
    parameters:
    - id: otherFile
      type: 93de0ef9com.microsoft.azure.storage.file.CloudFile
      description: <p>A <code>CloudFile</code> object that represents the file to copy. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.CloudFile(final StorageUri)
  id: CloudFile(final StorageUri)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: CloudFile(final StorageUri fileAbsoluteUri)
  nameWithType: CloudFile.CloudFile(final StorageUri fileAbsoluteUri)
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile(final StorageUri fileAbsoluteUri)
  overload: com.microsoft.azure.storage.file.CloudFile.CloudFile*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 121
  package: com.microsoft.azure.storage.file
  summary: "<p>Creates an instance of the  class using the specified absolute StorageUri.</p>\r\n<p></p>"
  syntax:
    content: public CloudFile(final StorageUri fileAbsoluteUri)
    parameters:
    - id: fileAbsoluteUri
      type: 93de0ef9com.microsoft.azure.storage.StorageUri
      description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the absolute URI to the file.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.CloudFile(final StorageUri,final StorageCredentials)
  id: CloudFile(final StorageUri,final StorageCredentials)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: CloudFile(final StorageUri fileAbsoluteUri, final StorageCredentials credentials)
  nameWithType: CloudFile.CloudFile(final StorageUri fileAbsoluteUri, final StorageCredentials credentials)
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile(final StorageUri fileAbsoluteUri, final StorageCredentials credentials)
  overload: com.microsoft.azure.storage.file.CloudFile.CloudFile*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 155
  package: com.microsoft.azure.storage.file
  summary: "<p>Creates an instance of the  class using the specified absolute StorageUri and credentials.</p>\r\n<p></p>"
  syntax:
    content: public CloudFile(final StorageUri fileAbsoluteUri, final StorageCredentials credentials)
    parameters:
    - id: fileAbsoluteUri
      type: 93de0ef9com.microsoft.azure.storage.StorageUri
      description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the absolute URI to the file. </p>
    - id: credentials
      type: 93de0ef9com.microsoft.azure.storage.StorageCredentials
      description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.CloudFile(final StorageUri,final String,final CloudFileShare)
  id: CloudFile(final StorageUri,final String,final CloudFileShare)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: CloudFile(final StorageUri uri, final String fileName, final CloudFileShare share)
  nameWithType: CloudFile.CloudFile(final StorageUri uri, final String fileName, final CloudFileShare share)
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile(final StorageUri uri, final String fileName, final CloudFileShare share)
  overload: com.microsoft.azure.storage.file.CloudFile.CloudFile*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 195
  package: com.microsoft.azure.storage.file
  summary: "<p>Creates an instance of the  class using the specified address, share, and client.</p>\r\n<p></p>"
  syntax:
    content: protected CloudFile(final StorageUri uri, final String fileName, final CloudFileShare share)
    parameters:
    - id: uri
      type: 93de0ef9com.microsoft.azure.storage.StorageUri
      description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> that represents the file directory's address. </p>
    - id: fileName
      type: 3d93591e
      description: <p>A <code>String</code> that represents the name of the file. </p>
    - id: share
      type: 93de0ef9com.microsoft.azure.storage.file.CloudFileShare
      description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileShare" data-throw-if-not-resolved="false" data-raw-source="CloudFileShare"></xref> object that represents the associated file share. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.CloudFile(final URI)
  id: CloudFile(final URI)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: CloudFile(final URI fileAbsoluteUri)
  nameWithType: CloudFile.CloudFile(final URI fileAbsoluteUri)
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile(final URI fileAbsoluteUri)
  overload: com.microsoft.azure.storage.file.CloudFile.CloudFile*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 106
  package: com.microsoft.azure.storage.file
  summary: "<p>Creates an instance of the  class using the specified absolute URI.</p>\r\n<p></p>"
  syntax:
    content: public CloudFile(final URI fileAbsoluteUri)
    parameters:
    - id: fileAbsoluteUri
      type: bac42120
      description: <p>A <code>java.net.URI</code> object that represents the absolute URI to the file.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.CloudFile(final URI,final StorageCredentials)
  id: CloudFile(final URI,final StorageCredentials)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: CloudFile(final URI fileAbsoluteUri, final StorageCredentials credentials)
  nameWithType: CloudFile.CloudFile(final URI fileAbsoluteUri, final StorageCredentials credentials)
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile(final URI fileAbsoluteUri, final StorageCredentials credentials)
  overload: com.microsoft.azure.storage.file.CloudFile.CloudFile*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 138
  package: com.microsoft.azure.storage.file
  summary: "<p>Creates an instance of the  class using the specified absolute URI and credentials.</p>\r\n<p></p>"
  syntax:
    content: public CloudFile(final URI fileAbsoluteUri, final StorageCredentials credentials)
    parameters:
    - id: fileAbsoluteUri
      type: bac42120
      description: <p>A <code>java.net.URI</code> object that represents the absolute URI to the file. </p>
    - id: credentials
      type: 93de0ef9com.microsoft.azure.storage.StorageCredentials
      description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.create(final long)
  id: create(final long)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: create(final long size)
  nameWithType: CloudFile.create(final long size)
  fullName: com.microsoft.azure.storage.file.CloudFile.create(final long size)
  overload: com.microsoft.azure.storage.file.CloudFile.create*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 587
  package: com.microsoft.azure.storage.file
  summary: "<p>Creates a file. If the file already exists, this will replace it.</p>\r\n<p></p>"
  syntax:
    content: public void create(final long size)
    parameters:
    - id: size
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the size, in bytes, of the file.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.create(final long,final AccessCondition,FileRequestOptions,OperationContext)
  id: create(final long,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: create(final long size, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.create(final long size, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.create(final long size, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.create*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 613
  package: com.microsoft.azure.storage.file
  summary: "<p>Creates a file using the specified access condition, request options and operation context. If the file already exists, this will replace it.</p>\r\n<p></p>"
  syntax:
    content: public void create(final long size, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: size
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the size, in bytes, of the file. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.delete()
  id: delete()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: delete()
  nameWithType: CloudFile.delete()
  fullName: com.microsoft.azure.storage.file.CloudFile.delete()
  overload: com.microsoft.azure.storage.file.CloudFile.delete*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 685
  package: com.microsoft.azure.storage.file
  summary: "<p>Deletes the file.</p>\r\n<p></p>"
  syntax:
    content: public final void delete()
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.delete(final AccessCondition,FileRequestOptions,OperationContext)
  id: delete(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: delete(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.delete(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.delete(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.delete*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 708
  package: com.microsoft.azure.storage.file
  summary: "<p>Deletes the file using the specified access condition, request options, and operation context.</p>\r\n<p></p>"
  syntax:
    content: public final void delete(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.deleteIfExists()
  id: deleteIfExists()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: deleteIfExists()
  nameWithType: CloudFile.deleteIfExists()
  fullName: com.microsoft.azure.storage.file.CloudFile.deleteIfExists()
  overload: com.microsoft.azure.storage.file.CloudFile.deleteIfExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 734
  package: com.microsoft.azure.storage.file
  summary: "<p>Deletes the file if it exists.</p>\r\n<p></p>"
  syntax:
    content: public final boolean deleteIfExists()
    return:
      type: 4dda0764
      description: >-
        <p>

          <code>true</code> if the file was deleted; otherwise, <code>false</code>.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.deleteIfExists(final AccessCondition,FileRequestOptions,OperationContext)
  id: deleteIfExists(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: deleteIfExists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.deleteIfExists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.deleteIfExists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.deleteIfExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 759
  package: com.microsoft.azure.storage.file
  summary: "<p>Deletes the file if it exists, using the specified access condition, request options, and operation context.</p>\r\n<p></p>"
  syntax:
    content: public final boolean deleteIfExists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 4dda0764
      description: >-
        <p>

          <code>true</code> if the file existed and was deleted; otherwise, <code>false</code></p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.download(final OutputStream)
  id: download(final OutputStream)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: download(final OutputStream outStream)
  nameWithType: CloudFile.download(final OutputStream outStream)
  fullName: com.microsoft.azure.storage.file.CloudFile.download(final OutputStream outStream)
  overload: com.microsoft.azure.storage.file.CloudFile.download*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 828
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads the contents of a file to a stream.</p>\r\n<p></p>"
  syntax:
    content: public final void download(final OutputStream outStream)
    parameters:
    - id: outStream
      type: 688beaca
      description: <p>An <code><xref uid="" data-throw-if-not-resolved="false" data-raw-source="OutputStream"></xref></code> object that represents the target stream. </p>
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.download(final OutputStream,final AccessCondition,FileRequestOptions,OperationContext)
  id: download(final OutputStream,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: download(final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.download(final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.download(final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.download*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 851
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads the contents of a file to a stream using the specified request options and operation context.</p>\r\n<p></p>"
  syntax:
    content: public final void download(final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: outStream
      type: 688beaca
      description: <p>An <code>OutputStream</code> object that represents the target stream. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.downloadAttributes()
  id: downloadAttributes()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadAttributes()
  nameWithType: CloudFile.downloadAttributes()
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadAttributes()
  overload: com.microsoft.azure.storage.file.CloudFile.downloadAttributes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1470
  package: com.microsoft.azure.storage.file
  summary: "<p>Populates a file's properties and metadata. </p>\r\n<p>This method populates the file's system properties and user-defined metadata. Before reading or modifying a file's properties or metadata, call this method or its overload to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>\r\n<p></p>"
  syntax: &o4
    content: public final void downloadAttributes()
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.downloadAttributes(final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadAttributes(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadAttributes(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadAttributes(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadAttributes(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.downloadAttributes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1496
  package: com.microsoft.azure.storage.file
  summary: "<p>Populates a file's properties and metadata using the specified request options and operation context. </p>\r\n<p>This method populates the file's system properties and user-defined metadata. Before reading or modifying a file's properties or metadata, call this method or its overload to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>\r\n<p></p>"
  syntax:
    content: public final void downloadAttributes(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.downloadFileRanges()
  id: downloadFileRanges()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadFileRanges()
  nameWithType: CloudFile.downloadFileRanges()
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadFileRanges()
  overload: com.microsoft.azure.storage.file.CloudFile.downloadFileRanges*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1229
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns a collection of file ranges and their starting and ending byte offsets. </p>\r\n<p>The start and end byte offsets for each file range are inclusive.</p>\r\n<p></p>"
  syntax:
    content: public ArrayList<FileRange> downloadFileRanges()
    return:
      type: 573b1e0bcom.microsoft.azure.storage.file.FileRangea08ddfce
      description: <p>An <code>ArrayList</code> object which represents the set of file ranges and their starting and ending byte offsets.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.downloadFileRanges(final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadFileRanges(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadFileRanges(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadFileRanges(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadFileRanges(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.downloadFileRanges*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1255
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns a collection of file ranges and their starting and ending byte offsets using the specified request options and operation context.</p>\r\n<p></p>"
  syntax:
    content: public ArrayList<FileRange> downloadFileRanges(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 573b1e0bcom.microsoft.azure.storage.file.FileRangea08ddfce
      description: <p>An <code>ArrayList</code> object which represents the set of file ranges and their starting and ending byte offsets.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.downloadRange(final long,final Long,final OutputStream)
  id: downloadRange(final long,final Long,final OutputStream)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadRange(final long offset, final Long length, final OutputStream outStream)
  nameWithType: CloudFile.downloadRange(final long offset, final Long length, final OutputStream outStream)
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadRange(final long offset, final Long length, final OutputStream outStream)
  overload: com.microsoft.azure.storage.file.CloudFile.downloadRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 878
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads the contents of a file to a stream.</p>\r\n<p></p>"
  syntax:
    content: public final void downloadRange(final long offset, final Long length, final OutputStream outStream)
    parameters:
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset to use as the starting point for the source. </p>
    - id: length
      type: 6c34dcee
      description: <p>A <code>Long</code> which represents the number of bytes to read or <code>null</code>. </p>
    - id: outStream
      type: 688beaca
      description: <p>An <code><xref uid="" data-throw-if-not-resolved="false" data-raw-source="OutputStream"></xref></code> object that represents the target stream. </p>
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.downloadRange(final long,final Long,final OutputStream,final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadRange(final long,final Long,final OutputStream,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadRange(final long offset, final Long length, final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadRange(final long offset, final Long length, final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadRange(final long offset, final Long length, final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.downloadRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 906
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads the contents of a file to a stream using the specified request options and operation context.</p>\r\n<p></p>"
  syntax:
    content: public final void downloadRange(final long offset, final Long length, final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset to use as the starting point for the source. </p>
    - id: length
      type: 6c34dcee
      description: <p>A <code>Long</code> which represents the number of bytes to read or <code>null</code>. </p>
    - id: outStream
      type: 688beaca
      description: <p>An <code><xref uid="" data-throw-if-not-resolved="false" data-raw-source="OutputStream"></xref></code> object that represents the target stream. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.downloadRangeInternal(final long,final Long,final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadRangeInternal(final long,final Long,final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadRangeInternal(final long fileOffset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadRangeInternal(final long fileOffset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadRangeInternal(final long fileOffset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.downloadRangeInternal*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 946
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads a range of bytes from the file to the given byte buffer.</p>\r\n<p></p>"
  syntax:
    content: protected final int downloadRangeInternal(final long fileOffset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: fileOffset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset within the file to begin downloading. </p>
    - id: length
      type: 6c34dcee
      description: <p>A <code>Long</code> which represents the number of bytes to read. </p>
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the buffer to write to. </p>
    - id: bufferOffset
      type: cd225469
      description: <p>An <code>int</code> which represents the offset in the byte buffer to begin writing. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object used to track the execution of the operation. </p>
    return:
      type: cd225469
  exceptions:
  - type: ca4f407a
    description: <p>an exception representing any error which occurred during the operation. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray(final long,final Long,final byte [],final int)
  id: downloadRangeToByteArray(final long,final Long,final byte [],final int)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset)
  nameWithType: CloudFile.downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset)
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset)
  overload: com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 982
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads a range of bytes from the file to the given byte buffer.</p>\r\n<p></p>"
  syntax:
    content: public final int downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset)
    parameters:
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the byte offset to use as the starting point for the source. </p>
    - id: length
      type: 6c34dcee
      description: <p>A <code>Long</code> which represents the number of bytes to read or null. </p>
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the buffer to which the file bytes are downloaded. </p>
    - id: bufferOffset
      type: cd225469
      description: <p>An <code>int</code> which represents the byte offset to use as the starting point for the target.</p>
    return:
      type: cd225469
  exceptions:
  - type: ca4f407a
- uid: com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray(final long,final Long,final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadRangeToByteArray(final long,final Long,final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1015
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads a range of bytes from the file to the given byte buffer, using the specified request options and operation context.</p>\r\n<p></p>"
  syntax:
    content: public final int downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the byte offset to use as the starting point for the source. </p>
    - id: length
      type: 6c34dcee
      description: <p>A <code>Long</code> which represents the number of bytes to read or <code>null</code>. </p>
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the buffer to which the file bytes are downloaded. </p>
    - id: bufferOffset
      type: cd225469
      description: <p>An <code>int</code> which represents the byte offset to use as the starting point for the target. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: cd225469
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.downloadText()
  id: downloadText()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadText()
  nameWithType: CloudFile.downloadText()
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadText()
  overload: com.microsoft.azure.storage.file.CloudFile.downloadText*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1181
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads a file to a string using the platform's default encoding.</p>\r\n<p></p>"
  syntax:
    content: public String downloadText()
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents the file's contents.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file.CloudFile.downloadText(final String,final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadText(final String,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadText(final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadText(final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadText(final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.downloadText*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1209
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads a file to a string using the specified encoding.</p>\r\n<p></p>"
  syntax:
    content: public String downloadText(final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: charsetName
      type: 3d93591e
      description: <p>A <code>String</code> which represents the name of the charset to use to encode the content. If null, the platform's default encoding is used. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents the file's contents.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file.CloudFile.downloadToByteArray(final byte [],final int)
  id: downloadToByteArray(final byte [],final int)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadToByteArray(final byte[] buffer, final int bufferOffset)
  nameWithType: CloudFile.downloadToByteArray(final byte[] buffer, final int bufferOffset)
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadToByteArray(final byte[] buffer, final int bufferOffset)
  overload: com.microsoft.azure.storage.file.CloudFile.downloadToByteArray*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1048
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads a range of bytes from the file to the given byte buffer.</p>\r\n<p></p>"
  syntax:
    content: public final int downloadToByteArray(final byte[] buffer, final int bufferOffset)
    parameters:
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the buffer to which the file bytes are downloaded. </p>
    - id: bufferOffset
      type: cd225469
      description: <p>An <code>int</code> which represents the byte offset to use as the starting point for the target.</p>
    return:
      type: cd225469
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.downloadToByteArray(final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadToByteArray(final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadToByteArray(final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadToByteArray(final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadToByteArray(final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.downloadToByteArray*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1076
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads a range of bytes from the file to the given byte buffer, using the specified request options and operation context.</p>\r\n<p></p>"
  syntax:
    content: public final int downloadToByteArray(final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the buffer to which the file bytes are downloaded. </p>
    - id: bufferOffset
      type: cd225469
      description: <p>A <code>long</code> which represents the byte offset to use as the starting point for the target. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: cd225469
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.downloadToFile(final String)
  id: downloadToFile(final String)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadToFile(final String path)
  nameWithType: CloudFile.downloadToFile(final String path)
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadToFile(final String path)
  overload: com.microsoft.azure.storage.file.CloudFile.downloadToFile*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1113
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads a file.</p>\r\n<p></p>"
  syntax:
    content: public void downloadToFile(final String path)
    parameters:
    - id: path
      type: 3d93591e
      description: <p>A <code>String</code> which represents the path to the file that will be created.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file.CloudFile.downloadToFile(final String,final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadToFile(final String,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: downloadToFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadToFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadToFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.downloadToFile*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1137
  package: com.microsoft.azure.storage.file
  summary: "<p>Downloads a file.</p>\r\n<p></p>"
  syntax:
    content: public void downloadToFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: path
      type: 3d93591e
      description: <p>A <code>String</code> which represents the path to the file that will be created. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file.CloudFile.exists()
  id: exists()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: exists()
  nameWithType: CloudFile.exists()
  fullName: com.microsoft.azure.storage.file.CloudFile.exists()
  overload: com.microsoft.azure.storage.file.CloudFile.exists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1565
  package: com.microsoft.azure.storage.file
  summary: "<p>Checks to see if the file exists.</p>\r\n<p></p>"
  syntax:
    content: public final boolean exists()
    return:
      type: 4dda0764
      description: >-
        <p>

          <code>true</code> if the file exists, otherwise <code>false</code>.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.exists(final AccessCondition,FileRequestOptions,OperationContext)
  id: exists(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.exists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1589
  package: com.microsoft.azure.storage.file
  summary: "<p>Checks to see if the file exists, using the specified access condition, request options and operation context.</p>\r\n<p></p>"
  syntax:
    content: public final boolean exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 4dda0764
      description: >-
        <p>

          <code>true</code> if the file exists, otherwise <code>false</code>.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.fileServiceClient
  id: fileServiceClient
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: fileServiceClient
  nameWithType: CloudFile.fileServiceClient
  fullName: com.microsoft.azure.storage.file.CloudFile.fileServiceClient
  type: Field
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 73
  package: com.microsoft.azure.storage.file
  summary: "<p>Represents the file service client. </p>"
  syntax:
    content: protected CloudFileClient fileServiceClient
    return:
      type: com.microsoft.azure.storage.file.CloudFileClient
- uid: com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy,final SharedAccessFileHeaders,final String)
  id: generateSharedAccessSignature(final SharedAccessFilePolicy,final SharedAccessFileHeaders,final String)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier)
  nameWithType: CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier)
  fullName: com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier)
  overload: com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1701
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns a shared access signature for the file using the specified group policy identifier and shared access file headers. Note this does not contain the leading \"?\".</p>\r\n<p></p>"
  syntax:
    content: public String generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier)
    parameters:
    - id: policy
      type: 93de0ef9com.microsoft.azure.storage.file.SharedAccessFilePolicy
      description: <p>A <code><xref uid="com.microsoft.azure.storage.file.SharedAccessFilePolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessFilePolicy"></xref></code> object that represents the access policy for the shared access signature. </p>
    - id: headers
      type: 93de0ef9com.microsoft.azure.storage.file.SharedAccessFileHeaders
      description: <p>A <code><xref uid="com.microsoft.azure.storage.file.SharedAccessFileHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessFileHeaders"></xref></code> object that represents the optional header values to set for a file accessed with this shared access signature. </p>
    - id: groupPolicyIdentifier
      type: 3d93591e
      description: <p>A <code>String</code> that represents the share-level access policy.</p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> that represents the shared access signature.</p>
  exceptions:
  - type: 3c87bd19
    description: <p>If the credentials are invalid. </p>
  - type: e333ca4f
    description: <p>If the credentials are invalid. </p>
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy,final SharedAccessFileHeaders,final String,final IPRange,final SharedAccessProtocols)
  id: generateSharedAccessSignature(final SharedAccessFilePolicy,final SharedAccessFileHeaders,final String,final IPRange,final SharedAccessProtocols)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  nameWithType: CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  fullName: com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  overload: com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1735
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns a shared access signature for the file using the specified group policy identifier and shared access file headers. Note this does not contain the leading \"?\".</p>\r\n<p></p>"
  syntax:
    content: public String generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
    parameters:
    - id: policy
      type: 93de0ef9com.microsoft.azure.storage.file.SharedAccessFilePolicy
      description: <p>A <code><xref uid="com.microsoft.azure.storage.file.SharedAccessFilePolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessFilePolicy"></xref></code> object that represents the access policy for the shared access signature. </p>
    - id: headers
      type: 93de0ef9com.microsoft.azure.storage.file.SharedAccessFileHeaders
      description: <p>A <code><xref uid="com.microsoft.azure.storage.file.SharedAccessFileHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessFileHeaders"></xref></code> object that represents the optional header values to set for a file accessed with this shared access signature. </p>
    - id: groupPolicyIdentifier
      type: 3d93591e
      description: <p>A <code>String</code> that represents the share-level access policy. </p>
    - id: ipRange
      type: 93de0ef9com.microsoft.azure.storage.IPRange
      description: <p>A <xref uid="com.microsoft.azure.storage.IPRange" data-throw-if-not-resolved="false" data-raw-source="IPRange"></xref> object containing the range of allowed IP addresses. </p>
    - id: protocols
      type: 93de0ef9com.microsoft.azure.storage.SharedAccessProtocols
      description: <p>A <xref uid="com.microsoft.azure.storage.SharedAccessProtocols" data-throw-if-not-resolved="false" data-raw-source="SharedAccessProtocols"></xref> representing the allowed Internet protocols.</p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> that represents the shared access signature.</p>
  exceptions:
  - type: 3c87bd19
    description: <p>If the credentials are invalid. </p>
  - type: e333ca4f
    description: <p>If the credentials are invalid. </p>
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy,final String)
  id: generateSharedAccessSignature(final SharedAccessFilePolicy,final String)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  nameWithType: CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  fullName: com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  overload: com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1674
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns a shared access signature for the file using the specified group policy identifier and shared access file headers. Note this does not contain the leading \"?\".</p>\r\n<p></p>"
  syntax:
    content: public String generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
    parameters:
    - id: policy
      type: 93de0ef9com.microsoft.azure.storage.file.SharedAccessFilePolicy
      description: <p>A <code><xref uid="com.microsoft.azure.storage.file.SharedAccessFilePolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessFilePolicy"></xref></code> object that represents the access policy for the shared access signature. </p>
    - id: groupPolicyIdentifier
      type: 3d93591e
      description: <p>A <code>String</code> that represents the share-level access policy.</p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> that represents the shared access signature.</p>
  exceptions:
  - type: e333ca4f
    description: <p>If the credentials are invalid. </p>
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.getCopyState()
  id: getCopyState()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getCopyState()
  nameWithType: CloudFile.getCopyState()
  fullName: com.microsoft.azure.storage.file.CloudFile.getCopyState()
  overload: com.microsoft.azure.storage.file.CloudFile.getCopyState*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1784
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns the Azure File's copy state.</p>\r\n<p></p>"
  syntax:
    content: public CopyState getCopyState()
    return:
      type: com.microsoft.azure.storage.file.CopyState
      description: <p>A <xref uid="com.microsoft.azure.storage.file.CopyState" data-throw-if-not-resolved="false" data-raw-source="CopyState"></xref> object that represents the copy state of the file. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.getMetadata()
  id: getMetadata()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getMetadata()
  nameWithType: CloudFile.getMetadata()
  fullName: com.microsoft.azure.storage.file.CloudFile.getMetadata()
  overload: com.microsoft.azure.storage.file.CloudFile.getMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3261
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns the metadata for the file.</p>\r\n<p></p>"
  syntax:
    content: public final HashMap<String, String> getMetadata()
    return:
      type: 496ce5ae
      description: <p>A <code>java.util.HashMap</code> object that represents the metadata for the file. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.getName()
  id: getName()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getName()
  nameWithType: CloudFile.getName()
  fullName: com.microsoft.azure.storage.file.CloudFile.getName()
  overload: com.microsoft.azure.storage.file.CloudFile.getName*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3270
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns the name of the file.</p>\r\n<p></p>"
  syntax:
    content: public final String getName()
    return:
      type: 3d93591e
      description: <p>A <code>String</code> that represents the name of the file. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.getParent()
  id: getParent()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getParent()
  nameWithType: CloudFile.getParent()
  fullName: com.microsoft.azure.storage.file.CloudFile.getParent()
  overload: com.microsoft.azure.storage.file.CloudFile.getParent*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3285
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns the file item's parent.</p>\r\n<p></p>"
  syntax:
    content: public final CloudFileDirectory getParent()
    return:
      type: 93de0ef9com.microsoft.azure.storage.file.CloudFileDirectory
      description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileDirectory" data-throw-if-not-resolved="false" data-raw-source="CloudFileDirectory"></xref> object that represents the parent directory for the file.</p>
  overridden: com.microsoft.azure.storage.file.ListFileItem.getParent()
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.getParentNameFromURI(final StorageUri,final CloudFileShare)
  id: getParentNameFromURI(final StorageUri,final CloudFileShare)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getParentNameFromURI(final StorageUri resourceAddress, final CloudFileShare share)
  nameWithType: CloudFile.getParentNameFromURI(final StorageUri resourceAddress, final CloudFileShare share)
  fullName: com.microsoft.azure.storage.file.CloudFile.getParentNameFromURI(final StorageUri resourceAddress, final CloudFileShare share)
  overload: com.microsoft.azure.storage.file.CloudFile.getParentNameFromURI*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3126
  package: com.microsoft.azure.storage.file
  summary: "<p>Retrieves the parent name for a file URI.</p>\r\n<p></p>"
  syntax:
    content: protected static String getParentNameFromURI(final StorageUri resourceAddress, final CloudFileShare share)
    parameters:
    - id: resourceAddress
      type: 93de0ef9com.microsoft.azure.storage.StorageUri
      description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object which represents the resource URI. </p>
    - id: share
      type: 93de0ef9com.microsoft.azure.storage.file.CloudFileShare
      description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileShare" data-throw-if-not-resolved="false" data-raw-source="CloudFileShare"></xref> object which represents the file share.</p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents the parent address for a file URI.</p>
  exceptions:
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.getProperties()
  id: getProperties()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getProperties()
  nameWithType: CloudFile.getProperties()
  fullName: com.microsoft.azure.storage.file.CloudFile.getProperties()
  overload: com.microsoft.azure.storage.file.CloudFile.getProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3302
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns the file's properties.</p>\r\n<p></p>"
  syntax:
    content: public final FileProperties getProperties()
    return:
      type: 93de0ef9com.microsoft.azure.storage.file.FileProperties
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileProperties" data-throw-if-not-resolved="false" data-raw-source="FileProperties"></xref> object that represents the properties of the file. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.getServiceClient()
  id: getServiceClient()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getServiceClient()
  nameWithType: CloudFile.getServiceClient()
  fullName: com.microsoft.azure.storage.file.CloudFile.getServiceClient()
  overload: com.microsoft.azure.storage.file.CloudFile.getServiceClient*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3311
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns the file service client associated with the file.</p>\r\n<p></p>"
  syntax:
    content: public final CloudFileClient getServiceClient()
    return:
      type: 93de0ef9com.microsoft.azure.storage.file.CloudFileClient
      description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref> object that represents the client. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.getShare()
  id: getShare()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getShare()
  nameWithType: CloudFile.getShare()
  fullName: com.microsoft.azure.storage.file.CloudFile.getShare()
  overload: com.microsoft.azure.storage.file.CloudFile.getShare*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3245
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns the file's share.</p>\r\n<p></p>"
  syntax:
    content: public final CloudFileShare getShare()
    return:
      type: 93de0ef9com.microsoft.azure.storage.file.CloudFileShare
      description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileShare" data-throw-if-not-resolved="false" data-raw-source="CloudFileShare"></xref> object that represents the share of the file. </p>
  overridden: com.microsoft.azure.storage.file.ListFileItem.getShare()
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.getStorageUri()
  id: getStorageUri()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getStorageUri()
  nameWithType: CloudFile.getStorageUri()
  fullName: com.microsoft.azure.storage.file.CloudFile.getStorageUri()
  overload: com.microsoft.azure.storage.file.CloudFile.getStorageUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3341
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns the list of URIs for all locations.</p>\r\n<p></p>"
  syntax:
    content: public final StorageUri getStorageUri()
    return:
      type: 93de0ef9com.microsoft.azure.storage.StorageUri
      description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> that represents the list of URIs for all locations. </p>
  overridden: com.microsoft.azure.storage.file.ListFileItem.getStorageUri()
- uid: com.microsoft.azure.storage.file.CloudFile.getStreamMinimumReadSizeInBytes()
  id: getStreamMinimumReadSizeInBytes()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getStreamMinimumReadSizeInBytes()
  nameWithType: CloudFile.getStreamMinimumReadSizeInBytes()
  fullName: com.microsoft.azure.storage.file.CloudFile.getStreamMinimumReadSizeInBytes()
  overload: com.microsoft.azure.storage.file.CloudFile.getStreamMinimumReadSizeInBytes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3331
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns the minimum read size when using a <xref uid=\"com.microsoft.azure.storage.file.FileInputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileInputStream\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public final int getStreamMinimumReadSizeInBytes()
    return:
      type: cd225469
      description: <p>A <code>int</code> which represents the minimum read size, in bytes, when using a <xref uid="com.microsoft.azure.storage.file.FileInputStream" data-throw-if-not-resolved="false" data-raw-source="FileInputStream"></xref> object. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.getStreamWriteSizeInBytes()
  id: getStreamWriteSizeInBytes()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getStreamWriteSizeInBytes()
  nameWithType: CloudFile.getStreamWriteSizeInBytes()
  fullName: com.microsoft.azure.storage.file.CloudFile.getStreamWriteSizeInBytes()
  overload: com.microsoft.azure.storage.file.CloudFile.getStreamWriteSizeInBytes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3321
  package: com.microsoft.azure.storage.file
  summary: "<p>Gets the number of bytes to buffer when writing to a <xref uid=\"com.microsoft.azure.storage.file.FileOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileOutputStream\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public final int getStreamWriteSizeInBytes()
    return:
      type: cd225469
      description: <p>A <code>int</code> which represents the number of bytes to buffer. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.getTransformedAddress(final OperationContext)
  id: getTransformedAddress(final OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getTransformedAddress(final OperationContext opContext)
  nameWithType: CloudFile.getTransformedAddress(final OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.getTransformedAddress(final OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.getTransformedAddress*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3455
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns the transformed URI for the resource if the given credentials require transformation.</p>\r\n<p></p>"
  syntax:
    content: protected final StorageUri getTransformedAddress(final OperationContext opContext)
    parameters:
    - id: opContext
      type: 93de0ef9com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 93de0ef9com.microsoft.azure.storage.StorageUri
      description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the transformed URI.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.getUri()
  id: getUri()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: getUri()
  nameWithType: CloudFile.getUri()
  fullName: com.microsoft.azure.storage.file.CloudFile.getUri()
  overload: com.microsoft.azure.storage.file.CloudFile.getUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3351
  package: com.microsoft.azure.storage.file
  summary: "<p>Returns the URI for this file.</p>\r\n<p></p>"
  syntax:
    content: public final URI getUri()
    return:
      type: bac42120
      description: <p>A <code>java.net.URI</code> object that represents the URI for the file. </p>
  overridden: com.microsoft.azure.storage.file.ListFileItem.getUri()
- uid: com.microsoft.azure.storage.file.CloudFile.listHandles()
  id: listHandles()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: listHandles()
  nameWithType: CloudFile.listHandles()
  fullName: com.microsoft.azure.storage.file.CloudFile.listHandles()
  overload: com.microsoft.azure.storage.file.CloudFile.listHandles*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2783
  package: com.microsoft.azure.storage.file
  summary: "<p>Gets the SMB handles open on this file.</p>\r\n<p></p>"
  syntax:
    content: public Iterable<FileHandle> listHandles()
    return:
      type: 2a13b5a5com.microsoft.azure.storage.file.FileHandlea08ddfce
      description: >-
        <p>An<code>Iterable 

            </code> of the handles that will lazily request new segments. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.listHandles(FileRequestOptions,OperationContext)
  id: listHandles(FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: listHandles(FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.listHandles(FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.listHandles(FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.listHandles*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2801
  package: com.microsoft.azure.storage.file
  summary: "<p>Gets the SMB handles open on this file.</p>\r\n<p></p>"
  syntax:
    content: public Iterable<FileHandle> listHandles(FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    return:
      type: 2a13b5a5com.microsoft.azure.storage.file.FileHandlea08ddfce
      description: >-
        <p>An<code>Iterable 

            </code> of the handles that will lazily request new segments. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.listHandlesSegmented()
  id: listHandlesSegmented()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: listHandlesSegmented()
  nameWithType: CloudFile.listHandlesSegmented()
  fullName: com.microsoft.azure.storage.file.CloudFile.listHandlesSegmented()
  overload: com.microsoft.azure.storage.file.CloudFile.listHandlesSegmented*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2824
  package: com.microsoft.azure.storage.file
  summary: "<p>Gets the SMB handles open on this file.</p>\r\n<p></p>"
  syntax:
    content: public ResultSegment<FileHandle> listHandlesSegmented()
    return:
      type: com.microsoft.azure.storage.ResultSegment78504a52com.microsoft.azure.storage.file.FileHandlea08ddfce
      description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> object that contains a segment of the enumerable collection of <xref uid="com.microsoft.azure.storage.file.ListFileItem" data-throw-if-not-resolved="false" data-raw-source="ListFileItem"></xref> objects that represent the files and directories. </p>
  exceptions:
  - type: ca4f407a
- uid: com.microsoft.azure.storage.file.CloudFile.listHandlesSegmented(final Integer,final ResultContinuation,FileRequestOptions,OperationContext)
  id: listHandlesSegmented(final Integer,final ResultContinuation,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: listHandlesSegmented(final Integer maxResults, final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.listHandlesSegmented(final Integer maxResults, final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.listHandlesSegmented(final Integer maxResults, final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.listHandlesSegmented*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2850
  package: com.microsoft.azure.storage.file
  summary: "<p>Gets the SMB handles open on this file.</p>\r\n<p></p>"
  syntax:
    content: public ResultSegment<FileHandle> listHandlesSegmented(final Integer maxResults, final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: maxResults
      type: 3437983f
      description: <p>The maximum number of results to retrieve. If <code>null</code> or greater than 5000, the server will return up to 5,000 items. Must be at least 1. </p>
    - id: continuationToken
      type: 93de0ef9com.microsoft.azure.storage.ResultContinuation
      description: <p>A <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object that represents a continuation token returned by a previous listing operation. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    return:
      type: com.microsoft.azure.storage.ResultSegment78504a52com.microsoft.azure.storage.file.FileHandlea08ddfce
      description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> object that contains a segment of the enumerable collection of <xref uid="com.microsoft.azure.storage.file.ListFileItem" data-throw-if-not-resolved="false" data-raw-source="ListFileItem"></xref> objects that represent the files and directories. </p>
  exceptions:
  - type: ca4f407a
- uid: com.microsoft.azure.storage.file.CloudFile.openRead()
  id: openRead()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: openRead()
  nameWithType: CloudFile.openRead()
  fullName: com.microsoft.azure.storage.file.CloudFile.openRead()
  overload: com.microsoft.azure.storage.file.CloudFile.openRead*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1799
  package: com.microsoft.azure.storage.file
  summary: "<p>Opens a file input stream to download the file. </p>\r\n<p>Use <xref uid=\"com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes(final int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudFile#setStreamMinimumReadSizeInBytes(int)\"></xref> to configure the read size.</p>\r\n<p></p>"
  syntax:
    content: public final FileInputStream openRead()
    return:
      type: 93de0ef9com.microsoft.azure.storage.file.FileInputStream
      description: <p>An <code>InputStream</code> object that represents the stream to use for reading from the file.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.openRead(final AccessCondition,FileRequestOptions,OperationContext)
  id: openRead(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: openRead(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.openRead(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.openRead(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.openRead*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1826
  package: com.microsoft.azure.storage.file
  summary: "<p>Opens a file input stream to download the file using the specified request options and operation context. </p>\r\n<p>Use <xref uid=\"com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes(final int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setStreamMinimumReadSizeInBytes(int)\"></xref> to configure the read size.</p>\r\n<p></p>"
  syntax:
    content: public final FileInputStream openRead(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 93de0ef9com.microsoft.azure.storage.file.FileInputStream
      description: <p>An <code>InputStream</code> object that represents the stream to use for reading from the file.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.openWriteExisting()
  id: openWriteExisting()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: openWriteExisting()
  nameWithType: CloudFile.openWriteExisting()
  fullName: com.microsoft.azure.storage.file.CloudFile.openWriteExisting()
  overload: com.microsoft.azure.storage.file.CloudFile.openWriteExisting*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1848
  package: com.microsoft.azure.storage.file
  summary: "<p>Opens an output stream object to write data to the file. The file must already exist and any existing data may be overwritten.</p>\r\n<p></p>"
  syntax:
    content: public FileOutputStream openWriteExisting()
    return:
      type: com.microsoft.azure.storage.file.FileOutputStream
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileOutputStream" data-throw-if-not-resolved="false" data-raw-source="FileOutputStream"></xref> object used to write data to the file.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.openWriteExisting(AccessCondition,FileRequestOptions,OperationContext)
  id: openWriteExisting(AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: openWriteExisting(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.openWriteExisting(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.openWriteExisting(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.openWriteExisting*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1875
  package: com.microsoft.azure.storage.file
  summary: "<p>Opens an output stream object to write data to the file, using specified request options and operation context. The file must already exist and any existing data may be overwritten.</p>\r\n<p></p>"
  syntax:
    content: public FileOutputStream openWriteExisting(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: com.microsoft.azure.storage.file.FileOutputStream
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileOutputStream" data-throw-if-not-resolved="false" data-raw-source="FileOutputStream"></xref> object used to write data to the file.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.openWriteNew(final long)
  id: openWriteNew(final long)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: openWriteNew(final long length)
  nameWithType: CloudFile.openWriteNew(final long length)
  fullName: com.microsoft.azure.storage.file.CloudFile.openWriteNew(final long length)
  overload: com.microsoft.azure.storage.file.CloudFile.openWriteNew*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1898
  package: com.microsoft.azure.storage.file
  summary: "<p>Opens an output stream object to write data to the file. The file does not yet exist and will be created with the length specified. If the file already exists on the service, it will be overwritten. </p>\r\n<p>To avoid overwriting and instead throw an error, please use the <xref uid=\"com.microsoft.azure.storage.file.CloudFile.openWriteNew(final long,AccessCondition,FileRequestOptions,OperationContext)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"openWriteNew(long, AccessCondition, FileRequestOptions, OperationContext)\"></xref> overload with the appropriate <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessCondition\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public FileOutputStream openWriteNew(final long length)
    parameters:
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the stream to create.</p>
    return:
      type: com.microsoft.azure.storage.file.FileOutputStream
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileOutputStream" data-throw-if-not-resolved="false" data-raw-source="FileOutputStream"></xref> object used to write data to the file.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.openWriteNew(final long,AccessCondition,FileRequestOptions,OperationContext)
  id: openWriteNew(final long,AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.openWriteNew*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1931
  package: com.microsoft.azure.storage.file
  summary: "<p>Opens an output stream object to write data to the file, using the specified lease ID, request options and operation context. The file does not need to yet exist and will be created with the length specified. If the file already exists on the service, it will be overwritten. </p>\r\n<p>To avoid overwriting and instead throw an error, please pass in an <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessCondition\"></xref> generated using <xref uid=\"com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessCondition#generateIfNotExistsCondition()\"></xref>.</p>\r\n<p></p>"
  syntax: &o3
    content: public FileOutputStream openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the stream to create. </p>
    - id: accessCondition
      type: com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: com.microsoft.azure.storage.file.FileOutputStream
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileOutputStream" data-throw-if-not-resolved="false" data-raw-source="FileOutputStream"></xref> object used to write data to the file.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.parent
  id: parent
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: parent
  nameWithType: CloudFile.parent
  fullName: com.microsoft.azure.storage.file.CloudFile.parent
  type: Field
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 63
  package: com.microsoft.azure.storage.file
  summary: "<p>Represents the file's directory reference. </p>"
  syntax:
    content: protected CloudFileDirectory parent
    return:
      type: com.microsoft.azure.storage.file.CloudFileDirectory
- uid: com.microsoft.azure.storage.file.CloudFile.putRangeFromURL(final long,final long,final URI,final long)
  id: putRangeFromURL(final long,final long,final URI,final long)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: putRangeFromURL(final long destOffset, final long length, final URI sourceUri, final long sourceOffset)
  nameWithType: CloudFile.putRangeFromURL(final long destOffset, final long length, final URI sourceUri, final long sourceOffset)
  fullName: com.microsoft.azure.storage.file.CloudFile.putRangeFromURL(final long destOffset, final long length, final URI sourceUri, final long sourceOffset)
  overload: com.microsoft.azure.storage.file.CloudFile.putRangeFromURL*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2333
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads a range from one file to another file.</p>\r\n<p></p>"
  syntax:
    content: public void putRangeFromURL(final long destOffset, final long length, final URI sourceUri, final long sourceOffset)
    parameters:
    - id: destOffset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset, in number of bytes, at which to begin writing the data. </p>
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the data to write and read. </p>
    - id: sourceUri
      type: bac42120
      description: <p>A <code>java.net.URI</code> object that specifies the source URI. </p>
    - id: sourceOffset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset, in number of bytes, at which to begin reading the data.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.putRangeFromURL(final long,final long,final URI,final long,FileRequestOptions,OperationContext)
  id: putRangeFromURL(final long,final long,final URI,final long,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: putRangeFromURL(final long destOffset, final long length, final URI sourceUri, final long sourceOffset, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.putRangeFromURL(final long destOffset, final long length, final URI sourceUri, final long sourceOffset, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.putRangeFromURL(final long destOffset, final long length, final URI sourceUri, final long sourceOffset, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.putRangeFromURL*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2365
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads a range from one file to another file using the specified lease ID, request options, and operation context</p>\r\n<p></p>"
  syntax:
    content: public void putRangeFromURL(final long destOffset, final long length, final URI sourceUri, final long sourceOffset, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: destOffset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset, in number of bytes, at which to begin writing the data. </p>
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the data to write and read. </p>
    - id: sourceUri
      type: bac42120
      description: <p>A <code>java.net.URI</code> object that specifies the source URI. </p>
    - id: sourceOffset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset, in number of bytes, at which to begin reading the data. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.resize(long)
  id: resize(long)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: resize(long size)
  nameWithType: CloudFile.resize(long size)
  fullName: com.microsoft.azure.storage.file.CloudFile.resize(long size)
  overload: com.microsoft.azure.storage.file.CloudFile.resize*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2628
  package: com.microsoft.azure.storage.file
  summary: "<p>Resizes the file to the specified size.</p>\r\n<p></p>"
  syntax:
    content: public void resize(long size)
    parameters:
    - id: size
      type: 0364520f
      description: <p>A <code>long</code> which represents the size of the file, in bytes.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.resize(long,AccessCondition,FileRequestOptions,OperationContext)
  id: resize(long,AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: resize(long size, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.resize(long size, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.resize(long size, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.resize*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2652
  package: com.microsoft.azure.storage.file
  summary: "<p>Resizes the file to the specified size.</p>\r\n<p></p>"
  syntax:
    content: public void resize(long size, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: size
      type: 0364520f
      description: <p>A <code>long</code> which represents the size of the file, in bytes. </p>
    - id: accessCondition
      type: com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.setFilePermission(String)
  id: setFilePermission(String)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: setFilePermission(String filePermission)
  nameWithType: CloudFile.setFilePermission(String filePermission)
  fullName: com.microsoft.azure.storage.file.CloudFile.setFilePermission(String filePermission)
  overload: com.microsoft.azure.storage.file.CloudFile.setFilePermission*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3400
  package: com.microsoft.azure.storage.file
  summary: "<p>Sets the file's file permission to set </p>"
  syntax:
    content: public void setFilePermission(String filePermission)
    parameters:
    - id: filePermission
      type: "26831127"
      description: <p>A <code>String</code> that represents the file's file permission to set. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.setMetadata(final HashMap<String, String>)
  id: setMetadata(final HashMap<String, String>)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: setMetadata(final HashMap<String, String> metadata)
  nameWithType: CloudFile.setMetadata(final HashMap<String, String> metadata)
  fullName: com.microsoft.azure.storage.file.CloudFile.setMetadata(final HashMap<String, String> metadata)
  overload: com.microsoft.azure.storage.file.CloudFile.setMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3371
  package: com.microsoft.azure.storage.file
  summary: "<p>Sets the metadata for the file.</p>\r\n<p></p>"
  syntax:
    content: public final void setMetadata(final HashMap<String, String> metadata)
    parameters:
    - id: metadata
      type: 496ce5ae
      description: <p>A <code>java.util.HashMap</code> object that contains the metadata being assigned to the file. </p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage.file.CloudFile.setProperties(final FileProperties)
  id: setProperties(final FileProperties)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: setProperties(final FileProperties properties)
  nameWithType: CloudFile.setProperties(final FileProperties properties)
  fullName: com.microsoft.azure.storage.file.CloudFile.setProperties(final FileProperties properties)
  overload: com.microsoft.azure.storage.file.CloudFile.setProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3381
  package: com.microsoft.azure.storage.file
  summary: "<p>Sets the properties for the file.</p>\r\n<p></p>"
  syntax:
    content: protected final void setProperties(final FileProperties properties)
    parameters:
    - id: properties
      type: 93de0ef9com.microsoft.azure.storage.file.FileProperties
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileProperties" data-throw-if-not-resolved="false" data-raw-source="FileProperties"></xref> object that represents the properties being assigned to the file. </p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage.file.CloudFile.setShare(final CloudFileShare)
  id: setShare(final CloudFileShare)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: setShare(final CloudFileShare share)
  nameWithType: CloudFile.setShare(final CloudFileShare share)
  fullName: com.microsoft.azure.storage.file.CloudFile.setShare(final CloudFileShare share)
  overload: com.microsoft.azure.storage.file.CloudFile.setShare*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3361
  package: com.microsoft.azure.storage.file
  summary: "<p>Sets the share for the file.</p>\r\n<p></p>"
  syntax:
    content: protected final void setShare(final CloudFileShare share)
    parameters:
    - id: share
      type: 93de0ef9com.microsoft.azure.storage.file.CloudFileShare
      description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileShare" data-throw-if-not-resolved="false" data-raw-source="CloudFileShare"></xref> object that represents the share being assigned to the file. </p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage.file.CloudFile.setStorageUri(final StorageUri)
  id: setStorageUri(final StorageUri)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: setStorageUri(final StorageUri storageUri)
  nameWithType: CloudFile.setStorageUri(final StorageUri storageUri)
  fullName: com.microsoft.azure.storage.file.CloudFile.setStorageUri(final StorageUri storageUri)
  overload: com.microsoft.azure.storage.file.CloudFile.setStorageUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3391
  package: com.microsoft.azure.storage.file
  summary: "<p>Sets the list of URIs for all locations.</p>\r\n<p></p>"
  syntax:
    content: protected void setStorageUri(final StorageUri storageUri)
    parameters:
    - id: storageUri
      type: 93de0ef9com.microsoft.azure.storage.StorageUri
      description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> that represents the list of URIs for all locations. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes(final int)
  id: setStreamMinimumReadSizeInBytes(final int)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  nameWithType: CloudFile.setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  fullName: com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  overload: com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3414
  package: com.microsoft.azure.storage.file
  summary: "<p>Sets the minimum read size when using a <xref uid=\"com.microsoft.azure.storage.file.FileInputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileInputStream\"></xref>.</p>\r\n<p></p>"
  syntax: &o2
    content: public void setStreamMinimumReadSizeInBytes(final int minimumReadSize)
    parameters:
    - id: minimumReadSize
      type: cd225469
      description: <p>An <code>int</code> that represents the minimum number of bytes to buffer when reading from a file while using a <xref uid="com.microsoft.azure.storage.file.FileInputStream" data-throw-if-not-resolved="false" data-raw-source="FileInputStream"></xref> object. Must be greater than or equal to 16 KB. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>If <code>minimumReadSize</code> is less than 16 KB. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.setStreamWriteSizeInBytes(final int)
  id: setStreamWriteSizeInBytes(final int)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  nameWithType: CloudFile.setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  fullName: com.microsoft.azure.storage.file.CloudFile.setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  overload: com.microsoft.azure.storage.file.CloudFile.setStreamWriteSizeInBytes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3432
  package: com.microsoft.azure.storage.file
  summary: "<p>Sets the number of bytes to buffer when writing to a <xref uid=\"com.microsoft.azure.storage.file.FileOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileOutputStream\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public void setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
    parameters:
    - id: streamWriteSizeInBytes
      type: cd225469
      description: <p>An <code>int</code> which represents the number of bytes to buffer while using a <xref uid="com.microsoft.azure.storage.file.FileOutputStream" data-throw-if-not-resolved="false" data-raw-source="FileOutputStream"></xref> object, ranging from 512 bytes to 4 MB, inclusive.</p>
  exceptions:
  - type: 3c87bd19
    description: <p>If <code>streamWriteSizeInBytes</code> is less than 512 bytes or greater than 4 MB. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudBlob)
  id: startCopy(final CloudBlob)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: startCopy(final CloudBlob sourceBlob)
  nameWithType: CloudFile.startCopy(final CloudBlob sourceBlob)
  fullName: com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudBlob sourceBlob)
  overload: com.microsoft.azure.storage.file.CloudFile.startCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 305
  package: com.microsoft.azure.storage.file
  summary: "<p>Requests the service to start copying a blob's contents, properties, and metadata to a new file.</p>\r\n<p></p>"
  syntax:
    content: public final String startCopy(final CloudBlob sourceBlob)
    parameters:
    - id: sourceBlob
      type: 93de0ef9com.microsoft.azure.storage.blob.CloudBlob
      description: <p>A <code>CloudBlob</code> object that represents the source blob to copy.</p>
    return:
      type: 3d93591e
      description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudBlob,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  id: startCopy(final CloudBlob,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: startCopy(final CloudBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.startCopy(final CloudBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.startCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 337
  package: com.microsoft.azure.storage.file
  summary: "<p>Requests the service to start copying a file's contents, properties, and metadata to a new file, using the specified access conditions, lease ID, request options, and operation context.</p>\r\n<p></p>"
  syntax:
    content: public final String startCopy(final CloudBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: sourceBlob
      type: 93de0ef9com.microsoft.azure.storage.blob.CloudBlob
      description: <p>A <code>CloudBlob</code> object that represents the source blob to copy. </p>
    - id: sourceAccessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source blob. </p>
    - id: destinationAccessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3d93591e
      description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudFile)
  id: startCopy(final CloudFile)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: startCopy(final CloudFile sourceFile)
  nameWithType: CloudFile.startCopy(final CloudFile sourceFile)
  fullName: com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudFile sourceFile)
  overload: com.microsoft.azure.storage.file.CloudFile.startCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 364
  package: com.microsoft.azure.storage.file
  summary: "<p>Requests the service to start copying an Azure File's contents, properties, and metadata to a new Azure File.</p>\r\n<p></p>"
  syntax:
    content: public final String startCopy(final CloudFile sourceFile)
    parameters:
    - id: sourceFile
      type: 93de0ef9com.microsoft.azure.storage.file.CloudFile
      description: <p>A <code>CloudFile</code> object that represents the source Azure File to copy.</p>
    return:
      type: 3d93591e
      description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudFile,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  id: startCopy(final CloudFile,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: startCopy(final CloudFile sourceFile, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.startCopy(final CloudFile sourceFile, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudFile sourceFile, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.startCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 396
  package: com.microsoft.azure.storage.file
  summary: "<p>Requests the service to start copying an Azure File's contents, properties, and metadata to a new Azure File, using the specified access conditions, lease ID, request options, and operation context.</p>\r\n<p></p>"
  syntax:
    content: public final String startCopy(final CloudFile sourceFile, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: sourceFile
      type: 93de0ef9com.microsoft.azure.storage.file.CloudFile
      description: <p>A <code>CloudFile</code> object that represents the source file to copy. </p>
    - id: sourceAccessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source. </p>
    - id: destinationAccessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3d93591e
      description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.startCopy(final URI)
  id: startCopy(final URI)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: startCopy(final URI source)
  nameWithType: CloudFile.startCopy(final URI source)
  fullName: com.microsoft.azure.storage.file.CloudFile.startCopy(final URI source)
  overload: com.microsoft.azure.storage.file.CloudFile.startCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 418
  package: com.microsoft.azure.storage.file
  summary: "<p>Requests the service to start copying a URI's contents, properties, and metadata to a new Azure File.</p>\r\n<p></p>"
  syntax:
    content: public final String startCopy(final URI source)
    parameters:
    - id: source
      type: bac42120
      description: <p>The source's <code>java.net.URI</code>.</p>
    return:
      type: 3d93591e
      description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.startCopy(final URI,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  id: startCopy(final URI,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: startCopy(final URI source, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.startCopy(final URI source, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.startCopy(final URI source, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.startCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 450
  package: com.microsoft.azure.storage.file
  summary: "<p>Requests the service to start copying a URI's contents, properties, and metadata to a new Azure File, using the specified access conditions, lease ID, request options, and operation context.</p>\r\n<p></p>"
  syntax:
    content: public final String startCopy(final URI source, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: source
      type: bac42120
      description: <p>The source's <code>java.net.URI</code>. </p>
    - id: sourceAccessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source. </p>
    - id: destinationAccessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3d93591e
      description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.streamMinimumReadSizeInBytes
  id: streamMinimumReadSizeInBytes
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: streamMinimumReadSizeInBytes
  nameWithType: CloudFile.streamMinimumReadSizeInBytes
  fullName: com.microsoft.azure.storage.file.CloudFile.streamMinimumReadSizeInBytes
  type: Field
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 53
  package: com.microsoft.azure.storage.file
  summary: "<p>Holds the minimum read size when using a <xref uid=\"com.microsoft.azure.storage.file.FileInputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileInputStream\"></xref>. </p>"
  syntax:
    content: protected int streamMinimumReadSizeInBytes= Constants.DEFAULT_MINIMUM_READ_SIZE_IN_BYTES
    return:
      type: f75371fa
- uid: com.microsoft.azure.storage.file.CloudFile.streamWriteSizeInBytes
  id: streamWriteSizeInBytes
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: streamWriteSizeInBytes
  nameWithType: CloudFile.streamWriteSizeInBytes
  fullName: com.microsoft.azure.storage.file.CloudFile.streamWriteSizeInBytes
  type: Field
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 48
  package: com.microsoft.azure.storage.file
  summary: "<p>Holds the number of bytes to buffer when writing to a <xref uid=\"com.microsoft.azure.storage.file.FileOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileOutputStream\"></xref>. </p>"
  syntax:
    content: protected int streamWriteSizeInBytes= Constants.DEFAULT_STREAM_WRITE_IN_BYTES
    return:
      type: f75371fa
- uid: com.microsoft.azure.storage.file.CloudFile.updateEtagAndLastModifiedFromResponse(HttpURLConnection)
  id: updateEtagAndLastModifiedFromResponse(HttpURLConnection)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: updateEtagAndLastModifiedFromResponse(HttpURLConnection request)
  nameWithType: CloudFile.updateEtagAndLastModifiedFromResponse(HttpURLConnection request)
  fullName: com.microsoft.azure.storage.file.CloudFile.updateEtagAndLastModifiedFromResponse(HttpURLConnection request)
  overload: com.microsoft.azure.storage.file.CloudFile.updateEtagAndLastModifiedFromResponse*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3215
  package: com.microsoft.azure.storage.file
  syntax:
    content: protected void updateEtagAndLastModifiedFromResponse(HttpURLConnection request)
    parameters:
    - id: request
      type: a7895dc2
- uid: com.microsoft.azure.storage.file.CloudFile.updateLengthFromResponse(HttpURLConnection)
  id: updateLengthFromResponse(HttpURLConnection)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: updateLengthFromResponse(HttpURLConnection request)
  nameWithType: CloudFile.updateLengthFromResponse(HttpURLConnection request)
  fullName: com.microsoft.azure.storage.file.CloudFile.updateLengthFromResponse(HttpURLConnection request)
  overload: com.microsoft.azure.storage.file.CloudFile.updateLengthFromResponse*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 3228
  package: com.microsoft.azure.storage.file
  syntax:
    content: protected void updateLengthFromResponse(HttpURLConnection request)
    parameters:
    - id: request
      type: a7895dc2
- uid: com.microsoft.azure.storage.file.CloudFile.upload(final InputStream,final long)
  id: upload(final InputStream,final long)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: upload(final InputStream sourceStream, final long length)
  nameWithType: CloudFile.upload(final InputStream sourceStream, final long length)
  fullName: com.microsoft.azure.storage.file.CloudFile.upload(final InputStream sourceStream, final long length)
  overload: com.microsoft.azure.storage.file.CloudFile.upload*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2718
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads the source stream data to the file. If the file already exists on the service, it will be overwritten.</p>\r\n<p></p>"
  syntax:
    content: public void upload(final InputStream sourceStream, final long length)
    parameters:
    - id: sourceStream
      type: ac354e53
      description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object to read from. </p>
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the stream data. Must be non zero.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>If an I/O exception occurred. </p>
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.upload(final InputStream,final long,final AccessCondition,FileRequestOptions,OperationContext)
  id: upload(final InputStream,final long,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.upload*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2749
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads the source stream data to the file using the specified access condition, request options, and operation context. If the file already exists on the service, it will be overwritten.</p>\r\n<p></p>"
  syntax:
    content: public void upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: sourceStream
      type: ac354e53
      description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object to read from. </p>
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the stream data. This must be greater than or equal to zero. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>If an I/O exception occurred. </p>
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray(final byte [],final int,final int)
  id: uploadFromByteArray(final byte [],final int,final int)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  nameWithType: CloudFile.uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  overload: com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2005
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads a file from data in a byte array. If the file already exists on the service, it will be overwritten.</p>\r\n<p></p>"
  syntax:
    content: public void uploadFromByteArray(final byte[] buffer, final int offset, final int length)
    parameters:
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the data to write to the file. </p>
    - id: offset
      type: cd225469
      description: <p>A <code>int</code> which represents the offset of the byte array from which to start the data upload. </p>
    - id: length
      type: cd225469
      description: <p>An <code>int</code> which represents the number of bytes to upload from the input buffer.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray(final byte [],final int,final int,final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadFromByteArray(final byte [],final int,final int,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2035
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads a file from data in a byte array. If the file already exists on the service, it will be overwritten.</p>\r\n<p></p>"
  syntax:
    content: public void uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the data to write to the file. </p>
    - id: offset
      type: cd225469
      description: <p>A <code>int</code> which represents the offset of the byte array from which to start the data upload. </p>
    - id: length
      type: cd225469
      description: <p>An <code>int</code> which represents the number of bytes to upload from the input buffer. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.uploadFromFile(final String)
  id: uploadFromFile(final String)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: uploadFromFile(final String path)
  nameWithType: CloudFile.uploadFromFile(final String path)
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadFromFile(final String path)
  overload: com.microsoft.azure.storage.file.CloudFile.uploadFromFile*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2054
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads a local file. If the file already exists on the service, it will be overwritten.</p>\r\n<p></p>"
  syntax:
    content: public void uploadFromFile(final String path)
    parameters:
    - id: path
      type: 3d93591e
      description: <p>A <code>String</code> which represents the path to the file to be uploaded.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.uploadFromFile(final String,final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadFromFile(final String,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: uploadFromFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadFromFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadFromFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.uploadFromFile*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2079
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads a file from a local file. If the file already exists on the service, it will be overwritten.</p>\r\n<p></p>"
  syntax:
    content: public void uploadFromFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: path
      type: 3d93591e
      description: <p>A <code>String</code> which represents the path to the file to be uploaded. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.uploadMetadata()
  id: uploadMetadata()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: uploadMetadata()
  nameWithType: CloudFile.uploadMetadata()
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadMetadata()
  overload: com.microsoft.azure.storage.file.CloudFile.uploadMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2437
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads the file's metadata to the storage service. </p>\r\n<p>Use <xref uid=\"com.microsoft.azure.storage.file.CloudFile.downloadAttributes()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudFile#downloadAttributes\"></xref> to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>\r\n<p></p>"
  syntax:
    content: public final void uploadMetadata()
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.uploadMetadata(final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadMetadata(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: uploadMetadata(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadMetadata(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadMetadata(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.uploadMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2464
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads the file's metadata to the storage service using the access condition, request options, and operation context. </p>\r\n<p>Use <xref uid=\"com.microsoft.azure.storage.file.CloudFile.downloadAttributes()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudFile#downloadAttributes\"></xref> to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>\r\n<p></p>"
  syntax:
    content: public final void uploadMetadata(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.uploadProperties()
  id: uploadProperties()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: uploadProperties()
  nameWithType: CloudFile.uploadProperties()
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadProperties()
  overload: com.microsoft.azure.storage.file.CloudFile.uploadProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2532
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads the file's properties to the storage service. </p>\r\n<p>Use <xref uid=\"com.microsoft.azure.storage.file.CloudFile.downloadAttributes()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudFile#downloadAttributes\"></xref> to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>\r\n<p></p>"
  syntax:
    content: public final void uploadProperties()
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.uploadProperties(final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadProperties(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: uploadProperties(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadProperties(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadProperties(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.uploadProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2558
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads the file's properties using the access condition, request options, and operation context. </p>\r\n<p>Use <xref uid=\"com.microsoft.azure.storage.file.CloudFile.downloadAttributes()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudFile#downloadAttributes\"></xref> to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>\r\n<p></p>"
  syntax:
    content: public final void uploadProperties(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream,final long,final long)
  id: uploadRange(final InputStream,final long,final long)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: uploadRange(final InputStream sourceStream, final long offset, final long length)
  nameWithType: CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length)
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length)
  overload: com.microsoft.azure.storage.file.CloudFile.uploadRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2153
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads a range to a file.</p>\r\n<p></p>"
  syntax:
    content: public void uploadRange(final InputStream sourceStream, final long offset, final long length)
    parameters:
    - id: sourceStream
      type: ac354e53
      description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object which represents the input stream to write to the file. </p>
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset, in number of bytes, at which to begin writing the data. </p>
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the data to write.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>If an I/O exception occurred. </p>
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream,final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadRange(final InputStream,final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: uploadRange(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.uploadRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2186
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads a range to a file using the specified lease ID, request options, and operation context.</p>\r\n<p></p>"
  syntax:
    content: public void uploadRange(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: sourceStream
      type: ac354e53
      description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object which represents the input stream to write to the file. </p>
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset, in number of bytes, at which to begin writing the data. </p>
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the data to write. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>If an I/O exception occurred. </p>
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.uploadText(final String)
  id: uploadText(final String)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: uploadText(final String content)
  nameWithType: CloudFile.uploadText(final String content)
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadText(final String content)
  overload: com.microsoft.azure.storage.file.CloudFile.uploadText*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2100
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads a file from a string using the platform's default encoding. If the file already exists on the service, it will be overwritten.</p>\r\n<p></p>"
  syntax:
    content: public void uploadText(final String content)
    parameters:
    - id: content
      type: 3d93591e
      description: <p>A <code>String</code> which represents the content that will be uploaded to the file.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
  - type: "44102508"
- uid: com.microsoft.azure.storage.file.CloudFile.uploadText(final String,final String,final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadText(final String,final String,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  langs:
  - java
  name: uploadText(final String content, final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadText(final String content, final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadText(final String content, final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file.CloudFile.uploadText*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2129
  package: com.microsoft.azure.storage.file
  summary: "<p>Uploads a file from a string using the specified encoding. If the file already exists on the service, it will be overwritten.</p>\r\n<p></p>"
  syntax:
    content: public void uploadText(final String content, final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: content
      type: 3d93591e
      description: <p>A <code>String</code> which represents the content that will be uploaded to the file. </p>
    - id: charsetName
      type: 3d93591e
      description: <p>A <code>String</code> which represents the name of the charset to use to encode the content. If null, the platform's default encoding is used. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage.AccessCondition
      description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file.FileRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
  - type: "44102508"
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: ca4f407a
  spec.java:
  - name: StorageException
    fullName: StorageException
- uid: "44102508"
  spec.java:
  - name: URISyntaxException
    fullName: URISyntaxException
- uid: bac42120
  spec.java:
  - name: final URI
    fullName: final URI
- uid: com.microsoft.azure.storage.file.CloudFile.CloudFile*
  name: CloudFile
  nameWithType: CloudFile.CloudFile
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.StorageUri
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.StorageUri
    name: StorageUri
    fullName: com.microsoft.azure.storage.StorageUri
    href: com.microsoft.azure.storage.StorageUri.yml
- uid: 93de0ef9com.microsoft.azure.storage.StorageCredentials
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.StorageCredentials
    name: StorageCredentials
    fullName: com.microsoft.azure.storage.StorageCredentials
    href: com.microsoft.azure.storage.StorageCredentials.yml
- uid: 93de0ef9com.microsoft.azure.storage.file.CloudFile
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file.CloudFile
    name: CloudFile
    fullName: com.microsoft.azure.storage.file.CloudFile
    href: com.microsoft.azure.storage.file.CloudFile.yml
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 3f6357ce
  spec.java:
  - name: final void
    fullName: final void
- uid: com.microsoft.azure.storage.file.CloudFile.abortCopy*
  name: abortCopy
  nameWithType: CloudFile.abortCopy
  fullName: com.microsoft.azure.storage.file.CloudFile.abortCopy
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.AccessCondition
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.AccessCondition
    name: AccessCondition
    fullName: com.microsoft.azure.storage.AccessCondition
    href: com.microsoft.azure.storage.AccessCondition.yml
- uid: 93de0ef9com.microsoft.azure.storage.blob.CloudBlob
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.blob.CloudBlob
    name: CloudBlob
    fullName: com.microsoft.azure.storage.blob.CloudBlob
    href: com.microsoft.azure.storage.blob.CloudBlob.yml
- uid: com.microsoft.azure.storage.file.CloudFile.startCopy*
  name: startCopy
  nameWithType: CloudFile.startCopy
  fullName: com.microsoft.azure.storage.file.CloudFile.startCopy
  package: com.microsoft.azure.storage.file
- uid: 4c60ae65
  spec.java:
  - name: final long
    fullName: final long
- uid: com.microsoft.azure.storage.file.CloudFile.clearRange*
  name: clearRange
  nameWithType: CloudFile.clearRange
  fullName: com.microsoft.azure.storage.file.CloudFile.clearRange
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.create*
  name: create
  nameWithType: CloudFile.create
  fullName: com.microsoft.azure.storage.file.CloudFile.create
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.delete*
  name: delete
  nameWithType: CloudFile.delete
  fullName: com.microsoft.azure.storage.file.CloudFile.delete
  package: com.microsoft.azure.storage.file
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: com.microsoft.azure.storage.file.CloudFile.deleteIfExists*
  name: deleteIfExists
  nameWithType: CloudFile.deleteIfExists
  fullName: com.microsoft.azure.storage.file.CloudFile.deleteIfExists
  package: com.microsoft.azure.storage.file
- uid: 688beaca
  spec.java:
  - name: final OutputStream
    fullName: final OutputStream
- uid: com.microsoft.azure.storage.file.CloudFile.download*
  name: download
  nameWithType: CloudFile.download
  fullName: com.microsoft.azure.storage.file.CloudFile.download
  package: com.microsoft.azure.storage.file
- uid: 6c34dcee
  spec.java:
  - name: final Long
    fullName: final Long
- uid: com.microsoft.azure.storage.file.CloudFile.downloadRange*
  name: downloadRange
  nameWithType: CloudFile.downloadRange
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadRange
  package: com.microsoft.azure.storage.file
- uid: f549433f
  spec.java:
  - name: final byte []
    fullName: final byte []
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray*
  name: downloadRangeToByteArray
  nameWithType: CloudFile.downloadRangeToByteArray
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.downloadToByteArray*
  name: downloadToByteArray
  nameWithType: CloudFile.downloadToByteArray
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadToByteArray
  package: com.microsoft.azure.storage.file
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.azure.storage.file.CloudFile.downloadToFile*
  name: downloadToFile
  nameWithType: CloudFile.downloadToFile
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadToFile
  package: com.microsoft.azure.storage.file
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.storage.file.CloudFile.downloadText*
  name: downloadText
  nameWithType: CloudFile.downloadText
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadText
  package: com.microsoft.azure.storage.file
- uid: 573b1e0bcom.microsoft.azure.storage.file.FileRangea08ddfce
  spec.java:
  - name: ArrayList<
    fullName: ArrayList<
  - uid: com.microsoft.azure.storage.file.FileRange
    name: FileRange
    fullName: com.microsoft.azure.storage.file.FileRange
    href: com.microsoft.azure.storage.file.FileRange.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.file.CloudFile.downloadFileRanges*
  name: downloadFileRanges
  nameWithType: CloudFile.downloadFileRanges
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadFileRanges
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.downloadAttributes*
  name: downloadAttributes
  nameWithType: CloudFile.downloadAttributes
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadAttributes
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.exists*
  name: exists
  nameWithType: CloudFile.exists
  fullName: com.microsoft.azure.storage.file.CloudFile.exists
  package: com.microsoft.azure.storage.file
- uid: e333ca4f
  spec.java:
  - name: InvalidKeyException
    fullName: InvalidKeyException
- uid: 93de0ef9com.microsoft.azure.storage.file.SharedAccessFilePolicy
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file.SharedAccessFilePolicy
    name: SharedAccessFilePolicy
    fullName: com.microsoft.azure.storage.file.SharedAccessFilePolicy
    href: com.microsoft.azure.storage.file.SharedAccessFilePolicy.yml
- uid: com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature*
  name: generateSharedAccessSignature
  nameWithType: CloudFile.generateSharedAccessSignature
  fullName: com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature
  package: com.microsoft.azure.storage.file
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 93de0ef9com.microsoft.azure.storage.file.SharedAccessFileHeaders
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file.SharedAccessFileHeaders
    name: SharedAccessFileHeaders
    fullName: com.microsoft.azure.storage.file.SharedAccessFileHeaders
    href: com.microsoft.azure.storage.file.SharedAccessFileHeaders.yml
- uid: 93de0ef9com.microsoft.azure.storage.IPRange
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.IPRange
    name: IPRange
    fullName: com.microsoft.azure.storage.IPRange
    href: com.microsoft.azure.storage.IPRange.yml
- uid: 93de0ef9com.microsoft.azure.storage.SharedAccessProtocols
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.SharedAccessProtocols
    name: SharedAccessProtocols
    fullName: com.microsoft.azure.storage.SharedAccessProtocols
    href: com.microsoft.azure.storage.SharedAccessProtocols.yml
- uid: com.microsoft.azure.storage.file.CloudFile.getCopyState*
  name: getCopyState
  nameWithType: CloudFile.getCopyState
  fullName: com.microsoft.azure.storage.file.CloudFile.getCopyState
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file.FileInputStream
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file.FileInputStream
    name: FileInputStream
    fullName: com.microsoft.azure.storage.file.FileInputStream
    href: com.microsoft.azure.storage.file.FileInputStream.yml
- uid: com.microsoft.azure.storage.file.CloudFile.openRead*
  name: openRead
  nameWithType: CloudFile.openRead
  fullName: com.microsoft.azure.storage.file.CloudFile.openRead
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.openWriteExisting*
  name: openWriteExisting
  nameWithType: CloudFile.openWriteExisting
  fullName: com.microsoft.azure.storage.file.CloudFile.openWriteExisting
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.openWriteNew*
  name: openWriteNew
  nameWithType: CloudFile.openWriteNew
  fullName: com.microsoft.azure.storage.file.CloudFile.openWriteNew
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray*
  name: uploadFromByteArray
  nameWithType: CloudFile.uploadFromByteArray
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.uploadFromFile*
  name: uploadFromFile
  nameWithType: CloudFile.uploadFromFile
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadFromFile
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.uploadText*
  name: uploadText
  nameWithType: CloudFile.uploadText
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadText
  package: com.microsoft.azure.storage.file
- uid: ac354e53
  spec.java:
  - name: final InputStream
    fullName: final InputStream
- uid: com.microsoft.azure.storage.file.CloudFile.uploadRange*
  name: uploadRange
  nameWithType: CloudFile.uploadRange
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadRange
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.putRangeFromURL*
  name: putRangeFromURL
  nameWithType: CloudFile.putRangeFromURL
  fullName: com.microsoft.azure.storage.file.CloudFile.putRangeFromURL
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.uploadMetadata*
  name: uploadMetadata
  nameWithType: CloudFile.uploadMetadata
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadMetadata
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.uploadProperties*
  name: uploadProperties
  nameWithType: CloudFile.uploadProperties
  fullName: com.microsoft.azure.storage.file.CloudFile.uploadProperties
  package: com.microsoft.azure.storage.file
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: com.microsoft.azure.storage.file.CloudFile.resize*
  name: resize
  nameWithType: CloudFile.resize
  fullName: com.microsoft.azure.storage.file.CloudFile.resize
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.upload*
  name: upload
  nameWithType: CloudFile.upload
  fullName: com.microsoft.azure.storage.file.CloudFile.upload
  package: com.microsoft.azure.storage.file
- uid: 2a13b5a5com.microsoft.azure.storage.file.FileHandlea08ddfce
  spec.java:
  - name: Iterable<
    fullName: Iterable<
  - uid: com.microsoft.azure.storage.file.FileHandle
    name: FileHandle
    fullName: com.microsoft.azure.storage.file.FileHandle
    href: com.microsoft.azure.storage.file.FileHandle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.file.CloudFile.listHandles*
  name: listHandles
  nameWithType: CloudFile.listHandles
  fullName: com.microsoft.azure.storage.file.CloudFile.listHandles
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.ResultSegment78504a52com.microsoft.azure.storage.file.FileHandlea08ddfce
  spec.java:
  - uid: com.microsoft.azure.storage.ResultSegment
    name: ResultSegment
    fullName: com.microsoft.azure.storage.ResultSegment
    href: com.microsoft.azure.storage.ResultSegment.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.storage.file.FileHandle
    name: FileHandle
    fullName: com.microsoft.azure.storage.file.FileHandle
    href: com.microsoft.azure.storage.file.FileHandle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.file.CloudFile.listHandlesSegmented*
  name: listHandlesSegmented
  nameWithType: CloudFile.listHandlesSegmented
  fullName: com.microsoft.azure.storage.file.CloudFile.listHandlesSegmented
  package: com.microsoft.azure.storage.file
- uid: 3437983f
  spec.java:
  - name: final Integer
    fullName: final Integer
- uid: 93de0ef9com.microsoft.azure.storage.ResultContinuation
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.ResultContinuation
    name: ResultContinuation
    fullName: com.microsoft.azure.storage.ResultContinuation
    href: com.microsoft.azure.storage.ResultContinuation.yml
- uid: com.microsoft.azure.storage.ResultSegmentb7bc04e2
  spec.java:
  - uid: com.microsoft.azure.storage.ResultSegment
    name: ResultSegment
    fullName: com.microsoft.azure.storage.ResultSegment
    href: com.microsoft.azure.storage.ResultSegment.yml
  - name: <Integer>
    fullName: <Integer>
- uid: com.microsoft.azure.storage.file.CloudFile.closeAllHandlesSegmented*
  name: closeAllHandlesSegmented
  nameWithType: CloudFile.closeAllHandlesSegmented
  fullName: com.microsoft.azure.storage.file.CloudFile.closeAllHandlesSegmented
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.closeHandleSegmented*
  name: closeHandleSegmented
  nameWithType: CloudFile.closeHandleSegmented
  fullName: com.microsoft.azure.storage.file.CloudFile.closeHandleSegmented
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file.CloudFileShare
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file.CloudFileShare
    name: CloudFileShare
    fullName: com.microsoft.azure.storage.file.CloudFileShare
    href: com.microsoft.azure.storage.file.CloudFileShare.yml
- uid: com.microsoft.azure.storage.file.CloudFile.getShare*
  name: getShare
  nameWithType: CloudFile.getShare
  fullName: com.microsoft.azure.storage.file.CloudFile.getShare
  package: com.microsoft.azure.storage.file
- uid: 496ce5ae
  spec.java:
  - name: final HashMap<String, String>
    fullName: final HashMap<String, String>
- uid: com.microsoft.azure.storage.file.CloudFile.getMetadata*
  name: getMetadata
  nameWithType: CloudFile.getMetadata
  fullName: com.microsoft.azure.storage.file.CloudFile.getMetadata
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.getName*
  name: getName
  nameWithType: CloudFile.getName
  fullName: com.microsoft.azure.storage.file.CloudFile.getName
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file.CloudFileDirectory
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file.CloudFileDirectory
    name: CloudFileDirectory
    fullName: com.microsoft.azure.storage.file.CloudFileDirectory
    href: com.microsoft.azure.storage.file.CloudFileDirectory.yml
- uid: com.microsoft.azure.storage.file.CloudFile.getParent*
  name: getParent
  nameWithType: CloudFile.getParent
  fullName: com.microsoft.azure.storage.file.CloudFile.getParent
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file.FileProperties
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file.FileProperties
    name: FileProperties
    fullName: com.microsoft.azure.storage.file.FileProperties
    href: com.microsoft.azure.storage.file.FileProperties.yml
- uid: com.microsoft.azure.storage.file.CloudFile.getProperties*
  name: getProperties
  nameWithType: CloudFile.getProperties
  fullName: com.microsoft.azure.storage.file.CloudFile.getProperties
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file.CloudFileClient
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file.CloudFileClient
    name: CloudFileClient
    fullName: com.microsoft.azure.storage.file.CloudFileClient
    href: com.microsoft.azure.storage.file.CloudFileClient.yml
- uid: com.microsoft.azure.storage.file.CloudFile.getServiceClient*
  name: getServiceClient
  nameWithType: CloudFile.getServiceClient
  fullName: com.microsoft.azure.storage.file.CloudFile.getServiceClient
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.getStreamWriteSizeInBytes*
  name: getStreamWriteSizeInBytes
  nameWithType: CloudFile.getStreamWriteSizeInBytes
  fullName: com.microsoft.azure.storage.file.CloudFile.getStreamWriteSizeInBytes
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.getStreamMinimumReadSizeInBytes*
  name: getStreamMinimumReadSizeInBytes
  nameWithType: CloudFile.getStreamMinimumReadSizeInBytes
  fullName: com.microsoft.azure.storage.file.CloudFile.getStreamMinimumReadSizeInBytes
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.getStorageUri*
  name: getStorageUri
  nameWithType: CloudFile.getStorageUri
  fullName: com.microsoft.azure.storage.file.CloudFile.getStorageUri
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.getUri*
  name: getUri
  nameWithType: CloudFile.getUri
  fullName: com.microsoft.azure.storage.file.CloudFile.getUri
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.setMetadata*
  name: setMetadata
  nameWithType: CloudFile.setMetadata
  fullName: com.microsoft.azure.storage.file.CloudFile.setMetadata
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.setFilePermission*
  name: setFilePermission
  nameWithType: CloudFile.setFilePermission
  fullName: com.microsoft.azure.storage.file.CloudFile.setFilePermission
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes*
  name: setStreamMinimumReadSizeInBytes
  nameWithType: CloudFile.setStreamMinimumReadSizeInBytes
  fullName: com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.setStreamWriteSizeInBytes*
  name: setStreamWriteSizeInBytes
  nameWithType: CloudFile.setStreamWriteSizeInBytes
  fullName: com.microsoft.azure.storage.file.CloudFile.setStreamWriteSizeInBytes
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.downloadRangeInternal*
  name: downloadRangeInternal
  nameWithType: CloudFile.downloadRangeInternal
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadRangeInternal
  package: com.microsoft.azure.storage.file
- uid: a7895dc2
  spec.java:
  - name: HttpURLConnection
    fullName: HttpURLConnection
- uid: com.microsoft.azure.storage.file.CloudFile.updateEtagAndLastModifiedFromResponse*
  name: updateEtagAndLastModifiedFromResponse
  nameWithType: CloudFile.updateEtagAndLastModifiedFromResponse
  fullName: com.microsoft.azure.storage.file.CloudFile.updateEtagAndLastModifiedFromResponse
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.updateLengthFromResponse*
  name: updateLengthFromResponse
  nameWithType: CloudFile.updateLengthFromResponse
  fullName: com.microsoft.azure.storage.file.CloudFile.updateLengthFromResponse
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.setShare*
  name: setShare
  nameWithType: CloudFile.setShare
  fullName: com.microsoft.azure.storage.file.CloudFile.setShare
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.setProperties*
  name: setProperties
  nameWithType: CloudFile.setProperties
  fullName: com.microsoft.azure.storage.file.CloudFile.setProperties
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.setStorageUri*
  name: setStorageUri
  nameWithType: CloudFile.setStorageUri
  fullName: com.microsoft.azure.storage.file.CloudFile.setStorageUri
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.OperationContext
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.OperationContext
    name: OperationContext
    fullName: com.microsoft.azure.storage.OperationContext
    href: com.microsoft.azure.storage.OperationContext.yml
- uid: com.microsoft.azure.storage.file.CloudFile.getTransformedAddress*
  name: getTransformedAddress
  nameWithType: CloudFile.getTransformedAddress
  fullName: com.microsoft.azure.storage.file.CloudFile.getTransformedAddress
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.assertValidFilePermissionOrKey*
  name: assertValidFilePermissionOrKey
  nameWithType: CloudFile.assertValidFilePermissionOrKey
  fullName: com.microsoft.azure.storage.file.CloudFile.assertValidFilePermissionOrKey
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.CloudFile.getParentNameFromURI*
  name: getParentNameFromURI
  nameWithType: CloudFile.getParentNameFromURI
  fullName: com.microsoft.azure.storage.file.CloudFile.getParentNameFromURI
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file.ListFileItem
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.ListFileItem.yml
  name: ListFileItem
  nameWithType: ListFileItem
  fullName: com.microsoft.azure.storage.file.ListFileItem
  type: Interface
  summary: "<p>Represents an item that may be returned by a file listing operation. </p>"
  syntax:
    content: public interface ListFileItem
- uid: com.microsoft.azure.storage.Constants.DEFAULT_STREAM_WRITE_IN_BYTES
  parent: com.microsoft.azure.storage.Constants
  href: com.microsoft.azure.storage.Constants.yml
  name: DEFAULT_STREAM_WRITE_IN_BYTES
  nameWithType: Constants.DEFAULT_STREAM_WRITE_IN_BYTES
  fullName: com.microsoft.azure.storage.Constants.DEFAULT_STREAM_WRITE_IN_BYTES
  type: Field
  summary: "<p>The default write size, in bytes, used by <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobOutputStream\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileOutputStream\"></xref>. </p>"
  syntax:
    content: public static final int DEFAULT_STREAM_WRITE_IN_BYTES=  4 * Constants.MB
    return:
      type: cd225469
- uid: com.microsoft.azure.storage.file.FileOutputStream
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.FileOutputStream.yml
  name: FileOutputStream
  nameWithType: FileOutputStream
  fullName: com.microsoft.azure.storage.file.FileOutputStream
  type: Class
  summary: "<p>The class is an append-only stream for writing into storage. </p>"
  syntax:
    content: public class FileOutputStream
- uid: com.microsoft.azure.storage.Constants.DEFAULT_MINIMUM_READ_SIZE_IN_BYTES
  parent: com.microsoft.azure.storage.Constants
  href: com.microsoft.azure.storage.Constants.yml
  name: DEFAULT_MINIMUM_READ_SIZE_IN_BYTES
  nameWithType: Constants.DEFAULT_MINIMUM_READ_SIZE_IN_BYTES
  fullName: com.microsoft.azure.storage.Constants.DEFAULT_MINIMUM_READ_SIZE_IN_BYTES
  type: Field
  summary: "<p>The default minimum read size, in bytes, for a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobInputStream\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileInputStream\"></xref>. </p>"
  syntax:
    content: public static final int DEFAULT_MINIMUM_READ_SIZE_IN_BYTES= 4 * Constants.MB
    return:
      type: cd225469
- uid: com.microsoft.azure.storage.file.FileInputStream
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.FileInputStream.yml
  name: FileInputStream
  nameWithType: FileInputStream
  fullName: com.microsoft.azure.storage.file.FileInputStream
  type: Class
  summary: "<p>Provides an input stream to read a given file resource. </p>"
  syntax:
    content: public class FileInputStream
- uid: com.microsoft.azure.storage.file.CloudFileDirectory
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.CloudFileDirectory.yml
  name: CloudFileDirectory
  nameWithType: CloudFileDirectory
  fullName: com.microsoft.azure.storage.file.CloudFileDirectory
  type: Class
  summary: "<p>Represents a virtual directory of files. </p>\r\n<p>Directories, which are encapsulated as <xref uid=\"com.microsoft.azure.storage.file.CloudFileDirectory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudFileDirectory\"></xref> objects, hold files and can also contain sub-directories. </p>"
  syntax:
    content: public class CloudFileDirectory
- uid: com.microsoft.azure.storage.file.CloudFileClient
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.CloudFileClient.yml
  name: CloudFileClient
  nameWithType: CloudFileClient
  fullName: com.microsoft.azure.storage.file.CloudFileClient
  type: Class
  summary: "<p>Provides a client for accessing the Microsoft Azure File service. </p>\r\n<p>This class provides a point of access to the File service. The service client encapsulates the base URI for the File service. It also encapsulates the credentials for accessing the storage account. </p>"
  syntax:
    content: public class CloudFileClient
- uid: com.microsoft.azure.storage.file.CloudFileShare
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.CloudFileShare.yml
  name: CloudFileShare
  nameWithType: CloudFileShare
  fullName: com.microsoft.azure.storage.file.CloudFileShare
  type: Class
  summary: "<p>Represents a share in the Microsoft Azure File service. </p>\r\n<p>Shares hold directories, which are encapsulated as <xref uid=\"com.microsoft.azure.storage.file.CloudFileDirectory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudFileDirectory\"></xref> objects, and directories hold files. Directories can also contain sub-directories. </p>"
  syntax:
    content: public class CloudFileShare
- uid: com.microsoft.azure.storage.file.FileProperties
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.FileProperties.yml
  name: FileProperties
  nameWithType: FileProperties
  fullName: com.microsoft.azure.storage.file.FileProperties
  type: Class
  summary: "<p>Represents the system properties for a file. </p>"
  syntax:
    content: public class FileProperties
- uid: com.microsoft.azure.storage.StorageUri
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.StorageUri.yml
  name: StorageUri
  nameWithType: StorageUri
  fullName: com.microsoft.azure.storage.StorageUri
  type: Class
  summary: "<p>Holds a list of URIs that represents the storage resource. </p>"
  syntax:
    content: public class StorageUri
- uid: com.microsoft.azure.storage.StorageException
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.StorageException.yml
  name: StorageException
  nameWithType: StorageException
  fullName: com.microsoft.azure.storage.StorageException
  type: Class
  summary: "<p>Represents an exception for the Microsoft Azure storage service. </p>"
  syntax:
    content: public class StorageException
- uid: com.microsoft.azure.storage.StorageCredentials
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.StorageCredentials.yml
  name: StorageCredentials
  nameWithType: StorageCredentials
  fullName: com.microsoft.azure.storage.StorageCredentials
  type: Class
  summary: "<p>Represents a set of credentials used to authenticate access to a Microsoft Azure storage account. This is the base class for the <xref uid=\"com.microsoft.azure.storage.StorageCredentialsAccountAndKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageCredentialsAccountAndKey\"></xref>, <xref uid=\"com.microsoft.azure.storage.StorageCredentialsToken\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageCredentialsToken\"></xref>, and <xref uid=\"com.microsoft.azure.storage.StorageCredentialsSharedAccessSignature\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageCredentialsSharedAccessSignature\"></xref> classes. </p>"
  syntax:
    content: public class StorageCredentials
- uid: com.microsoft.azure.storage.file.CloudFile
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.CloudFile.yml
  name: CloudFile
  nameWithType: CloudFile
  fullName: com.microsoft.azure.storage.file.CloudFile
  type: Class
  summary: "<p>Represents a Microsoft Azure File. </p>"
  syntax: *o1
- uid: com.microsoft.azure.storage.AccessCondition
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.AccessCondition.yml
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: com.microsoft.azure.storage.AccessCondition
  type: Class
  summary: "<p>Represents a set of access conditions to be used for operations against the storage services. </p>"
  syntax:
    content: public class AccessCondition
- uid: com.microsoft.azure.storage.file.FileRequestOptions
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.FileRequestOptions.yml
  name: FileRequestOptions
  nameWithType: FileRequestOptions
  fullName: com.microsoft.azure.storage.file.FileRequestOptions
  type: Class
  summary: "<p>Represents a set of options that may be specified on a request. </p>"
  syntax:
    content: public class FileRequestOptions
- uid: com.microsoft.azure.storage.OperationContext
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.OperationContext.yml
  name: OperationContext
  nameWithType: OperationContext
  fullName: com.microsoft.azure.storage.OperationContext
  type: Class
  summary: "<p>Represents the current logical operation. A logical operation may have a one-to-many relationship with multiple individual physical requests. </p>"
  syntax:
    content: public class OperationContext
- uid: com.microsoft.azure.storage.blob.CloudBlob
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.CloudBlob.yml
  name: CloudBlob
  nameWithType: CloudBlob
  fullName: com.microsoft.azure.storage.blob.CloudBlob
  type: Class
  summary: "<p>Represents a Microsoft Azure blob. This is the base class for the <xref uid=\"com.microsoft.azure.storage.blob.CloudBlockBlob\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudBlockBlob\"></xref> and <xref uid=\"com.microsoft.azure.storage.blob.CloudPageBlob\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudPageBlob\"></xref> classes. </p>"
  syntax:
    content: public class CloudBlob implements ListBlobItem
- uid: com.microsoft.azure.storage.file.FileRange
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.FileRange.yml
  name: FileRange
  nameWithType: FileRange
  fullName: com.microsoft.azure.storage.file.FileRange
  type: Class
  summary: "<p>Represents a range of bytes in a file. </p>"
  syntax:
    content: public class FileRange
- uid: com.microsoft.azure.storage.file.SharedAccessFilePolicy
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.SharedAccessFilePolicy.yml
  name: SharedAccessFilePolicy
  nameWithType: SharedAccessFilePolicy
  fullName: com.microsoft.azure.storage.file.SharedAccessFilePolicy
  type: Class
  summary: "<p>Represents a shared access policy, which specifies the start time, expiry time, and permissions for a shared access signature. </p>"
  syntax:
    content: public class SharedAccessFilePolicy
- uid: com.microsoft.azure.storage.file.SharedAccessFileHeaders
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.SharedAccessFileHeaders.yml
  name: SharedAccessFileHeaders
  nameWithType: SharedAccessFileHeaders
  fullName: com.microsoft.azure.storage.file.SharedAccessFileHeaders
  type: Class
  summary: "<p>Represents the optional headers that can be returned with files accessed using SAS. </p>"
  syntax:
    content: public class SharedAccessFileHeaders
- uid: com.microsoft.azure.storage.IPRange
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.IPRange.yml
  name: IPRange
  nameWithType: IPRange
  fullName: com.microsoft.azure.storage.IPRange
  type: Class
  summary: "<p>A continuous range of IP addresses. </p>"
  syntax:
    content: public class IPRange
- uid: com.microsoft.azure.storage.SharedAccessProtocols
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.SharedAccessProtocols.yml
  name: SharedAccessProtocols
  nameWithType: SharedAccessProtocols
  fullName: com.microsoft.azure.storage.SharedAccessProtocols
  type: Enum
  summary: "<p>Specifies the set of possible permissions for a shared access protocol. </p>"
  syntax:
    content: public enum SharedAccessProtocols
- uid: com.microsoft.azure.storage.file.CopyState
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.CopyState.yml
  name: CopyState
  nameWithType: CopyState
  fullName: com.microsoft.azure.storage.file.CopyState
  type: Class
  summary: "<p>Represents the attributes of a copy operation. </p>"
  syntax:
    content: public class CopyState
- uid: com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes(final int)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  name: setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  nameWithType: CloudFile.setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  fullName: com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  type: Method
  summary: "<p>Sets the minimum read size when using a <xref uid=\"com.microsoft.azure.storage.file.FileInputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileInputStream\"></xref>.</p>\r\n<p></p>"
  syntax: *o2
- uid: com.microsoft.azure.storage.file.CloudFile.openWriteNew(final long,AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  name: openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: com.microsoft.azure.storage.file.CloudFile.openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  type: Method
  summary: "<p>Opens an output stream object to write data to the file, using the specified lease ID, request options and operation context. The file does not need to yet exist and will be created with the length specified. If the file already exists on the service, it will be overwritten. </p>\r\n<p>To avoid overwriting and instead throw an error, please pass in an <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessCondition\"></xref> generated using <xref uid=\"com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessCondition#generateIfNotExistsCondition()\"></xref>.</p>\r\n<p></p>"
  syntax: *o3
- uid: com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()
  parent: com.microsoft.azure.storage.AccessCondition
  href: com.microsoft.azure.storage.AccessCondition.yml
  name: generateIfNotExistsCondition()
  nameWithType: AccessCondition.generateIfNotExistsCondition()
  fullName: com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()
  type: Method
  summary: "<p>Returns an access condition such that an operation will be performed only if the resource does not exist on the service. </p>\r\n<p>Setting this access condition modifies the request to include the HTTP <em>If-None-Match</em> conditional header. </p>\r\n<p>For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=224642\">Specifying Conditional Headers for Blob Service Operations</a>.</p>\r\n<p></p>"
  syntax:
    content: public static AccessCondition generateIfNotExistsCondition()
    return:
      type: com.microsoft.azure.storage.AccessCondition
      description: <p>An <code>AccessCondition</code> object that represents the if not exists condition. </p>
- uid: com.microsoft.azure.storage.file.CloudFile.downloadAttributes()
  parent: com.microsoft.azure.storage.file.CloudFile
  href: com.microsoft.azure.storage.file.CloudFile.yml
  name: downloadAttributes()
  nameWithType: CloudFile.downloadAttributes()
  fullName: com.microsoft.azure.storage.file.CloudFile.downloadAttributes()
  type: Method
  summary: "<p>Populates a file's properties and metadata. </p>\r\n<p>This method populates the file's system properties and user-defined metadata. Before reading or modifying a file's properties or metadata, call this method or its overload to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>\r\n<p></p>"
  syntax: *o4
- uid: com.microsoft.azure.storage.file.FileHandle
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.FileHandle.yml
  name: FileHandle
  nameWithType: FileHandle
  fullName: com.microsoft.azure.storage.file.FileHandle
  type: Class
  summary: "<p>Represents a handle to an Azure Storage File. </p>"
  syntax:
    content: public class FileHandle
- uid: com.microsoft.azure.storage.ResultSegment
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.ResultSegment.yml
  name: ResultSegment<T>
  nameWithType: ResultSegment<T>
  fullName: com.microsoft.azure.storage.ResultSegment<T>
  type: Class
  summary: "<p>Represents a segment of results and contains continuation and pagination information.</p>\r\n<p></p>"
  syntax:
    content: public class ResultSegment<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>The type of the result that the segment contains. </p>
- uid: com.microsoft.azure.storage.ResultContinuation
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.ResultContinuation.yml
  name: ResultContinuation
  nameWithType: ResultContinuation
  fullName: com.microsoft.azure.storage.ResultContinuation
  type: Class
  summary: "<p>Represents a continuation token for listing operations. Continuation tokens are used in methods that return a <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ResultSegment\"></xref> object, such as <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobsSegmented()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudBlobDirectory#listBlobsSegmented\"></xref>. </p>"
  syntax:
    content: public class ResultContinuation
- uid: com.microsoft.azure.storage.file.ListFileItem.getShare()
  parent: com.microsoft.azure.storage.file.ListFileItem
  href: com.microsoft.azure.storage.file.ListFileItem.yml
  name: getShare()
  nameWithType: ListFileItem.getShare()
  fullName: com.microsoft.azure.storage.file.ListFileItem.getShare()
  type: Method
  summary: "<p>Returns the share for the file item.</p>\r\n<p></p>"
  syntax:
    content: public CloudFileShare getShare()
    return:
      type: com.microsoft.azure.storage.file.CloudFileShare
      description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileShare" data-throw-if-not-resolved="false" data-raw-source="CloudFileShare"></xref> object which represents the file item's share.</p>
- uid: com.microsoft.azure.storage.file.ListFileItem.getParent()
  parent: com.microsoft.azure.storage.file.ListFileItem
  href: com.microsoft.azure.storage.file.ListFileItem.yml
  name: getParent()
  nameWithType: ListFileItem.getParent()
  fullName: com.microsoft.azure.storage.file.ListFileItem.getParent()
  type: Method
  summary: "<p>Returns the parent for the file item.</p>\r\n<p></p>"
  syntax:
    content: public CloudFileDirectory getParent()
    return:
      type: com.microsoft.azure.storage.file.CloudFileDirectory
      description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileDirectory" data-throw-if-not-resolved="false" data-raw-source="CloudFileDirectory"></xref> object which represents the file item's parent.</p>
- uid: com.microsoft.azure.storage.file.ListFileItem.getStorageUri()
  parent: com.microsoft.azure.storage.file.ListFileItem
  href: com.microsoft.azure.storage.file.ListFileItem.yml
  name: getStorageUri()
  nameWithType: ListFileItem.getStorageUri()
  fullName: com.microsoft.azure.storage.file.ListFileItem.getStorageUri()
  type: Method
  summary: "<p>Returns the list of URIs for all storage locations of the file item.</p>\r\n<p></p>"
  syntax:
    content: public StorageUri getStorageUri()
    return:
      type: com.microsoft.azure.storage.StorageUri
      description: <p>A <code><xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref></code> object which represents the file item's URI. </p>
- uid: com.microsoft.azure.storage.file.ListFileItem.getUri()
  parent: com.microsoft.azure.storage.file.ListFileItem
  href: com.microsoft.azure.storage.file.ListFileItem.yml
  name: getUri()
  nameWithType: ListFileItem.getUri()
  fullName: com.microsoft.azure.storage.file.ListFileItem.getUri()
  type: Method
  summary: "<p>Returns the URI for the file item.</p>\r\n<p></p>"
  syntax:
    content: public URI getUri()
    return:
      type: "62304784"
      description: <p>A <code>java.net.URI</code> object which represents the file item's URI. </p>
- uid: com.microsoft.azure.storage.core.StorageRequest
  parent: com.microsoft.azure.storage.core
  href: com.microsoft.azure.storage.core.StorageRequest.yml
  name: StorageRequest<C,P,R>
  nameWithType: StorageRequest<C,P,R>
  fullName: com.microsoft.azure.storage.core.StorageRequest<C,P,R>
  type: Class
  summary: "<p>RESERVED FOR INTERNAL USE. A class which encapsulate the execution of a given storage operation.</p>\r\n<p></p>"
  syntax:
    content: public class StorageRequest<C,P,R>
    typeParameters:
    - id: C
      type: 37f8610d
      description: <p>The service client type </p>
    - id: P
      type: db9ec244
      description: <p>The type of the parent object, i.e. CloudBlobContainer for downloadAttributes etc. </p>
    - id: R
      type: d4d3e1e1
      description: <p>The type of the expected result </p>
- uid: com.microsoft.azure.storage.core.SegmentedStorageRequest
  parent: com.microsoft.azure.storage.core
  href: com.microsoft.azure.storage.core.SegmentedStorageRequest.yml
  name: SegmentedStorageRequest
  nameWithType: SegmentedStorageRequest
  fullName: com.microsoft.azure.storage.core.SegmentedStorageRequest
  type: Class
  syntax:
    content: public class SegmentedStorageRequest
