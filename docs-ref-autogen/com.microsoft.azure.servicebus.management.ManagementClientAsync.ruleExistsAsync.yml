### YamlMime:JavaMember
uid: "com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync*"
fullName: "com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync"
name: "ruleExistsAsync"
nameWithType: "ManagementClientAsync.ruleExistsAsync"
members:
- uid: "com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync(String topicPath, String subscriptionName, String ruleName)"
  name: "ruleExistsAsync(String topicPath, String subscriptionName, String ruleName)"
  nameWithType: "ManagementClientAsync.ruleExistsAsync(String topicPath, String subscriptionName, String ruleName)"
  summary: "Checks whether a given rule exists or not for a given subscription."
  parameters:
  - description: "- Path of the topic"
    name: "topicPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Name of the rule"
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<Boolean> ruleExistsAsync(String topicPath, String subscriptionName, String ruleName)"
  returns:
    description: "- True if the entity exists. False otherwise."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.servicebus.management"
artifact: com.microsoft.azure:azure-servicebus:3.4.0
