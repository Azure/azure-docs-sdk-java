### YamlMime:JavaMember
uid: "com.azure.spring.integration.core.api.reactor.ReceiveOperation.receiveAsync*"
fullName: "com.azure.spring.integration.core.api.reactor.ReceiveOperation.receiveAsync"
name: "receiveAsync"
nameWithType: "ReceiveOperation.receiveAsync"
members:
- uid: "com.azure.spring.integration.core.api.reactor.ReceiveOperation.receiveAsync(java.lang.String)"
  fullName: "com.azure.spring.integration.core.api.reactor.ReceiveOperation.receiveAsync(String destination)"
  name: "receiveAsync(String destination)"
  nameWithType: "ReceiveOperation.receiveAsync(String destination)"
  summary: "Receive a message from destination async."
  parameters:
  - description: "destination"
    name: "destination"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Message<?>> receiveAsync(String destination)"
  returns:
    description: "<xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> of the next available <xref uid=\"org.springframework.messaging.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> or <code>null</code> if empty"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.springframework.messaging.Message?alt=org.springframework.messaging.Message&text=Message\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.spring.integration.core.api.reactor"
artifact: com.azure.spring:azure-spring-integration-core:2.0.0
