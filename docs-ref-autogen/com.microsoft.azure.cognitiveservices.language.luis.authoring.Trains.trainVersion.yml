### YamlMime:JavaMember
nameWithType: Trains.trainVersion
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Trains.trainVersion(UUID appId, String versionId)
  name: trainVersion(UUID appId, String versionId)
  nameWithType: Trains.trainVersion(UUID appId, String versionId)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the EnqueueTrainingResponse object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EnqueueTrainingResponse?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EnqueueTrainingResponse&text=EnqueueTrainingResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sends a training request for a version of a specified LUIS app. This POST request initiates a request asynchronously. To determine whether the training request is successful, submit a GET request to get training status. Note: The application version is not fully trained unless all the models (intents and entities) are trained successfully or are up to date. To verify training success, get the training status at least once after training is complete.</p>

    <p></p>
  syntax: public EnqueueTrainingResponse trainVersion(UUID appId, String versionId)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Trains.trainVersion(UUID,String)
uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Trains.trainVersion*
fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Trains.trainVersion(UUID appId, String versionId)
name: trainVersion(UUID appId, String versionId)
package: com.microsoft.azure.cognitiveservices.language.luis.authoring
metadata: {}
