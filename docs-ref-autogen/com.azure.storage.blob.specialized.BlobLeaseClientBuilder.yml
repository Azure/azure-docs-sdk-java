### YamlMime:JavaType
uid: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder"
fullName: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder"
name: "BlobLeaseClientBuilder"
nameWithType: "BlobLeaseClientBuilder"
summary: "This class provides a fluent builder API to help aid the configuration and instantiation of Storage Lease clients. Lease clients are able to interact with both container and blob clients and act as a supplement client. A new instance of <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseClient\" data-throw-if-not-resolved=\"false\">BlobLeaseClient</xref> and <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseAsyncClient\" data-throw-if-not-resolved=\"false\">BlobLeaseAsyncClient</xref> are constructed every time <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\">buildClient</xref> and <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">buildAsyncClient</xref> are called respectively.\n\nWhen a client is instantiated and a <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseClientBuilder.leaseId(java.lang.String)\" data-throw-if-not-resolved=\"false\">leaseId</xref> hasn't been set a <xref uid=\"\" data-throw-if-not-resolved=\"false\">UUID</xref> will be used as the lease identifier.\n\n**Instantiating LeaseClients**\n\n```java\nBlobLeaseClient blobLeaseClient = new BlobLeaseClientBuilder()\n     .blobClient(blobClient)\n     .leaseId(leaseId)\n     .buildClient();\n```\n\n```java\nBlobLeaseClient blobLeaseClient = new BlobLeaseClientBuilder()\n     .containerClient(blobContainerClient)\n     .leaseId(leaseId)\n     .buildClient();\n```\n\n**Instantiating LeaseAsyncClients**\n\n```java\nBlobLeaseAsyncClient blobLeaseAsyncClient = new BlobLeaseClientBuilder()\n     .blobAsyncClient(blobAsyncClient)\n     .leaseId(leaseId)\n     .buildAsyncClient();\n```\n\n```java\nBlobLeaseAsyncClient blobLeaseAsyncClient = new BlobLeaseClientBuilder()\n     .containerAsyncClient(blobContainerAsyncClient)\n     .leaseId(leaseId)\n     .buildAsyncClient();\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BlobLeaseClientBuilder"
constructors:
- "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.BlobLeaseClientBuilder()"
methods:
- "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.blobAsyncClient(com.azure.storage.blob.specialized.BlobAsyncClientBase)"
- "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.blobClient(com.azure.storage.blob.specialized.BlobClientBase)"
- "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.buildAsyncClient()"
- "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.buildClient()"
- "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.containerAsyncClient(com.azure.storage.blob.BlobContainerAsyncClient)"
- "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.containerClient(com.azure.storage.blob.BlobContainerClient)"
- "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.leaseId(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
