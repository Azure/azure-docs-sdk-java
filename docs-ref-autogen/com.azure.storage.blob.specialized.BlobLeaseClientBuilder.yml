### YamlMime:JavaType
uid: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder"
fullName: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder"
name: "BlobLeaseClientBuilder"
nameWithType: "BlobLeaseClientBuilder"
summary: "This class provides a fluent builder API to help aid the configuration and instantiation of Storage Lease clients."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BlobLeaseClientBuilder"
constructors:
- uid: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.BlobLeaseClientBuilder()"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.BlobLeaseClientBuilder()"
  name: "BlobLeaseClientBuilder()"
  nameWithType: "BlobLeaseClientBuilder.BlobLeaseClientBuilder()"
  syntax: "public BlobLeaseClientBuilder()"
methods:
- uid: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.blobAsyncClient(com.azure.storage.blob.specialized.BlobAsyncClientBase)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.blobAsyncClient(BlobAsyncClientBase blobAsyncClient)"
  name: "blobAsyncClient(BlobAsyncClientBase blobAsyncClient)"
  nameWithType: "BlobLeaseClientBuilder.blobAsyncClient(BlobAsyncClientBase blobAsyncClient)"
  summary: "Configures the builder based on the passed <xref uid=\"com.azure.storage.blob.BlobAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobAsyncClient\"></xref>."
  parameters:
  - description: "BlobAsyncClient used to configure the builder."
    name: "blobAsyncClient"
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobAsyncClientBase?alt=com.azure.storage.blob.specialized.BlobAsyncClientBase&text=BlobAsyncClientBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobLeaseClientBuilder blobAsyncClient(BlobAsyncClientBase blobAsyncClient)"
  desc: "Configures the builder based on the passed <xref uid=\"com.azure.storage.blob.BlobAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobAsyncClient\"></xref>. This will set the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"URL\"></xref> that are used to interact with the service."
  returns:
    description: "the updated BlobLeaseClientBuilder object"
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobLeaseClientBuilder?alt=com.azure.storage.blob.specialized.BlobLeaseClientBuilder&text=BlobLeaseClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.blobClient(com.azure.storage.blob.specialized.BlobClientBase)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.blobClient(BlobClientBase blobClient)"
  name: "blobClient(BlobClientBase blobClient)"
  nameWithType: "BlobLeaseClientBuilder.blobClient(BlobClientBase blobClient)"
  summary: "Configures the builder based on the passed <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref>."
  parameters:
  - description: "BlobClient used to configure the builder."
    name: "blobClient"
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase?alt=com.azure.storage.blob.specialized.BlobClientBase&text=BlobClientBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobLeaseClientBuilder blobClient(BlobClientBase blobClient)"
  desc: "Configures the builder based on the passed <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref>. This will set the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"URL\"></xref> that are used to interact with the service."
  returns:
    description: "the updated BlobLeaseClientBuilder object"
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobLeaseClientBuilder?alt=com.azure.storage.blob.specialized.BlobLeaseClientBuilder&text=BlobLeaseClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.buildAsyncClient()"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.buildAsyncClient()"
  name: "buildAsyncClient()"
  nameWithType: "BlobLeaseClientBuilder.buildAsyncClient()"
  summary: "Creates a <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobLeaseAsyncClient\"></xref> based on the configurations set in the builder."
  syntax: "public BlobLeaseAsyncClient buildAsyncClient()"
  desc: "Creates a <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobLeaseAsyncClient\"></xref> based on the configurations set in the builder."
  returns:
    description: "a <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobLeaseAsyncClient\"></xref> based on the configurations in this builder."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobLeaseAsyncClient?alt=com.azure.storage.blob.specialized.BlobLeaseAsyncClient&text=BlobLeaseAsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.buildClient()"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.buildClient()"
  name: "buildClient()"
  nameWithType: "BlobLeaseClientBuilder.buildClient()"
  summary: "Creates a <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobLeaseClient\"></xref> based on the configurations set in the builder."
  syntax: "public BlobLeaseClient buildClient()"
  desc: "Creates a <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobLeaseClient\"></xref> based on the configurations set in the builder."
  returns:
    description: "a <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobLeaseClient\"></xref> based on the configurations in this builder."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobLeaseClient?alt=com.azure.storage.blob.specialized.BlobLeaseClient&text=BlobLeaseClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.containerAsyncClient(com.azure.storage.blob.BlobContainerAsyncClient)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.containerAsyncClient(BlobContainerAsyncClient blobContainerAsyncClient)"
  name: "containerAsyncClient(BlobContainerAsyncClient blobContainerAsyncClient)"
  nameWithType: "BlobLeaseClientBuilder.containerAsyncClient(BlobContainerAsyncClient blobContainerAsyncClient)"
  summary: "Configures the builder based on the passed <xref uid=\"com.azure.storage.blob.BlobContainerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerAsyncClient\"></xref>."
  parameters:
  - description: "ContainerAsyncClient used to configure the builder."
    name: "blobContainerAsyncClient"
    type: "<xref href=\"com.azure.storage.blob.BlobContainerAsyncClient?alt=com.azure.storage.blob.BlobContainerAsyncClient&text=BlobContainerAsyncClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobLeaseClientBuilder containerAsyncClient(BlobContainerAsyncClient blobContainerAsyncClient)"
  desc: "Configures the builder based on the passed <xref uid=\"com.azure.storage.blob.BlobContainerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerAsyncClient\"></xref>. This will set the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"URL\"></xref> that are used to interact with the service."
  returns:
    description: "the updated BlobLeaseClientBuilder object"
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobLeaseClientBuilder?alt=com.azure.storage.blob.specialized.BlobLeaseClientBuilder&text=BlobLeaseClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.containerClient(com.azure.storage.blob.BlobContainerClient)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.containerClient(BlobContainerClient blobContainerClient)"
  name: "containerClient(BlobContainerClient blobContainerClient)"
  nameWithType: "BlobLeaseClientBuilder.containerClient(BlobContainerClient blobContainerClient)"
  summary: "Configures the builder based on the passed <xref uid=\"com.azure.storage.blob.BlobContainerClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerClient\"></xref>."
  parameters:
  - description: "ContainerClient used to configure the builder."
    name: "blobContainerClient"
    type: "<xref href=\"com.azure.storage.blob.BlobContainerClient?alt=com.azure.storage.blob.BlobContainerClient&text=BlobContainerClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobLeaseClientBuilder containerClient(BlobContainerClient blobContainerClient)"
  desc: "Configures the builder based on the passed <xref uid=\"com.azure.storage.blob.BlobContainerClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerClient\"></xref>. This will set the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"URL\"></xref> that are used to interact with the service."
  returns:
    description: "the updated BlobLeaseClientBuilder object"
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobLeaseClientBuilder?alt=com.azure.storage.blob.specialized.BlobLeaseClientBuilder&text=BlobLeaseClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.leaseId(java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClientBuilder.leaseId(String leaseId)"
  name: "leaseId(String leaseId)"
  nameWithType: "BlobLeaseClientBuilder.leaseId(String leaseId)"
  summary: "Sets the identifier for the lease."
  parameters:
  - description: "Identifier for the lease."
    name: "leaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobLeaseClientBuilder leaseId(String leaseId)"
  desc: "Sets the identifier for the lease.\n\nIf a lease ID isn't set then a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UUID\"></xref> will be used."
  returns:
    description: "the updated BlobLeaseClientBuilder object"
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobLeaseClientBuilder?alt=com.azure.storage.blob.specialized.BlobLeaseClientBuilder&text=BlobLeaseClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This class provides a fluent builder API to help aid the configuration and instantiation of Storage Lease clients. Lease clients are able to interact with both container and blob clients and act as a supplement client. A new instance of <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobLeaseClient\"></xref> and <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobLeaseAsyncClient\"></xref> are constructed every time <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildClient\"></xref> and <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildAsyncClient\"></xref> are called respectively.\n\nWhen a client is instantiated and a <xref uid=\"com.azure.storage.blob.specialized.BlobLeaseClientBuilder.leaseId(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"leaseId\"></xref> hasn't been set a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UUID\"></xref> will be used as the lease identifier.\n\n**Instantiating LeaseClients**\n\n```java\nBlobLeaseClient blobLeaseClient = new BlobLeaseClientBuilder()\n     .blobClient(blobClient)\n     .leaseId(leaseId)\n     .buildClient();\n```\n\n```java\nBlobLeaseClient blobLeaseClient = new BlobLeaseClientBuilder()\n     .containerClient(blobContainerClient)\n     .leaseId(leaseId)\n     .buildClient();\n```\n\n**Instantiating LeaseAsyncClients**\n\n```java\nBlobLeaseAsyncClient blobLeaseAsyncClient = new BlobLeaseClientBuilder()\n     .blobAsyncClient(blobAsyncClient)\n     .leaseId(leaseId)\n     .buildAsyncClient();\n```\n\n```java\nBlobLeaseAsyncClient blobLeaseAsyncClient = new BlobLeaseClientBuilder()\n     .containerAsyncClient(blobContainerAsyncClient)\n     .leaseId(leaseId)\n     .buildAsyncClient();\n```"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.19.0
