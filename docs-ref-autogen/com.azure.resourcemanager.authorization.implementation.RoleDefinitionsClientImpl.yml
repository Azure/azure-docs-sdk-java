### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  id: RoleDefinitionsClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation
  children:
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.get(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getById(java.lang.String)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.list(java.lang.String)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync(java.lang.String,java.lang.String)
  langs:
  - java
  name: RoleDefinitionsClientImpl
  nameWithType: RoleDefinitionsClientImpl
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  type: Class
  package: com.azure.resourcemanager.authorization.implementation
  summary: An instance of this class provides access to all the operations defined in RoleDefinitionsClient.
  syntax:
    content: public final class RoleDefinitionsClientImpl implements InnerSupportsDelete<RoleDefinitionInner>, RoleDefinitionsClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
  - com.azure.resourcemanager.authorization.fluent.RoleDefinitionsClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.RoleDefinitionsClientImpl(com.azure.resourcemanager.authorization.implementation.AuthorizationManagementClientImpl)
  id: RoleDefinitionsClientImpl(com.azure.resourcemanager.authorization.implementation.AuthorizationManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: RoleDefinitionsClientImpl(AuthorizationManagementClientImpl client)
  nameWithType: RoleDefinitionsClientImpl.RoleDefinitionsClientImpl(AuthorizationManagementClientImpl client)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.RoleDefinitionsClientImpl(AuthorizationManagementClientImpl client)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.RoleDefinitionsClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.authorization.implementation
  summary: Initializes an instance of RoleDefinitionsClientImpl.
  syntax:
    content: " RoleDefinitionsClientImpl(AuthorizationManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.authorization.implementation.AuthorizationManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: createOrUpdate(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition)
  nameWithType: RoleDefinitionsClientImpl.createOrUpdate(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdate(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Creates or updates a role definition.
  syntax:
    content: public RoleDefinitionInner createOrUpdate(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: roleDefinitionId
      type: java.lang.String
      description: The ID of the role definition.
    - id: roleDefinition
      type: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
      description: Role definition.
    return:
      type: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
      description: role definition.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: createOrUpdateAsync(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition)
  nameWithType: RoleDefinitionsClientImpl.createOrUpdateAsync(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateAsync(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Creates or updates a role definition.
  syntax:
    content: public Mono<RoleDefinitionInner> createOrUpdateAsync(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: roleDefinitionId
      type: java.lang.String
      description: The ID of the role definition.
    - id: roleDefinition
      type: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
      description: Role definition.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
      description: role definition.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner,com.azure.core.util.Context)
  id: createOrUpdateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: createOrUpdateWithResponse(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition, Context context)
  nameWithType: RoleDefinitionsClientImpl.createOrUpdateWithResponse(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition, Context context)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateWithResponse(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition, Context context)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Creates or updates a role definition.
  syntax:
    content: public Response<RoleDefinitionInner> createOrUpdateWithResponse(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: roleDefinitionId
      type: java.lang.String
      description: The ID of the role definition.
    - id: roleDefinition
      type: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
      description: Role definition.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
      description: role definition.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition)
  nameWithType: RoleDefinitionsClientImpl.createOrUpdateWithResponseAsync(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateWithResponseAsync(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Creates or updates a role definition.
  syntax:
    content: public Mono<Response<RoleDefinitionInner>> createOrUpdateWithResponseAsync(String scope, String roleDefinitionId, RoleDefinitionInner roleDefinition)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: roleDefinitionId
      type: java.lang.String
      description: The ID of the role definition.
    - id: roleDefinition
      type: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
      description: Role definition.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>>
      description: role definition.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: delete(String scope, String roleDefinitionId)
  nameWithType: RoleDefinitionsClientImpl.delete(String scope, String roleDefinitionId)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.delete(String scope, String roleDefinitionId)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Deletes a role definition.
  syntax:
    content: public RoleDefinitionInner delete(String scope, String roleDefinitionId)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: roleDefinitionId
      type: java.lang.String
      description: The ID of the role definition to delete.
    return:
      type: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
      description: role definition.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: deleteAsync(String scope, String roleDefinitionId)
  nameWithType: RoleDefinitionsClientImpl.deleteAsync(String scope, String roleDefinitionId)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteAsync(String scope, String roleDefinitionId)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Deletes a role definition.
  syntax:
    content: public Mono<RoleDefinitionInner> deleteAsync(String scope, String roleDefinitionId)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: roleDefinitionId
      type: java.lang.String
      description: The ID of the role definition to delete.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
      description: role definition.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: deleteWithResponse(String scope, String roleDefinitionId, Context context)
  nameWithType: RoleDefinitionsClientImpl.deleteWithResponse(String scope, String roleDefinitionId, Context context)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteWithResponse(String scope, String roleDefinitionId, Context context)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Deletes a role definition.
  syntax:
    content: public Response<RoleDefinitionInner> deleteWithResponse(String scope, String roleDefinitionId, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: roleDefinitionId
      type: java.lang.String
      description: The ID of the role definition to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
      description: role definition.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String scope, String roleDefinitionId)
  nameWithType: RoleDefinitionsClientImpl.deleteWithResponseAsync(String scope, String roleDefinitionId)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteWithResponseAsync(String scope, String roleDefinitionId)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Deletes a role definition.
  syntax:
    content: public Mono<Response<RoleDefinitionInner>> deleteWithResponseAsync(String scope, String roleDefinitionId)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: roleDefinitionId
      type: java.lang.String
      description: The ID of the role definition to delete.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>>
      description: role definition.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.get(java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: get(String scope, String roleDefinitionId)
  nameWithType: RoleDefinitionsClientImpl.get(String scope, String roleDefinitionId)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.get(String scope, String roleDefinitionId)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.get*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Get role definition by name (GUID).
  syntax:
    content: public RoleDefinitionInner get(String scope, String roleDefinitionId)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: roleDefinitionId
      type: java.lang.String
      description: The ID of the role definition.
    return:
      type: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
      description: role definition by name (GUID).
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getAsync(java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: getAsync(String scope, String roleDefinitionId)
  nameWithType: RoleDefinitionsClientImpl.getAsync(String scope, String roleDefinitionId)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getAsync(String scope, String roleDefinitionId)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Get role definition by name (GUID).
  syntax:
    content: public Mono<RoleDefinitionInner> getAsync(String scope, String roleDefinitionId)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: roleDefinitionId
      type: java.lang.String
      description: The ID of the role definition.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
      description: role definition by name (GUID).
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getById(java.lang.String)
  id: getById(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: getById(String roleId)
  nameWithType: RoleDefinitionsClientImpl.getById(String roleId)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getById(String roleId)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getById*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Gets a role definition by ID.
  syntax:
    content: public RoleDefinitionInner getById(String roleId)
    parameters:
    - id: roleId
      type: java.lang.String
      description: >-
        The fully qualified role definition ID. Use the format,
             /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for subscription
             level role definitions, or /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for tenant
             level role definitions.
    return:
      type: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
      description: a role definition by ID.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdAsync(java.lang.String)
  id: getByIdAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: getByIdAsync(String roleId)
  nameWithType: RoleDefinitionsClientImpl.getByIdAsync(String roleId)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdAsync(String roleId)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Gets a role definition by ID.
  syntax:
    content: public Mono<RoleDefinitionInner> getByIdAsync(String roleId)
    parameters:
    - id: roleId
      type: java.lang.String
      description: >-
        The fully qualified role definition ID. Use the format,
             /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for subscription
             level role definitions, or /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for tenant
             level role definitions.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
      description: a role definition by ID.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getByIdWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: getByIdWithResponse(String roleId, Context context)
  nameWithType: RoleDefinitionsClientImpl.getByIdWithResponse(String roleId, Context context)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdWithResponse(String roleId, Context context)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Gets a role definition by ID.
  syntax:
    content: public Response<RoleDefinitionInner> getByIdWithResponse(String roleId, Context context)
    parameters:
    - id: roleId
      type: java.lang.String
      description: >-
        The fully qualified role definition ID. Use the format,
             /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for subscription
             level role definitions, or /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for tenant
             level role definitions.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
      description: a role definition by ID.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdWithResponseAsync(java.lang.String)
  id: getByIdWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: getByIdWithResponseAsync(String roleId)
  nameWithType: RoleDefinitionsClientImpl.getByIdWithResponseAsync(String roleId)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdWithResponseAsync(String roleId)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Gets a role definition by ID.
  syntax:
    content: public Mono<Response<RoleDefinitionInner>> getByIdWithResponseAsync(String roleId)
    parameters:
    - id: roleId
      type: java.lang.String
      description: >-
        The fully qualified role definition ID. Use the format,
             /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for subscription
             level role definitions, or /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for tenant
             level role definitions.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>>
      description: a role definition by ID.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: getWithResponse(String scope, String roleDefinitionId, Context context)
  nameWithType: RoleDefinitionsClientImpl.getWithResponse(String scope, String roleDefinitionId, Context context)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getWithResponse(String scope, String roleDefinitionId, Context context)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Get role definition by name (GUID).
  syntax:
    content: public Response<RoleDefinitionInner> getWithResponse(String scope, String roleDefinitionId, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: roleDefinitionId
      type: java.lang.String
      description: The ID of the role definition.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
      description: role definition by name (GUID).
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getWithResponseAsync(java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: getWithResponseAsync(String scope, String roleDefinitionId)
  nameWithType: RoleDefinitionsClientImpl.getWithResponseAsync(String scope, String roleDefinitionId)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getWithResponseAsync(String scope, String roleDefinitionId)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Get role definition by name (GUID).
  syntax:
    content: public Mono<Response<RoleDefinitionInner>> getWithResponseAsync(String scope, String roleDefinitionId)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: roleDefinitionId
      type: java.lang.String
      description: The ID of the role definition.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>>
      description: role definition by name (GUID).
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.list(java.lang.String)
  id: list(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: list(String scope)
  nameWithType: RoleDefinitionsClientImpl.list(String scope)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.list(String scope)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Get all role definitions that are applicable at scope and above.
  syntax:
    content: public PagedIterable<RoleDefinitionInner> list(String scope)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
      description: all role definitions that are applicable at scope and above.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: list(String scope, String filter, Context context)
  nameWithType: RoleDefinitionsClientImpl.list(String scope, String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.list(String scope, String filter, Context context)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Get all role definitions that are applicable at scope and above.
  syntax:
    content: public PagedIterable<RoleDefinitionInner> list(String scope, String filter, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as
             well.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
      description: all role definitions that are applicable at scope and above.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync(java.lang.String)
  id: listAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: listAsync(String scope)
  nameWithType: RoleDefinitionsClientImpl.listAsync(String scope)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync(String scope)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Get all role definitions that are applicable at scope and above.
  syntax:
    content: public PagedFlux<RoleDefinitionInner> listAsync(String scope)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
      description: all role definitions that are applicable at scope and above.
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync(java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl
  langs:
  - java
  name: listAsync(String scope, String filter)
  nameWithType: RoleDefinitionsClientImpl.listAsync(String scope, String filter)
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync(String scope, String filter)
  overload: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.implementation
  summary: Get all role definitions that are applicable at scope and above.
  syntax:
    content: public PagedFlux<RoleDefinitionInner> listAsync(String scope, String filter)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role definition.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as
             well.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
      description: all role definitions that are applicable at scope and above.
references:
- uid: com.azure.resourcemanager.authorization.implementation.AuthorizationManagementClientImpl
  name: AuthorizationManagementClientImpl
  nameWithType: AuthorizationManagementClientImpl
  fullName: com.azure.resourcemanager.authorization.implementation.AuthorizationManagementClientImpl
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.RoleDefinitionsClientImpl*
  name: RoleDefinitionsClientImpl
  nameWithType: RoleDefinitionsClientImpl.RoleDefinitionsClientImpl
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.RoleDefinitionsClientImpl
  package: com.azure.resourcemanager.authorization.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
    name: RoleDefinitionInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: RoleDefinitionsClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.authorization.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
    name: RoleDefinitionInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: RoleDefinitionsClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteAsync
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
  name: RoleDefinitionInner
  nameWithType: RoleDefinitionInner
  fullName: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.delete*
  name: delete
  nameWithType: RoleDefinitionsClientImpl.delete
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.delete
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
    name: RoleDefinitionInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: RoleDefinitionsClientImpl.deleteWithResponse
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.deleteWithResponse
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: RoleDefinitionsClientImpl.getWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getWithResponseAsync
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getAsync*
  name: getAsync
  nameWithType: RoleDefinitionsClientImpl.getAsync
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getAsync
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.get*
  name: get
  nameWithType: RoleDefinitionsClientImpl.get
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.get
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getWithResponse*
  name: getWithResponse
  nameWithType: RoleDefinitionsClientImpl.getWithResponse
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getWithResponse
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: RoleDefinitionsClientImpl.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: RoleDefinitionsClientImpl.createOrUpdateAsync
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateAsync
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdate*
  name: createOrUpdate
  nameWithType: RoleDefinitionsClientImpl.createOrUpdate
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdate
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateWithResponse*
  name: createOrUpdateWithResponse
  nameWithType: RoleDefinitionsClientImpl.createOrUpdateWithResponse
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.createOrUpdateWithResponse
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
    name: RoleDefinitionInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync*
  name: listAsync
  nameWithType: RoleDefinitionsClientImpl.listAsync
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
    name: RoleDefinitionInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.list*
  name: list
  nameWithType: RoleDefinitionsClientImpl.list
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.list
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdWithResponseAsync*
  name: getByIdWithResponseAsync
  nameWithType: RoleDefinitionsClientImpl.getByIdWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdWithResponseAsync
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdAsync*
  name: getByIdAsync
  nameWithType: RoleDefinitionsClientImpl.getByIdAsync
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdAsync
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getById*
  name: getById
  nameWithType: RoleDefinitionsClientImpl.getById
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getById
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdWithResponse*
  name: getByIdWithResponse
  nameWithType: RoleDefinitionsClientImpl.getByIdWithResponse
  fullName: com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.getByIdWithResponse
  package: com.azure.resourcemanager.authorization.implementation
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
  name: InnerSupportsDelete<RoleDefinitionInner>
  nameWithType: InnerSupportsDelete<RoleDefinitionInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner>
- uid: com.azure.resourcemanager.authorization.fluent.RoleDefinitionsClient
  name: RoleDefinitionsClient
  nameWithType: RoleDefinitionsClient
  fullName: com.azure.resourcemanager.authorization.fluent.RoleDefinitionsClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
