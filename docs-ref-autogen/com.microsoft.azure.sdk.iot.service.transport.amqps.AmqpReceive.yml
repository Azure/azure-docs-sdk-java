### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive
  id: AmqpReceive
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  children:
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive(String,String,String,IotHubServiceClientProtocol)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive(String,String,String,IotHubServiceClientProtocol,ProxyOptions)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.close()
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.onFeedbackReceived(String)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.open()
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.receive(long)
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.yml
  langs:
  - java
  name: AmqpReceive
  nameWithType: AmqpReceive
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 21
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Instance of the QPID-Proton-J BaseHandler class overriding the events what are needed to handle high level open, close methods and feedback received event. </p>"
  syntax:
    content: public class AmqpReceive implements AmqpFeedbackReceivedEvent
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive(String,String,String,IotHubServiceClientProtocol)
  id: AmqpReceive(String,String,String,IotHubServiceClientProtocol)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.yml
  langs:
  - java
  name: AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: AmqpReceive.AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 38
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Constructor to set up connection parameters </p>"
  syntax:
    content: public AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
    parameters:
    - id: hostName
      type: "26831127"
      description: '<p>The address string of the service (example: AAA.BBB.CCC) </p>'
    - id: userName
      type: "26831127"
      description: '<p>The username string to use SASL authentication (example: <a href="mailto:user@sas.service">user@sas.service</a>) </p>'
    - id: sasToken
      type: "26831127"
      description: <p>The SAS token string </p>
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: <p>protocol to use </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive(String,String,String,IotHubServiceClientProtocol,ProxyOptions)
  id: AmqpReceive(String,String,String,IotHubServiceClientProtocol,ProxyOptions)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.yml
  langs:
  - java
  name: AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
  nameWithType: AmqpReceive.AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 51
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Constructor to set up connection parameters </p>"
  syntax:
    content: public AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
    parameters:
    - id: hostName
      type: "26831127"
      description: '<p>The address string of the service (example: AAA.BBB.CCC) </p>'
    - id: userName
      type: "26831127"
      description: '<p>The username string to use SASL authentication (example: <a href="mailto:user@sas.service">user@sas.service</a>) </p>'
    - id: sasToken
      type: "26831127"
      description: <p>The SAS token string </p>
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: <p>protocol to use </p>
    - id: proxyOptions
      type: com.microsoft.azure.sdk.iot.service.ProxyOptions
      description: <p>the proxy options to tunnel through, if a proxy should be used. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.yml
  langs:
  - java
  name: close()
  nameWithType: AmqpReceive.close()
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.close()
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.close*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 72
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Invalidate AmqpsReceiveHandler member variable </p>"
  syntax:
    content: public void close()
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.onFeedbackReceived(String)
  id: onFeedbackReceived(String)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.yml
  langs:
  - java
  name: onFeedbackReceived(String feedbackJson)
  nameWithType: AmqpReceive.onFeedbackReceived(String feedbackJson)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.onFeedbackReceived(String feedbackJson)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.onFeedbackReceived*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 113
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Handle on feedback received Proton event Parse received json and save result to a member variable Release semaphore for wait function </p>"
  syntax:
    content: public void onFeedbackReceived(String feedbackJson)
    parameters:
    - id: feedbackJson
      type: "26831127"
      description: <p>Received Json string to process </p>
  overridden: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent.onFeedbackReceived(String)
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.yml
  langs:
  - java
  name: open()
  nameWithType: AmqpReceive.open()
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.open()
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.open*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 64
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Create AmqpsReceiveHandler and store it in a member variable </p>"
  syntax:
    content: public void open()
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.receive(long)
  id: receive(long)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.yml
  langs:
  - java
  name: receive(long timeoutMs)
  nameWithType: AmqpReceive.receive(long timeoutMs)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.receive(long timeoutMs)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.receive*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 85
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Synchronized call to receive feedback batch Hide the event based receiving mechanism from the user API </p>"
  syntax:
    content: public synchronized FeedbackBatch receive(long timeoutMs)
    parameters:
    - id: timeoutMs
      type: 0364520f
      description: <p>The timeout in milliseconds to wait for the feedback </p>
    return:
      type: cffad4f2com.microsoft.azure.sdk.iot.service.FeedbackBatch
      description: <p>The received feedback batch </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the input AmqpReceive object is null </p>
  - type: 8256ba40
    description: <p>This exception is thrown if the receive process has been interrupted </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive*
  name: AmqpReceive
  nameWithType: AmqpReceive.AmqpReceive
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.open*
  name: open
  nameWithType: AmqpReceive.open
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.open
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.close*
  name: close
  nameWithType: AmqpReceive.close
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.close
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 8256ba40
  spec.java:
  - name: InterruptedException
    fullName: InterruptedException
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: cffad4f2com.microsoft.azure.sdk.iot.service.FeedbackBatch
  spec.java:
  - name: 'synchronized '
    fullName: 'synchronized '
  - uid: com.microsoft.azure.sdk.iot.service.FeedbackBatch
    name: FeedbackBatch
    fullName: com.microsoft.azure.sdk.iot.service.FeedbackBatch
    href: com.microsoft.azure.sdk.iot.service.FeedbackBatch.yml
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.receive*
  name: receive
  nameWithType: AmqpReceive.receive
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.receive
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.onFeedbackReceived*
  name: onFeedbackReceived
  nameWithType: AmqpReceive.onFeedbackReceived
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.onFeedbackReceived
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent.yml
  name: AmqpFeedbackReceivedEvent
  nameWithType: AmqpFeedbackReceivedEvent
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent
  type: Interface
  syntax:
    content: public interface AmqpFeedbackReceivedEvent
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.yml
  name: AmqpFeedbackReceivedHandler
  nameWithType: AmqpFeedbackReceivedHandler
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler
  type: Class
  summary: "<p>Instance of the QPID-Proton-J BaseHandler class to override the events what are needed to handle the receive operation Contains and sets connection parameters (path, port, endpoint) Maintains the layers of AMQP protocol (Link, Session, Connection, Transport) Creates and sets SASL authentication for transport </p>"
  syntax:
    content: public class AmqpFeedbackReceivedHandler extends AmqpConnectionHandler
- uid: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol.yml
  name: IotHubServiceClientProtocol
  nameWithType: IotHubServiceClientProtocol
  fullName: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
  type: Enum
  summary: "<p>The application-layer protocol used by the service client to communicate with an IoT Hub. </p>"
  syntax:
    content: public enum IotHubServiceClientProtocol
- uid: com.microsoft.azure.sdk.iot.service.FeedbackBatch
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.FeedbackBatch.yml
  name: FeedbackBatch
  nameWithType: FeedbackBatch
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackBatch
  type: Class
  summary: "<p>Data structure for feedback messages received in Json array Provide getters and setters for batch properties and messages </p>"
  syntax:
    content: public class FeedbackBatch
- uid: com.microsoft.azure.sdk.iot.service.ProxyOptions
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.ProxyOptions.yml
  name: ProxyOptions
  nameWithType: ProxyOptions
  fullName: com.microsoft.azure.sdk.iot.service.ProxyOptions
  type: Class
  summary: "<p>The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK, but only if the proxy does not require authentication. </p>"
  syntax:
    content: public class ProxyOptions
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent.onFeedbackReceived(String)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent.yml
  name: onFeedbackReceived(String feedbackJson)
  nameWithType: AmqpFeedbackReceivedEvent.onFeedbackReceived(String feedbackJson)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent.onFeedbackReceived(String feedbackJson)
  type: Method
  syntax:
    content: public void onFeedbackReceived(String feedbackJson)
    parameters:
    - id: feedbackJson
      type: "26831127"
