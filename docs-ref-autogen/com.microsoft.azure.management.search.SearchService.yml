### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.search.SearchService
  id: SearchService
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search
  children:
  - com.microsoft.azure.management.search.SearchService.Definition
  - com.microsoft.azure.management.search.SearchService.DefinitionStages
  - com.microsoft.azure.management.search.SearchService.Update
  - com.microsoft.azure.management.search.SearchService.UpdateStages
  - com.microsoft.azure.management.search.SearchService.createQueryKey(java.lang.String)
  - com.microsoft.azure.management.search.SearchService.createQueryKeyAsync(java.lang.String)
  - com.microsoft.azure.management.search.SearchService.deleteQueryKey(java.lang.String)
  - com.microsoft.azure.management.search.SearchService.deleteQueryKeyAsync(java.lang.String)
  - com.microsoft.azure.management.search.SearchService.getAdminKeys()
  - com.microsoft.azure.management.search.SearchService.getAdminKeysAsync()
  - com.microsoft.azure.management.search.SearchService.hostingMode()
  - com.microsoft.azure.management.search.SearchService.listQueryKeys()
  - com.microsoft.azure.management.search.SearchService.listQueryKeysAsync()
  - com.microsoft.azure.management.search.SearchService.partitionCount()
  - com.microsoft.azure.management.search.SearchService.provisioningState()
  - com.microsoft.azure.management.search.SearchService.regenerateAdminKeys(com.microsoft.azure.management.search.AdminKeyKind)
  - com.microsoft.azure.management.search.SearchService.regenerateAdminKeysAsync(com.microsoft.azure.management.search.AdminKeyKind)
  - com.microsoft.azure.management.search.SearchService.replicaCount()
  - com.microsoft.azure.management.search.SearchService.sku()
  - com.microsoft.azure.management.search.SearchService.status()
  - com.microsoft.azure.management.search.SearchService.statusDetails()
  langs:
  - java
  name: SearchService
  nameWithType: SearchService
  fullName: com.microsoft.azure.management.search.SearchService
  type: Interface
  package: com.microsoft.azure.management.search
  summary: An immutable client-side representation of an Azure registry.
  syntax:
    content: public interface SearchService extends GroupableResource<SearchServiceManager,SearchServiceInner>, Refreshable<SearchService>, Updatable<SearchService.Update>
  implements:
  - com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource<com.microsoft.azure.management.search.implementation.SearchServiceManager,com.microsoft.azure.management.search.implementation.SearchServiceInner>
  - com.microsoft.azure.management.resources.fluentcore.model.Refreshable<com.microsoft.azure.management.search.SearchService>
  - com.microsoft.azure.management.resources.fluentcore.model.Updatable<com.microsoft.azure.management.search.SearchService.Update>
- uid: com.microsoft.azure.management.search.SearchService.createQueryKey(java.lang.String)
  id: createQueryKey(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: createQueryKey(String name)
  nameWithType: SearchService.createQueryKey(String name)
  fullName: com.microsoft.azure.management.search.SearchService.createQueryKey(String name)
  overload: com.microsoft.azure.management.search.SearchService.createQueryKey*
  type: Method
  package: com.microsoft.azure.management.search
  summary: >-
    Regenerates either the primary or secondary admin API key.


    You can only regenerate one key at a time.
  syntax:
    content: public abstract QueryKey createQueryKey(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The name of the new query API key.
    return:
      type: com.microsoft.azure.management.search.QueryKey
      description: the &lt;QueryKey&gt; object if successful
- uid: com.microsoft.azure.management.search.SearchService.createQueryKeyAsync(java.lang.String)
  id: createQueryKeyAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: createQueryKeyAsync(String name)
  nameWithType: SearchService.createQueryKeyAsync(String name)
  fullName: com.microsoft.azure.management.search.SearchService.createQueryKeyAsync(String name)
  overload: com.microsoft.azure.management.search.SearchService.createQueryKeyAsync*
  type: Method
  package: com.microsoft.azure.management.search
  summary: >-
    Regenerates either the primary or secondary admin API key.


    You can only regenerate one key at a time.
  syntax:
    content: public abstract Observable<QueryKey> createQueryKeyAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The name of the new query API key.
    return:
      type: rx.Observable<com.microsoft.azure.management.search.QueryKey>
      description: a representation of the future computation of this call
- uid: com.microsoft.azure.management.search.SearchService.deleteQueryKey(java.lang.String)
  id: deleteQueryKey(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: deleteQueryKey(String key)
  nameWithType: SearchService.deleteQueryKey(String key)
  fullName: com.microsoft.azure.management.search.SearchService.deleteQueryKey(String key)
  overload: com.microsoft.azure.management.search.SearchService.deleteQueryKey*
  type: Method
  package: com.microsoft.azure.management.search
  summary: >-
    Deletes the specified query key.


    Unlike admin keys, query keys are not regenerated. The process for regenerating a query key is to delete and then recreate it.
  syntax:
    content: public abstract void deleteQueryKey(String key)
    parameters:
    - id: key
      type: java.lang.String
      description: The query key to be deleted. Query keys are identified by value, not by name.
- uid: com.microsoft.azure.management.search.SearchService.deleteQueryKeyAsync(java.lang.String)
  id: deleteQueryKeyAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: deleteQueryKeyAsync(String key)
  nameWithType: SearchService.deleteQueryKeyAsync(String key)
  fullName: com.microsoft.azure.management.search.SearchService.deleteQueryKeyAsync(String key)
  overload: com.microsoft.azure.management.search.SearchService.deleteQueryKeyAsync*
  type: Method
  package: com.microsoft.azure.management.search
  summary: >-
    Deletes the specified query key.


    Unlike admin keys, query keys are not regenerated. The process for regenerating a query key is to delete and then recreate it.
  syntax:
    content: public abstract Completable deleteQueryKeyAsync(String key)
    parameters:
    - id: key
      type: java.lang.String
      description: The query key to be deleted. Query keys are identified by value, not by name.
    return:
      type: rx.Completable
      description: a representation of the future computation of this call
- uid: com.microsoft.azure.management.search.SearchService.getAdminKeys()
  id: getAdminKeys()
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: getAdminKeys()
  nameWithType: SearchService.getAdminKeys()
  fullName: com.microsoft.azure.management.search.SearchService.getAdminKeys()
  overload: com.microsoft.azure.management.search.SearchService.getAdminKeys*
  type: Method
  package: com.microsoft.azure.management.search
  summary: The primary and secondary admin API keys for the specified Azure Search service.
  syntax:
    content: public abstract AdminKeys getAdminKeys()
    return:
      type: com.microsoft.azure.management.search.AdminKeys
      description: the AdminKeys object if successful
- uid: com.microsoft.azure.management.search.SearchService.getAdminKeysAsync()
  id: getAdminKeysAsync()
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: getAdminKeysAsync()
  nameWithType: SearchService.getAdminKeysAsync()
  fullName: com.microsoft.azure.management.search.SearchService.getAdminKeysAsync()
  overload: com.microsoft.azure.management.search.SearchService.getAdminKeysAsync*
  type: Method
  package: com.microsoft.azure.management.search
  summary: The primary and secondary admin API keys for the specified Azure Search service.
  syntax:
    content: public abstract Observable<AdminKeys> getAdminKeysAsync()
    return:
      type: rx.Observable<com.microsoft.azure.management.search.AdminKeys>
      description: a representation of the future computation of this call
- uid: com.microsoft.azure.management.search.SearchService.hostingMode()
  id: hostingMode()
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: hostingMode()
  nameWithType: SearchService.hostingMode()
  fullName: com.microsoft.azure.management.search.SearchService.hostingMode()
  overload: com.microsoft.azure.management.search.SearchService.hostingMode*
  type: Method
  package: com.microsoft.azure.management.search
  summary: >-
    The hosting mode value.


    Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
  syntax:
    content: public abstract HostingMode hostingMode()
    return:
      type: com.microsoft.azure.management.search.HostingMode
      description: the hosting mode value.
- uid: com.microsoft.azure.management.search.SearchService.listQueryKeys()
  id: listQueryKeys()
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: listQueryKeys()
  nameWithType: SearchService.listQueryKeys()
  fullName: com.microsoft.azure.management.search.SearchService.listQueryKeys()
  overload: com.microsoft.azure.management.search.SearchService.listQueryKeys*
  type: Method
  package: com.microsoft.azure.management.search
  summary: Returns the list of query API keys for the given Azure Search service.
  syntax:
    content: public abstract List<QueryKey> listQueryKeys()
    return:
      type: java.util.List<com.microsoft.azure.management.search.QueryKey>
      description: the List&lt;QueryKey&gt; object if successful
- uid: com.microsoft.azure.management.search.SearchService.listQueryKeysAsync()
  id: listQueryKeysAsync()
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: listQueryKeysAsync()
  nameWithType: SearchService.listQueryKeysAsync()
  fullName: com.microsoft.azure.management.search.SearchService.listQueryKeysAsync()
  overload: com.microsoft.azure.management.search.SearchService.listQueryKeysAsync*
  type: Method
  package: com.microsoft.azure.management.search
  summary: Returns the list of query API keys for the given Azure Search service.
  syntax:
    content: public abstract Observable<QueryKey> listQueryKeysAsync()
    return:
      type: rx.Observable<com.microsoft.azure.management.search.QueryKey>
      description: the observable to the List&lt;QueryKey&gt; object
- uid: com.microsoft.azure.management.search.SearchService.partitionCount()
  id: partitionCount()
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: partitionCount()
  nameWithType: SearchService.partitionCount()
  fullName: com.microsoft.azure.management.search.SearchService.partitionCount()
  overload: com.microsoft.azure.management.search.SearchService.partitionCount*
  type: Method
  package: com.microsoft.azure.management.search
  syntax:
    content: public abstract int partitionCount()
    return:
      type: int
      description: the number of partitions used by the service
- uid: com.microsoft.azure.management.search.SearchService.provisioningState()
  id: provisioningState()
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: provisioningState()
  nameWithType: SearchService.provisioningState()
  fullName: com.microsoft.azure.management.search.SearchService.provisioningState()
  overload: com.microsoft.azure.management.search.SearchService.provisioningState*
  type: Method
  package: com.microsoft.azure.management.search
  summary: >-
    The state of the last provisioning operation performed on the Search service.


    Provisioning is an intermediate state that occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded' or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free service, this value tends to come back as 'succeeded' directly in the call to Create Search service. This is because the free service uses capacity that is already set up.
  syntax:
    content: public abstract ProvisioningState provisioningState()
    return:
      type: com.microsoft.azure.management.search.ProvisioningState
      description: the provisioning state of the resource
- uid: com.microsoft.azure.management.search.SearchService.regenerateAdminKeys(com.microsoft.azure.management.search.AdminKeyKind)
  id: regenerateAdminKeys(com.microsoft.azure.management.search.AdminKeyKind)
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: regenerateAdminKeys(AdminKeyKind keyKind)
  nameWithType: SearchService.regenerateAdminKeys(AdminKeyKind keyKind)
  fullName: com.microsoft.azure.management.search.SearchService.regenerateAdminKeys(AdminKeyKind keyKind)
  overload: com.microsoft.azure.management.search.SearchService.regenerateAdminKeys*
  type: Method
  package: com.microsoft.azure.management.search
  summary: >-
    Regenerates either the primary or secondary admin API key.


    You can only regenerate one key at a time.
  syntax:
    content: public abstract AdminKeys regenerateAdminKeys(AdminKeyKind keyKind)
    parameters:
    - id: keyKind
      type: com.microsoft.azure.management.search.AdminKeyKind
      description: specifies which key to regenerate
    return:
      type: com.microsoft.azure.management.search.AdminKeys
      description: the AdminKeys object if successful
- uid: com.microsoft.azure.management.search.SearchService.regenerateAdminKeysAsync(com.microsoft.azure.management.search.AdminKeyKind)
  id: regenerateAdminKeysAsync(com.microsoft.azure.management.search.AdminKeyKind)
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: regenerateAdminKeysAsync(AdminKeyKind keyKind)
  nameWithType: SearchService.regenerateAdminKeysAsync(AdminKeyKind keyKind)
  fullName: com.microsoft.azure.management.search.SearchService.regenerateAdminKeysAsync(AdminKeyKind keyKind)
  overload: com.microsoft.azure.management.search.SearchService.regenerateAdminKeysAsync*
  type: Method
  package: com.microsoft.azure.management.search
  summary: Regenerates either the primary or secondary admin API key. You can only regenerate one key at a time.
  syntax:
    content: public abstract Observable<AdminKeys> regenerateAdminKeysAsync(AdminKeyKind keyKind)
    parameters:
    - id: keyKind
      type: com.microsoft.azure.management.search.AdminKeyKind
      description: Specifies which key to regenerate
    return:
      type: rx.Observable<com.microsoft.azure.management.search.AdminKeys>
      description: a representation of the future computation of this call
- uid: com.microsoft.azure.management.search.SearchService.replicaCount()
  id: replicaCount()
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: replicaCount()
  nameWithType: SearchService.replicaCount()
  fullName: com.microsoft.azure.management.search.SearchService.replicaCount()
  overload: com.microsoft.azure.management.search.SearchService.replicaCount*
  type: Method
  package: com.microsoft.azure.management.search
  syntax:
    content: public abstract int replicaCount()
    return:
      type: int
      description: the number of replicas used by the service
- uid: com.microsoft.azure.management.search.SearchService.sku()
  id: sku()
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: sku()
  nameWithType: SearchService.sku()
  fullName: com.microsoft.azure.management.search.SearchService.sku()
  overload: com.microsoft.azure.management.search.SearchService.sku*
  type: Method
  package: com.microsoft.azure.management.search
  syntax:
    content: public abstract Sku sku()
    return:
      type: com.microsoft.azure.management.search.Sku
      description: the SKU type of the service
- uid: com.microsoft.azure.management.search.SearchService.status()
  id: status()
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: status()
  nameWithType: SearchService.status()
  fullName: com.microsoft.azure.management.search.SearchService.status()
  overload: com.microsoft.azure.management.search.SearchService.status*
  type: Method
  package: com.microsoft.azure.management.search
  summary: >-
    The status of the Search service.


    Possible values include: 'running': the Search service is running and no provisioning operations are underway. 'provisioning': the Search service is being provisioned or scaled up or down. 'deleting': the Search service is being deleted. 'degraded': the Search service is degraded. This can occur when the underlying search units are not healthy. The Search service is most likely operational, but performance might be slow and some requests might be dropped. 'disabled': the Search service is disabled. In this state, the service will reject all API requests. 'error': the Search service is in an error state. If your service is in the degraded, disabled, or error states, it means the Azure Search team is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.
  syntax:
    content: public abstract SearchServiceStatus status()
    return:
      type: com.microsoft.azure.management.search.SearchServiceStatus
      description: the status of the service
- uid: com.microsoft.azure.management.search.SearchService.statusDetails()
  id: statusDetails()
  artifact: com.microsoft.azure:azure-mgmt-search:1.36.1
  parent: com.microsoft.azure.management.search.SearchService
  langs:
  - java
  name: statusDetails()
  nameWithType: SearchService.statusDetails()
  fullName: com.microsoft.azure.management.search.SearchService.statusDetails()
  overload: com.microsoft.azure.management.search.SearchService.statusDetails*
  type: Method
  package: com.microsoft.azure.management.search
  syntax:
    content: public abstract String statusDetails()
    return:
      type: java.lang.String
      description: the details of the status.
references:
- uid: com.microsoft.azure.management.search.HostingMode
  name: HostingMode
  nameWithType: HostingMode
  fullName: com.microsoft.azure.management.search.HostingMode
- uid: com.microsoft.azure.management.search.SearchService.hostingMode*
  name: hostingMode
  nameWithType: SearchService.hostingMode
  fullName: com.microsoft.azure.management.search.SearchService.hostingMode
  package: com.microsoft.azure.management.search
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.management.search.SearchService.partitionCount*
  name: partitionCount
  nameWithType: SearchService.partitionCount
  fullName: com.microsoft.azure.management.search.SearchService.partitionCount
  package: com.microsoft.azure.management.search
- uid: com.microsoft.azure.management.search.ProvisioningState
  name: ProvisioningState
  nameWithType: ProvisioningState
  fullName: com.microsoft.azure.management.search.ProvisioningState
- uid: com.microsoft.azure.management.search.SearchService.provisioningState*
  name: provisioningState
  nameWithType: SearchService.provisioningState
  fullName: com.microsoft.azure.management.search.SearchService.provisioningState
  package: com.microsoft.azure.management.search
- uid: com.microsoft.azure.management.search.SearchService.replicaCount*
  name: replicaCount
  nameWithType: SearchService.replicaCount
  fullName: com.microsoft.azure.management.search.SearchService.replicaCount
  package: com.microsoft.azure.management.search
- uid: com.microsoft.azure.management.search.Sku
  name: Sku
  nameWithType: Sku
  fullName: com.microsoft.azure.management.search.Sku
- uid: com.microsoft.azure.management.search.SearchService.sku*
  name: sku
  nameWithType: SearchService.sku
  fullName: com.microsoft.azure.management.search.SearchService.sku
  package: com.microsoft.azure.management.search
- uid: com.microsoft.azure.management.search.SearchServiceStatus
  name: SearchServiceStatus
  nameWithType: SearchServiceStatus
  fullName: com.microsoft.azure.management.search.SearchServiceStatus
- uid: com.microsoft.azure.management.search.SearchService.status*
  name: status
  nameWithType: SearchService.status
  fullName: com.microsoft.azure.management.search.SearchService.status
  package: com.microsoft.azure.management.search
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.search.SearchService.statusDetails*
  name: statusDetails
  nameWithType: SearchService.statusDetails
  fullName: com.microsoft.azure.management.search.SearchService.statusDetails
  package: com.microsoft.azure.management.search
- uid: com.microsoft.azure.management.search.AdminKeys
  name: AdminKeys
  nameWithType: AdminKeys
  fullName: com.microsoft.azure.management.search.AdminKeys
- uid: com.microsoft.azure.management.search.SearchService.getAdminKeys*
  name: getAdminKeys
  nameWithType: SearchService.getAdminKeys
  fullName: com.microsoft.azure.management.search.SearchService.getAdminKeys
  package: com.microsoft.azure.management.search
- uid: rx.Observable<com.microsoft.azure.management.search.AdminKeys>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.search.AdminKeys
    name: AdminKeys
    fullName: com.microsoft.azure.management.search.AdminKeys
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.search.SearchService.getAdminKeysAsync*
  name: getAdminKeysAsync
  nameWithType: SearchService.getAdminKeysAsync
  fullName: com.microsoft.azure.management.search.SearchService.getAdminKeysAsync
  package: com.microsoft.azure.management.search
- uid: java.util.List<com.microsoft.azure.management.search.QueryKey>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.search.QueryKey
    name: QueryKey
    fullName: com.microsoft.azure.management.search.QueryKey
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.search.SearchService.listQueryKeys*
  name: listQueryKeys
  nameWithType: SearchService.listQueryKeys
  fullName: com.microsoft.azure.management.search.SearchService.listQueryKeys
  package: com.microsoft.azure.management.search
- uid: rx.Observable<com.microsoft.azure.management.search.QueryKey>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.search.QueryKey
    name: QueryKey
    fullName: com.microsoft.azure.management.search.QueryKey
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.search.SearchService.listQueryKeysAsync*
  name: listQueryKeysAsync
  nameWithType: SearchService.listQueryKeysAsync
  fullName: com.microsoft.azure.management.search.SearchService.listQueryKeysAsync
  package: com.microsoft.azure.management.search
- uid: com.microsoft.azure.management.search.AdminKeyKind
  name: AdminKeyKind
  nameWithType: AdminKeyKind
  fullName: com.microsoft.azure.management.search.AdminKeyKind
- uid: com.microsoft.azure.management.search.SearchService.regenerateAdminKeys*
  name: regenerateAdminKeys
  nameWithType: SearchService.regenerateAdminKeys
  fullName: com.microsoft.azure.management.search.SearchService.regenerateAdminKeys
  package: com.microsoft.azure.management.search
- uid: com.microsoft.azure.management.search.SearchService.regenerateAdminKeysAsync*
  name: regenerateAdminKeysAsync
  nameWithType: SearchService.regenerateAdminKeysAsync
  fullName: com.microsoft.azure.management.search.SearchService.regenerateAdminKeysAsync
  package: com.microsoft.azure.management.search
- uid: com.microsoft.azure.management.search.QueryKey
  name: QueryKey
  nameWithType: QueryKey
  fullName: com.microsoft.azure.management.search.QueryKey
- uid: com.microsoft.azure.management.search.SearchService.createQueryKey*
  name: createQueryKey
  nameWithType: SearchService.createQueryKey
  fullName: com.microsoft.azure.management.search.SearchService.createQueryKey
  package: com.microsoft.azure.management.search
- uid: com.microsoft.azure.management.search.SearchService.createQueryKeyAsync*
  name: createQueryKeyAsync
  nameWithType: SearchService.createQueryKeyAsync
  fullName: com.microsoft.azure.management.search.SearchService.createQueryKeyAsync
  package: com.microsoft.azure.management.search
- uid: com.microsoft.azure.management.search.SearchService.deleteQueryKey*
  name: deleteQueryKey
  nameWithType: SearchService.deleteQueryKey
  fullName: com.microsoft.azure.management.search.SearchService.deleteQueryKey
  package: com.microsoft.azure.management.search
- uid: rx.Completable
  spec.java:
  - uid: rx.Completable
    name: Completable
    fullName: rx.Completable
- uid: com.microsoft.azure.management.search.SearchService.deleteQueryKeyAsync*
  name: deleteQueryKeyAsync
  nameWithType: SearchService.deleteQueryKeyAsync
  fullName: com.microsoft.azure.management.search.SearchService.deleteQueryKeyAsync
  package: com.microsoft.azure.management.search
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource<com.microsoft.azure.management.search.implementation.SearchServiceManager,com.microsoft.azure.management.search.implementation.SearchServiceInner>
  name: GroupableResource<SearchServiceManager,SearchServiceInner>
  nameWithType: GroupableResource<SearchServiceManager,SearchServiceInner>
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource<com.microsoft.azure.management.search.implementation.SearchServiceManager,com.microsoft.azure.management.search.implementation.SearchServiceInner>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Refreshable<com.microsoft.azure.management.search.SearchService>
  name: Refreshable<SearchService>
  nameWithType: Refreshable<SearchService>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Refreshable<com.microsoft.azure.management.search.SearchService>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Updatable<com.microsoft.azure.management.search.SearchService.Update>
  name: Updatable<SearchService.Update>
  nameWithType: Updatable<SearchService.Update>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Updatable<com.microsoft.azure.management.search.SearchService.Update>
- uid: com.microsoft.azure.management.search.SearchService.Definition
  name: SearchService.Definition
  nameWithType: SearchService.Definition
  fullName: com.microsoft.azure.management.search.SearchService.Definition
- uid: com.microsoft.azure.management.search.SearchService.DefinitionStages
  name: SearchService.DefinitionStages
  nameWithType: SearchService.DefinitionStages
  fullName: com.microsoft.azure.management.search.SearchService.DefinitionStages
- uid: com.microsoft.azure.management.search.SearchService.Update
  name: SearchService.Update
  nameWithType: SearchService.Update
  fullName: com.microsoft.azure.management.search.SearchService.Update
- uid: com.microsoft.azure.management.search.SearchService.UpdateStages
  name: SearchService.UpdateStages
  nameWithType: SearchService.UpdateStages
  fullName: com.microsoft.azure.management.search.SearchService.UpdateStages
- uid: rx.Observable
  name: Observable
  nameWithType: Observable
  fullName: rx.Observable
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.management.search.implementation.SearchServiceManager,com.microsoft.azure.management.search.implementation.SearchServiceInner
  name: SearchServiceManager,SearchServiceInner
  nameWithType: SearchServiceManager,SearchServiceInner
  fullName: com.microsoft.azure.management.search.implementation.SearchServiceManager,com.microsoft.azure.management.search.implementation.SearchServiceInner
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource
  name: GroupableResource
  nameWithType: GroupableResource
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource
- uid: com.microsoft.azure.management.resources.fluentcore.model.Refreshable
  name: Refreshable
  nameWithType: Refreshable
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Refreshable
- uid: com.microsoft.azure.management.resources.fluentcore.model.Updatable
  name: Updatable
  nameWithType: Updatable
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Updatable
