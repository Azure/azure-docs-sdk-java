### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service._individual_enrollment_manager
  id: _individual_enrollment_manager
  parent: com.microsoft.azure.sdk.iot.provisioning.service
  href: com.microsoft.azure.sdk.iot.provisioning.service._individual_enrollment_manager.yml
  langs:
  - java
  name: IndividualEnrollmentManager
  nameWithType: IndividualEnrollmentManager
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.IndividualEnrollmentManager
  type: Class
  source:
    remote:
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/IndividualEnrollmentManager.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/IndividualEnrollmentManager.java
    startLine: 24
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    <p>Individual Enrollment Manager</p>

    <p>This is the inner class that implements the Individual Enrollment APIs. </p>

    <p>For the public API, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client" data-throw-if-not-resolved="false">ProvisioningServiceClient</xref>.</p>

    <p></p>
  syntax: &o0
    content: public class IndividualEnrollmentManager
  inheritance:
  - java.lang.Object
references:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.contract._contract_api_http
  parent: com.microsoft.azure.sdk.iot.provisioning.service.contract
  href: com.microsoft.azure.sdk.iot.provisioning.service.contract._contract_api_http.yml
  name: ContractApiHttp
  nameWithType: ContractApiHttp
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp
  type: Class
  summary: >-
    <p>This client handles the Device Provisioning Service HTTP communication.</p>

    <p>This class implements the HTTPS contract between the Provisioning Service Client and the Device Provisioning Service. It is called by the Managers that implement the Provisioning Service Client public APIs. To access the public APIs, please see the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client" data-throw-if-not-resolved="false">ProvisioningServiceClient</xref>.</p>

    <p>The follow diagram describe the relation between these 3 layers of the Service Client:</p>

    <p>

      <pre>

        <code>          +-------------------------------------------------------------------+           +------------+

                  |                        ProvisioningServiceClient                  |           |    Query   |

                  +-----+----------------------------+--------------------------+-----+           +--+---+-----+

                       /                             |                           \                   |   |

                      /                              |                            \                  |   |

        +------------+----------------+  +-----------+------------+  +-------------+-------------+   |   |

        | IndividualEnrollmentManager |  | EnrollmentGroupManager |  | RegistrationStatusManager |   |   |

        +------------+--------+-------+  +-----------+------+-----+  +-------------+-------+-----+   |   |

                     |         \                     |       \                     |        \        |   |

                     |          +-----------------------------+------------------------------+-------+   |

                     |                               |                             |                     |

        +------------+-------------------------------+-----------------------------+---------------------+---+

        |                                       ContractApiHttp                                              |

        +------------------------------------------------+---------------------------------------------------+

                                                         |

                                                         |

                   +-------------------------------------+------------------------------------------+

                   |                 com.microsoft.azure.sdk.iot.deps.transport.http                |

                   +--------------------------------------------------------------------------------+

        </code>

      </pre>

    </p>
  syntax:
    content: public class ContractApiHttp
- uid: com.microsoft.azure.sdk.iot.provisioning.service._individual_enrollment_manager
  parent: com.microsoft.azure.sdk.iot.provisioning.service
  href: com.microsoft.azure.sdk.iot.provisioning.service._individual_enrollment_manager.yml
  name: IndividualEnrollmentManager
  nameWithType: IndividualEnrollmentManager
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.IndividualEnrollmentManager
  type: Class
  summary: >-
    <p>Individual Enrollment Manager</p>

    <p>This is the inner class that implements the Individual Enrollment APIs. </p>

    <p>For the public API, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client" data-throw-if-not-resolved="false">ProvisioningServiceClient</xref>.</p>

    <p></p>
  syntax: *o0
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  name: Enrollment
  nameWithType: Enrollment
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service enrollment with a JSON serializer and deserializer.</p>

    <p>This object is used to send <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> information to the provisioning service, or receive <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> information from the provisioning service.</p>

    <p>To create or update an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> on the provisioning service you should fill this object and call the public API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createOrUpdateIndividualEnrollment(Enrollment)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createOrUpdateIndividualEnrollment(Enrollment)</xref>. The minimum information required by the provisioning service is the<code>registrationId 

        </code> and the <code>attestation 

        </code> .</p>

    <p>A new device can be provisioned by two attestation mechanisms, Trust Platform Module (see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation" data-throw-if-not-resolved="false">TpmAttestation</xref>) or DICE (see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>). The definition of each one you should use depending on the physical authentication hardware that the device contains.</p>

    <p>The content of this class will be serialized in a JSON format and sent as a body of the rest API to the provisioning service.</p>

    <p>When serialized, an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> will look like the following example: <pre>

    *<code>*{

             "registrationId":"validRegistrationId",

             "deviceId":"ContosoDevice-123",

             "attestation":{

                 "type":"tpm",

                 "tpm":{

                     "endorsementKey":"validEndorsementKey"

                 }

             },

             "iotHubHostName":"ContosoIoTHub.azure-devices.net",

             "provisioningStatus":"enabled"

        *}

        </code></pre></p>

    <p>The content of this class can be filled by a JSON, received from the provisioning service, as result of a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> operation like create, update, or query enrollment.</p>

    <p>The following JSON is a sample or the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> response, received from the provisioning service. <pre>

    *<code>*{

             "registrationId":"validRegistrationId",

             "deviceId":"ContosoDevice-123",

             "attestation":{

                 "type":"tpm",

                 "tpm":{

                     "endorsementKey":"validEndorsementKey"

                 }

             },

             "iotHubHostName":"ContosoIoTHub.azure-devices.net",

             "provisioningStatus":"enabled"

             "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

             "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

             "etag": "\"00000000-0000-0000-0000-00000000000\""

        *}

        </code></pre></p>

    <p></p>
  syntax:
    content: public class Enrollment extends Serializable
- uid: com.microsoft.azure.sdk.iot.provisioning.service.exceptions._provisioning_service_client_exception
  parent: com.microsoft.azure.sdk.iot.provisioning.service.exceptions
  href: com.microsoft.azure.sdk.iot.provisioning.service.exceptions._provisioning_service_client_exception.yml
  name: ProvisioningServiceClientException
  nameWithType: ProvisioningServiceClientException
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
  type: Class
  summary: >-
    <p>Super class for the Device Provisioning Service exceptions on the Service Client.</p>

    <p>

      <pre>

        <code>ProvisioningServiceClientException

            |

            +--&gt;ProvisioningServiceClientTransportException [any transport layer exception]

            |

            +--&gt;ProvisioningServiceClientServiceException [any exception reported in the http response]

                    |

                    |

                    +--&gt;ProvisioningServiceClientBadUsageException [any http response 4xx]

                    |        |

                    |        +--&gt;ProvisioningServiceClientBadFormatException [400]

                    |        +--&gt;ProvisioningServiceClientUnathorizedException [401]

                    |        +--&gt;ProvisioningServiceClientNotFoundException [404]

                    |        +--&gt;ProvisioningServiceClientPreconditionFailedException [412]

                    |        +--&gt;ProvisioningServiceClientTooManyRequestsException [429]

                    |

                    +--&gt;ProvisioningServiceClientTransientException [any http response 5xx]

                    |        |

                    |        +--&gt;ProvisioningServiceClientInternalServerErrorException [500]

                    |

                    +--&gt;ProvisioningServiceClientUnknownException [any other http response &gt;300, but not 4xx or 5xx]

        </code>

      </pre>

    </p>
  syntax:
    content: public class ProvisioningServiceClientException
- uid: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createOrUpdateIndividualEnrollment(Enrollment)
  parent: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client
  href: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.yml
  name: createOrUpdateIndividualEnrollment(Enrollment enrollment)
  nameWithType: ProvisioningServiceClient.createOrUpdateIndividualEnrollment(Enrollment enrollment)
  fullName: Enrollment com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment(Enrollment enrollment)
  type: Method
  summary: "<p>Create or update a individual device enrollment record.</p>\r\n<p>This API creates a new enrollment or update a existed one. All enrollments in the Device Provisioning Service contains a unique identifier called registrationId. If this API is called for an enrollment with a registrationId that already exists, it will replace the existed enrollment information by the new one. On the other hand, if the registrationId does not exit, this API will create a new enrollment.</p>\r\n<p>To use the Device Provisioning Service API, you must include the follow package on your application. <pre><code>// Include the following imports to use the Device Provisioning Service APIs.\r\n    import com.microsoft.azure.sdk.iot.provisioning.service.*;\r\n    </code></pre></p>\r\n<p>\r\n  <b>Sample:</b>\r\n</p>\r\n<p>The follow code will create a new enrollment that will provisioning the ContosoDevice1000 to the ContosoHub.azure-devices.net using TPM attestation. <pre><code>// Enrollment information.\r\n    private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\r\n                                                                 \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\r\n                                                                 \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\r\n    private static final String TPM_ENDORSEMENT_KEY = \"tpm-endorsement-key\";\r\n    private static final String REGISTRATION_ID = \"registrationId-1\";\r\n    private static final String DEVICE_ID = \"ContosoDevice1000\";\r\n    private static final String IOTHUB_HOST_NAME = \"ContosoHub.azure-devices.net\";\r\n    \r\n    public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\r\n    {\r\n        // Create a Device Provisioning Service Client.\r\n        DeviceProvisioningServiceClient deviceProvisioningServiceClient =\r\n            DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\r\n    \r\n        // Create a new individual enrollment configurations.\r\n        Attestation attestation = new TpmAttestation(TPM_ENDORSEMENT_KEY);\r\n        Enrollment enrollment =\r\n           new Enrollment(\r\n                REGISTRATION_ID,\r\n                attestation);\r\n        enrollment.setDeviceId(DEVICE_ID);\r\n        enrollment.setIotHubHostName(IOTHUB_HOST_NAME);\r\n        enrollment.setProvisioningStatus(ProvisioningStatus.DISABLED);\r\n    \r\n        // Create a new individual enrollment.\r\n        Enrollment enrollmentResult =  deviceProvisioningServiceClient.createOrUpdateIndividualEnrollment(enrollment);\r\n    }\r\n    </code></pre></p>\r\n<p>If the registrationId already exists, this method will update existed enrollments. Note that update the enrollment will not change the status of the device that was already registered using the old enrollment.</p>\r\n<p>The follow code will update the provisioningStatus of the previous enrollment from <b>disabled</b> to <b>enabled</b>. <pre><code>// Enrollment information.\r\n    private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\r\n                                                                 \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\r\n                                                                 \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\r\n    private static final String REGISTRATION_ID = \"registrationId-1\";\r\n    \r\n    public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\r\n    {\r\n        // Create a Device Provisioning Service Client.\r\n        DeviceProvisioningServiceClient deviceProvisioningServiceClient =\r\n            DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\r\n    \r\n        // Get the content of the previous enrollment.\r\n        Enrollment enrollment =  deviceProvisioningServiceClient.getIndividualEnrollment(REGISTRATION_ID);\r\n    \r\n        // Change the provisioning status, from disabled to enabled\r\n        enrollment.setProvisioningStatus(ProvisioningStatus.ENABLED);\r\n    \r\n        // Update the individual enrollment information.\r\n        Enrollment enrollmentResult =  deviceProvisioningServiceClient.createOrUpdateIndividualEnrollment(enrollment);\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public Enrollment createOrUpdateIndividualEnrollment(Enrollment enrollment)
    parameters:
    - id: enrollment
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
      description: >-
        <p>the <xref uid="" data-throw-if-not-resolved="false">Enrollment</xref> object that describes the individual enrollment that will be created of updated. It cannot be<code>null 

            </code> . </p>
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
      description: <p>An <xref uid="" data-throw-if-not-resolved="false">Enrollment</xref> object with the result of the create or update requested. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation_result
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation_result.yml
  name: BulkOperationResult
  nameWithType: BulkOperationResult
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationResult
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service bulk operation result with a JSON deserializer.</p>

    <p>This result is returned as a result of the <xref uid="" data-throw-if-not-resolved="false">ProvisioningServiceClient#runBulkOperation(BulkOperationMode, Collection)</xref>.</p>

    <p>The provisioning service provides general bulk result in the isSuccessful, and a individual error result for each enrolment in the bulk.</p>

    <p>The following JSON is an example of the result from a bulk operation. <pre><code>{

            "isSuccessful":true,

            "errors": [

                {

                    "registrationId":"validRegistrationId1",

                    "errorCode":200,

                    "errorStatus":"Succeeded"

                },

                {

                    "registrationId":"validRegistrationId2",

                    "errorCode":200,

                    "errorStatus":"Succeeded"

                }

            ]

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class BulkOperationResult
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation_mode
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation_mode.yml
  name: BulkOperationMode
  nameWithType: BulkOperationMode
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode
  type: Enum
  summary: >-
    <p>The Device Provisioning Service bulk operation modes.</p>

    <p></p>
  syntax:
    content: public enum BulkOperationMode
- uid: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.getIndividualEnrollment(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client
  href: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.yml
  name: getIndividualEnrollment(String registrationId)
  nameWithType: ProvisioningServiceClient.getIndividualEnrollment(String registrationId)
  fullName: Enrollment com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollment(String registrationId)
  type: Method
  summary: "<p>Retrieve the individual enrollment information.</p>\r\n<p>This method will return the enrollment information for the provided registrationId. It will retrieve the correspondent individual enrollment from the Device Provisioning Service, and return it in the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Enrollment</xref> object.</p>\r\n<p>If the registrationId do not exists, this method will throw <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProvisioningServiceClientExceptionManager</xref></p>\r\n<p>\r\n  <b>Sample:</b>\r\n</p>\r\n<p>The follow code will get and print the information about the individual enrollment \"registrationId-1\". <pre><code>// Enrollment information.\r\n    private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\r\n                                                                 \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\r\n                                                                 \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\r\n    private static final String REGISTRATION_ID = \"registrationId-1\";\r\n    \r\n    public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\r\n    {\r\n        // Create a Device Provisioning Service Client.\r\n        DeviceProvisioningServiceClient deviceProvisioningServiceClient =\r\n            DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\r\n    \r\n        // Get the individual enrollment information.\r\n        Enrollment enrollmentResult =  deviceProvisioningServiceClient.getIndividualEnrollment(REGISTRATION_ID);\r\n        System.out.println(enrollmentResult.toString());\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public Enrollment getIndividualEnrollment(String registrationId)
    parameters:
    - id: registrationId
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> that identifies the individual enrollment. It cannot be<code>null 

            </code> or empty. </p>
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
      description: <p>The <xref uid="" data-throw-if-not-resolved="false">Enrollment</xref> with the content of the individual enrollment in the Provisioning Device Service. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.deleteIndividualEnrollment(Enrollment)
  parent: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client
  href: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.yml
  name: deleteIndividualEnrollment(Enrollment enrollment)
  nameWithType: ProvisioningServiceClient.deleteIndividualEnrollment(Enrollment enrollment)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(Enrollment enrollment)
  type: Method
  summary: "<p>Delete the individual enrollment information.</p>\r\n<p>This method will remove the individual enrollment from the Device Provisioning Service using the provided <xref uid=\"\" data-throw-if-not-resolved=\"false\">Enrollment</xref> information. The Device Provisioning Service will care about the registrationId and the eTag on the enrollment. If you want to delete the enrollment regardless the eTag, you can set the<code>eTag=\"*\" \r\n    </code> into the enrollment, or use the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.deleteIndividualEnrollment(String)\" data-throw-if-not-resolved=\"false\">deleteIndividualEnrollment(String)</xref> passing only the registrationId.</p>\r\n<p>Note that delete the enrollment will not remove the Device itself from the IotHub.</p>\r\n<p>If the registrationId does not exists or the eTag not matches, this method will throw <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProvisioningServiceClientExceptionManager</xref></p>\r\n<p>\r\n  <b>Sample:</b>\r\n</p>\r\n<p>The follow code will delete the information about the individual enrollment \"registrationId-1\". <pre><code>// Enrollment information.\r\n    private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\r\n                                                                 \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\r\n                                                                 \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\r\n    private static final String REGISTRATION_ID = \"registrationId-1\";\r\n    \r\n    public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\r\n    {\r\n        // Create a Device Provisioning Service Client.\r\n        DeviceProvisioningServiceClient deviceProvisioningServiceClient =\r\n            DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\r\n    \r\n        // Get the individual enrollment information.\r\n        Enrollment enrollmentResult =  deviceProvisioningServiceClient.getIndividualEnrollment(REGISTRATION_ID);\r\n    \r\n        // Delete the individual enrollment information.\r\n        deviceProvisioningServiceClient.deleteIndividualEnrollment(enrollmentResult);\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public void deleteIndividualEnrollment(Enrollment enrollment)
    parameters:
    - id: enrollment
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
      description: >-
        <p>the <xref uid="" data-throw-if-not-resolved="false">Enrollment</xref> that identifies the individual enrollment. It cannot be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.deleteIndividualEnrollment(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client
  href: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.yml
  name: deleteIndividualEnrollment(String registrationId)
  nameWithType: ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId)
  type: Method
  summary: "<p>Delete the individual enrollment information.</p>\r\n<p>This method will remove the individual enrollment from the Device Provisioning Service using the provided registrationId. It will delete the enrollment regardless the eTag. It means that this API correspond to the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.deleteIndividualEnrollment(String,String)\" data-throw-if-not-resolved=\"false\">deleteIndividualEnrollment(String, String)</xref> with the<code>eTag=\"*\" \r\n    </code> .</p>\r\n<p>Note that delete the enrollment will not remove the Device itself from the IotHub.</p>\r\n<p>If the registrationId does not exists, this method will throw <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProvisioningServiceClientExceptionManager</xref></p>\r\n<p>\r\n  <b>Sample:</b>\r\n</p>\r\n<p>The follow code will delete the information about the individual enrollment \"registrationId-1\". <pre><code>// Enrollment information.\r\n    private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\r\n                                                                 \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\r\n                                                                 \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\r\n    private static final String REGISTRATION_ID = \"registrationId-1\";\r\n    \r\n    public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\r\n    {\r\n        // Create a Device Provisioning Service Client.\r\n        DeviceProvisioningServiceClient deviceProvisioningServiceClient =\r\n            DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\r\n    \r\n        // Delete the individual enrollment information.\r\n        deviceProvisioningServiceClient.deleteIndividualEnrollment(REGISTRATION_ID);\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public void deleteIndividualEnrollment(String registrationId)
    parameters:
    - id: registrationId
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> that identifies the individual enrollment. It cannot be<code>null 

            </code> or empty. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.deleteIndividualEnrollment(String,String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client
  href: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.yml
  name: deleteIndividualEnrollment(String registrationId, String eTag)
  nameWithType: ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId, String eTag)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId, String eTag)
  type: Method
  summary: "<p>Delete the individual enrollment information.</p>\r\n<p>This method will remove the individual enrollment from the Device Provisioning Service using the provided registrationId and eTag. If you want to delete the enrollment regardless the eTag, you can use <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.deleteIndividualEnrollment(String)\" data-throw-if-not-resolved=\"false\">deleteIndividualEnrollment(String)</xref> or you can pass the eTag as<code>null \r\n    </code> , empty, or <code>\"*\" \r\n    </code> .</p>\r\n<p>Note that delete the enrollment will not remove the Device itself from the IotHub.</p>\r\n<p>If the registrationId does not exists or the eTag does not matches, this method will throw <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProvisioningServiceClientExceptionManager</xref></p>\r\n<p>\r\n  <b>Sample:</b>\r\n</p>\r\n<p>The follow code will delete the information about the individual enrollment \"registrationId-1\" regardless the eTag. <pre><code>// Enrollment information.\r\n    private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\r\n                                                                 \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\r\n                                                                 \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\r\n    private static final String REGISTRATION_ID = \"registrationId-1\";\r\n    private Static final String ANY_ETAG = \"*\";\r\n    \r\n    public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\r\n    {\r\n        // Create a Device Provisioning Service Client.\r\n        DeviceProvisioningServiceClient deviceProvisioningServiceClient =\r\n            DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\r\n    \r\n        // Delete the individual enrollment information.\r\n        deviceProvisioningServiceClient.deleteIndividualEnrollment(REGISTRATION_ID, ANY_ETAG);\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public void deleteIndividualEnrollment(String registrationId, String eTag)
    parameters:
    - id: registrationId
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> that identifies the individual enrollment. It cannot be<code>null 

            </code> or empty. </p>
    - id: eTag
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> with the Enrollment eTag. It can be<code>null 

            </code> or empty. The Device Provisioning Service will ignore it in all of these cases. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service._query
  parent: com.microsoft.azure.sdk.iot.provisioning.service
  href: com.microsoft.azure.sdk.iot.provisioning.service._query.yml
  name: Query
  nameWithType: Query
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query
  type: Class
  summary: >-
    <p>The query iterator.</p>

    <p>The<code>Query 

        </code> iterator is the result of the query factory for <table rows="3" cols="2"><row><entry thead="no"><p><b>IndividualEnrollment:</b></p></entry><entry thead="no"><p><xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createIndividualEnrollmentQuery(QuerySpecification,int)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createIndividualEnrollmentQuery(QuerySpecification, int)</xref></p></entry></row><row><entry thead="no"><p><b>EnrollmentGroup:</b></p></entry><entry thead="no"><p><xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createEnrollmentGroupQuery(QuerySpecification,int)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createEnrollmentGroupQuery(QuerySpecification, int)</xref></p></entry></row><row><entry thead="no"><p><b>RegistrationStatus:</b></p></entry><entry thead="no"><p><xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createEnrollmentGroupRegistrationStatusQuery(QuerySpecification,String,int)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createEnrollmentGroupRegistrationStatusQuery(QuerySpecification, String, int)</xref></p></entry></row></table></p>

    <p>On all cases, the <b>QuerySpecification</b> contains a SQL query that must follow the <ulink url="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-query-language">Query Language</ulink> for the Device Provisioning Service.</p>

    <p>Optionally, an<code>Integer 

        </code> with the <b>pageSize</b>, can determine the maximum number of the items in the <xref uid="" data-throw-if-not-resolved="false">QueryResult</xref> returned by the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query.next()" data-throw-if-not-resolved="false">next()</xref>. It must be any positive integer, and if it contains 0, the Device Provisioning Service will ignore it and use a standard page size.</p>

    <p>You can use this Object as a standard Iterator, just using the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query.hasNext()" data-throw-if-not-resolved="false">hasNext()</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query.next()" data-throw-if-not-resolved="false">next()</xref> in a <code>while 

        </code> loop, up to the point where the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query.hasNext()" data-throw-if-not-resolved="false">hasNext()</xref> return<code>false 

        </code> . But, keep in mind that the <xref uid="" data-throw-if-not-resolved="false">QueryResult</xref> can contain a empty list, even if the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query.hasNext()" data-throw-if-not-resolved="false">hasNext()</xref> returned<code>true 

        </code> . For example, image that you have 10 Individual Enrollments in the Device Provisioning Service and you created new query with the<code>pageSize 

        </code> equals 5. The first<code>hasNext() 

        </code> will return<code>true 

        </code> , and the first<code>next() 

        </code> will return a<code>QueryResult 

        </code> with 5 items. After that you call the<code>hasNext 

        </code> , which will returns<code>true 

        </code> . Now, before you get the next page, somebody delete all the Individual Enrollments, What happened, when you call the<code>next() 

        </code> , it will return a valid<code>QueryResult 

        </code> , but the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result.getItems()" data-throw-if-not-resolved="false">QueryResult#getItems()</xref> will return a empty list.</p>

    <p>You can also store a query context (QuerySpecification + ContinuationToken) and restart it in the future, from the point where you stopped.</p>

    <p>Besides the Items, the queryResult contains the continuationToken, the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result.getContinuationToken()" data-throw-if-not-resolved="false">QueryResult#getContinuationToken()</xref> shall return it. In any point in the future, you may recreate the query using the same query factories that you used for the first time, and call <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query.next(String)" data-throw-if-not-resolved="false">next(String)</xref> providing the stored continuationToken to get the next page.</p>

    <p></p>
  syntax:
    content: public class Query
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification.yml
  name: QuerySpecification
  nameWithType: QuerySpecification
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service query specification with a JSON serializer.</p>

    <p></p>
  syntax:
    content: public class QuerySpecification
- uid: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createIndividualEnrollmentQuery(QuerySpecification)
  parent: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client
  href: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.yml
  name: createIndividualEnrollmentQuery(QuerySpecification querySpecification)
  nameWithType: ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification querySpecification)
  fullName: Query com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification querySpecification)
  type: Method
  summary: >-
    <p>Factory to create a individual enrollment query.</p>

    <p>This method will create a new individual enrollment query for Device Provisioning Service and return it as a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query" data-throw-if-not-resolved="false">Query</xref> iterator.</p>

    <p>The Device Provisioning Service expects a SQL query in the <xref uid="" data-throw-if-not-resolved="false">QuerySpecification</xref>, for instance <code>"SELECT * FROM enrollments" 

        </code> .</p>

    <p></p>
  syntax:
    content: public Query createIndividualEnrollmentQuery(QuerySpecification querySpecification)
    parameters:
    - id: querySpecification
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification
      description: >-
        <p>the <xref uid="" data-throw-if-not-resolved="false">QuerySpecification</xref> with the SQL query. It cannot be<code>null 

            </code> . </p>
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service._query
      description: <p>The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query" data-throw-if-not-resolved="false">Query</xref> iterator. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createIndividualEnrollmentQuery(QuerySpecification,int)
  parent: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client
  href: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.yml
  name: createIndividualEnrollmentQuery(QuerySpecification querySpecification, int pageSize)
  nameWithType: ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification querySpecification, int pageSize)
  fullName: Query com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification querySpecification, int pageSize)
  type: Method
  summary: >-
    <p>Factory to create a individual enrollment query.</p>

    <p>This method will create a new individual enrollment query for Device Provisioning Service and return it as a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query" data-throw-if-not-resolved="false">Query</xref> iterator.</p>

    <p>The Device Provisioning Service expects a SQL query in the <xref uid="" data-throw-if-not-resolved="false">QuerySpecification</xref>, for instance <code>"SELECT * FROM enrollments" 

        </code> .</p>

    <p>For each iteration, the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query" data-throw-if-not-resolved="false">Query</xref> will return a List of objects correspondent to the query result. The maximum number of items per iteration can be specified by the pageSize. It is optional, you can provide <b>0</b> for default pageSize or use the API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createIndividualEnrollmentQuery(QuerySpecification)" data-throw-if-not-resolved="false">createIndividualEnrollmentQuery(QuerySpecification)</xref>.</p>

    <p></p>
  syntax:
    content: public Query createIndividualEnrollmentQuery(QuerySpecification querySpecification, int pageSize)
    parameters:
    - id: querySpecification
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification
      description: >-
        <p>the <xref uid="" data-throw-if-not-resolved="false">QuerySpecification</xref> with the SQL query. It cannot be<code>null 

            </code> . </p>
    - id: pageSize
      type: f75371fa
      description: >-
        <p>the<code>int 

            </code> with the maximum number of items per iteration. It can be 0 for default, but not negative. </p>
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service._query
      description: <p>The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query" data-throw-if-not-resolved="false">Query</xref> iterator. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client
  parent: com.microsoft.azure.sdk.iot.provisioning.service
  href: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.yml
  name: ProvisioningServiceClient
  nameWithType: ProvisioningServiceClient
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  type: Class
  summary: >-
    <p>Device Provisioning Service Client.</p>

    <p>The IoT Hub Device Provisioning Service is a helper service for IoT Hub that enables automatic device provisioning to a specified IoT hub without requiring human intervention. You can use the Device Provisioning Service to provision millions of devices in a secure and scalable manner.</p>

    <p>This java SDK provides an API to help developers to create and maintain Enrollments on the IoT Hub Device Provisioning Service, it translate the rest API in java Objects and Methods.</p>

    <p>To use the this SDK, you must include the follow package on your application. <pre><code>// Include the following imports to use the Device Provisioning Service APIs.

        import com.microsoft.azure.sdk.iot.provisioning.service.*;

        </code></pre></p>

    <p>The main APIs are exposed by the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client" data-throw-if-not-resolved="false">ProvisioningServiceClient</xref>, it contains the public Methods that the application shall call to create and maintain the Enrollments. The Objects in the <b>configs</b> package shall be filled and passed as parameters of the public API, for example, to create a new enrollment, the application shall create the object <xref uid="" data-throw-if-not-resolved="false">Enrollment</xref> with the appropriate enrollment configurations, and call the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createOrUpdateIndividualEnrollment(Enrollment)" data-throw-if-not-resolved="false">createOrUpdateIndividualEnrollment(Enrollment)</xref>.</p>

    <p>The IoT Hub Device Provisioning Service supports SQL queries too. The application can create a new query using one of the queries factories, for instance <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createIndividualEnrollmentQuery(QuerySpecification)" data-throw-if-not-resolved="false">createIndividualEnrollmentQuery(QuerySpecification)</xref>, passing the <xref uid="" data-throw-if-not-resolved="false">QuerySpecification</xref>, with the SQL query. This factory returns a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query" data-throw-if-not-resolved="false">Query</xref> object, which is an active iterator.</p>

    <p>This java SDK can be represented in the follow diagram, the first layer are the public APIs the your application shall use:</p>

    <p>

      <pre>

        <code>+===============+       +==========================================+                           +============+   +===+

        |    configs    |------&gt;|         ProvisioningServiceClient        |                        +-&gt;|    Query   |   |   |

        +===============+       +==+=================+==================+==+                        |  +======+=====+   | e |

                                  /                  |                   \                          |         |         | x |

                                 /                   |                    \                         |         |         | c |

        +-----------------------+-----+  +-----------+------------+  +-----+---------------------+  |         |         | e |

        | IndividualEnrollmentManager |  | EnrollmentGroupManager |  | RegistrationStatusManager |  |         |         | p |

        +---------------+------+------+  +-----------+------+-----+  +-------------+-------+-----+  |         |         | t |

                         \      \                    |       \                     |        \       |         |         | i |

                          \      +----------------------------+------------------------------+------+         |         | o |

                           \                         |                             |                          |         | n |

         +--------+      +--+------------------------+-----------------------------+--------------------------+-----+   | s |

         |  auth  |-----&gt;|                                     ContractApiHttp                                      |   |   |

         +--------+      +-------------------------------------------+----------------------------------------------+   +===+

                                                                     |

                                                                     |

                               +-------------------------------------+------------------------------------------+

                               |                 com.microsoft.azure.sdk.iot.deps.transport.http                |

                               +--------------------------------------------------------------------------------+

        </code>

      </pre>

    </p>

    <p></p>
  syntax:
    content: public class ProvisioningServiceClient
