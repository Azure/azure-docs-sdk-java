### YamlMime:JavaMember
uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync*"
fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<T>.getByResourceGroupAsync"
name: "getByResourceGroupAsync"
nameWithType: "SupportsGettingByResourceGroup<T>.getByResourceGroupAsync"
members:
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<T>.getByResourceGroupAsync(String resourceGroupName, String name)"
  name: "getByResourceGroupAsync(String resourceGroupName, String name)"
  nameWithType: "SupportsGettingByResourceGroup<T>.getByResourceGroupAsync(String resourceGroupName, String name)"
  summary: "Gets the information about a resource from Azure based on the resource name and the name of its resource group."
  parameters:
  - description: "the name of the resource group the resource is in"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the resource. (Note, this is not the ID)"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<T> getByResourceGroupAsync(String resourceGroupName, String name)"
  returns:
    description: "Observable to an immutable representation of the resource"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<T>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<T>.getByResourceGroupAsync(String resourceGroupName, String name, ServiceCallback<T> callback)"
  name: "getByResourceGroupAsync(String resourceGroupName, String name, ServiceCallback<T> callback)"
  nameWithType: "SupportsGettingByResourceGroup<T>.getByResourceGroupAsync(String resourceGroupName, String name, ServiceCallback<T> callback)"
  summary: "Gets the information about a resource from Azure based on the resource name and the name of its resource group."
  parameters:
  - description: "the name of the resource group the resource is in"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the resource. (Note, this is not the ID)"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the callback to call on success or failure"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<T> getByResourceGroupAsync(String resourceGroupName, String name, ServiceCallback<T> callback)"
  returns:
    description: "Observable to an immutable representation of the resource"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.arm.collection"
artifact: com.microsoft.azure:azure-mgmt-resources:1.38.1
