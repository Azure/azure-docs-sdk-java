### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask
  id: JobManagerTask
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.allowLowPriorityNode()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.applicationPackageReferences()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.authenticationTokenSettings()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.commandLine()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.constraints()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.containerSettings()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.displayName()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.environmentSettings()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.id()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.killJobOnCompletion()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.outputFiles()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.resourceFiles()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.runExclusive()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.userIdentity()
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withAllowLowPriorityNode(Boolean)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withApplicationPackageReferences(List<ApplicationPackageReference>)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withAuthenticationTokenSettings(AuthenticationTokenSettings)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withCommandLine(String)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withConstraints(TaskConstraints)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withContainerSettings(TaskContainerSettings)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withDisplayName(String)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withEnvironmentSettings(List<EnvironmentSetting>)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withId(String)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withKillJobOnCompletion(Boolean)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withOutputFiles(List<OutputFile>)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withResourceFiles(List<ResourceFile>)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withRunExclusive(Boolean)
  - com.microsoft.azure.batch.protocol.models.JobManagerTask.withUserIdentity(UserIdentity)
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: JobManagerTask
  nameWithType: JobManagerTask
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
      branch: master
      repo: https://github.com/Azure/azure-batch-sdk-for-java
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 39
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Specifies details of a Job Manager task. The Job Manager task is automatically started when the job is created. The Batch service tries to schedule the Job Manager task before any other tasks in the job. When shrinking a pool, the Batch service tries to preserve compute nodes where Job Manager tasks are running for as long as possible (that is, nodes running 'normal' tasks are removed before nodes running Job Manager tasks). When a Job Manager task fails and needs to be restarted, the system tries to schedule it at the highest priority. If there are no idle nodes available, the system may terminate one of the running tasks in the pool and return it to the queue in order to make room for the Job Manager task to restart. Note that a Job Manager task in one job does not have priority over tasks in other jobs. Across jobs, only job level priorities are observed. For example, if a Job Manager in a priority 0 job needs to be restarted, it will not displace tasks of a priority 1 job. Batch will retry tasks when a recovery operation is triggered on a compute node. Examples of recovery operations include (but are not limited to) when an unhealthy compute node is rebooted or a compute node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all tasks should be idempotent. This means tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running tasks is to use some form of checkpointing. </p>"
  syntax: &o1
    content: public class JobManagerTask
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.allowLowPriorityNode()
  id: allowLowPriorityNode()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: allowLowPriorityNode()
  nameWithType: JobManagerTask.allowLowPriorityNode()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.allowLowPriorityNode()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.allowLowPriorityNode*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 457
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get the default value is true.</p>\r\n<p></p>"
  syntax:
    content: public Boolean allowLowPriorityNode()
    return:
      type: 866c2227
      description: <p>the allowLowPriorityNode value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.applicationPackageReferences()
  id: applicationPackageReferences()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: applicationPackageReferences()
  nameWithType: JobManagerTask.applicationPackageReferences()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.applicationPackageReferences()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.applicationPackageReferences*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 417
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get application packages are downloaded and deployed to a shared directory, not the task working directory. Therefore, if a referenced package is already on the compute node, and is up to date, then it is not re-downloaded; the existing copy on the compute node is used. If a referenced application package cannot be installed, for example because the package has been deleted or because download failed, the task fails.</p>\r\n<p></p>"
  syntax:
    content: public List<ApplicationPackageReference> applicationPackageReferences()
    return:
      type: 5618da2dcom.microsoft.azure.batch.protocol.models.ApplicationPackageReferencea08ddfce
      description: <p>the applicationPackageReferences value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.authenticationTokenSettings()
  id: authenticationTokenSettings()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: authenticationTokenSettings()
  nameWithType: JobManagerTask.authenticationTokenSettings()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.authenticationTokenSettings()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.authenticationTokenSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 437
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get if this property is set, the Batch service provides the task with an authentication token which can be used to authenticate Batch service operations without requiring an account access key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the task can carry out using the token depend on the settings. For example, a task can request job permissions in order to add other tasks to the job, or check the status of the job or of other tasks under the job.</p>\r\n<p></p>"
  syntax:
    content: public AuthenticationTokenSettings authenticationTokenSettings()
    return:
      type: com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings
      description: <p>the authenticationTokenSettings value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.commandLine()
  id: commandLine()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: commandLine()
  nameWithType: JobManagerTask.commandLine()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.commandLine()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.commandLine*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 237
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get the command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the task working directory), or use the Batch provided environment variable (<a href=\"https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables\">https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables</a>).</p>\r\n<p></p>"
  syntax:
    content: public String commandLine()
    return:
      type: "26831127"
      description: <p>the commandLine value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.constraints()
  id: constraints()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: constraints()
  nameWithType: JobManagerTask.constraints()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.constraints()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.constraints*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 337
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get the constraints value.</p>\r\n<p></p>"
  syntax:
    content: public TaskConstraints constraints()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskConstraints
      description: <p>the constraints value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.containerSettings()
  id: containerSettings()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: containerSettings()
  nameWithType: JobManagerTask.containerSettings()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.containerSettings()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.containerSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 257
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get if the pool that will run this task has containerConfiguration set, this must be set as well. If the pool that will run this task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.</p>\r\n<p></p>"
  syntax:
    content: public TaskContainerSettings containerSettings()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskContainerSettings
      description: <p>the containerSettings value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.displayName()
  id: displayName()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: displayName()
  nameWithType: JobManagerTask.displayName()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.displayName()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.displayName*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 217
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get it need not be unique and can contain any Unicode characters up to a maximum length of 1024.</p>\r\n<p></p>"
  syntax:
    content: public String displayName()
    return:
      type: "26831127"
      description: <p>the displayName value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.environmentSettings()
  id: environmentSettings()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: environmentSettings()
  nameWithType: JobManagerTask.environmentSettings()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.environmentSettings()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.environmentSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 317
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get the environmentSettings value.</p>\r\n<p></p>"
  syntax:
    content: public List<EnvironmentSetting> environmentSettings()
    return:
      type: 5618da2dcom.microsoft.azure.batch.protocol.models.EnvironmentSettinga08ddfce
      description: <p>the environmentSettings value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.id()
  id: id()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: id()
  nameWithType: JobManagerTask.id()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.id()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.id*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 197
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get the ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.</p>\r\n<p></p>"
  syntax:
    content: public String id()
    return:
      type: "26831127"
      description: <p>the id value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.killJobOnCompletion()
  id: killJobOnCompletion()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: killJobOnCompletion()
  nameWithType: JobManagerTask.killJobOnCompletion()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.killJobOnCompletion()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.killJobOnCompletion*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 357
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get if true, when the Job Manager task completes, the Batch service marks the job as complete. If any tasks are still running at this time (other than Job Release), those tasks are terminated. If false, the completion of the Job Manager task does not affect the job status. In this case, you should either use the onAllTasksComplete attribute to terminate the job, or have a client or user terminate the job explicitly. An example of this is if the Job Manager creates a set of tasks but then takes no further role in their execution. The default value is true. If you are using the onAllTasksComplete and onTaskFailure attributes to control job lifetime, and using the Job Manager task only to create the tasks for the job (not to monitor progress), then it is important to set killJobOnCompletion to false.</p>\r\n<p></p>"
  syntax:
    content: public Boolean killJobOnCompletion()
    return:
      type: 866c2227
      description: <p>the killJobOnCompletion value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.outputFiles()
  id: outputFiles()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: outputFiles()
  nameWithType: JobManagerTask.outputFiles()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.outputFiles()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.outputFiles*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 297
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get for multi-instance tasks, the files will only be uploaded from the compute node on which the primary task is executed.</p>\r\n<p></p>"
  syntax:
    content: public List<OutputFile> outputFiles()
    return:
      type: 5618da2dcom.microsoft.azure.batch.protocol.models.OutputFilea08ddfce
      description: <p>the outputFiles value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.resourceFiles()
  id: resourceFiles()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: resourceFiles()
  nameWithType: JobManagerTask.resourceFiles()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.resourceFiles()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.resourceFiles*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 277
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get files listed under this element are located in the task's working directory. There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.</p>\r\n<p></p>"
  syntax:
    content: public List<ResourceFile> resourceFiles()
    return:
      type: 5618da2dcom.microsoft.azure.batch.protocol.models.ResourceFilea08ddfce
      description: <p>the resourceFiles value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.runExclusive()
  id: runExclusive()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: runExclusive()
  nameWithType: JobManagerTask.runExclusive()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.runExclusive()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.runExclusive*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 397
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get if true, no other tasks will run on the same compute node for as long as the Job Manager is running. If false, other tasks can run simultaneously with the Job Manager on a compute node. The Job Manager task counts normally against the node's concurrent task limit, so this is only relevant if the node allows multiple concurrent tasks. The default value is true.</p>\r\n<p></p>"
  syntax:
    content: public Boolean runExclusive()
    return:
      type: 866c2227
      description: <p>the runExclusive value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.userIdentity()
  id: userIdentity()
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: userIdentity()
  nameWithType: JobManagerTask.userIdentity()
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.userIdentity()
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.userIdentity*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 377
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Get if omitted, the task runs as a non-administrative user unique to the task.</p>\r\n<p></p>"
  syntax:
    content: public UserIdentity userIdentity()
    return:
      type: com.microsoft.azure.batch.protocol.models.UserIdentity
      description: <p>the userIdentity value </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withAllowLowPriorityNode(Boolean)
  id: withAllowLowPriorityNode(Boolean)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withAllowLowPriorityNode(Boolean allowLowPriorityNode)
  nameWithType: JobManagerTask.withAllowLowPriorityNode(Boolean allowLowPriorityNode)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withAllowLowPriorityNode(Boolean allowLowPriorityNode)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withAllowLowPriorityNode*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 467
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set the default value is true.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withAllowLowPriorityNode(Boolean allowLowPriorityNode)
    parameters:
    - id: allowLowPriorityNode
      type: 866c2227
      description: <p>the allowLowPriorityNode value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withApplicationPackageReferences(List<ApplicationPackageReference>)
  id: withApplicationPackageReferences(List<ApplicationPackageReference>)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  nameWithType: JobManagerTask.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withApplicationPackageReferences*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 427
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set application packages are downloaded and deployed to a shared directory, not the task working directory. Therefore, if a referenced package is already on the compute node, and is up to date, then it is not re-downloaded; the existing copy on the compute node is used. If a referenced application package cannot be installed, for example because the package has been deleted or because download failed, the task fails.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
    parameters:
    - id: applicationPackageReferences
      type: 5618da2dcom.microsoft.azure.batch.protocol.models.ApplicationPackageReferencea08ddfce
      description: <p>the applicationPackageReferences value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withAuthenticationTokenSettings(AuthenticationTokenSettings)
  id: withAuthenticationTokenSettings(AuthenticationTokenSettings)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)
  nameWithType: JobManagerTask.withAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withAuthenticationTokenSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 447
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set if this property is set, the Batch service provides the task with an authentication token which can be used to authenticate Batch service operations without requiring an account access key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the task can carry out using the token depend on the settings. For example, a task can request job permissions in order to add other tasks to the job, or check the status of the job or of other tasks under the job.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)
    parameters:
    - id: authenticationTokenSettings
      type: com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings
      description: <p>the authenticationTokenSettings value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withCommandLine(String)
  id: withCommandLine(String)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withCommandLine(String commandLine)
  nameWithType: JobManagerTask.withCommandLine(String commandLine)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withCommandLine(String commandLine)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withCommandLine*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 247
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set the command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the task working directory), or use the Batch provided environment variable (<a href=\"https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables\">https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables</a>).</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withCommandLine(String commandLine)
    parameters:
    - id: commandLine
      type: "26831127"
      description: <p>the commandLine value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withConstraints(TaskConstraints)
  id: withConstraints(TaskConstraints)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withConstraints(TaskConstraints constraints)
  nameWithType: JobManagerTask.withConstraints(TaskConstraints constraints)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withConstraints(TaskConstraints constraints)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withConstraints*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 347
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set the constraints value.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withConstraints(TaskConstraints constraints)
    parameters:
    - id: constraints
      type: com.microsoft.azure.batch.protocol.models.TaskConstraints
      description: <p>the constraints value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withContainerSettings(TaskContainerSettings)
  id: withContainerSettings(TaskContainerSettings)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withContainerSettings(TaskContainerSettings containerSettings)
  nameWithType: JobManagerTask.withContainerSettings(TaskContainerSettings containerSettings)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withContainerSettings(TaskContainerSettings containerSettings)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withContainerSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 267
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set if the pool that will run this task has containerConfiguration set, this must be set as well. If the pool that will run this task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withContainerSettings(TaskContainerSettings containerSettings)
    parameters:
    - id: containerSettings
      type: com.microsoft.azure.batch.protocol.models.TaskContainerSettings
      description: <p>the containerSettings value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withDisplayName(String)
  id: withDisplayName(String)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withDisplayName(String displayName)
  nameWithType: JobManagerTask.withDisplayName(String displayName)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withDisplayName(String displayName)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withDisplayName*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 227
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set it need not be unique and can contain any Unicode characters up to a maximum length of 1024.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withDisplayName(String displayName)
    parameters:
    - id: displayName
      type: "26831127"
      description: <p>the displayName value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withEnvironmentSettings(List<EnvironmentSetting>)
  id: withEnvironmentSettings(List<EnvironmentSetting>)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)
  nameWithType: JobManagerTask.withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withEnvironmentSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 327
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set the environmentSettings value.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)
    parameters:
    - id: environmentSettings
      type: 5618da2dcom.microsoft.azure.batch.protocol.models.EnvironmentSettinga08ddfce
      description: <p>the environmentSettings value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withId(String)
  id: withId(String)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withId(String id)
  nameWithType: JobManagerTask.withId(String id)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withId(String id)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withId*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 207
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set the ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withId(String id)
    parameters:
    - id: id
      type: "26831127"
      description: <p>the id value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withKillJobOnCompletion(Boolean)
  id: withKillJobOnCompletion(Boolean)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withKillJobOnCompletion(Boolean killJobOnCompletion)
  nameWithType: JobManagerTask.withKillJobOnCompletion(Boolean killJobOnCompletion)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withKillJobOnCompletion(Boolean killJobOnCompletion)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withKillJobOnCompletion*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 367
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set if true, when the Job Manager task completes, the Batch service marks the job as complete. If any tasks are still running at this time (other than Job Release), those tasks are terminated. If false, the completion of the Job Manager task does not affect the job status. In this case, you should either use the onAllTasksComplete attribute to terminate the job, or have a client or user terminate the job explicitly. An example of this is if the Job Manager creates a set of tasks but then takes no further role in their execution. The default value is true. If you are using the onAllTasksComplete and onTaskFailure attributes to control job lifetime, and using the Job Manager task only to create the tasks for the job (not to monitor progress), then it is important to set killJobOnCompletion to false.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withKillJobOnCompletion(Boolean killJobOnCompletion)
    parameters:
    - id: killJobOnCompletion
      type: 866c2227
      description: <p>the killJobOnCompletion value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withOutputFiles(List<OutputFile>)
  id: withOutputFiles(List<OutputFile>)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withOutputFiles(List<OutputFile> outputFiles)
  nameWithType: JobManagerTask.withOutputFiles(List<OutputFile> outputFiles)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withOutputFiles(List<OutputFile> outputFiles)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withOutputFiles*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 307
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set for multi-instance tasks, the files will only be uploaded from the compute node on which the primary task is executed.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withOutputFiles(List<OutputFile> outputFiles)
    parameters:
    - id: outputFiles
      type: 5618da2dcom.microsoft.azure.batch.protocol.models.OutputFilea08ddfce
      description: <p>the outputFiles value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withResourceFiles(List<ResourceFile>)
  id: withResourceFiles(List<ResourceFile>)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withResourceFiles(List<ResourceFile> resourceFiles)
  nameWithType: JobManagerTask.withResourceFiles(List<ResourceFile> resourceFiles)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withResourceFiles(List<ResourceFile> resourceFiles)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withResourceFiles*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 287
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set files listed under this element are located in the task's working directory. There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withResourceFiles(List<ResourceFile> resourceFiles)
    parameters:
    - id: resourceFiles
      type: 5618da2dcom.microsoft.azure.batch.protocol.models.ResourceFilea08ddfce
      description: <p>the resourceFiles value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withRunExclusive(Boolean)
  id: withRunExclusive(Boolean)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withRunExclusive(Boolean runExclusive)
  nameWithType: JobManagerTask.withRunExclusive(Boolean runExclusive)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withRunExclusive(Boolean runExclusive)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withRunExclusive*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 407
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set if true, no other tasks will run on the same compute node for as long as the Job Manager is running. If false, other tasks can run simultaneously with the Job Manager on a compute node. The Job Manager task counts normally against the node's concurrent task limit, so this is only relevant if the node allows multiple concurrent tasks. The default value is true.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withRunExclusive(Boolean runExclusive)
    parameters:
    - id: runExclusive
      type: 866c2227
      description: <p>the runExclusive value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withUserIdentity(UserIdentity)
  id: withUserIdentity(UserIdentity)
  parent: com.microsoft.azure.batch.protocol.models.JobManagerTask
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  langs:
  - java
  name: withUserIdentity(UserIdentity userIdentity)
  nameWithType: JobManagerTask.withUserIdentity(UserIdentity userIdentity)
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withUserIdentity(UserIdentity userIdentity)
  overload: com.microsoft.azure.batch.protocol.models.JobManagerTask.withUserIdentity*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobManagerTask.java
    startLine: 387
  package: com.microsoft.azure.batch.protocol.models
  summary: "<p>Set if omitted, the task runs as a non-administrative user unique to the task.</p>\r\n<p></p>"
  syntax:
    content: public JobManagerTask withUserIdentity(UserIdentity userIdentity)
    parameters:
    - id: userIdentity
      type: com.microsoft.azure.batch.protocol.models.UserIdentity
      description: <p>the userIdentity value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobManagerTask
      description: <p>the JobManagerTask object itself. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.id*
  name: id
  nameWithType: JobManagerTask.id
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.id
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withId*
  name: withId
  nameWithType: JobManagerTask.withId
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.displayName*
  name: displayName
  nameWithType: JobManagerTask.displayName
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.displayName
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withDisplayName*
  name: withDisplayName
  nameWithType: JobManagerTask.withDisplayName
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withDisplayName
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.commandLine*
  name: commandLine
  nameWithType: JobManagerTask.commandLine
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.commandLine
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withCommandLine*
  name: withCommandLine
  nameWithType: JobManagerTask.withCommandLine
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withCommandLine
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.containerSettings*
  name: containerSettings
  nameWithType: JobManagerTask.containerSettings
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.containerSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withContainerSettings*
  name: withContainerSettings
  nameWithType: JobManagerTask.withContainerSettings
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withContainerSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: 5618da2dcom.microsoft.azure.batch.protocol.models.ResourceFilea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.batch.protocol.models.ResourceFile
    name: ResourceFile
    fullName: com.microsoft.azure.batch.protocol.models.ResourceFile
    href: com.microsoft.azure.batch.protocol.models.ResourceFile.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.resourceFiles*
  name: resourceFiles
  nameWithType: JobManagerTask.resourceFiles
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.resourceFiles
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withResourceFiles*
  name: withResourceFiles
  nameWithType: JobManagerTask.withResourceFiles
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withResourceFiles
  package: com.microsoft.azure.batch.protocol.models
- uid: 5618da2dcom.microsoft.azure.batch.protocol.models.OutputFilea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.batch.protocol.models.OutputFile
    name: OutputFile
    fullName: com.microsoft.azure.batch.protocol.models.OutputFile
    href: com.microsoft.azure.batch.protocol.models.OutputFile.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.outputFiles*
  name: outputFiles
  nameWithType: JobManagerTask.outputFiles
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.outputFiles
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withOutputFiles*
  name: withOutputFiles
  nameWithType: JobManagerTask.withOutputFiles
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withOutputFiles
  package: com.microsoft.azure.batch.protocol.models
- uid: 5618da2dcom.microsoft.azure.batch.protocol.models.EnvironmentSettinga08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
    name: EnvironmentSetting
    fullName: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
    href: com.microsoft.azure.batch.protocol.models.EnvironmentSetting.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.environmentSettings*
  name: environmentSettings
  nameWithType: JobManagerTask.environmentSettings
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.environmentSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withEnvironmentSettings*
  name: withEnvironmentSettings
  nameWithType: JobManagerTask.withEnvironmentSettings
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withEnvironmentSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.constraints*
  name: constraints
  nameWithType: JobManagerTask.constraints
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.constraints
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withConstraints*
  name: withConstraints
  nameWithType: JobManagerTask.withConstraints
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withConstraints
  package: com.microsoft.azure.batch.protocol.models
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.killJobOnCompletion*
  name: killJobOnCompletion
  nameWithType: JobManagerTask.killJobOnCompletion
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.killJobOnCompletion
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withKillJobOnCompletion*
  name: withKillJobOnCompletion
  nameWithType: JobManagerTask.withKillJobOnCompletion
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withKillJobOnCompletion
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.userIdentity*
  name: userIdentity
  nameWithType: JobManagerTask.userIdentity
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.userIdentity
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withUserIdentity*
  name: withUserIdentity
  nameWithType: JobManagerTask.withUserIdentity
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withUserIdentity
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.runExclusive*
  name: runExclusive
  nameWithType: JobManagerTask.runExclusive
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.runExclusive
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withRunExclusive*
  name: withRunExclusive
  nameWithType: JobManagerTask.withRunExclusive
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withRunExclusive
  package: com.microsoft.azure.batch.protocol.models
- uid: 5618da2dcom.microsoft.azure.batch.protocol.models.ApplicationPackageReferencea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
    name: ApplicationPackageReference
    fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
    href: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.applicationPackageReferences*
  name: applicationPackageReferences
  nameWithType: JobManagerTask.applicationPackageReferences
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.applicationPackageReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withApplicationPackageReferences*
  name: withApplicationPackageReferences
  nameWithType: JobManagerTask.withApplicationPackageReferences
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withApplicationPackageReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.authenticationTokenSettings*
  name: authenticationTokenSettings
  nameWithType: JobManagerTask.authenticationTokenSettings
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.authenticationTokenSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withAuthenticationTokenSettings*
  name: withAuthenticationTokenSettings
  nameWithType: JobManagerTask.withAuthenticationTokenSettings
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withAuthenticationTokenSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.allowLowPriorityNode*
  name: allowLowPriorityNode
  nameWithType: JobManagerTask.allowLowPriorityNode
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.allowLowPriorityNode
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withAllowLowPriorityNode*
  name: withAllowLowPriorityNode
  nameWithType: JobManagerTask.withAllowLowPriorityNode
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withAllowLowPriorityNode
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskContainerSettings
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.TaskContainerSettings.yml
  name: TaskContainerSettings
  nameWithType: TaskContainerSettings
  fullName: com.microsoft.azure.batch.protocol.models.TaskContainerSettings
  type: Class
  summary: "<p>The container settings for a task. </p>"
  syntax:
    content: public class TaskContainerSettings
- uid: com.microsoft.azure.batch.protocol.models.ResourceFile
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ResourceFile.yml
  name: ResourceFile
  nameWithType: ResourceFile
  fullName: com.microsoft.azure.batch.protocol.models.ResourceFile
  type: Class
  summary: "<p>A single file or multiple files to be downloaded to a compute node. </p>"
  syntax:
    content: public class ResourceFile
- uid: com.microsoft.azure.batch.protocol.models.OutputFile
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.OutputFile.yml
  name: OutputFile
  nameWithType: OutputFile
  fullName: com.microsoft.azure.batch.protocol.models.OutputFile
  type: Class
  summary: "<p>A specification for uploading files from an Azure Batch node to another location after the Batch service has finished executing the task process. </p>"
  syntax:
    content: public class OutputFile
- uid: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.EnvironmentSetting.yml
  name: EnvironmentSetting
  nameWithType: EnvironmentSetting
  fullName: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
  type: Class
  summary: "<p>An environment variable to be set on a task process. </p>"
  syntax:
    content: public class EnvironmentSetting
- uid: com.microsoft.azure.batch.protocol.models.TaskConstraints
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.TaskConstraints.yml
  name: TaskConstraints
  nameWithType: TaskConstraints
  fullName: com.microsoft.azure.batch.protocol.models.TaskConstraints
  type: Class
  summary: "<p>Execution constraints to apply to a task. </p>"
  syntax:
    content: public class TaskConstraints
- uid: com.microsoft.azure.batch.protocol.models.UserIdentity
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.UserIdentity.yml
  name: UserIdentity
  nameWithType: UserIdentity
  fullName: com.microsoft.azure.batch.protocol.models.UserIdentity
  type: Class
  summary: "<p>The definition of the user identity under which the task is run. Specify either the userName or autoUser property, but not both. </p>"
  syntax:
    content: public class UserIdentity
- uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference.yml
  name: ApplicationPackageReference
  nameWithType: ApplicationPackageReference
  fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  type: Class
  summary: "<p>A reference to an application package to be deployed to compute nodes. </p>"
  syntax:
    content: public class ApplicationPackageReference
- uid: com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings.yml
  name: AuthenticationTokenSettings
  nameWithType: AuthenticationTokenSettings
  fullName: com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings
  type: Class
  summary: "<p>The settings for an authentication token that the task can use to perform Batch service operations. </p>"
  syntax:
    content: public class AuthenticationTokenSettings
- uid: com.microsoft.azure.batch.protocol.models.JobManagerTask
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobManagerTask.yml
  name: JobManagerTask
  nameWithType: JobManagerTask
  fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask
  type: Class
  summary: "<p>Specifies details of a Job Manager task. The Job Manager task is automatically started when the job is created. The Batch service tries to schedule the Job Manager task before any other tasks in the job. When shrinking a pool, the Batch service tries to preserve compute nodes where Job Manager tasks are running for as long as possible (that is, nodes running 'normal' tasks are removed before nodes running Job Manager tasks). When a Job Manager task fails and needs to be restarted, the system tries to schedule it at the highest priority. If there are no idle nodes available, the system may terminate one of the running tasks in the pool and return it to the queue in order to make room for the Job Manager task to restart. Note that a Job Manager task in one job does not have priority over tasks in other jobs. Across jobs, only job level priorities are observed. For example, if a Job Manager in a priority 0 job needs to be restarted, it will not displace tasks of a priority 1 job. Batch will retry tasks when a recovery operation is triggered on a compute node. Examples of recovery operations include (but are not limited to) when an unhealthy compute node is rebooted or a compute node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all tasks should be idempotent. This means tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running tasks is to use some form of checkpointing. </p>"
  syntax: *o1
