### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.SkipErrorFile"
fullName: "com.azure.resourcemanager.datafactory.models.SkipErrorFile"
name: "SkipErrorFile"
nameWithType: "SkipErrorFile"
summary: "Skip error file."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SkipErrorFile**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.SkipErrorFile?alt=com.azure.resourcemanager.datafactory.models.SkipErrorFile&text=SkipErrorFile\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.SkipErrorFile()"
  fullName: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.SkipErrorFile()"
  name: "SkipErrorFile()"
  nameWithType: "SkipErrorFile.SkipErrorFile()"
  summary: "Creates an instance of Skip<wbr>Error<wbr>File class."
  syntax: "public SkipErrorFile()"
  desc: "Creates an instance of SkipErrorFile class."
methods:
- uid: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.dataInconsistency()"
  fullName: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.dataInconsistency()"
  name: "dataInconsistency()"
  nameWithType: "SkipErrorFile.dataInconsistency()"
  summary: "Get the data<wbr>Inconsistency property: Skip if source/sink file changed by other concurrent write."
  syntax: "public Object dataInconsistency()"
  desc: "Get the dataInconsistency property: Skip if source/sink file changed by other concurrent write. Default is false. Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the dataInconsistency value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
- uid: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.fileMissing()"
  fullName: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.fileMissing()"
  name: "fileMissing()"
  nameWithType: "SkipErrorFile.fileMissing()"
  summary: "Get the file<wbr>Missing property: Skip if file is deleted by other client during copy."
  syntax: "public Object fileMissing()"
  desc: "Get the fileMissing property: Skip if file is deleted by other client during copy. Default is true. Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the fileMissing value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
- uid: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "SkipErrorFile.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Skip<wbr>Error<wbr>File from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SkipErrorFile fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the SkipErrorFile."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of SkipErrorFile from the JsonReader."
  returns:
    description: "An instance of SkipErrorFile if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SkipErrorFile?alt=com.azure.resourcemanager.datafactory.models.SkipErrorFile&text=SkipErrorFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "SkipErrorFile.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.validate()"
  name: "validate()"
  nameWithType: "SkipErrorFile.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.withDataInconsistency(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.withDataInconsistency(Object dataInconsistency)"
  name: "withDataInconsistency(Object dataInconsistency)"
  nameWithType: "SkipErrorFile.withDataInconsistency(Object dataInconsistency)"
  summary: "Set the data<wbr>Inconsistency property: Skip if source/sink file changed by other concurrent write."
  parameters:
  - description: "the dataInconsistency value to set."
    name: "dataInconsistency"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public SkipErrorFile withDataInconsistency(Object dataInconsistency)"
  desc: "Set the dataInconsistency property: Skip if source/sink file changed by other concurrent write. Default is false. Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the SkipErrorFile object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SkipErrorFile?alt=com.azure.resourcemanager.datafactory.models.SkipErrorFile&text=SkipErrorFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.withFileMissing(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SkipErrorFile.withFileMissing(Object fileMissing)"
  name: "withFileMissing(Object fileMissing)"
  nameWithType: "SkipErrorFile.withFileMissing(Object fileMissing)"
  summary: "Set the file<wbr>Missing property: Skip if file is deleted by other client during copy."
  parameters:
  - description: "the fileMissing value to set."
    name: "fileMissing"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public SkipErrorFile withFileMissing(Object fileMissing)"
  desc: "Set the fileMissing property: Skip if file is deleted by other client during copy. Default is true. Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the SkipErrorFile object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SkipErrorFile?alt=com.azure.resourcemanager.datafactory.models.SkipErrorFile&text=SkipErrorFile\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Skip error file."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.SkipErrorFile?alt=com.azure.resourcemanager.datafactory.models.SkipErrorFile&text=SkipErrorFile\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.1.0
