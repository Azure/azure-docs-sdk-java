### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile
  id: ManagedClusterWindowsProfile
  artifact: com.microsoft.azure:azure-mgmt-containerservice:1.38.0
  parent: com.microsoft.azure.management.containerservice
  children:
  - com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.ManagedClusterWindowsProfile()
  - com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.adminPassword()
  - com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.adminUsername()
  - com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.licenseType()
  - com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withAdminPassword(java.lang.String)
  - com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withAdminUsername(java.lang.String)
  - com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withLicenseType(com.microsoft.azure.management.containerservice.LicenseType)
  langs:
  - java
  name: ManagedClusterWindowsProfile
  nameWithType: ManagedClusterWindowsProfile
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile
  type: Class
  package: com.microsoft.azure.management.containerservice
  summary: Profile for Windows VMs in the container service cluster.
  syntax:
    content: public class ManagedClusterWindowsProfile
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.ManagedClusterWindowsProfile()
  id: ManagedClusterWindowsProfile()
  artifact: com.microsoft.azure:azure-mgmt-containerservice:1.38.0
  parent: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile
  langs:
  - java
  name: ManagedClusterWindowsProfile()
  nameWithType: ManagedClusterWindowsProfile.ManagedClusterWindowsProfile()
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.ManagedClusterWindowsProfile()
  overload: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.ManagedClusterWindowsProfile*
  type: Constructor
  package: com.microsoft.azure.management.containerservice
  syntax:
    content: public ManagedClusterWindowsProfile()
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.adminPassword()
  id: adminPassword()
  artifact: com.microsoft.azure:azure-mgmt-containerservice:1.38.0
  parent: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile
  langs:
  - java
  name: adminPassword()
  nameWithType: ManagedClusterWindowsProfile.adminPassword()
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.adminPassword()
  overload: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.adminPassword*
  type: Method
  package: com.microsoft.azure.management.containerservice
  summary: Get specifies the password of the administrator account. <br><br> \*\*Minimum-length:\*\* 8 characters <br><br> \*\*Max-length:\*\* 123 characters <br><br> \*\*Complexity requirements:\*\* 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match \[\\W\_\]) <br><br> \*\*Disallowed values:\*\* "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!".
  syntax:
    content: public String adminPassword()
    return:
      type: java.lang.String
      description: the adminPassword value
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.adminUsername()
  id: adminUsername()
  artifact: com.microsoft.azure:azure-mgmt-containerservice:1.38.0
  parent: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile
  langs:
  - java
  name: adminUsername()
  nameWithType: ManagedClusterWindowsProfile.adminUsername()
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.adminUsername()
  overload: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.adminUsername*
  type: Method
  package: com.microsoft.azure.management.containerservice
  summary: Get specifies the name of the administrator account. <br><br> \*\*restriction:\*\* Cannot end in "." <br><br> \*\*Disallowed values:\*\* "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support\_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> \*\*Minimum-length:\*\* 1 character <br><br> \*\*Max-length:\*\* 20 characters.
  syntax:
    content: public String adminUsername()
    return:
      type: java.lang.String
      description: the adminUsername value
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.licenseType()
  id: licenseType()
  artifact: com.microsoft.azure:azure-mgmt-containerservice:1.38.0
  parent: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile
  langs:
  - java
  name: licenseType()
  nameWithType: ManagedClusterWindowsProfile.licenseType()
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.licenseType()
  overload: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.licenseType*
  type: Method
  package: com.microsoft.azure.management.containerservice
  summary: "Get the licenseType to use for Windows VMs. Windows\\_Server is used to enable Azure Hybrid User Benefits for Windows VMs. Possible values include: 'None', 'Windows\\_Server'."
  syntax:
    content: public LicenseType licenseType()
    return:
      type: com.microsoft.azure.management.containerservice.LicenseType
      description: the licenseType value
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withAdminPassword(java.lang.String)
  id: withAdminPassword(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-containerservice:1.38.0
  parent: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile
  langs:
  - java
  name: withAdminPassword(String adminPassword)
  nameWithType: ManagedClusterWindowsProfile.withAdminPassword(String adminPassword)
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withAdminPassword(String adminPassword)
  overload: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withAdminPassword*
  type: Method
  package: com.microsoft.azure.management.containerservice
  summary: Set specifies the password of the administrator account. <br><br> \*\*Minimum-length:\*\* 8 characters <br><br> \*\*Max-length:\*\* 123 characters <br><br> \*\*Complexity requirements:\*\* 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match \[\\W\_\]) <br><br> \*\*Disallowed values:\*\* "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!".
  syntax:
    content: public ManagedClusterWindowsProfile withAdminPassword(String adminPassword)
    parameters:
    - id: adminPassword
      type: java.lang.String
      description: the adminPassword value to set
    return:
      type: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile
      description: the ManagedClusterWindowsProfile object itself.
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withAdminUsername(java.lang.String)
  id: withAdminUsername(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-containerservice:1.38.0
  parent: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile
  langs:
  - java
  name: withAdminUsername(String adminUsername)
  nameWithType: ManagedClusterWindowsProfile.withAdminUsername(String adminUsername)
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withAdminUsername(String adminUsername)
  overload: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withAdminUsername*
  type: Method
  package: com.microsoft.azure.management.containerservice
  summary: Set specifies the name of the administrator account. <br><br> \*\*restriction:\*\* Cannot end in "." <br><br> \*\*Disallowed values:\*\* "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support\_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> \*\*Minimum-length:\*\* 1 character <br><br> \*\*Max-length:\*\* 20 characters.
  syntax:
    content: public ManagedClusterWindowsProfile withAdminUsername(String adminUsername)
    parameters:
    - id: adminUsername
      type: java.lang.String
      description: the adminUsername value to set
    return:
      type: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile
      description: the ManagedClusterWindowsProfile object itself.
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withLicenseType(com.microsoft.azure.management.containerservice.LicenseType)
  id: withLicenseType(com.microsoft.azure.management.containerservice.LicenseType)
  artifact: com.microsoft.azure:azure-mgmt-containerservice:1.38.0
  parent: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile
  langs:
  - java
  name: withLicenseType(LicenseType licenseType)
  nameWithType: ManagedClusterWindowsProfile.withLicenseType(LicenseType licenseType)
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withLicenseType(LicenseType licenseType)
  overload: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withLicenseType*
  type: Method
  package: com.microsoft.azure.management.containerservice
  summary: "Set the licenseType to use for Windows VMs. Windows\\_Server is used to enable Azure Hybrid User Benefits for Windows VMs. Possible values include: 'None', 'Windows\\_Server'."
  syntax:
    content: public ManagedClusterWindowsProfile withLicenseType(LicenseType licenseType)
    parameters:
    - id: licenseType
      type: com.microsoft.azure.management.containerservice.LicenseType
      description: the licenseType value to set
    return:
      type: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile
      description: the ManagedClusterWindowsProfile object itself.
references:
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.ManagedClusterWindowsProfile*
  name: ManagedClusterWindowsProfile
  nameWithType: ManagedClusterWindowsProfile.ManagedClusterWindowsProfile
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.ManagedClusterWindowsProfile
  package: com.microsoft.azure.management.containerservice
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.adminUsername*
  name: adminUsername
  nameWithType: ManagedClusterWindowsProfile.adminUsername
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.adminUsername
  package: com.microsoft.azure.management.containerservice
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withAdminUsername*
  name: withAdminUsername
  nameWithType: ManagedClusterWindowsProfile.withAdminUsername
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withAdminUsername
  package: com.microsoft.azure.management.containerservice
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.adminPassword*
  name: adminPassword
  nameWithType: ManagedClusterWindowsProfile.adminPassword
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.adminPassword
  package: com.microsoft.azure.management.containerservice
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withAdminPassword*
  name: withAdminPassword
  nameWithType: ManagedClusterWindowsProfile.withAdminPassword
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withAdminPassword
  package: com.microsoft.azure.management.containerservice
- uid: com.microsoft.azure.management.containerservice.LicenseType
  name: LicenseType
  nameWithType: LicenseType
  fullName: com.microsoft.azure.management.containerservice.LicenseType
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.licenseType*
  name: licenseType
  nameWithType: ManagedClusterWindowsProfile.licenseType
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.licenseType
  package: com.microsoft.azure.management.containerservice
- uid: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withLicenseType*
  name: withLicenseType
  nameWithType: ManagedClusterWindowsProfile.withLicenseType
  fullName: com.microsoft.azure.management.containerservice.ManagedClusterWindowsProfile.withLicenseType
  package: com.microsoft.azure.management.containerservice
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
