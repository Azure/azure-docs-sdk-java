### YamlMime:JavaType
uid: "com.azure.resourcemanager.batch.models.Certificate"
fullName: "com.azure.resourcemanager.batch.models.Certificate"
name: "Certificate"
nameWithType: "Certificate"
summary: "An immutable client-side representation of Certificate."
syntax: "public interface Certificate"
methods:
- uid: "com.azure.resourcemanager.batch.models.Certificate.cancelDeletion()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.cancelDeletion()"
  name: "cancelDeletion()"
  nameWithType: "Certificate.cancelDeletion()"
  summary: "If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to delete<wbr>Failed."
  modifiers:
  - "abstract"
  syntax: "public abstract Certificate cancelDeletion()"
  desc: "If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate."
  returns:
    description: "contains information about a certificate."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.Certificate?alt=com.azure.resourcemanager.batch.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.cancelDeletionWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.cancelDeletionWithResponse(Context context)"
  name: "cancelDeletionWithResponse(Context context)"
  nameWithType: "Certificate.cancelDeletionWithResponse(Context context)"
  summary: "If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to delete<wbr>Failed."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Certificate> cancelDeletionWithResponse(Context context)"
  desc: "If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate."
  returns:
    description: "contains information about a certificate."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.Certificate?alt=com.azure.resourcemanager.batch.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.Certificate.deleteCertificateError()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.deleteCertificateError()"
  name: "deleteCertificateError()"
  nameWithType: "Certificate.deleteCertificateError()"
  summary: "Gets the delete<wbr>Certificate<wbr>Error property: This is only returned when the certificate provisioning<wbr>State is 'Failed'."
  modifiers:
  - "abstract"
  syntax: "public abstract DeleteCertificateError deleteCertificateError()"
  desc: "Gets the deleteCertificateError property: This is only returned when the certificate provisioningState is 'Failed'."
  returns:
    description: "the deleteCertificateError value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DeleteCertificateError?alt=com.azure.resourcemanager.batch.models.DeleteCertificateError&text=DeleteCertificateError\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.etag()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.etag()"
  name: "etag()"
  nameWithType: "Certificate.etag()"
  summary: "Gets the etag property: The ETag of the resource, used for concurrency statements."
  modifiers:
  - "abstract"
  syntax: "public abstract String etag()"
  desc: "Gets the etag property: The ETag of the resource, used for concurrency statements."
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.format()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.format()"
  name: "format()"
  nameWithType: "Certificate.format()"
  summary: "Gets the format property: The format of the certificate - either Pfx or Cer."
  modifiers:
  - "abstract"
  syntax: "public abstract CertificateFormat format()"
  desc: "Gets the format property: The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx."
  returns:
    description: "the format value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.CertificateFormat?alt=com.azure.resourcemanager.batch.models.CertificateFormat&text=CertificateFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.id()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.id()"
  name: "id()"
  nameWithType: "Certificate.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.innerModel()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.innerModel()"
  name: "innerModel()"
  nameWithType: "Certificate.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>batch.<wbr>fluent.<wbr>models.<wbr>Certificate<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract CertificateInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.batch.fluent.models.CertificateInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.CertificateInner?alt=com.azure.resourcemanager.batch.fluent.models.CertificateInner&text=CertificateInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.name()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.name()"
  name: "name()"
  nameWithType: "Certificate.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.previousProvisioningState()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.previousProvisioningState()"
  name: "previousProvisioningState()"
  nameWithType: "Certificate.previousProvisioningState()"
  summary: "Gets the previous<wbr>Provisioning<wbr>State property: The previous provisioned state of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract CertificateProvisioningState previousProvisioningState()"
  desc: "Gets the previousProvisioningState property: The previous provisioned state of the resource."
  returns:
    description: "the previousProvisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.CertificateProvisioningState?alt=com.azure.resourcemanager.batch.models.CertificateProvisioningState&text=CertificateProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.previousProvisioningStateTransitionTime()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.previousProvisioningStateTransitionTime()"
  name: "previousProvisioningStateTransitionTime()"
  nameWithType: "Certificate.previousProvisioningStateTransitionTime()"
  summary: "Gets the previous<wbr>Provisioning<wbr>State<wbr>Transition<wbr>Time property: The time at which the certificate entered its previous state."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime previousProvisioningStateTransitionTime()"
  desc: "Gets the previousProvisioningStateTransitionTime property: The time at which the certificate entered its previous state."
  returns:
    description: "the previousProvisioningStateTransitionTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.provisioningState()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.provisioningState()"
  name: "provisioningState()"
  nameWithType: "Certificate.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: The provisioning<wbr>State property."
  modifiers:
  - "abstract"
  syntax: "public abstract CertificateProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: The provisioningState property."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.CertificateProvisioningState?alt=com.azure.resourcemanager.batch.models.CertificateProvisioningState&text=CertificateProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.provisioningStateTransitionTime()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.provisioningStateTransitionTime()"
  name: "provisioningStateTransitionTime()"
  nameWithType: "Certificate.provisioningStateTransitionTime()"
  summary: "Gets the provisioning<wbr>State<wbr>Transition<wbr>Time property: The time at which the certificate entered its current state."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime provisioningStateTransitionTime()"
  desc: "Gets the provisioningStateTransitionTime property: The time at which the certificate entered its current state."
  returns:
    description: "the provisioningStateTransitionTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.publicData()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.publicData()"
  name: "publicData()"
  nameWithType: "Certificate.publicData()"
  summary: "Gets the public<wbr>Data property: The public key of the certificate."
  modifiers:
  - "abstract"
  syntax: "public abstract String publicData()"
  desc: "Gets the publicData property: The public key of the certificate."
  returns:
    description: "the publicData value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.refresh()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.refresh()"
  name: "refresh()"
  nameWithType: "Certificate.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract Certificate refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.Certificate?alt=com.azure.resourcemanager.batch.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "Certificate.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Certificate refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.Certificate?alt=com.azure.resourcemanager.batch.models.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.thumbprint()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.thumbprint()"
  name: "thumbprint()"
  nameWithType: "Certificate.thumbprint()"
  summary: "Gets the thumbprint property: The thumbprint of the certificate."
  modifiers:
  - "abstract"
  syntax: "public abstract String thumbprint()"
  desc: "Gets the thumbprint property: The thumbprint of the certificate. This must match the thumbprint from the name."
  returns:
    description: "the thumbprint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.thumbprintAlgorithm()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.thumbprintAlgorithm()"
  name: "thumbprintAlgorithm()"
  nameWithType: "Certificate.thumbprintAlgorithm()"
  summary: "Gets the thumbprint<wbr>Algorithm property: The algorithm of the certificate thumbprint."
  modifiers:
  - "abstract"
  syntax: "public abstract String thumbprintAlgorithm()"
  desc: "Gets the thumbprintAlgorithm property: The algorithm of the certificate thumbprint. This must match the first portion of the certificate name. Currently required to be 'SHA1'."
  returns:
    description: "the thumbprintAlgorithm value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.type()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.type()"
  name: "type()"
  nameWithType: "Certificate.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Certificate.update()"
  fullName: "com.azure.resourcemanager.batch.models.Certificate.update()"
  name: "update()"
  nameWithType: "Certificate.update()"
  summary: "Begins update for the Certificate resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Certificate.Update update()"
  desc: "Begins update for the Certificate resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.Certificate.Update?alt=com.azure.resourcemanager.batch.models.Certificate.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of Certificate."
metadata: {}
package: "com.azure.resourcemanager.batch.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batch:1.0.0
