### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.compute.DiskInstanceView.encryptionSettings()
  name: encryptionSettings()
  nameWithType: DiskInstanceView.encryptionSettings()
  returns:
    description: <p>the encryptionSettings value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.compute.DiskEncryptionSettings?alt=com.microsoft.azure.management.compute.DiskEncryptionSettings&text=DiskEncryptionSettings" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the encryptionSettings value.</p>

    <p></p>
  syntax: public List<DiskEncryptionSettings> encryptionSettings()
  uid: com.microsoft.azure.management.compute.DiskInstanceView.encryptionSettings()
- fullName: com.microsoft.azure.management.compute.DiskInstanceView.name()
  name: name()
  nameWithType: DiskInstanceView.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name value.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.compute.DiskInstanceView.name()
- fullName: com.microsoft.azure.management.compute.DiskInstanceView.statuses()
  name: statuses()
  nameWithType: DiskInstanceView.statuses()
  returns:
    description: <p>the statuses value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.compute.InstanceViewStatus?alt=com.microsoft.azure.management.compute.InstanceViewStatus&text=InstanceViewStatus" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the statuses value.</p>

    <p></p>
  syntax: public List<InstanceViewStatus> statuses()
  uid: com.microsoft.azure.management.compute.DiskInstanceView.statuses()
- fullName: com.microsoft.azure.management.compute.DiskInstanceView.withEncryptionSettings(List<DiskEncryptionSettings> encryptionSettings)
  name: withEncryptionSettings(List<DiskEncryptionSettings> encryptionSettings)
  nameWithType: DiskInstanceView.withEncryptionSettings(List<DiskEncryptionSettings> encryptionSettings)
  parameters:
  - description: <p>the encryptionSettings value to set </p>
    name: encryptionSettings
    type: List&lt;<xref href="com.microsoft.azure.management.compute.DiskEncryptionSettings?alt=com.microsoft.azure.management.compute.DiskEncryptionSettings&text=DiskEncryptionSettings" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the DiskInstanceView object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.DiskInstanceView?alt=com.microsoft.azure.management.compute.DiskInstanceView&text=DiskInstanceView" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the encryptionSettings value.</p>

    <p></p>
  syntax: public DiskInstanceView withEncryptionSettings(List<DiskEncryptionSettings> encryptionSettings)
  uid: com.microsoft.azure.management.compute.DiskInstanceView.withEncryptionSettings(List<DiskEncryptionSettings>)
- fullName: com.microsoft.azure.management.compute.DiskInstanceView.withName(String name)
  name: withName(String name)
  nameWithType: DiskInstanceView.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DiskInstanceView object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.DiskInstanceView?alt=com.microsoft.azure.management.compute.DiskInstanceView&text=DiskInstanceView" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name value.</p>

    <p></p>
  syntax: public DiskInstanceView withName(String name)
  uid: com.microsoft.azure.management.compute.DiskInstanceView.withName(String)
- fullName: com.microsoft.azure.management.compute.DiskInstanceView.withStatuses(List<InstanceViewStatus> statuses)
  name: withStatuses(List<InstanceViewStatus> statuses)
  nameWithType: DiskInstanceView.withStatuses(List<InstanceViewStatus> statuses)
  parameters:
  - description: <p>the statuses value to set </p>
    name: statuses
    type: List&lt;<xref href="com.microsoft.azure.management.compute.InstanceViewStatus?alt=com.microsoft.azure.management.compute.InstanceViewStatus&text=InstanceViewStatus" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the DiskInstanceView object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.DiskInstanceView?alt=com.microsoft.azure.management.compute.DiskInstanceView&text=DiskInstanceView" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the statuses value.</p>

    <p></p>
  syntax: public DiskInstanceView withStatuses(List<InstanceViewStatus> statuses)
  uid: com.microsoft.azure.management.compute.DiskInstanceView.withStatuses(List<InstanceViewStatus>)
nameWithType: DiskInstanceView
syntax: public class DiskInstanceView
type: class
uid: com.microsoft.azure.management.compute.DiskInstanceView
fullName: com.microsoft.azure.management.compute.DiskInstanceView
name: DiskInstanceView
package: com.microsoft.azure.management.compute
summary: <p>The instance view of the disk. </p>
metadata: {}
