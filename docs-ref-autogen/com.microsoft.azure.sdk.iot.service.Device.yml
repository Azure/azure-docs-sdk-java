### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.Device"
fullName: "com.microsoft.azure.sdk.iot.service.Device"
name: "Device"
nameWithType: "Device"
summary: "The Device class extends the Base<wbr>Device class implementing constructors and serialization functionality."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.sdk.iot.service.BaseDevice.getAuthenticationType()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.getCloudToDeviceMessageCount()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.getConnectionState()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.getConnectionStateUpdatedTime()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.getDeviceId()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.getGenerationId()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.getLastActivityTime()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.getPrimaryKey()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.getPrimaryThumbprint()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.getSecondaryKey()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.getSecondaryThumbprint()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.getSymmetricKey()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.geteTag()"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.setForceUpdate(java.lang.Boolean)"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.setSymmetricKey(com.microsoft.azure.sdk.iot.service.auth.SymmetricKey)"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.setThumbprint(java.lang.String,java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.BaseDevice.setThumbprintFinal(java.lang.String,java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Device extends BaseDevice"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.Device.Device(java.lang.String,com.microsoft.azure.sdk.iot.service.DeviceStatus,com.microsoft.azure.sdk.iot.service.auth.SymmetricKey)"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.Device(String deviceId, DeviceStatus status, SymmetricKey symmetricKey)"
  name: "Device(String deviceId, DeviceStatus status, SymmetricKey symmetricKey)"
  nameWithType: "Device.Device(String deviceId, DeviceStatus status, SymmetricKey symmetricKey)"
  summary: "Create an Device instance using the given device name."
  modifiers:
  - "protected"
  parameters:
  - description: "Name of the device (used as device id)"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Device status. If parameter is null, then the status will be set to <code>\"Enabled\"</code>."
    name: "status"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.DeviceStatus?alt=com.microsoft.azure.sdk.iot.service.DeviceStatus&text=DeviceStatus\" data-throw-if-not-resolved=\"False\" />"
  - description: "Device key. If parameter is <code>null</code>, then the key will be auto-generated."
    name: "symmetricKey"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.auth.SymmetricKey?alt=com.microsoft.azure.sdk.iot.service.auth.SymmetricKey&text=SymmetricKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Device(String deviceId, DeviceStatus status, SymmetricKey symmetricKey)"
  exceptions:
  - description: "This exception is thrown if the encryption method is not supported by the key\n generator."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Create an Device instance using the given device name."
fields:
- uid: "com.microsoft.azure.sdk.iot.service.Device.capabilities"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.capabilities"
  name: "capabilities"
  nameWithType: "Device.capabilities"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.twin.DeviceCapabilities?alt=com.microsoft.azure.sdk.iot.deps.twin.DeviceCapabilities&text=DeviceCapabilities\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected DeviceCapabilities capabilities"
- uid: "com.microsoft.azure.sdk.iot.service.Device.parentScopes"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.parentScopes"
  name: "parentScopes"
  nameWithType: "Device.parentScopes"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected List<String> parentScopes"
- uid: "com.microsoft.azure.sdk.iot.service.Device.scope"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.scope"
  name: "scope"
  nameWithType: "Device.scope"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected String scope"
- uid: "com.microsoft.azure.sdk.iot.service.Device.status"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.status"
  name: "status"
  nameWithType: "Device.status"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.DeviceStatus?alt=com.microsoft.azure.sdk.iot.service.DeviceStatus&text=DeviceStatus\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected DeviceStatus status"
- uid: "com.microsoft.azure.sdk.iot.service.Device.statusReason"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.statusReason"
  name: "statusReason"
  nameWithType: "Device.statusReason"
  summary: "A 128 char long string storing the reason of suspension (all UTF-8 chars allowed)."
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected String statusReason"
  desc: "A 128 char long string storing the reason of suspension (all UTF-8 chars allowed)."
- uid: "com.microsoft.azure.sdk.iot.service.Device.statusUpdatedTime"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.statusUpdatedTime"
  name: "statusUpdatedTime"
  nameWithType: "Device.statusUpdatedTime"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected String statusUpdatedTime"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.Device.createDevice(java.lang.String,com.microsoft.azure.sdk.iot.service.auth.AuthenticationType)"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.createDevice(String deviceId, AuthenticationType authenticationType)"
  name: "createDevice(String deviceId, AuthenticationType authenticationType)"
  nameWithType: "Device.createDevice(String deviceId, AuthenticationType authenticationType)"
  summary: "Static create function."
  modifiers:
  - "static"
  parameters:
  - description: "String containing the device name."
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The type of authentication used by this device."
    name: "authenticationType"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.auth.AuthenticationType?alt=com.microsoft.azure.sdk.iot.service.auth.AuthenticationType&text=AuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Device createDevice(String deviceId, AuthenticationType authenticationType)"
  desc: "Static create function. Creates device object using the given name that will use a Certificate Authority signed certificate for authentication. If input device status is `null` then it will be auto-generated."
  returns:
    description: "Device object."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Device.createFromId(java.lang.String,com.microsoft.azure.sdk.iot.service.DeviceStatus,com.microsoft.azure.sdk.iot.service.auth.SymmetricKey)"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.createFromId(String deviceId, DeviceStatus status, SymmetricKey symmetricKey)"
  name: "createFromId(String deviceId, DeviceStatus status, SymmetricKey symmetricKey)"
  nameWithType: "Device.createFromId(String deviceId, DeviceStatus status, SymmetricKey symmetricKey)"
  summary: "Static create function."
  modifiers:
  - "static"
  parameters:
  - description: "String containing the device name."
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Device status. If parameter is null, then the status will be set to <code>\"Enabled\"</code>."
    name: "status"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.DeviceStatus?alt=com.microsoft.azure.sdk.iot.service.DeviceStatus&text=DeviceStatus\" data-throw-if-not-resolved=\"False\" />"
  - description: "Device key. If parameter is null, then the key will be auto generated."
    name: "symmetricKey"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.auth.SymmetricKey?alt=com.microsoft.azure.sdk.iot.service.auth.SymmetricKey&text=SymmetricKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Device createFromId(String deviceId, DeviceStatus status, SymmetricKey symmetricKey)"
  exceptions:
  - description: "This exception is thrown if <code>deviceId</code> is <code>null</code> or empty."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Static create function. Creates device object using the given name. If input device status and symmetric key are null then they will be auto generated."
  returns:
    description: "Device object"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Device.getCapabilities()"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.getCapabilities()"
  name: "getCapabilities()"
  nameWithType: "Device.getCapabilities()"
  summary: "Getter for capabilities."
  syntax: "public DeviceCapabilities getCapabilities()"
  desc: "Getter for capabilities."
  returns:
    description: "The DeviceCapabilities containing capabilities that are enabled on the device."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.twin.DeviceCapabilities?alt=com.microsoft.azure.sdk.iot.deps.twin.DeviceCapabilities&text=DeviceCapabilities\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Device.getParentScopes()"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.getParentScopes()"
  name: "getParentScopes()"
  nameWithType: "Device.getParentScopes()"
  summary: "Gets the scopes of the upper level edge devices, if applicable."
  syntax: "public List<String> getParentScopes()"
  desc: "Gets the scopes of the upper level edge devices, if applicable.\n\nFor edge devices, the value to set a parent edge device can be retrieved from the calling parent edge device's <xref uid=\"com.microsoft.azure.sdk.iot.service.Device.getScope()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getScope()\"></xref> method.\n\nFor leaf devices, this could be set to the same value as <xref uid=\"com.microsoft.azure.sdk.iot.service.Device.getScope()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getScope()\"></xref> or left for the service to copy over.\n\nFor now, this list can only have 1 element in the collection.\n\nFor more information, see [this document][].\n\n\n[this document]: https://docs.microsoft.com/azure/iot-edge/iot-edge-as-gateway?view=iotedge-2020-11#parent-and-child-relationships"
  returns:
    description: "The parent scopes for this device."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.Device.getScope()"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.getScope()"
  name: "getScope()"
  nameWithType: "Device.getScope()"
  summary: "Gets the scope of the device."
  syntax: "public String getScope()"
  desc: "Gets the scope of the device."
  returns:
    description: "The scope for this device."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Device.getStatus()"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.getStatus()"
  name: "getStatus()"
  nameWithType: "Device.getStatus()"
  summary: "Getter for Device<wbr>Status object."
  syntax: "public DeviceStatus getStatus()"
  desc: "Getter for DeviceStatus object. Values: `\"Enabled\"`, `\"Disabled\"`. If `\"Enabled\"`, this device is authorized to connect. If `\"Disabled\"` this device cannot receive or send messages, and <xref uid=\"com.microsoft.azure.sdk.iot.service.Device.statusReason\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#statusReason\"></xref> must be set."
  returns:
    description: "The deviceStatus object."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.DeviceStatus?alt=com.microsoft.azure.sdk.iot.service.DeviceStatus&text=DeviceStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Device.getStatusReason()"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.getStatusReason()"
  name: "getStatusReason()"
  nameWithType: "Device.getStatusReason()"
  summary: "Getter for status reason."
  syntax: "public String getStatusReason()"
  desc: "Getter for status reason."
  returns:
    description: "The statusReason string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Device.getStatusUpdatedTime()"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.getStatusUpdatedTime()"
  name: "getStatusUpdatedTime()"
  nameWithType: "Device.getStatusUpdatedTime()"
  summary: "Getter for status updated on string."
  syntax: "public String getStatusUpdatedTime()"
  desc: "Getter for status updated on string."
  returns:
    description: "The string containing the time when the statusUpdatedTime object was updated."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Device.setCapabilities(com.microsoft.azure.sdk.iot.deps.twin.DeviceCapabilities)"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.setCapabilities(DeviceCapabilities capabilities)"
  name: "setCapabilities(DeviceCapabilities capabilities)"
  nameWithType: "Device.setCapabilities(DeviceCapabilities capabilities)"
  summary: "Setter for Device<wbr>Capabilities object."
  parameters:
  - description: "Capabilities to be set."
    name: "capabilities"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.twin.DeviceCapabilities?alt=com.microsoft.azure.sdk.iot.deps.twin.DeviceCapabilities&text=DeviceCapabilities\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setCapabilities(DeviceCapabilities capabilities)"
  desc: "Setter for DeviceCapabilities object."
- uid: "com.microsoft.azure.sdk.iot.service.Device.setScope(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.setScope(String scope)"
  name: "setScope(String scope)"
  nameWithType: "Device.setScope(String scope)"
  summary: "Sets the scope of the device."
  parameters:
  - description: "The device scope to set."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setScope(String scope)"
  desc: "Sets the scope of the device.\n\nFor edge devices, this is auto-generated and immutable.\n\nFor leaf devices, set this to create child/parent relationship. The value to set a parent edge device can be retrieved from calling the parent edge device's <xref uid=\"com.microsoft.azure.sdk.iot.service.Device.getScope()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getScope()\"></xref> method.\n\nFor more information, see [this document][].\n\n\n[this document]: https://docs.microsoft.com/azure/iot-edge/iot-edge-as-gateway?view=iotedge-2020-11#parent-and-child-relationships"
- uid: "com.microsoft.azure.sdk.iot.service.Device.setStatus(com.microsoft.azure.sdk.iot.service.DeviceStatus)"
  fullName: "com.microsoft.azure.sdk.iot.service.Device.setStatus(DeviceStatus status)"
  name: "setStatus(DeviceStatus status)"
  nameWithType: "Device.setStatus(DeviceStatus status)"
  summary: "Setter for Device<wbr>Status object."
  parameters:
  - description: "status to be set."
    name: "status"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.DeviceStatus?alt=com.microsoft.azure.sdk.iot.service.DeviceStatus&text=DeviceStatus\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setStatus(DeviceStatus status)"
  desc: "Setter for DeviceStatus object. Values: `\"Enabled\"`, `\"Disabled\"`. If `\"Enabled\"`, this device is authorized to connect. If `\"Disabled\"` this device cannot receive or send messages, and statusReason must be set."
type: "class"
desc: "The Device class extends the BaseDevice class implementing constructors and serialization functionality."
metadata: {}
package: "com.microsoft.azure.sdk.iot.service"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.30.0
