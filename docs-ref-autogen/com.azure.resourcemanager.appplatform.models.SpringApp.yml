### YamlMime:JavaType
uid: "com.azure.resourcemanager.appplatform.models.SpringApp"
fullName: "com.azure.resourcemanager.appplatform.models.SpringApp"
name: "SpringApp"
nameWithType: "SpringApp"
summary: "An immutable client-side representation of an Azure Spring App."
syntax: "public interface SpringApp extends ExternalChildResource<SpringApp,SpringService>, HasInnerModel<AppResourceInner>, Updatable<SpringApp.Update>"
methods:
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.<T>deployments()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.<T>deployments()"
  name: "<T>deployments()"
  nameWithType: "SpringApp.<T>deployments()"
  modifiers:
  - "abstract"
  syntax: "public abstract SpringAppDeployments<T> <T>deployments()"
  returns:
    description: "the entry point of the spring app deployment"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.SpringAppDeployments?alt=com.azure.resourcemanager.appplatform.models.SpringAppDeployments&text=SpringAppDeployments\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.activeDeploymentName()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.activeDeploymentName()"
  name: "activeDeploymentName()"
  nameWithType: "SpringApp.activeDeploymentName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String activeDeploymentName()"
  returns:
    description: "the active deployment name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.customDomains()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.customDomains()"
  name: "customDomains()"
  nameWithType: "SpringApp.customDomains()"
  modifiers:
  - "abstract"
  syntax: "public abstract SpringAppDomains customDomains()"
  returns:
    description: "the entry point of the spring app custom domain"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.SpringAppDomains?alt=com.azure.resourcemanager.appplatform.models.SpringAppDomains&text=SpringAppDomains\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.fqdn()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.fqdn()"
  name: "fqdn()"
  nameWithType: "SpringApp.fqdn()"
  modifiers:
  - "abstract"
  syntax: "public abstract String fqdn()"
  returns:
    description: "the fully qualified domain name (FQDN) of the app"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.getActiveDeployment()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.getActiveDeployment()"
  name: "getActiveDeployment()"
  nameWithType: "SpringApp.getActiveDeployment()"
  modifiers:
  - "abstract"
  syntax: "public abstract SpringAppDeployment getActiveDeployment()"
  returns:
    description: "the active deployment"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.SpringAppDeployment?alt=com.azure.resourcemanager.appplatform.models.SpringAppDeployment&text=SpringAppDeployment\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.getActiveDeploymentAsync()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.getActiveDeploymentAsync()"
  name: "getActiveDeploymentAsync()"
  nameWithType: "SpringApp.getActiveDeploymentAsync()"
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<SpringAppDeployment> getActiveDeploymentAsync()"
  returns:
    description: "the active deployment"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.SpringAppDeployment?alt=com.azure.resourcemanager.appplatform.models.SpringAppDeployment&text=SpringAppDeployment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.getResourceUploadUrl()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.getResourceUploadUrl()"
  name: "getResourceUploadUrl()"
  nameWithType: "SpringApp.getResourceUploadUrl()"
  modifiers:
  - "abstract"
  syntax: "public abstract ResourceUploadDefinition getResourceUploadUrl()"
  returns:
    description: "the blob url to upload deployment"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.ResourceUploadDefinition?alt=com.azure.resourcemanager.appplatform.models.ResourceUploadDefinition&text=ResourceUploadDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.getResourceUploadUrlAsync()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.getResourceUploadUrlAsync()"
  name: "getResourceUploadUrlAsync()"
  nameWithType: "SpringApp.getResourceUploadUrlAsync()"
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<ResourceUploadDefinition> getResourceUploadUrlAsync()"
  returns:
    description: "the blob url to upload deployment"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.ResourceUploadDefinition?alt=com.azure.resourcemanager.appplatform.models.ResourceUploadDefinition&text=ResourceUploadDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.hasConfigurationServiceBinding()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.hasConfigurationServiceBinding()"
  name: "hasConfigurationServiceBinding()"
  nameWithType: "SpringApp.hasConfigurationServiceBinding()"
  summary: "(Enterprise Tier Only)"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean hasConfigurationServiceBinding()"
  desc: "(Enterprise Tier Only)"
  returns:
    description: "whether this app has binding to the default Configuration Service"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.hasServiceRegistryBinding()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.hasServiceRegistryBinding()"
  name: "hasServiceRegistryBinding()"
  nameWithType: "SpringApp.hasServiceRegistryBinding()"
  summary: "(Enterprise Tier Only)"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean hasServiceRegistryBinding()"
  desc: "(Enterprise Tier Only)"
  returns:
    description: "whether this app has binding to the default Service Registry"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.identity()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.identity()"
  name: "identity()"
  nameWithType: "SpringApp.identity()"
  modifiers:
  - "abstract"
  syntax: "public abstract ManagedIdentityProperties identity()"
  returns:
    description: "the identity property of the app"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.ManagedIdentityProperties?alt=com.azure.resourcemanager.appplatform.models.ManagedIdentityProperties&text=ManagedIdentityProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.isHttpsOnly()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.isHttpsOnly()"
  name: "isHttpsOnly()"
  nameWithType: "SpringApp.isHttpsOnly()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isHttpsOnly()"
  returns:
    description: "whether only https is allowed for the app"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.isPublic()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.isPublic()"
  name: "isPublic()"
  nameWithType: "SpringApp.isPublic()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isPublic()"
  returns:
    description: "whether the app exposes public endpoint"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.persistentDisk()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.persistentDisk()"
  name: "persistentDisk()"
  nameWithType: "SpringApp.persistentDisk()"
  modifiers:
  - "abstract"
  syntax: "public abstract PersistentDisk persistentDisk()"
  returns:
    description: "the persistent disk of the app"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.PersistentDisk?alt=com.azure.resourcemanager.appplatform.models.PersistentDisk&text=PersistentDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.serviceBindings()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.serviceBindings()"
  name: "serviceBindings()"
  nameWithType: "SpringApp.serviceBindings()"
  modifiers:
  - "abstract"
  syntax: "public abstract SpringAppServiceBindings serviceBindings()"
  returns:
    description: "the entry point of the spring app service binding"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.SpringAppServiceBindings?alt=com.azure.resourcemanager.appplatform.models.SpringAppServiceBindings&text=SpringAppServiceBindings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.temporaryDisk()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.temporaryDisk()"
  name: "temporaryDisk()"
  nameWithType: "SpringApp.temporaryDisk()"
  modifiers:
  - "abstract"
  syntax: "public abstract TemporaryDisk temporaryDisk()"
  returns:
    description: "the temporary disk of the app"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.TemporaryDisk?alt=com.azure.resourcemanager.appplatform.models.TemporaryDisk&text=TemporaryDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringApp.url()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringApp.url()"
  name: "url()"
  nameWithType: "SpringApp.url()"
  modifiers:
  - "abstract"
  syntax: "public abstract String url()"
  returns:
    description: "the url of the app"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
type: "interface"
desc: "An immutable client-side representation of an Azure Spring App."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.ExternalChildResource?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.ExternalChildResource&text=ExternalChildResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.SpringApp?alt=com.azure.resourcemanager.appplatform.models.SpringApp&text=SpringApp\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.appplatform.models.SpringService?alt=com.azure.resourcemanager.appplatform.models.SpringService&text=SpringService\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel?alt=com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel&text=HasInnerModel\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.AppResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.AppResourceInner&text=AppResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Updatable?alt=com.azure.resourcemanager.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.SpringApp.Update?alt=com.azure.resourcemanager.appplatform.models.SpringApp.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.appplatform.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.19.0
