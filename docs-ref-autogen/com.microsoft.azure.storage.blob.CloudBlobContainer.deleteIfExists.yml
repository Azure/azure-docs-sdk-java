### YamlMime:JavaMember
nameWithType: CloudBlobContainer.deleteIfExists
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists()
  name: deleteIfExists()
  nameWithType: CloudBlobContainer.deleteIfExists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the container did not already exist and was created; otherwise, <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the container if it exists.</p>

    <p></p>
  syntax: public boolean deleteIfExists()
  uid: com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists()
- fullName: com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: deleteIfExists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlobContainer.deleteIfExists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the container. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false">CloudBlobClient</xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the container existed and was deleted; otherwise, <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the container if it exists using the specified request options and operation context.</p>

    <p></p>
  syntax: public boolean deleteIfExists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists(AccessCondition,BlobRequestOptions,OperationContext)
uid: com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists*
fullName: com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists()
name: deleteIfExists()
package: com.microsoft.azure.storage.blob
metadata: {}
