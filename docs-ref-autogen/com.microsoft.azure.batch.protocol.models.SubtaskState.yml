### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState
  id: SubtaskState
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.SubtaskState.COMPLETED
  - com.microsoft.azure.batch.protocol.models.SubtaskState.PREPARING
  - com.microsoft.azure.batch.protocol.models.SubtaskState.RUNNING
  - com.microsoft.azure.batch.protocol.models.SubtaskState.fromString(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.SubtaskState.toString()
  - com.microsoft.azure.batch.protocol.models.SubtaskState.valueOf(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.SubtaskState.values()
  langs:
  - java
  name: SubtaskState
  nameWithType: SubtaskState
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState
  type: Enum
  package: com.microsoft.azure.batch.protocol.models
  summary: Defines values for SubtaskState.
  syntax:
    content: public enum SubtaskState extends Enum<SubtaskState>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.COMPLETED
  id: COMPLETED
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskState
  langs:
  - java
  name: COMPLETED
  nameWithType: SubtaskState.COMPLETED
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.COMPLETED
  type: Field
  package: com.microsoft.azure.batch.protocol.models
  summary: The Task is no longer eligible to run, usually because the Task has finished successfully, or the Task has finished unsuccessfully and has exhausted its retry limit. A Task is also marked as completed if an error occurred launching the Task, or when the Task has been terminated.
  syntax:
    content: public static final SubtaskState COMPLETED
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskState
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.PREPARING
  id: PREPARING
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskState
  langs:
  - java
  name: PREPARING
  nameWithType: SubtaskState.PREPARING
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.PREPARING
  type: Field
  package: com.microsoft.azure.batch.protocol.models
  summary: The Task has been assigned to a Compute Node, but is waiting for a required Job Preparation Task to complete on the Compute Node. If the Job Preparation Task succeeds, the Task will move to running. If the Job Preparation Task fails, the Task will return to active and will be eligible to be assigned to a different Compute Node.
  syntax:
    content: public static final SubtaskState PREPARING
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskState
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.RUNNING
  id: RUNNING
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskState
  langs:
  - java
  name: RUNNING
  nameWithType: SubtaskState.RUNNING
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.RUNNING
  type: Field
  package: com.microsoft.azure.batch.protocol.models
  summary: The Task is running on a Compute Node. This includes task-level preparation such as downloading resource files or deploying Packages specified on the Task - it does not necessarily mean that the Task command line has started executing.
  syntax:
    content: public static final SubtaskState RUNNING
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskState
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.SubtaskState(java.lang.String)
  id: SubtaskState(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskState
  langs:
  - java
  name: SubtaskState(String value)
  nameWithType: SubtaskState.SubtaskState(String value)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.SubtaskState(String value)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskState.SubtaskState*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: private SubtaskState(String value)
    parameters:
    - id: value
      type: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.fromString(java.lang.String)
  id: fromString(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskState
  langs:
  - java
  name: fromString(String value)
  nameWithType: SubtaskState.fromString(String value)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.fromString(String value)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskState.fromString*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Parses a serialized value to a SubtaskState instance.
  syntax:
    content: public static SubtaskState fromString(String value)
    parameters:
    - id: value
      type: java.lang.String
      description: the serialized value to parse.
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskState
      description: the parsed SubtaskState object, or null if unable to parse.
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.toString()
  id: toString()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskState
  langs:
  - java
  name: toString()
  nameWithType: SubtaskState.toString()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.toString()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskState.toString*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskState
  langs:
  - java
  name: valueOf(String name)
  nameWithType: SubtaskState.valueOf(String name)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.valueOf(String name)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskState.valueOf*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public static SubtaskState valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskState
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.values()
  id: values()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskState
  langs:
  - java
  name: values()
  nameWithType: SubtaskState.values()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.values()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskState.values*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public static SubtaskState[] values()
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskState[]
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.SubtaskState*
  name: SubtaskState
  nameWithType: SubtaskState.SubtaskState
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.SubtaskState
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState[]
  spec.java:
  - uid: com.microsoft.azure.batch.protocol.models.SubtaskState
    name: SubtaskState
    fullName: com.microsoft.azure.batch.protocol.models.SubtaskState
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.values*
  name: values
  nameWithType: SubtaskState.values
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.values
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.valueOf*
  name: valueOf
  nameWithType: SubtaskState.valueOf
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.valueOf
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.fromString*
  name: fromString
  nameWithType: SubtaskState.fromString
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.fromString
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState.toString*
  name: toString
  nameWithType: SubtaskState.toString
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState.toString
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Enum<com.microsoft.azure.batch.protocol.models.SubtaskState>
  name: Enum<SubtaskState>
  nameWithType: Enum<SubtaskState>
  fullName: java.lang.Enum<com.microsoft.azure.batch.protocol.models.SubtaskState>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
