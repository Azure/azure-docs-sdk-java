### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  id: ComputerVision
  parent: com.microsoft.azure.cognitiveservices.vision.computervision
  children:
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage(String,AnalyzeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync(String,AnalyzeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain(String,String,AnalyzeImageByDomainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream(byte [],AnalyzeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage(String,DescribeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync(String,DescribeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream(byte [],DescribeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjects(String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsAsync(String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStream(byte [])
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStreamAsync(byte [])
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail(int,int,String,GenerateThumbnailOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterest(String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestAsync(String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStream(byte [])
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStreamAsync(byte [])
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResult(UUID)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResultAsync(UUID)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read(String,ReadOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readAsync(String,ReadOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream(byte [],ReadInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStreamAsync(byte [],ReadInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText(boolean,String,RecognizePrintedTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage(String,TagImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync(String,TagImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream(byte [],TagImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter)
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: ComputerVision
  nameWithType: ComputerVision
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  type: Interface
  source:
    remote: &o0
      path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 49
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>An instance of this class provides access to all the operations defined in ComputerVision. </p>"
  syntax:
    content: public interface ComputerVision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage()
  id: analyzeImage()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: analyzeImage()
  nameWithType: ComputerVision.analyzeImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1826
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionAnalyzeImageDefinitionStages.WithUrl analyzeImage()
    return:
      type: 8c7df68d
      description: <p>the first stage of the analyzeImage call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage(String,AnalyzeImageOptionalParameter)
  id: analyzeImage(String,AnalyzeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  nameWithType: ComputerVision.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1798
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ImageAnalysis analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
      description: <p>the ImageAnalysis object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync(String,AnalyzeImageOptionalParameter)
  id: analyzeImageAsync(String,AnalyzeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  nameWithType: ComputerVision.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1814
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageAnalysis> analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
      description: <p>the observable to the ImageAnalysis object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain()
  id: analyzeImageByDomain()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: analyzeImageByDomain()
  nameWithType: ComputerVision.analyzeImageByDomain()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1531
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel analyzeImageByDomain()
    return:
      type: 45c47c42
      description: <p>the first stage of the analyzeImageByDomain call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain(String,String,AnalyzeImageByDomainOptionalParameter)
  id: analyzeImageByDomain(String,String,AnalyzeImageByDomainOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1500
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public DomainModelResults analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
      description: <p>the DomainModelResults object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  id: analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1518
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DomainModelResults> analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
      description: <p>the observable to the DomainModelResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream()
  id: analyzeImageByDomainInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: analyzeImageByDomainInStream()
  nameWithType: ComputerVision.analyzeImageByDomainInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 429
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionAnalyzeImageByDomainInStreamDefinitionStages.WithModel analyzeImageByDomainInStream()
    return:
      type: 3609dfc8
      description: <p>the first stage of the analyzeImageByDomainInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  id: analyzeImageByDomainInStream(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 398
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public DomainModelResults analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
      description: <p>the DomainModelResults object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  id: analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 416
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DomainModelResults> analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
      description: <p>the observable to the DomainModelResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream()
  id: analyzeImageInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: analyzeImageInStream()
  nameWithType: ComputerVision.analyzeImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 865
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionAnalyzeImageInStreamDefinitionStages.WithImage analyzeImageInStream()
    return:
      type: 9ad9f102
      description: <p>the first stage of the analyzeImageInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream(byte [],AnalyzeImageInStreamOptionalParameter)
  id: analyzeImageInStream(byte [],AnalyzeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 837
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ImageAnalysis analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
      description: <p>the ImageAnalysis object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  id: analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 853
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageAnalysis> analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
      description: <p>the observable to the ImageAnalysis object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage()
  id: describeImage()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: describeImage()
  nameWithType: ComputerVision.describeImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1707
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionDescribeImageDefinitionStages.WithUrl describeImage()
    return:
      type: a37ccca7
      description: <p>the first stage of the describeImage call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage(String,DescribeImageOptionalParameter)
  id: describeImage(String,DescribeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  nameWithType: ComputerVision.describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1677
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ImageDescription describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
      description: <p>the ImageDescription object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync(String,DescribeImageOptionalParameter)
  id: describeImageAsync(String,DescribeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  nameWithType: ComputerVision.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1694
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageDescription> describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
      description: <p>the observable to the ImageDescription object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream()
  id: describeImageInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: describeImageInStream()
  nameWithType: ComputerVision.describeImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 714
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionDescribeImageInStreamDefinitionStages.WithImage describeImageInStream()
    return:
      type: "70169043"
      description: <p>the first stage of the describeImageInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream(byte [],DescribeImageInStreamOptionalParameter)
  id: describeImageInStream(byte [],DescribeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 684
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ImageDescription describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
      description: <p>the ImageDescription object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter)
  id: describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 701
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageDescription> describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
      description: <p>the observable to the ImageDescription object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjects(String)
  id: detectObjects(String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: detectObjects(String url)
  nameWithType: ComputerVision.detectObjects(String url)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjects(String url)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjects*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1645
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Performs object detection on the specified image. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public DetectResult detectObjects(String url)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
      description: <p>the DetectResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsAsync(String)
  id: detectObjectsAsync(String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: detectObjectsAsync(String url)
  nameWithType: ComputerVision.detectObjectsAsync(String url)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsAsync(String url)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1657
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Performs object detection on the specified image. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DetectResult> detectObjectsAsync(String url)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResulta08ddfce
      description: <p>the observable to the DetectResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStream(byte [])
  id: detectObjectsInStream(byte [])
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: detectObjectsInStream(byte[] image)
  nameWithType: ComputerVision.detectObjectsInStream(byte[] image)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStream(byte[] image)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 652
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Performs object detection on the specified image. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public DetectResult detectObjectsInStream(byte[] image)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
      description: <p>the DetectResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStreamAsync(byte [])
  id: detectObjectsInStreamAsync(byte [])
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: detectObjectsInStreamAsync(byte[] image)
  nameWithType: ComputerVision.detectObjectsInStreamAsync(byte[] image)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStreamAsync(byte[] image)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 664
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Performs object detection on the specified image. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DetectResult> detectObjectsInStreamAsync(byte[] image)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResulta08ddfce
      description: <p>the observable to the DetectResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail()
  id: generateThumbnail()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: generateThumbnail()
  nameWithType: ComputerVision.generateThumbnail()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1166
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionGenerateThumbnailDefinitionStages.WithWidth generateThumbnail()
    return:
      type: ffe38203
      description: <p>the first stage of the generateThumbnail call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail(int,int,String,GenerateThumbnailOptionalParameter)
  id: generateThumbnail(int,int,String,GenerateThumbnailOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  nameWithType: ComputerVision.generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1132
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public InputStream generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter)
  id: generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  nameWithType: ComputerVision.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1152
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<InputStream> generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream()
  id: generateThumbnailInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: generateThumbnailInStream()
  nameWithType: ComputerVision.generateThumbnailInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 556
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionGenerateThumbnailInStreamDefinitionStages.WithWidth generateThumbnailInStream()
    return:
      type: 012fc9a6
      description: <p>the first stage of the generateThumbnailInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  id: generateThumbnailInStream(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  nameWithType: ComputerVision.generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 522
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public InputStream generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  id: generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  nameWithType: ComputerVision.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 542
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<InputStream> generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterest(String)
  id: getAreaOfInterest(String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: getAreaOfInterest(String url)
  nameWithType: ComputerVision.getAreaOfInterest(String url)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterest(String url)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterest*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1095
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public AreaOfInterestResult getAreaOfInterest(String url)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
      description: <p>the AreaOfInterestResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestAsync(String)
  id: getAreaOfInterestAsync(String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: getAreaOfInterestAsync(String url)
  nameWithType: ComputerVision.getAreaOfInterestAsync(String url)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestAsync(String url)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1109
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<AreaOfInterestResult> getAreaOfInterestAsync(String url)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResulta08ddfce
      description: <p>the observable to the AreaOfInterestResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStream(byte [])
  id: getAreaOfInterestInStream(byte [])
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: getAreaOfInterestInStream(byte[] image)
  nameWithType: ComputerVision.getAreaOfInterestInStream(byte[] image)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStream(byte[] image)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 804
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public AreaOfInterestResult getAreaOfInterestInStream(byte[] image)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
      description: <p>the AreaOfInterestResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStreamAsync(byte [])
  id: getAreaOfInterestInStreamAsync(byte [])
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: getAreaOfInterestInStreamAsync(byte[] image)
  nameWithType: ComputerVision.getAreaOfInterestInStreamAsync(byte[] image)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStreamAsync(byte[] image)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 818
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<AreaOfInterestResult> getAreaOfInterestInStreamAsync(byte[] image)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResulta08ddfce
      description: <p>the observable to the AreaOfInterestResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResult(UUID)
  id: getReadResult(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: getReadResult(UUID operationId)
  nameWithType: ComputerVision.getReadResult(UUID operationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResult(UUID operationId)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResult*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 970
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This interface is used for getting OCR results of Read operation. The URL to this interface should be retrieved from 'Operation-Location' field returned from Read interface.</p>\r\n<p></p>"
  syntax:
    content: public ReadOperationResult getReadResult(UUID operationId)
    parameters:
    - id: operationId
      type: add9545a
      description: <p>Id of read operation returned in the response of the 'Read' interface. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
      description: <p>the ReadOperationResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResultAsync(UUID)
  id: getReadResultAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: getReadResultAsync(UUID operationId)
  nameWithType: ComputerVision.getReadResultAsync(UUID operationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResultAsync(UUID operationId)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResultAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 980
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This interface is used for getting OCR results of Read operation. The URL to this interface should be retrieved from 'Operation-Location' field returned from Read interface.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ReadOperationResult> getReadResultAsync(UUID operationId)
    parameters:
    - id: operationId
      type: add9545a
      description: <p>Id of read operation returned in the response of the 'Read' interface. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResulta08ddfce
      description: <p>the observable to the ReadOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels()
  id: listModels()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: listModels()
  nameWithType: ComputerVision.listModels()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1617
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ListModelsResult listModels()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
      description: <p>the ListModelsResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync()
  id: listModelsAsync()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: listModelsAsync()
  nameWithType: ComputerVision.listModelsAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1629
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ListModelsResult> listModelsAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResulta08ddfce
      description: <p>the observable to the ListModelsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read()
  id: read()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: read()
  nameWithType: ComputerVision.read()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1018
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.​.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionReadDefinitionStages.WithUrl read()
    return:
      type: 81c4d406
      description: <p>the first stage of the read call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read(String,ReadOptionalParameter)
  id: read(String,ReadOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: read(String url, ReadOptionalParameter readOptionalParameter)
  nameWithType: ComputerVision.read(String url, ReadOptionalParameter readOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read(String url, ReadOptionalParameter readOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 995
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.​.</p>\r\n<p></p>"
  syntax:
    content: public void read(String url, ReadOptionalParameter readOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: readOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readAsync(String,ReadOptionalParameter)
  id: readAsync(String,ReadOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: readAsync(String url, ReadOptionalParameter readOptionalParameter)
  nameWithType: ComputerVision.readAsync(String url, ReadOptionalParameter readOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readAsync(String url, ReadOptionalParameter readOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1008
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.​.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> readAsync(String url, ReadOptionalParameter readOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: readOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream()
  id: readInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: readInStream()
  nameWithType: ComputerVision.readInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 85
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.​.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionReadInStreamDefinitionStages.WithImage readInStream()
    return:
      type: 33014bf2
      description: <p>the first stage of the readInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream(byte [],ReadInStreamOptionalParameter)
  id: readInStream(byte [],ReadInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: readInStream(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  nameWithType: ComputerVision.readInStream(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 62
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.​.</p>\r\n<p></p>"
  syntax:
    content: public void readInStream(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: readInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStreamAsync(byte [],ReadInStreamOptionalParameter)
  id: readInStreamAsync(byte [],ReadInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  nameWithType: ComputerVision.readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 75
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.​.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: readInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText()
  id: recognizePrintedText()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: recognizePrintedText()
  nameWithType: ComputerVision.recognizePrintedText()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1408
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionRecognizePrintedTextDefinitionStages.WithDetectOrientation recognizePrintedText()
    return:
      type: f16201ec
      description: <p>the first stage of the recognizePrintedText call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText(boolean,String,RecognizePrintedTextOptionalParameter)
  id: recognizePrintedText(boolean,String,RecognizePrintedTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  nameWithType: ComputerVision.recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1378
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public OcrResult recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
      description: <p>the OcrResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  id: recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  nameWithType: ComputerVision.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1396
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<OcrResult> recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
      description: <p>the observable to the OcrResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream()
  id: recognizePrintedTextInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: recognizePrintedTextInStream()
  nameWithType: ComputerVision.recognizePrintedTextInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 306
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionRecognizePrintedTextInStreamDefinitionStages.WithDetectOrientation recognizePrintedTextInStream()
    return:
      type: 02bbc546
      description: <p>the first stage of the recognizePrintedTextInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  id: recognizePrintedTextInStream(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  nameWithType: ComputerVision.recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 276
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public OcrResult recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
      description: <p>the OcrResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  id: recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  nameWithType: ComputerVision.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 294
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<OcrResult> recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
      description: <p>the observable to the OcrResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage()
  id: tagImage()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: tagImage()
  nameWithType: ComputerVision.tagImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1299
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionTagImageDefinitionStages.WithUrl tagImage()
    return:
      type: a1018f3d
      description: <p>the first stage of the tagImage call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage(String,TagImageOptionalParameter)
  id: tagImage(String,TagImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVision.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1267
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public TagResult tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
      description: <p>the TagResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync(String,TagImageOptionalParameter)
  id: tagImageAsync(String,TagImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVision.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1285
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<TagResult> tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
      description: <p>the observable to the TagResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream()
  id: tagImageInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: tagImageInStream()
  nameWithType: ComputerVision.tagImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 197
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionTagImageInStreamDefinitionStages.WithImage tagImageInStream()
    return:
      type: 4a4d316f
      description: <p>the first stage of the tagImageInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream(byte [],TagImageInStreamOptionalParameter)
  id: tagImageInStream(byte [],TagImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  nameWithType: ComputerVision.tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 165
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public TagResult tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
      description: <p>the TagResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter)
  id: tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  langs:
  - java
  name: tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  nameWithType: ComputerVision.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/cognitiveservices/ms-azure-cs-computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 183
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<TagResult> tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
      description: <p>the observable to the TagResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 16da869d
  spec.java:
  - name: ComputerVisionErrorException
    fullName: ComputerVisionErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream*
  name: readInStream
  nameWithType: ComputerVision.readInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStreamAsync*
  name: readInStreamAsync
  nameWithType: ComputerVision.readInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 33014bf2
  spec.java:
  - name: ComputerVisionReadInStreamDefinitionStages.WithImage
    fullName: ComputerVisionReadInStreamDefinitionStages.WithImage
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream*
  name: tagImageInStream
  nameWithType: ComputerVision.tagImageInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    name: TagResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync*
  name: tagImageInStreamAsync
  nameWithType: ComputerVision.tagImageInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 4a4d316f
  spec.java:
  - name: ComputerVisionTagImageInStreamDefinitionStages.WithImage
    fullName: ComputerVisionTagImageInStreamDefinitionStages.WithImage
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream*
  name: recognizePrintedTextInStream
  nameWithType: ComputerVision.recognizePrintedTextInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    name: OcrResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync*
  name: recognizePrintedTextInStreamAsync
  nameWithType: ComputerVision.recognizePrintedTextInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 02bbc546
  spec.java:
  - name: ComputerVisionRecognizePrintedTextInStreamDefinitionStages.WithDetectOrientation
    fullName: ComputerVisionRecognizePrintedTextInStreamDefinitionStages.WithDetectOrientation
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream*
  name: analyzeImageByDomainInStream
  nameWithType: ComputerVision.analyzeImageByDomainInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    name: DomainModelResults
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync*
  name: analyzeImageByDomainInStreamAsync
  nameWithType: ComputerVision.analyzeImageByDomainInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 3609dfc8
  spec.java:
  - name: ComputerVisionAnalyzeImageByDomainInStreamDefinitionStages.WithModel
    fullName: ComputerVisionAnalyzeImageByDomainInStreamDefinitionStages.WithModel
- uid: dc385fd4
  spec.java:
  - name: CloudException
    fullName: CloudException
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 76fcb9b7
  spec.java:
  - name: InputStream
    fullName: InputStream
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream*
  name: generateThumbnailInStream
  nameWithType: ComputerVision.generateThumbnailInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 3ab19265
  spec.java:
  - name: Observable<InputStream>
    fullName: Observable<InputStream>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync*
  name: generateThumbnailInStreamAsync
  nameWithType: ComputerVision.generateThumbnailInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 012fc9a6
  spec.java:
  - name: ComputerVisionGenerateThumbnailInStreamDefinitionStages.WithWidth
    fullName: ComputerVisionGenerateThumbnailInStreamDefinitionStages.WithWidth
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStream*
  name: detectObjectsInStream
  nameWithType: ComputerVision.detectObjectsInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
    name: DetectResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStreamAsync*
  name: detectObjectsInStreamAsync
  nameWithType: ComputerVision.detectObjectsInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream*
  name: describeImageInStream
  nameWithType: ComputerVision.describeImageInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    name: ImageDescription
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync*
  name: describeImageInStreamAsync
  nameWithType: ComputerVision.describeImageInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: "70169043"
  spec.java:
  - name: ComputerVisionDescribeImageInStreamDefinitionStages.WithImage
    fullName: ComputerVisionDescribeImageInStreamDefinitionStages.WithImage
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStream*
  name: getAreaOfInterestInStream
  nameWithType: ComputerVision.getAreaOfInterestInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
    name: AreaOfInterestResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStreamAsync*
  name: getAreaOfInterestInStreamAsync
  nameWithType: ComputerVision.getAreaOfInterestInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream*
  name: analyzeImageInStream
  nameWithType: ComputerVision.analyzeImageInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    name: ImageAnalysis
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync*
  name: analyzeImageInStreamAsync
  nameWithType: ComputerVision.analyzeImageInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 9ad9f102
  spec.java:
  - name: ComputerVisionAnalyzeImageInStreamDefinitionStages.WithImage
    fullName: ComputerVisionAnalyzeImageInStreamDefinitionStages.WithImage
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResult*
  name: getReadResult
  nameWithType: ComputerVision.getReadResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResult
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
    name: ReadOperationResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResultAsync*
  name: getReadResultAsync
  nameWithType: ComputerVision.getReadResultAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResultAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read*
  name: read
  nameWithType: ComputerVision.read
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readAsync*
  name: readAsync
  nameWithType: ComputerVision.readAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 81c4d406
  spec.java:
  - name: ComputerVisionReadDefinitionStages.WithUrl
    fullName: ComputerVisionReadDefinitionStages.WithUrl
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterest*
  name: getAreaOfInterest
  nameWithType: ComputerVision.getAreaOfInterest
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterest
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestAsync*
  name: getAreaOfInterestAsync
  nameWithType: ComputerVision.getAreaOfInterestAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail*
  name: generateThumbnail
  nameWithType: ComputerVision.generateThumbnail
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync*
  name: generateThumbnailAsync
  nameWithType: ComputerVision.generateThumbnailAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: ffe38203
  spec.java:
  - name: ComputerVisionGenerateThumbnailDefinitionStages.WithWidth
    fullName: ComputerVisionGenerateThumbnailDefinitionStages.WithWidth
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage*
  name: tagImage
  nameWithType: ComputerVision.tagImage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync*
  name: tagImageAsync
  nameWithType: ComputerVision.tagImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: a1018f3d
  spec.java:
  - name: ComputerVisionTagImageDefinitionStages.WithUrl
    fullName: ComputerVisionTagImageDefinitionStages.WithUrl
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText*
  name: recognizePrintedText
  nameWithType: ComputerVision.recognizePrintedText
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync*
  name: recognizePrintedTextAsync
  nameWithType: ComputerVision.recognizePrintedTextAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: f16201ec
  spec.java:
  - name: ComputerVisionRecognizePrintedTextDefinitionStages.WithDetectOrientation
    fullName: ComputerVisionRecognizePrintedTextDefinitionStages.WithDetectOrientation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain*
  name: analyzeImageByDomain
  nameWithType: ComputerVision.analyzeImageByDomain
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync*
  name: analyzeImageByDomainAsync
  nameWithType: ComputerVision.analyzeImageByDomainAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 45c47c42
  spec.java:
  - name: ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel
    fullName: ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels*
  name: listModels
  nameWithType: ComputerVision.listModels
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    name: ListModelsResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync*
  name: listModelsAsync
  nameWithType: ComputerVision.listModelsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjects*
  name: detectObjects
  nameWithType: ComputerVision.detectObjects
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjects
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsAsync*
  name: detectObjectsAsync
  nameWithType: ComputerVision.detectObjectsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage*
  name: describeImage
  nameWithType: ComputerVision.describeImage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync*
  name: describeImageAsync
  nameWithType: ComputerVision.describeImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: a37ccca7
  spec.java:
  - name: ComputerVisionDescribeImageDefinitionStages.WithUrl
    fullName: ComputerVisionDescribeImageDefinitionStages.WithUrl
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage*
  name: analyzeImage
  nameWithType: ComputerVision.analyzeImage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync*
  name: analyzeImageAsync
  nameWithType: ComputerVision.analyzeImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 8c7df68d
  spec.java:
  - name: ComputerVisionAnalyzeImageDefinitionStages.WithUrl
    fullName: ComputerVisionAnalyzeImageDefinitionStages.WithUrl
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter.yml
  name: ReadInStreamOptionalParameter
  nameWithType: ReadInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter
  type: Class
  summary: "<p>The ReadInStreamOptionalParameter model. </p>"
  syntax:
    content: public class ReadInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult.yml
  name: TagResult
  nameWithType: TagResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
  type: Class
  summary: "<p>The results of a image tag operation, including any tags and image metadata. </p>"
  syntax:
    content: public class TagResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter.yml
  name: TagImageInStreamOptionalParameter
  nameWithType: TagImageInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
  type: Class
  summary: "<p>The TagImageInStreamOptionalParameter model. </p>"
  syntax:
    content: public class TagImageInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult.yml
  name: OcrResult
  nameWithType: OcrResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
  type: Class
  summary: "<p>The OcrResult model. </p>"
  syntax:
    content: public class OcrResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter.yml
  name: RecognizePrintedTextInStreamOptionalParameter
  nameWithType: RecognizePrintedTextInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
  type: Class
  summary: "<p>The RecognizePrintedTextInStreamOptionalParameter model. </p>"
  syntax:
    content: public class RecognizePrintedTextInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults.yml
  name: DomainModelResults
  nameWithType: DomainModelResults
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
  type: Class
  summary: "<p>Result of image analysis using a specific domain model including additional metadata. </p>"
  syntax:
    content: public class DomainModelResults
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter.yml
  name: AnalyzeImageByDomainInStreamOptionalParameter
  nameWithType: AnalyzeImageByDomainInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
  type: Class
  summary: "<p>The AnalyzeImageByDomainInStreamOptionalParameter model. </p>"
  syntax:
    content: public class AnalyzeImageByDomainInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter.yml
  name: GenerateThumbnailInStreamOptionalParameter
  nameWithType: GenerateThumbnailInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
  type: Class
  summary: "<p>The GenerateThumbnailInStreamOptionalParameter model. </p>"
  syntax:
    content: public class GenerateThumbnailInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult.yml
  name: DetectResult
  nameWithType: DetectResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
  type: Class
  summary: "<p>Result of a DetectImage call. </p>"
  syntax:
    content: public class DetectResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription.yml
  name: ImageDescription
  nameWithType: ImageDescription
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
  type: Class
  summary: "<p>A collection of content tags, along with a list of captions sorted by confidence level, and image metadata. </p>"
  syntax:
    content: public class ImageDescription
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter.yml
  name: DescribeImageInStreamOptionalParameter
  nameWithType: DescribeImageInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
  type: Class
  summary: "<p>The DescribeImageInStreamOptionalParameter model. </p>"
  syntax:
    content: public class DescribeImageInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult.yml
  name: AreaOfInterestResult
  nameWithType: AreaOfInterestResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
  type: Class
  summary: "<p>Result of AreaOfInterest operation. </p>"
  syntax:
    content: public class AreaOfInterestResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis.yml
  name: ImageAnalysis
  nameWithType: ImageAnalysis
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
  type: Class
  summary: "<p>Result of AnalyzeImage operation. </p>"
  syntax:
    content: public class ImageAnalysis
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter.yml
  name: AnalyzeImageInStreamOptionalParameter
  nameWithType: AnalyzeImageInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
  type: Class
  summary: "<p>The AnalyzeImageInStreamOptionalParameter model. </p>"
  syntax:
    content: public class AnalyzeImageInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult.yml
  name: ReadOperationResult
  nameWithType: ReadOperationResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
  type: Class
  summary: "<p>OCR result of the read operation. </p>"
  syntax:
    content: public class ReadOperationResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter.yml
  name: ReadOptionalParameter
  nameWithType: ReadOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter
  type: Class
  summary: "<p>The ReadOptionalParameter model. </p>"
  syntax:
    content: public class ReadOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter.yml
  name: GenerateThumbnailOptionalParameter
  nameWithType: GenerateThumbnailOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
  type: Class
  summary: "<p>The GenerateThumbnailOptionalParameter model. </p>"
  syntax:
    content: public class GenerateThumbnailOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter.yml
  name: TagImageOptionalParameter
  nameWithType: TagImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
  type: Class
  summary: "<p>The TagImageOptionalParameter model. </p>"
  syntax:
    content: public class TagImageOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter.yml
  name: RecognizePrintedTextOptionalParameter
  nameWithType: RecognizePrintedTextOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
  type: Class
  summary: "<p>The RecognizePrintedTextOptionalParameter model. </p>"
  syntax:
    content: public class RecognizePrintedTextOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter.yml
  name: AnalyzeImageByDomainOptionalParameter
  nameWithType: AnalyzeImageByDomainOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
  type: Class
  summary: "<p>The AnalyzeImageByDomainOptionalParameter model. </p>"
  syntax:
    content: public class AnalyzeImageByDomainOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult.yml
  name: ListModelsResult
  nameWithType: ListModelsResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
  type: Class
  summary: "<p>Result of the List Domain Models operation. </p>"
  syntax:
    content: public class ListModelsResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter.yml
  name: DescribeImageOptionalParameter
  nameWithType: DescribeImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
  type: Class
  summary: "<p>The DescribeImageOptionalParameter model. </p>"
  syntax:
    content: public class DescribeImageOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter.yml
  name: AnalyzeImageOptionalParameter
  nameWithType: AnalyzeImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
  type: Class
  summary: "<p>The AnalyzeImageOptionalParameter model. </p>"
  syntax:
    content: public class AnalyzeImageOptionalParameter
