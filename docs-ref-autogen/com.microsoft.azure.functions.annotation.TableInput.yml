### YamlMime:JavaType
uid: "com.microsoft.azure.functions.annotation.TableInput"
fullName: "com.microsoft.azure.functions.annotation.TableInput"
name: "TableInput"
nameWithType: "TableInput"
summary: "Place this on a parameter whose value would come from storage table. The parameter type can be one of the following:\n\n *  Any native Java types such as int, String, byte\\[\\]\n *  Nullable values using Optional<T>\n *  Any POJO type\n\nThe following example shows an HTTP trigger which returned the total count of the items in a table storage:\n\n```java\n@FunctionName(\"getallcount\")\n public int run(\n    @HttpTrigger(name = \"req\",\n                  methods = {\"get\"},\n                  authLevel = AuthorizationLevel.ANONYMOUS) Object dummyShouldNotBeUsed,\n    @TableInput(name = \"items\",\n                 tableName = \"mytablename\",\n                 partitionKey = \"myparkey\",\n                 connection = \"myconnvarname\") MyItem[] items\n ) {\n     return items.length;\n }\n```"
syntax: "public interface TableInput implements Annotation"
methods:
- "com.microsoft.azure.functions.annotation.TableInput.connection()"
- "com.microsoft.azure.functions.annotation.TableInput.dataType()"
- "com.microsoft.azure.functions.annotation.TableInput.filter()"
- "com.microsoft.azure.functions.annotation.TableInput.name()"
- "com.microsoft.azure.functions.annotation.TableInput.partitionKey()"
- "com.microsoft.azure.functions.annotation.TableInput.rowKey()"
- "com.microsoft.azure.functions.annotation.TableInput.tableName()"
- "com.microsoft.azure.functions.annotation.TableInput.take()"
type: "interface"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.functions.annotation"
artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
