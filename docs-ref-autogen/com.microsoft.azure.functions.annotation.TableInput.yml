### YamlMime:JavaType
uid: "com.microsoft.azure.functions.annotation.TableInput"
fullName: "com.microsoft.azure.functions.annotation.TableInput"
name: "TableInput"
nameWithType: "TableInput"
summary: "Place this on a parameter whose value would come from storage table."
syntax: "public interface TableInput implements Annotation"
methods:
- uid: "com.microsoft.azure.functions.annotation.TableInput.connection()"
  fullName: "com.microsoft.azure.functions.annotation.TableInput.connection()"
  name: "connection()"
  nameWithType: "TableInput.connection()"
  summary: "Defines the app setting name that contains the Azure Storage connection string."
  modifiers:
  - "abstract"
  syntax: "public abstract String connection()"
  desc: "Defines the app setting name that contains the Azure Storage connection string."
  returns:
    description: "The app setting name of the connection string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.TableInput.dataType()"
  fullName: "com.microsoft.azure.functions.annotation.TableInput.dataType()"
  name: "dataType()"
  nameWithType: "TableInput.dataType()"
  summary: "Defines how Functions runtime should treat the parameter value."
  modifiers:
  - "abstract"
  syntax: "public abstract String dataType()"
  desc: "Defines how Functions runtime should treat the parameter value. Possible values are:\n\n *  \"\": get the value as a string, and try to deserialize to actual parameter type like POJO\n *  string: always get the value as a string\n *  binary: get the value as a binary data, and try to deserialize to actual parameter type byte\\[\\]"
  returns:
    description: "The dataType which will be used by the Functions runtime."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.TableInput.filter()"
  fullName: "com.microsoft.azure.functions.annotation.TableInput.filter()"
  name: "filter()"
  nameWithType: "TableInput.filter()"
  summary: "Defines the filter of the storage table to which to bind."
  modifiers:
  - "abstract"
  syntax: "public abstract String filter()"
  desc: "Defines the filter of the storage table to which to bind."
  returns:
    description: "The storage table filter string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.TableInput.name()"
  fullName: "com.microsoft.azure.functions.annotation.TableInput.name()"
  name: "name()"
  nameWithType: "TableInput.name()"
  summary: "The variable name used in function.<wbr>json."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "The variable name used in function.json."
  returns:
    description: "The variable name used in function.json."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.TableInput.partitionKey()"
  fullName: "com.microsoft.azure.functions.annotation.TableInput.partitionKey()"
  name: "partitionKey()"
  nameWithType: "TableInput.partitionKey()"
  summary: "Defines the partition key of the storage table to which to bind."
  modifiers:
  - "abstract"
  syntax: "public abstract String partitionKey()"
  desc: "Defines the partition key of the storage table to which to bind."
  returns:
    description: "The storage table partition key string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.TableInput.rowKey()"
  fullName: "com.microsoft.azure.functions.annotation.TableInput.rowKey()"
  name: "rowKey()"
  nameWithType: "TableInput.rowKey()"
  summary: "Defines the row key of the storage table to which to bind."
  modifiers:
  - "abstract"
  syntax: "public abstract String rowKey()"
  desc: "Defines the row key of the storage table to which to bind."
  returns:
    description: "The storage table row key string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.TableInput.tableName()"
  fullName: "com.microsoft.azure.functions.annotation.TableInput.tableName()"
  name: "tableName()"
  nameWithType: "TableInput.tableName()"
  summary: "Defines the name of the storage table to which to bind."
  modifiers:
  - "abstract"
  syntax: "public abstract String tableName()"
  desc: "Defines the name of the storage table to which to bind."
  returns:
    description: "The storage table name string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.TableInput.take()"
  fullName: "com.microsoft.azure.functions.annotation.TableInput.take()"
  name: "take()"
  nameWithType: "TableInput.take()"
  summary: "Defines the number of rows to be retrieved from the storage table to which to bind."
  modifiers:
  - "abstract"
  syntax: "public abstract String take()"
  desc: "Defines the number of rows to be retrieved from the storage table to which to bind."
  returns:
    description: "The storage table retrieving rows number string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Place this on a parameter whose value would come from storage table. The parameter type can be one of the following:\n\n *  Any native Java types such as int, String, byte\\[\\]\n *  Nullable values using Optional<T>\n *  Any POJO type\n\nThe following example shows an HTTP trigger which returned the total count of the items in a table storage:\n\n```java\n@FunctionName(\"getallcount\")\n public int run(\n    @HttpTrigger(name = \"req\",\n                  methods = {\"get\"},\n                  authLevel = AuthorizationLevel.ANONYMOUS) Object dummyShouldNotBeUsed,\n    @TableInput(name = \"items\",\n                 tableName = \"mytablename\",\n                 partitionKey = \"myparkey\",\n                 connection = \"myconnvarname\") MyItem[] items\n ) {\n     return items.length;\n }\n```"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.functions.annotation"
artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
