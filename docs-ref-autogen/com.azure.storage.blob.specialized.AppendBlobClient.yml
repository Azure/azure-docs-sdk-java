### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.specialized.AppendBlobClient
  id: AppendBlobClient
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized
  children:
  - com.azure.storage.blob.specialized.AppendBlobClient.MAX_APPEND_BLOCK_BYTES
  - com.azure.storage.blob.specialized.AppendBlobClient.MAX_BLOCKS
  - com.azure.storage.blob.specialized.AppendBlobClient.appendBlock(java.io.InputStream,long)
  - com.azure.storage.blob.specialized.AppendBlobClient.appendBlockFromUrl(java.lang.String,com.azure.storage.blob.models.BlobRange)
  - com.azure.storage.blob.specialized.AppendBlobClient.appendBlockFromUrlWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,byte[],com.azure.storage.blob.models.AppendBlobRequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.AppendBlobClient.appendBlockWithResponse(java.io.InputStream,long,byte[],com.azure.storage.blob.models.AppendBlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.AppendBlobClient.create()
  - com.azure.storage.blob.specialized.AppendBlobClient.create(boolean)
  - com.azure.storage.blob.specialized.AppendBlobClient.createWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.AppendBlobClient.getBlobOutputStream()
  - com.azure.storage.blob.specialized.AppendBlobClient.getBlobOutputStream(com.azure.storage.blob.models.AppendBlobRequestConditions)
  langs:
  - java
  name: AppendBlobClient
  nameWithType: AppendBlobClient
  fullName: com.azure.storage.blob.specialized.AppendBlobClient
  type: Class
  package: com.azure.storage.blob.specialized
  summary: >-
    Client to an append blob. It may only be instantiated through a <xref uid="com.azure.storage.blob.specialized.SpecializedBlobClientBuilder" data-throw-if-not-resolved="false">SpecializedBlobClientBuilder</xref> or via the method <xref uid="com.azure.storage.blob.BlobClient.getAppendBlobClient()" data-throw-if-not-resolved="false">BlobClient#getAppendBlobClient()</xref>. This class does not hold any state about a particular blob, but is instead a convenient way of sending appropriate requests to the resource on the service.


    This client contains operations on a blob. Operations on a container are available on <xref uid="com.azure.storage.blob.BlobContainerClient" data-throw-if-not-resolved="false">BlobContainerClient</xref>, and operations on the service are available on <xref uid="com.azure.storage.blob.BlobServiceClient" data-throw-if-not-resolved="false">BlobServiceClient</xref>.


    Please refer to the [Azure Docs][] for more information.



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/understanding-block-blobs--append-blobs--and-page-blobs
  syntax:
    content: public final class AppendBlobClient extends BlobClientBase
  inheritance:
  - java.lang.Object
  - com.azure.storage.blob.specialized.BlobClientBase
  inheritedMembers:
  - com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)
  - com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
  - com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()
  - com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.delete()
  - com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String,boolean)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.exists()
  - com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)
  - com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)
  - com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()
  - com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.getAccountName()
  - com.azure.storage.blob.specialized.BlobClientBase.getBlobName()
  - com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()
  - com.azure.storage.blob.specialized.BlobClientBase.getContainerName()
  - com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()
  - com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()
  - com.azure.storage.blob.specialized.BlobClientBase.getProperties()
  - com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()
  - com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()
  - com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()
  - com.azure.storage.blob.specialized.BlobClientBase.openInputStream()
  - com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)
  - com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)
  - com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  - com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.undelete()
  - com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.specialized.AppendBlobClient.AppendBlobClient(com.azure.storage.blob.specialized.AppendBlobAsyncClient)
  id: AppendBlobClient(com.azure.storage.blob.specialized.AppendBlobAsyncClient)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.AppendBlobClient
  langs:
  - java
  name: AppendBlobClient(AppendBlobAsyncClient appendBlobAsyncClient)
  nameWithType: AppendBlobClient.AppendBlobClient(AppendBlobAsyncClient appendBlobAsyncClient)
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.AppendBlobClient(AppendBlobAsyncClient appendBlobAsyncClient)
  overload: com.azure.storage.blob.specialized.AppendBlobClient.AppendBlobClient*
  type: Constructor
  package: com.azure.storage.blob.specialized
  summary: Package-private constructor for use by <xref uid="com.azure.storage.blob.BlobClientBuilder" data-throw-if-not-resolved="false">BlobClientBuilder</xref>.
  syntax:
    content: " AppendBlobClient(AppendBlobAsyncClient appendBlobAsyncClient)"
    parameters:
    - id: appendBlobAsyncClient
      type: com.azure.storage.blob.specialized.AppendBlobAsyncClient
      description: the async append blob client
- uid: com.azure.storage.blob.specialized.AppendBlobClient.MAX_APPEND_BLOCK_BYTES
  id: MAX_APPEND_BLOCK_BYTES
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.AppendBlobClient
  langs:
  - java
  name: MAX_APPEND_BLOCK_BYTES
  nameWithType: AppendBlobClient.MAX_APPEND_BLOCK_BYTES
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.MAX_APPEND_BLOCK_BYTES
  type: Field
  package: com.azure.storage.blob.specialized
  summary: Indicates the maximum number of bytes that can be sent in a call to appendBlock.
  syntax:
    content: public static final int MAX_APPEND_BLOCK_BYTES
    return:
      type: int
- uid: com.azure.storage.blob.specialized.AppendBlobClient.MAX_BLOCKS
  id: MAX_BLOCKS
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.AppendBlobClient
  langs:
  - java
  name: MAX_BLOCKS
  nameWithType: AppendBlobClient.MAX_BLOCKS
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.MAX_BLOCKS
  type: Field
  package: com.azure.storage.blob.specialized
  summary: Indicates the maximum number of blocks allowed in an append blob.
  syntax:
    content: public static final int MAX_BLOCKS
    return:
      type: int
- uid: com.azure.storage.blob.specialized.AppendBlobClient.appendBlock(java.io.InputStream,long)
  id: appendBlock(java.io.InputStream,long)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.AppendBlobClient
  langs:
  - java
  name: appendBlock(InputStream data, long length)
  nameWithType: AppendBlobClient.appendBlock(InputStream data, long length)
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.appendBlock(InputStream data, long length)
  overload: com.azure.storage.blob.specialized.AppendBlobClient.appendBlock*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Commits a new block of data to the end of the existing append blob.


    Note that the data passed must be replayable if retries are enabled (the default). In other words, the `Flux` must produce the same data each time it is subscribed to.


    **Code Samples**


    ```java

    System.out.printf("AppendBlob has %d committed blocks%n",
         client.appendBlock(data, length).getBlobCommittedBlockCount());
    ```
  syntax:
    content: public AppendBlobItem appendBlock(InputStream data, long length)
    parameters:
    - id: data
      type: java.io.InputStream
      description: The data to write to the blob.
    - id: length
      type: long
      description: >-
        The exact length of the data. It is important that this value match precisely the length of the
         data emitted by the <code>Flux</code>.
    return:
      type: com.azure.storage.blob.models.AppendBlobItem
      description: The information of the append blob operation.
- uid: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockFromUrl(java.lang.String,com.azure.storage.blob.models.BlobRange)
  id: appendBlockFromUrl(java.lang.String,com.azure.storage.blob.models.BlobRange)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.AppendBlobClient
  langs:
  - java
  name: appendBlockFromUrl(String sourceUrl, BlobRange sourceRange)
  nameWithType: AppendBlobClient.appendBlockFromUrl(String sourceUrl, BlobRange sourceRange)
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockFromUrl(String sourceUrl, BlobRange sourceRange)
  overload: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockFromUrl*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Commits a new block of data from another blob to the end of this append blob.


    **Code Samples**


    ```java

    System.out.printf("AppendBlob has %d committed blocks%n",
         client.appendBlockFromUrl(sourceUrl, new BlobRange(offset, count)).getBlobCommittedBlockCount());
    ```
  syntax:
    content: public AppendBlobItem appendBlockFromUrl(String sourceUrl, BlobRange sourceRange)
    parameters:
    - id: sourceUrl
      type: java.lang.String
      description: >-
        The url to the blob that will be the source of the copy.  A source blob in the same storage
         account can be authenticated via Shared Key. However, if the source is a blob in another account, the source blob
         must either be public or must be authenticated via a shared access signature. If the source blob is public, no
         authentication is required to perform the operation.
    - id: sourceRange
      type: com.azure.storage.blob.models.BlobRange
      description: The source <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref> to copy.
    return:
      type: com.azure.storage.blob.models.AppendBlobItem
      description: The information of the append blob operation.
- uid: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockFromUrlWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,byte[],com.azure.storage.blob.models.AppendBlobRequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: appendBlockFromUrlWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,byte[],com.azure.storage.blob.models.AppendBlobRequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.AppendBlobClient
  langs:
  - java
  name: appendBlockFromUrlWithResponse(String sourceUrl, BlobRange sourceRange, byte[] sourceContentMd5, AppendBlobRequestConditions destRequestConditions, BlobRequestConditions sourceRequestConditions, Duration timeout, Context context)
  nameWithType: AppendBlobClient.appendBlockFromUrlWithResponse(String sourceUrl, BlobRange sourceRange, byte[] sourceContentMd5, AppendBlobRequestConditions destRequestConditions, BlobRequestConditions sourceRequestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockFromUrlWithResponse(String sourceUrl, BlobRange sourceRange, byte[] sourceContentMd5, AppendBlobRequestConditions destRequestConditions, BlobRequestConditions sourceRequestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockFromUrlWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Commits a new block of data from another blob to the end of this append blob.\n\n**Code Samples**\n\n```java\nAppendBlobRequestConditions appendBlobRequestConditions = new AppendBlobRequestConditions()\n     .setAppendPosition(POSITION)\n     .setMaxSize(maxSize);\n \n BlobRequestConditions modifiedRequestConditions = new BlobRequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(3));\n \n Context context = new Context(\"key\", \"value\");\n \n System.out.printf(\"AppendBlob has %d committed blocks%n\",\n     client.appendBlockFromUrlWithResponse(sourceUrl, new BlobRange(offset, count), null,\n         appendBlobRequestConditions, modifiedRequestConditions, timeout,\n         context).getValue().getBlobCommittedBlockCount());\n```"
  syntax:
    content: public Response<AppendBlobItem> appendBlockFromUrlWithResponse(String sourceUrl, BlobRange sourceRange, byte[] sourceContentMd5, AppendBlobRequestConditions destRequestConditions, BlobRequestConditions sourceRequestConditions, Duration timeout, Context context)
    parameters:
    - id: sourceUrl
      type: java.lang.String
      description: >-
        The url to the blob that will be the source of the copy.  A source blob in the same storage
         account can be authenticated via Shared Key. However, if the source is a blob in another account, the source blob
         must either be public or must be authenticated via a shared access signature. If the source blob is public, no
         authentication is required to perform the operation.
    - id: sourceRange
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: sourceContentMd5
      type: byte[]
      description: >-
        An MD5 hash of the block content from the source blob. If specified, the service will
         calculate the MD5 of the received data and fail the request if it does not match the provided MD5.
    - id: destRequestConditions
      type: com.azure.storage.blob.models.AppendBlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.AppendBlobRequestConditions" data-throw-if-not-resolved="false">AppendBlobRequestConditions</xref>
    - id: sourceRequestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.AppendBlobItem>
      description: The information of the append blob operation.
- uid: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockWithResponse(java.io.InputStream,long,byte[],com.azure.storage.blob.models.AppendBlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: appendBlockWithResponse(java.io.InputStream,long,byte[],com.azure.storage.blob.models.AppendBlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.AppendBlobClient
  langs:
  - java
  name: appendBlockWithResponse(InputStream data, long length, byte[] contentMd5, AppendBlobRequestConditions appendBlobRequestConditions, Duration timeout, Context context)
  nameWithType: AppendBlobClient.appendBlockWithResponse(InputStream data, long length, byte[] contentMd5, AppendBlobRequestConditions appendBlobRequestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockWithResponse(InputStream data, long length, byte[] contentMd5, AppendBlobRequestConditions appendBlobRequestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Commits a new block of data to the end of the existing append blob.\n\nNote that the data passed must be replayable if retries are enabled (the default). In other words, the `Flux` must produce the same data each time it is subscribed to.\n\n**Code Samples**\n\n```java\nbyte[] md5 = MessageDigest.getInstance(\"MD5\").digest(\"data\".getBytes(StandardCharsets.UTF_8));\n AppendBlobRequestConditions requestConditions = new AppendBlobRequestConditions()\n     .setAppendPosition(POSITION)\n     .setMaxSize(maxSize);\n Context context = new Context(\"key\", \"value\");\n \n System.out.printf(\"AppendBlob has %d committed blocks%n\",\n     client.appendBlockWithResponse(data, length, md5, requestConditions, timeout, context)\n         .getValue().getBlobCommittedBlockCount());\n```"
  syntax:
    content: public Response<AppendBlobItem> appendBlockWithResponse(InputStream data, long length, byte[] contentMd5, AppendBlobRequestConditions appendBlobRequestConditions, Duration timeout, Context context)
    parameters:
    - id: data
      type: java.io.InputStream
      description: >-
        The data to write to the blob. Note that this <code>Flux</code> must be replayable if retries are enabled
         (the default). In other words, the Flux must produce the same data each time it is subscribed to.
    - id: length
      type: long
      description: >-
        The exact length of the data. It is important that this value match precisely the length of the
         data emitted by the <code>Flux</code>.
    - id: contentMd5
      type: byte[]
      description: >-
        An MD5 hash of the block content. This hash is used to verify the integrity of the block during
         transport. When this header is specified, the storage service compares the hash of the content that has arrived
         with this header value. Note that this MD5 hash is not stored with the blob. If the two hashes do not match, the
         operation will fail.
    - id: appendBlobRequestConditions
      type: com.azure.storage.blob.models.AppendBlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.AppendBlobRequestConditions" data-throw-if-not-resolved="false">AppendBlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.AppendBlobItem>
      description: A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="com.azure.core.http.rest.Response.getValue*" data-throw-if-not-resolved="false">value</xref> contains the append blob operation.
- uid: com.azure.storage.blob.specialized.AppendBlobClient.create()
  id: create()
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.AppendBlobClient
  langs:
  - java
  name: create()
  nameWithType: AppendBlobClient.create()
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.create()
  overload: com.azure.storage.blob.specialized.AppendBlobClient.create*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Creates a 0-length append blob. Call appendBlock to append data to an append blob. By default this method will not overwrite an existing blob.


    **Code Samples**


    ```java

    System.out.printf("Created AppendBlob at %s%n", client.create().getLastModified());

    ```
  syntax:
    content: public AppendBlobItem create()
    return:
      type: com.azure.storage.blob.models.AppendBlobItem
      description: The information of the created appended blob.
- uid: com.azure.storage.blob.specialized.AppendBlobClient.create(boolean)
  id: create(boolean)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.AppendBlobClient
  langs:
  - java
  name: create(boolean overwrite)
  nameWithType: AppendBlobClient.create(boolean overwrite)
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.create(boolean overwrite)
  overload: com.azure.storage.blob.specialized.AppendBlobClient.create*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Creates a 0-length append blob. Call appendBlock to append data to an append blob.


    **Code Samples**


    ```java

    boolean overwrite = false; // Default value
     System.out.printf("Created AppendBlob at %s%n", client.create(overwrite).getLastModified());
    ```
  syntax:
    content: public AppendBlobItem create(boolean overwrite)
    parameters:
    - id: overwrite
      type: boolean
      description: Whether or not to overwrite, should data exist on the blob.
    return:
      type: com.azure.storage.blob.models.AppendBlobItem
      description: The information of the created appended blob.
- uid: com.azure.storage.blob.specialized.AppendBlobClient.createWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: createWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.AppendBlobClient
  langs:
  - java
  name: createWithResponse(BlobHttpHeaders headers, Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: AppendBlobClient.createWithResponse(BlobHttpHeaders headers, Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.createWithResponse(BlobHttpHeaders headers, Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.AppendBlobClient.createWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Creates a 0-length append blob. Call appendBlock to append data to an append blob.\n\nTo avoid overwriting, pass \"\\*\" to <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions.setIfNoneMatch(java.lang.String)\" data-throw-if-not-resolved=\"false\">BlobRequestConditions#setIfNoneMatch(String)</xref>.\n\n**Code Samples**\n\n```java\nBlobHttpHeaders headers = new BlobHttpHeaders()\n     .setContentType(\"binary\")\n     .setContentLanguage(\"en-US\");\n Map<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n BlobRequestConditions requestConditions = new BlobRequestConditions()\n     .setLeaseId(leaseId)\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(3));\n Context context = new Context(\"key\", \"value\");\n \n System.out.printf(\"Created AppendBlob at %s%n\",\n     client.createWithResponse(headers, metadata, requestConditions, timeout, context).getValue().getLastModified());\n```"
  syntax:
    content: public Response<AppendBlobItem> createWithResponse(BlobHttpHeaders headers, Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
    parameters:
    - id: headers
      type: com.azure.storage.blob.models.BlobHttpHeaders
      description: <xref uid="com.azure.storage.blob.models.BlobHttpHeaders" data-throw-if-not-resolved="false">BlobHttpHeaders</xref>
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the blob.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.AppendBlobItem>
      description: A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="com.azure.core.http.rest.Response.getValue*" data-throw-if-not-resolved="false">value</xref> contains the created appended blob.
- uid: com.azure.storage.blob.specialized.AppendBlobClient.getBlobOutputStream()
  id: getBlobOutputStream()
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.AppendBlobClient
  langs:
  - java
  name: getBlobOutputStream()
  nameWithType: AppendBlobClient.getBlobOutputStream()
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.getBlobOutputStream()
  overload: com.azure.storage.blob.specialized.AppendBlobClient.getBlobOutputStream*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Creates and opens an output stream to write data to the append blob. If the blob already exists on the service, it will be overwritten.
  syntax:
    content: public BlobOutputStream getBlobOutputStream()
    return:
      type: com.azure.storage.blob.specialized.BlobOutputStream
      description: A <xref uid="com.azure.storage.blob.specialized.BlobOutputStream" data-throw-if-not-resolved="false">BlobOutputStream</xref> object used to write data to the blob.
- uid: com.azure.storage.blob.specialized.AppendBlobClient.getBlobOutputStream(com.azure.storage.blob.models.AppendBlobRequestConditions)
  id: getBlobOutputStream(com.azure.storage.blob.models.AppendBlobRequestConditions)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.AppendBlobClient
  langs:
  - java
  name: getBlobOutputStream(AppendBlobRequestConditions requestConditions)
  nameWithType: AppendBlobClient.getBlobOutputStream(AppendBlobRequestConditions requestConditions)
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.getBlobOutputStream(AppendBlobRequestConditions requestConditions)
  overload: com.azure.storage.blob.specialized.AppendBlobClient.getBlobOutputStream*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Creates and opens an output stream to write data to the append blob. If the blob already exists on the service, it will be overwritten.
  syntax:
    content: public BlobOutputStream getBlobOutputStream(AppendBlobRequestConditions requestConditions)
    parameters:
    - id: requestConditions
      type: com.azure.storage.blob.models.AppendBlobRequestConditions
      description: >-
        A <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref> object that represents the access conditions for the
         blob.
    return:
      type: com.azure.storage.blob.specialized.BlobOutputStream
      description: A <xref uid="com.azure.storage.blob.specialized.BlobOutputStream" data-throw-if-not-resolved="false">BlobOutputStream</xref> object used to write data to the blob.
references:
- uid: com.azure.storage.blob.specialized.AppendBlobAsyncClient
  name: AppendBlobAsyncClient
  nameWithType: AppendBlobAsyncClient
  fullName: com.azure.storage.blob.specialized.AppendBlobAsyncClient
- uid: com.azure.storage.blob.specialized.AppendBlobClient.AppendBlobClient*
  name: AppendBlobClient
  nameWithType: AppendBlobClient.AppendBlobClient
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.AppendBlobClient
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobOutputStream
  name: BlobOutputStream
  nameWithType: BlobOutputStream
  fullName: com.azure.storage.blob.specialized.BlobOutputStream
- uid: com.azure.storage.blob.specialized.AppendBlobClient.getBlobOutputStream*
  name: getBlobOutputStream
  nameWithType: AppendBlobClient.getBlobOutputStream
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.getBlobOutputStream
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.AppendBlobRequestConditions
  name: AppendBlobRequestConditions
  nameWithType: AppendBlobRequestConditions
  fullName: com.azure.storage.blob.models.AppendBlobRequestConditions
- uid: com.azure.storage.blob.models.AppendBlobItem
  name: AppendBlobItem
  nameWithType: AppendBlobItem
  fullName: com.azure.storage.blob.models.AppendBlobItem
- uid: com.azure.storage.blob.specialized.AppendBlobClient.create*
  name: create
  nameWithType: AppendBlobClient.create
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.create
  package: com.azure.storage.blob.specialized
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.storage.blob.models.BlobHttpHeaders
  name: BlobHttpHeaders
  nameWithType: BlobHttpHeaders
  fullName: com.azure.storage.blob.models.BlobHttpHeaders
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.models.BlobRequestConditions
  name: BlobRequestConditions
  nameWithType: BlobRequestConditions
  fullName: com.azure.storage.blob.models.BlobRequestConditions
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.storage.blob.models.AppendBlobItem>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.AppendBlobItem
    name: AppendBlobItem
    fullName: com.azure.storage.blob.models.AppendBlobItem
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.AppendBlobClient.createWithResponse*
  name: createWithResponse
  nameWithType: AppendBlobClient.createWithResponse
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.createWithResponse
  package: com.azure.storage.blob.specialized
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.azure.storage.blob.specialized.AppendBlobClient.appendBlock*
  name: appendBlock
  nameWithType: AppendBlobClient.appendBlock
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.appendBlock
  package: com.azure.storage.blob.specialized
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockWithResponse*
  name: appendBlockWithResponse
  nameWithType: AppendBlobClient.appendBlockWithResponse
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockWithResponse
  package: com.azure.storage.blob.specialized
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.blob.models.BlobRange
  name: BlobRange
  nameWithType: BlobRange
  fullName: com.azure.storage.blob.models.BlobRange
- uid: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockFromUrl*
  name: appendBlockFromUrl
  nameWithType: AppendBlobClient.appendBlockFromUrl
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockFromUrl
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockFromUrlWithResponse*
  name: appendBlockFromUrlWithResponse
  nameWithType: AppendBlobClient.appendBlockFromUrlWithResponse
  fullName: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockFromUrlWithResponse
  package: com.azure.storage.blob.specialized
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.storage.blob.specialized.BlobClientBase
  name: BlobClientBase
  nameWithType: BlobClientBase
  fullName: com.azure.storage.blob.specialized.BlobClientBase
- uid: com.azure.storage.blob.specialized.BlobClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)
  name: BlobClientBase.generateSas(BlobServiceSasSignatureValues)
  nameWithType: BlobClientBase.generateSas(BlobServiceSasSignatureValues)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.storage.blob.specialized.BlobClientBase.exists()
  name: BlobClientBase.exists()
  nameWithType: BlobClientBase.exists()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.exists()
- uid: com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)
  name: BlobClientBase.setAccessTier(AccessTier)
  nameWithType: BlobClientBase.setAccessTier(AccessTier)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)
- uid: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  name: BlobClientBase.setHttpHeaders(BlobHttpHeaders)
  nameWithType: BlobClientBase.setHttpHeaders(BlobHttpHeaders)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
- uid: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.abortCopyFromUrlWithResponse(String,String,Duration,Context)
  nameWithType: BlobClientBase.abortCopyFromUrlWithResponse(String,String,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)
  name: BlobClientBase.download(OutputStream)
  nameWithType: BlobClientBase.download(OutputStream)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.createSnapshotWithResponse(Map<String,String>,BlobRequestConditions,Duration,Context)
  nameWithType: BlobClientBase.createSnapshotWithResponse(Map<String,String>,BlobRequestConditions,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.undeleteWithResponse(Duration,Context)
  nameWithType: BlobClientBase.undeleteWithResponse(Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()
  name: BlobClientBase.getBlobUrl()
  nameWithType: BlobClientBase.getBlobUrl()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.downloadWithResponse(OutputStream,BlobRange,DownloadRetryOptions,BlobRequestConditions,boolean,Duration,Context)
  nameWithType: BlobClientBase.downloadWithResponse(OutputStream,BlobRange,DownloadRetryOptions,BlobRequestConditions,boolean,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getBlobName()
  name: BlobClientBase.getBlobName()
  nameWithType: BlobClientBase.getBlobName()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getBlobName()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.getAccountInfoWithResponse(Duration,Context)
  nameWithType: BlobClientBase.getAccountInfoWithResponse(Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)
  name: BlobClientBase.copyFromUrl(String)
  nameWithType: BlobClientBase.copyFromUrl(String)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)
- uid: com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()
  name: BlobClientBase.getHttpPipeline()
  nameWithType: BlobClientBase.getHttpPipeline()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()
- uid: com.azure.storage.blob.specialized.BlobClientBase.openInputStream()
  name: BlobClientBase.openInputStream()
  nameWithType: BlobClientBase.openInputStream()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.openInputStream()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()
  name: BlobClientBase.getSnapshotId()
  nameWithType: BlobClientBase.getSnapshotId()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.setAccessTierWithResponse(AccessTier,RehydratePriority,String,Duration,Context)
  nameWithType: BlobClientBase.setAccessTierWithResponse(AccessTier,RehydratePriority,String,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Set<OpenOption>,Duration,Context)
  nameWithType: BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Set<OpenOption>,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.getProperties()
  name: BlobClientBase.getProperties()
  nameWithType: BlobClientBase.getProperties()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getProperties()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)
  name: BlobClientBase.abortCopyFromUrl(String)
  nameWithType: BlobClientBase.abortCopyFromUrl(String)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)
- uid: com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()
  name: BlobClientBase.getCustomerProvidedKey()
  nameWithType: BlobClientBase.getCustomerProvidedKey()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()
- uid: com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)
  name: BlobClientBase.generateUserDelegationSas(BlobServiceSasSignatureValues,UserDelegationKey)
  nameWithType: BlobClientBase.generateUserDelegationSas(BlobServiceSasSignatureValues,UserDelegationKey)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)
- uid: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.setHttpHeadersWithResponse(BlobHttpHeaders,BlobRequestConditions,Duration,Context)
  nameWithType: BlobClientBase.setHttpHeadersWithResponse(BlobHttpHeaders,BlobRequestConditions,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  name: BlobClientBase.setMetadata(Map<String,String>)
  nameWithType: BlobClientBase.setMetadata(Map<String,String>)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
- uid: com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.deleteWithResponse(DeleteSnapshotsOptionType,BlobRequestConditions,Duration,Context)
  nameWithType: BlobClientBase.deleteWithResponse(DeleteSnapshotsOptionType,BlobRequestConditions,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.undelete()
  name: BlobClientBase.undelete()
  nameWithType: BlobClientBase.undelete()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.undelete()
- uid: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
  name: BlobClientBase.beginCopy(String,Map<String,String>,AccessTier,RehydratePriority,RequestConditions,BlobRequestConditions,Duration)
  nameWithType: BlobClientBase.beginCopy(String,Map<String,String>,AccessTier,RehydratePriority,RequestConditions,BlobRequestConditions,Duration)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
- uid: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.copyFromUrlWithResponse(String,Map<String,String>,AccessTier,RequestConditions,BlobRequestConditions,Duration,Context)
  nameWithType: BlobClientBase.copyFromUrlWithResponse(String,Map<String,String>,AccessTier,RequestConditions,BlobRequestConditions,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)
  name: BlobClientBase.getSnapshotClient(String)
  nameWithType: BlobClientBase.getSnapshotClient(String)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)
- uid: com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.getPropertiesWithResponse(BlobRequestConditions,Duration,Context)
  nameWithType: BlobClientBase.getPropertiesWithResponse(BlobRequestConditions,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String,boolean)
  name: BlobClientBase.downloadToFile(String,boolean)
  nameWithType: BlobClientBase.downloadToFile(String,boolean)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String,boolean)
- uid: com.azure.storage.blob.specialized.BlobClientBase.delete()
  name: BlobClientBase.delete()
  nameWithType: BlobClientBase.delete()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.delete()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getAccountName()
  name: BlobClientBase.getAccountName()
  nameWithType: BlobClientBase.getAccountName()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getAccountName()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()
  name: BlobClientBase.getServiceVersion()
  nameWithType: BlobClientBase.getServiceVersion()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()
- uid: com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()
  name: BlobClientBase.createSnapshot()
  nameWithType: BlobClientBase.createSnapshot()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getContainerName()
  name: BlobClientBase.getContainerName()
  nameWithType: BlobClientBase.getContainerName()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getContainerName()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()
  name: BlobClientBase.getAccountInfo()
  nameWithType: BlobClientBase.getAccountInfo()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()
- uid: com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()
  name: BlobClientBase.isSnapshot()
  nameWithType: BlobClientBase.isSnapshot()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()
- uid: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)
  name: BlobClientBase.beginCopy(String,Duration)
  nameWithType: BlobClientBase.beginCopy(String,Duration)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Duration,Context)
  nameWithType: BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.setMetadataWithResponse(Map<String,String>,BlobRequestConditions,Duration,Context)
  nameWithType: BlobClientBase.setMetadataWithResponse(Map<String,String>,BlobRequestConditions,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)
  name: BlobClientBase.openInputStream(BlobRange,BlobRequestConditions)
  nameWithType: BlobClientBase.openInputStream(BlobRange,BlobRequestConditions)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)
  name: BlobClientBase.downloadToFile(String)
  nameWithType: BlobClientBase.downloadToFile(String)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)
- uid: com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.existsWithResponse(Duration,Context)
  nameWithType: BlobClientBase.existsWithResponse(Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: String,String>,BlobRequestConditions,Duration,Context)
  nameWithType: String,String>,BlobRequestConditions,Duration,Context)
  fullName: java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map
  name: BlobClientBase.createSnapshotWithResponse(Map
  nameWithType: BlobClientBase.createSnapshotWithResponse(Map
  fullName: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set
  name: BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Set
  nameWithType: BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Set
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set
- uid: java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
  name: OpenOption>,Duration,Context)
  nameWithType: OpenOption>,Duration,Context)
  fullName: java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
- uid: java.lang.String,java.lang.String>)
  name: String,String>)
  nameWithType: String,String>)
  fullName: java.lang.String,java.lang.String>)
- uid: com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map
  name: BlobClientBase.setMetadata(Map
  nameWithType: BlobClientBase.setMetadata(Map
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map
- uid: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map
  name: BlobClientBase.beginCopy(String,Map
  nameWithType: BlobClientBase.beginCopy(String,Map
  fullName: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map
- uid: java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
  name: String,String>,AccessTier,RehydratePriority,RequestConditions,BlobRequestConditions,Duration)
  nameWithType: String,String>,AccessTier,RehydratePriority,RequestConditions,BlobRequestConditions,Duration)
  fullName: java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
- uid: java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: String,String>,AccessTier,RequestConditions,BlobRequestConditions,Duration,Context)
  nameWithType: String,String>,AccessTier,RequestConditions,BlobRequestConditions,Duration,Context)
  fullName: java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map
  name: BlobClientBase.copyFromUrlWithResponse(String,Map
  nameWithType: BlobClientBase.copyFromUrlWithResponse(String,Map
  fullName: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map
- uid: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map
  name: BlobClientBase.setMetadataWithResponse(Map
  nameWithType: BlobClientBase.setMetadataWithResponse(Map
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map
