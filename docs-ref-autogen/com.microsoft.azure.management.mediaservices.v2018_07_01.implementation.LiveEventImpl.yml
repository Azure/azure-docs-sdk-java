### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  id: "LiveEventImpl"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  children:
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.LiveEventImpl(com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.LiveEventImpl(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.createResourceAsync()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.created()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.crossSiteAccessPolicies()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.description()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.encoding()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.getInnerAsync()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.id()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.input()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.isInCreateMode()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.lastModified()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.location()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.manager()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.name()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.preview()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.provisioningState()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.resourceState()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.streamOptions()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.tags()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.type()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.updateResourceAsync()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.vanityUrl()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withAutoStart(java.lang.Boolean)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withCrossSiteAccessPolicies(com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withDescription(java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withEncoding(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withExistingMediaservice(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withInput(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withLocation(java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withPreview(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withStreamOptions(java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withVanityUrl(java.lang.Boolean)"
  langs:
  - "java"
  name: "LiveEventImpl"
  nameWithType: "LiveEventImpl"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  type: "Class"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: " class LiveEventImpl extends CreatableUpdatableImpl<LiveEvent,LiveEventInner,LiveEventImpl> implements LiveEvent, LiveEvent.Definition, LiveEvent.Update"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.arm.model.implementation.IndexableImpl"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableImpl"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl"
  implements:
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent.Definition"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent.Update"
  inheritedMembers:
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.<T>taskResult(java.lang.String)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.dag.FunctionalTaskItem)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.dag.TaskGroup.HasTaskGroup)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Creatable<? extends com.microsoft.azure.arm.model.Indexable>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Executable<? extends com.microsoft.azure.arm.model.Indexable>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.dag.FunctionalTaskItem)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.dag.TaskGroup.HasTaskGroup)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Appliable<? extends com.microsoft.azure.arm.model.Indexable>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Creatable<? extends com.microsoft.azure.arm.model.Indexable>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Executable<? extends com.microsoft.azure.arm.model.Indexable>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addeDependency(com.microsoft.azure.arm.model.Appliable<? extends com.microsoft.azure.arm.model.Indexable>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.afterPostRunAsync(boolean)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.apply()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync(com.microsoft.rest.ServiceCallback<FluentModelT>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.beforeGroupCreateOrUpdate()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.create()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync(com.microsoft.rest.ServiceCallback<FluentModelT>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.innerToFluentMap(FluentModelImplT)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.isHot()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.name()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.taskGroup()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.update()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.updateResourceAsync()"
  - "com.microsoft.azure.arm.model.implementation.IndexableImpl.key()"
  - "com.microsoft.azure.arm.model.implementation.IndexableImpl.toString()"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.getInnerAsync()"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.inner()"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.refresh()"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.refreshAsync()"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.setInner(InnerModelT)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.LiveEventImpl(com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager)"
  id: "LiveEventImpl(com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "LiveEventImpl(LiveEventInner inner, MediaManager manager)"
  nameWithType: "LiveEventImpl.LiveEventImpl(LiveEventInner inner, MediaManager manager)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.LiveEventImpl(LiveEventInner inner, MediaManager manager)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.LiveEventImpl*"
  type: "Constructor"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: " LiveEventImpl(LiveEventInner inner, MediaManager manager)"
    parameters:
    - id: "inner"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
    - id: "manager"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.LiveEventImpl(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager)"
  id: "LiveEventImpl(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "LiveEventImpl(String name, MediaManager manager)"
  nameWithType: "LiveEventImpl.LiveEventImpl(String name, MediaManager manager)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.LiveEventImpl(String name, MediaManager manager)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.LiveEventImpl*"
  type: "Constructor"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: " LiveEventImpl(String name, MediaManager manager)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    - id: "manager"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.createResourceAsync()"
  id: "createResourceAsync()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "createResourceAsync()"
  nameWithType: "LiveEventImpl.createResourceAsync()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.createResourceAsync()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.createResourceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public Observable<LiveEvent> createResourceAsync()"
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent>"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.created()"
  id: "created()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "created()"
  nameWithType: "LiveEventImpl.created()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.created()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.created*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public DateTime created()"
    return:
      type: "org.joda.time.DateTime"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.crossSiteAccessPolicies()"
  id: "crossSiteAccessPolicies()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "crossSiteAccessPolicies()"
  nameWithType: "LiveEventImpl.crossSiteAccessPolicies()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.crossSiteAccessPolicies()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.crossSiteAccessPolicies*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public CrossSiteAccessPolicies crossSiteAccessPolicies()"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.description()"
  id: "description()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "description()"
  nameWithType: "LiveEventImpl.description()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.description()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.description*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public String description()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.encoding()"
  id: "encoding()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "encoding()"
  nameWithType: "LiveEventImpl.encoding()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.encoding()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.encoding*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventEncoding encoding()"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.getInnerAsync()"
  id: "getInnerAsync()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "getInnerAsync()"
  nameWithType: "LiveEventImpl.getInnerAsync()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.getInnerAsync()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.getInnerAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "protected Observable<LiveEventInner> getInnerAsync()"
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.id()"
  id: "id()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "id()"
  nameWithType: "LiveEventImpl.id()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.id()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.id*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public String id()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.input()"
  id: "input()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "input()"
  nameWithType: "LiveEventImpl.input()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.input()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.input*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventInput input()"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.isInCreateMode()"
  id: "isInCreateMode()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "isInCreateMode()"
  nameWithType: "LiveEventImpl.isInCreateMode()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.isInCreateMode()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.isInCreateMode*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public boolean isInCreateMode()"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.lastModified()"
  id: "lastModified()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "lastModified()"
  nameWithType: "LiveEventImpl.lastModified()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.lastModified()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.lastModified*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public DateTime lastModified()"
    return:
      type: "org.joda.time.DateTime"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.location()"
  id: "location()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "location()"
  nameWithType: "LiveEventImpl.location()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.location()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.location*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public String location()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.manager()"
  id: "manager()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "manager()"
  nameWithType: "LiveEventImpl.manager()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.manager()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.manager*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public MediaManager manager()"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.name()"
  id: "name()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "name()"
  nameWithType: "LiveEventImpl.name()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.name()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.name*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public String name()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.preview()"
  id: "preview()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "preview()"
  nameWithType: "LiveEventImpl.preview()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.preview()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.preview*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventPreview preview()"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.provisioningState()"
  id: "provisioningState()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "provisioningState()"
  nameWithType: "LiveEventImpl.provisioningState()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.provisioningState()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.provisioningState*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public String provisioningState()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.resourceState()"
  id: "resourceState()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "resourceState()"
  nameWithType: "LiveEventImpl.resourceState()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.resourceState()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.resourceState*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventResourceState resourceState()"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventResourceState"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.streamOptions()"
  id: "streamOptions()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "streamOptions()"
  nameWithType: "LiveEventImpl.streamOptions()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.streamOptions()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.streamOptions*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public List<StreamOptionsFlag> streamOptions()"
    return:
      type: "java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag>"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.tags()"
  id: "tags()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "tags()"
  nameWithType: "LiveEventImpl.tags()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.tags()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.tags*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public Map<String,String> tags()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.type()"
  id: "type()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "type()"
  nameWithType: "LiveEventImpl.type()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.type()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.type*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public String type()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.updateResourceAsync()"
  id: "updateResourceAsync()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "updateResourceAsync()"
  nameWithType: "LiveEventImpl.updateResourceAsync()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.updateResourceAsync()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.updateResourceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public Observable<LiveEvent> updateResourceAsync()"
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent>"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.vanityUrl()"
  id: "vanityUrl()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "vanityUrl()"
  nameWithType: "LiveEventImpl.vanityUrl()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.vanityUrl()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.vanityUrl*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public Boolean vanityUrl()"
    return:
      type: "java.lang.Boolean"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withAutoStart(java.lang.Boolean)"
  id: "withAutoStart(java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "withAutoStart(Boolean autoStart)"
  nameWithType: "LiveEventImpl.withAutoStart(Boolean autoStart)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withAutoStart(Boolean autoStart)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withAutoStart*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventImpl withAutoStart(Boolean autoStart)"
    parameters:
    - id: "autoStart"
      type: "java.lang.Boolean"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withCrossSiteAccessPolicies(com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies)"
  id: "withCrossSiteAccessPolicies(com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies)"
  nameWithType: "LiveEventImpl.withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withCrossSiteAccessPolicies*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventImpl withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies)"
    parameters:
    - id: "crossSiteAccessPolicies"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withDescription(java.lang.String)"
  id: "withDescription(java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "withDescription(String description)"
  nameWithType: "LiveEventImpl.withDescription(String description)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withDescription(String description)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withDescription*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventImpl withDescription(String description)"
    parameters:
    - id: "description"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withEncoding(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding)"
  id: "withEncoding(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "withEncoding(LiveEventEncoding encoding)"
  nameWithType: "LiveEventImpl.withEncoding(LiveEventEncoding encoding)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withEncoding(LiveEventEncoding encoding)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withEncoding*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventImpl withEncoding(LiveEventEncoding encoding)"
    parameters:
    - id: "encoding"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withExistingMediaservice(java.lang.String,java.lang.String)"
  id: "withExistingMediaservice(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "withExistingMediaservice(String resourceGroupName, String accountName)"
  nameWithType: "LiveEventImpl.withExistingMediaservice(String resourceGroupName, String accountName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withExistingMediaservice(String resourceGroupName, String accountName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withExistingMediaservice*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventImpl withExistingMediaservice(String resourceGroupName, String accountName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
    - id: "accountName"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withInput(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput)"
  id: "withInput(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "withInput(LiveEventInput input)"
  nameWithType: "LiveEventImpl.withInput(LiveEventInput input)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withInput(LiveEventInput input)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withInput*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventImpl withInput(LiveEventInput input)"
    parameters:
    - id: "input"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withLocation(java.lang.String)"
  id: "withLocation(java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "withLocation(String location)"
  nameWithType: "LiveEventImpl.withLocation(String location)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withLocation(String location)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withLocation*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventImpl withLocation(String location)"
    parameters:
    - id: "location"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withPreview(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview)"
  id: "withPreview(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "withPreview(LiveEventPreview preview)"
  nameWithType: "LiveEventImpl.withPreview(LiveEventPreview preview)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withPreview(LiveEventPreview preview)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withPreview*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventImpl withPreview(LiveEventPreview preview)"
    parameters:
    - id: "preview"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withStreamOptions(java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag>)"
  id: "withStreamOptions(java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "withStreamOptions(List<StreamOptionsFlag> streamOptions)"
  nameWithType: "LiveEventImpl.withStreamOptions(List<StreamOptionsFlag> streamOptions)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withStreamOptions(List<StreamOptionsFlag> streamOptions)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withStreamOptions*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventImpl withStreamOptions(List<StreamOptionsFlag> streamOptions)"
    parameters:
    - id: "streamOptions"
      type: "java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag>"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  id: "withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "LiveEventImpl.withTags(Map<String,String> tags)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withTags(Map<String,String> tags)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withTags*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventImpl withTags(Map<String,String> tags)"
    parameters:
    - id: "tags"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withVanityUrl(java.lang.Boolean)"
  id: "withVanityUrl(java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  langs:
  - "java"
  name: "withVanityUrl(Boolean vanityUrl)"
  nameWithType: "LiveEventImpl.withVanityUrl(Boolean vanityUrl)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withVanityUrl(Boolean vanityUrl)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withVanityUrl*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventImpl withVanityUrl(Boolean vanityUrl)"
    parameters:
    - id: "vanityUrl"
      type: "java.lang.Boolean"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager"
  name: "MediaManager"
  nameWithType: "MediaManager"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.LiveEventImpl*"
  name: "LiveEventImpl"
  nameWithType: "LiveEventImpl.LiveEventImpl"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.LiveEventImpl"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  name: "LiveEventInner"
  nameWithType: "LiveEventInner"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.manager*"
  name: "manager"
  nameWithType: "LiveEventImpl.manager"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.manager"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent"
    name: "LiveEvent"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.createResourceAsync*"
  name: "createResourceAsync"
  nameWithType: "LiveEventImpl.createResourceAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.createResourceAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.updateResourceAsync*"
  name: "updateResourceAsync"
  nameWithType: "LiveEventImpl.updateResourceAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.updateResourceAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
    name: "LiveEventInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.getInnerAsync*"
  name: "getInnerAsync"
  nameWithType: "LiveEventImpl.getInnerAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.getInnerAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.isInCreateMode*"
  name: "isInCreateMode"
  nameWithType: "LiveEventImpl.isInCreateMode"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.isInCreateMode"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "org.joda.time.DateTime"
  spec.java:
  - uid: "org.joda.time.DateTime"
    name: "DateTime"
    fullName: "org.joda.time.DateTime"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.created*"
  name: "created"
  nameWithType: "LiveEventImpl.created"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.created"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies"
  name: "CrossSiteAccessPolicies"
  nameWithType: "CrossSiteAccessPolicies"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.crossSiteAccessPolicies*"
  name: "crossSiteAccessPolicies"
  nameWithType: "LiveEventImpl.crossSiteAccessPolicies"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.crossSiteAccessPolicies"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.description*"
  name: "description"
  nameWithType: "LiveEventImpl.description"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.description"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding"
  name: "LiveEventEncoding"
  nameWithType: "LiveEventEncoding"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.encoding*"
  name: "encoding"
  nameWithType: "LiveEventImpl.encoding"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.encoding"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.id*"
  name: "id"
  nameWithType: "LiveEventImpl.id"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.id"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput"
  name: "LiveEventInput"
  nameWithType: "LiveEventInput"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.input*"
  name: "input"
  nameWithType: "LiveEventImpl.input"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.input"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.lastModified*"
  name: "lastModified"
  nameWithType: "LiveEventImpl.lastModified"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.lastModified"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.location*"
  name: "location"
  nameWithType: "LiveEventImpl.location"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.location"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.name*"
  name: "name"
  nameWithType: "LiveEventImpl.name"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.name"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview"
  name: "LiveEventPreview"
  nameWithType: "LiveEventPreview"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.preview*"
  name: "preview"
  nameWithType: "LiveEventImpl.preview"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.preview"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.provisioningState*"
  name: "provisioningState"
  nameWithType: "LiveEventImpl.provisioningState"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.provisioningState"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventResourceState"
  name: "LiveEventResourceState"
  nameWithType: "LiveEventResourceState"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventResourceState"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.resourceState*"
  name: "resourceState"
  nameWithType: "LiveEventImpl.resourceState"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.resourceState"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag"
    name: "StreamOptionsFlag"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.streamOptions*"
  name: "streamOptions"
  nameWithType: "LiveEventImpl.streamOptions"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.streamOptions"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.tags*"
  name: "tags"
  nameWithType: "LiveEventImpl.tags"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.tags"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.type*"
  name: "type"
  nameWithType: "LiveEventImpl.type"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.type"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.vanityUrl*"
  name: "vanityUrl"
  nameWithType: "LiveEventImpl.vanityUrl"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.vanityUrl"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withExistingMediaservice*"
  name: "withExistingMediaservice"
  nameWithType: "LiveEventImpl.withExistingMediaservice"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withExistingMediaservice"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withAutoStart*"
  name: "withAutoStart"
  nameWithType: "LiveEventImpl.withAutoStart"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withAutoStart"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withInput*"
  name: "withInput"
  nameWithType: "LiveEventImpl.withInput"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withInput"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withCrossSiteAccessPolicies*"
  name: "withCrossSiteAccessPolicies"
  nameWithType: "LiveEventImpl.withCrossSiteAccessPolicies"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withCrossSiteAccessPolicies"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withDescription*"
  name: "withDescription"
  nameWithType: "LiveEventImpl.withDescription"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withDescription"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withEncoding*"
  name: "withEncoding"
  nameWithType: "LiveEventImpl.withEncoding"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withEncoding"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withLocation*"
  name: "withLocation"
  nameWithType: "LiveEventImpl.withLocation"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withLocation"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withPreview*"
  name: "withPreview"
  nameWithType: "LiveEventImpl.withPreview"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withPreview"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withStreamOptions*"
  name: "withStreamOptions"
  nameWithType: "LiveEventImpl.withStreamOptions"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withStreamOptions"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withTags*"
  name: "withTags"
  nameWithType: "LiveEventImpl.withTags"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withTags"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withVanityUrl*"
  name: "withVanityUrl"
  nameWithType: "LiveEventImpl.withVanityUrl"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl.withVanityUrl"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl<com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl>"
  name: "CreatableUpdatableImpl<LiveEvent,LiveEventInner,LiveEventImpl>"
  nameWithType: "CreatableUpdatableImpl<LiveEvent,LiveEventInner,LiveEventImpl>"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl<com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl>"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent"
  name: "LiveEvent"
  nameWithType: "LiveEvent"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent.Update"
  name: "LiveEvent.Update"
  nameWithType: "LiveEvent.Update"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent.Update"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent.Definition"
  name: "LiveEvent.Definition"
  nameWithType: "LiveEvent.Definition"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent.Definition"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableImpl.toString()"
  name: "IndexableImpl.toString()"
  nameWithType: "IndexableImpl.toString()"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableImpl.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.dag.TaskGroup.HasTaskGroup)"
  name: "CreatableUpdatableImpl.addPostRunDependent(TaskGroup.HasTaskGroup)"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(TaskGroup.HasTaskGroup)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.dag.TaskGroup.HasTaskGroup)"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.inner()"
  name: "IndexableRefreshableWrapperImpl.inner()"
  nameWithType: "IndexableRefreshableWrapperImpl.inner()"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.inner()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.dag.TaskGroup.HasTaskGroup)"
  name: "CreatableUpdatableImpl.addDependency(TaskGroup.HasTaskGroup)"
  nameWithType: "CreatableUpdatableImpl.addDependency(TaskGroup.HasTaskGroup)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.dag.TaskGroup.HasTaskGroup)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Creatable<? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "CreatableUpdatableImpl.addDependency(Creatable<? extends Indexable>)"
  nameWithType: "CreatableUpdatableImpl.addDependency(Creatable<? extends Indexable>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Creatable<? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Executable<? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "CreatableUpdatableImpl.addDependency(Executable<? extends Indexable>)"
  nameWithType: "CreatableUpdatableImpl.addDependency(Executable<? extends Indexable>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Executable<? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.setInner(InnerModelT)"
  name: "IndexableRefreshableWrapperImpl.setInner(InnerModelT)"
  nameWithType: "IndexableRefreshableWrapperImpl.setInner(InnerModelT)"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.setInner(InnerModelT)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync(com.microsoft.rest.ServiceCallback<FluentModelT>)"
  name: "CreatableUpdatableImpl.createAsync(ServiceCallback<FluentModelT>)"
  nameWithType: "CreatableUpdatableImpl.createAsync(ServiceCallback<FluentModelT>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync(com.microsoft.rest.ServiceCallback<FluentModelT>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.taskGroup()"
  name: "CreatableUpdatableImpl.taskGroup()"
  nameWithType: "CreatableUpdatableImpl.taskGroup()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.taskGroup()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.dag.FunctionalTaskItem)"
  name: "CreatableUpdatableImpl.addPostRunDependent(FunctionalTaskItem)"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(FunctionalTaskItem)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.dag.FunctionalTaskItem)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.name()"
  name: "CreatableUpdatableImpl.name()"
  nameWithType: "CreatableUpdatableImpl.name()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.name()"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.refreshAsync()"
  name: "IndexableRefreshableWrapperImpl.refreshAsync()"
  nameWithType: "IndexableRefreshableWrapperImpl.refreshAsync()"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.refreshAsync()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableImpl.key()"
  name: "IndexableImpl.key()"
  nameWithType: "IndexableImpl.key()"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableImpl.key()"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.getInnerAsync()"
  name: "IndexableRefreshableWrapperImpl.getInnerAsync()"
  nameWithType: "IndexableRefreshableWrapperImpl.getInnerAsync()"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.getInnerAsync()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.refresh()"
  name: "IndexableRefreshableWrapperImpl.refresh()"
  nameWithType: "IndexableRefreshableWrapperImpl.refresh()"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.refresh()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.create()"
  name: "CreatableUpdatableImpl.create()"
  nameWithType: "CreatableUpdatableImpl.create()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.create()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.afterPostRunAsync(boolean)"
  name: "CreatableUpdatableImpl.afterPostRunAsync(boolean)"
  nameWithType: "CreatableUpdatableImpl.afterPostRunAsync(boolean)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.afterPostRunAsync(boolean)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.beforeGroupCreateOrUpdate()"
  name: "CreatableUpdatableImpl.beforeGroupCreateOrUpdate()"
  nameWithType: "CreatableUpdatableImpl.beforeGroupCreateOrUpdate()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.beforeGroupCreateOrUpdate()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Appliable<? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "CreatableUpdatableImpl.addPostRunDependent(Appliable<? extends Indexable>)"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(Appliable<? extends Indexable>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Appliable<? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.<T>taskResult(java.lang.String)"
  name: "CreatableUpdatableImpl.<T>taskResult(String)"
  nameWithType: "CreatableUpdatableImpl.<T>taskResult(String)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.<T>taskResult(java.lang.String)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.isHot()"
  name: "CreatableUpdatableImpl.isHot()"
  nameWithType: "CreatableUpdatableImpl.isHot()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.isHot()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync()"
  name: "CreatableUpdatableImpl.createAsync()"
  nameWithType: "CreatableUpdatableImpl.createAsync()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.dag.FunctionalTaskItem)"
  name: "CreatableUpdatableImpl.addDependency(FunctionalTaskItem)"
  nameWithType: "CreatableUpdatableImpl.addDependency(FunctionalTaskItem)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.dag.FunctionalTaskItem)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addeDependency(com.microsoft.azure.arm.model.Appliable<? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "CreatableUpdatableImpl.addeDependency(Appliable<? extends Indexable>)"
  nameWithType: "CreatableUpdatableImpl.addeDependency(Appliable<? extends Indexable>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addeDependency(com.microsoft.azure.arm.model.Appliable<? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync(com.microsoft.rest.ServiceCallback<FluentModelT>)"
  name: "CreatableUpdatableImpl.applyAsync(ServiceCallback<FluentModelT>)"
  nameWithType: "CreatableUpdatableImpl.applyAsync(ServiceCallback<FluentModelT>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync(com.microsoft.rest.ServiceCallback<FluentModelT>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Creatable<? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "CreatableUpdatableImpl.addPostRunDependent(Creatable<? extends Indexable>)"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(Creatable<? extends Indexable>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Creatable<? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync()"
  name: "CreatableUpdatableImpl.applyAsync()"
  nameWithType: "CreatableUpdatableImpl.applyAsync()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.update()"
  name: "CreatableUpdatableImpl.update()"
  nameWithType: "CreatableUpdatableImpl.update()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.update()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.apply()"
  name: "CreatableUpdatableImpl.apply()"
  nameWithType: "CreatableUpdatableImpl.apply()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.apply()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Executable<? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "CreatableUpdatableImpl.addPostRunDependent(Executable<? extends Indexable>)"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(Executable<? extends Indexable>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Executable<? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.innerToFluentMap(FluentModelImplT)"
  name: "CreatableUpdatableImpl.innerToFluentMap(FluentModelImplT)"
  nameWithType: "CreatableUpdatableImpl.innerToFluentMap(FluentModelImplT)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.innerToFluentMap(FluentModelImplT)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.updateResourceAsync()"
  name: "CreatableUpdatableImpl.updateResourceAsync()"
  nameWithType: "CreatableUpdatableImpl.updateResourceAsync()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.updateResourceAsync()"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag"
  name: "StreamOptionsFlag"
  nameWithType: "StreamOptionsFlag"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl"
  name: "CreatableUpdatableImpl"
  nameWithType: "CreatableUpdatableImpl"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
  name: "LiveEvent,LiveEventInner,LiveEventImpl"
  nameWithType: "LiveEvent,LiveEventInner,LiveEventImpl"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEvent,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventImpl"
- uid: "? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "? extends Indexable>)"
  nameWithType: "? extends Indexable>)"
  fullName: "? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Creatable"
  name: "CreatableUpdatableImpl.addDependency(Creatable"
  nameWithType: "CreatableUpdatableImpl.addDependency(Creatable"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Creatable"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Executable"
  name: "CreatableUpdatableImpl.addDependency(Executable"
  nameWithType: "CreatableUpdatableImpl.addDependency(Executable"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Executable"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync(com.microsoft.rest.ServiceCallback"
  name: "CreatableUpdatableImpl.createAsync(ServiceCallback"
  nameWithType: "CreatableUpdatableImpl.createAsync(ServiceCallback"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync(com.microsoft.rest.ServiceCallback"
- uid: "FluentModelT>)"
  name: "FluentModelT>)"
  nameWithType: "FluentModelT>)"
  fullName: "FluentModelT>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Appliable"
  name: "CreatableUpdatableImpl.addPostRunDependent(Appliable"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(Appliable"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Appliable"
- uid: "T>taskResult(java.lang.String)"
  name: "T>taskResult(String)"
  nameWithType: "T>taskResult(String)"
  fullName: "T>taskResult(java.lang.String)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl."
  name: "CreatableUpdatableImpl."
  nameWithType: "CreatableUpdatableImpl."
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl."
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addeDependency(com.microsoft.azure.arm.model.Appliable"
  name: "CreatableUpdatableImpl.addeDependency(Appliable"
  nameWithType: "CreatableUpdatableImpl.addeDependency(Appliable"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addeDependency(com.microsoft.azure.arm.model.Appliable"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync(com.microsoft.rest.ServiceCallback"
  name: "CreatableUpdatableImpl.applyAsync(ServiceCallback"
  nameWithType: "CreatableUpdatableImpl.applyAsync(ServiceCallback"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync(com.microsoft.rest.ServiceCallback"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Creatable"
  name: "CreatableUpdatableImpl.addPostRunDependent(Creatable"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(Creatable"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Creatable"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Executable"
  name: "CreatableUpdatableImpl.addPostRunDependent(Executable"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(Executable"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Executable"
