### YamlMime:JavaType
uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder"
fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder"
name: "OkHttpAsyncHttpClientBuilder"
nameWithType: "OkHttpAsyncHttpClientBuilder"
summary: "Builder class responsible for creating instances of <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.http.HttpClient\"></xref> backed by Ok<wbr>Http."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class OkHttpAsyncHttpClientBuilder"
constructors:
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.OkHttpAsyncHttpClientBuilder()"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.OkHttpAsyncHttpClientBuilder()"
  name: "OkHttpAsyncHttpClientBuilder()"
  nameWithType: "OkHttpAsyncHttpClientBuilder.OkHttpAsyncHttpClientBuilder()"
  summary: "Creates Ok<wbr>Http<wbr>Async<wbr>Http<wbr>Client<wbr>Builder."
  syntax: "public OkHttpAsyncHttpClientBuilder()"
  desc: "Creates OkHttpAsyncHttpClientBuilder."
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.OkHttpAsyncHttpClientBuilder(okhttp3.OkHttpClient)"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.OkHttpAsyncHttpClientBuilder(OkHttpClient okHttpClient)"
  name: "OkHttpAsyncHttpClientBuilder(OkHttpClient okHttpClient)"
  nameWithType: "OkHttpAsyncHttpClientBuilder.OkHttpAsyncHttpClientBuilder(OkHttpClient okHttpClient)"
  summary: "Creates Ok<wbr>Http<wbr>Async<wbr>Http<wbr>Client<wbr>Builder from the builder of an existing Ok<wbr>Http<wbr>Client."
  parameters:
  - description: "the httpclient"
    name: "okHttpClient"
    type: "<xref href=\"okhttp3.OkHttpClient?alt=okhttp3.OkHttpClient&text=OkHttpClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OkHttpAsyncHttpClientBuilder(OkHttpClient okHttpClient)"
  desc: "Creates OkHttpAsyncHttpClientBuilder from the builder of an existing OkHttpClient."
methods:
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.addNetworkInterceptor(okhttp3.Interceptor)"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.addNetworkInterceptor(Interceptor networkInterceptor)"
  name: "addNetworkInterceptor(Interceptor networkInterceptor)"
  nameWithType: "OkHttpAsyncHttpClientBuilder.addNetworkInterceptor(Interceptor networkInterceptor)"
  summary: "Add a network layer interceptor to Http request pipeline."
  parameters:
  - description: "the interceptor to add"
    name: "networkInterceptor"
    type: "<xref href=\"okhttp3.Interceptor?alt=okhttp3.Interceptor&text=Interceptor\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OkHttpAsyncHttpClientBuilder addNetworkInterceptor(Interceptor networkInterceptor)"
  desc: "Add a network layer interceptor to Http request pipeline."
  returns:
    description: "the updated OkHttpAsyncHttpClientBuilder object"
    type: "<xref href=\"com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder?alt=com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder&text=OkHttpAsyncHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.build()"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.build()"
  name: "build()"
  nameWithType: "OkHttpAsyncHttpClientBuilder.build()"
  summary: "Creates a new Ok<wbr>Http-backed <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.http.HttpClient\"></xref> instance on every call, using the configuration set in the builder at the time of the build method call."
  syntax: "public HttpClient build()"
  desc: "Creates a new OkHttp-backed <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.http.HttpClient\"></xref> instance on every call, using the configuration set in the builder at the time of the build method call."
  returns:
    description: "A new OkHttp-backed <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.http.HttpClient\"></xref> instance."
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.callTimeout(java.time.Duration)"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.callTimeout(Duration callTimeout)"
  name: "callTimeout(Duration callTimeout)"
  nameWithType: "OkHttpAsyncHttpClientBuilder.callTimeout(Duration callTimeout)"
  summary: "Sets the default timeout for complete calls."
  parameters:
  - description: "Call timeout duration."
    name: "callTimeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OkHttpAsyncHttpClientBuilder callTimeout(Duration callTimeout)"
  desc: "Sets the default timeout for complete calls.\n\nThe call timeout spans the entire call: resolving DNS, connecting, writing the request body, server processing, and reading the response body.\n\nNull or <xref uid=\"java.time.Duration.ZERO\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration#ZERO\"></xref> means no call timeout, otherwise values must be between 1 and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Integer#MAX_VALUE\"></xref> when converted to milliseconds.\n\nBy default, call timeout is not enabled."
  returns:
    description: "The updated OkHttpAsyncHttpClientBuilder object."
    type: "<xref href=\"com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder?alt=com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder&text=OkHttpAsyncHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.configuration(com.azure.core.util.Configuration)"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.configuration(Configuration configuration)"
  name: "configuration(Configuration configuration)"
  nameWithType: "OkHttpAsyncHttpClientBuilder.configuration(Configuration configuration)"
  summary: "Sets the configuration store that is used during construction of the HTTP client."
  parameters:
  - description: "The configuration store."
    name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OkHttpAsyncHttpClientBuilder configuration(Configuration configuration)"
  desc: "Sets the configuration store that is used during construction of the HTTP client.\n\nThe default configuration store is a clone of the <xref uid=\"Configuration#getGlobalConfiguration()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"global\n configuration store\"></xref>, use <xref uid=\"com.azure.core.util.Configuration.NONE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#NONE\"></xref> to bypass using configuration settings during construction."
  returns:
    description: "The updated OkHttpAsyncHttpClientBuilder object."
    type: "<xref href=\"com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder?alt=com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder&text=OkHttpAsyncHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.connectionPool(okhttp3.ConnectionPool)"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.connectionPool(ConnectionPool connectionPool)"
  name: "connectionPool(ConnectionPool connectionPool)"
  nameWithType: "OkHttpAsyncHttpClientBuilder.connectionPool(ConnectionPool connectionPool)"
  summary: "Sets the Http connection pool."
  parameters:
  - description: "The OkHttp connection pool to use."
    name: "connectionPool"
    type: "<xref href=\"okhttp3.ConnectionPool?alt=okhttp3.ConnectionPool&text=ConnectionPool\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OkHttpAsyncHttpClientBuilder connectionPool(ConnectionPool connectionPool)"
  desc: "Sets the Http connection pool."
  returns:
    description: "The updated OkHttpAsyncHttpClientBuilder object."
    type: "<xref href=\"com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder?alt=com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder&text=OkHttpAsyncHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.connectionTimeout(java.time.Duration)"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.connectionTimeout(Duration connectionTimeout)"
  name: "connectionTimeout(Duration connectionTimeout)"
  nameWithType: "OkHttpAsyncHttpClientBuilder.connectionTimeout(Duration connectionTimeout)"
  summary: "Sets the connection timeout for a request to be sent."
  parameters:
  - description: "Connect timeout duration."
    name: "connectionTimeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OkHttpAsyncHttpClientBuilder connectionTimeout(Duration connectionTimeout)"
  desc: "Sets the connection timeout for a request to be sent.\n\nThe connection timeout begins once the request attempts to connect to the remote host and finishes once the connection is resolved.\n\nIf `connectTimeout` is null either <xref uid=\"com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_CONNECT_TIMEOUT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#PROPERTY_AZURE_REQUEST_CONNECT_TIMEOUT\"></xref> or a 10-second timeout will be used, if it is a <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref> less than or equal to zero then no timeout will be applied. When applying the timeout the greatest of one millisecond and the value of `connectTimeout` will be used.\n\nBy default, the connection timeout is 10 seconds."
  returns:
    description: "The updated OkHttpAsyncHttpClientBuilder object."
    type: "<xref href=\"com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder?alt=com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder&text=OkHttpAsyncHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.dispatcher(okhttp3.Dispatcher)"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.dispatcher(Dispatcher dispatcher)"
  name: "dispatcher(Dispatcher dispatcher)"
  nameWithType: "OkHttpAsyncHttpClientBuilder.dispatcher(Dispatcher dispatcher)"
  summary: "Sets the dispatcher that also composes the thread pool for executing HTTP requests."
  parameters:
  - description: "The dispatcher to use."
    name: "dispatcher"
    type: "<xref href=\"okhttp3.Dispatcher?alt=okhttp3.Dispatcher&text=Dispatcher\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OkHttpAsyncHttpClientBuilder dispatcher(Dispatcher dispatcher)"
  desc: "Sets the dispatcher that also composes the thread pool for executing HTTP requests."
  returns:
    description: "The updated OkHttpAsyncHttpClientBuilder object."
    type: "<xref href=\"com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder?alt=com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder&text=OkHttpAsyncHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.followRedirects(boolean)"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.followRedirects(boolean followRedirects)"
  name: "followRedirects(boolean followRedirects)"
  nameWithType: "OkHttpAsyncHttpClientBuilder.followRedirects(boolean followRedirects)"
  summary: "Sets the followRedirect flag on the underlying OkHttp-backed <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.http.HttpClient\"></xref>."
  parameters:
  - description: "The followRedirects value to use."
    name: "followRedirects"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OkHttpAsyncHttpClientBuilder followRedirects(boolean followRedirects)"
  desc: "Sets the followRedirect flag on the underlying OkHttp-backed <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.http.HttpClient\"></xref>.\n\nIf this is set to 'true' redirects will be followed automatically, and if your HTTP pipeline is configured with a redirect policy it will not be called."
  returns:
    description: "The updated OkHttpAsyncHttpClientBuilder object."
    type: "<xref href=\"com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder?alt=com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder&text=OkHttpAsyncHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.networkInterceptors(java.util.List<okhttp3.Interceptor>)"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.networkInterceptors(List<Interceptor> networkInterceptors)"
  name: "networkInterceptors(List<Interceptor> networkInterceptors)"
  nameWithType: "OkHttpAsyncHttpClientBuilder.networkInterceptors(List<Interceptor> networkInterceptors)"
  summary: "Add network layer interceptors to Http request pipeline."
  parameters:
  - description: "The interceptors to add."
    name: "networkInterceptors"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"okhttp3.Interceptor?alt=okhttp3.Interceptor&text=Interceptor\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public OkHttpAsyncHttpClientBuilder networkInterceptors(List<Interceptor> networkInterceptors)"
  desc: "Add network layer interceptors to Http request pipeline.\n\nThis replaces all previously-set interceptors."
  returns:
    description: "The updated OkHttpAsyncHttpClientBuilder object."
    type: "<xref href=\"com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder?alt=com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder&text=OkHttpAsyncHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.proxy(com.azure.core.http.ProxyOptions)"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.proxy(ProxyOptions proxyOptions)"
  name: "proxy(ProxyOptions proxyOptions)"
  nameWithType: "OkHttpAsyncHttpClientBuilder.proxy(ProxyOptions proxyOptions)"
  summary: "Sets the proxy."
  parameters:
  - description: "The proxy configuration to use."
    name: "proxyOptions"
    type: "<xref href=\"com.azure.core.http.ProxyOptions?alt=com.azure.core.http.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OkHttpAsyncHttpClientBuilder proxy(ProxyOptions proxyOptions)"
  desc: "Sets the proxy."
  returns:
    description: "The updated OkHttpAsyncHttpClientBuilder object."
    type: "<xref href=\"com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder?alt=com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder&text=OkHttpAsyncHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.readTimeout(java.time.Duration)"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.readTimeout(Duration readTimeout)"
  name: "readTimeout(Duration readTimeout)"
  nameWithType: "OkHttpAsyncHttpClientBuilder.readTimeout(Duration readTimeout)"
  summary: "Sets the read timeout duration used when reading the server response."
  parameters:
  - description: "Read timeout duration."
    name: "readTimeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OkHttpAsyncHttpClientBuilder readTimeout(Duration readTimeout)"
  desc: "Sets the read timeout duration used when reading the server response.\n\nThe read timeout begins once the first response read is triggered after the server response is received. This timeout triggers periodically but won't fire its operation if another read operation has completed between when the timeout is triggered and completes.\n\nIf `readTimeout` is null or <xref uid=\"com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_READ_TIMEOUT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#PROPERTY_AZURE_REQUEST_READ_TIMEOUT\"></xref> or a 60-second timeout will be used, if it is a <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref> less than or equal to zero then no timeout period will be applied to response read. When applying the timeout the greatest of one millisecond and the value of `readTimeout` will be used."
  returns:
    description: "The updated OkHttpAsyncHttpClientBuilder object."
    type: "<xref href=\"com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder?alt=com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder&text=OkHttpAsyncHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.writeTimeout(java.time.Duration)"
  fullName: "com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder.writeTimeout(Duration writeTimeout)"
  name: "writeTimeout(Duration writeTimeout)"
  nameWithType: "OkHttpAsyncHttpClientBuilder.writeTimeout(Duration writeTimeout)"
  summary: "Sets the writing timeout for a request to be sent."
  parameters:
  - description: "Write operation timeout duration."
    name: "writeTimeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OkHttpAsyncHttpClientBuilder writeTimeout(Duration writeTimeout)"
  desc: "Sets the writing timeout for a request to be sent.\n\nThe writing timeout does not apply to the entire request but to the request being sent over the wire. For example a request body which emits `10` `8KB` buffers will trigger `10` write operations, the last write tracker will update when each operation completes and the outbound buffer will be periodically checked to determine if it is still draining.\n\nIf `writeTimeout` is null either <xref uid=\"com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_WRITE_TIMEOUT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#PROPERTY_AZURE_REQUEST_WRITE_TIMEOUT\"></xref> or a 60-second timeout will be used, if it is a <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref> less than or equal to zero then no write timeout will be applied. When applying the timeout the greatest of one millisecond and the value of `writeTimeout` will be used."
  returns:
    description: "The updated OkHttpAsyncHttpClientBuilder object."
    type: "<xref href=\"com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder?alt=com.azure.core.http.okhttp.OkHttpAsyncHttpClientBuilder&text=OkHttpAsyncHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Builder class responsible for creating instances of <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.http.HttpClient\"></xref> backed by OkHttp."
metadata: {}
package: "com.azure.core.http.okhttp"
artifact: com.azure:azure-core-http-okhttp:1.11.1
