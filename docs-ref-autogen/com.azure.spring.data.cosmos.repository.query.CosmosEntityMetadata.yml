### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.query.CosmosEntityMetadata"
fullName: "com.azure.spring.data.cosmos.repository.query.CosmosEntityMetadata<T>"
name: "CosmosEntityMetadata<T>"
nameWithType: "CosmosEntityMetadata<T>"
summary: "Metadata class to describe cosmos entity includes domain type and container information"
syntax: "public interface **CosmosEntityMetadata<T>**</br> extends <xref href=\"org.springframework.data.repository.core.EntityMetadata?alt=org.springframework.data.repository.core.EntityMetadata&text=EntityMetadata\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.spring.data.cosmos.repository.query.CosmosEntityMetadata.getContainerName()"
  fullName: "com.azure.spring.data.cosmos.repository.query.CosmosEntityMetadata<T>.getContainerName()"
  name: "getContainerName()"
  nameWithType: "CosmosEntityMetadata<T>.getContainerName()"
  summary: "Get container name from the given entity"
  modifiers:
  - "abstract"
  syntax: "public abstract String getContainerName()"
  desc: "Get container name from the given entity"
  returns:
    description: "String"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
type: "interface"
typeParameters:
- name: "T"
desc: "Metadata class to describe cosmos entity includes domain type and container information"
implements:
- "<xref href=\"org.springframework.data.repository.core.EntityMetadata?alt=org.springframework.data.repository.core.EntityMetadata&text=EntityMetadata\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.query"
artifact: com.azure:azure-spring-data-cosmos:3.43.0
