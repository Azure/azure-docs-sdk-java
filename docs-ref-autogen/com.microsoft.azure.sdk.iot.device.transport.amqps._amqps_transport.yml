items:
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  id: _amqps_transport
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  children:
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage(Message,IotHubEventCallback,Object)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.AmqpsTransport(final DeviceClientConfig,Boolean)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.close()
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.connectionLost()
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.handleMessage()
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.invokeCallbacks()
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.isEmpty()
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageReceived(AmqpsMessage)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageSent(Integer,Boolean)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.open()
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.sendMessages()
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  langs:
  - java
  name: AmqpsTransport
  nameWithType: AmqpsTransport
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
    startLine: 37
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>An AMQPS transport. Contains functionality for adding messages and sending messages to an IoT Hub. Buffers unsent messages until they are received by an IoT Hub. A transport is bound at construction to the following parameters: IoT Hub name, device ID and device key. </p>

    <p>The transport also receives messages from IoT Hub and invokes a user-defined message callback if a message and callback are found. </p>
  syntax:
    content: public class AmqpsTransport implements IotHubTransport,ServerListener
  inheritance:
  - java.lang.Object
  - Closeable
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage(Message,IotHubEventCallback,Object)
  id: addMessage(Message,IotHubEventCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  langs:
  - java
  name: addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  nameWithType: AmqpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
    startLine: 149
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Adds a message to the transport queue.</p>

    <p></p>
  syntax:
    content: public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to be sent. </p>
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: <p>the callback to be invoked when a response for the message is received. </p>
    - id: callbackContext
      type: "79317049"
      description: <p>the context to be passed in when the callback is invoked.</p>
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)
  exceptions:
  - type: 12fe80de
    description: <p>if the transport is closed. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.AmqpsTransport(final DeviceClientConfig,Boolean)
  id: AmqpsTransport(final DeviceClientConfig,Boolean)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  langs:
  - java
  name: AmqpsTransport(final DeviceClientConfig config, Boolean useWebSockets)
  nameWithType: AmqpsTransport.AmqpsTransport(final DeviceClientConfig config, Boolean useWebSockets)
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.AmqpsTransport(final DeviceClientConfig config, Boolean useWebSockets)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.AmqpsTransport*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
    startLine: 70
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Constructs an instance from the given <xref href="com.microsoft.azure.sdk.iot.device._device_client_config" data-throw-if-not-resolved="false"></xref> object.</p>

    <p></p>
  syntax:
    content: public AmqpsTransport(final DeviceClientConfig config, Boolean useWebSockets)
    parameters:
    - id: config
      type: 93de0ef9com.microsoft.azure.sdk.iot.device._device_client_config
      description: <p>configuration parameters for an AMQPS session with an IoT Hub </p>
    - id: useWebSockets
      type: 866c2227
      description: <p>whether the transport should use web sockets or not </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  langs:
  - java
  name: close()
  nameWithType: AmqpsTransport.close()
  fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.close()
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.close*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
    startLine: 122
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Closes all resources used to communicate with an IoT Hub. Once<programlisting><codeline><highlight class="normal">close()<sp></sp></highlight></codeline></programlisting> is called, the transport is no longer usable. If the transport is already closed, the function shall do nothing.</p>

    <p></p>
  syntax:
    content: public synchronized void close()
    return:
      type: 5c0b90ca
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
  exceptions:
  - type: cbf33bbe
    description: <p>if an error occurs in closing the transport. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.connectionLost()
  id: connectionLost()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  langs:
  - java
  name: connectionLost()
  nameWithType: AmqpsTransport.connectionLost()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.connectionLost()
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.connectionLost*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
    startLine: 356
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>If the connection is lost, all the messages in progress are buffered to be sent again. </p>
  syntax:
    content: public void connectionLost()
  overridden: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.connectionLost()
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.handleMessage()
  id: handleMessage()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  langs:
  - java
  name: handleMessage()
  nameWithType: AmqpsTransport.handleMessage()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.handleMessage()
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.handleMessage*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
    startLine: 274
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub. </p>

    <p>If no message callback is set, the function will do nothing.</p>

    <p></p>
  syntax:
    content: public void handleMessage()
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
  exceptions:
  - type: 12fe80de
    description: <p>if the transport is closed. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.invokeCallbacks()
  id: invokeCallbacks()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  langs:
  - java
  name: invokeCallbacks()
  nameWithType: AmqpsTransport.invokeCallbacks()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.invokeCallbacks()
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.invokeCallbacks*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
    startLine: 241
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Invokes the callbacks for all completed requests.</p>

    <p></p>
  syntax:
    content: public void invokeCallbacks()
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
  exceptions:
  - type: 12fe80de
    description: <p>if the transport is closed. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.isEmpty()
  id: isEmpty()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  langs:
  - java
  name: isEmpty()
  nameWithType: AmqpsTransport.isEmpty()
  fullName: boolean com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.isEmpty()
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.isEmpty*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
    startLine: 387
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Returns<programlisting><codeline><highlight class="normal">true<sp></sp></highlight></codeline></programlisting> if the transport has no more messages to handle, and<programlisting><codeline><highlight class="normal">false<sp></sp></highlight></codeline></programlisting> otherwise.</p>

    <p></p>
  syntax:
    content: public boolean isEmpty()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <programlisting>

            <codeline>

              <highlight class="normal">true<sp></sp></highlight>

            </codeline>

          </programlisting> if the transport has no more messages to handle, and<programlisting><codeline><highlight class="normal">false<sp></sp></highlight></codeline></programlisting> otherwise. </p>
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageReceived(AmqpsMessage)
  id: messageReceived(AmqpsMessage)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  langs:
  - java
  name: messageReceived(AmqpsMessage message)
  nameWithType: AmqpsTransport.messageReceived(AmqpsMessage message)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.messageReceived(AmqpsMessage message)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageReceived*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
    startLine: 373
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>When a message is received, it is added to the list of messages to be processed. </p>
  syntax:
    content: public void messageReceived(AmqpsMessage message)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message
      description: <p>The message received. </p>
  overridden: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.messageReceived(AmqpsMessage)
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageSent(Integer,Boolean)
  id: messageSent(Integer,Boolean)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  langs:
  - java
  name: messageSent(Integer messageHash, Boolean deliveryState)
  nameWithType: AmqpsTransport.messageSent(Integer messageHash, Boolean deliveryState)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.messageSent(Integer messageHash, Boolean deliveryState)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageSent*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
    startLine: 331
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>When a message is acknowledged by IoTHub, it is removed from the list of in progress messages and its callback is added to the list of callbacks to be executed. If the message was not successfully delivered, it is buffered to be sent again. </p>
  syntax:
    content: public void messageSent(Integer messageHash, Boolean deliveryState)
    parameters:
    - id: messageHash
      type: 08effaa0
      description: <p>The hash of the message. </p>
    - id: deliveryState
      type: 866c2227
      description: <p>The state of the delivery. </p>
  overridden: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.messageSent(Integer,Boolean)
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  langs:
  - java
  name: open()
  nameWithType: AmqpsTransport.open()
  fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.open()
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.open*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
    startLine: 87
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Establishes a communication channel with an IoT Hub. If a channel is already open, the function shall do nothing.</p>

    <p></p>
  syntax:
    content: public synchronized void open()
    return:
      type: 5c0b90ca
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
  exceptions:
  - type: cbf33bbe
    description: <p>if a communication channel cannot be established. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.sendMessages()
  id: sendMessages()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
  langs:
  - java
  name: sendMessages()
  nameWithType: AmqpsTransport.sendMessages()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.sendMessages()
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.sendMessages*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
    startLine: 174
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Sends all messages from the waiting list, one at a time. If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt. </p>

    <p></p>
  syntax:
    content: public void sendMessages()
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
  exceptions:
  - type: cbf33bbe
    description: <p>if the server could not be reached. </p>
  - type: 12fe80de
    description: <p>if the transport has not been opened or is already closed. </p>
references:
- uid: 93de0ef9com.microsoft.azure.sdk.iot.device._device_client_config
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.sdk.iot.device._device_client_config
    name: DeviceClientConfig
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
    href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.AmqpsTransport*
  name: AmqpsTransport
  nameWithType: AmqpsTransport.AmqpsTransport
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.AmqpsTransport
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 5c0b90ca
  spec.java:
  - name: synchronized void
    fullName: synchronized void
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.open*
  name: open
  nameWithType: AmqpsTransport.open
  fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.open
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.close*
  name: close
  nameWithType: AmqpsTransport.close
  fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.close
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: 12fe80de
  spec.java:
  - name: IllegalStateException
    fullName: IllegalStateException
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage*
  name: addMessage
  nameWithType: AmqpsTransport.addMessage
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.addMessage
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.sendMessages*
  name: sendMessages
  nameWithType: AmqpsTransport.sendMessages
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.sendMessages
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.invokeCallbacks*
  name: invokeCallbacks
  nameWithType: AmqpsTransport.invokeCallbacks
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.invokeCallbacks
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.handleMessage*
  name: handleMessage
  nameWithType: AmqpsTransport.handleMessage
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.handleMessage
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageSent*
  name: messageSent
  nameWithType: AmqpsTransport.messageSent
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.messageSent
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.connectionLost*
  name: connectionLost
  nameWithType: AmqpsTransport.connectionLost
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.connectionLost
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageReceived*
  name: messageReceived
  nameWithType: AmqpsTransport.messageReceived
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.messageReceived
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.isEmpty*
  name: isEmpty
  nameWithType: AmqpsTransport.isEmpty
  fullName: boolean com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.isEmpty
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  name: IotHubTransport
  nameWithType: IotHubTransport
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  type: Interface
  summary: <p>An interface for an IoT Hub transport. </p>
  syntax:
    content: public interface IotHubTransport
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.yml
  name: ServerListener
  nameWithType: ServerListener
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.ServerListener
  type: Interface
  summary: <p>Defines methods which are triggered by interactions with the IoTHub. </p>
  syntax:
    content: public interface ServerListener
- uid: com.microsoft.azure.sdk.iot.device.transport._state
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._state.yml
  name: State
  nameWithType: State
  fullName: com.microsoft.azure.sdk.iot.device.transport.State
  type: Enum
  syntax:
    content: public enum State
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  name: AmqpsIotHubConnection
  nameWithType: AmqpsIotHubConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection
  type: Class
  summary: <p>An AMQPS IotHub connection between a device and an IoTHub. This class contains functionality for sending/receiving a message, and logic to re-establish the connection with the IoTHub in case it gets lost. </p>
  syntax:
    content: public class AmqpsIotHubConnection
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.yml
  name: IotHubOutboundPacket
  nameWithType: IotHubOutboundPacket
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket
  type: Class
  summary: <p>A packet containing the data needed for an IoT Hub transport to send a message. </p>
  syntax:
    content: public class IotHubOutboundPacket
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message.yml
  name: AmqpsMessage
  nameWithType: AmqpsMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsMessage
  type: Class
  summary: <p>Extension of the QPID-Proton-J MessageImpl class which implements the <xref href="com.microsoft.azure.sdk.iot.device._message" data-throw-if-not-resolved="false"></xref> interface. Adds a Delivery object as a private member variable and adds a new <xref href="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message._a_c_k___t_y_p_e" data-throw-if-not-resolved="false"></xref> enum. Adds the ability to easily acknowledge a single message. </p>
  syntax:
    content: public class AmqpsMessage
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_callback_packet
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_callback_packet.yml
  name: IotHubCallbackPacket
  nameWithType: IotHubCallbackPacket
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubCallbackPacket
  type: Class
  summary: <p>A packet containing the data needed for an IoT Hub transport to invoke a callback. </p>
  syntax:
    content: public class IotHubCallbackPacket
- uid: com.microsoft.azure.sdk.iot.device._device_client_config
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
  name: DeviceClientConfig
  nameWithType: DeviceClientConfig
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
  type: Class
  summary: <p>Configuration settings for an IoT Hub client. Validates all user-defined settings. </p>
  syntax:
    content: public class DeviceClientConfig
- uid: com.microsoft.azure.sdk.iot.device._custom_logger
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._custom_logger.yml
  name: CustomLogger
  nameWithType: CustomLogger
  fullName: com.microsoft.azure.sdk.iot.device.CustomLogger
  type: Class
  syntax:
    content: public class CustomLogger
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  name: open()
  nameWithType: IotHubTransport.open()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open()
  type: Method
  summary: >-
    <p>Establishes a communication channel with an IoT Hub. If a channel is already open, the function shall do nothing.</p>

    <p></p>
  syntax:
    content: public void open()
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  name: close()
  nameWithType: IotHubTransport.close()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close()
  type: Method
  summary: >-
    <p>Closes all resources used to communicate with an IoT Hub. Once<programlisting><codeline><highlight class="normal">close()<sp></sp></highlight></codeline></programlisting> is called, the transport is no longer usable. If the transport is already closed, the function shall do nothing.</p>

    <p></p>
  syntax:
    content: public void close()
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  name: addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  nameWithType: IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  type: Method
  summary: >-
    <p>Adds a message to the transport queue.</p>

    <p></p>
  syntax:
    content: public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to be sent. </p>
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: <p>the callback to be invoked when a response for the message is received. </p>
    - id: callbackContext
      type: "79317049"
      description: <p>the context to be passed in when the callback is invoked. </p>
- uid: com.microsoft.azure.sdk.iot.device._message
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.device.Message
  type: Class
  syntax:
    content: public class Message
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
  name: IotHubEventCallback
  nameWithType: IotHubEventCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
  type: Interface
  summary: >-
    <p>An interface for an IoT Hub event callback.</p>

    <p>Developers are expected to create an implementation of this interface, and the transport will call <xref href="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false"></xref> upon receiving a response from an IoT Hub. </p>
  syntax:
    content: public interface IotHubEventCallback
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  name: sendMessages()
  nameWithType: IotHubTransport.sendMessages()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()
  type: Method
  summary: >-
    <p>Sends all messages on the transport queue. If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt.</p>

    <p></p>
  syntax:
    content: public void sendMessages()
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  name: invokeCallbacks()
  nameWithType: IotHubTransport.invokeCallbacks()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()
  type: Method
  summary: <p>Invokes the callbacks for all completed requests. </p>
  syntax:
    content: public void invokeCallbacks()
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  name: handleMessage()
  nameWithType: IotHubTransport.handleMessage()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()
  type: Method
  summary: >-
    <p>Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub. </p>

    <p>If no message callback is set, the function will do nothing.</p>

    <p></p>
  syntax:
    content: public void handleMessage()
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.messageSent(Integer,Boolean)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.yml
  name: messageSent(Integer messageHash, Boolean deliveryState)
  nameWithType: ServerListener.messageSent(Integer messageHash, Boolean deliveryState)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.ServerListener.messageSent(Integer messageHash, Boolean deliveryState)
  type: Method
  summary: <p>Method executed when a message was acknowledged by IoTHub. </p>
  syntax:
    content: public void messageSent(Integer messageHash, Boolean deliveryState)
    parameters:
    - id: messageHash
      type: 08effaa0
      description: <p>The hash of the message. </p>
    - id: deliveryState
      type: 866c2227
      description: <p>The state of the delivery. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.connectionLost()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.yml
  name: connectionLost()
  nameWithType: ServerListener.connectionLost()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.ServerListener.connectionLost()
  type: Method
  summary: <p>Method executed when the connection with the IoTHub is lost. </p>
  syntax:
    content: public void connectionLost()
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.messageReceived(AmqpsMessage)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.yml
  name: messageReceived(AmqpsMessage message)
  nameWithType: ServerListener.messageReceived(AmqpsMessage message)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.ServerListener.messageReceived(AmqpsMessage message)
  type: Method
  summary: <p>Method executed when a message was received from IoTHub. </p>
  syntax:
    content: public void messageReceived(AmqpsMessage message)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message
      description: <p>The message received. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
  name: isEmpty()
  nameWithType: IotHubTransport.isEmpty()
  fullName: boolean com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()
  type: Method
  summary: >-
    <p>Returns<programlisting><codeline><highlight class="normal">true<sp></sp></highlight></codeline></programlisting> if the transport has no more messages to handle, and<programlisting><codeline><highlight class="normal">false<sp></sp></highlight></codeline></programlisting> otherwise.</p>

    <p></p>
  syntax:
    content: public boolean isEmpty()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <programlisting>

            <codeline>

              <highlight class="normal">true<sp></sp></highlight>

            </codeline>

          </programlisting> if the transport has no more messages to handle, and<programlisting><codeline><highlight class="normal">false<sp></sp></highlight></codeline></programlisting> otherwise. </p>
