### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlobLeaseClient.renewLeaseWithResponse*"
fullName: "com.azure.storage.blob.specialized.BlobLeaseClient.renewLeaseWithResponse"
name: "renewLeaseWithResponse"
nameWithType: "BlobLeaseClient.renewLeaseWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.BlobLeaseClient.renewLeaseWithResponse(com.azure.core.http.RequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClient.renewLeaseWithResponse(RequestConditions modifiedRequestConditions, Duration timeout, Context context)"
  name: "renewLeaseWithResponse(RequestConditions modifiedRequestConditions, Duration timeout, Context context)"
  nameWithType: "BlobLeaseClient.renewLeaseWithResponse(RequestConditions modifiedRequestConditions, Duration timeout, Context context)"
  summary: "Renews the previously-acquired lease.\n\n**Code Samples**\n\n```java\nRequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(3));\n \n System.out.printf(\"Renewed lease ID is %s%n\",\n     client.renewLeaseWithResponse(modifiedRequestConditions, timeout, new Context(key, value))\n         .getValue());\n```"
  parameters:
  - description: "Standard HTTP Access conditions related to the modification of data. ETag and\n LastModifiedTime are used to construct conditions related to when the resource was changed relative to the given\n request. The request will fail if the specified condition is not satisfied."
    name: "modifiedRequestConditions"
    type: "<xref href=\"com.azure.core.http.RequestConditions?alt=com.azure.core.http.RequestConditions&text=RequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<String> renewLeaseWithResponse(RequestConditions modifiedRequestConditions, Duration timeout, Context context)"
  returns:
    description: "The renewed lease ID."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobLeaseClient.renewLeaseWithResponse(com.azure.storage.blob.options.BlobRenewLeaseOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClient.renewLeaseWithResponse(BlobRenewLeaseOptions options, Duration timeout, Context context)"
  name: "renewLeaseWithResponse(BlobRenewLeaseOptions options, Duration timeout, Context context)"
  nameWithType: "BlobLeaseClient.renewLeaseWithResponse(BlobRenewLeaseOptions options, Duration timeout, Context context)"
  summary: "Renews the previously-acquired lease.\n\n**Code Samples**\n\n```java\nBlobLeaseRequestConditions requestConditions = new BlobLeaseRequestConditions()\n     .setIfModifiedSince(OffsetDateTime.now().minusDays(3));\n \n BlobRenewLeaseOptions options = new BlobRenewLeaseOptions()\n     .setRequestConditions(requestConditions);\n \n System.out.printf(\"Renewed lease ID is %s%n\",\n     client.renewLeaseWithResponse(options, timeout, new Context(key, value))\n         .getValue());\n```"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobRenewLeaseOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRenewLeaseOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobRenewLeaseOptions?alt=com.azure.storage.blob.options.BlobRenewLeaseOptions&text=BlobRenewLeaseOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<String> renewLeaseWithResponse(BlobRenewLeaseOptions options, Duration timeout, Context context)"
  returns:
    description: "The renewed lease ID."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
