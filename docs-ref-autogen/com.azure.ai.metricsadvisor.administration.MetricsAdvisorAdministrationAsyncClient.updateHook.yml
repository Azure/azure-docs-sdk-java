### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateHook*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateHook"
name: "updateHook"
nameWithType: "MetricsAdvisorAdministrationAsyncClient.updateHook"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateHook(com.azure.ai.metricsadvisor.administration.models.NotificationHook)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateHook(NotificationHook notificationHook)"
  name: "updateHook(NotificationHook notificationHook)"
  nameWithType: "MetricsAdvisorAdministrationAsyncClient.updateHook(NotificationHook notificationHook)"
  summary: "Update an existing notificationHook.\n\n**Code sample**\n\n```java\nfinal String emailHookId = \"f00853f1-6627-447f-bacf-8dccf2e86fed\";\n metricsAdvisorAdminAsyncClient.getHook(emailHookId)\n     .flatMap(hook -> {\n         EmailNotificationHook emailHook = (EmailNotificationHook) hook;\n         List<String> emailsToUpdate = new ArrayList<>(emailHook.getEmailsToAlert());\n         emailsToUpdate.remove(\"alertme@alertme.com\");\n         emailsToUpdate.add(\"alertme2@alertme.com\");\n         emailsToUpdate.add(\"alertme3@alertme.com\");\n         emailHook.setEmailsToAlert(emailsToUpdate);\n         return metricsAdvisorAdminAsyncClient.updateHook(emailHook);\n     })\n     .subscribe(hook -> {\n         EmailNotificationHook emailHook = (EmailNotificationHook) hook;\n         System.out.printf(\"Email Hook Id: %s%n\", emailHook.getId());\n         System.out.printf(\"Email Hook Name: %s%n\", emailHook.getName());\n         System.out.printf(\"Email Hook Description: %s%n\", emailHook.getDescription());\n         System.out.printf(\"Email Hook External Link: %s%n\", emailHook.getExternalLink());\n         System.out.printf(\"Email Hook Emails: %s%n\", String.join(\",\", emailHook.getEmailsToAlert()));\n     });\n```"
  parameters:
  - description: "The notificationHook to update."
    name: "notificationHook"
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.NotificationHook?alt=com.azure.ai.metricsadvisor.administration.models.NotificationHook&text=NotificationHook\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<NotificationHook> updateHook(NotificationHook notificationHook)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the updated <xref uid=\"com.azure.ai.metricsadvisor.administration.models.NotificationHook\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NotificationHook\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.administration.models.NotificationHook?alt=com.azure.ai.metricsadvisor.administration.models.NotificationHook&text=NotificationHook\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.1.1
