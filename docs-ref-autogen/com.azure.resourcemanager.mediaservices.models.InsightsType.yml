### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.InsightsType"
fullName: "com.azure.resourcemanager.mediaservices.models.InsightsType"
name: "InsightsType"
nameWithType: "InsightsType"
summary: "Defines the type of insights that you want the service to generate."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.ExpandableStringEnum?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.core.util.ExpandableStringEnum?alt=com.azure.core.util.ExpandableStringEnum&text=ExpandableStringEnum\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.util.ExpandableStringEnum.<T>fromString(java.lang.String,java.lang.Class<T>)?alt=com.azure.core.util.ExpandableStringEnum.<T>fromString&text=<T>fromString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.ExpandableStringEnum.<T>values(java.lang.Class<T>)?alt=com.azure.core.util.ExpandableStringEnum.<T>values&text=<T>values\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.ExpandableStringEnum.equals(java.lang.Object)?alt=com.azure.core.util.ExpandableStringEnum.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.ExpandableStringEnum.hashCode()?alt=com.azure.core.util.ExpandableStringEnum.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.ExpandableStringEnum.toString()?alt=com.azure.core.util.ExpandableStringEnum.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **InsightsType**</br> extends <xref href=\"com.azure.core.util.ExpandableStringEnum?alt=com.azure.core.util.ExpandableStringEnum&text=ExpandableStringEnum\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.InsightsType?alt=com.azure.resourcemanager.mediaservices.models.InsightsType&text=InsightsType\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.InsightsType.InsightsType()"
  fullName: "com.azure.resourcemanager.mediaservices.models.InsightsType.InsightsType()"
  name: "InsightsType()"
  nameWithType: "InsightsType.InsightsType()"
  summary: "Creates a new instance of Insights<wbr>Type value."
  deprecatedTag: "Use the <xref uid=\"com.azure.resourcemanager.mediaservices.models.InsightsType.fromString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#fromString(String)\"></xref> factory method."
  syntax: "</br>public InsightsType()"
  desc: "Creates a new instance of InsightsType value."
  hasDeprecatedTag: true
fields:
- uid: "com.azure.resourcemanager.mediaservices.models.InsightsType.ALL_INSIGHTS"
  fullName: "com.azure.resourcemanager.mediaservices.models.InsightsType.ALL_INSIGHTS"
  name: "ALL_INSIGHTS"
  nameWithType: "InsightsType.ALL_INSIGHTS"
  summary: "Static value All<wbr>Insights for Insights<wbr>Type."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.InsightsType?alt=com.azure.resourcemanager.mediaservices.models.InsightsType&text=InsightsType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final InsightsType ALL_INSIGHTS"
  desc: "Static value AllInsights for InsightsType."
- uid: "com.azure.resourcemanager.mediaservices.models.InsightsType.AUDIO_INSIGHTS_ONLY"
  fullName: "com.azure.resourcemanager.mediaservices.models.InsightsType.AUDIO_INSIGHTS_ONLY"
  name: "AUDIO_INSIGHTS_ONLY"
  nameWithType: "InsightsType.AUDIO_INSIGHTS_ONLY"
  summary: "Static value Audio<wbr>Insights<wbr>Only for Insights<wbr>Type."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.InsightsType?alt=com.azure.resourcemanager.mediaservices.models.InsightsType&text=InsightsType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final InsightsType AUDIO_INSIGHTS_ONLY"
  desc: "Static value AudioInsightsOnly for InsightsType."
- uid: "com.azure.resourcemanager.mediaservices.models.InsightsType.VIDEO_INSIGHTS_ONLY"
  fullName: "com.azure.resourcemanager.mediaservices.models.InsightsType.VIDEO_INSIGHTS_ONLY"
  name: "VIDEO_INSIGHTS_ONLY"
  nameWithType: "InsightsType.VIDEO_INSIGHTS_ONLY"
  summary: "Static value Video<wbr>Insights<wbr>Only for Insights<wbr>Type."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.InsightsType?alt=com.azure.resourcemanager.mediaservices.models.InsightsType&text=InsightsType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final InsightsType VIDEO_INSIGHTS_ONLY"
  desc: "Static value VideoInsightsOnly for InsightsType."
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.InsightsType.fromString(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.InsightsType.fromString(String name)"
  name: "fromString(String name)"
  nameWithType: "InsightsType.fromString(String name)"
  summary: "Creates or finds a Insights<wbr>Type from its string representation."
  modifiers:
  - "static"
  parameters:
  - description: "a name to look for."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static InsightsType fromString(String name)"
  desc: "Creates or finds a InsightsType from its string representation."
  returns:
    description: "the corresponding InsightsType."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.InsightsType?alt=com.azure.resourcemanager.mediaservices.models.InsightsType&text=InsightsType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.InsightsType.values()"
  fullName: "com.azure.resourcemanager.mediaservices.models.InsightsType.values()"
  name: "values()"
  nameWithType: "InsightsType.values()"
  summary: "Gets known Insights<wbr>Type values."
  modifiers:
  - "static"
  syntax: "public static Collection<InsightsType> values()"
  desc: "Gets known InsightsType values."
  returns:
    description: "known InsightsType values."
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.InsightsType?alt=com.azure.resourcemanager.mediaservices.models.InsightsType&text=InsightsType\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Defines the type of insights that you want the service to generate. The allowed values are 'AudioInsightsOnly', 'VideoInsightsOnly', and 'AllInsights'. The default is AllInsights. If you set this to AllInsights and the input is audio only, then only audio insights are generated. Similarly if the input is video only, then only video insights are generated. It is recommended that you not use AudioInsightsOnly if you expect some of your inputs to be video only; or use VideoInsightsOnly if you expect some of your inputs to be audio only. Your Jobs in such conditions would error out."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.3.0
