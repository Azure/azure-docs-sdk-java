### YamlMime:JavaMember
uid: "com.azure.storage.blob.models.ParallelTransferOptions.setMaxConcurrency*"
fullName: "com.azure.storage.blob.models.ParallelTransferOptions.setMaxConcurrency"
name: "setMaxConcurrency"
nameWithType: "ParallelTransferOptions.setMaxConcurrency"
members:
- uid: "com.azure.storage.blob.models.ParallelTransferOptions.setMaxConcurrency(java.lang.Integer)"
  fullName: "com.azure.storage.blob.models.ParallelTransferOptions.setMaxConcurrency(Integer maxConcurrency)"
  name: "setMaxConcurrency(Integer maxConcurrency)"
  nameWithType: "ParallelTransferOptions.setMaxConcurrency(Integer maxConcurrency)"
  parameters:
  - description: "The maximum number of parallel requests that will be issued at any given time as a part of\n a single parallel transfer. This value applies per api. For example, if two calls to uploadFromFile are made at\n the same time, and each specifies a maxConcurrency of 5, there may be up to 10 outstanding, concurrent requests,\n up to 5 for each of the upload operations. For buffered uploads only, the maximum number of buffers to be\n allocated as part of the transfer will be <code>maxConcurrency + 1</code>. In those cases, memory will be allocated\n lazily as needed. The amount of memory consumed by methods which buffer may be up to blockSize * maxConcurrency.\n In general, upload methods which do not accept a length parameter must perform some buffering."
    name: "maxConcurrency"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ParallelTransferOptions setMaxConcurrency(Integer maxConcurrency)"
  returns:
    description: "The ParallelTransferOptions object itself."
    type: "<xref href=\"com.azure.storage.blob.models.ParallelTransferOptions?alt=com.azure.storage.blob.models.ParallelTransferOptions&text=ParallelTransferOptions\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.blob.models"
artifact: com.azure:azure-storage-blob:12.8.0
