items:
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  id: _certificates_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  children:
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.add(CertificateAddParameter)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.add(CertificateAddParameter,CertificateAddOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync(CertificateAddParameter)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync(CertificateAddParameter,CertificateAddOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync(CertificateAddParameter,CertificateAddOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync(CertificateAddParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.addWithServiceResponseAsync(CertificateAddParameter)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.addWithServiceResponseAsync(CertificateAddParameter,CertificateAddOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletion(String,String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletion(String,String,CertificateCancelDeletionOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync(String,String,CertificateCancelDeletionOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync(String,String,CertificateCancelDeletionOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionWithServiceResponseAsync(String,String,CertificateCancelDeletionOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.CertificatesImpl(Retrofit,BatchServiceClientImpl)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.delete(String,String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.delete(String,String,CertificateDeleteOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync(String,String,CertificateDeleteOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync(String,String,CertificateDeleteOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteWithServiceResponseAsync(String,String,CertificateDeleteOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.get(String,String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.get(String,String,CertificateGetOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync(String,String,CertificateGetOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync(String,String,CertificateGetOptions,final ServiceCallback<Certificate>)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync(String,String,final ServiceCallback<Certificate>)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.getWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.getWithServiceResponseAsync(String,String,CertificateGetOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.list()
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.list(final CertificateListOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync()
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync(final CertificateListOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync(final CertificateListOptions,final ListOperationCallback<Certificate>)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync(final ListOperationCallback<Certificate>)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNext(final String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNext(final String,final CertificateListNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync(final String,final CertificateListNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync(final String,final CertificateListNextOptions,final ServiceFuture<List<Certificate>>,final ListOperationCallback<Certificate>)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync(final String,final ServiceFuture<List<Certificate>>,final ListOperationCallback<Certificate>)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextSinglePageAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextSinglePageAsync(final String,final CertificateListNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextWithServiceResponseAsync(final String,final CertificateListNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listSinglePageAsync()
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listSinglePageAsync(final CertificateListOptions)
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.implementation._certificates_impl.listWithServiceResponseAsync(final CertificateListOptions)
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: CertificatesImpl
  nameWithType: CertificatesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.CertificatesImpl
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
      branch: master
      repo: https://github.com/Azure/azure-batch-sdk-for-java
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 59
  package: com.microsoft.azure.batch.protocol.implementation
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._certificates" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: &o1
    content: public class CertificatesImpl implements Certificates
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.batch.protocol._certificates
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.add(CertificateAddParameter)
  id: add(CertificateAddParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: add(CertificateAddParameter certificate)
  nameWithType: CertificatesImpl.add(CertificateAddParameter certificate)
  fullName: void com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.add(CertificateAddParameter certificate)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.add*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 115
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public void add(CertificateAddParameter certificate)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.add(CertificateAddParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.add(CertificateAddParameter,CertificateAddOptions)
  id: add(CertificateAddParameter,CertificateAddOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  nameWithType: CertificatesImpl.add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.add*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 194
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public void add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    - id: certificateAddOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_add_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.add(CertificateAddParameter,CertificateAddOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync(CertificateAddParameter)
  id: addAsync(CertificateAddParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: addAsync(CertificateAddParameter certificate)
  nameWithType: CertificatesImpl.addAsync(CertificateAddParameter certificate)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.addAsync(CertificateAddParameter certificate)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 138
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addAsync(CertificateAddParameter certificate)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.addAsync(CertificateAddParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync(CertificateAddParameter,CertificateAddOptions)
  id: addAsync(CertificateAddParameter,CertificateAddOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  nameWithType: CertificatesImpl.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 219
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    - id: certificateAddOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_add_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.addAsync(CertificateAddParameter,CertificateAddOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync(CertificateAddParameter,CertificateAddOptions,final ServiceCallback<Void>)
  id: addAsync(CertificateAddParameter,CertificateAddOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: CertificatesImpl.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 207
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    - id: certificateAddOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_add_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.addAsync(CertificateAddParameter,CertificateAddOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync(CertificateAddParameter,final ServiceCallback<Void>)
  id: addAsync(CertificateAddParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: addAsync(CertificateAddParameter certificate, final ServiceCallback<Void> serviceCallback)
  nameWithType: CertificatesImpl.addAsync(CertificateAddParameter certificate, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.addAsync(CertificateAddParameter certificate, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 127
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addAsync(CertificateAddParameter certificate, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.addAsync(CertificateAddParameter,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addWithServiceResponseAsync(CertificateAddParameter)
  id: addWithServiceResponseAsync(CertificateAddParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: addWithServiceResponseAsync(CertificateAddParameter certificate)
  nameWithType: CertificatesImpl.addWithServiceResponseAsync(CertificateAddParameter certificate)
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateAddHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.addWithServiceResponseAsync(CertificateAddParameter certificate)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 154
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, CertificateAddHeaders>> addWithServiceResponseAsync(CertificateAddParameter certificate)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_add_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.addWithServiceResponseAsync(CertificateAddParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addWithServiceResponseAsync(CertificateAddParameter,CertificateAddOptions)
  id: addWithServiceResponseAsync(CertificateAddParameter,CertificateAddOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  nameWithType: CertificatesImpl.addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateAddHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 236
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, CertificateAddHeaders>> addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    - id: certificateAddOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_add_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_add_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.addWithServiceResponseAsync(CertificateAddParameter,CertificateAddOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletion(String,String)
  id: cancelDeletion(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: cancelDeletion(String thumbprintAlgorithm, String thumbprint)
  nameWithType: CertificatesImpl.cancelDeletion(String thumbprintAlgorithm, String thumbprint)
  fullName: void com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.cancelDeletion(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletion*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 568
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public void cancelDeletion(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.cancelDeletion(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletion(String,String,CertificateCancelDeletionOptions)
  id: cancelDeletion(String,String,CertificateCancelDeletionOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  nameWithType: CertificatesImpl.cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletion*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 657
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public void cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    - id: certificateCancelDeletionOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.cancelDeletion(String,String,CertificateCancelDeletionOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync(String,String)
  id: cancelDeletionAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: CertificatesImpl.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 595
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.cancelDeletionAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync(String,String,CertificateCancelDeletionOptions)
  id: cancelDeletionAsync(String,String,CertificateCancelDeletionOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  nameWithType: CertificatesImpl.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 686
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    - id: certificateCancelDeletionOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.cancelDeletionAsync(String,String,CertificateCancelDeletionOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync(String,String,CertificateCancelDeletionOptions,final ServiceCallback<Void>)
  id: cancelDeletionAsync(String,String,CertificateCancelDeletionOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: CertificatesImpl.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 672
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    - id: certificateCancelDeletionOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.cancelDeletionAsync(String,String,CertificateCancelDeletionOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync(String,String,final ServiceCallback<Void>)
  id: cancelDeletionAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
  nameWithType: CertificatesImpl.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 582
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.cancelDeletionAsync(String,String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionWithServiceResponseAsync(String,String)
  id: cancelDeletionWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: CertificatesImpl.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateCancelDeletionHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 613
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, CertificateCancelDeletionHeaders>> cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.cancelDeletionWithServiceResponseAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionWithServiceResponseAsync(String,String,CertificateCancelDeletionOptions)
  id: cancelDeletionWithServiceResponseAsync(String,String,CertificateCancelDeletionOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  nameWithType: CertificatesImpl.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateCancelDeletionHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 705
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, CertificateCancelDeletionHeaders>> cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    - id: certificateCancelDeletionOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.cancelDeletionWithServiceResponseAsync(String,String,CertificateCancelDeletionOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.CertificatesImpl(Retrofit,BatchServiceClientImpl)
  id: CertificatesImpl(Retrofit,BatchServiceClientImpl)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: CertificatesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  nameWithType: CertificatesImpl.CertificatesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  fullName: com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.CertificatesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.CertificatesImpl*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 71
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Initializes an instance of <xref href="com.microsoft.azure.batch.protocol.implementation._certificates_impl" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public CertificatesImpl(Retrofit retrofit, BatchServiceClientImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.delete(String,String)
  id: delete(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: delete(String thumbprintAlgorithm, String thumbprint)
  nameWithType: CertificatesImpl.delete(String thumbprintAlgorithm, String thumbprint)
  fullName: void com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.delete(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.delete*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 767
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public void delete(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.delete(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.delete(String,String,CertificateDeleteOptions)
  id: delete(String,String,CertificateDeleteOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  nameWithType: CertificatesImpl.delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.delete*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 856
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public void delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    - id: certificateDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_delete_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.delete(String,String,CertificateDeleteOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync(String,String)
  id: deleteAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: deleteAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: CertificatesImpl.deleteAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.deleteAsync(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 794
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.deleteAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync(String,String,CertificateDeleteOptions)
  id: deleteAsync(String,String,CertificateDeleteOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  nameWithType: CertificatesImpl.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 885
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    - id: certificateDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_delete_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.deleteAsync(String,String,CertificateDeleteOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync(String,String,CertificateDeleteOptions,final ServiceCallback<Void>)
  id: deleteAsync(String,String,CertificateDeleteOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: CertificatesImpl.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 871
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    - id: certificateDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_delete_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.deleteAsync(String,String,CertificateDeleteOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync(String,String,final ServiceCallback<Void>)
  id: deleteAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: deleteAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
  nameWithType: CertificatesImpl.deleteAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.deleteAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 781
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.deleteAsync(String,String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteWithServiceResponseAsync(String,String)
  id: deleteWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: CertificatesImpl.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateDeleteHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 812
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, CertificateDeleteHeaders>> deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_delete_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.deleteWithServiceResponseAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteWithServiceResponseAsync(String,String,CertificateDeleteOptions)
  id: deleteWithServiceResponseAsync(String,String,CertificateDeleteOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  nameWithType: CertificatesImpl.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateDeleteHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 904
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, CertificateDeleteHeaders>> deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    - id: certificateDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_delete_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_delete_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.deleteWithServiceResponseAsync(String,String,CertificateDeleteOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.get(String,String)
  id: get(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: get(String thumbprintAlgorithm, String thumbprint)
  nameWithType: CertificatesImpl.get(String thumbprintAlgorithm, String thumbprint)
  fullName: Certificate com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.get(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 966
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public Certificate get(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._certificate
      description: <p>the Certificate object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.get(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.get(String,String,CertificateGetOptions)
  id: get(String,String,CertificateGetOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  nameWithType: CertificatesImpl.get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  fullName: Certificate com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1053
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public Certificate get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    - id: certificateGetOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._certificate
      description: <p>the Certificate object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.get(String,String,CertificateGetOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync(String,String)
  id: getAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: getAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: CertificatesImpl.getAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: Observable<Certificate> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.getAsync(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 991
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public Observable<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the observable to the Certificate object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.getAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync(String,String,CertificateGetOptions)
  id: getAsync(String,String,CertificateGetOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  nameWithType: CertificatesImpl.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  fullName: Observable<Certificate> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1080
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public Observable<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    - id: certificateGetOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the observable to the Certificate object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.getAsync(String,String,CertificateGetOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync(String,String,CertificateGetOptions,final ServiceCallback<Certificate>)
  id: getAsync(String,String,CertificateGetOptions,final ServiceCallback<Certificate>)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, final ServiceCallback<Certificate> serviceCallback)
  nameWithType: CertificatesImpl.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, final ServiceCallback<Certificate> serviceCallback)
  fullName: ServiceFuture<Certificate> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, final ServiceCallback<Certificate> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1067
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, final ServiceCallback<Certificate> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    - id: certificateGetOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_get_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.getAsync(String,String,CertificateGetOptions,final ServiceCallback<Certificate>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync(String,String,final ServiceCallback<Certificate>)
  id: getAsync(String,String,final ServiceCallback<Certificate>)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: getAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Certificate> serviceCallback)
  nameWithType: CertificatesImpl.getAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Certificate> serviceCallback)
  fullName: ServiceFuture<Certificate> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.getAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Certificate> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 979
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Certificate> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.getAsync(String,String,final ServiceCallback<Certificate>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getWithServiceResponseAsync(String,String)
  id: getWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: CertificatesImpl.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: Observable<ServiceResponseWithHeaders<Certificate, CertificateGetHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1008
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Certificate, CertificateGetHeaders>> getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._certificateb33c76fccom.microsoft.azure.batch.protocol.models._certificate_get_headerse7daa122
      description: <p>the observable to the Certificate object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.getWithServiceResponseAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getWithServiceResponseAsync(String,String,CertificateGetOptions)
  id: getWithServiceResponseAsync(String,String,CertificateGetOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  nameWithType: CertificatesImpl.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  fullName: Observable<ServiceResponseWithHeaders<Certificate, CertificateGetHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1098
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Certificate, CertificateGetHeaders>> getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    - id: certificateGetOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._certificateb33c76fccom.microsoft.azure.batch.protocol.models._certificate_get_headerse7daa122
      description: <p>the observable to the Certificate object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.getWithServiceResponseAsync(String,String,CertificateGetOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.list()
  id: list()
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: list()
  nameWithType: CertificatesImpl.list()
  fullName: PagedList<Certificate> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.list()
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 294
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<Certificate> list()
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the PagedList&lt;Certificate&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.list()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.list(final CertificateListOptions)
  id: list(final CertificateListOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: list(final CertificateListOptions certificateListOptions)
  nameWithType: CertificatesImpl.list(final CertificateListOptions certificateListOptions)
  fullName: PagedList<Certificate> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.list(final CertificateListOptions certificateListOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 404
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<Certificate> list(final CertificateListOptions certificateListOptions)
    parameters:
    - id: certificateListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the PagedList&lt;Certificate&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.list(final CertificateListOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync()
  id: listAsync()
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listAsync()
  nameWithType: CertificatesImpl.listAsync()
  fullName: Observable<Page<Certificate>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listAsync()
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 329
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<Certificate>> listAsync()
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listAsync()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync(final CertificateListOptions)
  id: listAsync(final CertificateListOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listAsync(final CertificateListOptions certificateListOptions)
  nameWithType: CertificatesImpl.listAsync(final CertificateListOptions certificateListOptions)
  fullName: Observable<Page<Certificate>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listAsync(final CertificateListOptions certificateListOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 455
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<Certificate>> listAsync(final CertificateListOptions certificateListOptions)
    parameters:
    - id: certificateListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listAsync(final CertificateListOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync(final CertificateListOptions,final ListOperationCallback<Certificate>)
  id: listAsync(final CertificateListOptions,final ListOperationCallback<Certificate>)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listAsync(final CertificateListOptions certificateListOptions, final ListOperationCallback<Certificate> serviceCallback)
  nameWithType: CertificatesImpl.listAsync(final CertificateListOptions certificateListOptions, final ListOperationCallback<Certificate> serviceCallback)
  fullName: ServiceFuture<List<Certificate>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listAsync(final CertificateListOptions certificateListOptions, final ListOperationCallback<Certificate> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 429
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<Certificate>> listAsync(final CertificateListOptions certificateListOptions, final ListOperationCallback<Certificate> serviceCallback)
    parameters:
    - id: certificateListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listAsync(final CertificateListOptions,final ListOperationCallback<Certificate>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync(final ListOperationCallback<Certificate>)
  id: listAsync(final ListOperationCallback<Certificate>)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listAsync(final ListOperationCallback<Certificate> serviceCallback)
  nameWithType: CertificatesImpl.listAsync(final ListOperationCallback<Certificate> serviceCallback)
  fullName: ServiceFuture<List<Certificate>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listAsync(final ListOperationCallback<Certificate> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 311
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<Certificate>> listAsync(final ListOperationCallback<Certificate> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listAsync(final ListOperationCallback<Certificate>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNext(final String)
  id: listNext(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listNext(final String nextPageLink)
  nameWithType: CertificatesImpl.listNext(final String nextPageLink)
  fullName: PagedList<Certificate> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNext(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1163
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<Certificate> listNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the PagedList&lt;Certificate&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listNext(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNext(final String,final CertificateListNextOptions)
  id: listNext(final String,final CertificateListNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listNext(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  nameWithType: CertificatesImpl.listNext(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  fullName: PagedList<Certificate> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNext(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1276
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<Certificate> listNext(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: certificateListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the PagedList&lt;Certificate&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listNext(final String,final CertificateListNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync(final String)
  id: listNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink)
  nameWithType: CertificatesImpl.listNextAsync(final String nextPageLink)
  fullName: Observable<Page<Certificate>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1201
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<Certificate>> listNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listNextAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync(final String,final CertificateListNextOptions)
  id: listNextAsync(final String,final CertificateListNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  nameWithType: CertificatesImpl.listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  fullName: Observable<Page<Certificate>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1316
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<Certificate>> listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: certificateListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listNextAsync(final String,final CertificateListNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync(final String,final CertificateListNextOptions,final ServiceFuture<List<Certificate>>,final ListOperationCallback<Certificate>)
  id: listNextAsync(final String,final CertificateListNextOptions,final ServiceFuture<List<Certificate>>,final ListOperationCallback<Certificate>)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
  nameWithType: CertificatesImpl.listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
  fullName: ServiceFuture<List<Certificate>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1296
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<Certificate>> listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: certificateListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listNextAsync(final String,final CertificateListNextOptions,final ServiceFuture<List<Certificate>>,final ListOperationCallback<Certificate>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync(final String,final ServiceFuture<List<Certificate>>,final ListOperationCallback<Certificate>)
  id: listNextAsync(final String,final ServiceFuture<List<Certificate>>,final ListOperationCallback<Certificate>)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
  nameWithType: CertificatesImpl.listNextAsync(final String nextPageLink, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
  fullName: ServiceFuture<List<Certificate>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNextAsync(final String nextPageLink, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1182
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<Certificate>> listNextAsync(final String nextPageLink, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listNextAsync(final String,final ServiceFuture<List<Certificate>>,final ListOperationCallback<Certificate>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextSinglePageAsync(final String)
  id: listNextSinglePageAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listNextSinglePageAsync(final String nextPageLink)
  nameWithType: CertificatesImpl.listNextSinglePageAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNextSinglePageAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1239
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> listNextSinglePageAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
      description: <p>the PagedList&lt;Certificate&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextSinglePageAsync(final String,final CertificateListNextOptions)
  id: listNextSinglePageAsync(final String,final CertificateListNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listNextSinglePageAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  nameWithType: CertificatesImpl.listNextSinglePageAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNextSinglePageAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1356
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;Certificate&gt;, CertificateListHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> listNextSinglePageAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. ServiceResponseWithHeaders&lt;PageImpl&lt;Certificate&gt;, CertificateListHeaders&gt; * </p>
    - id: certificateListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
      description: <p>the PagedList&lt;Certificate&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextWithServiceResponseAsync(final String)
  id: listNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: CertificatesImpl.listNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1218
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listNextWithServiceResponseAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextWithServiceResponseAsync(final String,final CertificateListNextOptions)
  id: listNextWithServiceResponseAsync(final String,final CertificateListNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  nameWithType: CertificatesImpl.listNextWithServiceResponseAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNextWithServiceResponseAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 1334
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: certificateListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listNextWithServiceResponseAsync(final String,final CertificateListNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listSinglePageAsync()
  id: listSinglePageAsync()
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listSinglePageAsync()
  nameWithType: CertificatesImpl.listSinglePageAsync()
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listSinglePageAsync()
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 365
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> listSinglePageAsync()
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
      description: <p>the PagedList&lt;Certificate&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listSinglePageAsync(final CertificateListOptions)
  id: listSinglePageAsync(final CertificateListOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listSinglePageAsync(final CertificateListOptions certificateListOptions)
  nameWithType: CertificatesImpl.listSinglePageAsync(final CertificateListOptions certificateListOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listSinglePageAsync(final CertificateListOptions certificateListOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 500
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;Certificate&gt;, CertificateListHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> listSinglePageAsync(final CertificateListOptions certificateListOptions)
    parameters:
    - id: certificateListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
      description: <p>the PagedList&lt;Certificate&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listWithServiceResponseAsync()
  id: listWithServiceResponseAsync()
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listWithServiceResponseAsync()
  nameWithType: CertificatesImpl.listWithServiceResponseAsync()
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 345
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> listWithServiceResponseAsync()
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listWithServiceResponseAsync()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listWithServiceResponseAsync(final CertificateListOptions)
  id: listWithServiceResponseAsync(final CertificateListOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  langs:
  - java
  name: listWithServiceResponseAsync(final CertificateListOptions certificateListOptions)
  nameWithType: CertificatesImpl.listWithServiceResponseAsync(final CertificateListOptions certificateListOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listWithServiceResponseAsync(final CertificateListOptions certificateListOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/CertificatesImpl.java
    startLine: 472
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> listWithServiceResponseAsync(final CertificateListOptions certificateListOptions)
    parameters:
    - id: certificateListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._certificates.listWithServiceResponseAsync(final CertificateListOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.CertificatesImpl*
  name: CertificatesImpl
  nameWithType: CertificatesImpl.CertificatesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.CertificatesImpl
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: c8683d81
  spec.java:
  - name: BatchErrorException
    fullName: BatchErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.add*
  name: add
  nameWithType: CertificatesImpl.add
  fullName: void com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.add
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 1c186eb5
  spec.java:
  - name: final ServiceCallback<Void>
    fullName: final ServiceCallback<Void>
- uid: aa81d378
  spec.java:
  - name: ServiceFuture<Void>
    fullName: ServiceFuture<Void>
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addAsync*
  name: addAsync
  nameWithType: CertificatesImpl.addAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.addAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_add_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._certificate_add_headers
    name: CertificateAddHeaders
    fullName: com.microsoft.azure.batch.protocol.models.CertificateAddHeaders
    href: com.microsoft.azure.batch.protocol.models._certificate_add_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.addWithServiceResponseAsync*
  name: addWithServiceResponseAsync
  nameWithType: CertificatesImpl.addWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateAddHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.addWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 36b27be0com.microsoft.azure.batch.protocol.models._certificatea08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.batch.protocol.models._certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
    href: com.microsoft.azure.batch.protocol.models._certificate.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.list*
  name: list
  nameWithType: CertificatesImpl.list
  fullName: PagedList<Certificate> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.list
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 3c4303efcom.microsoft.azure.batch.protocol.models._certificatea08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.batch.protocol.models._certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
    href: com.microsoft.azure.batch.protocol.models._certificate.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.batch.protocol.models._certificatee7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models._certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
    href: com.microsoft.azure.batch.protocol.models._certificate.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listAsync*
  name: listAsync
  nameWithType: CertificatesImpl.listAsync
  fullName: ServiceFuture<List<Certificate>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 32da0907com.microsoft.azure.batch.protocol.models._certificatee7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.batch.protocol.models._certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
    href: com.microsoft.azure.batch.protocol.models._certificate.yml
  - name: '>>'
    fullName: '>>'
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models._certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
    href: com.microsoft.azure.batch.protocol.models._certificate.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models._certificate_list_headers
    name: CertificateListHeaders
    fullName: com.microsoft.azure.batch.protocol.models.CertificateListHeaders
    href: com.microsoft.azure.batch.protocol.models._certificate_list_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listWithServiceResponseAsync*
  name: listWithServiceResponseAsync
  nameWithType: CertificatesImpl.listWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: CertificatesImpl.listSinglePageAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listSinglePageAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._certificate_list_options
    name: CertificateListOptions
    fullName: com.microsoft.azure.batch.protocol.models.CertificateListOptions
    href: com.microsoft.azure.batch.protocol.models._certificate_list_options.yml
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletion*
  name: cancelDeletion
  nameWithType: CertificatesImpl.cancelDeletion
  fullName: void com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.cancelDeletion
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionAsync*
  name: cancelDeletionAsync
  nameWithType: CertificatesImpl.cancelDeletionAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.cancelDeletionAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_headers
    name: CertificateCancelDeletionHeaders
    fullName: com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders
    href: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.cancelDeletionWithServiceResponseAsync*
  name: cancelDeletionWithServiceResponseAsync
  nameWithType: CertificatesImpl.cancelDeletionWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateCancelDeletionHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.cancelDeletionWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.delete*
  name: delete
  nameWithType: CertificatesImpl.delete
  fullName: void com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.delete
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteAsync*
  name: deleteAsync
  nameWithType: CertificatesImpl.deleteAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.deleteAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_delete_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._certificate_delete_headers
    name: CertificateDeleteHeaders
    fullName: com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders
    href: com.microsoft.azure.batch.protocol.models._certificate_delete_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.deleteWithServiceResponseAsync*
  name: deleteWithServiceResponseAsync
  nameWithType: CertificatesImpl.deleteWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateDeleteHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.deleteWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.get*
  name: get
  nameWithType: CertificatesImpl.get
  fullName: Certificate com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.get
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 897eb10acom.microsoft.azure.batch.protocol.models._certificatea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models._certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
    href: com.microsoft.azure.batch.protocol.models._certificate.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models._certificatea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models._certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
    href: com.microsoft.azure.batch.protocol.models._certificate.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getAsync*
  name: getAsync
  nameWithType: CertificatesImpl.getAsync
  fullName: ServiceFuture<Certificate> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.getAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models._certificatea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models._certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
    href: com.microsoft.azure.batch.protocol.models._certificate.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models._certificateb33c76fccom.microsoft.azure.batch.protocol.models._certificate_get_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models._certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
    href: com.microsoft.azure.batch.protocol.models._certificate.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models._certificate_get_headers
    name: CertificateGetHeaders
    fullName: com.microsoft.azure.batch.protocol.models.CertificateGetHeaders
    href: com.microsoft.azure.batch.protocol.models._certificate_get_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: CertificatesImpl.getWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Certificate, CertificateGetHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.getWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNext*
  name: listNext
  nameWithType: CertificatesImpl.listNext
  fullName: PagedList<Certificate> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNext
  package: com.microsoft.azure.batch.protocol.implementation
- uid: bd82102acom.microsoft.azure.batch.protocol.models._certificatee7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models._certificate
    name: Certificate
    fullName: com.microsoft.azure.batch.protocol.models.Certificate
    href: com.microsoft.azure.batch.protocol.models._certificate.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextAsync*
  name: listNextAsync
  nameWithType: CertificatesImpl.listNextAsync
  fullName: ServiceFuture<List<Certificate>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNextAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextWithServiceResponseAsync*
  name: listNextWithServiceResponseAsync
  nameWithType: CertificatesImpl.listNextWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: CertificatesImpl.listNextSinglePageAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.implementation.CertificatesImpl.listNextSinglePageAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._certificate_list_next_options
    name: CertificateListNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.CertificateListNextOptions
    href: com.microsoft.azure.batch.protocol.models._certificate_list_next_options.yml
- uid: com.microsoft.azure.batch.protocol._certificates
  parent: com.microsoft.azure.batch.protocol
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: Certificates
  nameWithType: Certificates
  fullName: com.microsoft.azure.batch.protocol.Certificates
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._certificates" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public interface Certificates
- uid: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl.yml
  name: BatchServiceClientImpl
  nameWithType: BatchServiceClientImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.BatchServiceClientImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref href="com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax:
    content: public class BatchServiceClientImpl implements BatchServiceClient
- uid: com.microsoft.azure.batch.protocol.implementation._certificates_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._certificates_impl.yml
  name: CertificatesImpl
  nameWithType: CertificatesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.CertificatesImpl
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._certificates" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: *o1
- uid: com.microsoft.azure.batch.protocol._certificates.add(CertificateAddParameter)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: add(CertificateAddParameter certificate)
  nameWithType: Certificates.add(CertificateAddParameter certificate)
  fullName: void com.microsoft.azure.batch.protocol.Certificates.add(CertificateAddParameter certificate)
  type: Method
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public void add(CertificateAddParameter certificate)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate_add_parameter.yml
  name: CertificateAddParameter
  nameWithType: CertificateAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.CertificateAddParameter
  type: Class
  summary: <p>A certificate that can be installed on compute nodes and can be used to authenticate operations on the machine. </p>
  syntax:
    content: public class CertificateAddParameter
- uid: com.microsoft.azure.batch.protocol._certificates.addAsync(CertificateAddParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: addAsync(CertificateAddParameter certificate, final ServiceCallback<Void> serviceCallback)
  nameWithType: Certificates.addAsync(CertificateAddParameter certificate, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Certificates.addAsync(CertificateAddParameter certificate, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addAsync(CertificateAddParameter certificate, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.addAsync(CertificateAddParameter)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: addAsync(CertificateAddParameter certificate)
  nameWithType: Certificates.addAsync(CertificateAddParameter certificate)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Certificates.addAsync(CertificateAddParameter certificate)
  type: Method
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addAsync(CertificateAddParameter certificate)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate_add_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate_add_headers.yml
  name: CertificateAddHeaders
  nameWithType: CertificateAddHeaders
  fullName: com.microsoft.azure.batch.protocol.models.CertificateAddHeaders
  type: Class
  summary: <p>Defines headers for Add operation. </p>
  syntax:
    content: public class CertificateAddHeaders
- uid: com.microsoft.azure.batch.protocol._certificates.addWithServiceResponseAsync(CertificateAddParameter)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: addWithServiceResponseAsync(CertificateAddParameter certificate)
  nameWithType: Certificates.addWithServiceResponseAsync(CertificateAddParameter certificate)
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateAddHeaders>> com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync(CertificateAddParameter certificate)
  type: Method
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, CertificateAddHeaders>> addWithServiceResponseAsync(CertificateAddParameter certificate)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_add_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.add(CertificateAddParameter,CertificateAddOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  nameWithType: Certificates.add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  fullName: void com.microsoft.azure.batch.protocol.Certificates.add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  type: Method
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public void add(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    - id: certificateAddOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_add_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate_add_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate_add_options.yml
  name: CertificateAddOptions
  nameWithType: CertificateAddOptions
  fullName: com.microsoft.azure.batch.protocol.models.CertificateAddOptions
  type: Class
  summary: <p>Additional parameters for the Certificate_add operation. </p>
  syntax:
    content: public class CertificateAddOptions
- uid: com.microsoft.azure.batch.protocol._certificates.addAsync(CertificateAddParameter,CertificateAddOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Certificates.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Certificates.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    - id: certificateAddOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_add_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.addAsync(CertificateAddParameter,CertificateAddOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  nameWithType: Certificates.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Certificates.addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  type: Method
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    - id: certificateAddOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_add_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.addWithServiceResponseAsync(CertificateAddParameter,CertificateAddOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  nameWithType: Certificates.addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateAddHeaders>> com.microsoft.azure.batch.protocol.Certificates.addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
  type: Method
  summary: >-
    <p>Adds a certificate to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, CertificateAddHeaders>> addWithServiceResponseAsync(CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions)
    parameters:
    - id: certificate
      type: com.microsoft.azure.batch.protocol.models._certificate_add_parameter
      description: <p>The certificate to be added. </p>
    - id: certificateAddOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_add_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_add_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate.yml
  name: Certificate
  nameWithType: Certificate
  fullName: com.microsoft.azure.batch.protocol.models.Certificate
  type: Class
  summary: <p>A certificate that can be installed on compute nodes and can be used to authenticate operations on the machine. </p>
  syntax:
    content: public class Certificate
- uid: com.microsoft.azure.batch.protocol._certificates.list()
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: list()
  nameWithType: Certificates.list()
  fullName: PagedList<Certificate> com.microsoft.azure.batch.protocol.Certificates.list()
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<Certificate> list()
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the PagedList&lt;Certificate&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.listAsync(final ListOperationCallback<Certificate>)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listAsync(final ListOperationCallback<Certificate> serviceCallback)
  nameWithType: Certificates.listAsync(final ListOperationCallback<Certificate> serviceCallback)
  fullName: ServiceFuture<List<Certificate>> com.microsoft.azure.batch.protocol.Certificates.listAsync(final ListOperationCallback<Certificate> serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<Certificate>> listAsync(final ListOperationCallback<Certificate> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.listAsync()
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listAsync()
  nameWithType: Certificates.listAsync()
  fullName: Observable<Page<Certificate>> com.microsoft.azure.batch.protocol.Certificates.listAsync()
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<Certificate>> listAsync()
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate_list_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate_list_headers.yml
  name: CertificateListHeaders
  nameWithType: CertificateListHeaders
  fullName: com.microsoft.azure.batch.protocol.models.CertificateListHeaders
  type: Class
  summary: <p>Defines headers for List operation. </p>
  syntax:
    content: public class CertificateListHeaders
- uid: com.microsoft.azure.batch.protocol._certificates.listWithServiceResponseAsync()
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listWithServiceResponseAsync()
  nameWithType: Certificates.listWithServiceResponseAsync()
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync()
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> listWithServiceResponseAsync()
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.list(final CertificateListOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: list(final CertificateListOptions certificateListOptions)
  nameWithType: Certificates.list(final CertificateListOptions certificateListOptions)
  fullName: PagedList<Certificate> com.microsoft.azure.batch.protocol.Certificates.list(final CertificateListOptions certificateListOptions)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<Certificate> list(final CertificateListOptions certificateListOptions)
    parameters:
    - id: certificateListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the PagedList&lt;Certificate&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate_list_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate_list_options.yml
  name: CertificateListOptions
  nameWithType: CertificateListOptions
  fullName: com.microsoft.azure.batch.protocol.models.CertificateListOptions
  type: Class
  summary: <p>Additional parameters for the Certificate_list operation. </p>
  syntax:
    content: public class CertificateListOptions
- uid: com.microsoft.azure.batch.protocol._certificates.listAsync(final CertificateListOptions,final ListOperationCallback<Certificate>)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listAsync(final CertificateListOptions certificateListOptions, final ListOperationCallback<Certificate> serviceCallback)
  nameWithType: Certificates.listAsync(final CertificateListOptions certificateListOptions, final ListOperationCallback<Certificate> serviceCallback)
  fullName: ServiceFuture<List<Certificate>> com.microsoft.azure.batch.protocol.Certificates.listAsync(final CertificateListOptions certificateListOptions, final ListOperationCallback<Certificate> serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<Certificate>> listAsync(final CertificateListOptions certificateListOptions, final ListOperationCallback<Certificate> serviceCallback)
    parameters:
    - id: certificateListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.listAsync(final CertificateListOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listAsync(final CertificateListOptions certificateListOptions)
  nameWithType: Certificates.listAsync(final CertificateListOptions certificateListOptions)
  fullName: Observable<Page<Certificate>> com.microsoft.azure.batch.protocol.Certificates.listAsync(final CertificateListOptions certificateListOptions)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<Certificate>> listAsync(final CertificateListOptions certificateListOptions)
    parameters:
    - id: certificateListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.listWithServiceResponseAsync(final CertificateListOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listWithServiceResponseAsync(final CertificateListOptions certificateListOptions)
  nameWithType: Certificates.listWithServiceResponseAsync(final CertificateListOptions certificateListOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.Certificates.listWithServiceResponseAsync(final CertificateListOptions certificateListOptions)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> listWithServiceResponseAsync(final CertificateListOptions certificateListOptions)
    parameters:
    - id: certificateListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.cancelDeletion(String,String)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: cancelDeletion(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.cancelDeletion(String thumbprintAlgorithm, String thumbprint)
  fullName: void com.microsoft.azure.batch.protocol.Certificates.cancelDeletion(String thumbprintAlgorithm, String thumbprint)
  type: Method
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public void cancelDeletion(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.cancelDeletionAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
  nameWithType: Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.cancelDeletionAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)
  type: Method
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_headers.yml
  name: CertificateCancelDeletionHeaders
  nameWithType: CertificateCancelDeletionHeaders
  fullName: com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionHeaders
  type: Class
  summary: <p>Defines headers for CancelDeletion operation. </p>
  syntax:
    content: public class CertificateCancelDeletionHeaders
- uid: com.microsoft.azure.batch.protocol._certificates.cancelDeletionWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateCancelDeletionHeaders>> com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  type: Method
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, CertificateCancelDeletionHeaders>> cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.cancelDeletion(String,String,CertificateCancelDeletionOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  nameWithType: Certificates.cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  fullName: void com.microsoft.azure.batch.protocol.Certificates.cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  type: Method
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public void cancelDeletion(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    - id: certificateCancelDeletionOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_options.yml
  name: CertificateCancelDeletionOptions
  nameWithType: CertificateCancelDeletionOptions
  fullName: com.microsoft.azure.batch.protocol.models.CertificateCancelDeletionOptions
  type: Class
  summary: <p>Additional parameters for the Certificate_cancelDeletion operation. </p>
  syntax:
    content: public class CertificateCancelDeletionOptions
- uid: com.microsoft.azure.batch.protocol._certificates.cancelDeletionAsync(String,String,CertificateCancelDeletionOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    - id: certificateCancelDeletionOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.cancelDeletionAsync(String,String,CertificateCancelDeletionOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  nameWithType: Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Certificates.cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  type: Method
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<Void> cancelDeletionAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    - id: certificateCancelDeletionOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.cancelDeletionWithServiceResponseAsync(String,String,CertificateCancelDeletionOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  nameWithType: Certificates.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateCancelDeletionHeaders>> com.microsoft.azure.batch.protocol.Certificates.cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
  type: Method
  summary: >-
    <p>Cancels a failed deletion of a certificate from the specified account. If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, CertificateCancelDeletionHeaders>> cancelDeletionWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate being deleted. </p>
    - id: certificateCancelDeletionOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_cancel_deletion_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.delete(String,String)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: delete(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.delete(String thumbprintAlgorithm, String thumbprint)
  fullName: void com.microsoft.azure.batch.protocol.Certificates.delete(String thumbprintAlgorithm, String thumbprint)
  type: Method
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public void delete(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.deleteAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: deleteAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
  nameWithType: Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.deleteAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: deleteAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint)
  type: Method
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate_delete_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate_delete_headers.yml
  name: CertificateDeleteHeaders
  nameWithType: CertificateDeleteHeaders
  fullName: com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders
  type: Class
  summary: <p>Defines headers for Delete operation. </p>
  syntax:
    content: public class CertificateDeleteHeaders
- uid: com.microsoft.azure.batch.protocol._certificates.deleteWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateDeleteHeaders>> com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  type: Method
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, CertificateDeleteHeaders>> deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_delete_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.delete(String,String,CertificateDeleteOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  nameWithType: Certificates.delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  fullName: void com.microsoft.azure.batch.protocol.Certificates.delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  type: Method
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public void delete(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    - id: certificateDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_delete_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate_delete_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate_delete_options.yml
  name: CertificateDeleteOptions
  nameWithType: CertificateDeleteOptions
  fullName: com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions
  type: Class
  summary: <p>Additional parameters for the Certificate_delete operation. </p>
  syntax:
    content: public class CertificateDeleteOptions
- uid: com.microsoft.azure.batch.protocol._certificates.deleteAsync(String,String,CertificateDeleteOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    - id: certificateDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_delete_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.deleteAsync(String,String,CertificateDeleteOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  nameWithType: Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Certificates.deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  type: Method
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    - id: certificateDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_delete_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.deleteWithServiceResponseAsync(String,String,CertificateDeleteOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  nameWithType: Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, CertificateDeleteHeaders>> com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  type: Method
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, CertificateDeleteHeaders>> deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to be deleted. </p>
    - id: certificateDeleteOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_delete_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._certificate_delete_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.get(String,String)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: get(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.get(String thumbprintAlgorithm, String thumbprint)
  fullName: Certificate com.microsoft.azure.batch.protocol.Certificates.get(String thumbprintAlgorithm, String thumbprint)
  type: Method
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public Certificate get(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._certificate
      description: <p>the Certificate object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.getAsync(String,String,final ServiceCallback<Certificate>)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: getAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Certificate> serviceCallback)
  nameWithType: Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Certificate> serviceCallback)
  fullName: ServiceFuture<Certificate> com.microsoft.azure.batch.protocol.Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Certificate> serviceCallback)
  type: Method
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint, final ServiceCallback<Certificate> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.getAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: getAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.getAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: Observable<Certificate> com.microsoft.azure.batch.protocol.Certificates.getAsync(String thumbprintAlgorithm, String thumbprint)
  type: Method
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public Observable<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the observable to the Certificate object </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate_get_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate_get_headers.yml
  name: CertificateGetHeaders
  nameWithType: CertificateGetHeaders
  fullName: com.microsoft.azure.batch.protocol.models.CertificateGetHeaders
  type: Class
  summary: <p>Defines headers for Get operation. </p>
  syntax:
    content: public class CertificateGetHeaders
- uid: com.microsoft.azure.batch.protocol._certificates.getWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  fullName: Observable<ServiceResponseWithHeaders<Certificate, CertificateGetHeaders>> com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  type: Method
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Certificate, CertificateGetHeaders>> getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._certificateb33c76fccom.microsoft.azure.batch.protocol.models._certificate_get_headerse7daa122
      description: <p>the observable to the Certificate object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.get(String,String,CertificateGetOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  nameWithType: Certificates.get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  fullName: Certificate com.microsoft.azure.batch.protocol.Certificates.get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  type: Method
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public Certificate get(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    - id: certificateGetOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._certificate
      description: <p>the Certificate object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate_get_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate_get_options.yml
  name: CertificateGetOptions
  nameWithType: CertificateGetOptions
  fullName: com.microsoft.azure.batch.protocol.models.CertificateGetOptions
  type: Class
  summary: <p>Additional parameters for the Certificate_get operation. </p>
  syntax:
    content: public class CertificateGetOptions
- uid: com.microsoft.azure.batch.protocol._certificates.getAsync(String,String,CertificateGetOptions,final ServiceCallback<Certificate>)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, final ServiceCallback<Certificate> serviceCallback)
  nameWithType: Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, final ServiceCallback<Certificate> serviceCallback)
  fullName: ServiceFuture<Certificate> com.microsoft.azure.batch.protocol.Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, final ServiceCallback<Certificate> serviceCallback)
  type: Method
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions, final ServiceCallback<Certificate> serviceCallback)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    - id: certificateGetOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_get_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.getAsync(String,String,CertificateGetOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  nameWithType: Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  fullName: Observable<Certificate> com.microsoft.azure.batch.protocol.Certificates.getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  type: Method
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public Observable<Certificate> getAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    - id: certificateGetOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the observable to the Certificate object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.getWithServiceResponseAsync(String,String,CertificateGetOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  nameWithType: Certificates.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  fullName: Observable<ServiceResponseWithHeaders<Certificate, CertificateGetHeaders>> com.microsoft.azure.batch.protocol.Certificates.getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
  type: Method
  summary: >-
    <p>Gets information about the specified certificate.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Certificate, CertificateGetHeaders>> getWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateGetOptions certificateGetOptions)
    parameters:
    - id: thumbprintAlgorithm
      type: "26831127"
      description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    - id: thumbprint
      type: "26831127"
      description: <p>The thumbprint of the certificate to get. </p>
    - id: certificateGetOptions
      type: com.microsoft.azure.batch.protocol.models._certificate_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._certificateb33c76fccom.microsoft.azure.batch.protocol.models._certificate_get_headerse7daa122
      description: <p>the observable to the Certificate object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.listNext(final String)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listNext(final String nextPageLink)
  nameWithType: Certificates.listNext(final String nextPageLink)
  fullName: PagedList<Certificate> com.microsoft.azure.batch.protocol.Certificates.listNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<Certificate> listNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the PagedList&lt;Certificate&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._certificates.listNextAsync(final String,final ServiceFuture<List<Certificate>>,final ListOperationCallback<Certificate>)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
  nameWithType: Certificates.listNextAsync(final String nextPageLink, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
  fullName: ServiceFuture<List<Certificate>> com.microsoft.azure.batch.protocol.Certificates.listNextAsync(final String nextPageLink, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<Certificate>> listNextAsync(final String nextPageLink, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.listNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listNextAsync(final String nextPageLink)
  nameWithType: Certificates.listNextAsync(final String nextPageLink)
  fullName: Observable<Page<Certificate>> com.microsoft.azure.batch.protocol.Certificates.listNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<Certificate>> listNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.listNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: Certificates.listNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.listNext(final String,final CertificateListNextOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listNext(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  nameWithType: Certificates.listNext(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  fullName: PagedList<Certificate> com.microsoft.azure.batch.protocol.Certificates.listNext(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public PagedList<Certificate> listNext(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: certificateListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the PagedList&lt;Certificate&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._certificate_list_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._certificate_list_next_options.yml
  name: CertificateListNextOptions
  nameWithType: CertificateListNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.CertificateListNextOptions
  type: Class
  summary: <p>Additional parameters for the listNext operation. </p>
  syntax:
    content: public class CertificateListNextOptions
- uid: com.microsoft.azure.batch.protocol._certificates.listNextAsync(final String,final CertificateListNextOptions,final ServiceFuture<List<Certificate>>,final ListOperationCallback<Certificate>)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
  nameWithType: Certificates.listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
  fullName: ServiceFuture<List<Certificate>> com.microsoft.azure.batch.protocol.Certificates.listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<Certificate>> listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions, final ServiceFuture<List<Certificate>> serviceFuture, final ListOperationCallback<Certificate> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: certificateListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._certificatea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.listNextAsync(final String,final CertificateListNextOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  nameWithType: Certificates.listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  fullName: Observable<Page<Certificate>> com.microsoft.azure.batch.protocol.Certificates.listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<Page<Certificate>> listNextAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: certificateListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._certificatee7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._certificates.listNextWithServiceResponseAsync(final String,final CertificateListNextOptions)
  parent: com.microsoft.azure.batch.protocol._certificates
  href: com.microsoft.azure.batch.protocol._certificates.yml
  name: listNextWithServiceResponseAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  nameWithType: Certificates.listNextWithServiceResponseAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> com.microsoft.azure.batch.protocol.Certificates.listNextWithServiceResponseAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
  type: Method
  summary: >-
    <p>Lists all of the certificates that have been added to the specified account.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<Certificate>, CertificateListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink, final CertificateListNextOptions certificateListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: certificateListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._certificate_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._certificate8135b5ebcom.microsoft.azure.batch.protocol.models._certificate_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;Certificate&gt; object </p>
- uid: com.microsoft.azure.batch.protocol.models._batch_error_exception
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._batch_error_exception.yml
  name: BatchErrorException
  nameWithType: BatchErrorException
  fullName: com.microsoft.azure.batch.protocol.models.BatchErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref href="com.microsoft.azure.batch.protocol.models._batch_error" data-throw-if-not-resolved="false"></xref> information. </p>
  syntax:
    content: public class BatchErrorException
- uid: com.microsoft.azure.batch.protocol.models._page_impl
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  name: PageImpl<T>
  nameWithType: PageImpl<T>
  fullName: com.microsoft.azure.batch.protocol.models.PageImpl<T>
  type: Class
  summary: >-
    <p>An instance of this class defines a page of Azure resources and a link to get the next page of resources, if any.</p>

    <p></p>
  syntax:
    content: public class PageImpl<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>type of Azure resource </p>
