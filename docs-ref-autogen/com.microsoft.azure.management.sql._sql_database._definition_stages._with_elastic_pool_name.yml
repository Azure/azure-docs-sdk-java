### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name
  id: _with_elastic_pool_name
  parent: com.microsoft.azure.management.sql
  children:
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withExistingElasticPool(SqlElasticPool)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withExistingElasticPool(String)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withNewElasticPool(Creatable<SqlElasticPool>)
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.yml
  langs:
  - java
  name: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 445
  package: com.microsoft.azure.management.sql
  summary: "<p>The SQL Database definition to set the elastic pool for database.</p>\r\n<p>\r\nThe SQL Database definition to set the elastic pool for database. </p>"
  syntax:
    content: public interface WithElasticPoolName<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition</p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withExistingElasticPool(SqlElasticPool)
  id: withExistingElasticPool(SqlElasticPool)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.yml
  langs:
  - java
  name: withExistingElasticPool(SqlElasticPool sqlElasticPool)
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(SqlElasticPool sqlElasticPool)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(SqlElasticPool sqlElasticPool)
  overload: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withExistingElasticPool*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 460
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets the existing elastic pool for the SQLDatabase.</p>\r\n<p></p>"
  syntax:
    content: public WithExistingDatabaseAfterElasticPool<ParentT> withExistingElasticPool(SqlElasticPool sqlElasticPool)
    parameters:
    - id: sqlElasticPool
      type: com.microsoft.azure.management.sql._sql_elastic_pool
      description: <p>for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._definition_stages_103af6728f7335b8bba7c224131927c12da8a2936
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withExistingElasticPool(String)
  id: withExistingElasticPool(String)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.yml
  langs:
  - java
  name: withExistingElasticPool(String elasticPoolName)
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(String elasticPoolName)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(String elasticPoolName)
  overload: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withExistingElasticPool*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 452
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets the existing elastic pool for the SQLDatabase.</p>\r\n<p></p>"
  syntax:
    content: public WithExistingDatabaseAfterElasticPool<ParentT> withExistingElasticPool(String elasticPoolName)
    parameters:
    - id: elasticPoolName
      type: "26831127"
      description: <p>for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._definition_stages_103af6728f7335b8bba7c224131927c12da8a2936
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withNewElasticPool(Creatable<SqlElasticPool>)
  id: withNewElasticPool(Creatable<SqlElasticPool>)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.yml
  langs:
  - java
  name: withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  overload: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withNewElasticPool*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 468
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets the new elastic pool for the SQLDatabase, this will create a new elastic pool while creating database.</p>\r\n<p></p>"
  syntax:
    content: public WithExistingDatabaseAfterElasticPool<ParentT> withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
    parameters:
    - id: sqlElasticPool
      type: com.microsoft.azure.management.resources.fluentcore.model._creatable78504a52com.microsoft.azure.management.sql._sql_elastic_poola08ddfce
      description: <p>creatable definition for new elastic pool to be created for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._definition_stages_103af6728f7335b8bba7c224131927c12da8a2936
      description: <p>The next stage of the definition. </p>
references:
- uid: 18a275b1
  spec.java:
  - name: ParentT
    fullName: ParentT
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages_103af6728f7335b8bba7c224131927c12da8a2936
  spec.java:
  - uid: com.microsoft.azure.management.sql._sql_database._definition_stages_103af6728f7335b8bba7c224131927c12
    name: SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool
    fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool
    href: com.microsoft.azure.management.sql._sql_database._definition_stages_103af6728f7335b8bba7c224131927c12.yml
  - name: <ParentT>
    fullName: <ParentT>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withExistingElasticPool*
  name: withExistingElasticPool
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable78504a52com.microsoft.azure.management.sql._sql_elastic_poola08ddfce
  spec.java:
  - uid: com.microsoft.azure.management.resources.fluentcore.model._creatable
    name: Creatable
    fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable
    href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.sql._sql_elastic_pool
    name: SqlElasticPool
    fullName: com.microsoft.azure.management.sql.SqlElasticPool
    href: com.microsoft.azure.management.sql._sql_elastic_pool.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withNewElasticPool*
  name: withNewElasticPool
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withNewElasticPool
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withNewElasticPool
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql._sql_database._definition
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition.yml
  name: SqlDatabase.Definition
  nameWithType: SqlDatabase.Definition
  fullName: com.microsoft.azure.management.sql.SqlDatabase.Definition
  type: Interface
  summary: <p>Container interface for all the definitions that need to be implemented. </p>
  syntax:
    content: public interface Definition extends SqlDatabase.DefinitionStages.Blank<ParentT>,SqlDatabase.DefinitionStages.WithCreate,SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>,SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>,SqlDatabase.DefinitionStages.WithCreateMode<ParentT>,SqlDatabase.DefinitionStages.WithCreateWithLessOptions
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_all_different_options
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_all_different_options.yml
  name: SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>
  type: Interface
  summary: >-
    <p>The SQL database interface with all starting options for definition.</p>

    <p>

    The SQL database interface with all starting options for definition. </p>
  syntax:
    content: public interface WithAllDifferentOptions<ParentT> extends SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>,SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase<ParentT>,SqlDatabase.DefinitionStages.WithImportFrom<ParentT>,SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>,SqlDatabase.DefinitionStages.WithSampleDatabase<ParentT>,SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>,SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>,SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT>,SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>,SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>,SqlDatabase.DefinitionStages.WithCreate
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition</p>
- uid: com.microsoft.azure.management.sql._sql_database._sql_database_definition
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._sql_database_definition.yml
  name: SqlDatabase.SqlDatabaseDefinition<ParentT>
  nameWithType: SqlDatabase.SqlDatabaseDefinition<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.SqlDatabaseDefinition<ParentT>
  type: Interface
  summary: >-
    <p>Container interface for all the definitions that need to be implemented.</p>

    <p></p>
  syntax:
    content: public interface SqlDatabaseDefinition<ParentT> extends SqlDatabase.DefinitionStages.Blank<ParentT>,SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>,SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>,SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase<ParentT>,SqlDatabase.DefinitionStages.WithImportFrom<ParentT>,SqlDatabase.DefinitionStages.WithStorageKey<ParentT>,SqlDatabase.DefinitionStages.WithAuthentication<ParentT>,SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>,SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>,SqlDatabase.DefinitionStages.WithCreateMode<ParentT>,SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT>,SqlDatabase.DefinitionStages.WithAttachFinal<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages_103af6728f7335b8bba7c224131927c12
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages_103af6728f7335b8bba7c224131927c12.yml
  name: SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool<ParentT>
  type: Interface
  summary: >-
    <p>The stage to decide whether using existing database or not.</p>

    <p></p>
  syntax:
    content: public interface WithExistingDatabaseAfterElasticPool<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.sql._sql_elastic_pool
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_elastic_pool.yml
  name: SqlElasticPool
  nameWithType: SqlElasticPool
  fullName: com.microsoft.azure.management.sql.SqlElasticPool
  type: Interface
  summary: >-
    <p>An immutable client-side representation of an Azure SQL Elastic Pool.</p>

    <p>An immutable client-side representation of an Azure SQL ElasticPool. </p>
  syntax:
    content: public interface SqlElasticPool extends IndependentChildResource<SqlServerManager, ElasticPoolInner>,Refreshable<SqlElasticPool>,Updatable<SqlElasticPool.Update>,ExternalChildResource<SqlElasticPool, SqlServer>,HasInner<ElasticPoolInner>,HasResourceGroup,Refreshable<SqlElasticPool>,Updatable<SqlElasticPool.Update>
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable
  parent: com.microsoft.azure.management.resources.fluentcore.model
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: Creatable<T>
  nameWithType: Creatable<T>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>
  type: Interface
  summary: >-
    <p>The final stage of the resource definition, at which it can be created using create().</p>

    <p></p>
  syntax:
    content: public interface Creatable<T> extends Indexable,HasName
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>the fluent type of the resource to be created </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_existing_database
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_existing_database.yml
  name: SqlDatabase.DefinitionStages.WithExistingDatabase
  nameWithType: SqlDatabase.DefinitionStages.WithExistingDatabase
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabase
  type: Interface
  summary: <p>The stage to decide whether using existing database or not. </p>
  syntax:
    content: public interface WithExistingDatabase
