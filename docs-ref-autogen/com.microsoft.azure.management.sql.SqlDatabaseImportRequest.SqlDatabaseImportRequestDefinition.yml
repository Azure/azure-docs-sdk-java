### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.SqlDatabaseImportRequestDefinition
  id: SqlDatabaseImportRequestDefinition
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.SqlDatabaseImportRequestDefinition.yml
  langs:
  - java
  name: SqlDatabaseImportRequest.SqlDatabaseImportRequestDefinition
  nameWithType: SqlDatabaseImportRequest.SqlDatabaseImportRequestDefinition
  fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.SqlDatabaseImportRequestDefinition
  type: Interface
  source:
    remote:
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabaseImportRequest.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabaseImportRequest.java
    startLine: 27
  package: com.microsoft.azure.management.sql
  summary: "<p>The entirety of database import operation definition. </p>"
  syntax:
    content: public interface SqlDatabaseImportRequestDefinition extends SqlDatabaseImportRequest.DefinitionStages.ImportFrom,SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey,SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword,SqlDatabaseImportRequest.DefinitionStages.WithExecute
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model.Executable.execute()
  - com.microsoft.azure.management.resources.fluentcore.model.Executable.executeAsync()
  - com.microsoft.azure.management.resources.fluentcore.model.Executable.executeAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom.importFrom(String)
  - com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom.importFrom(StorageAccount,String,String)
  - com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  - com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withActiveDirectoryLoginAndPassword(String,String)
  - com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey.withSharedAccessKey(String)
  - com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withSqlAdministratorLoginAndPassword(String,String)
  - com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey.withStorageAccessKey(String)
references:
- uid: com.microsoft.azure.management.resources.fluentcore.model.Executable.execute()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Executable
  href: com.microsoft.azure.management.resources.fluentcore.model.Executable.yml
  name: execute()
  nameWithType: Executable<T>.execute()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Executable<T>.execute()
  type: Method
  summary: "<p>Execute the request.</p>\r\n<p></p>"
  syntax:
    content: public T execute()
    return:
      type: 8ce1ecb9
      description: <p>execution result object </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Executable.executeAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Executable
  href: com.microsoft.azure.management.resources.fluentcore.model.Executable.yml
  name: executeAsync()
  nameWithType: Executable<T>.executeAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Executable<T>.executeAsync()
  type: Method
  summary: "<p>Execute the request asynchronously.</p>\r\n<p></p>"
  syntax:
    content: public Observable<T> executeAsync()
    return:
      type: c4094ba1
      description: <p>the handle to the REST call </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Executable.executeAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model.Executable
  href: com.microsoft.azure.management.resources.fluentcore.model.Executable.yml
  name: executeAsync(final ServiceCallback<T> callback)
  nameWithType: Executable<T>.executeAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Executable<T>.executeAsync(final ServiceCallback<T> callback)
  type: Method
  summary: "<p>Execute the request asynchronously.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<T> executeAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback for success and failure </p>
    return:
      type: c0371a4e
      description: <p>the handle to the REST call </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom.importFrom(String)
  parent: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom
  href: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom.yml
  name: importFrom(String storageUri)
  nameWithType: SqlDatabaseImportRequest.DefinitionStages.ImportFrom.importFrom(String storageUri)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom.importFrom(String storageUri)
  type: Method
  syntax:
    content: public SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey importFrom(String storageUri)
    parameters:
    - id: storageUri
      type: "26831127"
      description: <p>the storage URI to use </p>
    return:
      type: 44b8d1f3
      description: <p>next definition stage </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom.importFrom(StorageAccount,String,String)
  parent: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom
  href: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom.yml
  name: importFrom(StorageAccount storageAccount, String containerName, String fileName)
  nameWithType: SqlDatabaseImportRequest.DefinitionStages.ImportFrom.importFrom(StorageAccount storageAccount, String containerName, String fileName)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom.importFrom(StorageAccount storageAccount, String containerName, String fileName)
  type: Method
  syntax:
    content: public SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword importFrom(StorageAccount storageAccount, String containerName, String fileName)
    parameters:
    - id: storageAccount
      type: com.microsoft.azure.management.storage.StorageAccount
      description: <p>an existing storage account to be used </p>
    - id: containerName
      type: "26831127"
      description: <p>the container name within the storage account to use </p>
    - id: fileName
      type: "26831127"
      description: <p>the exported database file name </p>
    return:
      type: 041b2496
      description: <p>next definition stage </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Indexable
  href: com.microsoft.azure.management.resources.fluentcore.model.Indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withActiveDirectoryLoginAndPassword(String,String)
  parent: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword
  href: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.yml
  name: withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  nameWithType: SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  type: Method
  syntax:
    content: public SqlDatabaseImportRequest.DefinitionStages.WithExecute withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
    parameters:
    - id: administratorLogin
      type: "26831127"
      description: <p>the Active Directory administrator login </p>
    - id: administratorPassword
      type: "26831127"
      description: <p>the Active Directory administrator password </p>
    return:
      type: b3e787fb
      description: <p>next definition stage </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey.withSharedAccessKey(String)
  parent: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey
  href: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey.yml
  name: withSharedAccessKey(String sharedAccessKey)
  nameWithType: SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey.withSharedAccessKey(String sharedAccessKey)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey.withSharedAccessKey(String sharedAccessKey)
  type: Method
  syntax:
    content: public SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword withSharedAccessKey(String sharedAccessKey)
    parameters:
    - id: sharedAccessKey
      type: "26831127"
      description: <p>the shared access key to use; it must be preceded with a "?." </p>
    return:
      type: 041b2496
      description: <p>next definition stage </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withSqlAdministratorLoginAndPassword(String,String)
  parent: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword
  href: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.yml
  name: withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  nameWithType: SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  type: Method
  syntax:
    content: public SqlDatabaseImportRequest.DefinitionStages.WithExecute withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
    parameters:
    - id: administratorLogin
      type: "26831127"
      description: <p>the SQL administrator login </p>
    - id: administratorPassword
      type: "26831127"
      description: <p>the SQL administrator password </p>
    return:
      type: b3e787fb
      description: <p>next definition stage </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey.withStorageAccessKey(String)
  parent: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey
  href: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey.yml
  name: withStorageAccessKey(String storageAccessKey)
  nameWithType: SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey.withStorageAccessKey(String storageAccessKey)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey.withStorageAccessKey(String storageAccessKey)
  type: Method
  syntax:
    content: public SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword withStorageAccessKey(String storageAccessKey)
    parameters:
    - id: storageAccessKey
      type: "26831127"
      description: <p>the storage access key to use </p>
    return:
      type: 041b2496
      description: <p>next definition stage </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom.yml
  name: SqlDatabaseImportRequest.DefinitionStages.ImportFrom
  nameWithType: SqlDatabaseImportRequest.DefinitionStages.ImportFrom
  fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.ImportFrom
  type: Interface
  summary: "<p>Sets the storage URI to use. </p>"
  syntax:
    content: public interface ImportFrom
- uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey.yml
  name: SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey
  nameWithType: SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey
  fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey
  type: Interface
  summary: "<p>Sets the storage key type and value to use. </p>"
  syntax:
    content: public interface WithStorageTypeAndKey
- uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.yml
  name: SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword
  nameWithType: SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword
  fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword
  type: Interface
  summary: "<p>Sets the authentication type and SQL or Active Directory administrator login and password. </p>"
  syntax:
    content: public interface WithAuthenticationTypeAndLoginPassword
- uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithExecute
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithExecute.yml
  name: SqlDatabaseImportRequest.DefinitionStages.WithExecute
  nameWithType: SqlDatabaseImportRequest.DefinitionStages.WithExecute
  fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithExecute
  type: Interface
  summary: "<p>The stage of the definition which contains all the minimum required inputs for execution, but also allows for any other optional settings to be specified. </p>"
  syntax:
    content: public interface WithExecute
