### YamlMime:JavaMember
uid: "com.azure.resourcemanager.eventhubs.models.EventHubNamespaceAuthorizationRule.DefinitionStages.WithNamespace.withExistingNamespaceId*"
fullName: "com.azure.resourcemanager.eventhubs.models.EventHubNamespaceAuthorizationRule.DefinitionStages.WithNamespace.withExistingNamespaceId"
name: "withExistingNamespaceId"
nameWithType: "EventHubNamespaceAuthorizationRule.DefinitionStages.WithNamespace.withExistingNamespaceId"
members:
- uid: "com.azure.resourcemanager.eventhubs.models.EventHubNamespaceAuthorizationRule.DefinitionStages.WithNamespace.withExistingNamespaceId(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHubNamespaceAuthorizationRule.DefinitionStages.WithNamespace.withExistingNamespaceId(String namespaceResourceId)"
  name: "withExistingNamespaceId(String namespaceResourceId)"
  nameWithType: "EventHubNamespaceAuthorizationRule.DefinitionStages.WithNamespace.withExistingNamespaceId(String namespaceResourceId)"
  summary: "Specifies that authorization rule needs to be created for the given event hub namespace."
  parameters:
  - description: "the resource id of the event Hub namespace"
    name: "namespaceResourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EventHubNamespaceAuthorizationRule.DefinitionStages.WithAccessPolicy withExistingNamespaceId(String namespaceResourceId)"
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.EventHubNamespaceAuthorizationRule.DefinitionStages.WithAccessPolicy?alt=com.azure.resourcemanager.eventhubs.models.EventHubNamespaceAuthorizationRule.DefinitionStages.WithAccessPolicy&text=WithAccessPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.eventhubs.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventhubs:2.1.0
