### YamlMime:JavaMember
nameWithType: Range.Range
type: constructor
members:
- fullName: com.microsoft.azure.elasticdb.shard.base.Range.Range(Object low)
  name: Range(Object low)
  nameWithType: Range.Range(Object low)
  parameters:
  - description: <p>Low boundary value (inclusive). </p>
    name: low
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs range based on its low boundary value. The low boundary value is set to the one specified in <em>low</em>  while the high boundary value is set to maximum possible value i.e. +infinity.</p>

    <p></p>
  syntax: public Range(Object low)
  uid: com.microsoft.azure.elasticdb.shard.base.Range.Range(Object)
- fullName: com.microsoft.azure.elasticdb.shard.base.Range.Range(Object low, Object high)
  name: Range(Object low, Object high)
  nameWithType: Range.Range(Object low, Object high)
  parameters:
  - description: <p>Low boundary value (inclusive). </p>
    name: low
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>High boundary value (exclusive). </p>
    name: high
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs range based on its low and high boundary values.</p>

    <p></p>
  syntax: public Range(Object low, Object high)
  uid: com.microsoft.azure.elasticdb.shard.base.Range.Range(Object,Object)
uid: com.microsoft.azure.elasticdb.shard.base.Range.Range*
fullName: com.microsoft.azure.elasticdb.shard.base.Range.Range
name: Range
package: com.microsoft.azure.elasticdb.shard.base
metadata: {}
