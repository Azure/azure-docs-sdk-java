### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.implementation.PathsImpl.setAccessControlRecursiveWithRestResponseAsync*"
fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.setAccessControlRecursiveWithRestResponseAsync"
name: "setAccessControlRecursiveWithRestResponseAsync"
nameWithType: "PathsImpl.setAccessControlRecursiveWithRestResponseAsync"
members:
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.setAccessControlRecursiveWithRestResponseAsync(com.azure.storage.file.datalake.implementation.models.PathSetAccessControlRecursiveMode,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.setAccessControlRecursiveWithRestResponseAsync(PathSetAccessControlRecursiveMode mode, Context context)"
  name: "setAccessControlRecursiveWithRestResponseAsync(PathSetAccessControlRecursiveMode mode, Context context)"
  nameWithType: "PathsImpl.setAccessControlRecursiveWithRestResponseAsync(PathSetAccessControlRecursiveMode mode, Context context)"
  summary: "Set the access control list for a path and subpaths."
  parameters:
  - description: "Mode \"set\" sets POSIX access control rights on files and directories, \"modify\" modifies one or more POSIX access control rights  that pre-exist on files and directories, \"remove\" removes one or more POSIX access control rights  that were present earlier on files and directories. Possible values include: 'set', 'modify', 'remove'."
    name: "mode"
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.PathSetAccessControlRecursiveMode?alt=com.azure.storage.file.datalake.implementation.models.PathSetAccessControlRecursiveMode&text=PathSetAccessControlRecursiveMode\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PathsSetAccessControlRecursiveResponse> setAccessControlRecursiveWithRestResponseAsync(PathSetAccessControlRecursiveMode mode, Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.implementation.models.PathsSetAccessControlRecursiveResponse?alt=com.azure.storage.file.datalake.implementation.models.PathsSetAccessControlRecursiveResponse&text=PathsSetAccessControlRecursiveResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.setAccessControlRecursiveWithRestResponseAsync(com.azure.storage.file.datalake.implementation.models.PathSetAccessControlRecursiveMode,java.lang.Integer,java.lang.String,java.lang.Boolean,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.setAccessControlRecursiveWithRestResponseAsync(PathSetAccessControlRecursiveMode mode, Integer timeout, String continuation, Boolean forceFlag, Integer maxRecords, String acl, String requestId, Context context)"
  name: "setAccessControlRecursiveWithRestResponseAsync(PathSetAccessControlRecursiveMode mode, Integer timeout, String continuation, Boolean forceFlag, Integer maxRecords, String acl, String requestId, Context context)"
  nameWithType: "PathsImpl.setAccessControlRecursiveWithRestResponseAsync(PathSetAccessControlRecursiveMode mode, Integer timeout, String continuation, Boolean forceFlag, Integer maxRecords, String acl, String requestId, Context context)"
  summary: "Set the access control list for a path and subpaths."
  parameters:
  - description: "Mode \"set\" sets POSIX access control rights on files and directories, \"modify\" modifies one or more POSIX access control rights  that pre-exist on files and directories, \"remove\" removes one or more POSIX access control rights  that were present earlier on files and directories. Possible values include: 'set', 'modify', 'remove'."
    name: "mode"
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.PathSetAccessControlRecursiveMode?alt=com.azure.storage.file.datalake.implementation.models.PathSetAccessControlRecursiveMode&text=PathSetAccessControlRecursiveMode\" data-throw-if-not-resolved=\"False\" />"
  - description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    name: "timeout"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional.  When deleting a directory, the number of paths that are deleted with each invocation is limited.  If the number of paths to be deleted exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the delete operation to continue deleting the directory."
    name: "continuation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Valid for \"SetAccessControlRecursive\" operation. If set to false, the operation will terminate quickly on encountering user errors (4XX). If true, the operation will ignore user errors and proceed with the operation on other sub-entities of the directory. Continuation token will only be returned when forceFlag is true in case of user errors. If not set the default value is false for this."
    name: "forceFlag"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. It specifies the maximum number of files or directories on which the acl change will be applied. If omitted or greater than 2,000, the request will process up to 2,000 items."
    name: "maxRecords"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Sets POSIX access control rights on files and directories. The value is a comma-separated list of access control entries. Each access control entry (ACE) consists of a scope, a type, a user or group identifier, and permissions in the format \"[scope:][type]:[id]:[permissions]\"."
    name: "acl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    name: "requestId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PathsSetAccessControlRecursiveResponse> setAccessControlRecursiveWithRestResponseAsync(PathSetAccessControlRecursiveMode mode, Integer timeout, String continuation, Boolean forceFlag, Integer maxRecords, String acl, String requestId, Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.implementation.models.PathsSetAccessControlRecursiveResponse?alt=com.azure.storage.file.datalake.implementation.models.PathsSetAccessControlRecursiveResponse&text=PathsSetAccessControlRecursiveResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.implementation"
artifact: com.azure:azure-storage-file-datalake:12.4.1
