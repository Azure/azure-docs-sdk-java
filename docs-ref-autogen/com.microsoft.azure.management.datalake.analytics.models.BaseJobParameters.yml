### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters.properties()
  name: properties()
  nameWithType: BaseJobParameters.properties()
  returns:
    description: <p>the properties value </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.CreateJobProperties?alt=com.microsoft.azure.management.datalake.analytics.models.CreateJobProperties&text=CreateJobProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the properties value.</p>

    <p></p>
  syntax: public CreateJobProperties properties()
  uid: com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters.properties()
- fullName: com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters.type()
  name: type()
  nameWithType: BaseJobParameters.type()
  returns:
    description: <p>the type value </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.JobType?alt=com.microsoft.azure.management.datalake.analytics.models.JobType&text=JobType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the type value.</p>

    <p></p>
  syntax: public JobType type()
  uid: com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters.type()
- fullName: com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters.withProperties(CreateJobProperties properties)
  name: withProperties(CreateJobProperties properties)
  nameWithType: BaseJobParameters.withProperties(CreateJobProperties properties)
  parameters:
  - description: <p>the properties value to set </p>
    name: properties
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.CreateJobProperties?alt=com.microsoft.azure.management.datalake.analytics.models.CreateJobProperties&text=CreateJobProperties" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the BaseJobParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters?alt=com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters&text=BaseJobParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the properties value.</p>

    <p></p>
  syntax: public BaseJobParameters withProperties(CreateJobProperties properties)
  uid: com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters.withProperties(CreateJobProperties)
- fullName: com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters.withType(JobType type)
  name: withType(JobType type)
  nameWithType: BaseJobParameters.withType(JobType type)
  parameters:
  - description: <p>the type value to set </p>
    name: type
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.JobType?alt=com.microsoft.azure.management.datalake.analytics.models.JobType&text=JobType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the BaseJobParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters?alt=com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters&text=BaseJobParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the type value.</p>

    <p></p>
  syntax: public BaseJobParameters withType(JobType type)
  uid: com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters.withType(JobType)
nameWithType: BaseJobParameters
syntax: public class BaseJobParameters
type: class
uid: com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters
fullName: com.microsoft.azure.management.datalake.analytics.models.BaseJobParameters
name: BaseJobParameters
package: com.microsoft.azure.management.datalake.analytics.models
summary: <p>Data Lake Analytics Job Parameters base class for build and submit. </p>
metadata: {}
