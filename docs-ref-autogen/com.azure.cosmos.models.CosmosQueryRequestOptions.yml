### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions
  id: CosmosQueryRequestOptions
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models
  children:
  - com.azure.cosmos.models.CosmosQueryRequestOptions.CosmosQueryRequestOptions()
  - com.azure.cosmos.models.CosmosQueryRequestOptions.getMaxBufferedItemCount()
  - com.azure.cosmos.models.CosmosQueryRequestOptions.getMaxDegreeOfParallelism()
  - com.azure.cosmos.models.CosmosQueryRequestOptions.getPartitionKey()
  - com.azure.cosmos.models.CosmosQueryRequestOptions.getResponseContinuationTokenLimitInKb()
  - com.azure.cosmos.models.CosmosQueryRequestOptions.getSessionToken()
  - com.azure.cosmos.models.CosmosQueryRequestOptions.isQueryMetricsEnabled()
  - com.azure.cosmos.models.CosmosQueryRequestOptions.isScanInQueryEnabled()
  - com.azure.cosmos.models.CosmosQueryRequestOptions.setMaxBufferedItemCount(int)
  - com.azure.cosmos.models.CosmosQueryRequestOptions.setMaxDegreeOfParallelism(int)
  - com.azure.cosmos.models.CosmosQueryRequestOptions.setPartitionKey(com.azure.cosmos.models.PartitionKey)
  - com.azure.cosmos.models.CosmosQueryRequestOptions.setQueryMetricsEnabled(boolean)
  - com.azure.cosmos.models.CosmosQueryRequestOptions.setResponseContinuationTokenLimitInKb(int)
  - com.azure.cosmos.models.CosmosQueryRequestOptions.setScanInQueryEnabled(java.lang.Boolean)
  - com.azure.cosmos.models.CosmosQueryRequestOptions.setSessionToken(java.lang.String)
  langs:
  - java
  name: CosmosQueryRequestOptions
  nameWithType: CosmosQueryRequestOptions
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions
  type: Class
  package: com.azure.cosmos.models
  summary: Specifies the options associated with query methods (enumeration operations) in the Azure Cosmos DB database service.
  syntax:
    content: public class CosmosQueryRequestOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.CosmosQueryRequestOptions()
  id: CosmosQueryRequestOptions()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: CosmosQueryRequestOptions()
  nameWithType: CosmosQueryRequestOptions.CosmosQueryRequestOptions()
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.CosmosQueryRequestOptions()
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.CosmosQueryRequestOptions*
  type: Constructor
  package: com.azure.cosmos.models
  summary: Instantiates a new query request options.
  syntax:
    content: public CosmosQueryRequestOptions()
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.CosmosQueryRequestOptions(com.azure.cosmos.models.CosmosQueryRequestOptions)
  id: CosmosQueryRequestOptions(com.azure.cosmos.models.CosmosQueryRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: CosmosQueryRequestOptions(CosmosQueryRequestOptions options)
  nameWithType: CosmosQueryRequestOptions.CosmosQueryRequestOptions(CosmosQueryRequestOptions options)
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.CosmosQueryRequestOptions(CosmosQueryRequestOptions options)
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.CosmosQueryRequestOptions*
  type: Constructor
  package: com.azure.cosmos.models
  summary: Instantiates a new query request options.
  syntax:
    content: " CosmosQueryRequestOptions(CosmosQueryRequestOptions options)"
    parameters:
    - id: options
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the options
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.getMaxBufferedItemCount()
  id: getMaxBufferedItemCount()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: getMaxBufferedItemCount()
  nameWithType: CosmosQueryRequestOptions.getMaxBufferedItemCount()
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.getMaxBufferedItemCount()
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.getMaxBufferedItemCount*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the maximum number of items that can be buffered client side during parallel query execution.
  syntax:
    content: public int getMaxBufferedItemCount()
    return:
      type: int
      description: >-
        maximum number of items that can be buffered client side during
         parallel query execution.
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.getMaxDegreeOfParallelism()
  id: getMaxDegreeOfParallelism()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: getMaxDegreeOfParallelism()
  nameWithType: CosmosQueryRequestOptions.getMaxDegreeOfParallelism()
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.getMaxDegreeOfParallelism()
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.getMaxDegreeOfParallelism*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the number of concurrent operations run client side during parallel query execution.
  syntax:
    content: public int getMaxDegreeOfParallelism()
    return:
      type: int
      description: >-
        number of concurrent operations run client side during parallel query
         execution.
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.getPartitionKey()
  id: getPartitionKey()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: getPartitionKey()
  nameWithType: CosmosQueryRequestOptions.getPartitionKey()
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.getPartitionKey()
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.getPartitionKey*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the partition key used to identify the current request's target partition.
  syntax:
    content: public PartitionKey getPartitionKey()
    return:
      type: com.azure.cosmos.models.PartitionKey
      description: the partition key.
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.getResponseContinuationTokenLimitInKb()
  id: getResponseContinuationTokenLimitInKb()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: getResponseContinuationTokenLimitInKb()
  nameWithType: CosmosQueryRequestOptions.getResponseContinuationTokenLimitInKb()
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.getResponseContinuationTokenLimitInKb()
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.getResponseContinuationTokenLimitInKb*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Gets the ResponseContinuationTokenLimitInKb request option for item query requests in the Azure Cosmos DB service. If not already set returns 0.


    ResponseContinuationTokenLimitInKb is used to limit the length of continuation token in the query response. Valid values are >= 1.
  syntax:
    content: public int getResponseContinuationTokenLimitInKb()
    return:
      type: int
      description: return set ResponseContinuationTokenLimitInKb, or 0 if not set
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.getSessionToken()
  id: getSessionToken()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: getSessionToken()
  nameWithType: CosmosQueryRequestOptions.getSessionToken()
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.getSessionToken()
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.getSessionToken*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the session token for use with session consistency.
  syntax:
    content: public String getSessionToken()
    return:
      type: java.lang.String
      description: the session token.
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.isQueryMetricsEnabled()
  id: isQueryMetricsEnabled()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: isQueryMetricsEnabled()
  nameWithType: CosmosQueryRequestOptions.isQueryMetricsEnabled()
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.isQueryMetricsEnabled()
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.isQueryMetricsEnabled*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the option to enable populate query metrics
  syntax:
    content: public boolean isQueryMetricsEnabled()
    return:
      type: boolean
      description: whether to enable populate query metrics
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.isScanInQueryEnabled()
  id: isScanInQueryEnabled()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: isScanInQueryEnabled()
  nameWithType: CosmosQueryRequestOptions.isScanInQueryEnabled()
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.isScanInQueryEnabled()
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.isScanInQueryEnabled*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the option to allow scan on the queries which couldn't be served as indexing was opted out on the requested paths.
  syntax:
    content: public Boolean isScanInQueryEnabled()
    return:
      type: java.lang.Boolean
      description: the option of enable scan in query.
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setMaxBufferedItemCount(int)
  id: setMaxBufferedItemCount(int)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: setMaxBufferedItemCount(int maxBufferedItemCount)
  nameWithType: CosmosQueryRequestOptions.setMaxBufferedItemCount(int maxBufferedItemCount)
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setMaxBufferedItemCount(int maxBufferedItemCount)
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.setMaxBufferedItemCount*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the maximum number of items that can be buffered client side during parallel query execution.
  syntax:
    content: public CosmosQueryRequestOptions setMaxBufferedItemCount(int maxBufferedItemCount)
    parameters:
    - id: maxBufferedItemCount
      type: int
      description: maximum number of items.
    return:
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the CosmosQueryRequestOptions.
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setMaxDegreeOfParallelism(int)
  id: setMaxDegreeOfParallelism(int)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: setMaxDegreeOfParallelism(int maxDegreeOfParallelism)
  nameWithType: CosmosQueryRequestOptions.setMaxDegreeOfParallelism(int maxDegreeOfParallelism)
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setMaxDegreeOfParallelism(int maxDegreeOfParallelism)
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.setMaxDegreeOfParallelism*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the number of concurrent operations run client side during parallel query execution.
  syntax:
    content: public CosmosQueryRequestOptions setMaxDegreeOfParallelism(int maxDegreeOfParallelism)
    parameters:
    - id: maxDegreeOfParallelism
      type: int
      description: number of concurrent operations.
    return:
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the CosmosQueryRequestOptions.
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setPartitionKey(com.azure.cosmos.models.PartitionKey)
  id: setPartitionKey(com.azure.cosmos.models.PartitionKey)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: setPartitionKey(PartitionKey partitionkey)
  nameWithType: CosmosQueryRequestOptions.setPartitionKey(PartitionKey partitionkey)
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setPartitionKey(PartitionKey partitionkey)
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.setPartitionKey*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the partition key used to identify the current request's target partition.
  syntax:
    content: public CosmosQueryRequestOptions setPartitionKey(PartitionKey partitionkey)
    parameters:
    - id: partitionkey
      type: com.azure.cosmos.models.PartitionKey
      description: the partition key value.
    return:
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the CosmosQueryRequestOptions.
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setQueryMetricsEnabled(boolean)
  id: setQueryMetricsEnabled(boolean)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: setQueryMetricsEnabled(boolean queryMetricsEnabled)
  nameWithType: CosmosQueryRequestOptions.setQueryMetricsEnabled(boolean queryMetricsEnabled)
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setQueryMetricsEnabled(boolean queryMetricsEnabled)
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.setQueryMetricsEnabled*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the option to enable/disable getting metrics relating to query execution on item query requests
  syntax:
    content: public CosmosQueryRequestOptions setQueryMetricsEnabled(boolean queryMetricsEnabled)
    parameters:
    - id: queryMetricsEnabled
      type: boolean
      description: whether to enable or disable query metrics
    return:
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the CosmosQueryRequestOptions.
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setResponseContinuationTokenLimitInKb(int)
  id: setResponseContinuationTokenLimitInKb(int)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: setResponseContinuationTokenLimitInKb(int limitInKb)
  nameWithType: CosmosQueryRequestOptions.setResponseContinuationTokenLimitInKb(int limitInKb)
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setResponseContinuationTokenLimitInKb(int limitInKb)
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.setResponseContinuationTokenLimitInKb*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Sets the ResponseContinuationTokenLimitInKb request option for item query requests in the Azure Cosmos DB service.


    ResponseContinuationTokenLimitInKb is used to limit the length of continuation token in the query response. Valid values are >= 1.


    The continuation token contains both required and optional fields. The required fields are necessary for resuming the execution from where it was stooped. The optional fields may contain serialized index lookup work that was done but not yet utilized. This avoids redoing the work again in subsequent continuations and hence improve the query performance. Setting the maximum continuation size to 1KB, the Azure Cosmos DB service will only serialize required fields. Starting from 2KB, the Azure Cosmos DB service would serialize as much as it could fit till it reaches the maximum specified size.
  syntax:
    content: public CosmosQueryRequestOptions setResponseContinuationTokenLimitInKb(int limitInKb)
    parameters:
    - id: limitInKb
      type: int
      description: continuation token size limit.
    return:
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the CosmosQueryRequestOptions.
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setScanInQueryEnabled(java.lang.Boolean)
  id: setScanInQueryEnabled(java.lang.Boolean)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: setScanInQueryEnabled(Boolean scanInQueryEnabled)
  nameWithType: CosmosQueryRequestOptions.setScanInQueryEnabled(Boolean scanInQueryEnabled)
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setScanInQueryEnabled(Boolean scanInQueryEnabled)
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.setScanInQueryEnabled*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the option to allow scan on the queries which couldn't be served as indexing was opted out on the requested paths.
  syntax:
    content: public CosmosQueryRequestOptions setScanInQueryEnabled(Boolean scanInQueryEnabled)
    parameters:
    - id: scanInQueryEnabled
      type: java.lang.Boolean
      description: the option of enable scan in query.
    return:
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the CosmosQueryRequestOptions.
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setSessionToken(java.lang.String)
  id: setSessionToken(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosQueryRequestOptions
  langs:
  - java
  name: setSessionToken(String sessionToken)
  nameWithType: CosmosQueryRequestOptions.setSessionToken(String sessionToken)
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setSessionToken(String sessionToken)
  overload: com.azure.cosmos.models.CosmosQueryRequestOptions.setSessionToken*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the session token for use with session consistency.
  syntax:
    content: public CosmosQueryRequestOptions setSessionToken(String sessionToken)
    parameters:
    - id: sessionToken
      type: java.lang.String
      description: the session token.
    return:
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the CosmosQueryRequestOptions.
references:
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.CosmosQueryRequestOptions*
  name: CosmosQueryRequestOptions
  nameWithType: CosmosQueryRequestOptions.CosmosQueryRequestOptions
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.CosmosQueryRequestOptions
  package: com.azure.cosmos.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.getSessionToken*
  name: getSessionToken
  nameWithType: CosmosQueryRequestOptions.getSessionToken
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.getSessionToken
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setSessionToken*
  name: setSessionToken
  nameWithType: CosmosQueryRequestOptions.setSessionToken
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setSessionToken
  package: com.azure.cosmos.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.isScanInQueryEnabled*
  name: isScanInQueryEnabled
  nameWithType: CosmosQueryRequestOptions.isScanInQueryEnabled
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.isScanInQueryEnabled
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setScanInQueryEnabled*
  name: setScanInQueryEnabled
  nameWithType: CosmosQueryRequestOptions.setScanInQueryEnabled
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setScanInQueryEnabled
  package: com.azure.cosmos.models
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.getMaxDegreeOfParallelism*
  name: getMaxDegreeOfParallelism
  nameWithType: CosmosQueryRequestOptions.getMaxDegreeOfParallelism
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.getMaxDegreeOfParallelism
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setMaxDegreeOfParallelism*
  name: setMaxDegreeOfParallelism
  nameWithType: CosmosQueryRequestOptions.setMaxDegreeOfParallelism
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setMaxDegreeOfParallelism
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.getMaxBufferedItemCount*
  name: getMaxBufferedItemCount
  nameWithType: CosmosQueryRequestOptions.getMaxBufferedItemCount
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.getMaxBufferedItemCount
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setMaxBufferedItemCount*
  name: setMaxBufferedItemCount
  nameWithType: CosmosQueryRequestOptions.setMaxBufferedItemCount
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setMaxBufferedItemCount
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setResponseContinuationTokenLimitInKb*
  name: setResponseContinuationTokenLimitInKb
  nameWithType: CosmosQueryRequestOptions.setResponseContinuationTokenLimitInKb
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setResponseContinuationTokenLimitInKb
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.getResponseContinuationTokenLimitInKb*
  name: getResponseContinuationTokenLimitInKb
  nameWithType: CosmosQueryRequestOptions.getResponseContinuationTokenLimitInKb
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.getResponseContinuationTokenLimitInKb
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.PartitionKey
  name: PartitionKey
  nameWithType: PartitionKey
  fullName: com.azure.cosmos.models.PartitionKey
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.getPartitionKey*
  name: getPartitionKey
  nameWithType: CosmosQueryRequestOptions.getPartitionKey
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.getPartitionKey
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setPartitionKey*
  name: setPartitionKey
  nameWithType: CosmosQueryRequestOptions.setPartitionKey
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setPartitionKey
  package: com.azure.cosmos.models
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.isQueryMetricsEnabled*
  name: isQueryMetricsEnabled
  nameWithType: CosmosQueryRequestOptions.isQueryMetricsEnabled
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.isQueryMetricsEnabled
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions.setQueryMetricsEnabled*
  name: setQueryMetricsEnabled
  nameWithType: CosmosQueryRequestOptions.setQueryMetricsEnabled
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions.setQueryMetricsEnabled
  package: com.azure.cosmos.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
