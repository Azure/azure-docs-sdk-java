### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory
  id: FabricTransportActorRemotingClientFactory
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.client
  children:
  - microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings,ServiceRemotingCallbackClient,ServicePartitionResolver,List<ExceptionHandler>,String)
  - microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient)
  href: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.yml
  langs:
  - java
  name: FabricTransportActorRemotingClientFactory
  nameWithType: FabricTransportActorRemotingClientFactory
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/client/FabricTransportActorRemotingClientFactory.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/client/FabricTransportActorRemotingClientFactory.java
    startLine: 20
  package: microsoft.servicefabric.actors.remoting.fabrictransport.client
  summary: "<p>An <xref uid=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory\"></xref> that uses Fabric TCP transport to create <xref uid=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClient\"></xref> that communicate with actors over interfaces that are remoted via <xref uid=\"microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener\"></xref></p>"
  syntax:
    content: public class FabricTransportActorRemotingClientFactory extends FabricTransportServiceRemotingClientFactory
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.services.communication.client.CommunicationClientFactory
  - microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  - microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
  inheritedMembers:
  - microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.FabricTransportServiceRemotingClientFactory(FabricTransportRemotingSettings,ServiceRemotingCallbackClient,ServicePartitionResolver,List<ExceptionHandler>,String)
  - microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
  - microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)
  - microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.reportOperationExceptionAsync(ServiceRemotingClient,ExceptionInformation,OperationRetrySettings)
  - microsoft.servicefabric.services.communication.client.CommunicationClientFactory.reportOperationExceptionAsync(TCommunicationClient,ExceptionInformation,OperationRetrySettings)
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings,ServiceRemotingCallbackClient,ServicePartitionResolver,List<ExceptionHandler>,String)
  id: FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings,ServiceRemotingCallbackClient,ServicePartitionResolver,List<ExceptionHandler>,String)
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory
  href: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.yml
  langs:
  - java
  name: FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)
  nameWithType: FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)
  overload: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/client/FabricTransportActorRemotingClientFactory.java
    startLine: 50
  package: microsoft.servicefabric.actors.remoting.fabrictransport.client
  summary: "<p>Constructs a fabric transport based actor remoting client factory.</p>\r\n<p></p>"
  syntax:
    content: public FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)
    parameters:
    - id: fabricTransportSettings
      type: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings
      description: <p>The settings for the fabric transport. If the settings are not provided or null, default settings with no security. </p>
    - id: callbackClient
      type: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
      description: <p>The callback client that receives the callbacks from the service. </p>
    - id: servicePartitionResolver
      type: microsoft.servicefabric.services.client.ServicePartitionResolver
      description: <p>Service partition resolver to resolve the service endpoints. If not specified, a default service partition resolver returned by <xref uid="microsoft.servicefabric.services.client.FabricServicePartitionResolver.getDefault()" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.client.FabricServicePartitionResolver#getDefault()"></xref> is used. </p>
    - id: exceptionHandlers
      type: 5618da2dmicrosoft.servicefabric.services.communication.client.ExceptionHandlera08ddfce
      description: <p>Exception handlers to handle the exceptions encountered in communicating with the actor. </p>
    - id: traceId
      type: "26831127"
      description: <p>Id to use in diagnostics traces from this component. </p>
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient)
  id: FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient)
  parent: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory
  href: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.yml
  langs:
  - java
  name: FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  nameWithType: FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  overload: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/remoting/fabrictransport/client/FabricTransportActorRemotingClientFactory.java
    startLine: 27
  package: microsoft.servicefabric.actors.remoting.fabrictransport.client
  summary: "<p>Constructs a fabric transport based actor remoting client factory.</p>\r\n<p></p>"
  syntax:
    content: public FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
    parameters:
    - id: callbackClient
      type: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
      description: <p>The callback client that receives the callbacks from the service. </p>
references:
- uid: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory*
  name: FabricTransportActorRemotingClientFactory
  nameWithType: FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory
  fullName: microsoft.servicefabric.actors.remoting.fabrictransport.client.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory
  package: microsoft.servicefabric.actors.remoting.fabrictransport.client
- uid: 5618da2dmicrosoft.servicefabric.services.communication.client.ExceptionHandlera08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: microsoft.servicefabric.services.communication.client.ExceptionHandler
    name: ExceptionHandler
    fullName: microsoft.servicefabric.services.communication.client.ExceptionHandler
    href: microsoft.servicefabric.services.communication.client.ExceptionHandler.yml
  - name: '>'
    fullName: '>'
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.FabricTransportServiceRemotingClientFactory(FabricTransportRemotingSettings,ServiceRemotingCallbackClient,ServicePartitionResolver,List<ExceptionHandler>,String)
  parent: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
  href: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.yml
  name: FabricTransportServiceRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)
  nameWithType: FabricTransportServiceRemotingClientFactory.FabricTransportServiceRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.FabricTransportServiceRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)
  type: Constructor
  summary: "<p>Constructs a fabric transport based service remoting client factory.</p>\r\n<p>\r\n  <b>Remarks:</b>This factory uses an internal fabric transport exception handler to handle exceptions at the fabric TCP transport level and a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceRemotingExceptionHandler\"></xref>, in addition to the exception handlers supplied to the constructor. </p>"
  syntax:
    content: public FabricTransportServiceRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)
    parameters:
    - id: fabricTransportSettings
      type: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings
      description: <p>The settings for the fabric transport. If the settings are not provided or null, default settings with no security. </p>
    - id: callbackClient
      type: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
      description: <p>The callback client that receives the callbacks from the service. </p>
    - id: servicePartitionResolver
      type: microsoft.servicefabric.services.client.ServicePartitionResolver
      description: <p>Service partition resolver to resolve the service endpoints. If not specified, a default service partition resolver returned by <xref uid="microsoft.servicefabric.services.client.FabricServicePartitionResolver.getDefault()" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.client.FabricServicePartitionResolver#getDefault()"></xref> is used. </p>
    - id: exceptionHandlers
      type: 5618da2dmicrosoft.servicefabric.services.communication.client.ExceptionHandlera08ddfce
      description: <p>Exception handlers to handle the exceptions encountered in communicating with the service. </p>
    - id: traceId
      type: "26831127"
      description: <p>Id to use in diagnostics traces from this component. </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
  parent: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
  href: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.yml
  name: getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: FabricTransportServiceRemotingClientFactory.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  type: Method
  summary: "<p>Resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<ServiceRemotingClient> getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
    parameters:
    - id: serviceUri
      type: "62304784"
      description: <p>Uri of the service to resolve </p>
    - id: partitionKey
      type: microsoft.servicefabric.services.client.ServicePartitionKey
      description: <p>Key that identifies the partition to resolve </p>
    - id: targetReplicaSelector
      type: microsoft.servicefabric.services.communication.client.TargetReplicaSelector
      description: <p>Specifies which replica in the partition identified by the partition key, the client should connect to </p>
    - id: listenerName
      type: "26831127"
      description: <p>Specifies which listener in the endpoint of the chosen replica, to which the client should connect to </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client.OperationRetrySettings
      description: <p>Specifies the retry policy that should be used for exceptions that occur when creating the client.</p>
    return:
      type: 9cdf14d0microsoft.servicefabric.services.remoting.client.ServiceRemotingClienta08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is the CommunicationClient( <xref uid="microsoft.servicefabric.services.communication.client.CommunicationClient" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.communication.client.CommunicationClient"></xref>) object. </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)
  parent: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
  href: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.yml
  name: getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  type: Method
  summary: "<p>Re-resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<ServiceRemotingClient> getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
    parameters:
    - id: previousRsp
      type: system.fabric.ResolvedServicePartition
      description: <p>Previous ResolvedServicePartition value </p>
    - id: targetReplicaSelector
      type: microsoft.servicefabric.services.communication.client.TargetReplicaSelector
      description: <p>Specifies which replica in the partition identified by the partition key, the client should connect to </p>
    - id: listenerName
      type: "26831127"
      description: <p>Specifies which listener in the endpoint of the chosen replica, to which the client should connect to </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client.OperationRetrySettings
      description: <p>Specifies the retry policy that should be used for exceptions that occur when creating the client.</p>
    return:
      type: 9cdf14d0microsoft.servicefabric.services.remoting.client.ServiceRemotingClienta08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is the CommunicationClient( <xref uid="microsoft.servicefabric.services.communication.client.CommunicationClient" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.communication.client.CommunicationClient"></xref>) object. </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.reportOperationExceptionAsync(ServiceRemotingClient,ExceptionInformation,OperationRetrySettings)
  parent: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
  href: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.yml
  name: reportOperationExceptionAsync(ServiceRemotingClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  nameWithType: FabricTransportServiceRemotingClientFactory.reportOperationExceptionAsync(ServiceRemotingClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.reportOperationExceptionAsync(ServiceRemotingClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  type: Method
  summary: "<p>Handles the exceptions that occur in the CommunicationClient when sending a message to the Service</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<OperationRetryControl> reportOperationExceptionAsync(ServiceRemotingClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
    parameters:
    - id: client
      type: microsoft.servicefabric.services.remoting.client.ServiceRemotingClient
      description: <p>Communication client </p>
    - id: exceptionInformation
      type: microsoft.servicefabric.services.communication.client.ExceptionInformation
      description: <p>Information about exception that happened while communicating with the service. </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client.OperationRetrySettings
      description: <p>Specifies the retry policy that should be used for handling the reported exception.</p>
    return:
      type: 9cdf14d0microsoft.servicefabric.services.communication.client.OperationRetryControla08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="OperationRetryControl"></xref> object that provides information on retry policy for this exception. </p>
- uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.reportOperationExceptionAsync(TCommunicationClient,ExceptionInformation,OperationRetrySettings)
  parent: microsoft.servicefabric.services.communication.client.CommunicationClientFactory
  href: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.yml
  name: reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  nameWithType: CommunicationClientFactory<TCommunicationClient>.reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  type: Method
  summary: "<p>Handles the exceptions that occur in the CommunicationClient when sending a message to the Service</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<OperationRetryControl> reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
    parameters:
    - id: client
      type: 4500d4bf
      description: <p>Communication client </p>
    - id: exceptionInformation
      type: microsoft.servicefabric.services.communication.client.ExceptionInformation
      description: <p>Information about exception that happened while communicating with the service. </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client.OperationRetrySettings
      description: <p>Specifies the retry policy that should be used for handling the reported exception. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.services.communication.client.OperationRetryControla08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is a <xref uid="microsoft.servicefabric.services.communication.client.OperationRetryControl" data-throw-if-not-resolved="false" data-raw-source="OperationRetryControl"></xref> object that provides information on retry policy for this exception. </p>
- uid: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
  parent: microsoft.servicefabric.services.remoting.fabrictransport.client
  href: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.yml
  name: FabricTransportServiceRemotingClientFactory
  nameWithType: FabricTransportServiceRemotingClientFactory
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
  type: Class
  summary: "<p>An <xref uid=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory\"></xref> that uses Fabric TCP transport to create <xref uid=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.client.ServiceRemotingClient\"></xref> that communicate with stateless and stateful services over interfaces that are remoted via <xref uid=\"microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener\"></xref>. </p>"
  syntax:
    content: public class FabricTransportServiceRemotingClientFactory
- uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
  parent: microsoft.servicefabric.services.remoting.runtime
  href: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient.yml
  name: ServiceRemotingCallbackClient
  nameWithType: ServiceRemotingCallbackClient
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient
  type: Interface
  summary: "<p>Defines the interface that must be implemented for providing callback mechanism from the remoting listener to the client. </p>"
  syntax:
    content: public interface ServiceRemotingCallbackClient
- uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings
  parent: microsoft.servicefabric.services.remoting.fabrictransport
  href: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.yml
  name: FabricTransportRemotingSettings
  nameWithType: FabricTransportRemotingSettings
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings
  type: Class
  summary: "<p>Settings that configures the FabricTransport communication. </p>"
  syntax:
    content: public class FabricTransportRemotingSettings
- uid: microsoft.servicefabric.services.client.ServicePartitionResolver
  parent: microsoft.servicefabric.services.client
  href: microsoft.servicefabric.services.client.ServicePartitionResolver.yml
  name: ServicePartitionResolver
  nameWithType: ServicePartitionResolver
  fullName: microsoft.servicefabric.services.client.ServicePartitionResolver
  type: Interface
  summary: "<p>Implements the class that helps in determining the endpoint of a service. </p>"
  syntax:
    content: public interface ServicePartitionResolver
- uid: microsoft.servicefabric.services.communication.client.ExceptionHandler
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client.ExceptionHandler.yml
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: microsoft.servicefabric.services.communication.client.ExceptionHandler
  type: Interface
  summary: "<p>Defines the interface for handling the exceptions encountered in communicating with service fabric services. </p>"
  syntax:
    content: public interface ExceptionHandler
- uid: microsoft.servicefabric.services.client.FabricServicePartitionResolver.getDefault()
  parent: microsoft.servicefabric.services.client.FabricServicePartitionResolver
  href: microsoft.servicefabric.services.client.FabricServicePartitionResolver.yml
  name: getDefault()
  nameWithType: FabricServicePartitionResolver.getDefault()
  fullName: microsoft.servicefabric.services.client.FabricServicePartitionResolver.getDefault()
  type: Method
  summary: "<p>Gets the default ServicePartitionResolver</p>\r\n<p></p>"
  syntax:
    content: public static ServicePartitionResolver getDefault()
    return:
      type: microsoft.servicefabric.services.client.ServicePartitionResolver
      description: <p>Default <xref uid="microsoft.servicefabric.services.client.ServicePartitionResolver" data-throw-if-not-resolved="false" data-raw-source="ServicePartitionResolver"></xref></p>
- uid: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory.yml
  name: ServiceRemotingClientFactory
  nameWithType: ServiceRemotingClientFactory
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  type: Interface
  summary: "<p>Defines the interface that must be implemented for providing the remoting communication client factory. </p>"
  syntax:
    content: public interface ServiceRemotingClientFactory
- uid: microsoft.servicefabric.services.remoting.client.ServiceRemotingClient
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client.ServiceRemotingClient.yml
  name: ServiceRemotingClient
  nameWithType: ServiceRemotingClient
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingClient
  type: Interface
  summary: "<p>Defines the interface that must be implemented to provide a client for Service Remoting communication. </p>"
  syntax:
    content: public interface ServiceRemotingClient
- uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener
  parent: microsoft.servicefabric.services.remoting.fabrictransport.runtime
  href: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.yml
  name: FabricTransportServiceRemotingListener
  nameWithType: FabricTransportServiceRemotingListener
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener
  type: Class
  summary: "<p>An <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceRemotingListener\"></xref> that uses fabric TCP transport to provide interface remoting for stateless and stateful services. </p>"
  syntax:
    content: public class FabricTransportServiceRemotingListener
