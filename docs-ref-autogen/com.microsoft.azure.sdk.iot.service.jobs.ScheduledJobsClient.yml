### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.ScheduledJobsClient(String connectionString)
  name: ScheduledJobsClient(String connectionString)
  nameWithType: ScheduledJobsClient.ScheduledJobsClient(String connectionString)
  parameters:
  - description: <p>The iot hub connection string </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor to create instance from connection string</p>

    <p></p>
  syntax: public ScheduledJobsClient(String connectionString)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.ScheduledJobsClient(String)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.ScheduledJobsClient(String hostName, AzureSasCredential azureSasCredential)
  name: ScheduledJobsClient(String hostName, AzureSasCredential azureSasCredential)
  nameWithType: ScheduledJobsClient.ScheduledJobsClient(String hostName, AzureSasCredential azureSasCredential)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SAS token provider that will be used for authentication. </p>
    name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new ScheduledJobsClient instance.</p>

    <p></p>
  syntax: public ScheduledJobsClient(String hostName, AzureSasCredential azureSasCredential)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.ScheduledJobsClient(String,AzureSasCredential)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.ScheduledJobsClient(String hostName, AzureSasCredential azureSasCredential, ScheduledJobsClientOptions clientOptions)
  name: ScheduledJobsClient(String hostName, AzureSasCredential azureSasCredential, ScheduledJobsClientOptions clientOptions)
  nameWithType: ScheduledJobsClient.ScheduledJobsClient(String hostName, AzureSasCredential azureSasCredential, ScheduledJobsClientOptions clientOptions)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SAS token provider that will be used for authentication. </p>
    name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The connection clientOptions to use when connecting to the service. </p>
    name: clientOptions
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClientOptions?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClientOptions&text=ScheduledJobsClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new ScheduledJobsClient instance.</p>

    <p></p>
  syntax: public ScheduledJobsClient(String hostName, AzureSasCredential azureSasCredential, ScheduledJobsClientOptions clientOptions)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.ScheduledJobsClient(String,AzureSasCredential,ScheduledJobsClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.ScheduledJobsClient(String connectionString, ScheduledJobsClientOptions clientOptions)
  name: ScheduledJobsClient(String connectionString, ScheduledJobsClientOptions clientOptions)
  nameWithType: ScheduledJobsClient.ScheduledJobsClient(String connectionString, ScheduledJobsClientOptions clientOptions)
  parameters:
  - description: <p>The iot hub connection string </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The connection clientOptions to use when connecting to the service. </p>
    name: clientOptions
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClientOptions?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClientOptions&text=ScheduledJobsClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor to create instance from connection string</p>

    <p></p>
  syntax: public ScheduledJobsClient(String connectionString, ScheduledJobsClientOptions clientOptions)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.ScheduledJobsClient(String,ScheduledJobsClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.ScheduledJobsClient(String hostName, TokenCredential credential)
  name: ScheduledJobsClient(String hostName, TokenCredential credential)
  nameWithType: ScheduledJobsClient.ScheduledJobsClient(String hostName, TokenCredential credential)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> that will provide authentication tokens to this library when they are needed. The provided tokens must be Json Web Tokens. </p>
    name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new ScheduledJobsClient instance.</p>

    <p></p>
  syntax: public ScheduledJobsClient(String hostName, TokenCredential credential)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.ScheduledJobsClient(String,TokenCredential)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.ScheduledJobsClient(String hostName, TokenCredential credential, ScheduledJobsClientOptions clientOptions)
  name: ScheduledJobsClient(String hostName, TokenCredential credential, ScheduledJobsClientOptions clientOptions)
  nameWithType: ScheduledJobsClient.ScheduledJobsClient(String hostName, TokenCredential credential, ScheduledJobsClientOptions clientOptions)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> that will provide authentication tokens to this library when they are needed. The provided tokens must be Json Web Tokens. </p>
    name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The connection clientOptions to use when connecting to the service. </p>
    name: clientOptions
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClientOptions?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClientOptions&text=ScheduledJobsClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new ScheduledJobsClient instance.</p>

    <p></p>
  syntax: public ScheduledJobsClient(String hostName, TokenCredential credential, ScheduledJobsClientOptions clientOptions)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.ScheduledJobsClient(String,TokenCredential,ScheduledJobsClientOptions)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.cancel(String jobId)
  name: cancel(String jobId)
  nameWithType: ScheduledJobsClient.cancel(String jobId)
  parameters:
  - description: <p>Unique ScheduledJob Id for this job </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if the function cannot create a URL for the job, or the IO failed on request </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>if the http request failed </p>
  returns:
    description: <p>the cancelled job </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJob?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJob&text=ScheduledJob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Cancel a current jod on the IoTHub</p>

    <p></p>
  syntax: public ScheduledJob cancel(String jobId)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.cancel(String)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.get(String jobId)
  name: get(String jobId)
  nameWithType: ScheduledJobsClient.get(String jobId)
  parameters:
  - description: <p>Unique ScheduledJob Id for this job </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if the function cannot create a URL for the job, or the IO failed on request </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>if the http request failed </p>
  returns:
    description: <p>the retrieved job </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJob?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJob&text=ScheduledJob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the current job on the iotHub.</p>

    <p></p>
  syntax: public ScheduledJob get(String jobId)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.get(String)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.query(ScheduledJobType jobType, ScheduledJobStatus jobStatus)
  name: query(ScheduledJobType jobType, ScheduledJobStatus jobStatus)
  nameWithType: ScheduledJobsClient.query(ScheduledJobType jobType, ScheduledJobStatus jobStatus)
  parameters:
  - description: <p>The type of the job (methods or twin). </p>
    name: jobType
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobType?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobType&text=ScheduledJobType" data-throw-if-not-resolved="False"/>
  - description: <p>The status of the job ("completed", for example) </p>
    name: jobStatus
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobStatus?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobStatus&text=ScheduledJobStatus" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as throttling. </p>
  returns:
    description: <p>The pageable set of Jobs that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.JobQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.JobQueryResponse&text=JobQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query from your IoT Hub's set of scheduled jobs by job type and job status.</p>

    <p></p>
  syntax: public JobQueryResponse query(ScheduledJobType jobType, ScheduledJobStatus jobStatus)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.query(ScheduledJobType,ScheduledJobStatus)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.query(ScheduledJobType jobType, ScheduledJobStatus jobStatus, QueryPageOptions options)
  name: query(ScheduledJobType jobType, ScheduledJobStatus jobStatus, QueryPageOptions options)
  nameWithType: ScheduledJobsClient.query(ScheduledJobType jobType, ScheduledJobStatus jobStatus, QueryPageOptions options)
  parameters:
  - description: <p>The type of the job (methods or twin). </p>
    name: jobType
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobType?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobType&text=ScheduledJobType" data-throw-if-not-resolved="False"/>
  - description: <p>The status of the job ("completed", for example) </p>
    name: jobStatus
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobStatus?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobStatus&text=ScheduledJobStatus" data-throw-if-not-resolved="False"/>
  - description: <p>The optional parameters used to decide how the query's results are returned. May not be null. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.QueryPageOptions?alt=com.microsoft.azure.sdk.iot.service.query.QueryPageOptions&text=QueryPageOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as throttling. </p>
  returns:
    description: <p>The pageable set of Jobs that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.JobQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.JobQueryResponse&text=JobQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query from your IoT Hub's set of scheduled jobs by job type and job status.</p>

    <p></p>
  syntax: public JobQueryResponse query(ScheduledJobType jobType, ScheduledJobStatus jobStatus, QueryPageOptions options)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.query(ScheduledJobType,ScheduledJobStatus,QueryPageOptions)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.query(String query)
  name: query(String query)
  nameWithType: ScheduledJobsClient.query(String query)
  parameters:
  - description: <p>The IoT Hub query for selecting which jobs to get. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as an incorrectly formatted query. </p>
  returns:
    description: <p>The pageable set of Jobs that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.JobQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.JobQueryResponse&text=JobQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query from your IoT Hub's set of scheduled jobs.</p>

    <p></p>
  syntax: public JobQueryResponse query(String query)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.query(String)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.query(String query, QueryPageOptions options)
  name: query(String query, QueryPageOptions options)
  nameWithType: ScheduledJobsClient.query(String query, QueryPageOptions options)
  parameters:
  - description: <p>The IoT Hub query for selecting which jobs to get. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The optional parameters used to decide how the query's results are returned. May not be null. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.QueryPageOptions?alt=com.microsoft.azure.sdk.iot.service.query.QueryPageOptions&text=QueryPageOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as an incorrectly formatted query. </p>
  returns:
    description: <p>The pageable set of Jobs that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.JobQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.JobQueryResponse&text=JobQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query from your IoT Hub's set of scheduled jobs.</p>

    <p></p>
  syntax: public JobQueryResponse query(String query, QueryPageOptions options)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.query(String,QueryPageOptions)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.scheduleDirectMethod(String jobId, String queryCondition, String methodName, Date startTimeUtc)
  name: scheduleDirectMethod(String jobId, String queryCondition, String methodName, Date startTimeUtc)
  nameWithType: ScheduledJobsClient.scheduleDirectMethod(String jobId, String queryCondition, String methodName, Date startTimeUtc)
  parameters:
  - description: <p>Unique ScheduledJob Id for this job </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>Query condition to evaluate which devices to run the job on. It can be<code>null 

          </code> or empty </p>
    name: queryCondition
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Method name to be invoked </p>
    name: methodName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Date time in Utc to start the job </p>
    name: startTimeUtc
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if the function cannot create a URL for the job, or the IO failed on request </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>if the http request failed </p>
  returns:
    description: <p>a jobResult object </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJob?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJob&text=ScheduledJob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new ScheduledJob to invoke method on one or multiple devices</p>

    <p></p>
  syntax: public ScheduledJob scheduleDirectMethod(String jobId, String queryCondition, String methodName, Date startTimeUtc)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.scheduleDirectMethod(String,String,String,Date)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.scheduleDirectMethod(String jobId, String queryCondition, String methodName, Date startTimeUtc, DirectMethodsJobOptions options)
  name: scheduleDirectMethod(String jobId, String queryCondition, String methodName, Date startTimeUtc, DirectMethodsJobOptions options)
  nameWithType: ScheduledJobsClient.scheduleDirectMethod(String jobId, String queryCondition, String methodName, Date startTimeUtc, DirectMethodsJobOptions options)
  parameters:
  - description: <p>Unique ScheduledJob Id for this job </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>Query condition to evaluate which devices to run the job on. It can be<code>null 

          </code> or empty </p>
    name: queryCondition
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Method name to be invoked </p>
    name: methodName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Date time in Utc to start the job </p>
    name: startTimeUtc
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  - description: <p>the optional parameters for this request. May not be null. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.DirectMethodsJobOptions?alt=com.microsoft.azure.sdk.iot.service.jobs.DirectMethodsJobOptions&text=DirectMethodsJobOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if the function cannot create a URL for the job, or the IO failed on request </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>if the http request failed </p>
  returns:
    description: <p>a jobResult object </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJob?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJob&text=ScheduledJob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new ScheduledJob to invoke method on one or multiple devices</p>

    <p></p>
  syntax: public ScheduledJob scheduleDirectMethod(String jobId, String queryCondition, String methodName, Date startTimeUtc, DirectMethodsJobOptions options)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.scheduleDirectMethod(String,String,String,Date,DirectMethodsJobOptions)
- fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.scheduleUpdateTwin(String jobId, String queryCondition, Twin updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)
  name: scheduleUpdateTwin(String jobId, String queryCondition, Twin updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)
  nameWithType: ScheduledJobsClient.scheduleUpdateTwin(String jobId, String queryCondition, Twin updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)
  parameters:
  - description: <p>Unique ScheduledJob Id for this job </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>Query condition to evaluate which devices to run the job on. It can be<code>null 

          </code> or empty </p>
    name: queryCondition
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Twin object to use for the update </p>
    name: updateTwin
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  - description: <p>Date time in Utc to start the job </p>
    name: startTimeUtc
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  - description: <p>Max execution time in seconds, i.e., ttl duration the job can run </p>
    name: maxExecutionTimeInSeconds
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if the function cannot create a URL for the job </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>if the http request failed </p>
  returns:
    description: <p>a jobResult object </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJob?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJob&text=ScheduledJob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new ScheduledJob to update twin tags and desired properties on one or multiple devices</p>

    <p></p>
  syntax: public ScheduledJob scheduleUpdateTwin(String jobId, String queryCondition, Twin updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)
  uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient.scheduleUpdateTwin(String,String,Twin,Date,long)
nameWithType: ScheduledJobsClient
syntax: public class ScheduledJobsClient
type: class
uid: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient
fullName: com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobsClient
name: ScheduledJobsClient
package: com.microsoft.azure.sdk.iot.service.jobs
summary: <p>Use the ScheduledJobsClient to schedule and cancel jobs for a group of devices using IoT hub. </p>
metadata: {}
