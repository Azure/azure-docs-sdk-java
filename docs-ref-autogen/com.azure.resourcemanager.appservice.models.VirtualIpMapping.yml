### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping"
fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping"
name: "VirtualIpMapping"
nameWithType: "VirtualIpMapping"
summary: "Virtual IP mapping."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VirtualIpMapping"
constructors:
- uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.VirtualIpMapping()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.VirtualIpMapping()"
  name: "VirtualIpMapping()"
  nameWithType: "VirtualIpMapping.VirtualIpMapping()"
  syntax: "public VirtualIpMapping()"
methods:
- uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.inUse()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.inUse()"
  name: "inUse()"
  nameWithType: "VirtualIpMapping.inUse()"
  summary: "Get the inUse property: Is virtual IP mapping in use."
  syntax: "public Boolean inUse()"
  returns:
    description: "the inUse value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.internalHttpPort()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.internalHttpPort()"
  name: "internalHttpPort()"
  nameWithType: "VirtualIpMapping.internalHttpPort()"
  summary: "Get the internalHttpPort property: Internal HTTP port."
  syntax: "public Integer internalHttpPort()"
  returns:
    description: "the internalHttpPort value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.internalHttpsPort()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.internalHttpsPort()"
  name: "internalHttpsPort()"
  nameWithType: "VirtualIpMapping.internalHttpsPort()"
  summary: "Get the internalHttpsPort property: Internal HTTPS port."
  syntax: "public Integer internalHttpsPort()"
  returns:
    description: "the internalHttpsPort value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.serviceName()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.serviceName()"
  name: "serviceName()"
  nameWithType: "VirtualIpMapping.serviceName()"
  summary: "Get the serviceName property: name of the service that virtual IP is assigned to."
  syntax: "public String serviceName()"
  returns:
    description: "the serviceName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.validate()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.validate()"
  name: "validate()"
  nameWithType: "VirtualIpMapping.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.virtualIp()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.virtualIp()"
  name: "virtualIp()"
  nameWithType: "VirtualIpMapping.virtualIp()"
  summary: "Get the virtualIp property: Virtual IP address."
  syntax: "public String virtualIp()"
  returns:
    description: "the virtualIp value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.withInUse(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.withInUse(Boolean inUse)"
  name: "withInUse(Boolean inUse)"
  nameWithType: "VirtualIpMapping.withInUse(Boolean inUse)"
  summary: "Set the inUse property: Is virtual IP mapping in use."
  parameters:
  - description: "the inUse value to set."
    name: "inUse"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualIpMapping withInUse(Boolean inUse)"
  returns:
    description: "the VirtualIpMapping object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VirtualIpMapping?alt=com.azure.resourcemanager.appservice.models.VirtualIpMapping&text=VirtualIpMapping\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.withInternalHttpPort(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.withInternalHttpPort(Integer internalHttpPort)"
  name: "withInternalHttpPort(Integer internalHttpPort)"
  nameWithType: "VirtualIpMapping.withInternalHttpPort(Integer internalHttpPort)"
  summary: "Set the internalHttpPort property: Internal HTTP port."
  parameters:
  - description: "the internalHttpPort value to set."
    name: "internalHttpPort"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualIpMapping withInternalHttpPort(Integer internalHttpPort)"
  returns:
    description: "the VirtualIpMapping object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VirtualIpMapping?alt=com.azure.resourcemanager.appservice.models.VirtualIpMapping&text=VirtualIpMapping\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.withInternalHttpsPort(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.withInternalHttpsPort(Integer internalHttpsPort)"
  name: "withInternalHttpsPort(Integer internalHttpsPort)"
  nameWithType: "VirtualIpMapping.withInternalHttpsPort(Integer internalHttpsPort)"
  summary: "Set the internalHttpsPort property: Internal HTTPS port."
  parameters:
  - description: "the internalHttpsPort value to set."
    name: "internalHttpsPort"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualIpMapping withInternalHttpsPort(Integer internalHttpsPort)"
  returns:
    description: "the VirtualIpMapping object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VirtualIpMapping?alt=com.azure.resourcemanager.appservice.models.VirtualIpMapping&text=VirtualIpMapping\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.withServiceName(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.withServiceName(String serviceName)"
  name: "withServiceName(String serviceName)"
  nameWithType: "VirtualIpMapping.withServiceName(String serviceName)"
  summary: "Set the serviceName property: name of the service that virtual IP is assigned to."
  parameters:
  - description: "the serviceName value to set."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualIpMapping withServiceName(String serviceName)"
  returns:
    description: "the VirtualIpMapping object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VirtualIpMapping?alt=com.azure.resourcemanager.appservice.models.VirtualIpMapping&text=VirtualIpMapping\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.withVirtualIp(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualIpMapping.withVirtualIp(String virtualIp)"
  name: "withVirtualIp(String virtualIp)"
  nameWithType: "VirtualIpMapping.withVirtualIp(String virtualIp)"
  summary: "Set the virtualIp property: Virtual IP address."
  parameters:
  - description: "the virtualIp value to set."
    name: "virtualIp"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualIpMapping withVirtualIp(String virtualIp)"
  returns:
    description: "the VirtualIpMapping object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VirtualIpMapping?alt=com.azure.resourcemanager.appservice.models.VirtualIpMapping&text=VirtualIpMapping\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.appservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.14.0
