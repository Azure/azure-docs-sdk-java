### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  id: AmqpSend
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  children:
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.AmqpSend(String,String,String,IotHubServiceClientProtocol)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.AmqpSend(String,String,String,IotHubServiceClientProtocol,ProxyOptions)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.amqpSendHandler
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.close()
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.hostName
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.iotHubServiceClientProtocol
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.open()
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.sasToken
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.send(String,String,Message)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.userName
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.yml
  langs:
  - java
  name: AmqpSend
  nameWithType: AmqpSend
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
    startLine: 23
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Instance of the QPID-Proton-J BaseHandler class overriding the events what are needed to handle high level open, close and send methods. Initialize and use AmqpsSendHandler class for low level ampqs operations. </p>"
  syntax:
    content: public class AmqpSend
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.AmqpSend(String,String,String,IotHubServiceClientProtocol)
  id: AmqpSend(String,String,String,IotHubServiceClientProtocol)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.yml
  langs:
  - java
  name: AmqpSend(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: AmqpSend.AmqpSend(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.AmqpSend(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.AmqpSend*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
    startLine: 39
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Constructor to set up connection parameters </p>"
  syntax:
    content: public AmqpSend(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
    parameters:
    - id: hostName
      type: "26831127"
      description: '<p>The address string of the service (example: AAA.BBB.CCC) </p>'
    - id: userName
      type: "26831127"
      description: '<p>The username string to use SASL authentication (example: <a href="mailto:user@sas.service">user@sas.service</a>) </p>'
    - id: sasToken
      type: "26831127"
      description: <p>The SAS token string </p>
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: <p>protocol to use </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.AmqpSend(String,String,String,IotHubServiceClientProtocol,ProxyOptions)
  id: AmqpSend(String,String,String,IotHubServiceClientProtocol,ProxyOptions)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.yml
  langs:
  - java
  name: AmqpSend(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
  nameWithType: AmqpSend.AmqpSend(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.AmqpSend(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.AmqpSend*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
    startLine: 52
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Constructor to set up connection parameters </p>"
  syntax:
    content: public AmqpSend(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
    parameters:
    - id: hostName
      type: "26831127"
      description: '<p>The address string of the service (example: AAA.BBB.CCC) </p>'
    - id: userName
      type: "26831127"
      description: '<p>The username string to use SASL authentication (example: <a href="mailto:user@sas.service">user@sas.service</a>) </p>'
    - id: sasToken
      type: "26831127"
      description: <p>The SAS token string </p>
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: <p>protocol to use </p>
    - id: proxyOptions
      type: com.microsoft.azure.sdk.iot.service.ProxyOptions
      description: <p>the proxy options to tunnel through, if a proxy should be used. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.amqpSendHandler
  id: amqpSendHandler
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.yml
  langs:
  - java
  name: amqpSendHandler
  nameWithType: AmqpSend.amqpSendHandler
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.amqpSendHandler
  type: Field
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
    startLine: 28
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  syntax:
    content: protected AmqpSendHandler amqpSendHandler
    return:
      type: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.yml
  langs:
  - java
  name: close()
  nameWithType: AmqpSend.close()
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.close()
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.close*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
    startLine: 91
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Invalidate AmqpsSendHandler member variable </p>"
  syntax:
    content: public void close()
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.hostName
  id: hostName
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.yml
  langs:
  - java
  name: hostName
  nameWithType: AmqpSend.hostName
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.hostName
  type: Field
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
    startLine: 25
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  syntax:
    content: protected final String hostName
    return:
      type: 3d93591e
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.iotHubServiceClientProtocol
  id: iotHubServiceClientProtocol
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.yml
  langs:
  - java
  name: iotHubServiceClientProtocol
  nameWithType: AmqpSend.iotHubServiceClientProtocol
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.iotHubServiceClientProtocol
  type: Field
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
    startLine: 29
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  syntax:
    content: protected IotHubServiceClientProtocol iotHubServiceClientProtocol
    return:
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.yml
  langs:
  - java
  name: open()
  nameWithType: AmqpSend.open()
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.open()
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.open*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
    startLine: 82
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Create AmqpsSendHandler and store it in a member variable </p>"
  syntax:
    content: public void open()
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.sasToken
  id: sasToken
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.yml
  langs:
  - java
  name: sasToken
  nameWithType: AmqpSend.sasToken
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.sasToken
  type: Field
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
    startLine: 27
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  syntax:
    content: protected final String sasToken
    return:
      type: 3d93591e
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.send(String,String,Message)
  id: send(String,String,Message)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.yml
  langs:
  - java
  name: send(String deviceId, String moduleId, Message message)
  nameWithType: AmqpSend.send(String deviceId, String moduleId, Message message)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.send(String deviceId, String moduleId, Message message)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.send*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
    startLine: 107
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: "<p>Create binary message Initialize and start Proton reactor Send the created message </p>"
  syntax:
    content: public void send(String deviceId, String moduleId, Message message)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The device name string </p>
    - id: moduleId
      type: "26831127"
      description: <p>The module name string </p>
    - id: message
      type: com.microsoft.azure.sdk.iot.service.Message
      description: <p>The message to be sent </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the AmqpSend object is not initialized </p>
  - type: 0d494ee6
    description: <p>If IotHub rejects the message for any reason </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.userName
  id: userName
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.yml
  langs:
  - java
  name: userName
  nameWithType: AmqpSend.userName
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.userName
  type: Field
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
    startLine: 26
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  syntax:
    content: protected final String userName
    return:
      type: 3d93591e
references:
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.AmqpSend*
  name: AmqpSend
  nameWithType: AmqpSend.AmqpSend
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.AmqpSend
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.open*
  name: open
  nameWithType: AmqpSend.open
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.open
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.close*
  name: close
  nameWithType: AmqpSend.close
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.close
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 0d494ee6
  spec.java:
  - name: IotHubException
    fullName: IotHubException
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.send*
  name: send
  nameWithType: AmqpSend.send
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.send
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.yml
  name: AmqpSendHandler
  nameWithType: AmqpSendHandler
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  type: Class
  summary: "<p>Instance of the QPID-Proton-J BaseHandler class to override the events what are needed to handle the send operation Contains and sets connection parameters (path, port, endpoint) Maintains the layers of AMQP protocol (Link, Session, Connection, Transport) Creates and sets SASL authentication for transport </p>"
  syntax:
    content: public class AmqpSendHandler
- uid: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol.yml
  name: IotHubServiceClientProtocol
  nameWithType: IotHubServiceClientProtocol
  fullName: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
  type: Enum
  summary: "<p>The application-layer protocol used by the service client to communicate with an IoT Hub. </p>"
  syntax:
    content: public enum IotHubServiceClientProtocol
- uid: com.microsoft.azure.sdk.iot.service.ProxyOptions
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.ProxyOptions.yml
  name: ProxyOptions
  nameWithType: ProxyOptions
  fullName: com.microsoft.azure.sdk.iot.service.ProxyOptions
  type: Class
  summary: "<p>The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK, but only if the proxy does not require authentication. </p>"
  syntax:
    content: public class ProxyOptions
- uid: com.microsoft.azure.sdk.iot.service.Message
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.Message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.service.Message
  type: Class
  summary: "<p>IotHub specific message container </p>"
  syntax:
    content: public class Message
- uid: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  parent: com.microsoft.azure.sdk.iot.service.exceptions
  href: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException.yml
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  type: Class
  summary: "<p>Super class for IotHub exceptions </p>"
  syntax:
    content: public class IotHubException
