items:
- uid: system.fabric._cluster_health_query_description
  id: _cluster_health_query_description
  parent: system.fabric
  children:
  - system.fabric._cluster_health_query_description.ClusterHealthQueryDescription()
  - system.fabric._cluster_health_query_description.getApplicationHealthPolicyMap()
  - system.fabric._cluster_health_query_description.getApplicationHealthStatesFilter()
  - system.fabric._cluster_health_query_description.getClusterHealthPolicy()
  - system.fabric._cluster_health_query_description.getHealthEventsFilter()
  - system.fabric._cluster_health_query_description.getNodeHealthStatesFilter()
  - system.fabric._cluster_health_query_description.setApplicationHealthPolicyMap(ApplicationHealthPolicyMap)
  - system.fabric._cluster_health_query_description.setApplicationHealthStatesFilter(ApplicationHealthStatesFilter)
  - system.fabric._cluster_health_query_description.setClusterHealthPolicy(ClusterHealthPolicy)
  - system.fabric._cluster_health_query_description.setHealthEventsFilter(HealthEventsFilter)
  - system.fabric._cluster_health_query_description.setNodeHealthStatesFilter(NodeHealthStatesFilter)
  href: system.fabric._cluster_health_query_description.yml
  langs:
  - java
  name: ClusterHealthQueryDescription
  nameWithType: ClusterHealthQueryDescription
  fullName: system.fabric.ClusterHealthQueryDescription
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
    startLine: 3
  package: system.fabric
  summary: <p>Provides query input for getting <xref href="system.fabric.health._cluster_health" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ClusterHealthQueryDescription
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - system.fabric._cluster_health_query_description.toNative(long,long,long,long,long)
  - system.fabric._cluster_health_query_description.toNative(PinCollection)
- uid: system.fabric._cluster_health_query_description.ClusterHealthQueryDescription()
  id: ClusterHealthQueryDescription()
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  langs:
  - java
  name: ClusterHealthQueryDescription()
  nameWithType: ClusterHealthQueryDescription.ClusterHealthQueryDescription()
  fullName: system.fabric.ClusterHealthQueryDescription.ClusterHealthQueryDescription()
  overload: system.fabric._cluster_health_query_description.ClusterHealthQueryDescription*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
    startLine: 20
  package: system.fabric
  summary: <p>Initializes a new instance of the <ref refid="" kindref="compound">system.fabric.ClusterHealthQueryDescription</ref> class. </p>
  syntax:
    content: public ClusterHealthQueryDescription()
- uid: system.fabric._cluster_health_query_description.getApplicationHealthPolicyMap()
  id: getApplicationHealthPolicyMap()
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  langs:
  - java
  name: getApplicationHealthPolicyMap()
  nameWithType: ClusterHealthQueryDescription.getApplicationHealthPolicyMap()
  fullName: ApplicationHealthPolicyMap system.fabric.ClusterHealthQueryDescription.getApplicationHealthPolicyMap()
  overload: system.fabric._cluster_health_query_description.getApplicationHealthPolicyMap*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
    startLine: 55
  package: system.fabric
  summary: >-
    <p>Gets the application health policies used to evaluate the health of the applications from the cluster. Each entry specifies as key the application name and as value an <xref href="system.fabric._application_health_policy" data-throw-if-not-resolved="false"></xref> used to evaluate the application health.</p>

    <p>

      <bold>Remarks:</bold>If an application is not specified in the map, the <xref href="system.fabric._application_health_policy" data-throw-if-not-resolved="false"></xref> found in its application manifest will be used for evaluation. The map is empty by default. </p>
  syntax:
    content: public ApplicationHealthPolicyMap getApplicationHealthPolicyMap()
    return:
      type: system.fabric._application_health_policy_map
      description: <p>The application health policies used to evaluate the health of the applications from the cluster. </p>
- uid: system.fabric._cluster_health_query_description.getApplicationHealthStatesFilter()
  id: getApplicationHealthStatesFilter()
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  langs:
  - java
  name: getApplicationHealthStatesFilter()
  nameWithType: ClusterHealthQueryDescription.getApplicationHealthStatesFilter()
  fullName: ApplicationHealthStatesFilter system.fabric.ClusterHealthQueryDescription.getApplicationHealthStatesFilter()
  overload: system.fabric._cluster_health_query_description.getApplicationHealthStatesFilter*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
    startLine: 87
  package: system.fabric
  summary: >-
    <p>Gets the filter for <xref href="system.fabric.health._application_health_state" data-throw-if-not-resolved="false"></xref> children. Only children that match the filter will be returned.</p>

    <p>

      <bold>Remarks:</bold>Only applications that match the filter will be returned. All applications will be used to evaluate the cluster aggregated health state. If the filter is not specified, all cluster applications are returned. </p>
  syntax:
    content: public ApplicationHealthStatesFilter getApplicationHealthStatesFilter()
    return:
      type: system.fabric._application_health_states_filter
      description: <p>The filter for <xref href="system.fabric.health._application_health_state" data-throw-if-not-resolved="false"></xref> children. </p>
- uid: system.fabric._cluster_health_query_description.getClusterHealthPolicy()
  id: getClusterHealthPolicy()
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  langs:
  - java
  name: getClusterHealthPolicy()
  nameWithType: ClusterHealthQueryDescription.getClusterHealthPolicy()
  fullName: ClusterHealthPolicy system.fabric.ClusterHealthQueryDescription.getClusterHealthPolicy()
  overload: system.fabric._cluster_health_query_description.getClusterHealthPolicy*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
    startLine: 114
  package: system.fabric
  summary: >-
    <p>Sets the <xref href="system.fabric._cluster_health_policy" data-throw-if-not-resolved="false"></xref> used to evaluate the cluster health. The policy will be used to evaluate the aggregated health state of the events reported on cluster as well as the aggregated health states of the nodes.</p>

    <p></p>
  syntax:
    content: public ClusterHealthPolicy getClusterHealthPolicy()
    return:
      type: system.fabric._cluster_health_policy
      description: >-
        <p>

          <xref href="system.fabric._cluster_health_policy" data-throw-if-not-resolved="false"></xref> used to evaluate the cluster health. </p>
- uid: system.fabric._cluster_health_query_description.getHealthEventsFilter()
  id: getHealthEventsFilter()
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  langs:
  - java
  name: getHealthEventsFilter()
  nameWithType: ClusterHealthQueryDescription.getHealthEventsFilter()
  fullName: HealthEventsFilter system.fabric.ClusterHealthQueryDescription.getHealthEventsFilter()
  overload: system.fabric._cluster_health_query_description.getHealthEventsFilter*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
    startLine: 142
  package: system.fabric
  summary: >-
    <p>Gets the filter for the collection of <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> reported on the cluster.</p>

    <p>

      <bold>Remarks:</bold>Only events that match the filter will be returned. All events will be used to evaluate the cluster aggregated health state. If the filter is not specified, all events are returned. </p>
  syntax:
    content: public HealthEventsFilter getHealthEventsFilter()
    return:
      type: system.fabric._health_events_filter
      description: <p>The filter for the collection of <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> reported on the cluster. </p>
- uid: system.fabric._cluster_health_query_description.getNodeHealthStatesFilter()
  id: getNodeHealthStatesFilter()
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  langs:
  - java
  name: getNodeHealthStatesFilter()
  nameWithType: ClusterHealthQueryDescription.getNodeHealthStatesFilter()
  fullName: NodeHealthStatesFilter system.fabric.ClusterHealthQueryDescription.getNodeHealthStatesFilter()
  overload: system.fabric._cluster_health_query_description.getNodeHealthStatesFilter*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
    startLine: 174
  package: system.fabric
  summary: >-
    <p>Gets the filter for <xref href="system.fabric.health._node_health_state" data-throw-if-not-resolved="false"></xref> children. Only children that match the filter will be returned.</p>

    <p>

      <bold>Remarks:</bold>Only nodes that match the filter will be returned. All nodes will be used to evaluate the cluster aggregated health state. If the filter is not specified, all cluster nodes are returned. </p>
  syntax:
    content: public NodeHealthStatesFilter getNodeHealthStatesFilter()
    return:
      type: system.fabric._node_health_states_filter
      description: <p>The filter for <xref href="system.fabric.health._node_health_state" data-throw-if-not-resolved="false"></xref> children. </p>
- uid: system.fabric._cluster_health_query_description.setApplicationHealthPolicyMap(ApplicationHealthPolicyMap)
  id: setApplicationHealthPolicyMap(ApplicationHealthPolicyMap)
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  langs:
  - java
  name: setApplicationHealthPolicyMap(ApplicationHealthPolicyMap applicationHealthPolicyMap)
  nameWithType: ClusterHealthQueryDescription.setApplicationHealthPolicyMap(ApplicationHealthPolicyMap applicationHealthPolicyMap)
  fullName: void system.fabric.ClusterHealthQueryDescription.setApplicationHealthPolicyMap(ApplicationHealthPolicyMap applicationHealthPolicyMap)
  overload: system.fabric._cluster_health_query_description.setApplicationHealthPolicyMap*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
    startLine: 72
  package: system.fabric
  summary: >-
    <p>Sets the application health policies used to evaluate the health of the applications from the cluster. Each entry specifies as key the application name and as value an <xref href="system.fabric._application_health_policy" data-throw-if-not-resolved="false"></xref> used to evaluate the application health.</p>

    <p>

      <bold>Remarks:</bold>If an application is not specified in the map, the <xref href="system.fabric._application_health_policy" data-throw-if-not-resolved="false"></xref> found in its application manifest will be used for evaluation. The map is empty by default. </p>
  syntax:
    content: public void setApplicationHealthPolicyMap(ApplicationHealthPolicyMap applicationHealthPolicyMap)
    parameters:
    - id: applicationHealthPolicyMap
      type: system.fabric._application_health_policy_map
      description: <p>The application health policies used to evaluate the health of the applications from the cluster. </p>
- uid: system.fabric._cluster_health_query_description.setApplicationHealthStatesFilter(ApplicationHealthStatesFilter)
  id: setApplicationHealthStatesFilter(ApplicationHealthStatesFilter)
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  langs:
  - java
  name: setApplicationHealthStatesFilter(ApplicationHealthStatesFilter applicationsFilter)
  nameWithType: ClusterHealthQueryDescription.setApplicationHealthStatesFilter(ApplicationHealthStatesFilter applicationsFilter)
  fullName: void system.fabric.ClusterHealthQueryDescription.setApplicationHealthStatesFilter(ApplicationHealthStatesFilter applicationsFilter)
  overload: system.fabric._cluster_health_query_description.setApplicationHealthStatesFilter*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
    startLine: 103
  package: system.fabric
  summary: >-
    <p>Sets the filter for <xref href="system.fabric.health._application_health_state" data-throw-if-not-resolved="false"></xref> children. Only children that match the filter will be returned.</p>

    <p>

      <bold>Remarks:</bold>Only applications that match the filter will be returned. All applications will be used to evaluate the cluster aggregated health state. If the filter is not specified, all cluster applications are returned. </p>
  syntax:
    content: public void setApplicationHealthStatesFilter(ApplicationHealthStatesFilter applicationsFilter)
    parameters:
    - id: applicationsFilter
      type: system.fabric._application_health_states_filter
      description: <p>The filter for <xref href="system.fabric.health._application_health_state" data-throw-if-not-resolved="false"></xref> children. </p>
- uid: system.fabric._cluster_health_query_description.setClusterHealthPolicy(ClusterHealthPolicy)
  id: setClusterHealthPolicy(ClusterHealthPolicy)
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  langs:
  - java
  name: setClusterHealthPolicy(ClusterHealthPolicy clusterHealthPolicy)
  nameWithType: ClusterHealthQueryDescription.setClusterHealthPolicy(ClusterHealthPolicy clusterHealthPolicy)
  fullName: void system.fabric.ClusterHealthQueryDescription.setClusterHealthPolicy(ClusterHealthPolicy clusterHealthPolicy)
  overload: system.fabric._cluster_health_query_description.setClusterHealthPolicy*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
    startLine: 126
  package: system.fabric
  summary: >-
    <p>Gets the <xref href="system.fabric._cluster_health_policy" data-throw-if-not-resolved="false"></xref> used to evaluate the cluster health. The policy will be used to evaluate the aggregated health state of the events reported on cluster as well as the aggregated health states of the nodes.</p>

    <p></p>
  syntax:
    content: public void setClusterHealthPolicy(ClusterHealthPolicy clusterHealthPolicy)
    parameters:
    - id: clusterHealthPolicy
      type: system.fabric._cluster_health_policy
      description: >-
        <p>

          <xref href="system.fabric._cluster_health_policy" data-throw-if-not-resolved="false"></xref> used to evaluate the cluster health. </p>
- uid: system.fabric._cluster_health_query_description.setHealthEventsFilter(HealthEventsFilter)
  id: setHealthEventsFilter(HealthEventsFilter)
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  langs:
  - java
  name: setHealthEventsFilter(HealthEventsFilter eventsFilter)
  nameWithType: ClusterHealthQueryDescription.setHealthEventsFilter(HealthEventsFilter eventsFilter)
  fullName: void system.fabric.ClusterHealthQueryDescription.setHealthEventsFilter(HealthEventsFilter eventsFilter)
  overload: system.fabric._cluster_health_query_description.setHealthEventsFilter*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
    startLine: 159
  package: system.fabric
  summary: >-
    <p>Sets the filter for the collection of <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> reported on the cluster.</p>

    <p>

      <bold>Remarks:</bold>Only events that match the filter will be returned. All events will be used to evaluate the cluster aggregated health state. If the filter is not specified, all events are returned. </p>
  syntax:
    content: public void setHealthEventsFilter(HealthEventsFilter eventsFilter)
    parameters:
    - id: eventsFilter
      type: system.fabric._health_events_filter
      description: <p>The filter for the collection of <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> reported on the cluster. </p>
- uid: system.fabric._cluster_health_query_description.setNodeHealthStatesFilter(NodeHealthStatesFilter)
  id: setNodeHealthStatesFilter(NodeHealthStatesFilter)
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  langs:
  - java
  name: setNodeHealthStatesFilter(NodeHealthStatesFilter nodesFilter)
  nameWithType: ClusterHealthQueryDescription.setNodeHealthStatesFilter(NodeHealthStatesFilter nodesFilter)
  fullName: void system.fabric.ClusterHealthQueryDescription.setNodeHealthStatesFilter(NodeHealthStatesFilter nodesFilter)
  overload: system.fabric._cluster_health_query_description.setNodeHealthStatesFilter*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthQueryDescription.java
    startLine: 190
  package: system.fabric
  summary: >-
    <p>Sets the filter for <xref href="system.fabric.health._node_health_state" data-throw-if-not-resolved="false"></xref> children. Only children that match the filter will be returned.</p>

    <p>

      <bold>Remarks:</bold>Only nodes that match the filter will be returned. All nodes will be used to evaluate the cluster aggregated health state. If the filter is not specified, all cluster nodes are returned. </p>
  syntax:
    content: public void setNodeHealthStatesFilter(NodeHealthStatesFilter nodesFilter)
    parameters:
    - id: nodesFilter
      type: system.fabric._node_health_states_filter
      description: <p>The filter for <xref href="system.fabric.health._node_health_state" data-throw-if-not-resolved="false"></xref> children. </p>
references:
- uid: system.fabric._cluster_health_query_description.ClusterHealthQueryDescription*
  name: ClusterHealthQueryDescription
  nameWithType: ClusterHealthQueryDescription.ClusterHealthQueryDescription
  fullName: system.fabric.ClusterHealthQueryDescription.ClusterHealthQueryDescription
  package: system.fabric
- uid: system.fabric._cluster_health_query_description.getApplicationHealthPolicyMap*
  name: getApplicationHealthPolicyMap
  nameWithType: ClusterHealthQueryDescription.getApplicationHealthPolicyMap
  fullName: ApplicationHealthPolicyMap system.fabric.ClusterHealthQueryDescription.getApplicationHealthPolicyMap
  package: system.fabric
- uid: system.fabric._cluster_health_query_description.setApplicationHealthPolicyMap*
  name: setApplicationHealthPolicyMap
  nameWithType: ClusterHealthQueryDescription.setApplicationHealthPolicyMap
  fullName: void system.fabric.ClusterHealthQueryDescription.setApplicationHealthPolicyMap
  package: system.fabric
- uid: system.fabric._cluster_health_query_description.getApplicationHealthStatesFilter*
  name: getApplicationHealthStatesFilter
  nameWithType: ClusterHealthQueryDescription.getApplicationHealthStatesFilter
  fullName: ApplicationHealthStatesFilter system.fabric.ClusterHealthQueryDescription.getApplicationHealthStatesFilter
  package: system.fabric
- uid: system.fabric._cluster_health_query_description.setApplicationHealthStatesFilter*
  name: setApplicationHealthStatesFilter
  nameWithType: ClusterHealthQueryDescription.setApplicationHealthStatesFilter
  fullName: void system.fabric.ClusterHealthQueryDescription.setApplicationHealthStatesFilter
  package: system.fabric
- uid: system.fabric._cluster_health_query_description.getClusterHealthPolicy*
  name: getClusterHealthPolicy
  nameWithType: ClusterHealthQueryDescription.getClusterHealthPolicy
  fullName: ClusterHealthPolicy system.fabric.ClusterHealthQueryDescription.getClusterHealthPolicy
  package: system.fabric
- uid: system.fabric._cluster_health_query_description.setClusterHealthPolicy*
  name: setClusterHealthPolicy
  nameWithType: ClusterHealthQueryDescription.setClusterHealthPolicy
  fullName: void system.fabric.ClusterHealthQueryDescription.setClusterHealthPolicy
  package: system.fabric
- uid: system.fabric._cluster_health_query_description.getHealthEventsFilter*
  name: getHealthEventsFilter
  nameWithType: ClusterHealthQueryDescription.getHealthEventsFilter
  fullName: HealthEventsFilter system.fabric.ClusterHealthQueryDescription.getHealthEventsFilter
  package: system.fabric
- uid: system.fabric._cluster_health_query_description.setHealthEventsFilter*
  name: setHealthEventsFilter
  nameWithType: ClusterHealthQueryDescription.setHealthEventsFilter
  fullName: void system.fabric.ClusterHealthQueryDescription.setHealthEventsFilter
  package: system.fabric
- uid: system.fabric._cluster_health_query_description.getNodeHealthStatesFilter*
  name: getNodeHealthStatesFilter
  nameWithType: ClusterHealthQueryDescription.getNodeHealthStatesFilter
  fullName: NodeHealthStatesFilter system.fabric.ClusterHealthQueryDescription.getNodeHealthStatesFilter
  package: system.fabric
- uid: system.fabric._cluster_health_query_description.setNodeHealthStatesFilter*
  name: setNodeHealthStatesFilter
  nameWithType: ClusterHealthQueryDescription.setNodeHealthStatesFilter
  fullName: void system.fabric.ClusterHealthQueryDescription.setNodeHealthStatesFilter
  package: system.fabric
- uid: system.fabric._cluster_health_query_description.toNative(long,long,long,long,long)
- uid: system.fabric._cluster_health_query_description.toNative(PinCollection)
- uid: system.fabric._cluster_health_policy
  parent: system.fabric
  href: system.fabric._cluster_health_policy.yml
  name: ClusterHealthPolicy
  nameWithType: ClusterHealthPolicy
  fullName: system.fabric.ClusterHealthPolicy
  type: Class
  summary: <p>Defines a health policy used to evaluate the health of the cluster or of a cluster node. </p>
  syntax:
    content: public class ClusterHealthPolicy
- uid: system.fabric._health_events_filter
  parent: system.fabric
  href: system.fabric._health_events_filter.yml
  name: HealthEventsFilter
  nameWithType: HealthEventsFilter
  fullName: system.fabric.HealthEventsFilter
  type: Class
  syntax:
    content: public class HealthEventsFilter
- uid: system.fabric._node_health_states_filter
  parent: system.fabric
  href: system.fabric._node_health_states_filter.yml
  name: NodeHealthStatesFilter
  nameWithType: NodeHealthStatesFilter
  fullName: system.fabric.NodeHealthStatesFilter
  type: Class
  syntax:
    content: public class NodeHealthStatesFilter
- uid: system.fabric._application_health_states_filter
  parent: system.fabric
  href: system.fabric._application_health_states_filter.yml
  name: ApplicationHealthStatesFilter
  nameWithType: ApplicationHealthStatesFilter
  fullName: system.fabric.ApplicationHealthStatesFilter
  type: Class
  syntax:
    content: public class ApplicationHealthStatesFilter
- uid: system.fabric._application_health_policy_map
  parent: system.fabric
  href: system.fabric._application_health_policy_map.yml
  name: ApplicationHealthPolicyMap
  nameWithType: ApplicationHealthPolicyMap
  fullName: system.fabric.ApplicationHealthPolicyMap
  type: Class
  summary: >-
    <p>Represents a map that contains specific application health policies for different applications. </p>

    <p>

      <bold>Remarks:</bold> Can be used by queries like <xref href="system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription)" data-throw-if-not-resolved="false"></xref> to determine how the applications are evaluated. </p>
  syntax:
    content: public class ApplicationHealthPolicyMap
- uid: system.fabric._pin_collection
  parent: system.fabric
  href: system.fabric._pin_collection.yml
  name: PinCollection
  nameWithType: PinCollection
  fullName: system.fabric.PinCollection
  type: Class
  syntax:
    content: public class PinCollection
- uid: system.fabric._application_health_policy
  parent: system.fabric
  href: system.fabric._application_health_policy.yml
  name: ApplicationHealthPolicy
  nameWithType: ApplicationHealthPolicy
  fullName: system.fabric.ApplicationHealthPolicy
  type: Class
  summary: <p>Defines a health policy used to evaluate the health of an application or one of its children entities. </p>
  syntax:
    content: public class ApplicationHealthPolicy
- uid: system.fabric.health._application_health_state
  parent: system.fabric.health
  href: system.fabric.health._application_health_state.yml
  name: ApplicationHealthState
  nameWithType: ApplicationHealthState
  fullName: system.fabric.health.ApplicationHealthState
  type: Class
  summary: <p>Represents the health state of an application, which contains the application identifier and the aggregated health state. </p>
  syntax:
    content: public class ApplicationHealthState extends EntityHealthState
- uid: system.fabric.health._health_event
  parent: system.fabric.health
  href: system.fabric.health._health_event.yml
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: system.fabric.health.HealthEvent
  type: Class
  summary: <p>A <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> object is a structure which contains the health information that is used while reporting health on an entity via ReportHealth API </p>
  syntax:
    content: public class HealthEvent
- uid: system.fabric.health._node_health_state
  parent: system.fabric.health
  href: system.fabric.health._node_health_state.yml
  name: NodeHealthState
  nameWithType: NodeHealthState
  fullName: system.fabric.health.NodeHealthState
  type: Class
  summary: <p>Represents the health state of a node, which contains the node identifier and its aggregated health state. </p>
  syntax:
    content: public class NodeHealthState
- uid: system.fabric.health._cluster_health
  parent: system.fabric.health
  href: system.fabric.health._cluster_health.yml
  name: ClusterHealth
  nameWithType: ClusterHealth
  fullName: system.fabric.health.ClusterHealth
  type: Class
  summary: <p>Represents the health of the cluster, as returned by <xref href="system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription)" data-throw-if-not-resolved="false"></xref> . Contains the cluster aggregated health state and the cluster application and node health states. </p>
  syntax:
    content: public class ClusterHealth extends EntityHealth
