### YamlMime:JavaType
methods:
- fullName: microsoft.servicefabric.actors.runtime.ActorTimer.getDueTime()
  name: getDueTime()
  nameWithType: ActorTimer.getDueTime()
  returns:
    description: <p>Time as <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.time.Duration"></xref> when timer is first due. </p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Time when timer is first due.</p>

    <p></p>
  syntax: public Duration getDueTime()
  uid: microsoft.servicefabric.actors.runtime.ActorTimer.getDueTime()
- fullName: microsoft.servicefabric.actors.runtime.ActorTimer.getPeriod()
  name: getPeriod()
  nameWithType: ActorTimer.getPeriod()
  returns:
    description: <p>Periodic time as <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.time.Duration"></xref> when timer will be invoked. </p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Periodic time when timer will be invoked.</p>

    <p></p>
  syntax: public Duration getPeriod()
  uid: microsoft.servicefabric.actors.runtime.ActorTimer.getPeriod()
nameWithType: ActorTimer
syntax: public interface ActorTimer
type: interface
uid: microsoft.servicefabric.actors.runtime.ActorTimer
fullName: microsoft.servicefabric.actors.runtime.ActorTimer
name: ActorTimer
package: microsoft.servicefabric.actors.runtime
summary: <p>Represents Timer set on an Actor </p>
metadata: {}
