### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.query*"
fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.query"
name: "query"
nameWithType: "BlobAsyncClientBase.query"
members:
- uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.query(java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.query(String expression)"
  name: "query(String expression)"
  nameWithType: "BlobAsyncClientBase.query(String expression)"
  summary: "Queries the entire blob.\n\nFor more information, see the [Azure Docs][]\n\n**Code Samples**\n\n```java\nByteArrayOutputStream queryData = new ByteArrayOutputStream();\n String expression = \"SELECT * from BlobStorage\";\n client.query(expression).subscribe(piece -> {\n     try {\n         queryData.write(piece.array());\n     } catch (IOException ex) {\n         throw new UncheckedIOException(ex);\n     }\n });\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/query-blob-contents"
  parameters:
  - description: "The query expression."
    name: "expression"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Flux<ByteBuffer> query(String expression)"
  returns:
    description: "A reactive response containing the queried data."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
