### YamlMime:JavaType
uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner"
fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner"
name: "ImageInner"
nameWithType: "ImageInner"
summary: "The source user image virtual hard disk."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.core.management.ProxyResource?alt=com.azure.core.management.ProxyResource&text=ProxyResource\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.management.ProxyResource.id()?alt=com.azure.core.management.ProxyResource.id&text=id\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.management.ProxyResource.name()?alt=com.azure.core.management.ProxyResource.name&text=name\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.management.ProxyResource.type()?alt=com.azure.core.management.ProxyResource.type&text=type\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.azure.core.management.Resource?alt=com.azure.core.management.Resource&text=Resource\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.management.Resource.location()?alt=com.azure.core.management.Resource.location&text=location\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.management.Resource.tags()?alt=com.azure.core.management.Resource.tags&text=tags\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.management.Resource.withLocation(java.lang.String)?alt=com.azure.core.management.Resource.withLocation&text=withLocation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)?alt=com.azure.core.management.Resource.withTags&text=withTags\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class ImageInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.ImageInner()"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.ImageInner()"
  name: "ImageInner()"
  nameWithType: "ImageInner.ImageInner()"
  syntax: "public ImageInner()"
methods:
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.extendedLocation()"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.extendedLocation()"
  name: "extendedLocation()"
  nameWithType: "ImageInner.extendedLocation()"
  summary: "Get the extended<wbr>Location property: The extended location of the Image."
  syntax: "public ExtendedLocation extendedLocation()"
  desc: "Get the extendedLocation property: The extended location of the Image."
  returns:
    description: "the extendedLocation value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ExtendedLocation?alt=com.azure.resourcemanager.compute.models.ExtendedLocation&text=ExtendedLocation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.hyperVGeneration()"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.hyperVGeneration()"
  name: "hyperVGeneration()"
  nameWithType: "ImageInner.hyperVGeneration()"
  summary: "Get the hyper<wbr>VGeneration property: Specifies the Hyper<wbr>VGeneration<wbr>Type of the Virtual<wbr>Machine created from the image."
  syntax: "public HyperVGenerationTypes hyperVGeneration()"
  desc: "Get the hyperVGeneration property: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource."
  returns:
    description: "the hyperVGeneration value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.HyperVGenerationTypes?alt=com.azure.resourcemanager.compute.models.HyperVGenerationTypes&text=HyperVGenerationTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.provisioningState()"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ImageInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning state."
  syntax: "public String provisioningState()"
  desc: "Get the provisioningState property: The provisioning state."
  returns:
    description: "the provisioningState value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.sourceVirtualMachine()"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.sourceVirtualMachine()"
  name: "sourceVirtualMachine()"
  nameWithType: "ImageInner.sourceVirtualMachine()"
  summary: "Get the source<wbr>Virtual<wbr>Machine property: The source virtual machine from which Image is created."
  syntax: "public SubResource sourceVirtualMachine()"
  desc: "Get the sourceVirtualMachine property: The source virtual machine from which Image is created."
  returns:
    description: "the sourceVirtualMachine value."
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.storageProfile()"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.storageProfile()"
  name: "storageProfile()"
  nameWithType: "ImageInner.storageProfile()"
  summary: "Get the storage<wbr>Profile property: Specifies the storage settings for the virtual machine disks."
  syntax: "public ImageStorageProfile storageProfile()"
  desc: "Get the storageProfile property: Specifies the storage settings for the virtual machine disks."
  returns:
    description: "the storageProfile value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageStorageProfile?alt=com.azure.resourcemanager.compute.models.ImageStorageProfile&text=ImageStorageProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.validate()"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.validate()"
  name: "validate()"
  nameWithType: "ImageInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.withExtendedLocation(com.azure.resourcemanager.compute.models.ExtendedLocation)"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.withExtendedLocation(ExtendedLocation extendedLocation)"
  name: "withExtendedLocation(ExtendedLocation extendedLocation)"
  nameWithType: "ImageInner.withExtendedLocation(ExtendedLocation extendedLocation)"
  summary: "Set the extended<wbr>Location property: The extended location of the Image."
  parameters:
  - description: "the extendedLocation value to set."
    name: "extendedLocation"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ExtendedLocation?alt=com.azure.resourcemanager.compute.models.ExtendedLocation&text=ExtendedLocation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageInner withExtendedLocation(ExtendedLocation extendedLocation)"
  desc: "Set the extendedLocation property: The extended location of the Image."
  returns:
    description: "the ImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.fluent.models.ImageInner?alt=com.azure.resourcemanager.compute.fluent.models.ImageInner&text=ImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.withHyperVGeneration(com.azure.resourcemanager.compute.models.HyperVGenerationTypes)"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.withHyperVGeneration(HyperVGenerationTypes hyperVGeneration)"
  name: "withHyperVGeneration(HyperVGenerationTypes hyperVGeneration)"
  nameWithType: "ImageInner.withHyperVGeneration(HyperVGenerationTypes hyperVGeneration)"
  summary: "Set the hyper<wbr>VGeneration property: Specifies the Hyper<wbr>VGeneration<wbr>Type of the Virtual<wbr>Machine created from the image."
  parameters:
  - description: "the hyperVGeneration value to set."
    name: "hyperVGeneration"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.HyperVGenerationTypes?alt=com.azure.resourcemanager.compute.models.HyperVGenerationTypes&text=HyperVGenerationTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageInner withHyperVGeneration(HyperVGenerationTypes hyperVGeneration)"
  desc: "Set the hyperVGeneration property: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource."
  returns:
    description: "the ImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.fluent.models.ImageInner?alt=com.azure.resourcemanager.compute.fluent.models.ImageInner&text=ImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "ImageInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ImageInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.fluent.models.ImageInner?alt=com.azure.resourcemanager.compute.fluent.models.ImageInner&text=ImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.withSourceVirtualMachine(com.azure.core.management.SubResource)"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.withSourceVirtualMachine(SubResource sourceVirtualMachine)"
  name: "withSourceVirtualMachine(SubResource sourceVirtualMachine)"
  nameWithType: "ImageInner.withSourceVirtualMachine(SubResource sourceVirtualMachine)"
  summary: "Set the source<wbr>Virtual<wbr>Machine property: The source virtual machine from which Image is created."
  parameters:
  - description: "the sourceVirtualMachine value to set."
    name: "sourceVirtualMachine"
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageInner withSourceVirtualMachine(SubResource sourceVirtualMachine)"
  desc: "Set the sourceVirtualMachine property: The source virtual machine from which Image is created."
  returns:
    description: "the ImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.fluent.models.ImageInner?alt=com.azure.resourcemanager.compute.fluent.models.ImageInner&text=ImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.withStorageProfile(com.azure.resourcemanager.compute.models.ImageStorageProfile)"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.withStorageProfile(ImageStorageProfile storageProfile)"
  name: "withStorageProfile(ImageStorageProfile storageProfile)"
  nameWithType: "ImageInner.withStorageProfile(ImageStorageProfile storageProfile)"
  summary: "Set the storage<wbr>Profile property: Specifies the storage settings for the virtual machine disks."
  parameters:
  - description: "the storageProfile value to set."
    name: "storageProfile"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageStorageProfile?alt=com.azure.resourcemanager.compute.models.ImageStorageProfile&text=ImageStorageProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageInner withStorageProfile(ImageStorageProfile storageProfile)"
  desc: "Set the storageProfile property: Specifies the storage settings for the virtual machine disks."
  returns:
    description: "the ImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.fluent.models.ImageInner?alt=com.azure.resourcemanager.compute.fluent.models.ImageInner&text=ImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.fluent.models.ImageInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.compute.fluent.models.ImageInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "ImageInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public ImageInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.fluent.models.ImageInner?alt=com.azure.resourcemanager.compute.fluent.models.ImageInner&text=ImageInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist."
metadata: {}
package: "com.azure.resourcemanager.compute.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.19.0
