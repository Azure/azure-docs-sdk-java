### YamlMime:JavaType
uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleases"
fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleases"
name: "ApiReleases"
nameWithType: "ApiReleases"
summary: "Type representing Api<wbr>Releases."
syntax: "public interface ApiReleases extends SupportsCreating<ApiReleaseContract.DefinitionStages.Blank>, HasInner<ApiReleasesInner>"
methods:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleases.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleases.deleteAsync(String resourceGroupName, String serviceName, String apiId, String releaseId, String ifMatch)"
  name: "deleteAsync(String resourceGroupName, String serviceName, String apiId, String releaseId, String ifMatch)"
  nameWithType: "ApiReleases.deleteAsync(String resourceGroupName, String serviceName, String apiId, String releaseId, String ifMatch)"
  summary: "Deletes the specified release in the API."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "API identifier. Must be unique in the current API Management service instance."
    name: "apiId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Release identifier within an API. Must be unique in the current API Management service instance."
    name: "releaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable deleteAsync(String resourceGroupName, String serviceName, String apiId, String releaseId, String ifMatch)"
  desc: "Deletes the specified release in the API."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleases.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleases.getAsync(String resourceGroupName, String serviceName, String apiId, String releaseId)"
  name: "getAsync(String resourceGroupName, String serviceName, String apiId, String releaseId)"
  nameWithType: "ApiReleases.getAsync(String resourceGroupName, String serviceName, String apiId, String releaseId)"
  summary: "Returns the details of an API release."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "API identifier. Must be unique in the current API Management service instance."
    name: "apiId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Release identifier within an API. Must be unique in the current API Management service instance."
    name: "releaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ApiReleaseContract> getAsync(String resourceGroupName, String serviceName, String apiId, String releaseId)"
  desc: "Returns the details of an API release."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleaseContract?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleaseContract&text=ApiReleaseContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleases.getEntityTagAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleases.getEntityTagAsync(String resourceGroupName, String serviceName, String apiId, String releaseId)"
  name: "getEntityTagAsync(String resourceGroupName, String serviceName, String apiId, String releaseId)"
  nameWithType: "ApiReleases.getEntityTagAsync(String resourceGroupName, String serviceName, String apiId, String releaseId)"
  summary: "Returns the etag of an API release."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "API identifier. Must be unique in the current API Management service instance."
    name: "apiId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Release identifier within an API. Must be unique in the current API Management service instance."
    name: "releaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable getEntityTagAsync(String resourceGroupName, String serviceName, String apiId, String releaseId)"
  desc: "Returns the etag of an API release."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleases.listByServiceAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleases.listByServiceAsync(String resourceGroupName, String serviceName, String apiId)"
  name: "listByServiceAsync(String resourceGroupName, String serviceName, String apiId)"
  nameWithType: "ApiReleases.listByServiceAsync(String resourceGroupName, String serviceName, String apiId)"
  summary: "Lists all releases of an API."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "API identifier. Must be unique in the current API Management service instance."
    name: "apiId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ApiReleaseContract> listByServiceAsync(String resourceGroupName, String serviceName, String apiId)"
  desc: "Lists all releases of an API. An API release is created when making an API Revision current. Releases are also used to rollback to previous revisions. Results will be paged and can be constrained by the $top and $skip parameters."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleaseContract?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleaseContract&text=ApiReleaseContract\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Type representing ApiReleases."
implements:
- "<xref href=\"com.microsoft.azure.arm.collection.SupportsCreating?alt=com.microsoft.azure.arm.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleaseContract.DefinitionStages.Blank?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.ApiReleaseContract.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiReleasesInner?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiReleasesInner&text=ApiReleasesInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.apimanagement.v2019_01_01"
artifact: com.microsoft.azure.apimanagement.v2019_01_01:azure-mgmt-apimanagement:1.0.0-beta-1
