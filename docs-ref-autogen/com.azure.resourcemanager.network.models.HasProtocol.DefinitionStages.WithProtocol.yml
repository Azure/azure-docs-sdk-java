### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.models.HasProtocol.DefinitionStages.WithProtocol"
fullName: "com.azure.resourcemanager.network.models.HasProtocol.DefinitionStages.WithProtocol<ReturnT,ProtocolT>"
name: "HasProtocol.DefinitionStages.WithProtocol<ReturnT,ProtocolT>"
nameWithType: "HasProtocol.DefinitionStages.WithProtocol<ReturnT,ProtocolT>"
summary: "The stage of a definition allowing to specify the protocol."
syntax: "public static interface HasProtocol.DefinitionStages.WithProtocol<ReturnT,ProtocolT>"
methods:
- uid: "com.azure.resourcemanager.network.models.HasProtocol.DefinitionStages.WithProtocol.withProtocol(ProtocolT)"
  fullName: "com.azure.resourcemanager.network.models.HasProtocol.DefinitionStages.WithProtocol<ReturnT,ProtocolT>.withProtocol(ProtocolT protocol)"
  name: "withProtocol(ProtocolT protocol)"
  nameWithType: "HasProtocol.DefinitionStages.WithProtocol<ReturnT,ProtocolT>.withProtocol(ProtocolT protocol)"
  summary: "Specifies the transport protocol."
  modifiers:
  - "abstract"
  parameters:
  - description: "a transport protocol"
    name: "protocol"
    type: "<xref href=\"ProtocolT?alt=ProtocolT&text=ProtocolT\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ReturnT withProtocol(ProtocolT protocol)"
  desc: "Specifies the transport protocol."
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"ReturnT?alt=ReturnT&text=ReturnT\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
typeParameters:
- description: "the next stage of the definition"
  name: "ReturnT"
- description: "the type of the protocol value"
  name: "ProtocolT"
desc: "The stage of a definition allowing to specify the protocol."
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.19.0
