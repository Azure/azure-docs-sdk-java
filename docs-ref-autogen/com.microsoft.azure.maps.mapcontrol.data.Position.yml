### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.maps.mapcontrol.data.Position
  id: Position
  parent: com.microsoft.azure.maps.mapcontrol.data
  children:
  - com.microsoft.azure.maps.mapcontrol.data.Position.areEqual(Position,Position)
  - com.microsoft.azure.maps.mapcontrol.data.Position.areEqual(Position,Position,int)
  - com.microsoft.azure.maps.mapcontrol.data.Position.CREATOR
  - com.microsoft.azure.maps.mapcontrol.data.Position.describeContents()
  - com.microsoft.azure.maps.mapcontrol.data.Position.fromLatLng(double [])
  - com.microsoft.azure.maps.mapcontrol.data.Position.fromLatLngs(double)
  - com.microsoft.azure.maps.mapcontrol.data.Position.getElevation()
  - com.microsoft.azure.maps.mapcontrol.data.Position.getLatitude()
  - com.microsoft.azure.maps.mapcontrol.data.Position.getLongitude()
  - com.microsoft.azure.maps.mapcontrol.data.Position.hashCode()
  - com.microsoft.azure.maps.mapcontrol.data.Position.Position(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double,@FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double)
  - com.microsoft.azure.maps.mapcontrol.data.Position.Position(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double,@FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double,double)
  - com.microsoft.azure.maps.mapcontrol.data.Position.Position(Parcel)
  - com.microsoft.azure.maps.mapcontrol.data.Position.Position(Position)
  - com.microsoft.azure.maps.mapcontrol.data.Position.setElevation(double)
  - com.microsoft.azure.maps.mapcontrol.data.Position.setLatitude(@FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double)
  - com.microsoft.azure.maps.mapcontrol.data.Position.setLongitude(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double)
  - com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinates()
  - com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinates(Position)
  - com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinatesArray(Position [])
  - com.microsoft.azure.maps.mapcontrol.data.Position.toString()
  - com.microsoft.azure.maps.mapcontrol.data.Position.writeToParcel(@NonNull Parcel,int)
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: Position
  nameWithType: Position
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position
  type: Class
  source:
    remote: &o0
      path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
      branch: master
      repo: https://dev.azure.com/msazure/One/_git/Azure-IoT-Maps-AndroidSDK
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 15
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>A GeoJSON Position object - an array that specifies the longitude and latitude of a location. The full description is detailed in [RFC 7946]<xref uid=\"\" data-throw-if-not-resolved=\"false\">https://tools.ietf.org/html/rfc7946#section-3.1.1</xref>. </p>"
  syntax: &o1
    content: public class Position
  inheritance:
  - java.lang.Object
  - Parcelable
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.areEqual(Position,Position)
  id: areEqual(Position,Position)
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: areEqual(Position pos1, Position pos2)
  nameWithType: Position.areEqual(Position pos1, Position pos2)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.areEqual(Position pos1, Position pos2)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.areEqual*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 169
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Compares the longitude and latitude values of two positions to see if they are equal at an accuracy of 6 decimal places. </p>"
  syntax:
    content: public static boolean areEqual(Position pos1, Position pos2)
    parameters:
    - id: pos1
      type: com.microsoft.azure.maps.mapcontrol.data.Position
      description: <p>First position to compare. </p>
    - id: pos2
      type: com.microsoft.azure.maps.mapcontrol.data.Position
      description: <p>Second position to compare. </p>
    return:
      type: 4fc6e284
      description: <p>A boolean indicating if two positions to see if they are equal at an accuracy of 6 decimal places. </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.areEqual(Position,Position,int)
  id: areEqual(Position,Position,int)
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: areEqual(Position pos1, Position pos2, int precision)
  nameWithType: Position.areEqual(Position pos1, Position pos2, int precision)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.areEqual(Position pos1, Position pos2, int precision)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.areEqual*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 135
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Compares the longitude and latitude values of two positions to see if they are equal at an accuracy of 6 decimal places. </p>"
  syntax:
    content: public static boolean areEqual(Position pos1, Position pos2, int precision)
    parameters:
    - id: pos1
      type: com.microsoft.azure.maps.mapcontrol.data.Position
      description: <p>First position to compare. </p>
    - id: pos2
      type: com.microsoft.azure.maps.mapcontrol.data.Position
      description: <p>Second position to compare. </p>
    - id: precision
      type: f75371fa
      description: '<p>The number of decimal places to compare to. Default: 6. </p>'
    return:
      type: 4fc6e284
      description: <p>A boolean indicating if two positions to see if they are equal at an accuracy of the specified precision or 6 decimal places. </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.CREATOR
  id: CREATOR
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: CREATOR
  nameWithType: Position.CREATOR
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.CREATOR
  type: Field
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 17
  package: com.microsoft.azure.maps.mapcontrol.data
  syntax:
    content: >-
      public static final Parcelable.Creator<Position> CREATOR= new Parcelable.Creator<Position>() {
              public Position createFromParcel(@NonNull Parcel in) {
                  return new Position(in);
              }

              public Position[] newArray(int size) {
                  return new Position[size];
              }
          }
    return:
      type: 3bf43c8ecom.microsoft.azure.maps.mapcontrol.data.Positiona08ddfce
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.describeContents()
  id: describeContents()
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: describeContents()
  nameWithType: Position.describeContents()
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.describeContents()
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.describeContents*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 201
  package: com.microsoft.azure.maps.mapcontrol.data
  syntax:
    content: public int describeContents()
    return:
      type: f75371fa
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.fromLatLng(double [])
  id: fromLatLng(double [])
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: fromLatLng(double[] arr)
  nameWithType: Position.fromLatLng(double[] arr)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.fromLatLng(double[] arr)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.fromLatLng*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 223
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Generates a Position object from an array that has the format; [lat, lng] or [lat, lng, elv] </p>"
  syntax:
    content: public static Position fromLatLng(double[] arr)
    parameters:
    - id: arr
      type: 95b4502f
      description: <p>An array that contains latitude/longitude information in the format; [lat, lng] or [lat, lng, elv] </p>
    return:
      type: com.microsoft.azure.maps.mapcontrol.data.Position
      description: <p>A Position object that represents the provided long, lat, elevation information. </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.fromLatLngs(double)
  id: fromLatLngs(double)
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: fromLatLngs(double[][] latLngs)
  nameWithType: Position.fromLatLngs(double[][] latLngs)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.fromLatLngs(double[][] latLngs)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.fromLatLngs*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 322
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Converts an array of objects that contain coordinate information into an array of Positions. Each object is either an array in the format: [lat, lng] or [lat, lng, elv], or an object with the any combination of the following properties: Longitude Latitude Elevation </p>"
  syntax:
    content: public static Position [] fromLatLngs(double[][] latLngs)
    parameters:
    - id: latLngs
      type: a07dcde8
      description: <p>The objects that contain coordinate information. </p>
    return:
      type: com.microsoft.azure.maps.mapcontrol.data.Positione5b41c5f
      description: <p>An array of Position objects that contain all the provided coordinate information. </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.getElevation()
  id: getElevation()
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: getElevation()
  nameWithType: Position.getElevation()
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.getElevation()
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.getElevation*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 116
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Get the elevation, in meters. </p>"
  syntax:
    content: public double getElevation()
    return:
      type: a07dcde8
      description: <p>the elevation value in meters </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.getLatitude()
  id: getLatitude()
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: getLatitude()
  nameWithType: Position.getLatitude()
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.getLatitude()
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.getLatitude*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 98
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Get the latitude, in degrees. This value is in the range of [-90, 90] </p>"
  syntax:
    content: public double getLatitude()
    return:
      type: a07dcde8
      description: <p>the latitude value in degrees </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.getLongitude()
  id: getLongitude()
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: getLongitude()
  nameWithType: Position.getLongitude()
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.getLongitude()
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.getLongitude*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 79
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Get the longitude, in degrees. This value is in the range of [-180, 180] </p>"
  syntax:
    content: public double getLongitude()
    return:
      type: a07dcde8
      description: <p>the longitude value in degrees </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.hashCode()
  id: hashCode()
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: hashCode()
  nameWithType: Position.hashCode()
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.hashCode()
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.hashCode*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 178
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Returns a hash code value for the object. </p>"
  syntax:
    content: public int hashCode()
    return:
      type: f75371fa
      description: <p>the hash code value </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.Position(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double,@FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double)
  id: MAX_LATITUDE) double)
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: Position(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double longitude, @FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double latitude)
  nameWithType: Position.Position(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double longitude, @FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double latitude)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.Position(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double longitude, @FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double latitude)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.Position*
  type: Constructor
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 37
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Construct a new position given latitude and longitude only </p>"
  syntax:
    content: public Position(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double longitude, @FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double latitude)
    parameters:
    - id: longitude
      type: 11afe4efcom.microsoft.azure.maps.mapcontrol.MapMath.MIN_LONGITUDEb046a491com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LONGITUDE4d5b4d53
      description: <p>Longitude in degrees </p>
    - id: latitude
      type: 11afe4efcom.microsoft.azure.maps.mapcontrol.MapMath.MIN_LATITUDEb046a491com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LATITUDE4d5b4d53
      description: <p>Latitude in degrees </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.Position(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double,@FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double,double)
  id: MAX_LATITUDE) double,double)
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: Position(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double longitude, @FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double latitude, double elevation)
  nameWithType: Position.Position(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double longitude, @FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double latitude, double elevation)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.Position(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double longitude, @FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double latitude, double elevation)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.Position*
  type: Constructor
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 49
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Construct a new position given latitude longitude, and elevation </p>"
  syntax:
    content: public Position(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double longitude, @FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double latitude, double elevation)
    parameters:
    - id: longitude
      type: 11afe4efcom.microsoft.azure.maps.mapcontrol.MapMath.MIN_LONGITUDEb046a491com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LONGITUDE4d5b4d53
      description: <p>the position's latitude </p>
    - id: latitude
      type: 11afe4efcom.microsoft.azure.maps.mapcontrol.MapMath.MIN_LATITUDEb046a491com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LATITUDE4d5b4d53
      description: <p>the position's longitude </p>
    - id: elevation
      type: a07dcde8
      description: <p>the position's elevation </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.Position(Parcel)
  id: Position(Parcel)
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: Position(Parcel in)
  nameWithType: Position.Position(Parcel in)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.Position(Parcel in)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.Position*
  type: Constructor
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 68
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Constructs a new latitude, longitude, elevation tuple given a parcel. </p>"
  syntax:
    content: protected Position(Parcel in)
    parameters:
    - id: in
      type: 81908ef3
      description: <p>the parcel containing the latitude, longitude, elevation values </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.Position(Position)
  id: Position(Position)
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: Position(Position position)
  nameWithType: Position.Position(Position position)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.Position(Position position)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.Position*
  type: Constructor
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 58
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Clones a position: Construct a new latitude, longitude, elevation point given an existing position. </p>"
  syntax:
    content: public Position(Position position)
    parameters:
    - id: position
      type: com.microsoft.azure.maps.mapcontrol.data.Position
      description: <p>The position to be cloned </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.setElevation(double)
  id: setElevation(double)
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: setElevation(double elevation)
  nameWithType: Position.setElevation(double elevation)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.setElevation(double elevation)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.setElevation*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 124
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Set the elevation, in meters. </p>"
  syntax:
    content: public void setElevation(double elevation)
    parameters:
    - id: elevation
      type: a07dcde8
      description: <p>the altitude in meters </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.setLatitude(@FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double)
  id: MAX_LATITUDE) double)
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: setLatitude( @FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double latitude)
  nameWithType: Position.setLatitude( @FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double latitude)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.setLatitude( @FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double latitude)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.setLatitude*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 107
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Set the latitude, in degrees. This value is in the range of [-90, 90] </p>"
  syntax:
    content: public void setLatitude( @FloatRange(from=MapMath.MIN_LATITUDE, to=MapMath.MAX_LATITUDE) double latitude)
    parameters:
    - id: latitude
      type: 11afe4efcom.microsoft.azure.maps.mapcontrol.MapMath.MIN_LATITUDEb046a491com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LATITUDE4d5b4d53
      description: <p>the latitude value in degrees </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.setLongitude(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double)
  id: MAX_LONGITUDE) double)
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: setLongitude(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double longitude)
  nameWithType: Position.setLongitude(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double longitude)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.setLongitude(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double longitude)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.setLongitude*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 88
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Set the longitude, in degrees. This value is in the range of [-180, 180] </p>"
  syntax:
    content: public void setLongitude(@FloatRange(from=MapMath.MIN_LONGITUDE, to=MapMath.MAX_LONGITUDE) double longitude)
    parameters:
    - id: longitude
      type: 11afe4efcom.microsoft.azure.maps.mapcontrol.MapMath.MIN_LONGITUDEb046a491com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LONGITUDE4d5b4d53
      description: <p>the longitude value in degrees </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinates()
  id: toCoordinates()
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: toCoordinates()
  nameWithType: Position.toCoordinates()
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinates()
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinates*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 240
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Generates an array that has the format [lng, lat] or [lng, lat, elv] from this Position object </p>"
  syntax:
    content: public double [] toCoordinates()
    return:
      type: 95b4502f
      description: <p>An array that contains latitude/longitude information in the format; [lng, lat] or [lng, lat, elv] </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinates(Position)
  id: toCoordinates(Position)
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: toCoordinates(Position p)
  nameWithType: Position.toCoordinates(Position p)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinates(Position p)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinates*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 266
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Generates an array that has the format: [lng, lat] or [lng, lat, elv] from Position object </p>"
  syntax:
    content: public static double [] toCoordinates(Position p)
    parameters:
    - id: p
      type: com.microsoft.azure.maps.mapcontrol.data.Position
      description: <p>A Position object that represents the provided long, lat, elevation information. </p>
    return:
      type: 95b4502f
      description: <p>An array that contains latitude/longitude information in the format; [lng, lat] or [lng, lat, elv] </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinatesArray(Position [])
  id: toCoordinatesArray(Position [])
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: toCoordinatesArray(Position[] positions)
  nameWithType: Position.toCoordinatesArray(Position[] positions)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinatesArray(Position[] positions)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinatesArray*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 296
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Converts an array of positions that contain coordinate information into an array of lat, longs, elevations. Each object is either an array in the format: [lng, lat, elv], or an object with the any combination of the following properties: Longitude Latitude Elevation </p>"
  syntax:
    content: public static double [][] toCoordinatesArray(Position[] positions)
    parameters:
    - id: positions
      type: com.microsoft.azure.maps.mapcontrol.data.Positione5b41c5f
      description: <p>position objects that contain lng, lat, elevation info </p>
    return:
      type: 112add0a
      description: <p>An array of Position objects that contain all the provided coordinate information. </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.toString()
  id: toString()
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: toString()
  nameWithType: Position.toString()
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.toString()
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.toString*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 196
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Returns a string representation of the object. </p>"
  syntax:
    content: public String toString()
    return:
      type: "26831127"
      description: <p>the string representation </p>
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.writeToParcel(@NonNull Parcel,int)
  id: writeToParcel(@NonNull Parcel,int)
  parent: com.microsoft.azure.maps.mapcontrol.data.Position
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  langs:
  - java
  name: writeToParcel(@NonNull Parcel out, int flags)
  nameWithType: Position.writeToParcel(@NonNull Parcel out, int flags)
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.writeToParcel(@NonNull Parcel out, int flags)
  overload: com.microsoft.azure.maps.mapcontrol.data.Position.writeToParcel*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/data/Position.java
    startLine: 212
  package: com.microsoft.azure.maps.mapcontrol.data
  summary: "<p>Flatten this object in to a Parcel.</p>\r\n<p></p>"
  syntax:
    content: public void writeToParcel(@NonNull Parcel out, int flags)
    parameters:
    - id: out
      type: b46b1d42
      description: <p>The Parcel in which the object should be written. </p>
    - id: flags
      type: f75371fa
      description: <p>Additional flags about how the object should be written </p>
references:
- uid: 3bf43c8ecom.microsoft.azure.maps.mapcontrol.data.Positiona08ddfce
  spec.java:
  - name: final Parcelable.Creator<
    fullName: final Parcelable.Creator<
  - uid: com.microsoft.azure.maps.mapcontrol.data.Position
    name: Position
    fullName: com.microsoft.azure.maps.mapcontrol.data.Position
    href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  - name: '>'
    fullName: '>'
- uid: 11afe4efcom.microsoft.azure.maps.mapcontrol.MapMath.MIN_LONGITUDEb046a491com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LONGITUDE4d5b4d53
  spec.java:
  - name: '@FloatRange(from='
    fullName: '@FloatRange(from='
  - uid: com.microsoft.azure.maps.mapcontrol.MapMath.MIN_LONGITUDE
    name: MIN_LONGITUDE
    fullName: com.microsoft.azure.maps.mapcontrol.MapMath.MIN_LONGITUDE
    href: com.microsoft.azure.maps.mapcontrol.MapMath.yml
  - name: ', to='
    fullName: ', to='
  - uid: com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LONGITUDE
    name: MAX_LONGITUDE
    fullName: com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LONGITUDE
    href: com.microsoft.azure.maps.mapcontrol.MapMath.yml
  - name: ) double
    fullName: ) double
- uid: 11afe4efcom.microsoft.azure.maps.mapcontrol.MapMath.MIN_LATITUDEb046a491com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LATITUDE4d5b4d53
  spec.java:
  - name: '@FloatRange(from='
    fullName: '@FloatRange(from='
  - uid: com.microsoft.azure.maps.mapcontrol.MapMath.MIN_LATITUDE
    name: MIN_LATITUDE
    fullName: com.microsoft.azure.maps.mapcontrol.MapMath.MIN_LATITUDE
    href: com.microsoft.azure.maps.mapcontrol.MapMath.yml
  - name: ', to='
    fullName: ', to='
  - uid: com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LATITUDE
    name: MAX_LATITUDE
    fullName: com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LATITUDE
    href: com.microsoft.azure.maps.mapcontrol.MapMath.yml
  - name: ) double
    fullName: ) double
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.Position*
  name: Position
  nameWithType: Position.Position
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.Position
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: a07dcde8
  spec.java:
  - name: double
    fullName: double
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.getLongitude*
  name: getLongitude
  nameWithType: Position.getLongitude
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.getLongitude
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.setLongitude*
  name: setLongitude
  nameWithType: Position.setLongitude
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.setLongitude
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.getLatitude*
  name: getLatitude
  nameWithType: Position.getLatitude
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.getLatitude
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.setLatitude*
  name: setLatitude
  nameWithType: Position.setLatitude
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.setLatitude
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.getElevation*
  name: getElevation
  nameWithType: Position.getElevation
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.getElevation
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.setElevation*
  name: setElevation
  nameWithType: Position.setElevation
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.setElevation
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.hashCode*
  name: hashCode
  nameWithType: Position.hashCode
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.hashCode
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.toString*
  name: toString
  nameWithType: Position.toString
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.toString
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.describeContents*
  name: describeContents
  nameWithType: Position.describeContents
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.describeContents
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: b46b1d42
  spec.java:
  - name: '@NonNull Parcel'
    fullName: '@NonNull Parcel'
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.writeToParcel*
  name: writeToParcel
  nameWithType: Position.writeToParcel
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.writeToParcel
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: 95b4502f
  spec.java:
  - name: double []
    fullName: double []
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinates*
  name: toCoordinates
  nameWithType: Position.toCoordinates
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinates
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: 81908ef3
  spec.java:
  - name: Parcel
    fullName: Parcel
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.areEqual*
  name: areEqual
  nameWithType: Position.areEqual
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.areEqual
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.fromLatLng*
  name: fromLatLng
  nameWithType: Position.fromLatLng
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.fromLatLng
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: com.microsoft.azure.maps.mapcontrol.data.Positione5b41c5f
  spec.java:
  - uid: com.microsoft.azure.maps.mapcontrol.data.Position
    name: Position
    fullName: com.microsoft.azure.maps.mapcontrol.data.Position
    href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  - name: " []"
    fullName: " []"
- uid: 112add0a
  spec.java:
  - name: double [][]
    fullName: double [][]
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinatesArray*
  name: toCoordinatesArray
  nameWithType: Position.toCoordinatesArray
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.toCoordinatesArray
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: com.microsoft.azure.maps.mapcontrol.data.Position.fromLatLngs*
  name: fromLatLngs
  nameWithType: Position.fromLatLngs
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position.fromLatLngs
  package: com.microsoft.azure.maps.mapcontrol.data
- uid: com.microsoft.azure.maps.mapcontrol.data.Position
  parent: com.microsoft.azure.maps.mapcontrol.data
  href: com.microsoft.azure.maps.mapcontrol.data.Position.yml
  name: Position
  nameWithType: Position
  fullName: com.microsoft.azure.maps.mapcontrol.data.Position
  type: Class
  summary: "<p>A GeoJSON Position object - an array that specifies the longitude and latitude of a location. The full description is detailed in [RFC 7946]<xref uid=\"\" data-throw-if-not-resolved=\"false\">https://tools.ietf.org/html/rfc7946#section-3.1.1</xref>. </p>"
  syntax: *o1
- uid: com.microsoft.azure.maps.mapcontrol.MapMath.MIN_LONGITUDE
  parent: com.microsoft.azure.maps.mapcontrol.MapMath
  href: com.microsoft.azure.maps.mapcontrol.MapMath.yml
  name: MIN_LONGITUDE
  nameWithType: MapMath.MIN_LONGITUDE
  fullName: com.microsoft.azure.maps.mapcontrol.MapMath.MIN_LONGITUDE
  type: Field
  summary: "<p>Minimum Longitude in degrees </p>"
  syntax:
    content: public static final double MIN_LONGITUDE= -180.0
    return:
      type: bc185a0c
- uid: com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LONGITUDE
  parent: com.microsoft.azure.maps.mapcontrol.MapMath
  href: com.microsoft.azure.maps.mapcontrol.MapMath.yml
  name: MAX_LONGITUDE
  nameWithType: MapMath.MAX_LONGITUDE
  fullName: com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LONGITUDE
  type: Field
  summary: "<p>Max Longitude in degrees </p>"
  syntax:
    content: public static final double MAX_LONGITUDE= 180.0
    return:
      type: bc185a0c
- uid: com.microsoft.azure.maps.mapcontrol.MapMath.MIN_LATITUDE
  parent: com.microsoft.azure.maps.mapcontrol.MapMath
  href: com.microsoft.azure.maps.mapcontrol.MapMath.yml
  name: MIN_LATITUDE
  nameWithType: MapMath.MIN_LATITUDE
  fullName: com.microsoft.azure.maps.mapcontrol.MapMath.MIN_LATITUDE
  type: Field
  summary: "<p>Minimum Latitude in degrees </p>"
  syntax:
    content: public static final double MIN_LATITUDE= -90.0
    return:
      type: bc185a0c
- uid: com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LATITUDE
  parent: com.microsoft.azure.maps.mapcontrol.MapMath
  href: com.microsoft.azure.maps.mapcontrol.MapMath.yml
  name: MAX_LATITUDE
  nameWithType: MapMath.MAX_LATITUDE
  fullName: com.microsoft.azure.maps.mapcontrol.MapMath.MAX_LATITUDE
  type: Field
  summary: "<p>Max Latitude in degrees </p>"
  syntax:
    content: public static final double MAX_LATITUDE= 90.0
    return:
      type: bc185a0c
