### YamlMime:JavaMember
uid: "com.azure.resourcemanager.servicebus.models.AuthorizationRule.regenerateKeyAsync*"
fullName: "com.azure.resourcemanager.servicebus.models.AuthorizationRule<RuleT>.regenerateKeyAsync"
name: "regenerateKeyAsync"
nameWithType: "AuthorizationRule<RuleT>.regenerateKeyAsync"
members:
- uid: "com.azure.resourcemanager.servicebus.models.AuthorizationRule.regenerateKeyAsync(com.azure.resourcemanager.servicebus.models.KeyType)"
  fullName: "com.azure.resourcemanager.servicebus.models.AuthorizationRule<RuleT>.regenerateKeyAsync(KeyType keyType)"
  name: "regenerateKeyAsync(KeyType keyType)"
  nameWithType: "AuthorizationRule<RuleT>.regenerateKeyAsync(KeyType keyType)"
  summary: "Regenerates primary or secondary keys."
  parameters:
  - description: "the type for the key to regenerate"
    name: "keyType"
    type: "<xref href=\"com.azure.resourcemanager.servicebus.models.KeyType?alt=com.azure.resourcemanager.servicebus.models.KeyType&text=KeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<AuthorizationKeys> regenerateKeyAsync(KeyType keyType)"
  returns:
    description: "a representation of the deferred computation of this call,\n returning the primary, secondary keys and the connection strings"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.servicebus.models.AuthorizationKeys?alt=com.azure.resourcemanager.servicebus.models.AuthorizationKeys&text=AuthorizationKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.servicebus.models.AuthorizationRule.regenerateKeyAsync(com.azure.resourcemanager.servicebus.models.RegenerateAccessKeyParameters)"
  fullName: "com.azure.resourcemanager.servicebus.models.AuthorizationRule<RuleT>.regenerateKeyAsync(RegenerateAccessKeyParameters regenerateAccessKeyParameters)"
  name: "regenerateKeyAsync(RegenerateAccessKeyParameters regenerateAccessKeyParameters)"
  nameWithType: "AuthorizationRule<RuleT>.regenerateKeyAsync(RegenerateAccessKeyParameters regenerateAccessKeyParameters)"
  summary: "Regenerates primary or secondary keys."
  parameters:
  - description: "the parameters for the key to regenerate"
    name: "regenerateAccessKeyParameters"
    type: "<xref href=\"com.azure.resourcemanager.servicebus.models.RegenerateAccessKeyParameters?alt=com.azure.resourcemanager.servicebus.models.RegenerateAccessKeyParameters&text=RegenerateAccessKeyParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<AuthorizationKeys> regenerateKeyAsync(RegenerateAccessKeyParameters regenerateAccessKeyParameters)"
  returns:
    description: "a representation of the deferred computation of this call,\n returning the primary, secondary keys and the connection strings"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.servicebus.models.AuthorizationKeys?alt=com.azure.resourcemanager.servicebus.models.AuthorizationKeys&text=AuthorizationKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.servicebus.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicebus:2.4.0
