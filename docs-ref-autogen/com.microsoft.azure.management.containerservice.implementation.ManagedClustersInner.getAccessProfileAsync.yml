### YamlMime:JavaMember
nameWithType: ManagedClustersInner.getAccessProfileAsync
type: method
members:
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName)
  name: getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName)
  nameWithType: ManagedClustersInner.getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the role for managed cluster accessProfile resource. </p>
    name: roleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterAccessProfileInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner&text=ManagedClusterAccessProfileInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets an access profile of a managed cluster. Gets the accessProfile for the specified role name of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<ManagedClusterAccessProfileInner> getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfileAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName, final ServiceCallback<ManagedClusterAccessProfileInner> serviceCallback)
  name: getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName, final ServiceCallback<ManagedClusterAccessProfileInner> serviceCallback)
  nameWithType: ManagedClustersInner.getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName, final ServiceCallback<ManagedClusterAccessProfileInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the role for managed cluster accessProfile resource. </p>
    name: roleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner&text=ManagedClusterAccessProfileInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner&text=ManagedClusterAccessProfileInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets an access profile of a managed cluster. Gets the accessProfile for the specified role name of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public ServiceFuture<ManagedClusterAccessProfileInner> getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName, final ServiceCallback<ManagedClusterAccessProfileInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfileAsync(String,String,String,final ServiceCallback<ManagedClusterAccessProfileInner>)
uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfileAsync*
fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName)
name: getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName)
package: com.microsoft.azure.management.containerservice.implementation
metadata: {}
