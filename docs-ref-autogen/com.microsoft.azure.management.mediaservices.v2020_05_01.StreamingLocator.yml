### YamlMime:JavaType
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator"
name: "StreamingLocator"
nameWithType: "StreamingLocator"
summary: "Type representing Streaming<wbr>Locator."
syntax: "public interface StreamingLocator extends HasInner<StreamingLocatorInner>, Indexable, Refreshable<StreamingLocator>, Updatable<StreamingLocator.Update>, HasManager<MediaManager>"
methods:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.alternativeMediaId()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.alternativeMediaId()"
  name: "alternativeMediaId()"
  nameWithType: "StreamingLocator.alternativeMediaId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String alternativeMediaId()"
  returns:
    description: "the alternativeMediaId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.assetName()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.assetName()"
  name: "assetName()"
  nameWithType: "StreamingLocator.assetName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String assetName()"
  returns:
    description: "the assetName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.contentKeys()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.contentKeys()"
  name: "contentKeys()"
  nameWithType: "StreamingLocator.contentKeys()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<StreamingLocatorContentKey> contentKeys()"
  returns:
    description: "the contentKeys value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocatorContentKey?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocatorContentKey&text=StreamingLocatorContentKey\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.created()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.created()"
  name: "created()"
  nameWithType: "StreamingLocator.created()"
  modifiers:
  - "abstract"
  syntax: "public abstract DateTime created()"
  returns:
    description: "the created value."
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.defaultContentKeyPolicyName()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.defaultContentKeyPolicyName()"
  name: "defaultContentKeyPolicyName()"
  nameWithType: "StreamingLocator.defaultContentKeyPolicyName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String defaultContentKeyPolicyName()"
  returns:
    description: "the defaultContentKeyPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.endTime()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.endTime()"
  name: "endTime()"
  nameWithType: "StreamingLocator.endTime()"
  modifiers:
  - "abstract"
  syntax: "public abstract DateTime endTime()"
  returns:
    description: "the endTime value."
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.filters()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.filters()"
  name: "filters()"
  nameWithType: "StreamingLocator.filters()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<String> filters()"
  returns:
    description: "the filters value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.id()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.id()"
  name: "id()"
  nameWithType: "StreamingLocator.id()"
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.name()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.name()"
  name: "name()"
  nameWithType: "StreamingLocator.name()"
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.startTime()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.startTime()"
  name: "startTime()"
  nameWithType: "StreamingLocator.startTime()"
  modifiers:
  - "abstract"
  syntax: "public abstract DateTime startTime()"
  returns:
    description: "the startTime value."
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.streamingLocatorId()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.streamingLocatorId()"
  name: "streamingLocatorId()"
  nameWithType: "StreamingLocator.streamingLocatorId()"
  modifiers:
  - "abstract"
  syntax: "public abstract UUID streamingLocatorId()"
  returns:
    description: "the streamingLocatorId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.streamingPolicyName()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.streamingPolicyName()"
  name: "streamingPolicyName()"
  nameWithType: "StreamingLocator.streamingPolicyName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String streamingPolicyName()"
  returns:
    description: "the streamingPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.type()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.type()"
  name: "type()"
  nameWithType: "StreamingLocator.type()"
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Type representing StreamingLocator."
implements:
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.StreamingLocatorInner?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.StreamingLocatorInner&text=StreamingLocatorInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.Indexable?alt=com.microsoft.azure.arm.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.arm.model.Refreshable?alt=com.microsoft.azure.arm.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator&text=StreamingLocator\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.Updatable?alt=com.microsoft.azure.arm.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.Update?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingLocator.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.resources.models.HasManager?alt=com.microsoft.azure.arm.resources.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.MediaManager?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.MediaManager&text=MediaManager\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
