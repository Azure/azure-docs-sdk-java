### YamlMime:JavaType
uid: "com.azure.resourcemanager.containerinstance.models.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume"
fullName: "com.azure.resourcemanager.containerinstance.models.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume"
name: "ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume"
nameWithType: "ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume"
summary: "The stage of the container group definition allowing to specify a private image registry or a volume."
syntax: "public static interface ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume extends ContainerGroup.DefinitionStages.WithPrivateImageRegistry"
methods:
- "com.azure.resourcemanager.containerinstance.models.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.defineVolume(java.lang.String)"
- "com.azure.resourcemanager.containerinstance.models.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withEmptyDirectoryVolume(java.lang.String)"
- "com.azure.resourcemanager.containerinstance.models.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withNewAzureFileShareVolume(java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.containerinstance.models.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withoutVolume()"
type: "interface"
implements:
- "<xref href=\"com.azure.resourcemanager.containerinstance.models.ContainerGroup.DefinitionStages.WithPrivateImageRegistry?alt=com.azure.resourcemanager.containerinstance.models.ContainerGroup.DefinitionStages.WithPrivateImageRegistry&text=WithPrivateImageRegistry\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.containerinstance.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerinstance:2.1.0
