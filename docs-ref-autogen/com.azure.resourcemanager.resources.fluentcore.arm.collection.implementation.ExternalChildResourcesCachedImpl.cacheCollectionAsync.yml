### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ExternalChildResourcesCachedImpl.cacheCollectionAsync*"
fullName: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ExternalChildResourcesCachedImpl<FluentModelTImpl,FluentModelT,InnerModelT,ParentImplT,ParentT>.cacheCollectionAsync"
name: "cacheCollectionAsync"
nameWithType: "ExternalChildResourcesCachedImpl<FluentModelTImpl,FluentModelT,InnerModelT,ParentImplT,ParentT>.cacheCollectionAsync"
members:
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ExternalChildResourcesCachedImpl.cacheCollectionAsync()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ExternalChildResourcesCachedImpl<FluentModelTImpl,FluentModelT,InnerModelT,ParentImplT,ParentT>.cacheCollectionAsync()"
  name: "cacheCollectionAsync()"
  nameWithType: "ExternalChildResourcesCachedImpl<FluentModelTImpl,FluentModelT,InnerModelT,ParentImplT,ParentT>.cacheCollectionAsync()"
  summary: "Initializes the external child resource collection."
  syntax: "protected Mono<Void> cacheCollectionAsync()"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
