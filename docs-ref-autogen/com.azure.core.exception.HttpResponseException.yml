### YamlMime:ManagedReference
items:
- uid: "com.azure.core.exception.HttpResponseException"
  id: "HttpResponseException"
  parent: "com.azure.core.exception"
  children:
  - "com.azure.core.exception.HttpResponseException.HttpResponseException(java.lang.String,com.azure.core.http.HttpResponse)"
  - "com.azure.core.exception.HttpResponseException.HttpResponseException(java.lang.String,com.azure.core.http.HttpResponse,java.lang.Object)"
  - "com.azure.core.exception.HttpResponseException.HttpResponseException(java.lang.String,com.azure.core.http.HttpResponse,java.lang.Throwable)"
  - "com.azure.core.exception.HttpResponseException.getResponse()"
  - "com.azure.core.exception.HttpResponseException.getValue()"
  langs:
  - "java"
  name: "HttpResponseException"
  nameWithType: "HttpResponseException"
  fullName: "com.azure.core.exception.HttpResponseException"
  type: "Class"
  package: "com.azure.core.exception"
  summary: "The exception thrown when an unsuccessful response is received with http status code (e.g. 3XX, 4XX, 5XX) from the service request."
  syntax:
    content: "public class HttpResponseException extends AzureException"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Throwable"
  - "java.lang.Exception"
  - "java.lang.RuntimeException"
  - "com.azure.core.exception.AzureException"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
  - "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
  - "java.lang.Throwable.fillInStackTrace()"
  - "java.lang.Throwable.getCause()"
  - "java.lang.Throwable.getLocalizedMessage()"
  - "java.lang.Throwable.getMessage()"
  - "java.lang.Throwable.getStackTrace()"
  - "java.lang.Throwable.getSuppressed()"
  - "java.lang.Throwable.initCause(java.lang.Throwable)"
  - "java.lang.Throwable.printStackTrace()"
  - "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
  - "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
  - "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
  - "java.lang.Throwable.toString()"
- uid: "com.azure.core.exception.HttpResponseException.HttpResponseException(java.lang.String,com.azure.core.http.HttpResponse)"
  id: "HttpResponseException(java.lang.String,com.azure.core.http.HttpResponse)"
  parent: "com.azure.core.exception.HttpResponseException"
  langs:
  - "java"
  name: "HttpResponseException(String message, HttpResponse response)"
  nameWithType: "HttpResponseException.HttpResponseException(String message, HttpResponse response)"
  fullName: "com.azure.core.exception.HttpResponseException.HttpResponseException(String message, HttpResponse response)"
  overload: "com.azure.core.exception.HttpResponseException.HttpResponseException*"
  type: "Constructor"
  package: "com.azure.core.exception"
  summary: "Initializes a new instance of the <xref uid=\"com.azure.core.exception.HttpResponseException\" data-throw-if-not-resolved=\"false\">HttpResponseException</xref> class."
  syntax:
    content: "public HttpResponseException(String message, HttpResponse response)"
    parameters:
    - id: "message"
      type: "java.lang.String"
      description: "The exception message or the response content if a message is not available."
    - id: "response"
      type: "com.azure.core.http.HttpResponse"
      description: "The HTTP response associated with this exception."
- uid: "com.azure.core.exception.HttpResponseException.HttpResponseException(java.lang.String,com.azure.core.http.HttpResponse,java.lang.Object)"
  id: "HttpResponseException(java.lang.String,com.azure.core.http.HttpResponse,java.lang.Object)"
  parent: "com.azure.core.exception.HttpResponseException"
  langs:
  - "java"
  name: "HttpResponseException(String message, HttpResponse response, Object value)"
  nameWithType: "HttpResponseException.HttpResponseException(String message, HttpResponse response, Object value)"
  fullName: "com.azure.core.exception.HttpResponseException.HttpResponseException(String message, HttpResponse response, Object value)"
  overload: "com.azure.core.exception.HttpResponseException.HttpResponseException*"
  type: "Constructor"
  package: "com.azure.core.exception"
  summary: "Initializes a new instance of the <xref uid=\"com.azure.core.exception.HttpResponseException\" data-throw-if-not-resolved=\"false\">HttpResponseException</xref> class."
  syntax:
    content: "public HttpResponseException(String message, HttpResponse response, Object value)"
    parameters:
    - id: "message"
      type: "java.lang.String"
      description: "The exception message or the response content if a message is not available."
    - id: "response"
      type: "com.azure.core.http.HttpResponse"
      description: "The HTTP response associated with this exception."
    - id: "value"
      type: "java.lang.Object"
      description: "The deserialized response value."
- uid: "com.azure.core.exception.HttpResponseException.HttpResponseException(java.lang.String,com.azure.core.http.HttpResponse,java.lang.Throwable)"
  id: "HttpResponseException(java.lang.String,com.azure.core.http.HttpResponse,java.lang.Throwable)"
  parent: "com.azure.core.exception.HttpResponseException"
  langs:
  - "java"
  name: "HttpResponseException(String message, HttpResponse response, Throwable cause)"
  nameWithType: "HttpResponseException.HttpResponseException(String message, HttpResponse response, Throwable cause)"
  fullName: "com.azure.core.exception.HttpResponseException.HttpResponseException(String message, HttpResponse response, Throwable cause)"
  overload: "com.azure.core.exception.HttpResponseException.HttpResponseException*"
  type: "Constructor"
  package: "com.azure.core.exception"
  summary: "Initializes a new instance of the <xref uid=\"com.azure.core.exception.HttpResponseException\" data-throw-if-not-resolved=\"false\">HttpResponseException</xref> class."
  syntax:
    content: "public HttpResponseException(String message, HttpResponse response, Throwable cause)"
    parameters:
    - id: "message"
      type: "java.lang.String"
      description: "The exception message or the response content if a message is not available."
    - id: "response"
      type: "com.azure.core.http.HttpResponse"
      description: "The HTTP response associated with this exception."
    - id: "cause"
      type: "java.lang.Throwable"
      description: "The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Throwable</xref> which caused the creation of this exception."
- uid: "com.azure.core.exception.HttpResponseException.getResponse()"
  id: "getResponse()"
  parent: "com.azure.core.exception.HttpResponseException"
  langs:
  - "java"
  name: "getResponse()"
  nameWithType: "HttpResponseException.getResponse()"
  fullName: "com.azure.core.exception.HttpResponseException.getResponse()"
  overload: "com.azure.core.exception.HttpResponseException.getResponse*"
  type: "Method"
  package: "com.azure.core.exception"
  summary: "Gets the associated HTTP response that caused the exception."
  syntax:
    content: "public HttpResponse getResponse()"
    return:
      type: "com.azure.core.http.HttpResponse"
      description: "Gets the associated HTTP response."
- uid: "com.azure.core.exception.HttpResponseException.getValue()"
  id: "getValue()"
  parent: "com.azure.core.exception.HttpResponseException"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "HttpResponseException.getValue()"
  fullName: "com.azure.core.exception.HttpResponseException.getValue()"
  overload: "com.azure.core.exception.HttpResponseException.getValue*"
  type: "Method"
  package: "com.azure.core.exception"
  summary: "Gets the deserialized HTTP response value."
  syntax:
    content: "public Object getValue()"
    return:
      type: "java.lang.Object"
      description: "The deserialized HTTP response value."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.http.HttpResponse"
  name: "HttpResponse"
  nameWithType: "HttpResponse"
  fullName: "com.azure.core.http.HttpResponse"
- uid: "com.azure.core.exception.HttpResponseException.HttpResponseException*"
  name: "HttpResponseException"
  nameWithType: "HttpResponseException.HttpResponseException"
  fullName: "com.azure.core.exception.HttpResponseException.HttpResponseException"
  package: "com.azure.core.exception"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "java.lang.Throwable"
  spec.java:
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
- uid: "com.azure.core.exception.HttpResponseException.getResponse*"
  name: "getResponse"
  nameWithType: "HttpResponseException.getResponse"
  fullName: "com.azure.core.exception.HttpResponseException.getResponse"
  package: "com.azure.core.exception"
- uid: "com.azure.core.exception.HttpResponseException.getValue*"
  name: "getValue"
  nameWithType: "HttpResponseException.getValue"
  fullName: "com.azure.core.exception.HttpResponseException.getValue"
  package: "com.azure.core.exception"
- uid: "com.azure.core.exception.AzureException"
  name: "AzureException"
  nameWithType: "AzureException"
  fullName: "com.azure.core.exception.AzureException"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
  name: "Throwable.printStackTrace(PrintWriter)"
  nameWithType: "Throwable.printStackTrace(PrintWriter)"
  fullName: "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
- uid: "java.lang.Throwable.getCause()"
  name: "Throwable.getCause()"
  nameWithType: "Throwable.getCause()"
  fullName: "java.lang.Throwable.getCause()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
  name: "Throwable.addSuppressed(Throwable)"
  nameWithType: "Throwable.addSuppressed(Throwable)"
  fullName: "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
- uid: "java.lang.Throwable.fillInStackTrace()"
  name: "Throwable.fillInStackTrace()"
  nameWithType: "Throwable.fillInStackTrace()"
  fullName: "java.lang.Throwable.fillInStackTrace()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Throwable.initCause(java.lang.Throwable)"
  name: "Throwable.initCause(Throwable)"
  nameWithType: "Throwable.initCause(Throwable)"
  fullName: "java.lang.Throwable.initCause(java.lang.Throwable)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
  name: "Throwable.setStackTrace(StackTraceElement[])"
  nameWithType: "Throwable.setStackTrace(StackTraceElement[])"
  fullName: "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
- uid: "java.lang.Throwable.toString()"
  name: "Throwable.toString()"
  nameWithType: "Throwable.toString()"
  fullName: "java.lang.Throwable.toString()"
- uid: "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
  name: "Throwable.printStackTrace(PrintStream)"
  nameWithType: "Throwable.printStackTrace(PrintStream)"
  fullName: "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
- uid: "java.lang.Throwable.getMessage()"
  name: "Throwable.getMessage()"
  nameWithType: "Throwable.getMessage()"
  fullName: "java.lang.Throwable.getMessage()"
- uid: "java.lang.Throwable.getSuppressed()"
  name: "Throwable.getSuppressed()"
  nameWithType: "Throwable.getSuppressed()"
  fullName: "java.lang.Throwable.getSuppressed()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Throwable.getStackTrace()"
  name: "Throwable.getStackTrace()"
  nameWithType: "Throwable.getStackTrace()"
  fullName: "java.lang.Throwable.getStackTrace()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Throwable.getLocalizedMessage()"
  name: "Throwable.getLocalizedMessage()"
  nameWithType: "Throwable.getLocalizedMessage()"
  fullName: "java.lang.Throwable.getLocalizedMessage()"
- uid: "java.lang.Throwable.printStackTrace()"
  name: "Throwable.printStackTrace()"
  nameWithType: "Throwable.printStackTrace()"
  fullName: "java.lang.Throwable.printStackTrace()"
