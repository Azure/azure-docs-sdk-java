### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  id: _amqps_iot_hub_connection
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  children:
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.addDeviceOperationSession(DeviceClientConfig)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.AmqpsIotHubConnection(DeviceClientConfig)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.amqpsSessionManager
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.authenticate()
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.close()
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.convertFromProton(AmqpsMessage,DeviceClientConfig)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.convertToProton(com.microsoft.azure.sdk.iot.device.Message)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionBound(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionInit(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionUnbound(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onDelivery(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkFlow(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkInit(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteClose(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteOpen(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorFinal(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorInit(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onTransportError(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.open(Queue<DeviceClientConfig>)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.openLinks()
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessage(com.microsoft.azure.sdk.iot.device.Message)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessageResult(com.microsoft.azure.sdk.iot.device.Message,IotHubMessageResult)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.setListener(IotHubListener)
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: AmqpsIotHubConnection
  nameWithType: AmqpsIotHubConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 31
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>An AMQPS IotHub connection between a device and an IoTHub. This class contains functionality for sending/receiving a message, and logic to re-establish the connection with the IoTHub in case it gets lost. </p>
  syntax: &o1
    content: public class AmqpsIotHubConnection implements IotHubTransportConnection
  inheritance:
  - java.lang.Object
  - BaseHandler
  inheritedMembers:
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.sendMessage(Message)
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.sendMessageResult(Message,IotHubMessageResult)
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.addDeviceOperationSession(DeviceClientConfig)
  id: addDeviceOperationSession(DeviceClientConfig)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: addDeviceOperationSession(DeviceClientConfig deviceClientConfig)
  nameWithType: AmqpsIotHubConnection.addDeviceOperationSession(DeviceClientConfig deviceClientConfig)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.addDeviceOperationSession(DeviceClientConfig deviceClientConfig)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.addDeviceOperationSession*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 149
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Creates a new DeviceOperation using the given configuration..</p>

    <p></p>
  syntax:
    content: public void addDeviceOperationSession(DeviceClientConfig deviceClientConfig)
    parameters:
    - id: deviceClientConfig
      type: com.microsoft.azure.sdk.iot.device._device_client_config
      description: <p>the device configuration to add. </p>
  exceptions:
  - type: 848a9648
    description: <p>if adding the device fails </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.AmqpsIotHubConnection(DeviceClientConfig)
  id: AmqpsIotHubConnection(DeviceClientConfig)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: AmqpsIotHubConnection(DeviceClientConfig config)
  nameWithType: AmqpsIotHubConnection.AmqpsIotHubConnection(DeviceClientConfig config)
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(DeviceClientConfig config)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.AmqpsIotHubConnection*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 77
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Constructor to set up connection parameters using the <xref uid="com.microsoft.azure.sdk.iot.device._device_client_config" data-throw-if-not-resolved="false">DeviceClientConfig</xref>.</p>

    <p></p>
  syntax:
    content: public AmqpsIotHubConnection(DeviceClientConfig config)
    parameters:
    - id: config
      type: com.microsoft.azure.sdk.iot.device._device_client_config
      description: <p>The <xref uid="com.microsoft.azure.sdk.iot.device._device_client_config" data-throw-if-not-resolved="false">DeviceClientConfig</xref> corresponding to the device associated with this <xref uid="com.microsoft.azure.sdk.iot.device._device_client" data-throw-if-not-resolved="false">com.microsoft.azure.sdk.iot.device.DeviceClient</xref>. </p>
  exceptions:
  - type: 848a9648
    description: <p>if failed connecting to iothub. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.amqpsSessionManager
  id: amqpsSessionManager
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: amqpsSessionManager
  nameWithType: AmqpsIotHubConnection.amqpsSessionManager
  fullName: AmqpsSessionManager com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.amqpsSessionManager
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 67
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  syntax:
    content: public AmqpsSessionManager amqpsSessionManager
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_session_manager
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.authenticate()
  id: authenticate()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: authenticate()
  nameWithType: AmqpsIotHubConnection.authenticate()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.authenticate()
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.authenticate*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 262
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Starts the authentication by calling the <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_session_manager" data-throw-if-not-resolved="false">AmqpsSessionManager</xref>. </p>
  syntax:
    content: public void authenticate()
  exceptions:
  - type: 848a9648
    description: <p>if authentication open throws. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: close()
  nameWithType: AmqpsIotHubConnection.close()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.close()
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.close*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 304
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Closes the <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection" data-throw-if-not-resolved="false">AmqpsIotHubConnection</xref>. </p>

    <p>If the current connection is not closed, this function will set the current state to closed and invalidate all connection related variables. </p>

    <p></p>
  syntax:
    content: public void close()
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.close()
  exceptions:
  - type: 848a9648
    description: <p>if it failed closing the iothub connection. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.convertFromProton(AmqpsMessage,DeviceClientConfig)
  id: convertFromProton(AmqpsMessage,DeviceClientConfig)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: convertFromProton(AmqpsMessage amqpsMessage, DeviceClientConfig deviceClientConfig)
  nameWithType: AmqpsIotHubConnection.convertFromProton(AmqpsMessage amqpsMessage, DeviceClientConfig deviceClientConfig)
  fullName: AmqpsConvertFromProtonReturnValue com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.convertFromProton(AmqpsMessage amqpsMessage, DeviceClientConfig deviceClientConfig)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.convertFromProton*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 754
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Calls the <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_session_manager" data-throw-if-not-resolved="false">AmqpsSessionManager</xref> to find the appropriate convertFromProton converter.</p>

    <p></p>
  syntax:
    content: protected AmqpsConvertFromProtonReturnValue convertFromProton(AmqpsMessage amqpsMessage, DeviceClientConfig deviceClientConfig)
    parameters:
    - id: amqpsMessage
      type: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message
      description: <p>the message to convert. </p>
    - id: deviceClientConfig
      type: com.microsoft.azure.sdk.iot.device._device_client_config
      description: <p>the configuration to identify the message. </p>
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_convert_from_proton_return_value
      description: >-
        <p>

          <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_convert_from_proton_return_value" data-throw-if-not-resolved="false">AmqpsConvertFromProtonReturnValue</xref> containing the status and converted message. </p>
  exceptions:
  - type: 848a9648
    description: <p>if conversion fails. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.convertToProton(com.microsoft.azure.sdk.iot.device.Message)
  id: Message)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: convertToProton(com.microsoft.azure.sdk.iot.device.Message message)
  nameWithType: AmqpsIotHubConnection.convertToProton(com.microsoft.azure.sdk.iot.device.Message message)
  fullName: AmqpsConvertToProtonReturnValue com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.convertToProton(com.microsoft.azure.sdk.iot.device.Message message)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.convertToProton*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 738
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Calls the <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_session_manager" data-throw-if-not-resolved="false">AmqpsSessionManager</xref> to find the appropriate convertToProton converter.</p>

    <p></p>
  syntax:
    content: protected AmqpsConvertToProtonReturnValue convertToProton(com.microsoft.azure.sdk.iot.device.Message message)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to convert. </p>
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_convert_to_proton_return_value
      description: >-
        <p>

          <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_convert_to_proton_return_value" data-throw-if-not-resolved="false">AmqpsConvertToProtonReturnValue</xref> containing the status and converted message. </p>
  exceptions:
  - type: 848a9648
    description: <p>if conversion fails. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionBound(Event)
  id: onConnectionBound(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onConnectionBound(Event event)
  nameWithType: AmqpsIotHubConnection.onConnectionBound(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionBound(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionBound*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 491
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the connection bound event. Sets Sasl authentication and proper authentication mode. </p>
  syntax:
    content: public void onConnectionBound(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionInit(Event)
  id: onConnectionInit(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onConnectionInit(Event event)
  nameWithType: AmqpsIotHubConnection.onConnectionInit(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionInit(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionInit*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 462
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the connection init event </p>
  syntax:
    content: public void onConnectionInit(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionUnbound(Event)
  id: onConnectionUnbound(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onConnectionUnbound(Event event)
  nameWithType: AmqpsIotHubConnection.onConnectionUnbound(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionUnbound(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionUnbound*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 526
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the connection unbound event. Sets the connection state to DISCONNECTED. </p>
  syntax:
    content: public void onConnectionUnbound(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onDelivery(Event)
  id: onDelivery(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onDelivery(Event event)
  nameWithType: AmqpsIotHubConnection.onDelivery(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onDelivery(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onDelivery*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 541
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the delivery event. This method handles both sending and receiving a message. </p>
  syntax:
    content: public void onDelivery(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkFlow(Event)
  id: onLinkFlow(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onLinkFlow(Event event)
  nameWithType: AmqpsIotHubConnection.onLinkFlow(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkFlow(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkFlow*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 649
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the link flow event. Handles sending a single message. </p>
  syntax:
    content: public void onLinkFlow(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkInit(Event)
  id: onLinkInit(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onLinkInit(Event event)
  nameWithType: AmqpsIotHubConnection.onLinkInit(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkInit(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkInit*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 622
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the link init event. Sets the proper target address on the link. </p>
  syntax:
    content: public void onLinkInit(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteClose(Event)
  id: onLinkRemoteClose(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onLinkRemoteClose(Event event)
  nameWithType: AmqpsIotHubConnection.onLinkRemoteClose(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkRemoteClose(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteClose*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 689
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the link remote close event. This triggers reconnection attempts until successful. Both sender and receiver links closing trigger this event, so we only handle one of them, since the other is redundant. </p>
  syntax:
    content: public void onLinkRemoteClose(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteOpen(Event)
  id: onLinkRemoteOpen(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onLinkRemoteOpen(Event event)
  nameWithType: AmqpsIotHubConnection.onLinkRemoteOpen(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkRemoteOpen(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteOpen*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 666
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the link remote open event. This signifies that the <xref uid="" data-throw-if-not-resolved="false">org.apache.qpid.proton.reactor.Reactor</xref> is ready, so we set the connection to CONNECTED. </p>
  syntax:
    content: public void onLinkRemoteOpen(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorFinal(Event)
  id: onReactorFinal(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onReactorFinal(Event event)
  nameWithType: AmqpsIotHubConnection.onReactorFinal(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorFinal(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorFinal*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 444
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for reactor final event. Releases the close lock. If reconnection has been set starts the reconnection by calling openAsync() </p>
  syntax:
    content: public void onReactorFinal(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>Proton Event object </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorInit(Event)
  id: onReactorInit(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onReactorInit(Event event)
  nameWithType: AmqpsIotHubConnection.onReactorInit(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorInit(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorInit*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 421
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for reactor init event. </p>
  syntax:
    content: public void onReactorInit(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>Proton Event object </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onTransportError(Event)
  id: onTransportError(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onTransportError(Event event)
  nameWithType: AmqpsIotHubConnection.onTransportError(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTransportError(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onTransportError*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 712
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the transport error event. This triggers reconnection attempts until successful. </p>
  syntax:
    content: public void onTransportError(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.open(Queue<DeviceClientConfig>)
  id: open(Queue<DeviceClientConfig>)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: open(Queue<DeviceClientConfig> deviceClientConfigs)
  nameWithType: AmqpsIotHubConnection.open(Queue<DeviceClientConfig> deviceClientConfigs)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.open(Queue<DeviceClientConfig> deviceClientConfigs)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.open*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 172
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Opens the <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection" data-throw-if-not-resolved="false">AmqpsIotHubConnection</xref>. </p>

    <p>This method will start the <xref uid="" data-throw-if-not-resolved="false">Reactor</xref>, set the connection to open and make it ready for sending. </p>

    <p>Do not call this method after calling close on this object, instead, create a whole new <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection" data-throw-if-not-resolved="false">AmqpsIotHubConnection</xref> object and open that instead. </p>

    <p></p>
  syntax:
    content: public void open(Queue<DeviceClientConfig> deviceClientConfigs)
    parameters:
    - id: deviceClientConfigs
      type: 20d61ca6com.microsoft.azure.sdk.iot.device._device_client_configa08ddfce
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.open(Queue<DeviceClientConfig>)
  exceptions:
  - type: 848a9648
    description: <p>If the reactor could not be initialized. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.openLinks()
  id: openLinks()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: openLinks()
  nameWithType: AmqpsIotHubConnection.openLinks()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.openLinks()
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.openLinks*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 281
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Opens all the operation links by calling the <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_session_manager" data-throw-if-not-resolved="false">AmqpsSessionManager</xref>.</p>

    <p></p>
  syntax:
    content: public void openLinks()
  exceptions:
  - type: 848a9648
    description: <p>if Proton throws. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessage(com.microsoft.azure.sdk.iot.device.Message)
  id: Message)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: sendMessage(com.microsoft.azure.sdk.iot.device.Message message)
  nameWithType: AmqpsIotHubConnection.sendMessage(com.microsoft.azure.sdk.iot.device.Message message)
  fullName: IotHubStatusCode com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessage(com.microsoft.azure.sdk.iot.device.Message message)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessage*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 926
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  syntax:
    content: public IotHubStatusCode sendMessage(com.microsoft.azure.sdk.iot.device.Message message)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
    return:
      type: com.microsoft.azure.sdk.iot.device._iot_hub_status_code
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessageResult(com.microsoft.azure.sdk.iot.device.Message,IotHubMessageResult)
  id: Message,IotHubMessageResult)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: sendMessageResult(com.microsoft.azure.sdk.iot.device.Message message, IotHubMessageResult result)
  nameWithType: AmqpsIotHubConnection.sendMessageResult(com.microsoft.azure.sdk.iot.device.Message message, IotHubMessageResult result)
  fullName: boolean com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessageResult(com.microsoft.azure.sdk.iot.device.Message message, IotHubMessageResult result)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessageResult*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 961
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Sends the Ack for the provided message with the result </p>
  syntax:
    content: public boolean sendMessageResult(com.microsoft.azure.sdk.iot.device.Message message, IotHubMessageResult result)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to acknowledge </p>
    - id: result
      type: com.microsoft.azure.sdk.iot.device._iot_hub_message_result
      description: <p>the result to attach to the ack (COMPLETE, ABANDON, or REJECT) </p>
    return:
      type: 4fc6e284
      description: <p>true if the ack was sent successfully, and false otherwise </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.setListener(IotHubListener)
  id: setListener(IotHubListener)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: setListener(IotHubListener listener)
  nameWithType: AmqpsIotHubConnection.setListener(IotHubListener listener)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.setListener(IotHubListener listener)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.setListener*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 913
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Sets a listener into the Transport Connection object. This listener updates the Transport layer of connection status updates, message arrivals, and message acknowledgements </p>
  syntax:
    content: public void setListener(IotHubListener listener)
    parameters:
    - id: listener
      type: com.microsoft.azure.sdk.iot.device.transport._iot_hub_listener
      description: <p>the listener for connection status updates, message arrivals, and message acknowledgements </p>
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.setListener(IotHubListener)
  exceptions:
  - type: 848a9648
    description: <p>If the provided listener is null </p>
references:
- uid: 848a9648
  spec.java:
  - name: TransportException
    fullName: TransportException
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.AmqpsIotHubConnection*
  name: AmqpsIotHubConnection
  nameWithType: AmqpsIotHubConnection.AmqpsIotHubConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.addDeviceOperationSession*
  name: addDeviceOperationSession
  nameWithType: AmqpsIotHubConnection.addDeviceOperationSession
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.addDeviceOperationSession
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: 20d61ca6com.microsoft.azure.sdk.iot.device._device_client_configa08ddfce
  spec.java:
  - name: Queue<
    fullName: Queue<
  - uid: com.microsoft.azure.sdk.iot.device._device_client_config
    name: DeviceClientConfig
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
    href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.open*
  name: open
  nameWithType: AmqpsIotHubConnection.open
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.open
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.authenticate*
  name: authenticate
  nameWithType: AmqpsIotHubConnection.authenticate
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.authenticate
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.openLinks*
  name: openLinks
  nameWithType: AmqpsIotHubConnection.openLinks
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.openLinks
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.close*
  name: close
  nameWithType: AmqpsIotHubConnection.close
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.close
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: 70fceca4
  spec.java:
  - name: Event
    fullName: Event
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorInit*
  name: onReactorInit
  nameWithType: AmqpsIotHubConnection.onReactorInit
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorInit
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorFinal*
  name: onReactorFinal
  nameWithType: AmqpsIotHubConnection.onReactorFinal
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorFinal
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionInit*
  name: onConnectionInit
  nameWithType: AmqpsIotHubConnection.onConnectionInit
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionInit
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionBound*
  name: onConnectionBound
  nameWithType: AmqpsIotHubConnection.onConnectionBound
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionBound
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionUnbound*
  name: onConnectionUnbound
  nameWithType: AmqpsIotHubConnection.onConnectionUnbound
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionUnbound
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onDelivery*
  name: onDelivery
  nameWithType: AmqpsIotHubConnection.onDelivery
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onDelivery
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkInit*
  name: onLinkInit
  nameWithType: AmqpsIotHubConnection.onLinkInit
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkInit
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkFlow*
  name: onLinkFlow
  nameWithType: AmqpsIotHubConnection.onLinkFlow
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkFlow
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteOpen*
  name: onLinkRemoteOpen
  nameWithType: AmqpsIotHubConnection.onLinkRemoteOpen
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkRemoteOpen
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteClose*
  name: onLinkRemoteClose
  nameWithType: AmqpsIotHubConnection.onLinkRemoteClose
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkRemoteClose
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onTransportError*
  name: onTransportError
  nameWithType: AmqpsIotHubConnection.onTransportError
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTransportError
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.setListener*
  name: setListener
  nameWithType: AmqpsIotHubConnection.setListener
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.setListener
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessage*
  name: sendMessage
  nameWithType: AmqpsIotHubConnection.sendMessage
  fullName: IotHubStatusCode com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessage
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessageResult*
  name: sendMessageResult
  nameWithType: AmqpsIotHubConnection.sendMessageResult
  fullName: boolean com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessageResult
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.convertToProton*
  name: convertToProton
  nameWithType: AmqpsIotHubConnection.convertToProton
  fullName: AmqpsConvertToProtonReturnValue com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.convertToProton
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.convertFromProton*
  name: convertFromProton
  nameWithType: AmqpsIotHubConnection.convertFromProton
  fullName: AmqpsConvertFromProtonReturnValue com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.convertFromProton
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.sendMessage(Message)
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: sendMessage(Message message)
  nameWithType: IotHubTransportConnection.sendMessage(Message message)
  fullName: IotHubStatusCode com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.sendMessage(Message message)
  type: Method
  summary: <p>Send a single message to the IotHub over the Transport Connection </p>
  syntax:
    content: public IotHubStatusCode sendMessage(Message message)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to send </p>
    return:
      type: com.microsoft.azure.sdk.iot.device._iot_hub_status_code
      description: <p>the status code from the service </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.sendMessageResult(Message,IotHubMessageResult)
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: sendMessageResult(Message message, IotHubMessageResult result)
  nameWithType: IotHubTransportConnection.sendMessageResult(Message message, IotHubMessageResult result)
  fullName: boolean com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.sendMessageResult(Message message, IotHubMessageResult result)
  type: Method
  summary: <p>Send an acknowledgement to the IotHub for a message that the Transport layer received </p>
  syntax:
    content: public boolean sendMessageResult(Message message, IotHubMessageResult result)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to acknowledge </p>
    - id: result
      type: com.microsoft.azure.sdk.iot.device._iot_hub_message_result
      description: <p>the acknowledgement value to notify the service of </p>
    return:
      type: 4fc6e284
      description: <p>true if the acknowledgement was sent successfully, and false otherwise </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: IotHubTransportConnection
  nameWithType: IotHubTransportConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection
  type: Interface
  summary: <p>Interface of what all a Transport Connection object must do. Serves to decouple the <xref uid="com.microsoft.azure.sdk.iot.device._message" data-throw-if-not-resolved="false">Message</xref> Queueing of the Transport layer from the protocol specific details of the Connection layer. </p>
  syntax:
    content: public interface IotHubTransportConnection
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_connection_status
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_connection_status.yml
  name: IotHubConnectionStatus
  nameWithType: IotHubConnectionStatus
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubConnectionStatus
  type: Enum
  syntax:
    content: public enum IotHubConnectionStatus
- uid: com.microsoft.azure.sdk.iot.device._device_client_config
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
  name: DeviceClientConfig
  nameWithType: DeviceClientConfig
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
  type: Class
  summary: <p>Configuration settings for an IoT Hub client. Validates all user-defined settings. </p>
  syntax:
    content: public class DeviceClientConfig
- uid: com.microsoft.azure.sdk.iot.device._message
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.device.Message
  type: Class
  syntax:
    content: public class Message
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message.yml
  name: AmqpsMessage
  nameWithType: AmqpsMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsMessage
  type: Class
  summary: <p>Extension of the QPID-Proton-J MessageImpl class which implements the <xref uid="com.microsoft.azure.sdk.iot.device._message" data-throw-if-not-resolved="false">Message</xref> interface. Adds a Delivery object as a private member variable and adds a new <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message._a_c_k___t_y_p_e" data-throw-if-not-resolved="false">ACK_TYPE</xref> enum. Adds the ability to easily acknowledge a single message. </p>
  syntax:
    content: public class AmqpsMessage
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_listener
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_listener.yml
  name: IotHubListener
  nameWithType: IotHubListener
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
  type: Interface
  summary: <p>Callback interface for communicating connection and message status updates from individual protocol clients (mqtt, https, amqps) to the Tranpsort layer that handles queueing of messages and connecting/reconnecting/disconnecting </p>
  syntax:
    content: public interface IotHubListener
- uid: com.microsoft.azure.sdk.iot.device._custom_logger
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._custom_logger.yml
  name: CustomLogger
  nameWithType: CustomLogger
  fullName: com.microsoft.azure.sdk.iot.device.CustomLogger
  type: Class
  syntax:
    content: public class CustomLogger
- uid: com.microsoft.azure.sdk.iot.device.exceptions._transport_exception
  parent: com.microsoft.azure.sdk.iot.device.exceptions
  href: com.microsoft.azure.sdk.iot.device.exceptions._transport_exception.yml
  name: TransportException
  nameWithType: TransportException
  fullName: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
  type: Class
  syntax:
    content: public class TransportException
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_session_manager
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_session_manager.yml
  name: AmqpsSessionManager
  nameWithType: AmqpsSessionManager
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager
  type: Class
  summary: <p>Manage multiple device clients and the authentication mechanism </p>
  syntax:
    content: public class AmqpsSessionManager
- uid: com.microsoft.azure.sdk.iot.device._device_client
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  name: DeviceClient
  nameWithType: DeviceClient
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
  type: Class
  summary: >-
    <p>The public-facing API. Allows a single logical or physical device to connect to an IoT Hub. The IoT Hub client supports sending events to and receiving messages from an IoT Hub. </p>

    <p>To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages. </p>

    <p>The client buffers messages while the network is down, and re-sends them when the network comes back online. It also batches messages to improve communication efficiency (HTTPS only). </p>

    <p>The client supports HTTPS 1.1 and AMQPS 1.0 transports. </p>
  syntax:
    content: public class DeviceClient
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.open(Queue<DeviceClientConfig>)
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: open(Queue<DeviceClientConfig> deviceClientConfigs)
  nameWithType: IotHubTransportConnection.open(Queue<DeviceClientConfig> deviceClientConfigs)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.open(Queue<DeviceClientConfig> deviceClientConfigs)
  type: Method
  summary: <p>Opens the transport connection object </p>
  syntax:
    content: public void open(Queue<DeviceClientConfig> deviceClientConfigs)
    parameters:
    - id: deviceClientConfigs
      type: 20d61ca6com.microsoft.azure.sdk.iot.device._device_client_configa08ddfce
      description: <p>The list of configs to use. If more than 1 configs are in this list, multiplexing will be used </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  name: AmqpsIotHubConnection
  nameWithType: AmqpsIotHubConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection
  type: Class
  summary: <p>An AMQPS IotHub connection between a device and an IoTHub. This class contains functionality for sending/receiving a message, and logic to re-establish the connection with the IoTHub in case it gets lost. </p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.close()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: close()
  nameWithType: IotHubTransportConnection.close()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.close()
  type: Method
  summary: <p>Closes the transport connection. </p>
  syntax:
    content: public void close()
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.setListener(IotHubListener)
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: setListener(IotHubListener listener)
  nameWithType: IotHubTransportConnection.setListener(IotHubListener listener)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.setListener(IotHubListener listener)
  type: Method
  summary: <p>Sets a listener into the Transport Connection object. This listener updates the Transport layer of connection status updates, message arrivals, and message acknowledgements </p>
  syntax:
    content: public void setListener(IotHubListener listener)
    parameters:
    - id: listener
      type: com.microsoft.azure.sdk.iot.device.transport._iot_hub_listener
      description: <p>the listener for connection status updates, message arrivals, and message acknowledgements </p>
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_status_code
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_status_code.yml
  name: IotHubStatusCode
  nameWithType: IotHubStatusCode
  fullName: com.microsoft.azure.sdk.iot.device.IotHubStatusCode
  type: Enum
  summary: <p>An IoT Hub status code. Included in a message from an IoT Hub to a device. </p>
  syntax:
    content: public enum IotHubStatusCode
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_message_result
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_message_result.yml
  name: IotHubMessageResult
  nameWithType: IotHubMessageResult
  fullName: com.microsoft.azure.sdk.iot.device.IotHubMessageResult
  type: Enum
  summary: <p>A return value from a message callback that instructs an IoT Hub to complete, abandon, or reject the message. </p>
  syntax:
    content: public enum IotHubMessageResult
- uid: com.microsoft.azure.sdk.iot.device._message_type
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message_type.yml
  name: MessageType
  nameWithType: MessageType
  fullName: com.microsoft.azure.sdk.iot.device.MessageType
  type: Enum
  summary: <p>The IoTHub message type </p>
  syntax:
    content: public enum MessageType
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_string
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_string.yml
  name: IotHubConnectionString
  nameWithType: IotHubConnectionString
  fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionString
  type: Class
  summary: <p>Parser for the Iothub connection string. </p>
  syntax:
    content: public class IotHubConnectionString
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_convert_to_proton_return_value
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_convert_to_proton_return_value.yml
  name: AmqpsConvertToProtonReturnValue
  nameWithType: AmqpsConvertToProtonReturnValue
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsConvertToProtonReturnValue
  type: Class
  syntax:
    content: public class AmqpsConvertToProtonReturnValue
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_convert_from_proton_return_value
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_convert_from_proton_return_value.yml
  name: AmqpsConvertFromProtonReturnValue
  nameWithType: AmqpsConvertFromProtonReturnValue
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsConvertFromProtonReturnValue
  type: Class
  syntax:
    content: public class AmqpsConvertFromProtonReturnValue
