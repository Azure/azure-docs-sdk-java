### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  id: _amqps_iot_hub_connection
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  children:
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.addListener(ServerListener)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.AmqpsIotHubConnection(DeviceClientConfig,ArrayList<AmqpsDeviceOperations>)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.close()
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionBound(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionInit(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionUnbound(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onDelivery(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkFlow(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkInit(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteClose(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteOpen(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorFinal(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorInit(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onTransportError(Event)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.open()
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessage(Message,MessageType)
  - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessageResult(AmqpsMessage,IotHubMessageResult)
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: AmqpsIotHubConnection
  nameWithType: AmqpsIotHubConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 35
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>An AMQPS IotHub connection between a device and an IoTHub. This class contains functionality for sending/receiving a message, and logic to re-establish the connection with the IoTHub in case it gets lost. </p>
  syntax: &o1
    content: public class AmqpsIotHubConnection
  inheritance:
  - java.lang.Object
  - BaseHandler
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.addListener(ServerListener)
  id: addListener(ServerListener)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: addListener(ServerListener listener)
  nameWithType: AmqpsIotHubConnection.addListener(ServerListener listener)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.addListener(ServerListener listener)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.addListener*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 729
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Subscribe a listener to the list of listeners. </p>
  syntax:
    content: public void addListener(ServerListener listener)
    parameters:
    - id: listener
      type: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener
      description: <p>the listener to be subscribed. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.AmqpsIotHubConnection(DeviceClientConfig,ArrayList<AmqpsDeviceOperations>)
  id: AmqpsIotHubConnection(DeviceClientConfig,ArrayList<AmqpsDeviceOperations>)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: AmqpsIotHubConnection(DeviceClientConfig config, ArrayList<AmqpsDeviceOperations> amqpsDeviceOperationsList)
  nameWithType: AmqpsIotHubConnection.AmqpsIotHubConnection(DeviceClientConfig config, ArrayList<AmqpsDeviceOperations> amqpsDeviceOperationsList)
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(DeviceClientConfig config, ArrayList<AmqpsDeviceOperations> amqpsDeviceOperationsList)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.AmqpsIotHubConnection*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 79
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Constructor to set up connection parameters using the <xref uid="com.microsoft.azure.sdk.iot.device._device_client_config" data-throw-if-not-resolved="false">DeviceClientConfig</xref>.</p>

    <p></p>
  syntax:
    content: public AmqpsIotHubConnection(DeviceClientConfig config, ArrayList<AmqpsDeviceOperations> amqpsDeviceOperationsList)
    parameters:
    - id: config
      type: com.microsoft.azure.sdk.iot.device._device_client_config
      description: <p>The <xref uid="com.microsoft.azure.sdk.iot.device._device_client_config" data-throw-if-not-resolved="false">DeviceClientConfig</xref> corresponding to the device associated with this <xref uid="com.microsoft.azure.sdk.iot.device._device_client" data-throw-if-not-resolved="false">com.microsoft.azure.sdk.iot.device.DeviceClient</xref>. </p>
    - id: amqpsDeviceOperationsList
      type: 573b1e0bcom.microsoft.azure.sdk.iot.device.transport.amqps._amqps_device_operationsa08ddfce
  exceptions:
  - type: cbf33bbe
    description: <p>if failed connecting to iothub. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: close()
  nameWithType: AmqpsIotHubConnection.close()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.close()
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.close*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 215
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Closes the <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection" data-throw-if-not-resolved="false">AmqpsIotHubConnection</xref>. </p>

    <p>If the current connection is not closed, this function will set the current state to closed and invalidate all connection related variables. </p>

    <p></p>
  syntax:
    content: public void close()
  exceptions:
  - type: cbf33bbe
    description: <p>if it failed closing the iothub connection. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionBound(Event)
  id: onConnectionBound(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onConnectionBound(Event event)
  nameWithType: AmqpsIotHubConnection.onConnectionBound(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionBound(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionBound*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 457
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the connection bound event. Sets Sasl authentication and proper authentication mode. </p>
  syntax:
    content: public void onConnectionBound(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionInit(Event)
  id: onConnectionInit(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onConnectionInit(Event event)
  nameWithType: AmqpsIotHubConnection.onConnectionInit(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionInit(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionInit*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 422
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the connection init event </p>
  syntax:
    content: public void onConnectionInit(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionUnbound(Event)
  id: onConnectionUnbound(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onConnectionUnbound(Event event)
  nameWithType: AmqpsIotHubConnection.onConnectionUnbound(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionUnbound(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionUnbound*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 482
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  syntax:
    content: public void onConnectionUnbound(Event event)
    parameters:
    - id: event
      type: 70fceca4
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onDelivery(Event)
  id: onDelivery(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onDelivery(Event event)
  nameWithType: AmqpsIotHubConnection.onDelivery(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onDelivery(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onDelivery*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 545
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the delivery event. This method handles both sending and receiving a message. </p>
  syntax:
    content: public void onDelivery(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkFlow(Event)
  id: onLinkFlow(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onLinkFlow(Event event)
  nameWithType: AmqpsIotHubConnection.onLinkFlow(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkFlow(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkFlow*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 604
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the link flow event. Handles sending a single message. </p>
  syntax:
    content: public void onLinkFlow(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkInit(Event)
  id: onLinkInit(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onLinkInit(Event event)
  nameWithType: AmqpsIotHubConnection.onLinkInit(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkInit(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkInit*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 689
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the link init event. Sets the proper target address on the link. </p>
  syntax:
    content: public void onLinkInit(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteClose(Event)
  id: onLinkRemoteClose(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onLinkRemoteClose(Event event)
  nameWithType: AmqpsIotHubConnection.onLinkRemoteClose(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkRemoteClose(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteClose*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 658
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the link remote close event. This triggers reconnection attempts until successful. Both sender and receiver links closing trigger this event, so we only handle one of them, since the other is redundant. </p>
  syntax:
    content: public void onLinkRemoteClose(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteOpen(Event)
  id: onLinkRemoteOpen(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onLinkRemoteOpen(Event event)
  nameWithType: AmqpsIotHubConnection.onLinkRemoteOpen(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkRemoteOpen(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteOpen*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 619
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the link remote open event. This signifies that the <xref uid="" data-throw-if-not-resolved="false">org.apache.qpid.proton.reactor.Reactor</xref> is ready, so we set the connection to OPEN. </p>
  syntax:
    content: public void onLinkRemoteOpen(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorFinal(Event)
  id: onReactorFinal(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onReactorFinal(Event event)
  nameWithType: AmqpsIotHubConnection.onReactorFinal(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorFinal(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorFinal*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 511
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  syntax:
    content: public void onReactorFinal(Event event)
    parameters:
    - id: event
      type: 70fceca4
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorInit(Event)
  id: onReactorInit(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onReactorInit(Event event)
  nameWithType: AmqpsIotHubConnection.onReactorInit(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorInit(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorInit*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 495
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for reactor init event. </p>
  syntax:
    content: public void onReactorInit(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>Proton Event object </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onTransportError(Event)
  id: onTransportError(Event)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onTransportError(Event event)
  nameWithType: AmqpsIotHubConnection.onTransportError(Event event)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTransportError(Event event)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onTransportError*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 715
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Event handler for the transport error event. This triggers reconnection attempts until successful. </p>
  syntax:
    content: public void onTransportError(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: open()
  nameWithType: AmqpsIotHubConnection.open()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.open()
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.open*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 171
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Opens the <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection" data-throw-if-not-resolved="false">AmqpsIotHubConnection</xref>. </p>

    <p>If the current connection is not open, this method will create a new <xref uid="" data-throw-if-not-resolved="false">IotHubSasToken</xref>. This method will start the <xref uid="" data-throw-if-not-resolved="false">Reactor</xref>, set the connection to open and make it ready for sending. </p>

    <p></p>
  syntax:
    content: public void open()
  exceptions:
  - type: cbf33bbe
    description: <p>If the reactor could not be initialized. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessage(Message,MessageType)
  id: sendMessage(Message,MessageType)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: sendMessage(Message message, MessageType messageType)
  nameWithType: AmqpsIotHubConnection.sendMessage(Message message, MessageType messageType)
  fullName: Integer com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessage(Message message, MessageType messageType)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessage*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 308
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: <p>Creates a binary message using the given content and messageId. Sends the created message using the sender link. </p>
  syntax:
    content: public Integer sendMessage(Message message, MessageType messageType)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>The message to be sent. </p>
    - id: messageType
      type: com.microsoft.azure.sdk.iot.device._message_type
    return:
      type: 08effaa0
      description: <p>An <xref uid="" data-throw-if-not-resolved="false">Integer</xref> representing the hash of the message, or -1 if the connection is closed. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessageResult(AmqpsMessage,IotHubMessageResult)
  id: sendMessageResult(AmqpsMessage,IotHubMessageResult)
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: sendMessageResult(AmqpsMessage message, IotHubMessageResult result)
  nameWithType: AmqpsIotHubConnection.sendMessageResult(AmqpsMessage message, IotHubMessageResult result)
  fullName: Boolean com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessageResult(AmqpsMessage message, IotHubMessageResult result)
  overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessageResult*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java
    startLine: 376
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
  summary: >-
    <p>Sends the message result for the previously received message.</p>

    <p></p>
  syntax:
    content: public Boolean sendMessageResult(AmqpsMessage message, IotHubMessageResult result)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message
      description: <p>the message to be acknowledged. </p>
    - id: result
      type: com.microsoft.azure.sdk.iot.device._iot_hub_message_result
      description: <p>the message result (one of <xref uid="" data-throw-if-not-resolved="false">IotHubMessageResult#COMPLETE</xref>, <xref uid="" data-throw-if-not-resolved="false">IotHubMessageResult#ABANDON</xref>, or <xref uid="" data-throw-if-not-resolved="false">IotHubMessageResult#REJECT</xref>). </p>
    return:
      type: 866c2227
      description: <p>a boolean true if sent message was received with success, or false on fail. </p>
references:
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 573b1e0bcom.microsoft.azure.sdk.iot.device.transport.amqps._amqps_device_operationsa08ddfce
  spec.java:
  - name: ArrayList<
    fullName: ArrayList<
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_device_operations
    name: AmqpsDeviceOperations
    fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceOperations
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_device_operations.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.AmqpsIotHubConnection*
  name: AmqpsIotHubConnection
  nameWithType: AmqpsIotHubConnection.AmqpsIotHubConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.open*
  name: open
  nameWithType: AmqpsIotHubConnection.open
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.open
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.close*
  name: close
  nameWithType: AmqpsIotHubConnection.close
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.close
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessage*
  name: sendMessage
  nameWithType: AmqpsIotHubConnection.sendMessage
  fullName: Integer com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessage
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.sendMessageResult*
  name: sendMessageResult
  nameWithType: AmqpsIotHubConnection.sendMessageResult
  fullName: Boolean com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessageResult
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: 70fceca4
  spec.java:
  - name: Event
    fullName: Event
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionInit*
  name: onConnectionInit
  nameWithType: AmqpsIotHubConnection.onConnectionInit
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionInit
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionBound*
  name: onConnectionBound
  nameWithType: AmqpsIotHubConnection.onConnectionBound
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionBound
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onConnectionUnbound*
  name: onConnectionUnbound
  nameWithType: AmqpsIotHubConnection.onConnectionUnbound
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionUnbound
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorInit*
  name: onReactorInit
  nameWithType: AmqpsIotHubConnection.onReactorInit
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorInit
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onReactorFinal*
  name: onReactorFinal
  nameWithType: AmqpsIotHubConnection.onReactorFinal
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorFinal
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onDelivery*
  name: onDelivery
  nameWithType: AmqpsIotHubConnection.onDelivery
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onDelivery
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkFlow*
  name: onLinkFlow
  nameWithType: AmqpsIotHubConnection.onLinkFlow
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkFlow
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteOpen*
  name: onLinkRemoteOpen
  nameWithType: AmqpsIotHubConnection.onLinkRemoteOpen
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkRemoteOpen
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkRemoteClose*
  name: onLinkRemoteClose
  nameWithType: AmqpsIotHubConnection.onLinkRemoteClose
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkRemoteClose
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onLinkInit*
  name: onLinkInit
  nameWithType: AmqpsIotHubConnection.onLinkInit
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkInit
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.onTransportError*
  name: onTransportError
  nameWithType: AmqpsIotHubConnection.onTransportError
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTransportError
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.addListener*
  name: addListener
  nameWithType: AmqpsIotHubConnection.addListener
  fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.addListener
  package: com.microsoft.azure.sdk.iot.device.transport.amqps
- uid: com.microsoft.azure.sdk.iot.device.transport._state
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._state.yml
  name: State
  nameWithType: State
  fullName: com.microsoft.azure.sdk.iot.device.transport.State
  type: Enum
  syntax:
    content: public enum State
- uid: com.microsoft.azure.sdk.iot.device._device_client_config
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
  name: DeviceClientConfig
  nameWithType: DeviceClientConfig
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
  type: Class
  summary: <p>Configuration settings for an IoT Hub client. Validates all user-defined settings. </p>
  syntax:
    content: public class DeviceClientConfig
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.yml
  name: ServerListener
  nameWithType: ServerListener
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.ServerListener
  type: Interface
  summary: <p>Defines methods which are triggered by interactions with the IoTHub. </p>
  syntax:
    content: public interface ServerListener
- uid: com.microsoft.azure.sdk.iot.device._object_lock
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._object_lock.yml
  name: ObjectLock
  nameWithType: ObjectLock
  fullName: com.microsoft.azure.sdk.iot.device.ObjectLock
  type: Class
  summary: <p>This class enables mocking of the base class wait and notify functions </p>
  syntax:
    content: public class ObjectLock
- uid: com.microsoft.azure.sdk.iot.device._custom_logger
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._custom_logger.yml
  name: CustomLogger
  nameWithType: CustomLogger
  fullName: com.microsoft.azure.sdk.iot.device.CustomLogger
  type: Class
  syntax:
    content: public class CustomLogger
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_device_operations
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_device_operations.yml
  name: AmqpsDeviceOperations
  nameWithType: AmqpsDeviceOperations
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceOperations
  type: Class
  syntax:
    content: public class AmqpsDeviceOperations
- uid: com.microsoft.azure.sdk.iot.device._device_client
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  name: DeviceClient
  nameWithType: DeviceClient
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
  type: Class
  summary: >-
    <p>The public-facing API. Allows a single logical or physical device to connect to an IoT Hub. The IoT Hub client supports sending events to and receiving messages from an IoT Hub. </p>

    <p>To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages. </p>

    <p>The client buffers messages while the network is down, and re-sends them when the network comes back online. It also batches messages to improve communication efficiency (HTTPS only). </p>

    <p>The client supports HTTPS 1.1 and AMQPS 1.0 transports. </p>
  syntax:
    content: public class DeviceClient
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
  name: AmqpsIotHubConnection
  nameWithType: AmqpsIotHubConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection
  type: Class
  summary: <p>An AMQPS IotHub connection between a device and an IoTHub. This class contains functionality for sending/receiving a message, and logic to re-establish the connection with the IoTHub in case it gets lost. </p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.device._message
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.device.Message
  type: Class
  syntax:
    content: public class Message
- uid: com.microsoft.azure.sdk.iot.device._message_type
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message_type.yml
  name: MessageType
  nameWithType: MessageType
  fullName: com.microsoft.azure.sdk.iot.device.MessageType
  type: Enum
  syntax:
    content: public enum MessageType
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message.yml
  name: AmqpsMessage
  nameWithType: AmqpsMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsMessage
  type: Class
  summary: <p>Extension of the QPID-Proton-J MessageImpl class which implements the <xref uid="com.microsoft.azure.sdk.iot.device._message" data-throw-if-not-resolved="false">Message</xref> interface. Adds a Delivery object as a private member variable and adds a new <xref uid="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message._a_c_k___t_y_p_e" data-throw-if-not-resolved="false">ACK_TYPE</xref> enum. Adds the ability to easily acknowledge a single message. </p>
  syntax:
    content: public class AmqpsMessage
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_message_result
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_message_result.yml
  name: IotHubMessageResult
  nameWithType: IotHubMessageResult
  fullName: com.microsoft.azure.sdk.iot.device.IotHubMessageResult
  type: Enum
  summary: <p>A return value from a message callback that instructs an IoT Hub to complete, abandon, or reject the message. </p>
  syntax:
    content: public enum IotHubMessageResult
