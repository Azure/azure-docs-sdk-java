### YamlMime:JavaType
uid: "com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes"
fullName: "com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes"
name: "RadiologyCodeWithTypes"
nameWithType: "RadiologyCodeWithTypes"
summary: "Radiology code with types : used in imaging procedure recommendation for contrast and view."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **RadiologyCodeWithTypes**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes?alt=com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes&text=RadiologyCodeWithTypes\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "RadiologyCodeWithTypes.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Radiology<wbr>Code<wbr>With<wbr>Types from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RadiologyCodeWithTypes fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of RadiologyCodeWithTypes from the JsonReader."
  returns:
    description: "An instance of RadiologyCodeWithTypes if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes?alt=com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes&text=RadiologyCodeWithTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes.getCode()"
  fullName: "com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes.getCode()"
  name: "getCode()"
  nameWithType: "RadiologyCodeWithTypes.getCode()"
  summary: "Get the code property: The SNOMED CT code indicates whether imaging was conducted with or without contrast in the case of contrast, and in the case of views, it denotes the number of views."
  syntax: "public FhirR4CodeableConcept getCode()"
  desc: "Get the code property: The SNOMED CT code indicates whether imaging was conducted with or without contrast in the case of contrast, and in the case of views, it denotes the number of views."
  returns:
    description: "the code value."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.FhirR4CodeableConcept?alt=com.azure.health.insights.radiologyinsights.models.FhirR4CodeableConcept&text=FhirR4CodeableConcept\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes.getTypes()"
  fullName: "com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes.getTypes()"
  name: "getTypes()"
  nameWithType: "RadiologyCodeWithTypes.getTypes()"
  summary: "Get the types property: The collection of types will indicate the contrast substance used in the case of contrast and, in the case of views, it will specify the types of views, such as lateral and frontal, etc."
  syntax: "public List<FhirR4CodeableConcept> getTypes()"
  desc: "Get the types property: The collection of types will indicate the contrast substance used in the case of contrast and, in the case of views, it will specify the types of views, such as lateral and frontal, etc."
  returns:
    description: "the types value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.health.insights.radiologyinsights.models.FhirR4CodeableConcept?alt=com.azure.health.insights.radiologyinsights.models.FhirR4CodeableConcept&text=FhirR4CodeableConcept\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "RadiologyCodeWithTypes.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Radiology code with types : used in imaging procedure recommendation for contrast and view."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes?alt=com.azure.health.insights.radiologyinsights.models.RadiologyCodeWithTypes&text=RadiologyCodeWithTypes\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.health.insights.radiologyinsights.models"
artifact: com.azure:azure-health-insights-radiologyinsights:1.0.0
