### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.implementation.PathsImpl.createWithRestResponseAsync*"
fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.createWithRestResponseAsync"
name: "createWithRestResponseAsync"
nameWithType: "PathsImpl.createWithRestResponseAsync"
members:
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.createWithRestResponseAsync(com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.createWithRestResponseAsync(Context context)"
  name: "createWithRestResponseAsync(Context context)"
  nameWithType: "PathsImpl.createWithRestResponseAsync(Context context)"
  summary: "Create File | Create Directory | Rename File | Rename Directory Create or rename a file or directory. By default, the destination is overwritten and if the destination already exists and has a lease the lease is broken. This operation supports conditional HTTP requests. For more information, see \\[Specifying Conditional Headers for Blob Service Operations\\](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations). To fail if the destination already exists, use a conditional request with If-None-Match: \"\\*\"."
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PathsCreateResponse> createWithRestResponseAsync(Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.implementation.models.PathsCreateResponse?alt=com.azure.storage.file.datalake.implementation.models.PathsCreateResponse&text=PathsCreateResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.createWithRestResponseAsync(com.azure.storage.file.datalake.implementation.models.PathResourceType,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathRenameMode,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.file.datalake.models.PathHttpHeaders,com.azure.storage.file.datalake.implementation.models.LeaseAccessConditions,com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions,com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.createWithRestResponseAsync(PathResourceType resource, String continuation, PathRenameMode mode, String renameSource, String sourceLeaseId, String properties, String permissions, String umask, String requestId, Integer timeout, PathHttpHeaders pathHttpHeaders, LeaseAccessConditions leaseAccessConditions, ModifiedAccessConditions modifiedAccessConditions, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)"
  name: "createWithRestResponseAsync(PathResourceType resource, String continuation, PathRenameMode mode, String renameSource, String sourceLeaseId, String properties, String permissions, String umask, String requestId, Integer timeout, PathHttpHeaders pathHttpHeaders, LeaseAccessConditions leaseAccessConditions, ModifiedAccessConditions modifiedAccessConditions, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)"
  nameWithType: "PathsImpl.createWithRestResponseAsync(PathResourceType resource, String continuation, PathRenameMode mode, String renameSource, String sourceLeaseId, String properties, String permissions, String umask, String requestId, Integer timeout, PathHttpHeaders pathHttpHeaders, LeaseAccessConditions leaseAccessConditions, ModifiedAccessConditions modifiedAccessConditions, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)"
  summary: "Create File | Create Directory | Rename File | Rename Directory Create or rename a file or directory. By default, the destination is overwritten and if the destination already exists and has a lease the lease is broken. This operation supports conditional HTTP requests. For more information, see \\[Specifying Conditional Headers for Blob Service Operations\\](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations). To fail if the destination already exists, use a conditional request with If-None-Match: \"\\*\"."
  parameters:
  - description: "Required only for Create File and Create Directory. The value must be \"file\" or \"directory\". Possible values include: 'directory', 'file'."
    name: "resource"
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.PathResourceType?alt=com.azure.storage.file.datalake.implementation.models.PathResourceType&text=PathResourceType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional.  When deleting a directory, the number of paths that are deleted with each invocation is limited.  If the number of paths to be deleted exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the delete operation to continue deleting the directory."
    name: "continuation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Valid only when namespace is enabled. This parameter determines the behavior of the rename operation. The value must be \"legacy\" or \"posix\", and the default value will be \"posix\". Possible values include: 'legacy', 'posix'."
    name: "mode"
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.PathRenameMode?alt=com.azure.storage.file.datalake.implementation.models.PathRenameMode&text=PathRenameMode\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional file or directory to be renamed.  The value must have the following format: \"/{filesystem}/{path}\".  If \"x-ms-properties\" is specified, the properties will overwrite the existing properties; otherwise, the existing properties will be preserved. This value must be a URL percent-encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
    name: "renameSource"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "A lease ID for the source path. If specified, the source path must have an active lease and the lease ID must match."
    name: "sourceLeaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties."
    name: "properties"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported."
    name: "permissions"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional and only valid if Hierarchical Namespace is enabled for the account. When creating a file or directory and the parent folder does not have a default ACL, the umask restricts the permissions of the file or directory to be created.  The resulting permission is given by p bitwise and not u, where p is the permission and u is the umask.  For example, if p is 0777 and u is 0057, then the resulting permission is 0720.  The default permission is 0777 for a directory and 0666 for a file.  The default umask is 0027.  The umask must be specified in 4-digit octal notation (e.g. 0766)."
    name: "umask"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    name: "requestId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    name: "timeout"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation."
    name: "pathHttpHeaders"
    type: "<xref href=\"com.azure.storage.file.datalake.models.PathHttpHeaders?alt=com.azure.storage.file.datalake.models.PathHttpHeaders&text=PathHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation."
    name: "leaseAccessConditions"
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.LeaseAccessConditions?alt=com.azure.storage.file.datalake.implementation.models.LeaseAccessConditions&text=LeaseAccessConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation."
    name: "modifiedAccessConditions"
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions?alt=com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions&text=ModifiedAccessConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation."
    name: "sourceModifiedAccessConditions"
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions?alt=com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions&text=SourceModifiedAccessConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PathsCreateResponse> createWithRestResponseAsync(PathResourceType resource, String continuation, PathRenameMode mode, String renameSource, String sourceLeaseId, String properties, String permissions, String umask, String requestId, Integer timeout, PathHttpHeaders pathHttpHeaders, LeaseAccessConditions leaseAccessConditions, ModifiedAccessConditions modifiedAccessConditions, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.implementation.models.PathsCreateResponse?alt=com.azure.storage.file.datalake.implementation.models.PathsCreateResponse&text=PathsCreateResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.implementation"
artifact: com.azure:azure-storage-file-datalake:12.4.1
