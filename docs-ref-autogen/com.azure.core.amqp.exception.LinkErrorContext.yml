### YamlMime:JavaType
uid: "com.azure.core.amqp.exception.LinkErrorContext"
fullName: "com.azure.core.amqp.exception.LinkErrorContext"
name: "LinkErrorContext"
nameWithType: "LinkErrorContext"
summary: "Represents the context for an AMQP link when an <xref uid=\"com.azure.core.amqp.exception.AmqpException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpException\"></xref> occurs."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.amqp.exception.AmqpErrorContext?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.amqp.exception.SessionErrorContext?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.amqp.exception.AmqpErrorContext.getErrorInfo()"
- "com.azure.core.amqp.exception.AmqpErrorContext.getNamespace()"
- "com.azure.core.amqp.exception.SessionErrorContext.getEntityPath()"
- "com.azure.core.amqp.exception.SessionErrorContext.toString()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class LinkErrorContext extends SessionErrorContext"
constructors:
- uid: "com.azure.core.amqp.exception.LinkErrorContext.LinkErrorContext(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  fullName: "com.azure.core.amqp.exception.LinkErrorContext.LinkErrorContext(String namespace, String entityPath, String trackingId, Integer linkCredit)"
  name: "LinkErrorContext(String namespace, String entityPath, String trackingId, Integer linkCredit)"
  nameWithType: "LinkErrorContext.LinkErrorContext(String namespace, String entityPath, String trackingId, Integer linkCredit)"
  summary: "Creates a new instance with the AMQP link's `namespace` and `entityPath` information."
  parameters:
  - description: "The service namespace of the error context."
    name: "namespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The remote container the AMQP receive link is fetching messages from."
    name: "entityPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The tracking id for the error. Tracking id can be <code>null</code> if the error was not thrown from\n         the remote AMQP message broker."
    name: "trackingId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the number of link credits the current AMQP link has when this error occurred, can be\n         <code>null</code> if the receive link has not opened yet."
    name: "linkCredit"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LinkErrorContext(String namespace, String entityPath, String trackingId, Integer linkCredit)"
  desc: "Creates a new instance with the AMQP link's `namespace` and `entityPath` information. Allows for optional information about the link if it was successfully opened such as `linkCredit` and `trackingId`."
methods:
- uid: "com.azure.core.amqp.exception.LinkErrorContext.getLinkCredit()"
  fullName: "com.azure.core.amqp.exception.LinkErrorContext.getLinkCredit()"
  name: "getLinkCredit()"
  nameWithType: "LinkErrorContext.getLinkCredit()"
  summary: "Gets the number of credits on the link when the error occurred."
  syntax: "public Integer getLinkCredit()"
  desc: "Gets the number of credits on the link when the error occurred. Can be `null` if the link is not opened."
  returns:
    description: "The number of credits on the link when the error occurred."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.amqp.exception.LinkErrorContext.getTrackingId()"
  fullName: "com.azure.core.amqp.exception.LinkErrorContext.getTrackingId()"
  name: "getTrackingId()"
  nameWithType: "LinkErrorContext.getTrackingId()"
  summary: "Gets the unique tracking identifier for this error."
  syntax: "public String getTrackingId()"
  desc: "Gets the unique tracking identifier for this error. It is possible to be `null` if the error was not thrown from the AMQP message broker."
  returns:
    description: "The unique tracking identifier for this error."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.amqp.exception.LinkErrorContext.toString()"
  fullName: "com.azure.core.amqp.exception.LinkErrorContext.toString()"
  name: "toString()"
  nameWithType: "LinkErrorContext.toString()"
  summary: "Creates a string representation of this Error<wbr>Context."
  overridden: "com.azure.core.amqp.exception.SessionErrorContext.toString()"
  syntax: "public String toString()"
  desc: "Creates a string representation of this ErrorContext."
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents the context for an AMQP link when an <xref uid=\"com.azure.core.amqp.exception.AmqpException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpException\"></xref> occurs."
metadata: {}
package: "com.azure.core.amqp.exception"
artifact: com.azure:azure-core-amqp:2.7.0
