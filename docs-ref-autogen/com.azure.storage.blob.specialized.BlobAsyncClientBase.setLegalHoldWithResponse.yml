### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.setLegalHoldWithResponse*"
fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.setLegalHoldWithResponse"
name: "setLegalHoldWithResponse"
nameWithType: "BlobAsyncClientBase.setLegalHoldWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.setLegalHoldWithResponse(boolean)"
  fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.setLegalHoldWithResponse(boolean legalHold)"
  name: "setLegalHoldWithResponse(boolean legalHold)"
  nameWithType: "BlobAsyncClientBase.setLegalHoldWithResponse(boolean legalHold)"
  summary: "Sets a legal hold on the blob.\n\nNOTE: Blob Versioning must be enabled on your storage account and the blob must be in a container with immutable storage with versioning enabled to call this API.\n\n**Code Samples**\n\n```java\nclient.setLegalHoldWithResponse(true).subscribe(response ->\n     System.out.println(\"Legal hold status: \" + response.getValue().hasLegalHold()));\n```"
  parameters:
  - description: "Whether or not you want a legal hold on the blob."
    name: "legalHold"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BlobLegalHoldResult>> setLegalHoldWithResponse(boolean legalHold)"
  returns:
    description: "A reactive response containing the legal hold result."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobLegalHoldResult?alt=com.azure.storage.blob.models.BlobLegalHoldResult&text=BlobLegalHoldResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.15.0
