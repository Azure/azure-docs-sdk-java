### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer
  id: MethodDispatcherBaseWithSerializer
  parent: microsoft.servicefabric.services.remoting.builder
  children:
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.deserializeRequestMessageBody(byte [])
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.serializeResponseMessageBody(Object)
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.yml
  langs:
  - java
  name: MethodDispatcherBaseWithSerializer
  nameWithType: MethodDispatcherBaseWithSerializer
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBaseWithSerializer.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBaseWithSerializer.java
    startLine: 6
  package: microsoft.servicefabric.services.remoting.builder
  summary: "<p>The class dispatches the requests from the client to the interface/method of the remoted objectts. This class is used by remoting code generator. This class caches the Serializer. </p>"
  syntax:
    content: public class MethodDispatcherBaseWithSerializer extends MethodDispatcherBase
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.services.remoting.MethodDispatcher
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  inheritedMembers:
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWith(CompletableFuture<?>)
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseBody(int,Object)
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseMessageBody(Object)
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatch(Object,int,Object)
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatchAsync(Object,int,Object,CancellationToken)
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getInterfaceId()
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getMethodName(int)
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getRequestMessageBodyValue(Object)
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.initialize(int,Map<Integer, String>)
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatch(int,Object,Object)
  - microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatchAsync(int,Object,Object,CancellationToken)
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.deserializeRequestMessageBody(byte [])
  id: deserializeRequestMessageBody(byte [])
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.yml
  langs:
  - java
  name: deserializeRequestMessageBody(byte[] requestMsgBodyBytes)
  nameWithType: MethodDispatcherBaseWithSerializer.deserializeRequestMessageBody(byte[] requestMsgBodyBytes)
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.deserializeRequestMessageBody(byte[] requestMsgBodyBytes)
  overload: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.deserializeRequestMessageBody*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBaseWithSerializer.java
    startLine: 15
  package: microsoft.servicefabric.services.remoting.builder
  summary: "<p>This method is implemented by remoting code generator to deserialize the request message. </p>"
  syntax:
    content: protected abstract Object deserializeRequestMessageBody(byte[] requestMsgBodyBytes)
    parameters:
    - id: requestMsgBodyBytes
      type: ccd9418d
      description: <p>request msg body buffer </p>
    return:
      type: 1377799a
      description: <p>A deserialized <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Object"></xref></p>
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.serializeResponseMessageBody(Object)
  id: serializeResponseMessageBody(Object)
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.yml
  langs:
  - java
  name: serializeResponseMessageBody(Object responseMsgBody)
  nameWithType: MethodDispatcherBaseWithSerializer.serializeResponseMessageBody(Object responseMsgBody)
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.serializeResponseMessageBody(Object responseMsgBody)
  overload: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.serializeResponseMessageBody*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBaseWithSerializer.java
    startLine: 24
  package: microsoft.servicefabric.services.remoting.builder
  summary: "<p>This method is implemented by the remoting code generator to serialize the response object </p>"
  syntax:
    content: protected abstract byte [] serializeResponseMessageBody(Object responseMsgBody)
    parameters:
    - id: responseMsgBody
      type: "79317049"
      description: <p>response msg body object. </p>
    return:
      type: ca8125b7
      description: <p>serialized byte array. </p>
references:
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: 1377799a
  spec.java:
  - name: abstract Object
    fullName: abstract Object
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.deserializeRequestMessageBody*
  name: deserializeRequestMessageBody
  nameWithType: MethodDispatcherBaseWithSerializer.deserializeRequestMessageBody
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.deserializeRequestMessageBody
  package: microsoft.servicefabric.services.remoting.builder
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: ca8125b7
  spec.java:
  - name: abstract byte []
    fullName: abstract byte []
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.serializeResponseMessageBody*
  name: serializeResponseMessageBody
  nameWithType: MethodDispatcherBaseWithSerializer.serializeResponseMessageBody
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer.serializeResponseMessageBody
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWith(CompletableFuture<?>)
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.yml
  name: continueWith(CompletableFuture<?> future)
  nameWithType: MethodDispatcherBase.continueWith(CompletableFuture<?> future)
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWith(CompletableFuture<?> future)
  type: Method
  summary: "<p>Internal - used by Service remoting</p>\r\n<p></p>"
  syntax:
    content: protected CompletableFuture<Object> continueWith(CompletableFuture<?> future)
    parameters:
    - id: future
      type: 16409f84
      description: <p>continuation future </p>
    return:
      type: 55aa5245
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.concurrent.CompletableFuture"></xref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseBody(int,Object)
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.yml
  name: createResponseBody(int methodId, Object returnValue)
  nameWithType: MethodDispatcherBase.createResponseBody(int methodId, Object returnValue)
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseBody(int methodId, Object returnValue)
  type: Method
  summary: "<p>This method is implemented by the generated method dispatcher to create the response from the specified return value as a result of dispatching the method to the remoted object.</p>\r\n<p></p>"
  syntax:
    content: protected abstract Object createResponseBody(int methodId, Object returnValue)
    parameters:
    - id: methodId
      type: f75371fa
      description: <p>Id of the method. </p>
    - id: returnValue
      type: "79317049"
      description: <p>The returned value from the method. </p>
    return:
      type: 1377799a
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Object"></xref> that represents the response body to be sent back to the client. </p>
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseMessageBody(Object)
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.yml
  name: createResponseMessageBody(Object responseMessageBodyValue)
  nameWithType: MethodDispatcherBase.createResponseMessageBody(Object responseMessageBodyValue)
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseMessageBody(Object responseMessageBodyValue)
  type: Method
  summary: "<p>This method is implemented by the generated method to create the response message. </p>"
  syntax:
    content: protected abstract Object createResponseMessageBody(Object responseMessageBodyValue)
    parameters:
    - id: responseMessageBodyValue
      type: "79317049"
      description: <p>response message body </p>
    return:
      type: 1377799a
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Object"></xref> that represents the respnse messge body. </p>
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatch(Object,int,Object)
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.yml
  name: dispatch(Object objectImplementation, int methodId, Object requestMsgBody)
  nameWithType: MethodDispatcherBase.dispatch(Object objectImplementation, int methodId, Object requestMsgBody)
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatch(Object objectImplementation, int methodId, Object requestMsgBody)
  type: Method
  summary: "<p>This method is used to dispatch one way messages to the specified methodId of the interface implemented by the remoted object.</p>\r\n<p></p>"
  syntax:
    content: public void dispatch(Object objectImplementation, int methodId, Object requestMsgBody)
    parameters:
    - id: objectImplementation
      type: "79317049"
      description: <p>remoted object Implementation. </p>
    - id: methodId
      type: f75371fa
      description: <p>methodId of the interface implemented by the remoted object. </p>
    - id: requestMsgBody
      type: "79317049"
      description: <p>message body. </p>
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatchAsync(Object,int,Object,CancellationToken)
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.yml
  name: dispatchAsync(Object objectImplementation, int methodId, Object requestMsgBody, CancellationToken cancellationToken)
  nameWithType: MethodDispatcherBase.dispatchAsync(Object objectImplementation, int methodId, Object requestMsgBody, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatchAsync(Object objectImplementation, int methodId, Object requestMsgBody, CancellationToken cancellationToken)
  type: Method
  summary: "<p>This method is implemented by the generated method dispatcher to dispatch request to the specified methodId of the interface implemented by the remoted object.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Object> dispatchAsync(Object objectImplementation, int methodId, Object requestMsgBody, CancellationToken cancellationToken)
    parameters:
    - id: objectImplementation
      type: "79317049"
      description: <p>The remoted object instance </p>
    - id: methodId
      type: f75371fa
      description: <p>id of the method </p>
    - id: requestMsgBody
      type: "79317049"
      description: <p>The request body </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
    return:
      type: 55aa5245
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.concurrent.CompletableFuture"></xref> that represents outstanding operation. The result of the task is the return value from the method. </p>
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getInterfaceId()
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.yml
  name: getInterfaceId()
  nameWithType: MethodDispatcherBase.getInterfaceId()
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getInterfaceId()
  type: Method
  summary: "<p>Interface Id is used to identify remoting Interfaces.</p>\r\n<p></p>"
  syntax:
    content: public int getInterfaceId()
    return:
      type: f75371fa
      description: <p>interface id. </p>
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getMethodName(int)
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.yml
  name: getMethodName(int methodId)
  nameWithType: MethodDispatcherBase.getMethodName(int methodId)
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getMethodName(int methodId)
  type: Method
  syntax:
    content: public String getMethodName(int methodId)
    parameters:
    - id: methodId
      type: f75371fa
    return:
      type: "26831127"
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getRequestMessageBodyValue(Object)
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.yml
  name: getRequestMessageBodyValue(Object requestMessageBody)
  nameWithType: MethodDispatcherBase.getRequestMessageBodyValue(Object requestMessageBody)
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getRequestMessageBodyValue(Object requestMessageBody)
  type: Method
  summary: "<p>This method is implemented by the generated method dispatcher to get the request message, </p>"
  syntax:
    content: protected abstract Object getRequestMessageBodyValue(Object requestMessageBody)
    parameters:
    - id: requestMessageBody
      type: "79317049"
      description: <p>request message body. </p>
    return:
      type: 1377799a
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Object"></xref> that represents the request body. </p>
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.initialize(int,Map<Integer, String>)
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.yml
  name: initialize(int interfaceId, Map<Integer, String> methodNameMap)
  nameWithType: MethodDispatcherBase.initialize(int interfaceId, Map<Integer, String> methodNameMap)
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.initialize(int interfaceId, Map<Integer, String> methodNameMap)
  type: Method
  syntax:
    content: public void initialize(int interfaceId, Map<Integer, String> methodNameMap)
    parameters:
    - id: interfaceId
      type: f75371fa
    - id: methodNameMap
      type: 5188bed5
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatch(int,Object,Object)
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.yml
  name: onDispatch(int methodId, Object remotedObject, Object requestBody)
  nameWithType: MethodDispatcherBase.onDispatch(int methodId, Object remotedObject, Object requestBody)
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatch(int methodId, Object remotedObject, Object requestBody)
  type: Method
  summary: "<p>This method is implemented by the generated method dispatcher to dispatch one way messages to the specified methodId of the interface implemented by the remoted object.</p>\r\n<p></p>"
  syntax:
    content: protected abstract void onDispatch(int methodId, Object remotedObject, Object requestBody)
    parameters:
    - id: methodId
      type: f75371fa
      description: <p>Id of the method. </p>
    - id: remotedObject
      type: "79317049"
      description: <p>The remoted object instance. </p>
    - id: requestBody
      type: "79317049"
      description: <p>message body </p>
    return:
      type: 5beb11ad
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatchAsync(int,Object,Object,CancellationToken)
  parent: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.yml
  name: onDispatchAsync(int methodId, Object remotedObject, Object requestBody, CancellationToken cancellationToken)
  nameWithType: MethodDispatcherBase.onDispatchAsync(int methodId, Object remotedObject, Object requestBody, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatchAsync(int methodId, Object remotedObject, Object requestBody, CancellationToken cancellationToken)
  type: Method
  summary: "<p>This method is implemented by the generated method dispatcher to dispatch request to the specified methodId of the interface implemented by the remoted object.</p>\r\n<p></p>"
  syntax:
    content: protected abstract CompletableFuture<Object> onDispatchAsync(int methodId, Object remotedObject, Object requestBody, CancellationToken cancellationToken)
    parameters:
    - id: methodId
      type: f75371fa
      description: <p>id of the method </p>
    - id: remotedObject
      type: "79317049"
      description: <p>the remoted object instance </p>
    - id: requestBody
      type: "79317049"
      description: <p>The request body </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: <p>Cancellation token to cancel the async request. </p>
    return:
      type: "55e17007"
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.concurrent.CompletableFuture"></xref> that represents outstanding operation. The result of the task is the return value from the method. </p>
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  parent: microsoft.servicefabric.services.remoting.builder
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.yml
  name: MethodDispatcherBase
  nameWithType: MethodDispatcherBase
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
  type: Class
  summary: "<p>The base class used by remoting code generator to generate the type that dispatches requests from the client to the right interface and method of the remoted object. </p>"
  syntax:
    content: public class MethodDispatcherBase implements MethodDispatcher
- uid: microsoft.servicefabric.services.remoting.builder.ServiceMethodDispatcherBase
  parent: microsoft.servicefabric.services.remoting.builder
  href: microsoft.servicefabric.services.remoting.builder.ServiceMethodDispatcherBase.yml
  name: ServiceMethodDispatcherBase
  nameWithType: ServiceMethodDispatcherBase
  fullName: microsoft.servicefabric.services.remoting.builder.ServiceMethodDispatcherBase
  type: Class
  summary: "<p>Abstract class to create Service method dispatcher object. For internal use only. </p>"
  syntax:
    content: public class ServiceMethodDispatcherBase
