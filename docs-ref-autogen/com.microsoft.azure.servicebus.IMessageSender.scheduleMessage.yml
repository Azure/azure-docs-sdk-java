### YamlMime:JavaMember
uid: "com.microsoft.azure.servicebus.IMessageSender.scheduleMessage*"
fullName: "com.microsoft.azure.servicebus.IMessageSender.scheduleMessage"
name: "scheduleMessage"
nameWithType: "IMessageSender.scheduleMessage"
members:
- uid: "com.microsoft.azure.servicebus.IMessageSender.scheduleMessage(com.microsoft.azure.servicebus.IMessage,java.time.Instant)"
  fullName: "com.microsoft.azure.servicebus.IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)"
  name: "scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)"
  nameWithType: "IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)"
  summary: "Sends a scheduled message to the Azure Service Bus entity this sender is connected to. A scheduled message is enqueued and made available to receivers only at the scheduled enqueue time. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling `scheduleMessageAsync(message, scheduledEnqueueTimeUtc).get()`. For better performance, use async methods."
  parameters:
  - description: "message to be sent to the entity"
    name: "message"
    type: "<xref href=\"com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage\" data-throw-if-not-resolved=\"False\" />"
  - description: "instant at which the message should be enqueued in the entity"
    name: "scheduledEnqueueTimeUtc"
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "sequence number of the scheduled message"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessageSender.scheduleMessage(com.microsoft.azure.servicebus.IMessage,java.time.Instant,com.microsoft.azure.servicebus.TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc, TransactionContext transaction)"
  name: "scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc, TransactionContext transaction)"
  nameWithType: "IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc, TransactionContext transaction)"
  summary: "Sends a scheduled message to the Azure Service Bus entity this sender is connected to. A scheduled message is enqueued and made available to receivers only at the scheduled enqueue time. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling `scheduleMessageAsync(message, scheduledEnqueueTimeUtc).get()`. For better performance, use async methods."
  parameters:
  - description: "message to be sent to the entity"
    name: "message"
    type: "<xref href=\"com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage\" data-throw-if-not-resolved=\"False\" />"
  - description: "instant at which the message should be enqueued in the entity"
    name: "scheduledEnqueueTimeUtc"
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.microsoft.azure.servicebus.TransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionContext\"></xref> which this operation should enlist to."
    name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc, TransactionContext transaction)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "sequence number of the scheduled message"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.servicebus"
artifact: com.microsoft.azure:azure-servicebus:3.6.0
