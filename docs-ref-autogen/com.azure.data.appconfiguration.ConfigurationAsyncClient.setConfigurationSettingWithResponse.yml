### YamlMime:JavaMember
uid: "com.azure.data.appconfiguration.ConfigurationAsyncClient.setConfigurationSettingWithResponse*"
fullName: "com.azure.data.appconfiguration.ConfigurationAsyncClient.setConfigurationSettingWithResponse"
name: "setConfigurationSettingWithResponse"
nameWithType: "ConfigurationAsyncClient.setConfigurationSettingWithResponse"
members:
- uid: "com.azure.data.appconfiguration.ConfigurationAsyncClient.setConfigurationSettingWithResponse(com.azure.data.appconfiguration.models.ConfigurationSetting,boolean)"
  fullName: "com.azure.data.appconfiguration.ConfigurationAsyncClient.setConfigurationSettingWithResponse(ConfigurationSetting setting, boolean ifUnchanged)"
  name: "setConfigurationSettingWithResponse(ConfigurationSetting setting, boolean ifUnchanged)"
  nameWithType: "ConfigurationAsyncClient.setConfigurationSettingWithResponse(ConfigurationSetting setting, boolean ifUnchanged)"
  summary: "Creates or updates a configuration value in the service. Partial updates are not supported and the entire configuration setting is updated. If <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting.getETag()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ETag\"></xref> is specified, the configuration value is updated if the current setting's ETag matches. If the ETag's value is equal to the wildcard character (`\"*\"`), the setting will always be updated.\n\n**Code Samples**\n\nAdd a setting with the key \"prodDBConnection\", label \"westUS\", and value \"db\\_connection\".\n\nUpdate setting's value \"db\\_connection\" to \"updated\\_db\\_connection\"\n\n```java\nclient.setConfigurationSettingWithResponse(new ConfigurationSetting().setKey(\"prodDBConnection\").setLabel(\"westUS\")\n     .setValue(\"db_connection\"), false)\n     .subscriberContext(Context.of(key1, value1, key2, value2))\n     .subscribe(response -> {\n         final ConfigurationSetting result = response.getValue();\n         System.out.printf(\"Key: %s, Label: %s, Value: %s\",\n             result.getKey(), result.getLabel(), result.getValue());\n     });\n // Update the value of the setting to \"updated_db_connection\"\n client.setConfigurationSettingWithResponse(new ConfigurationSetting().setKey(\"prodDBConnection\").setLabel(\"westUS\")\n     .setValue(\"updated_db_connection\"), false)\n     .subscribe(response -> {\n         final ConfigurationSetting responseSetting = response.getValue();\n         System.out.printf(\"Key: %s, Label: %s, Value: %s\",\n             responseSetting.getKey(), responseSetting.getLabel(), responseSetting.getValue());\n     });\n```"
  parameters:
  - description: "The setting to create or update based on its key, optional label and optional ETag combination."
    name: "setting"
    type: "<xref href=\"com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting\" data-throw-if-not-resolved=\"False\" />"
  - description: "Flag indicating if the <code>setting</code> <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting.getETag*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ETag\"></xref> is used as a\n IF-MATCH header."
    name: "ifUnchanged"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<ConfigurationSetting>> setConfigurationSettingWithResponse(ConfigurationSetting setting, boolean ifUnchanged)"
  returns:
    description: "A REST response containing the <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref> that was created or updated, if the key is an\n invalid value, the setting is read-only, or an ETag was provided but does not match the service's current ETag\n value (which will also throw HttpResponseException described below)."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.data.appconfiguration"
artifact: com.azure:azure-data-appconfiguration:1.1.8
