### YamlMime:JavaMember
nameWithType: Catalogs.getAssembly
type: method
members:
- fullName: com.microsoft.azure.management.datalake.analytics.Catalogs.getAssembly(String accountName, String databaseName, String assemblyName)
  name: getAssembly(String accountName, String databaseName, String assemblyName)
  nameWithType: Catalogs.getAssembly(String accountName, String databaseName, String assemblyName)
  parameters:
  - description: <p>The Azure Data Lake Analytics account upon which to execute catalog operations. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the database containing the assembly. </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the assembly. </p>
    name: assemblyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the USqlAssembly object if successful. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlAssembly?alt=com.microsoft.azure.management.datalake.analytics.models.USqlAssembly&text=USqlAssembly" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Retrieves the specified assembly from the Data Lake Analytics catalog.</p>

    <p></p>
  syntax: public USqlAssembly getAssembly(String accountName, String databaseName, String assemblyName)
  uid: com.microsoft.azure.management.datalake.analytics.Catalogs.getAssembly(String,String,String)
uid: com.microsoft.azure.management.datalake.analytics.Catalogs.getAssembly*
fullName: com.microsoft.azure.management.datalake.analytics.Catalogs.getAssembly(String accountName, String databaseName, String assemblyName)
name: getAssembly(String accountName, String databaseName, String assemblyName)
package: com.microsoft.azure.management.datalake.analytics
metadata: {}
