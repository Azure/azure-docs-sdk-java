### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  id: "LoggersInner"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  children:
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.LoggersInner(retrofit2.Retrofit,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementClientImpl)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.LoggersService"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.get(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTag(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByService(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByService(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync(java.lang.String,java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNext(java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextAsync(java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceSinglePageAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.update(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract,java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract,java.lang.String)"
  langs:
  - "java"
  name: "LoggersInner"
  nameWithType: "LoggersInner"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  type: "Class"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "An instance of this class provides access to all the operations defined in Loggers."
  syntax:
    content: "public class LoggersInner"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.LoggersInner(retrofit2.Retrofit,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementClientImpl)"
  id: "LoggersInner(retrofit2.Retrofit,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementClientImpl)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "LoggersInner(Retrofit retrofit, ApiManagementClientImpl client)"
  nameWithType: "LoggersInner.LoggersInner(Retrofit retrofit, ApiManagementClientImpl client)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.LoggersInner(Retrofit retrofit, ApiManagementClientImpl client)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.LoggersInner*"
  type: "Constructor"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Initializes an instance of LoggersInner."
  syntax:
    content: "public LoggersInner(Retrofit retrofit, ApiManagementClientImpl client)"
    parameters:
    - id: "retrofit"
      type: "retrofit2.Retrofit"
      description: "the Retrofit instance built from a Retrofit Builder."
    - id: "client"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementClientImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner)"
  id: "createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "createOrUpdate(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters)"
  nameWithType: "LoggersInner.createOrUpdate(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdate(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdate*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Creates or Updates a logger."
  syntax:
    content: "public LoggerContractInner createOrUpdate(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "parameters"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
      description: "Create parameters."
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
      description: "the LoggerContractInner object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,java.lang.String)"
  id: "createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "createOrUpdate(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch)"
  nameWithType: "LoggersInner.createOrUpdate(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdate(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdate*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Creates or Updates a logger."
  syntax:
    content: "public LoggerContractInner createOrUpdate(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "parameters"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
      description: "Create parameters."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. Not required when creating an entity, but required when updating an entity."
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
      description: "the LoggerContractInner object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner)"
  id: "createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters)"
  nameWithType: "LoggersInner.createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Creates or Updates a logger."
  syntax:
    content: "public Observable<LoggerContractInner> createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "parameters"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
      description: "Create parameters."
    return:
      type: "rx.Observable<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the observable to the LoggerContractInner object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  id: "createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, ServiceCallback<LoggerContractInner> serviceCallback)"
  nameWithType: "LoggersInner.createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, ServiceCallback<LoggerContractInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, ServiceCallback<LoggerContractInner> serviceCallback)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Creates or Updates a logger."
  syntax:
    content: "public ServiceFuture<LoggerContractInner> createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, ServiceCallback<LoggerContractInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "parameters"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
      description: "Create parameters."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,java.lang.String)"
  id: "createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch)"
  nameWithType: "LoggersInner.createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Creates or Updates a logger."
  syntax:
    content: "public Observable<LoggerContractInner> createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "parameters"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
      description: "Create parameters."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. Not required when creating an entity, but required when updating an entity."
    return:
      type: "rx.Observable<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the observable to the LoggerContractInner object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  id: "createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch, ServiceCallback<LoggerContractInner> serviceCallback)"
  nameWithType: "LoggersInner.createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch, ServiceCallback<LoggerContractInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch, ServiceCallback<LoggerContractInner> serviceCallback)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Creates or Updates a logger."
  syntax:
    content: "public ServiceFuture<LoggerContractInner> createOrUpdateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch, ServiceCallback<LoggerContractInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "parameters"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
      description: "Create parameters."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. Not required when creating an entity, but required when updating an entity."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner)"
  id: "createOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "createOrUpdateWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters)"
  nameWithType: "LoggersInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Creates or Updates a logger."
  syntax:
    content: "public Observable<ServiceResponseWithHeaders<LoggerContractInner,LoggerCreateOrUpdateHeaders>> createOrUpdateWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "parameters"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
      description: "Create parameters."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerCreateOrUpdateHeaders>>"
      description: "the observable to the LoggerContractInner object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,java.lang.String)"
  id: "createOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "createOrUpdateWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch)"
  nameWithType: "LoggersInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Creates or Updates a logger."
  syntax:
    content: "public Observable<ServiceResponseWithHeaders<LoggerContractInner,LoggerCreateOrUpdateHeaders>> createOrUpdateWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, LoggerContractInner parameters, String ifMatch)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "parameters"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
      description: "Create parameters."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. Not required when creating an entity, but required when updating an entity."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerCreateOrUpdateHeaders>>"
      description: "the observable to the LoggerContractInner object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "delete(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  nameWithType: "LoggersInner.delete(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.delete(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.delete*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Deletes the specified logger."
  syntax:
    content: "public void delete(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  id: "delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "delete(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force)"
  nameWithType: "LoggersInner.delete(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.delete(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.delete*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Deletes the specified logger."
  syntax:
    content: "public void delete(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    - id: "force"
      type: "java.lang.Boolean"
      description: "Force deletion even if diagnostic is attached."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  nameWithType: "LoggersInner.deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Deletes the specified logger."
  syntax:
    content: "public Observable<Void> deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LoggersInner.deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Deletes the specified logger."
  syntax:
    content: "public ServiceFuture<Void> deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  id: "deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force)"
  nameWithType: "LoggersInner.deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Deletes the specified logger."
  syntax:
    content: "public Observable<Void> deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    - id: "force"
      type: "java.lang.Boolean"
      description: "Force deletion even if diagnostic is attached."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LoggersInner.deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Deletes the specified logger."
  syntax:
    content: "public ServiceFuture<Void> deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    - id: "force"
      type: "java.lang.Boolean"
      description: "Force deletion even if diagnostic is attached."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "deleteWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  nameWithType: "LoggersInner.deleteWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Deletes the specified logger."
  syntax:
    content: "public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  id: "deleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "deleteWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force)"
  nameWithType: "LoggersInner.deleteWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Deletes the specified logger."
  syntax:
    content: "public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch, Boolean force)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    - id: "force"
      type: "java.lang.Boolean"
      description: "Force deletion even if diagnostic is attached."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.get(java.lang.String,java.lang.String,java.lang.String)"
  id: "get(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "get(String resourceGroupName, String serviceName, String loggerId)"
  nameWithType: "LoggersInner.get(String resourceGroupName, String serviceName, String loggerId)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.get(String resourceGroupName, String serviceName, String loggerId)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.get*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Gets the details of the logger specified by its identifier."
  syntax:
    content: "public LoggerContractInner get(String resourceGroupName, String serviceName, String loggerId)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
      description: "the LoggerContractInner object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "getAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "getAsync(String resourceGroupName, String serviceName, String loggerId)"
  nameWithType: "LoggersInner.getAsync(String resourceGroupName, String serviceName, String loggerId)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getAsync(String resourceGroupName, String serviceName, String loggerId)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Gets the details of the logger specified by its identifier."
  syntax:
    content: "public Observable<LoggerContractInner> getAsync(String resourceGroupName, String serviceName, String loggerId)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    return:
      type: "rx.Observable<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the observable to the LoggerContractInner object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  id: "getAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "getAsync(String resourceGroupName, String serviceName, String loggerId, ServiceCallback<LoggerContractInner> serviceCallback)"
  nameWithType: "LoggersInner.getAsync(String resourceGroupName, String serviceName, String loggerId, ServiceCallback<LoggerContractInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getAsync(String resourceGroupName, String serviceName, String loggerId, ServiceCallback<LoggerContractInner> serviceCallback)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Gets the details of the logger specified by its identifier."
  syntax:
    content: "public ServiceFuture<LoggerContractInner> getAsync(String resourceGroupName, String serviceName, String loggerId, ServiceCallback<LoggerContractInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTag(java.lang.String,java.lang.String,java.lang.String)"
  id: "getEntityTag(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "getEntityTag(String resourceGroupName, String serviceName, String loggerId)"
  nameWithType: "LoggersInner.getEntityTag(String resourceGroupName, String serviceName, String loggerId)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTag(String resourceGroupName, String serviceName, String loggerId)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTag*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Gets the entity state (Etag) version of the logger specified by its identifier."
  syntax:
    content: "public void getEntityTag(String resourceGroupName, String serviceName, String loggerId)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "getEntityTagAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "getEntityTagAsync(String resourceGroupName, String serviceName, String loggerId)"
  nameWithType: "LoggersInner.getEntityTagAsync(String resourceGroupName, String serviceName, String loggerId)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagAsync(String resourceGroupName, String serviceName, String loggerId)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Gets the entity state (Etag) version of the logger specified by its identifier."
  syntax:
    content: "public Observable<Void> getEntityTagAsync(String resourceGroupName, String serviceName, String loggerId)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\">ServiceResponseWithHeaders</xref> object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "getEntityTagAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "getEntityTagAsync(String resourceGroupName, String serviceName, String loggerId, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LoggersInner.getEntityTagAsync(String resourceGroupName, String serviceName, String loggerId, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagAsync(String resourceGroupName, String serviceName, String loggerId, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Gets the entity state (Etag) version of the logger specified by its identifier."
  syntax:
    content: "public ServiceFuture<Void> getEntityTagAsync(String resourceGroupName, String serviceName, String loggerId, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "getEntityTagWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "getEntityTagWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId)"
  nameWithType: "LoggersInner.getEntityTagWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Gets the entity state (Etag) version of the logger specified by its identifier."
  syntax:
    content: "public Observable<ServiceResponseWithHeaders<Void,LoggerGetEntityTagHeaders>> getEntityTagWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerGetEntityTagHeaders>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\">ServiceResponseWithHeaders</xref> object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "getWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "getWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId)"
  nameWithType: "LoggersInner.getWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Gets the details of the logger specified by its identifier."
  syntax:
    content: "public Observable<ServiceResponseWithHeaders<LoggerContractInner,LoggerGetHeaders>> getWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerGetHeaders>>"
      description: "the observable to the LoggerContractInner object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByService(java.lang.String,java.lang.String)"
  id: "listByService(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByService(String resourceGroupName, String serviceName)"
  nameWithType: "LoggersInner.listByService(String resourceGroupName, String serviceName)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByService(String resourceGroupName, String serviceName)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByService*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public PagedList<LoggerContractInner> listByService(String resourceGroupName, String serviceName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the PagedList&lt;LoggerContractInner&gt; object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByService(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)"
  id: "listByService(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
  nameWithType: "LoggersInner.listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByService*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public PagedList<LoggerContractInner> listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "filter"
      type: "java.lang.String"
      description: "|   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | &lt;/br&gt;| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | &lt;/br&gt;| loggerType | filter | eq |     | &lt;/br&gt;| resourceId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | &lt;/br&gt;"
    - id: "top"
      type: "java.lang.Integer"
      description: "Number of records to return."
    - id: "skip"
      type: "java.lang.Integer"
      description: "Number of records to skip."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the PagedList&lt;LoggerContractInner&gt; object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync(java.lang.String,java.lang.String)"
  id: "listByServiceAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceAsync(String resourceGroupName, String serviceName)"
  nameWithType: "LoggersInner.listByServiceAsync(String resourceGroupName, String serviceName)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync(String resourceGroupName, String serviceName)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public Observable<Page<LoggerContractInner>> listByServiceAsync(String resourceGroupName, String serviceName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>"
      description: "the observable to the PagedList&lt;LoggerContractInner&gt; object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync(java.lang.String,java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  id: "listByServiceAsync(java.lang.String,java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceAsync(String resourceGroupName, String serviceName, ListOperationCallback<LoggerContractInner> serviceCallback)"
  nameWithType: "LoggersInner.listByServiceAsync(String resourceGroupName, String serviceName, ListOperationCallback<LoggerContractInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync(String resourceGroupName, String serviceName, ListOperationCallback<LoggerContractInner> serviceCallback)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public ServiceFuture<List<LoggerContractInner>> listByServiceAsync(String resourceGroupName, String serviceName, ListOperationCallback<LoggerContractInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)"
  id: "listByServiceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
  nameWithType: "LoggersInner.listByServiceAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public Observable<Page<LoggerContractInner>> listByServiceAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "filter"
      type: "java.lang.String"
      description: "|   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | &lt;/br&gt;| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | &lt;/br&gt;| loggerType | filter | eq |     | &lt;/br&gt;| resourceId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | &lt;/br&gt;"
    - id: "top"
      type: "java.lang.Integer"
      description: "Number of records to return."
    - id: "skip"
      type: "java.lang.Integer"
      description: "Number of records to skip."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>"
      description: "the observable to the PagedList&lt;LoggerContractInner&gt; object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  id: "listByServiceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, ListOperationCallback<LoggerContractInner> serviceCallback)"
  nameWithType: "LoggersInner.listByServiceAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, ListOperationCallback<LoggerContractInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, ListOperationCallback<LoggerContractInner> serviceCallback)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public ServiceFuture<List<LoggerContractInner>> listByServiceAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, ListOperationCallback<LoggerContractInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "filter"
      type: "java.lang.String"
      description: "|   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | &lt;/br&gt;| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | &lt;/br&gt;| loggerType | filter | eq |     | &lt;/br&gt;| resourceId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | &lt;/br&gt;"
    - id: "top"
      type: "java.lang.Integer"
      description: "Number of records to return."
    - id: "skip"
      type: "java.lang.Integer"
      description: "Number of records to skip."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNext(java.lang.String)"
  id: "listByServiceNext(java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceNext(String nextPageLink)"
  nameWithType: "LoggersInner.listByServiceNext(String nextPageLink)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNext(String nextPageLink)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNext*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public PagedList<LoggerContractInner> listByServiceNext(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the PagedList&lt;LoggerContractInner&gt; object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextAsync(java.lang.String)"
  id: "listByServiceNextAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceNextAsync(String nextPageLink)"
  nameWithType: "LoggersInner.listByServiceNextAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public Observable<Page<LoggerContractInner>> listByServiceNextAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>"
      description: "the observable to the PagedList&lt;LoggerContractInner&gt; object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  id: "listByServiceNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceNextAsync(String nextPageLink, ServiceFuture<List<LoggerContractInner>> serviceFuture, ListOperationCallback<LoggerContractInner> serviceCallback)"
  nameWithType: "LoggersInner.listByServiceNextAsync(String nextPageLink, ServiceFuture<List<LoggerContractInner>> serviceFuture, ListOperationCallback<LoggerContractInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextAsync(String nextPageLink, ServiceFuture<List<LoggerContractInner>> serviceFuture, ListOperationCallback<LoggerContractInner> serviceCallback)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public ServiceFuture<List<LoggerContractInner>> listByServiceNextAsync(String nextPageLink, ServiceFuture<List<LoggerContractInner>> serviceFuture, ListOperationCallback<LoggerContractInner> serviceCallback)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    - id: "serviceFuture"
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>"
      description: "the ServiceFuture object tracking the Retrofit calls"
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextSinglePageAsync(java.lang.String)"
  id: "listByServiceNextSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceNextSinglePageAsync(String nextPageLink)"
  nameWithType: "LoggersInner.listByServiceNextSinglePageAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextSinglePageAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance. ServiceResponse> \\* @param nextPageLink The NextLink from the previous successful call to List operation."
  syntax:
    content: "public Observable<ServiceResponse<Page<LoggerContractInner>>> listByServiceNextSinglePageAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>>"
      description: "the PagedList&lt;LoggerContractInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextWithServiceResponseAsync(java.lang.String)"
  id: "listByServiceNextWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "LoggersInner.listByServiceNextWithServiceResponseAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextWithServiceResponseAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public Observable<ServiceResponse<Page<LoggerContractInner>>> listByServiceNextWithServiceResponseAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>>"
      description: "the observable to the PagedList&lt;LoggerContractInner&gt; object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceSinglePageAsync(java.lang.String,java.lang.String)"
  id: "listByServiceSinglePageAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceSinglePageAsync(String resourceGroupName, String serviceName)"
  nameWithType: "LoggersInner.listByServiceSinglePageAsync(String resourceGroupName, String serviceName)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceSinglePageAsync(String resourceGroupName, String serviceName)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public Observable<ServiceResponse<Page<LoggerContractInner>>> listByServiceSinglePageAsync(String resourceGroupName, String serviceName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>>"
      description: "the PagedList&lt;LoggerContractInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)"
  id: "listByServiceSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceSinglePageAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
  nameWithType: "LoggersInner.listByServiceSinglePageAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceSinglePageAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance. ServiceResponse> \\* @param resourceGroupName The name of the resource group. ServiceResponse> \\* @param serviceName The name of the API Management service. ServiceResponse> \\* @param filter | Field | Usage | Supported operators | Supported functions |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| loggerType | filter | eq | | </br>| resourceId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br> ServiceResponse> \\* @param top Number of records to return. ServiceResponse> \\* @param skip Number of records to skip."
  syntax:
    content: "public Observable<ServiceResponse<Page<LoggerContractInner>>> listByServiceSinglePageAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
    - id: "serviceName"
      type: "java.lang.String"
    - id: "filter"
      type: "java.lang.String"
    - id: "top"
      type: "java.lang.Integer"
    - id: "skip"
      type: "java.lang.Integer"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>>"
      description: "the PagedList&lt;LoggerContractInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "listByServiceWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceWithServiceResponseAsync(String resourceGroupName, String serviceName)"
  nameWithType: "LoggersInner.listByServiceWithServiceResponseAsync(String resourceGroupName, String serviceName)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceWithServiceResponseAsync(String resourceGroupName, String serviceName)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public Observable<ServiceResponse<Page<LoggerContractInner>>> listByServiceWithServiceResponseAsync(String resourceGroupName, String serviceName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>>"
      description: "the observable to the PagedList&lt;LoggerContractInner&gt; object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)"
  id: "listByServiceWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "listByServiceWithServiceResponseAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
  nameWithType: "LoggersInner.listByServiceWithServiceResponseAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceWithServiceResponseAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Lists a collection of loggers in the specified service instance."
  syntax:
    content: "public Observable<ServiceResponse<Page<LoggerContractInner>>> listByServiceWithServiceResponseAsync(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "filter"
      type: "java.lang.String"
      description: "|   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | &lt;/br&gt;| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | &lt;/br&gt;| loggerType | filter | eq |     | &lt;/br&gt;| resourceId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | &lt;/br&gt;"
    - id: "top"
      type: "java.lang.Integer"
      description: "Number of records to return."
    - id: "skip"
      type: "java.lang.Integer"
      description: "Number of records to skip."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>>"
      description: "the observable to the PagedList&lt;LoggerContractInner&gt; object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.update(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract,java.lang.String)"
  id: "update(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "update(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch)"
  nameWithType: "LoggersInner.update(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.update(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.update*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Updates an existing logger."
  syntax:
    content: "public void update(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "parameters"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract"
      description: "Update parameters."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract,java.lang.String)"
  id: "updateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "updateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch)"
  nameWithType: "LoggersInner.updateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Updates an existing logger."
  syntax:
    content: "public Observable<Void> updateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "parameters"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract"
      description: "Update parameters."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "updateAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "updateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch, ServiceCallback<Void> serviceCallback)"
  nameWithType: "LoggersInner.updateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Updates an existing logger."
  syntax:
    content: "public ServiceFuture<Void> updateAsync(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "parameters"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract"
      description: "Update parameters."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract,java.lang.String)"
  id: "updateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract,java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner"
  langs:
  - "java"
  name: "updateWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch)"
  nameWithType: "LoggersInner.updateWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Updates an existing logger."
  syntax:
    content: "public Observable<ServiceResponse<Void>> updateWithServiceResponseAsync(String resourceGroupName, String serviceName, String loggerId, LoggerUpdateContract parameters, String ifMatch)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group."
    - id: "serviceName"
      type: "java.lang.String"
      description: "The name of the API Management service."
    - id: "loggerId"
      type: "java.lang.String"
      description: "Logger identifier. Must be unique in the API Management service instance."
    - id: "parameters"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract"
      description: "Update parameters."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
references:
- uid: "retrofit2.Retrofit"
  spec.java:
  - uid: "retrofit2.Retrofit"
    name: "Retrofit"
    fullName: "retrofit2.Retrofit"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementClientImpl"
  name: "ApiManagementClientImpl"
  nameWithType: "ApiManagementClientImpl"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementClientImpl"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.LoggersInner*"
  name: "LoggersInner"
  nameWithType: "LoggersInner.LoggersInner"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.LoggersInner"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.PagedList<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
  spec.java:
  - uid: "com.microsoft.azure.PagedList"
    name: "PagedList"
    fullName: "com.microsoft.azure.PagedList"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
    name: "LoggerContractInner"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByService*"
  name: "listByService"
  nameWithType: "LoggersInner.listByService"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByService"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
  spec.java:
  - uid: "com.microsoft.azure.ListOperationCallback"
    name: "ListOperationCallback"
    fullName: "com.microsoft.azure.ListOperationCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
    name: "LoggerContractInner"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
    name: "LoggerContractInner"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync*"
  name: "listByServiceAsync"
  nameWithType: "LoggersInner.listByServiceAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.Page"
    name: "Page"
    fullName: "com.microsoft.azure.Page"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
    name: "LoggerContractInner"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.Page"
    name: "Page"
    fullName: "com.microsoft.azure.Page"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
    name: "LoggerContractInner"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceWithServiceResponseAsync*"
  name: "listByServiceWithServiceResponseAsync"
  nameWithType: "LoggersInner.listByServiceWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceWithServiceResponseAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceSinglePageAsync*"
  name: "listByServiceSinglePageAsync"
  nameWithType: "LoggersInner.listByServiceSinglePageAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceSinglePageAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTag*"
  name: "getEntityTag"
  nameWithType: "LoggersInner.getEntityTag"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTag"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagAsync*"
  name: "getEntityTagAsync"
  nameWithType: "LoggersInner.getEntityTagAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "rx.Observable<java.lang.Void>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerGetEntityTagHeaders>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponseWithHeaders"
    name: "ServiceResponseWithHeaders"
    fullName: "com.microsoft.rest.ServiceResponseWithHeaders"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerGetEntityTagHeaders"
    name: "LoggerGetEntityTagHeaders"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerGetEntityTagHeaders"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagWithServiceResponseAsync*"
  name: "getEntityTagWithServiceResponseAsync"
  nameWithType: "LoggersInner.getEntityTagWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getEntityTagWithServiceResponseAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
  name: "LoggerContractInner"
  nameWithType: "LoggerContractInner"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.get*"
  name: "get"
  nameWithType: "LoggersInner.get"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.get"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
    name: "LoggerContractInner"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
    name: "LoggerContractInner"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getAsync*"
  name: "getAsync"
  nameWithType: "LoggersInner.getAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
    name: "LoggerContractInner"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerGetHeaders>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponseWithHeaders"
    name: "ServiceResponseWithHeaders"
    fullName: "com.microsoft.rest.ServiceResponseWithHeaders"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
    name: "LoggerContractInner"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerGetHeaders"
    name: "LoggerGetHeaders"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerGetHeaders"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getWithServiceResponseAsync*"
  name: "getWithServiceResponseAsync"
  nameWithType: "LoggersInner.getWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.getWithServiceResponseAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdate*"
  name: "createOrUpdate"
  nameWithType: "LoggersInner.createOrUpdate"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdate"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync*"
  name: "createOrUpdateAsync"
  nameWithType: "LoggersInner.createOrUpdateAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerCreateOrUpdateHeaders>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponseWithHeaders"
    name: "ServiceResponseWithHeaders"
    fullName: "com.microsoft.rest.ServiceResponseWithHeaders"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
    name: "LoggerContractInner"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerCreateOrUpdateHeaders"
    name: "LoggerCreateOrUpdateHeaders"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerCreateOrUpdateHeaders"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateWithServiceResponseAsync*"
  name: "createOrUpdateWithServiceResponseAsync"
  nameWithType: "LoggersInner.createOrUpdateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.createOrUpdateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract"
  name: "LoggerUpdateContract"
  nameWithType: "LoggerUpdateContract"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerUpdateContract"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.update*"
  name: "update"
  nameWithType: "LoggersInner.update"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.update"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateAsync*"
  name: "updateAsync"
  nameWithType: "LoggersInner.updateAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateWithServiceResponseAsync*"
  name: "updateWithServiceResponseAsync"
  nameWithType: "LoggersInner.updateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.updateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.delete*"
  name: "delete"
  nameWithType: "LoggersInner.delete"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.delete"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync*"
  name: "deleteAsync"
  nameWithType: "LoggersInner.deleteAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteWithServiceResponseAsync*"
  name: "deleteWithServiceResponseAsync"
  nameWithType: "LoggersInner.deleteWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.deleteWithServiceResponseAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNext*"
  name: "listByServiceNext"
  nameWithType: "LoggersInner.listByServiceNext"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNext"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextAsync*"
  name: "listByServiceNextAsync"
  nameWithType: "LoggersInner.listByServiceNextAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextWithServiceResponseAsync*"
  name: "listByServiceNextWithServiceResponseAsync"
  nameWithType: "LoggersInner.listByServiceNextWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextWithServiceResponseAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextSinglePageAsync*"
  name: "listByServiceNextSinglePageAsync"
  nameWithType: "LoggersInner.listByServiceNextSinglePageAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.listByServiceNextSinglePageAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.LoggersService"
  name: "LoggersInner.LoggersService"
  nameWithType: "LoggersInner.LoggersService"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner.LoggersService"
- uid: "com.microsoft.azure.PagedList"
  name: "PagedList"
  nameWithType: "PagedList"
  fullName: "com.microsoft.azure.PagedList"
- uid: "com.microsoft.azure.ListOperationCallback"
  name: "ListOperationCallback"
  nameWithType: "ListOperationCallback"
  fullName: "com.microsoft.azure.ListOperationCallback"
- uid: "com.microsoft.rest.ServiceFuture"
  name: "ServiceFuture"
  nameWithType: "ServiceFuture"
  fullName: "com.microsoft.rest.ServiceFuture"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.microsoft.azure.Page"
  name: "Page"
  nameWithType: "Page"
  fullName: "com.microsoft.azure.Page"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
- uid: "com.microsoft.rest.ServiceResponse"
  name: "ServiceResponse"
  nameWithType: "ServiceResponse"
  fullName: "com.microsoft.rest.ServiceResponse"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "com.microsoft.rest.ServiceCallback"
  name: "ServiceCallback"
  nameWithType: "ServiceCallback"
  fullName: "com.microsoft.rest.ServiceCallback"
- uid: "com.microsoft.rest.ServiceResponseWithHeaders"
  name: "ServiceResponseWithHeaders"
  nameWithType: "ServiceResponseWithHeaders"
  fullName: "com.microsoft.rest.ServiceResponseWithHeaders"
- uid: "java.lang.Void,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerGetEntityTagHeaders"
  name: "Void,LoggerGetEntityTagHeaders"
  nameWithType: "Void,LoggerGetEntityTagHeaders"
  fullName: "java.lang.Void,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerGetEntityTagHeaders"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerGetHeaders"
  name: "LoggerContractInner,LoggerGetHeaders"
  nameWithType: "LoggerContractInner,LoggerGetHeaders"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerGetHeaders"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerCreateOrUpdateHeaders"
  name: "LoggerContractInner,LoggerCreateOrUpdateHeaders"
  nameWithType: "LoggerContractInner,LoggerCreateOrUpdateHeaders"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggerContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerCreateOrUpdateHeaders"
