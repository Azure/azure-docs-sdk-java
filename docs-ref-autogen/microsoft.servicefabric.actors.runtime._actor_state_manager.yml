### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager
  id: _actor_state_manager
  parent: microsoft.servicefabric.actors.runtime
  children:
  - microsoft.servicefabric.actors.runtime._actor_state_manager.addOrUpdateStateAsync(String,T,BiFunction<String, T, T>)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.addOrUpdateStateAsync(String,T,BiFunction<String, T, T>,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.addStateAsync(String,T)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.addStateAsync(String,T,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.clearCacheAsync()
  - microsoft.servicefabric.actors.runtime._actor_state_manager.clearCacheAsync(CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.containsStateAsync(String)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.containsStateAsync(String,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.getOrAddStateAsync(String,T)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.getOrAddStateAsync(String,T,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.getStateAsync(String)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.getStateAsync(String,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.getStateNamesAsync()
  - microsoft.servicefabric.actors.runtime._actor_state_manager.getStateNamesAsync(CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.removeStateAsync(String)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.removeStateAsync(String,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.saveStateAsync()
  - microsoft.servicefabric.actors.runtime._actor_state_manager.saveStateAsync(CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.setStateAsync(String,T)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.setStateAsync(String,T,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.tryAddStateAsync(String,T)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.tryAddStateAsync(String,T,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.tryGetStateAsync(String)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.tryGetStateAsync(String,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.tryRemoveStateAsync(String)
  - microsoft.servicefabric.actors.runtime._actor_state_manager.tryRemoveStateAsync(String,CancellationToken)
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: ActorStateManager
  nameWithType: ActorStateManager
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 13
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Represents the interface that state manager for <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> implements. </p>"
  syntax: &o1
    content: public interface ActorStateManager
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.addOrUpdateStateAsync(String,T,BiFunction<String, T, T>)
  id: addOrUpdateStateAsync(String,T,BiFunction<String, T, T>)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
  nameWithType: ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.addOrUpdateStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 277
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Adds an actor state with given state name, if it does not already exist or updates specified state name and value, if it does not exist.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<T> addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add or get. </p>
    - id: addValue
      type: 8ce1ecb9
      description: <p>Value of the actor state to add if it doesn't exist. </p>
    - id: updateValueFactory
      type: 6d910369
      description: <p>Factory function to generate value of actor state to update if it exists. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous add/update operation. The value of T parameter contains value of actor state that was added/updated. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.addOrUpdateStateAsync(String,T,BiFunction<String, T, T>,CancellationToken)
  id: addOrUpdateStateAsync(String,T,BiFunction<String, T, T>,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.addOrUpdateStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 300
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Adds an actor state with given state name, if it does not already exist or updates specified state name and value, if it does not exist.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<T> addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory, CancellationToken cancellationToken)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add or get. </p>
    - id: addValue
      type: 8ce1ecb9
      description: <p>Value of the actor state to add if it doesn't exist. </p>
    - id: updateValueFactory
      type: 6d910369
      description: <p>Factory function to generate value of actor state to update if it exists. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous add/update operation. The value of T parameter contains value of actor state that was added/updated. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.addStateAsync(String,T)
  id: addStateAsync(String,T)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: addStateAsync(String stateName, T value)
  nameWithType: ActorStateManager.addStateAsync(String stateName, T value)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.addStateAsync(String stateName, T value)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.addStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 26
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Adds an actor state with given state name.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<?> addStateAsync(String stateName, T value)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>Value of the actor state to add. </p>
    return:
      type: a5c17814
      description: <p>A task that represents the asynchronous add operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.addStateAsync(String,T,CancellationToken)
  id: addStateAsync(String,T,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: addStateAsync(String stateName, T value, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.addStateAsync(String stateName, T value, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.addStateAsync(String stateName, T value, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.addStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 42
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Adds an actor state with given state name.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<?> addStateAsync(String stateName, T value, CancellationToken cancellationToken)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>Value of the actor state to add. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: a5c17814
      description: <p>A task that represents the asynchronous add operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.clearCacheAsync()
  id: clearCacheAsync()
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: clearCacheAsync()
  nameWithType: ActorStateManager.clearCacheAsync()
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.clearCacheAsync()
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.clearCacheAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 335
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Clears all the cached actor states and any operation(s) performed on <xref uid=\"microsoft.servicefabric.actors.runtime._actor_state_manager\" data-throw-if-not-resolved=\"false\">ActorStateManager</xref> since last state save operation.</p>\r\n<p>\r\n  <b>Remarks:</b> All the operation(s) performed on <xref uid=\"microsoft.servicefabric.actors.runtime._actor_state_manager\" data-throw-if-not-resolved=\"false\">ActorStateManager</xref> since last save operation are cleared on clearing the cache and will not be included in next save operation. </p>"
  syntax:
    content: public CompletableFuture<?> clearCacheAsync()
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous clear cache operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.clearCacheAsync(CancellationToken)
  id: clearCacheAsync(CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: clearCacheAsync(CancellationToken cancellationToken)
  nameWithType: ActorStateManager.clearCacheAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.clearCacheAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.clearCacheAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 351
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Clears all the cached actor states and any operation(s) performed on <xref uid=\"microsoft.servicefabric.actors.runtime._actor_state_manager\" data-throw-if-not-resolved=\"false\">ActorStateManager</xref> since last state save operation.</p>\r\n<p>\r\n  <b>Remarks:</b> All the operation(s) performed on <xref uid=\"microsoft.servicefabric.actors.runtime._actor_state_manager\" data-throw-if-not-resolved=\"false\">ActorStateManager</xref> since last save operation are cleared on clearing the cache and will not be included in next save operation. </p>"
  syntax:
    content: public CompletableFuture<?> clearCacheAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous clear cache operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.containsStateAsync(String)
  id: containsStateAsync(String)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: containsStateAsync(String stateName)
  nameWithType: ActorStateManager.containsStateAsync(String stateName)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.containsStateAsync(String stateName)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.containsStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 214
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Checks if an actor state with specified name exists.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Boolean> containsStateAsync(String stateName)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous check operation. The value of T parameter is true if state with specified name exists otherwise false. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.containsStateAsync(String,CancellationToken)
  id: containsStateAsync(String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: containsStateAsync(String stateName, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.containsStateAsync(String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.containsStateAsync(String stateName, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.containsStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 227
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Checks if an actor state with specified name exists.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Boolean> containsStateAsync(String stateName, CancellationToken cancellationToken)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous check operation. The value of T parameter is true if state with specified name exists otherwise false. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.getOrAddStateAsync(String,T)
  id: getOrAddStateAsync(String,T)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: getOrAddStateAsync(String stateName, T value)
  nameWithType: ActorStateManager.getOrAddStateAsync(String stateName, T value)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.getOrAddStateAsync(String stateName, T value)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.getOrAddStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 242
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets an actor state with given state name, if it exists or adds the state with the state with specified state name, if it exists.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<T> getOrAddStateAsync(String stateName, T value)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add/update. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>Value of the actor state to add /update. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous add or get operation. The value of T parameter contains the value of the actor state with the given state. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.getOrAddStateAsync(String,T,CancellationToken)
  id: getOrAddStateAsync(String,T,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: getOrAddStateAsync(String stateName, T value, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.getOrAddStateAsync(String stateName, T value, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.getOrAddStateAsync(String stateName, T value, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.getOrAddStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 260
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets an actor state with given state name, if it exists or adds the state with the state with specified state name, if it exists.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<T> getOrAddStateAsync(String stateName, T value, CancellationToken cancellationToken)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add/update. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>Value of the actor state to add /update. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous add or get operation. The value of T parameter contains the value of the actor state with the given state. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.getStateAsync(String)
  id: getStateAsync(String)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: getStateAsync(String stateName)
  nameWithType: ActorStateManager.getStateAsync(String stateName)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.getStateAsync(String stateName)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.getStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 54
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets an actor state with specified state name.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<T> getStateAsync(String stateName)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous get operation. The value of T parameter contains value of actor state with given state name. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.getStateAsync(String,CancellationToken)
  id: getStateAsync(String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: getStateAsync(String stateName, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.getStateAsync(String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.getStateAsync(String stateName, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.getStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 69
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets an actor state with specified state name.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<T> getStateAsync(String stateName, CancellationToken cancellationToken)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous get operation. The value of T parameter contains value of actor state with given state name. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.getStateNamesAsync()
  id: getStateNamesAsync()
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: getStateNamesAsync()
  nameWithType: ActorStateManager.getStateNamesAsync()
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.getStateNamesAsync()
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.getStateNamesAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 311
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Creates an List of all actor state names for current actor.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<List<String>> getStateNamesAsync()
    return:
      type: d20512af
      description: <p>A task that represents the asynchronous enumeration operation. The value of T parameter is an enumerable of all actor state names. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.getStateNamesAsync(CancellationToken)
  id: getStateNamesAsync(CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: getStateNamesAsync(CancellationToken cancellationToken)
  nameWithType: ActorStateManager.getStateNamesAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.getStateNamesAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.getStateNamesAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 322
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Creates an List of all actor state names for current actor.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<List<String>> getStateNamesAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: d20512af
      description: <p>A task that represents the asynchronous enumeration operation. The value of T parameter is an enumerable of all actor state names. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.removeStateAsync(String)
  id: removeStateAsync(String)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: removeStateAsync(String stateName)
  nameWithType: ActorStateManager.removeStateAsync(String stateName)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.removeStateAsync(String stateName)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.removeStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 109
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Removes an actor state with given state name to specified value.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> removeStateAsync(String stateName)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to remove. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous remove operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.removeStateAsync(String,CancellationToken)
  id: removeStateAsync(String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: removeStateAsync(String stateName, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.removeStateAsync(String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.removeStateAsync(String stateName, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.removeStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 121
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Removes an actor state with given state name to specified value.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> removeStateAsync(String stateName, CancellationToken cancellationToken)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to remove. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous remove operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.saveStateAsync()
  id: saveStateAsync()
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: saveStateAsync()
  nameWithType: ActorStateManager.saveStateAsync()
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.saveStateAsync()
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.saveStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 359
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Saves all the cached state changes (add/update/remove) that were made since last call to <xref uid=\"microsoft.servicefabric.actors.runtime._actor_state_manager.saveStateAsync(CancellationToken)\" data-throw-if-not-resolved=\"false\">ActorStateManager#saveStateAsync(CancellationToken)</xref> by actor runtime or by user explicitly.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> saveStateAsync()
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.saveStateAsync(CancellationToken)
  id: saveStateAsync(CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: saveStateAsync(CancellationToken cancellationToken)
  nameWithType: ActorStateManager.saveStateAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.saveStateAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.saveStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 370
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Saves all the cached state changes (add/update/remove) that were made since last call to <xref uid=\"microsoft.servicefabric.actors.runtime._actor_state_manager.saveStateAsync(CancellationToken)\" data-throw-if-not-resolved=\"false\">ActorStateManager#saveStateAsync(CancellationToken)</xref> by actor runtime or by user explicitly.</p>\r\n<p></p>"
  syntax: &o2
    content: public CompletableFuture<?> saveStateAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.setStateAsync(String,T)
  id: setStateAsync(String,T)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: setStateAsync(String stateName, T value)
  nameWithType: ActorStateManager.setStateAsync(String stateName, T value)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.setStateAsync(String stateName, T value)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.setStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 83
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Removes an actor state with specified state name. If an actor state with specified name does not exist, it is added.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<?> setStateAsync(String stateName, T value)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to set. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>Value of the actor state to set. </p>
    return:
      type: a5c17814
      description: <p>A task that represents the asynchronous set operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.setStateAsync(String,T,CancellationToken)
  id: setStateAsync(String,T,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: setStateAsync(String stateName, T value, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.setStateAsync(String stateName, T value, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.setStateAsync(String stateName, T value, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.setStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 100
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Removes an actor state with specified state name. If an actor state with specified name does not exist, it is added.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<?> setStateAsync(String stateName, T value, CancellationToken cancellationToken)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to set. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>Value of the actor state to set. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: a5c17814
      description: <p>A task that represents the asynchronous set operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.tryAddStateAsync(String,T)
  id: tryAddStateAsync(String,T)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: tryAddStateAsync(String stateName, T value)
  nameWithType: ActorStateManager.tryAddStateAsync(String stateName, T value)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.tryAddStateAsync(String stateName, T value)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.tryAddStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 135
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Attempts to add an actor state with given state name.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<Boolean> tryAddStateAsync(String stateName, T value)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>Value of the actor state to add. </p>
    return:
      type: 2ebb647c
      description: <p>A task that represents the asynchronous add operation. The value of T parameter indicates if the state was successfully added. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.tryAddStateAsync(String,T,CancellationToken)
  id: tryAddStateAsync(String,T,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: tryAddStateAsync(String stateName, T value, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.tryAddStateAsync(String stateName, T value, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.tryAddStateAsync(String stateName, T value, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.tryAddStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 152
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Attempts to add an actor state with given state name.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<Boolean> tryAddStateAsync(String stateName, T value, CancellationToken cancellationToken)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>Value of the actor state to add. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 2ebb647c
      description: <p>A task that represents the asynchronous add operation. The value of T parameter indicates if the state was successfully added. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.tryGetStateAsync(String)
  id: tryGetStateAsync(String)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: tryGetStateAsync(String stateName)
  nameWithType: ActorStateManager.tryGetStateAsync(String stateName)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.tryGetStateAsync(String stateName)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.tryGetStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 165
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Attempts to get an actor state with specified state name.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<ConditionalValue<T>> tryGetStateAsync(String stateName)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to get. </p>
    return:
      type: 013f9378microsoft.servicefabric.data._conditional_value84ce83e6
      description: <p>A task that represents the asynchronous get operation. The value of T parameter contains <xref uid="" data-throw-if-not-resolved="false">ConditionalValue</xref> indicating whether the actor state is present and the value of actor state if it is present. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.tryGetStateAsync(String,CancellationToken)
  id: tryGetStateAsync(String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: tryGetStateAsync(String stateName, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.tryGetStateAsync(String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.tryGetStateAsync(String stateName, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.tryGetStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 181
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Attempts to get an actor state with specified state name.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<ConditionalValue<T>> tryGetStateAsync(String stateName, CancellationToken cancellationToken)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to get. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 013f9378microsoft.servicefabric.data._conditional_value84ce83e6
      description: <p>A task that represents the asynchronous get operation. The value of T parameter contains <xref uid="" data-throw-if-not-resolved="false">ConditionalValue</xref> indicating whether the actor state is present and the value of actor state if it is present. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.tryRemoveStateAsync(String)
  id: tryRemoveStateAsync(String)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: tryRemoveStateAsync(String stateName)
  nameWithType: ActorStateManager.tryRemoveStateAsync(String stateName)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.tryRemoveStateAsync(String stateName)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.tryRemoveStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 191
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Attempts to remove an actor state with specified state name.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Boolean> tryRemoveStateAsync(String stateName)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to remove. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous remove operation. The value of T parameter indicates if the state was successfully removed. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.tryRemoveStateAsync(String,CancellationToken)
  id: tryRemoveStateAsync(String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  langs:
  - java
  name: tryRemoveStateAsync(String stateName, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.tryRemoveStateAsync(String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.tryRemoveStateAsync(String stateName, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_manager.tryRemoveStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateManager.java
    startLine: 204
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Attempts to remove an actor state with specified state name.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Boolean> tryRemoveStateAsync(String stateName, CancellationToken cancellationToken)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to remove. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous remove operation. The value of T parameter indicates if the state was successfully removed. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: a5c17814
  spec.java:
  - name: <T> CompletableFuture<?>
    fullName: <T> CompletableFuture<?>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.addStateAsync*
  name: addStateAsync
  nameWithType: ActorStateManager.addStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.addStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 6d056e8b
  spec.java:
  - name: <T> CompletableFuture<T>
    fullName: <T> CompletableFuture<T>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.getStateAsync*
  name: getStateAsync
  nameWithType: ActorStateManager.getStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.getStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.setStateAsync*
  name: setStateAsync
  nameWithType: ActorStateManager.setStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.setStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.removeStateAsync*
  name: removeStateAsync
  nameWithType: ActorStateManager.removeStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.removeStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 2ebb647c
  spec.java:
  - name: <T> CompletableFuture<Boolean>
    fullName: <T> CompletableFuture<Boolean>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.tryAddStateAsync*
  name: tryAddStateAsync
  nameWithType: ActorStateManager.tryAddStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.tryAddStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 013f9378microsoft.servicefabric.data._conditional_value84ce83e6
  spec.java:
  - name: <T> CompletableFuture<
    fullName: <T> CompletableFuture<
  - uid: microsoft.servicefabric.data._conditional_value
    name: ConditionalValue
    fullName: microsoft.servicefabric.data.ConditionalValue
    href: microsoft.servicefabric.data._conditional_value.yml
  - name: <T>>
    fullName: <T>>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.tryGetStateAsync*
  name: tryGetStateAsync
  nameWithType: ActorStateManager.tryGetStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.tryGetStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.tryRemoveStateAsync*
  name: tryRemoveStateAsync
  nameWithType: ActorStateManager.tryRemoveStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.tryRemoveStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.containsStateAsync*
  name: containsStateAsync
  nameWithType: ActorStateManager.containsStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.containsStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.getOrAddStateAsync*
  name: getOrAddStateAsync
  nameWithType: ActorStateManager.getOrAddStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.getOrAddStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 6d910369
  spec.java:
  - name: BiFunction<String, T, T>
    fullName: BiFunction<String, T, T>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.addOrUpdateStateAsync*
  name: addOrUpdateStateAsync
  nameWithType: ActorStateManager.addOrUpdateStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.addOrUpdateStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: d20512af
  spec.java:
  - name: CompletableFuture<List<String>>
    fullName: CompletableFuture<List<String>>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.getStateNamesAsync*
  name: getStateNamesAsync
  nameWithType: ActorStateManager.getStateNamesAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.getStateNamesAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.clearCacheAsync*
  name: clearCacheAsync
  nameWithType: ActorStateManager.clearCacheAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.clearCacheAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.saveStateAsync*
  name: saveStateAsync
  nameWithType: ActorStateManager.saveStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.saveStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager_impl
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A CancellationToken is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
- uid: microsoft.servicefabric.data._conditional_value
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._conditional_value.yml
  name: ConditionalValue<TValue>
  nameWithType: ConditionalValue<TValue>
  fullName: microsoft.servicefabric.data.ConditionalValue<TValue>
  type: Class
  summary: >-
    <p>Result class returned by DistributedCollections APIs that may or may not return a value.</p>

    <p></p>
  syntax:
    content: public class ConditionalValue<TValue>
    typeParameters:
    - id: TValue
      type: 649a7377
      description: <p>Value to initialize the result with. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  name: ActorStateManager
  nameWithType: ActorStateManager
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager
  type: Interface
  summary: <p>Represents the interface that state manager for <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> implements. </p>
  syntax: *o1
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager.saveStateAsync(CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_manager
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  name: saveStateAsync(CancellationToken cancellationToken)
  nameWithType: ActorStateManager.saveStateAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.saveStateAsync(CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Saves all the cached state changes (add/update/remove) that were made since last call to <xref uid="microsoft.servicefabric.actors.runtime._actor_state_manager.saveStateAsync(CancellationToken)" data-throw-if-not-resolved="false">ActorStateManager#saveStateAsync(CancellationToken)</xref> by actor runtime or by user explicitly.</p>

    <p></p>
  syntax: *o2
- uid: microsoft.servicefabric.actors._actor
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor.yml
  name: Actor
  nameWithType: Actor
  fullName: microsoft.servicefabric.actors.Actor
  type: Interface
  summary: <p>Base interface for inheriting reliable actor interfaces. </p>
  syntax:
    content: public interface Actor
