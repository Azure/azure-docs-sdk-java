items:
- uid: microsoft.servicefabric.data._state_provider_replica
  id: _state_provider_replica
  parent: microsoft.servicefabric.data
  children:
  - microsoft.servicefabric.data._state_provider_replica.abort()
  - microsoft.servicefabric.data._state_provider_replica.backupAsync(BackupOption,Duration,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  - microsoft.servicefabric.data._state_provider_replica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  - microsoft.servicefabric.data._state_provider_replica.changeRoleAsync(ReplicaRole,CancellationToken)
  - microsoft.servicefabric.data._state_provider_replica.closeAsync(CancellationToken)
  - microsoft.servicefabric.data._state_provider_replica.initialize(StatefulServiceInitializationParameters)
  - microsoft.servicefabric.data._state_provider_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)
  - microsoft.servicefabric.data._state_provider_replica.restoreAsync(String)
  - microsoft.servicefabric.data._state_provider_replica.restoreAsync(String,RestorePolicy)
  - microsoft.servicefabric.data._state_provider_replica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)
  href: microsoft.servicefabric.data._state_provider_replica.yml
  langs:
  - java
  name: StateProviderReplica
  nameWithType: StateProviderReplica
  fullName: microsoft.servicefabric.data.StateProviderReplica
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/StateProviderReplica.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/StateProviderReplica.java
    startLine: 18
  package: microsoft.servicefabric.data
  summary: <p>Defines methods a reliable state provider replica must implement for Service Fabric to interact with it. </p>
  syntax:
    content: public interface StateProviderReplica
- uid: microsoft.servicefabric.data._state_provider_replica.abort()
  id: abort()
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  langs:
  - java
  name: abort()
  nameWithType: StateProviderReplica.abort()
  fullName: void microsoft.servicefabric.data.StateProviderReplica.abort()
  overload: microsoft.servicefabric.data._state_provider_replica.abort*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/StateProviderReplica.java
    startLine: 101
  package: microsoft.servicefabric.data
  summary: >-
    <p>Forcefully abort the state provider replica. </p>

    <p>

      <bold>Remarks:</bold>This generally occurs when a permanent fault is detected on the node, or when Service Fabric cannot reliably manage the replica's lifecycle due to internal failures. </p>
  syntax:
    content: public void abort()
- uid: microsoft.servicefabric.data._state_provider_replica.backupAsync(BackupOption,Duration,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  id: backupAsync(BackupOption,Duration,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  langs:
  - java
  name: backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: StateProviderReplica.backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  overload: microsoft.servicefabric.data._state_provider_replica.backupAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/StateProviderReplica.java
    startLine: 140
  package: microsoft.servicefabric.data
  summary: >-
    <p>Performs a full backup of all reliable state managed by this ReliableStateManager.</p>

    <p>

      <bold>Remarks:</bold> A FULL backup will be performed with a one-hour timeout. Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location. If false is returned, BackupAsync throws UnsupportedOperationException with the relevant message indicating backupCallback returned false. Also, backup will be marked as unsuccessful. </p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: option
      type: microsoft.servicefabric.data._backup_option
      description: <p>The type of backup to perform. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timeout for this operation. </p>
    - id: backupCallback
      type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
      description: <p>Callback to be called when the backup folder has been created locally and is ready to be moved out of the node </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  id: backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  langs:
  - java
  name: backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: StateProviderReplica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  overload: microsoft.servicefabric.data._state_provider_replica.backupAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/StateProviderReplica.java
    startLine: 118
  package: microsoft.servicefabric.data
  summary: >-
    <p>Performs a full backup of all reliable state managed by this ReliableStateManager.</p>

    <p>

      <bold>Remarks:</bold> A FULL backup will be performed with a one-hour timeout. Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location. If false is returned, BackupAsync throws UnsupportedOperationException with the relevant message indicating backupCallback returned false. Also, backup will be marked as unsuccessful. </p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: backupCallback
      type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
      description: <p>Callback to be called when the backup folder has been created locally and is ready to be moved out of the node </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.changeRoleAsync(ReplicaRole,CancellationToken)
  id: changeRoleAsync(ReplicaRole,CancellationToken)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  langs:
  - java
  name: changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: StateProviderReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data._state_provider_replica.changeRoleAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/StateProviderReplica.java
    startLine: 78
  package: microsoft.servicefabric.data
  summary: >-
    <p>Notify the state provider replica that its role is changing, for example to Primary or Secondary.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    parameters:
    - id: newRole
      type: system.fabric._replica_role
      description: <p>The new replica role, such as primary or secondary. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous change role operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.closeAsync(CancellationToken)
  id: closeAsync(CancellationToken)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  langs:
  - java
  name: closeAsync(CancellationToken cancellationToken)
  nameWithType: StateProviderReplica.closeAsync(CancellationToken cancellationToken)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.closeAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data._state_provider_replica.closeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/StateProviderReplica.java
    startLine: 92
  package: microsoft.servicefabric.data
  summary: >-
    <p>Gracefully close the state provider replica.</p>

    <p>

      <bold>Remarks:</bold>This generally occurs when the replica's code is being upgrade, the replica is being moved due to load balancing, or a transient fault is detected. </p>
  syntax:
    content: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous close operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.initialize(StatefulServiceInitializationParameters)
  id: initialize(StatefulServiceInitializationParameters)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  langs:
  - java
  name: initialize(StatefulServiceInitializationParameters initializationParameters)
  nameWithType: StateProviderReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
  fullName: void microsoft.servicefabric.data.StateProviderReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
  overload: microsoft.servicefabric.data._state_provider_replica.initialize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/StateProviderReplica.java
    startLine: 42
  package: microsoft.servicefabric.data
  summary: >-
    <p>Initialize the state provider replica using the service initialization information.</p>

    <p>

      <bold>Remarks:</bold>No complex processing should be done during Initialize. Expensive or long-running initialization should be done in OpenAsync. </p>
  syntax:
    content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
    parameters:
    - id: initializationParameters
      type: system.fabric._stateful_service_initialization_parameters
      description: <p>Service initialization information such as service name, partition id, replica id, and code package information. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)
  id: openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  langs:
  - java
  name: openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  nameWithType: StateProviderReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  fullName: CompletableFuture<Replicator> microsoft.servicefabric.data.StateProviderReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data._state_provider_replica.openAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/StateProviderReplica.java
    startLine: 62
  package: microsoft.servicefabric.data
  summary: >-
    <p>Open the state provider replica for use.</p>

    <p>

      <bold>Remarks:</bold>Extended state provider initialization tasks can be started at this time. </p>
  syntax:
    content: public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
    parameters:
    - id: openMode
      type: system.fabric._replica_open_mode
      description: <p>Indicates whether this is a new or existing replica. </p>
    - id: partition
      type: system.fabric._stateful_service_partition
      description: <p>The partition this replica belongs to. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0system.fabric._replicatora08ddfce
      description: <p>Task that represents the asynchronous open operation. The result contains the replicator responsible for replicating state between other state provider replicas in the partition. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.restoreAsync(String)
  id: restoreAsync(String)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  langs:
  - java
  name: restoreAsync(String backupFolderPath)
  nameWithType: StateProviderReplica.restoreAsync(String backupFolderPath)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath)
  overload: microsoft.servicefabric.data._state_provider_replica.restoreAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/StateProviderReplica.java
    startLine: 157
  package: microsoft.servicefabric.data
  summary: >-
    <p>Restore a backup taken.</p>

    <p>

      <bold>Remarks:</bold>A safe restore will be performed, meaning the restore will only be completed if the data to restore is ahead of state of the current replica. </p>
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.restoreAsync(String,RestorePolicy)
  id: restoreAsync(String,RestorePolicy)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  langs:
  - java
  name: restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
  nameWithType: StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
  overload: microsoft.servicefabric.data._state_provider_replica.restoreAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/StateProviderReplica.java
    startLine: 169
  package: microsoft.servicefabric.data
  summary: >-
    <p>Restore a backup taken</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    - id: restorePolicy
      type: microsoft.servicefabric.data._restore_policy
      description: <p>The restore policy. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)
  id: setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  langs:
  - java
  name: setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  nameWithType: StateProviderReplica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  fullName: void microsoft.servicefabric.data.StateProviderReplica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  overload: microsoft.servicefabric.data._state_provider_replica.setOnDataLossCallback*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/StateProviderReplica.java
    startLine: 29
  package: microsoft.servicefabric.data
  summary: >-
    <p>Function called during suspected data-loss</p>

    <p></p>
  syntax:
    content: public void setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
    parameters:
    - id: onDataLossAsync
      type: 432ffe41system.fabric._cancellation_token774bd4f0
      description: <p>TODO. Function called as part of suspected data loss processing. Function takes in CancellationToken and returns a CompletableFuture that represents the asynchronous processing of the event. Returning true, indicates that the replica's state has been restored. False indicates that the replica's state has not been changed. </p>
references:
- uid: 432ffe41system.fabric._cancellation_token774bd4f0
  spec.java:
  - name: Function<
    fullName: Function<
  - uid: system.fabric._cancellation_token
    name: CancellationToken
    fullName: system.fabric.CancellationToken
    href: system.fabric._cancellation_token.yml
  - name: ', CompletableFuture<Boolean>>'
    fullName: ', CompletableFuture<Boolean>>'
- uid: microsoft.servicefabric.data._state_provider_replica.setOnDataLossCallback*
  name: setOnDataLossCallback
  nameWithType: StateProviderReplica.setOnDataLossCallback
  fullName: void microsoft.servicefabric.data.StateProviderReplica.setOnDataLossCallback
  package: microsoft.servicefabric.data
- uid: microsoft.servicefabric.data._state_provider_replica.initialize*
  name: initialize
  nameWithType: StateProviderReplica.initialize
  fullName: void microsoft.servicefabric.data.StateProviderReplica.initialize
  package: microsoft.servicefabric.data
- uid: 9cdf14d0system.fabric._replicatora08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: system.fabric._replicator
    name: Replicator
    fullName: system.fabric.Replicator
    href: system.fabric._replicator.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.data._state_provider_replica.openAsync*
  name: openAsync
  nameWithType: StateProviderReplica.openAsync
  fullName: CompletableFuture<Replicator> microsoft.servicefabric.data.StateProviderReplica.openAsync
  package: microsoft.servicefabric.data
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.data._state_provider_replica.changeRoleAsync*
  name: changeRoleAsync
  nameWithType: StateProviderReplica.changeRoleAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.changeRoleAsync
  package: microsoft.servicefabric.data
- uid: microsoft.servicefabric.data._state_provider_replica.closeAsync*
  name: closeAsync
  nameWithType: StateProviderReplica.closeAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.closeAsync
  package: microsoft.servicefabric.data
- uid: microsoft.servicefabric.data._state_provider_replica.abort*
  name: abort
  nameWithType: StateProviderReplica.abort
  fullName: void microsoft.servicefabric.data.StateProviderReplica.abort
  package: microsoft.servicefabric.data
- uid: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
  spec.java:
  - name: BiFunction<
    fullName: BiFunction<
  - uid: microsoft.servicefabric.data._backup_info
    name: BackupInfo
    fullName: microsoft.servicefabric.data.BackupInfo
    href: microsoft.servicefabric.data._backup_info.yml
  - name: ', '
    fullName: ', '
  - uid: system.fabric._cancellation_token
    name: CancellationToken
    fullName: system.fabric.CancellationToken
    href: system.fabric._cancellation_token.yml
  - name: ', CompletableFuture<Boolean>>'
    fullName: ', CompletableFuture<Boolean>>'
- uid: microsoft.servicefabric.data._state_provider_replica.backupAsync*
  name: backupAsync
  nameWithType: StateProviderReplica.backupAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.backupAsync
  package: microsoft.servicefabric.data
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.data._state_provider_replica.restoreAsync*
  name: restoreAsync
  nameWithType: StateProviderReplica.restoreAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.restoreAsync
  package: microsoft.servicefabric.data
- uid: microsoft.servicefabric.actors._actor_state_provider
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  name: ActorStateProvider
  nameWithType: ActorStateProvider
  fullName: microsoft.servicefabric.actors.ActorStateProvider
  type: Interface
  summary: <p>Represents the interface that an actor state provider needs to implement for actor runtime to communicate with it. </p>
  syntax:
    content: public interface ActorStateProvider extends StateProviderReplica
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> value)
  nameWithType: KvsActorStateProvider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> value)
  fullName: void microsoft.servicefabric.actors.KvsActorStateProvider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> value)
  type: Method
  summary: >-
    <p>Function called during suspected data-loss</p>

    <p></p>
  syntax:
    content: public void setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> value)
    parameters:
    - id: onDataLossAsync
      type: 432ffe41system.fabric._cancellation_token774bd4f0
      description: <p>TODO. Function called as part of suspected data loss processing. Function takes in CancellationToken and returns a CompletableFuture that represents the asynchronous processing of the event. Returning true, indicates that the replica's state has been restored. False indicates that the replica's state has not been changed. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  nameWithType: VolatileActorStateProvider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  fullName: void microsoft.servicefabric.actors.VolatileActorStateProvider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  type: Method
  summary: >-
    <p>Function called during suspected data-loss</p>

    <p></p>
  syntax:
    content: public void setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
    parameters:
    - id: onDataLossAsync
      type: 432ffe41system.fabric._cancellation_token774bd4f0
      description: <p>TODO. Function called as part of suspected data loss processing. Function takes in CancellationToken and returns a CompletableFuture that represents the asynchronous processing of the event. Returning true, indicates that the replica's state has been restored. False indicates that the replica's state has not been changed. </p>
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref href="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false"></xref> object, which manages cancellation tokens retrieved from its <xref href="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false"></xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref href="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false"></xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.initialize(StatefulServiceInitializationParameters)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: initialize(StatefulServiceInitializationParameters initializationParameters)
  nameWithType: VolatileActorStateProvider.initialize(StatefulServiceInitializationParameters initializationParameters)
  fullName: void microsoft.servicefabric.actors.VolatileActorStateProvider.initialize(StatefulServiceInitializationParameters initializationParameters)
  type: Method
  summary: >-
    <p>Initialize the state provider replica using the service initialization information.</p>

    <p>

      <bold>Remarks:</bold>No complex processing should be done during Initialize. Expensive or long-running initialization should be done in OpenAsync. </p>
  syntax:
    content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
    parameters:
    - id: initializationParameters
      type: system.fabric._stateful_service_initialization_parameters
      description: >-
        <p>

          <ref refid="" kindref="compound">StatefulServiceInitializationParameters</ref> such as service name, partition id, replica id, and code package information. </p>
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.initialize(StatefulServiceInitializationParameters)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: initialize(StatefulServiceInitializationParameters initializationParameters)
  nameWithType: KvsActorStateProvider.initialize(StatefulServiceInitializationParameters initializationParameters)
  fullName: void microsoft.servicefabric.actors.KvsActorStateProvider.initialize(StatefulServiceInitializationParameters initializationParameters)
  type: Method
  summary: >-
    <p>Initialize the state provider replica using the service initialization information.</p>

    <p>

      <bold>Remarks:</bold>No complex processing should be done during Initialize. Expensive or long-running initialization should be done in OpenAsync. </p>
  syntax:
    content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
    parameters:
    - id: initializationParameters
      type: system.fabric._stateful_service_initialization_parameters
      description: >-
        <p>

          <ref refid="" kindref="compound">StatefulServiceInitializationParameters</ref> such as service name, partition id, replica id, and code package information. </p>
- uid: system.fabric._stateful_service_initialization_parameters
  parent: system.fabric
  href: system.fabric._stateful_service_initialization_parameters.yml
  name: StatefulServiceInitializationParameters
  nameWithType: StatefulServiceInitializationParameters
  fullName: system.fabric.StatefulServiceInitializationParameters
  type: Class
  summary: <p>Defines service initialization parameters for a stateful service. </p>
  syntax:
    content: public class StatefulServiceInitializationParameters extends ServiceInitializationParameters
- uid: system.fabric._replicator
  parent: system.fabric
  href: system.fabric._replicator.yml
  name: Replicator
  nameWithType: Replicator
  fullName: system.fabric.Replicator
  type: Interface
  syntax:
    content: public interface Replicator extends PrimaryReplicator
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  fullName: CompletableFuture<Replicator> microsoft.servicefabric.actors.VolatileActorStateProvider.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Open the state provider replica for use.</p>

    <p>

      <bold>Remarks:</bold>Extended state provider initialization tasks can be started at this time. </p>
  syntax:
    content: public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
    parameters:
    - id: openMode
      type: system.fabric._replica_open_mode
      description: <p>The <ref refid="" kindref="compound">ReplicaOpenMode</ref> that indicates whether this is a new or existing replica. </p>
    - id: partition
      type: system.fabric._stateful_service_partition
      description: <p>The <ref refid="" kindref="compound">StatefulServicePartition</ref> partition the replica belongs to. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0system.fabric._replicatora08ddfce
      description: <p>Task that represents the asynchronous open operation. The result contains the replicator responsible for replicating state between other state provider replicas in the partition. </p>
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  nameWithType: KvsActorStateProvider.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  fullName: CompletableFuture<Replicator> microsoft.servicefabric.actors.KvsActorStateProvider.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Open the state provider replica for use.</p>

    <p>

      <bold>Remarks:</bold>Extended state provider initialization tasks can be started at this time. </p>
  syntax:
    content: public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
    parameters:
    - id: openMode
      type: system.fabric._replica_open_mode
      description: <p>The <ref refid="" kindref="compound">ReplicaOpenMode</ref> that indicates whether this is a new or existing replica. </p>
    - id: partition
      type: system.fabric._stateful_service_partition
      description: <p>The <ref refid="" kindref="compound">StatefulServicePartition</ref> partition the replica belongs to. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0system.fabric._replicatora08ddfce
      description: <p>Task that represents the asynchronous open operation. The result contains the replicator responsible for replicating state between other state provider replicas in the partition. </p>
- uid: system.fabric._replica_open_mode
  parent: system.fabric
  href: system.fabric._replica_open_mode.yml
  name: ReplicaOpenMode
  nameWithType: ReplicaOpenMode
  fullName: system.fabric.ReplicaOpenMode
  type: Enum
  syntax:
    content: public enum ReplicaOpenMode
- uid: system.fabric._stateful_service_partition
  parent: system.fabric
  href: system.fabric._stateful_service_partition.yml
  name: StatefulServicePartition
  nameWithType: StatefulServicePartition
  fullName: system.fabric.StatefulServicePartition
  type: Interface
  syntax:
    content: public interface StatefulServicePartition extends ServicePartition
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.changeRoleAsync(ReplicaRole,CancellationToken)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Notify the state provider replica that its role is changing, for example to Primary or Secondary.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    parameters:
    - id: newRole
      type: system.fabric._replica_role
      description: <p>The new <ref refid="" kindref="compound">ReplicaRole</ref>, such as primary or secondary. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous change role operation. </p>
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.changeRoleAsync(ReplicaRole,CancellationToken)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: KvsActorStateProvider.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Notify the state provider replica that its role is changing, for example to Primary or Secondary.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    parameters:
    - id: newRole
      type: system.fabric._replica_role
      description: <p>The new <ref refid="" kindref="compound">ReplicaRole</ref>, such as primary or secondary. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous change role operation. </p>
- uid: system.fabric._replica_role
  parent: system.fabric
  href: system.fabric._replica_role.yml
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: system.fabric.ReplicaRole
  type: Enum
  syntax:
    content: public enum ReplicaRole
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.closeAsync(CancellationToken)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: closeAsync(CancellationToken cancellationToken)
  nameWithType: KvsActorStateProvider.closeAsync(CancellationToken cancellationToken)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.closeAsync(CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Gracefully close the state provider replica.</p>

    <p>

      <bold>Remarks:</bold>This generally occurs when the replica's code is being upgrade, the replica is being moved due to load balancing, or a transient fault is detected. </p>
  syntax:
    content: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous close operation. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.closeAsync(CancellationToken)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: closeAsync(CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.closeAsync(CancellationToken cancellationToken)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.closeAsync(CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Gracefully close the state provider replica.</p>

    <p>

      <bold>Remarks:</bold>This generally occurs when the replica's code is being upgrade, the replica is being moved due to load balancing, or a transient fault is detected. </p>
  syntax:
    content: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous close operation. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.abort()
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: abort()
  nameWithType: VolatileActorStateProvider.abort()
  fullName: void microsoft.servicefabric.actors.VolatileActorStateProvider.abort()
  type: Method
  summary: >-
    <p>Forcefully abort the state provider replica. </p>

    <p>

      <bold>Remarks:</bold>This generally occurs when a permanent fault is detected on the node, or when Service Fabric cannot reliably manage the replica's life-cycle due to internal failures. </p>
  syntax:
    content: public void abort()
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.abort()
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: abort()
  nameWithType: KvsActorStateProvider.abort()
  fullName: void microsoft.servicefabric.actors.KvsActorStateProvider.abort()
  type: Method
  summary: >-
    <p>Forcefully abort the state provider replica. </p>

    <p>

      <bold>Remarks:</bold>This generally occurs when a permanent fault is detected on the node, or when Service Fabric cannot reliably manage the replica's life-cycle due to internal failures. </p>
  syntax:
    content: public void abort()
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: VolatileActorStateProvider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  type: Method
  summary: >-
    <p>Performs a full backup of state managed by this actor state provider</p>

    <p>

      <bold>Remarks:</bold>Backup/restore is not supported by <xref href="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: backupCallback
      type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
      description: <p>BackupCallbackCallback to be called when the backup folder has been created locally and is ready to be moved out of the node. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: KvsActorStateProvider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  type: Method
  summary: >-
    <p>Performs a full backup of state managed by this actor state provider</p>

    <p>

      <bold>Remarks:</bold>Backup/restore is not supported by <xref href="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: backupCallback
      type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
      description: <p>BackupCallbackCallback to be called when the backup folder has been created locally and is ready to be moved out of the node. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.data._backup_info
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._backup_info.yml
  name: BackupInfo
  nameWithType: BackupInfo
  fullName: microsoft.servicefabric.data.BackupInfo
  type: Class
  summary: <p>Provides info about the backup. </p>
  syntax:
    content: public class BackupInfo
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.backupAsync(BackupOption,Duration,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: KvsActorStateProvider.backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  type: Method
  summary: >-
    <p>Performs a full backup of state managed by this actor state provider</p>

    <p>

      <bold>Remarks:</bold>Backup/restore is not supported by <xref href="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: option
      type: microsoft.servicefabric.data._backup_option
      description: >-
        <p>

          <xref href="microsoft.servicefabric.data._backup_option" data-throw-if-not-resolved="false"></xref> for the callback </p>
    - id: timeout
      type: e02a2de0
      description: >-
        <p>

          <ref refid="" kindref="compound">java.time.Duration</ref> that describes timeout for the backup </p>
    - id: backupCallback
      type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
      description: <p>BackupCallbackCallback to be called when the backup folder has been created locally and is ready to be moved out of the node. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.backupAsync(BackupOption,Duration,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: VolatileActorStateProvider.backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  type: Method
  summary: >-
    <p>Performs a full backup of state managed by this actor state provider</p>

    <p>

      <bold>Remarks:</bold>Backup/restore is not supported by <xref href="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: option
      type: microsoft.servicefabric.data._backup_option
      description: >-
        <p>

          <xref href="microsoft.servicefabric.data._backup_option" data-throw-if-not-resolved="false"></xref> for the callback </p>
    - id: timeout
      type: e02a2de0
      description: >-
        <p>

          <ref refid="" kindref="compound">java.time.Duration</ref> that describes timeout for the backup </p>
    - id: backupCallback
      type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
      description: <p>BackupCallbackCallback to be called when the backup folder has been created locally and is ready to be moved out of the node. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.data._backup_option
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._backup_option.yml
  name: BackupOption
  nameWithType: BackupOption
  fullName: microsoft.servicefabric.data.BackupOption
  type: Enum
  summary: <p>Indicates the kind of the backup. </p>
  syntax:
    content: public enum BackupOption
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.restoreAsync(String)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: restoreAsync(String backupFolderPath)
  nameWithType: VolatileActorStateProvider.restoreAsync(String backupFolderPath)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.restoreAsync(String backupFolderPath)
  type: Method
  summary: <p>Restore a backup taken by <ref refid="" kindref="compound">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BiFunction)</ref> or <ref refid="" kindref="compound">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BackupOption, Duration, BiFunction)</ref><bold>Remarks:</bold>Backup/restore is not supported by <xref href="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>Directory from where replica will be restored from. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.restoreAsync(String)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: restoreAsync(String backupFolderPath)
  nameWithType: KvsActorStateProvider.restoreAsync(String backupFolderPath)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.restoreAsync(String backupFolderPath)
  type: Method
  summary: <p>Restore a backup taken by <ref refid="" kindref="compound">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BiFunction)</ref> or <ref refid="" kindref="compound">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BackupOption, Duration, BiFunction)</ref><bold>Remarks:</bold>Backup/restore is not supported by <xref href="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>Directory from where replica will be restored from. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.restoreAsync(String,RestorePolicy)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
  nameWithType: VolatileActorStateProvider.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
  type: Method
  summary: <p>Restore a backup taken by <ref refid="" kindref="compound">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BiFunction)</ref> or <ref refid="" kindref="compound">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BackupOption, Duration, BiFunction)</ref><bold>Remarks:</bold>Backup/restore is not supported by <xref href="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>Directory from where replica will be restored from. </p>
    - id: restorePolicy
      type: microsoft.servicefabric.data._restore_policy
      description: <p>The <ref refid="" kindref="compound">RestorePolicy</ref>. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.restoreAsync(String,RestorePolicy)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
  nameWithType: KvsActorStateProvider.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
  type: Method
  summary: <p>Restore a backup taken by <ref refid="" kindref="compound">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BiFunction)</ref> or <ref refid="" kindref="compound">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BackupOption, Duration, BiFunction)</ref><bold>Remarks:</bold>Backup/restore is not supported by <xref href="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>Directory from where replica will be restored from. </p>
    - id: restorePolicy
      type: microsoft.servicefabric.data._restore_policy
      description: <p>The <ref refid="" kindref="compound">RestorePolicy</ref>. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
- uid: microsoft.servicefabric.data._restore_policy
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._restore_policy.yml
  name: RestorePolicy
  nameWithType: RestorePolicy
  fullName: microsoft.servicefabric.data.RestorePolicy
  type: Enum
  summary: <p>Policy for restore operation. </p>
  syntax:
    content: public enum RestorePolicy
