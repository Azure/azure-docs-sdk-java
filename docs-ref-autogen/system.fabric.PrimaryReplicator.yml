### YamlMime:ManagedReference
items:
- uid: system.fabric.PrimaryReplicator
  id: PrimaryReplicator
  parent: system.fabric
  children:
  - system.fabric.PrimaryReplicator.buildReplicaAsync(ReplicaInformation,CancellationToken)
  - system.fabric.PrimaryReplicator.onDataLossAsync(CancellationToken)
  - system.fabric.PrimaryReplicator.removeReplica(long)
  - system.fabric.PrimaryReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)
  - system.fabric.PrimaryReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
  - system.fabric.PrimaryReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode,CancellationToken)
  href: system.fabric.PrimaryReplicator.yml
  langs:
  - java
  name: PrimaryReplicator
  nameWithType: PrimaryReplicator
  fullName: system.fabric.PrimaryReplicator
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/PrimaryReplicator.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/PrimaryReplicator.java
    startLine: 10
  package: system.fabric
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>"
  syntax:
    content: public interface PrimaryReplicator
- uid: system.fabric.PrimaryReplicator.buildReplicaAsync(ReplicaInformation,CancellationToken)
  id: buildReplicaAsync(ReplicaInformation,CancellationToken)
  parent: system.fabric.PrimaryReplicator
  href: system.fabric.PrimaryReplicator.yml
  langs:
  - java
  name: buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)
  nameWithType: PrimaryReplicator.buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)
  fullName: system.fabric.PrimaryReplicator.buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)
  overload: system.fabric.PrimaryReplicator.buildReplicaAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/PrimaryReplicator.java
    startLine: 82
  package: system.fabric
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)
    parameters:
    - id: replicaInfo
      type: system.fabric.ReplicaInformation
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 5f2aaa64
      description: <p>A future that represents the asynchronous operation. The future completes exceptionally with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricException"></xref> for fabric related failures. </p>
- uid: system.fabric.PrimaryReplicator.onDataLossAsync(CancellationToken)
  id: onDataLossAsync(CancellationToken)
  parent: system.fabric.PrimaryReplicator
  href: system.fabric.PrimaryReplicator.yml
  langs:
  - java
  name: onDataLossAsync(CancellationToken cancellationToken)
  nameWithType: PrimaryReplicator.onDataLossAsync(CancellationToken cancellationToken)
  fullName: system.fabric.PrimaryReplicator.onDataLossAsync(CancellationToken cancellationToken)
  overload: system.fabric.PrimaryReplicator.onDataLossAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/PrimaryReplicator.java
    startLine: 22
  package: system.fabric
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Boolean> onDataLossAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>A CompletableFuture that represents the asynchronous operation. The future completes exceptionally with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricException"></xref> for fabric related failures. </p>
- uid: system.fabric.PrimaryReplicator.removeReplica(long)
  id: removeReplica(long)
  parent: system.fabric.PrimaryReplicator
  href: system.fabric.PrimaryReplicator.yml
  langs:
  - java
  name: removeReplica(long replicaId)
  nameWithType: PrimaryReplicator.removeReplica(long replicaId)
  fullName: system.fabric.PrimaryReplicator.removeReplica(long replicaId)
  overload: system.fabric.PrimaryReplicator.removeReplica*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/PrimaryReplicator.java
    startLine: 97
  package: system.fabric
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>\r\n<p></p>\r\n<p>\r\n  <b>Remarks:</b> This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>"
  syntax:
    content: public void removeReplica(long replicaId)
    parameters:
    - id: replicaId
      type: 0364520f
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>
- uid: system.fabric.PrimaryReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)
  id: updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)
  parent: system.fabric.PrimaryReplicator
  href: system.fabric.PrimaryReplicator.yml
  langs:
  - java
  name: updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
  nameWithType: PrimaryReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
  fullName: system.fabric.PrimaryReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
  overload: system.fabric.PrimaryReplicator.updateCatchUpReplicaSetConfiguration*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/PrimaryReplicator.java
    startLine: 34
  package: system.fabric
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>\r\n<p></p>"
  syntax:
    content: public void updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
    parameters:
    - id: currentConfiguration
      type: system.fabric.ReplicaSetConfiguration
      description: <p>For Internal Use Only. </p>
    - id: previousConfiguration
      type: system.fabric.ReplicaSetConfiguration
      description: <p>For Internal Use Only. </p>
- uid: system.fabric.PrimaryReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
  id: updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
  parent: system.fabric.PrimaryReplicator
  href: system.fabric.PrimaryReplicator.yml
  langs:
  - java
  name: updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
  nameWithType: PrimaryReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
  fullName: system.fabric.PrimaryReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
  overload: system.fabric.PrimaryReplicator.updateCurrentReplicaSetConfiguration*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/PrimaryReplicator.java
    startLine: 66
  package: system.fabric
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>\r\n<p></p>\r\n<p>\r\n  <b>Remarks:</b> This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>"
  syntax:
    content: public void updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    parameters:
    - id: currentConfiguration
      type: system.fabric.ReplicaSetConfiguration
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>
- uid: system.fabric.PrimaryReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode,CancellationToken)
  id: waitForCatchUpQuorumAsync(ReplicaSetQuorumMode,CancellationToken)
  parent: system.fabric.PrimaryReplicator
  href: system.fabric.PrimaryReplicator.yml
  langs:
  - java
  name: waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)
  nameWithType: PrimaryReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)
  fullName: system.fabric.PrimaryReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)
  overload: system.fabric.PrimaryReplicator.waitForCatchUpQuorumAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/PrimaryReplicator.java
    startLine: 51
  package: system.fabric
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>\r\n<p>For Internal Use Only. </p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)
    parameters:
    - id: quorumMode
      type: system.fabric.ReplicaSetQuorumMode
      description: <p>For Internal Use Only. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 5f2aaa64
      description: <p>A future that represents asynchrnous completion. The future completes exceptionally with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricException"></xref> for fabric related failures. </p>
references:
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: system.fabric.PrimaryReplicator.onDataLossAsync*
  name: onDataLossAsync
  nameWithType: PrimaryReplicator.onDataLossAsync
  fullName: system.fabric.PrimaryReplicator.onDataLossAsync
  package: system.fabric
- uid: system.fabric.PrimaryReplicator.updateCatchUpReplicaSetConfiguration*
  name: updateCatchUpReplicaSetConfiguration
  nameWithType: PrimaryReplicator.updateCatchUpReplicaSetConfiguration
  fullName: system.fabric.PrimaryReplicator.updateCatchUpReplicaSetConfiguration
  package: system.fabric
- uid: 5f2aaa64
  spec.java:
  - name: CompletableFuture
    fullName: CompletableFuture
- uid: system.fabric.PrimaryReplicator.waitForCatchUpQuorumAsync*
  name: waitForCatchUpQuorumAsync
  nameWithType: PrimaryReplicator.waitForCatchUpQuorumAsync
  fullName: system.fabric.PrimaryReplicator.waitForCatchUpQuorumAsync
  package: system.fabric
- uid: system.fabric.PrimaryReplicator.updateCurrentReplicaSetConfiguration*
  name: updateCurrentReplicaSetConfiguration
  nameWithType: PrimaryReplicator.updateCurrentReplicaSetConfiguration
  fullName: system.fabric.PrimaryReplicator.updateCurrentReplicaSetConfiguration
  package: system.fabric
- uid: system.fabric.PrimaryReplicator.buildReplicaAsync*
  name: buildReplicaAsync
  nameWithType: PrimaryReplicator.buildReplicaAsync
  fullName: system.fabric.PrimaryReplicator.buildReplicaAsync
  package: system.fabric
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric.PrimaryReplicator.removeReplica*
  name: removeReplica
  nameWithType: PrimaryReplicator.removeReplica
  fullName: system.fabric.PrimaryReplicator.removeReplica
  package: system.fabric
- uid: system.fabric.Replicator
  parent: system.fabric
  href: system.fabric.Replicator.yml
  name: Replicator
  nameWithType: Replicator
  fullName: system.fabric.Replicator
  type: Interface
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>"
  syntax:
    content: public interface Replicator
- uid: system.fabric.FabricReplicator.onDataLossAsync(CancellationToken)
  parent: system.fabric.FabricReplicator
  href: system.fabric.FabricReplicator.yml
  name: onDataLossAsync(CancellationToken cancellationToken)
  nameWithType: FabricReplicator.onDataLossAsync(CancellationToken cancellationToken)
  fullName: system.fabric.FabricReplicator.onDataLossAsync(CancellationToken cancellationToken)
  type: Method
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Boolean> onDataLossAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>A CompletableFuture that represents the asynchronous operation. The future completes exceptionally with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricException"></xref> for fabric related failures. </p>
- uid: system.fabric.CancellationToken
  parent: system.fabric
  href: system.fabric.CancellationToken.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: "<p>A CancellationToken is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref uid=\"system.fabric.CancellationTokenSource\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.CancellationTokenSource\"></xref> object, which manages cancellation tokens retrieved from its <xref uid=\"system.fabric.CancellationTokenSource.getToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.CancellationTokenSource#getToken()\"></xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref uid=\"system.fabric.CancellationTokenSource.cancel()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.CancellationTokenSource#cancel()\"></xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>"
  syntax:
    content: public class CancellationToken
- uid: system.fabric.FabricReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)
  parent: system.fabric.FabricReplicator
  href: system.fabric.FabricReplicator.yml
  name: updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
  nameWithType: FabricReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
  fullName: system.fabric.FabricReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
  type: Method
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>\r\n<p></p>"
  syntax:
    content: public void updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
    parameters:
    - id: currentConfiguration
      type: system.fabric.ReplicaSetConfiguration
      description: <p>For Internal Use Only. </p>
    - id: previousConfiguration
      type: system.fabric.ReplicaSetConfiguration
      description: <p>For Internal Use Only. </p>
- uid: system.fabric.ReplicaSetConfiguration
  parent: system.fabric
  href: system.fabric.ReplicaSetConfiguration.yml
  name: ReplicaSetConfiguration
  nameWithType: ReplicaSetConfiguration
  fullName: system.fabric.ReplicaSetConfiguration
  type: Class
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>"
  syntax:
    content: public class ReplicaSetConfiguration
- uid: system.fabric.FabricReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode,CancellationToken)
  parent: system.fabric.FabricReplicator
  href: system.fabric.FabricReplicator.yml
  name: waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)
  nameWithType: FabricReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)
  fullName: system.fabric.FabricReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)
  type: Method
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>\r\n<p>For Internal Use Only. </p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)
    parameters:
    - id: quorumMode
      type: system.fabric.ReplicaSetQuorumMode
      description: <p>For Internal Use Only. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 5f2aaa64
      description: <p>A future that represents asynchrnous completion. The future completes exceptionally with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricException"></xref> for fabric related failures. </p>
- uid: system.fabric.ReplicaSetQuorumMode
  parent: system.fabric
  href: system.fabric.ReplicaSetQuorumMode.yml
  name: ReplicaSetQuorumMode
  nameWithType: ReplicaSetQuorumMode
  fullName: system.fabric.ReplicaSetQuorumMode
  type: Enum
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>"
  syntax:
    content: public enum ReplicaSetQuorumMode
- uid: system.fabric.FabricReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
  parent: system.fabric.FabricReplicator
  href: system.fabric.FabricReplicator.yml
  name: updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
  nameWithType: FabricReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
  fullName: system.fabric.FabricReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
  type: Method
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>\r\n<p></p>\r\n<p>\r\n  <b>Remarks:</b> This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>"
  syntax:
    content: public void updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    parameters:
    - id: currentConfiguration
      type: system.fabric.ReplicaSetConfiguration
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>
- uid: system.fabric.FabricReplicator.buildReplicaAsync(ReplicaInformation,CancellationToken)
  parent: system.fabric.FabricReplicator
  href: system.fabric.FabricReplicator.yml
  name: buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)
  nameWithType: FabricReplicator.buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)
  fullName: system.fabric.FabricReplicator.buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)
  type: Method
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)
    parameters:
    - id: replicaInfo
      type: system.fabric.ReplicaInformation
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 5f2aaa64
      description: <p>A future that represents the asynchronous operation. The future completes exceptionally with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricException"></xref> for fabric related failures. </p>
- uid: system.fabric.ReplicaInformation
  parent: system.fabric
  href: system.fabric.ReplicaInformation.yml
  name: ReplicaInformation
  nameWithType: ReplicaInformation
  fullName: system.fabric.ReplicaInformation
  type: Class
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>"
  syntax:
    content: public class ReplicaInformation
- uid: system.fabric.FabricReplicator.removeReplica(long)
  parent: system.fabric.FabricReplicator
  href: system.fabric.FabricReplicator.yml
  name: removeReplica(long replicaId)
  nameWithType: FabricReplicator.removeReplica(long replicaId)
  fullName: system.fabric.FabricReplicator.removeReplica(long replicaId)
  type: Method
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>\r\n<p></p>\r\n<p>\r\n  <b>Remarks:</b> This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>"
  syntax:
    content: public void removeReplica(long replicaId)
    parameters:
    - id: replicaId
      type: 0364520f
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>
