### YamlMime:JavaMember
uid: "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.deleteImmutabilityPolicy*"
fullName: "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.deleteImmutabilityPolicy"
name: "deleteImmutabilityPolicy"
nameWithType: "BlobContainersImpl.deleteImmutabilityPolicy"
members:
- uid: "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.deleteImmutabilityPolicy(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.deleteImmutabilityPolicy(String resourceGroupName, String accountName, String containerName)"
  name: "deleteImmutabilityPolicy(String resourceGroupName, String accountName, String containerName)"
  nameWithType: "BlobContainersImpl.deleteImmutabilityPolicy(String resourceGroupName, String accountName, String containerName)"
  summary: "Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, the only way is to delete the container after deleting all expired blobs inside the policy locked container."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteImmutabilityPolicy(String resourceGroupName, String accountName, String containerName)"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.storage.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.4.0
