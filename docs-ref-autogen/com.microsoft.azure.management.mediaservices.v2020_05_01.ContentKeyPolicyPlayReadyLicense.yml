### YamlMime:JavaType
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense"
name: "ContentKeyPolicyPlayReadyLicense"
nameWithType: "ContentKeyPolicyPlayReadyLicense"
summary: "The Play<wbr>Ready license."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ContentKeyPolicyPlayReadyLicense"
constructors:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.ContentKeyPolicyPlayReadyLicense()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.ContentKeyPolicyPlayReadyLicense()"
  name: "ContentKeyPolicyPlayReadyLicense()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.ContentKeyPolicyPlayReadyLicense()"
  syntax: "public ContentKeyPolicyPlayReadyLicense()"
methods:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.allowTestDevices()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.allowTestDevices()"
  name: "allowTestDevices()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.allowTestDevices()"
  summary: "Get a flag indicating whether test devices can use the license."
  syntax: "public boolean allowTestDevices()"
  desc: "Get a flag indicating whether test devices can use the license."
  returns:
    description: "the allowTestDevices value"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.beginDate()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.beginDate()"
  name: "beginDate()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.beginDate()"
  summary: "Get the begin date of license."
  syntax: "public DateTime beginDate()"
  desc: "Get the begin date of license."
  returns:
    description: "the beginDate value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.contentKeyLocation()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.contentKeyLocation()"
  name: "contentKeyLocation()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.contentKeyLocation()"
  summary: "Get the content key location."
  syntax: "public ContentKeyPolicyPlayReadyContentKeyLocation contentKeyLocation()"
  desc: "Get the content key location."
  returns:
    description: "the contentKeyLocation value"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyContentKeyLocation?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyContentKeyLocation&text=ContentKeyPolicyPlayReadyContentKeyLocation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.contentType()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.contentType()"
  name: "contentType()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.contentType()"
  summary: "Get the Play<wbr>Ready content type."
  syntax: "public ContentKeyPolicyPlayReadyContentType contentType()"
  desc: "Get the PlayReady content type. Possible values include: 'Unknown', 'Unspecified', 'UltraVioletDownload', 'UltraVioletStreaming'."
  returns:
    description: "the contentType value"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyContentType?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyContentType&text=ContentKeyPolicyPlayReadyContentType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.expirationDate()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.expirationDate()"
  name: "expirationDate()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.expirationDate()"
  summary: "Get the expiration date of license."
  syntax: "public DateTime expirationDate()"
  desc: "Get the expiration date of license."
  returns:
    description: "the expirationDate value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.gracePeriod()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.gracePeriod()"
  name: "gracePeriod()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.gracePeriod()"
  summary: "Get the grace period of license."
  syntax: "public Period gracePeriod()"
  desc: "Get the grace period of license."
  returns:
    description: "the gracePeriod value"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.licenseType()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.licenseType()"
  name: "licenseType()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.licenseType()"
  summary: "Get the license type."
  syntax: "public ContentKeyPolicyPlayReadyLicenseType licenseType()"
  desc: "Get the license type. Possible values include: 'Unknown', 'NonPersistent', 'Persistent'."
  returns:
    description: "the licenseType value"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicenseType?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicenseType&text=ContentKeyPolicyPlayReadyLicenseType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.playRight()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.playRight()"
  name: "playRight()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.playRight()"
  summary: "Get the license Play<wbr>Right."
  syntax: "public ContentKeyPolicyPlayReadyPlayRight playRight()"
  desc: "Get the license PlayRight."
  returns:
    description: "the playRight value"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyPlayRight?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyPlayRight&text=ContentKeyPolicyPlayReadyPlayRight\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.relativeBeginDate()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.relativeBeginDate()"
  name: "relativeBeginDate()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.relativeBeginDate()"
  summary: "Get the relative begin date of license."
  syntax: "public Period relativeBeginDate()"
  desc: "Get the relative begin date of license."
  returns:
    description: "the relativeBeginDate value"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.relativeExpirationDate()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.relativeExpirationDate()"
  name: "relativeExpirationDate()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.relativeExpirationDate()"
  summary: "Get the relative expiration date of license."
  syntax: "public Period relativeExpirationDate()"
  desc: "Get the relative expiration date of license."
  returns:
    description: "the relativeExpirationDate value"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withAllowTestDevices(boolean)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withAllowTestDevices(boolean allowTestDevices)"
  name: "withAllowTestDevices(boolean allowTestDevices)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withAllowTestDevices(boolean allowTestDevices)"
  summary: "Set a flag indicating whether test devices can use the license."
  parameters:
  - description: "the allowTestDevices value to set"
    name: "allowTestDevices"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withAllowTestDevices(boolean allowTestDevices)"
  desc: "Set a flag indicating whether test devices can use the license."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withBeginDate(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withBeginDate(DateTime beginDate)"
  name: "withBeginDate(DateTime beginDate)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withBeginDate(DateTime beginDate)"
  summary: "Set the begin date of license."
  parameters:
  - description: "the beginDate value to set"
    name: "beginDate"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withBeginDate(DateTime beginDate)"
  desc: "Set the begin date of license."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withContentKeyLocation(com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyContentKeyLocation)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withContentKeyLocation(ContentKeyPolicyPlayReadyContentKeyLocation contentKeyLocation)"
  name: "withContentKeyLocation(ContentKeyPolicyPlayReadyContentKeyLocation contentKeyLocation)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withContentKeyLocation(ContentKeyPolicyPlayReadyContentKeyLocation contentKeyLocation)"
  summary: "Set the content key location."
  parameters:
  - description: "the contentKeyLocation value to set"
    name: "contentKeyLocation"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyContentKeyLocation?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyContentKeyLocation&text=ContentKeyPolicyPlayReadyContentKeyLocation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withContentKeyLocation(ContentKeyPolicyPlayReadyContentKeyLocation contentKeyLocation)"
  desc: "Set the content key location."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withContentType(com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyContentType)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withContentType(ContentKeyPolicyPlayReadyContentType contentType)"
  name: "withContentType(ContentKeyPolicyPlayReadyContentType contentType)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withContentType(ContentKeyPolicyPlayReadyContentType contentType)"
  summary: "Set the Play<wbr>Ready content type."
  parameters:
  - description: "the contentType value to set"
    name: "contentType"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyContentType?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyContentType&text=ContentKeyPolicyPlayReadyContentType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withContentType(ContentKeyPolicyPlayReadyContentType contentType)"
  desc: "Set the PlayReady content type. Possible values include: 'Unknown', 'Unspecified', 'UltraVioletDownload', 'UltraVioletStreaming'."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withExpirationDate(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withExpirationDate(DateTime expirationDate)"
  name: "withExpirationDate(DateTime expirationDate)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withExpirationDate(DateTime expirationDate)"
  summary: "Set the expiration date of license."
  parameters:
  - description: "the expirationDate value to set"
    name: "expirationDate"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withExpirationDate(DateTime expirationDate)"
  desc: "Set the expiration date of license."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withGracePeriod(org.joda.time.Period)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withGracePeriod(Period gracePeriod)"
  name: "withGracePeriod(Period gracePeriod)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withGracePeriod(Period gracePeriod)"
  summary: "Set the grace period of license."
  parameters:
  - description: "the gracePeriod value to set"
    name: "gracePeriod"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withGracePeriod(Period gracePeriod)"
  desc: "Set the grace period of license."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withLicenseType(com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicenseType)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withLicenseType(ContentKeyPolicyPlayReadyLicenseType licenseType)"
  name: "withLicenseType(ContentKeyPolicyPlayReadyLicenseType licenseType)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withLicenseType(ContentKeyPolicyPlayReadyLicenseType licenseType)"
  summary: "Set the license type."
  parameters:
  - description: "the licenseType value to set"
    name: "licenseType"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicenseType?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicenseType&text=ContentKeyPolicyPlayReadyLicenseType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withLicenseType(ContentKeyPolicyPlayReadyLicenseType licenseType)"
  desc: "Set the license type. Possible values include: 'Unknown', 'NonPersistent', 'Persistent'."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withPlayRight(com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyPlayRight)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withPlayRight(ContentKeyPolicyPlayReadyPlayRight playRight)"
  name: "withPlayRight(ContentKeyPolicyPlayReadyPlayRight playRight)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withPlayRight(ContentKeyPolicyPlayReadyPlayRight playRight)"
  summary: "Set the license Play<wbr>Right."
  parameters:
  - description: "the playRight value to set"
    name: "playRight"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyPlayRight?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyPlayRight&text=ContentKeyPolicyPlayReadyPlayRight\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withPlayRight(ContentKeyPolicyPlayReadyPlayRight playRight)"
  desc: "Set the license PlayRight."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withRelativeBeginDate(org.joda.time.Period)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withRelativeBeginDate(Period relativeBeginDate)"
  name: "withRelativeBeginDate(Period relativeBeginDate)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withRelativeBeginDate(Period relativeBeginDate)"
  summary: "Set the relative begin date of license."
  parameters:
  - description: "the relativeBeginDate value to set"
    name: "relativeBeginDate"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withRelativeBeginDate(Period relativeBeginDate)"
  desc: "Set the relative begin date of license."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withRelativeExpirationDate(org.joda.time.Period)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense.withRelativeExpirationDate(Period relativeExpirationDate)"
  name: "withRelativeExpirationDate(Period relativeExpirationDate)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withRelativeExpirationDate(Period relativeExpirationDate)"
  summary: "Set the relative expiration date of license."
  parameters:
  - description: "the relativeExpirationDate value to set"
    name: "relativeExpirationDate"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withRelativeExpirationDate(Period relativeExpirationDate)"
  desc: "Set the relative expiration date of license."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The PlayReady license."
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
