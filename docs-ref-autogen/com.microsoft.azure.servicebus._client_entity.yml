items:
- uid: com.microsoft.azure.servicebus._client_entity
  id: _client_entity
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus._client_entity.ClientEntity(final String,final ClientEntity)
  - com.microsoft.azure.servicebus._client_entity.close()
  - com.microsoft.azure.servicebus._client_entity.closeSync()
  - com.microsoft.azure.servicebus._client_entity.getClientId()
  - com.microsoft.azure.servicebus._client_entity.getLastKnownError()
  - com.microsoft.azure.servicebus._client_entity.onClose()
  - com.microsoft.azure.servicebus._client_entity.setClosed()
  - com.microsoft.azure.servicebus._client_entity.throwIfClosed()
  href: com.microsoft.azure.servicebus._client_entity.yml
  langs:
  - java
  name: ClientEntity
  nameWithType: ClientEntity
  fullName: com.microsoft.azure.servicebus.ClientEntity
  type: Class
  source:
    remote: &o0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/ClientEntity.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/ClientEntity.java
    startLine: 15
  package: com.microsoft.azure.servicebus
  summary: '<p>Contract for all client entities with Open-Close/Abort state m/c main-purpose: closeAll related entities Internal-class </p>'
  syntax: &o1
    content: public class ClientEntity
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - com.microsoft.azure.servicebus._client_entity.getIsClosed()
  - com.microsoft.azure.servicebus._client_entity.getIsClosingOrClosed()
- uid: com.microsoft.azure.servicebus._client_entity.ClientEntity(final String,final ClientEntity)
  id: ClientEntity(final String,final ClientEntity)
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  langs:
  - java
  name: ClientEntity(final String clientId, final ClientEntity parent)
  nameWithType: ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)
  fullName: com.microsoft.azure.servicebus.ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)
  overload: com.microsoft.azure.servicebus._client_entity.ClientEntity*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/ClientEntity.java
    startLine: 24
  package: com.microsoft.azure.servicebus
  syntax:
    content: protected ClientEntity(final String clientId, final ClientEntity parent)
    parameters:
    - id: clientId
      type: 3d93591e
    - id: parent
      type: 93de0ef9com.microsoft.azure.servicebus._client_entity
- uid: com.microsoft.azure.servicebus._client_entity.close()
  id: close()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  langs:
  - java
  name: close()
  nameWithType: ClientEntity.close()
  fullName: final CompletableFuture<Void> com.microsoft.azure.servicebus.ClientEntity.close()
  overload: com.microsoft.azure.servicebus._client_entity.close*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/ClientEntity.java
    startLine: 59
  package: com.microsoft.azure.servicebus
  syntax:
    content: public final CompletableFuture<Void> close()
    return:
      type: fc984e6f
- uid: com.microsoft.azure.servicebus._client_entity.closeSync()
  id: closeSync()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  langs:
  - java
  name: closeSync()
  nameWithType: ClientEntity.closeSync()
  fullName: final void com.microsoft.azure.servicebus.ClientEntity.closeSync()
  overload: com.microsoft.azure.servicebus._client_entity.closeSync*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/ClientEntity.java
    startLine: 80
  package: com.microsoft.azure.servicebus
  syntax:
    content: public final void closeSync()
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.servicebus._client_entity.getClientId()
  id: getClientId()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  langs:
  - java
  name: getClientId()
  nameWithType: ClientEntity.getClientId()
  fullName: String com.microsoft.azure.servicebus.ClientEntity.getClientId()
  overload: com.microsoft.azure.servicebus._client_entity.getClientId*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/ClientEntity.java
    startLine: 33
  package: com.microsoft.azure.servicebus
  syntax:
    content: public String getClientId()
    return:
      type: "26831127"
- uid: com.microsoft.azure.servicebus._client_entity.getLastKnownError()
  id: getLastKnownError()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  langs:
  - java
  name: getLastKnownError()
  nameWithType: ClientEntity.getLastKnownError()
  fullName: Exception com.microsoft.azure.servicebus.ClientEntity.getLastKnownError()
  overload: com.microsoft.azure.servicebus._client_entity.getLastKnownError*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/ClientEntity.java
    startLine: 110
  package: com.microsoft.azure.servicebus
  syntax:
    content: protected Exception getLastKnownError()
    return:
      type: 8a99d4b0
- uid: com.microsoft.azure.servicebus._client_entity.onClose()
  id: onClose()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  langs:
  - java
  name: onClose()
  nameWithType: ClientEntity.onClose()
  fullName: abstract CompletableFuture<Void> com.microsoft.azure.servicebus.ClientEntity.onClose()
  overload: com.microsoft.azure.servicebus._client_entity.onClose*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/ClientEntity.java
    startLine: 31
  package: com.microsoft.azure.servicebus
  syntax:
    content: protected abstract CompletableFuture<Void> onClose()
    return:
      type: ee893aa6
- uid: com.microsoft.azure.servicebus._client_entity.setClosed()
  id: setClosed()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  langs:
  - java
  name: setClosed()
  nameWithType: ClientEntity.setClosed()
  fullName: final void com.microsoft.azure.servicebus.ClientEntity.setClosed()
  overload: com.microsoft.azure.servicebus._client_entity.setClosed*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/ClientEntity.java
    startLine: 53
  package: com.microsoft.azure.servicebus
  syntax:
    content: protected final void setClosed()
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.servicebus._client_entity.throwIfClosed()
  id: throwIfClosed()
  parent: com.microsoft.azure.servicebus._client_entity
  href: com.microsoft.azure.servicebus._client_entity.yml
  langs:
  - java
  name: throwIfClosed()
  nameWithType: ClientEntity.throwIfClosed()
  fullName: final void com.microsoft.azure.servicebus.ClientEntity.throwIfClosed()
  overload: com.microsoft.azure.servicebus._client_entity.throwIfClosed*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/ClientEntity.java
    startLine: 104
  package: com.microsoft.azure.servicebus
  syntax:
    content: protected final void throwIfClosed()
    return:
      type: 3f6357ce
references:
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 93de0ef9com.microsoft.azure.servicebus._client_entity
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.servicebus._client_entity
    name: ClientEntity
    fullName: com.microsoft.azure.servicebus.ClientEntity
    href: com.microsoft.azure.servicebus._client_entity.yml
- uid: com.microsoft.azure.servicebus._client_entity.ClientEntity*
  name: ClientEntity
  nameWithType: ClientEntity.ClientEntity
  fullName: com.microsoft.azure.servicebus.ClientEntity.ClientEntity
  package: com.microsoft.azure.servicebus
- uid: ee893aa6
  spec.java:
  - name: abstract CompletableFuture<Void>
    fullName: abstract CompletableFuture<Void>
- uid: com.microsoft.azure.servicebus._client_entity.onClose*
  name: onClose
  nameWithType: ClientEntity.onClose
  fullName: abstract CompletableFuture<Void> com.microsoft.azure.servicebus.ClientEntity.onClose
  package: com.microsoft.azure.servicebus
- uid: 3f6357ce
  spec.java:
  - name: final void
    fullName: final void
- uid: com.microsoft.azure.servicebus._client_entity.setClosed*
  name: setClosed
  nameWithType: ClientEntity.setClosed
  fullName: final void com.microsoft.azure.servicebus.ClientEntity.setClosed
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._client_entity.throwIfClosed*
  name: throwIfClosed
  nameWithType: ClientEntity.throwIfClosed
  fullName: final void com.microsoft.azure.servicebus.ClientEntity.throwIfClosed
  package: com.microsoft.azure.servicebus
- uid: 8a99d4b0
  spec.java:
  - name: Exception
    fullName: Exception
- uid: com.microsoft.azure.servicebus._client_entity.getLastKnownError*
  name: getLastKnownError
  nameWithType: ClientEntity.getLastKnownError
  fullName: Exception com.microsoft.azure.servicebus.ClientEntity.getLastKnownError
  package: com.microsoft.azure.servicebus
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.servicebus._client_entity.getClientId*
  name: getClientId
  nameWithType: ClientEntity.getClientId
  fullName: String com.microsoft.azure.servicebus.ClientEntity.getClientId
  package: com.microsoft.azure.servicebus
- uid: fc984e6f
  spec.java:
  - name: final CompletableFuture<Void>
    fullName: final CompletableFuture<Void>
- uid: com.microsoft.azure.servicebus._client_entity.close*
  name: close
  nameWithType: ClientEntity.close
  fullName: final CompletableFuture<Void> com.microsoft.azure.servicebus.ClientEntity.close
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._client_entity.closeSync*
  name: closeSync
  nameWithType: ClientEntity.closeSync
  fullName: final void com.microsoft.azure.servicebus.ClientEntity.closeSync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._client_entity.getIsClosed()
- uid: com.microsoft.azure.servicebus._client_entity.getIsClosingOrClosed()
- uid: com.microsoft.azure.eventhubs._event_hub_client
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: EventHubClient
  nameWithType: EventHubClient
  fullName: com.microsoft.azure.eventhubs.EventHubClient
  type: Class
  summary: >-
    <p>Anchor class - all EventHub client operations STARTS here.</p>

    <p></p>
  syntax:
    content: public class EventHubClient
- uid: com.microsoft.azure.eventhubs._partition_receiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: PartitionReceiver
  nameWithType: PartitionReceiver
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver
  type: Class
  summary: >-
    <p>This is a logical representation of receiving from a EventHub partition. </p>

    <p>A <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> is tied to a ConsumerGroup + EventHub Partition combination. <itemizedlist><listitem><p>If an epoch based <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> (i.e., <xref href="com.microsoft.azure.eventhubs._partition_receiver.getEpoch()" data-throw-if-not-resolved="false"></xref> != 0) is created, EventHubs service will guarantee only 1 active receiver exists per ConsumerGroup + Partition combo. This is the recommended approach to create a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. </p></listitem><listitem><p>Multiple receivers per ConsumerGroup + Partition combo can be created using non-epoch receivers. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public class PartitionReceiver
- uid: com.microsoft.azure.eventhubs._partition_sender
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_sender.yml
  name: PartitionSender
  nameWithType: PartitionSender
  fullName: com.microsoft.azure.eventhubs.PartitionSender
  type: Class
  summary: >-
    <p>This sender class is a logical representation of sending events to a specific EventHub partition. Do not use this class if you do not care about sending events to specific partitions. Instead, use <xref href="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false"></xref> method.</p>

    <p></p>
  syntax:
    content: public class PartitionSender
- uid: com.microsoft.azure.servicebus._message_receiver
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._message_receiver.yml
  name: MessageReceiver
  nameWithType: MessageReceiver
  fullName: com.microsoft.azure.servicebus.MessageReceiver
  type: Class
  summary: <p>Common Receiver that abstracts all amqp related details translates event-driven reactor model into async receive Api </p>
  syntax:
    content: public class MessageReceiver
- uid: com.microsoft.azure.servicebus._message_sender
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._message_sender.yml
  name: MessageSender
  nameWithType: MessageSender
  fullName: com.microsoft.azure.servicebus.MessageSender
  type: Class
  summary: <p>Abstracts all amqp related details translates event-driven reactor model into async send Api </p>
  syntax:
    content: public class MessageSender
- uid: com.microsoft.azure.servicebus._messaging_factory
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._messaging_factory.yml
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.servicebus.MessagingFactory
  type: Class
  summary: <p>Abstracts all amqp related details and exposes AmqpConnection object Manages connection life-cycle </p>
  syntax:
    content: public class MessagingFactory
- uid: com.microsoft.azure.servicebus._client_entity
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._client_entity.yml
  name: ClientEntity
  nameWithType: ClientEntity
  fullName: com.microsoft.azure.servicebus.ClientEntity
  type: Class
  summary: '<p>Contract for all client entities with Open-Close/Abort state m/c main-purpose: closeAll related entities Internal-class </p>'
  syntax: *o1
- uid: com.microsoft.azure.servicebus._service_bus_exception
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._service_bus_exception.yml
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.ServiceBusException
  type: Class
  summary: <p>This is the base exception that service bus will produce for all error cases. </p>
  syntax:
    content: public class ServiceBusException
