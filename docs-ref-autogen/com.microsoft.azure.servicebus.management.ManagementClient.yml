### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.management.ManagementClient"
fullName: "com.microsoft.azure.servicebus.management.ManagementClient"
name: "ManagementClient"
nameWithType: "ManagementClient"
summary: "Synchronous client to perform management operations on Service Bus entities."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ManagementClient"
constructors:
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(ConnectionStringBuilder connectionStringBuilder)"
  name: "ManagementClient(ConnectionStringBuilder connectionStringBuilder)"
  nameWithType: "ManagementClient.ManagementClient(ConnectionStringBuilder connectionStringBuilder)"
  parameters:
  - name: "connectionStringBuilder"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder?alt=com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder&text=ConnectionStringBuilder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagementClient(ConnectionStringBuilder connectionStringBuilder)"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(java.net.URI,com.microsoft.azure.servicebus.ClientSettings)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(URI namespaceEndpointURI, ClientSettings clientSettings)"
  name: "ManagementClient(URI namespaceEndpointURI, ClientSettings clientSettings)"
  nameWithType: "ManagementClient.ManagementClient(URI namespaceEndpointURI, ClientSettings clientSettings)"
  parameters:
  - name: "namespaceEndpointURI"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  - name: "clientSettings"
    type: "<xref href=\"com.microsoft.azure.servicebus.ClientSettings?alt=com.microsoft.azure.servicebus.ClientSettings&text=ClientSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagementClient(URI namespaceEndpointURI, ClientSettings clientSettings)"
methods:
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.close()"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.close()"
  name: "close()"
  nameWithType: "ManagementClient.close()"
  summary: "Disposes and closes the management<wbr>Client."
  syntax: "public void close()"
  exceptions:
  - description: "if an I/O error occurs"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Disposes and closes the managementClient."
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.createQueue(com.microsoft.azure.servicebus.management.QueueDescription)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.createQueue(QueueDescription queueDescription)"
  name: "createQueue(QueueDescription queueDescription)"
  nameWithType: "ManagementClient.createQueue(QueueDescription queueDescription)"
  summary: "Creates a new queue in the service namespace with the given name."
  parameters:
  - description: "- A <xref uid=\"com.microsoft.azure.servicebus.management.QueueDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueDescription\"></xref> object describing the attributes with which the new queue will be created."
    name: "queueDescription"
    type: "<xref href=\"com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueDescription createQueue(QueueDescription queueDescription)"
  exceptions:
  - description: "- An entity with the same name exists under the same service namespace."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- An entity with the same name exists under the same service namespace."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a new queue in the service namespace with the given name. See <xref uid=\"com.microsoft.azure.servicebus.management.QueueDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueDescription\"></xref> for default values of queue properties."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.management.QueueDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueDescription\"></xref> of the newly created queue."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.createQueue(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.createQueue(String queuePath)"
  name: "createQueue(String queuePath)"
  nameWithType: "ManagementClient.createQueue(String queuePath)"
  summary: "Creates a new queue in the service namespace with the given name."
  parameters:
  - description: "- The name of the queue relative to the service namespace base address."
    name: "queuePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueDescription createQueue(String queuePath)"
  exceptions:
  - description: "- Entity name is null, empty, too long or uses illegal characters."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Entity name is null, empty, too long or uses illegal characters."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a new queue in the service namespace with the given name. See <xref uid=\"com.microsoft.azure.servicebus.management.QueueDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueDescription\"></xref> for default values of queue properties."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.management.QueueDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueDescription\"></xref> of the newly created queue."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.createRule(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.createRule(String topicName, String subscriptionName, RuleDescription ruleDescription)"
  name: "createRule(String topicName, String subscriptionName, RuleDescription ruleDescription)"
  nameWithType: "ManagementClient.createRule(String topicName, String subscriptionName, RuleDescription ruleDescription)"
  summary: "Creates a new rule for a given topic - subscription."
  parameters:
  - description: "- Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- A <xref uid=\"com.microsoft.azure.servicebus.rules.RuleDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleDescription\"></xref> object describing the attributes with which the new rule will be created."
    name: "ruleDescription"
    type: "<xref href=\"com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RuleDescription createRule(String topicName, String subscriptionName, RuleDescription ruleDescription)"
  exceptions:
  - description: "- An entity with the same name exists under the same service namespace."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- An entity with the same name exists under the same service namespace."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a new rule for a given topic - subscription. See <xref uid=\"com.microsoft.azure.servicebus.rules.RuleDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleDescription\"></xref> for default values of subscription properties."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.rules.RuleDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleDescription\"></xref> of the newly created rule."
    type: "<xref href=\"com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(com.microsoft.azure.servicebus.management.SubscriptionDescription)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(SubscriptionDescription subscriptionDescription)"
  name: "createSubscription(SubscriptionDescription subscriptionDescription)"
  nameWithType: "ManagementClient.createSubscription(SubscriptionDescription subscriptionDescription)"
  summary: "Creates a new subscription in the service namespace with the given name."
  parameters:
  - description: "- A <xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> object describing the attributes with which the new subscription will be created."
    name: "subscriptionDescription"
    type: "<xref href=\"com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionDescription createSubscription(SubscriptionDescription subscriptionDescription)"
  exceptions:
  - description: "- An entity with the same name exists under the same service namespace."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- An entity with the same name exists under the same service namespace."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a new subscription in the service namespace with the given name. See <xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> for default values of subscription properties."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> of the newly created subscription."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(com.microsoft.azure.servicebus.management.SubscriptionDescription,com.microsoft.azure.servicebus.rules.RuleDescription)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)"
  name: "createSubscription(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)"
  nameWithType: "ManagementClient.createSubscription(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)"
  summary: "Creates a new subscription in the service namespace with the provided default rule."
  parameters:
  - description: "- A <xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> object describing the attributes with which the new subscription will be created."
    name: "subscriptionDescription"
    type: "<xref href=\"com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription\" data-throw-if-not-resolved=\"False\" />"
  - description: "- A <xref uid=\"com.microsoft.azure.servicebus.rules.RuleDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleDescription\"></xref> object describing the default rule. If null, then pass-through filter will be created."
    name: "defaultRule"
    type: "<xref href=\"com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionDescription createSubscription(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)"
  exceptions:
  - description: "- An entity with the same name exists under the same service namespace."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- An entity with the same name exists under the same service namespace."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a new subscription in the service namespace with the provided default rule. See <xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> for default values of subscription properties."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> of the newly created subscription."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(String topicPath, String subscriptionName)"
  name: "createSubscription(String topicPath, String subscriptionName)"
  nameWithType: "ManagementClient.createSubscription(String topicPath, String subscriptionName)"
  summary: "Creates a new subscription for a given topic in the service namespace with the given name."
  parameters:
  - description: "- The name of the topic relative to the service namespace base address."
    name: "topicPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionDescription createSubscription(String topicPath, String subscriptionName)"
  exceptions:
  - description: "- Entity name is null, empty, too long or uses illegal characters."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Entity name is null, empty, too long or uses illegal characters."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a new subscription for a given topic in the service namespace with the given name. See <xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> for default values of subscription properties."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> of the newly created subscription."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.createTopic(com.microsoft.azure.servicebus.management.TopicDescription)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.createTopic(TopicDescription topicDescription)"
  name: "createTopic(TopicDescription topicDescription)"
  nameWithType: "ManagementClient.createTopic(TopicDescription topicDescription)"
  summary: "Creates a new topic in the service namespace with the given name."
  parameters:
  - description: "- A <xref uid=\"com.microsoft.azure.servicebus.management.QueueDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueDescription\"></xref> object describing the attributes with which the new topic will be created."
    name: "topicDescription"
    type: "<xref href=\"com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicDescription createTopic(TopicDescription topicDescription)"
  exceptions:
  - description: "- An entity with the same name exists under the same service namespace."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- An entity with the same name exists under the same service namespace."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a new topic in the service namespace with the given name. See <xref uid=\"com.microsoft.azure.servicebus.management.TopicDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicDescription\"></xref> for default values of topic properties."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.management.TopicDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicDescription\"></xref> of the newly created topic."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.createTopic(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.createTopic(String topicPath)"
  name: "createTopic(String topicPath)"
  nameWithType: "ManagementClient.createTopic(String topicPath)"
  summary: "Creates a new topic in the service namespace with the given name."
  parameters:
  - description: "- The name of the topic relative to the service namespace base address."
    name: "topicPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicDescription createTopic(String topicPath)"
  exceptions:
  - description: "- Entity name is null, empty, too long or uses illegal characters."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Entity name is null, empty, too long or uses illegal characters."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a new topic in the service namespace with the given name. See <xref uid=\"com.microsoft.azure.servicebus.management.TopicDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicDescription\"></xref> for default values of topic properties."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.management.TopicDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicDescription\"></xref> of the newly created topic."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.deleteQueue(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.deleteQueue(String path)"
  name: "deleteQueue(String path)"
  nameWithType: "ManagementClient.deleteQueue(String path)"
  summary: "Deletes the queue described by the path relative to the service namespace base address."
  parameters:
  - description: "- The name of the entity relative to the service namespace base address."
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Void deleteQueue(String path)"
  exceptions:
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Deletes the queue described by the path relative to the service namespace base address."
  returns:
    type: "<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.deleteRule(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.deleteRule(String topicPath, String subscriptionName, String ruleName)"
  name: "deleteRule(String topicPath, String subscriptionName, String ruleName)"
  nameWithType: "ManagementClient.deleteRule(String topicPath, String subscriptionName, String ruleName)"
  summary: "Deletes the rule for a given topic-subscription."
  parameters:
  - description: "- The name of the topic."
    name: "topicPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The name of the rule."
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Void deleteRule(String topicPath, String subscriptionName, String ruleName)"
  exceptions:
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Deletes the rule for a given topic-subscription."
  returns:
    type: "<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.deleteSubscription(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.deleteSubscription(String topicPath, String subscriptionName)"
  name: "deleteSubscription(String topicPath, String subscriptionName)"
  nameWithType: "ManagementClient.deleteSubscription(String topicPath, String subscriptionName)"
  summary: "Deletes the subscription described by the topic<wbr>Path and the subscription<wbr>Name."
  parameters:
  - description: "- The name of the topic."
    name: "topicPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Void deleteSubscription(String topicPath, String subscriptionName)"
  exceptions:
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Deletes the subscription described by the topicPath and the subscriptionName."
  returns:
    type: "<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.deleteTopic(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.deleteTopic(String path)"
  name: "deleteTopic(String path)"
  nameWithType: "ManagementClient.deleteTopic(String path)"
  summary: "Deletes the topic described by the path relative to the service namespace base address."
  parameters:
  - description: "- The name of the entity relative to the service namespace base address."
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Void deleteTopic(String path)"
  exceptions:
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Deletes the topic described by the path relative to the service namespace base address."
  returns:
    type: "<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getNamespaceInfo()"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getNamespaceInfo()"
  name: "getNamespaceInfo()"
  nameWithType: "ManagementClient.getNamespaceInfo()"
  summary: "Retrieves information related to the namespace."
  syntax: "public NamespaceInfo getNamespaceInfo()"
  exceptions:
  - description: "- An internal error or an unexpected exception occurred."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- An internal error or an unexpected exception occurred."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves information related to the namespace. Works with any claim (Send/Listen/Manage)."
  returns:
    description: "- <xref uid=\"com.microsoft.azure.servicebus.management.NamespaceInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NamespaceInfo\"></xref> containing namespace information."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.NamespaceInfo?alt=com.microsoft.azure.servicebus.management.NamespaceInfo&text=NamespaceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getQueue(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getQueue(String path)"
  name: "getQueue(String path)"
  nameWithType: "ManagementClient.getQueue(String path)"
  summary: "Retrieves a queue from the service namespace"
  parameters:
  - description: "- The path of the queue relative to service bus namespace."
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueDescription getQueue(String path)"
  exceptions:
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves a queue from the service namespace"
  returns:
    description: "- QueueDescription containing information about the queue."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getQueueRuntimeInfo(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getQueueRuntimeInfo(String path)"
  name: "getQueueRuntimeInfo(String path)"
  nameWithType: "ManagementClient.getQueueRuntimeInfo(String path)"
  summary: "Retrieves the runtime information of a queue."
  parameters:
  - description: "- The path of the queue relative to service bus namespace."
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueRuntimeInfo getQueueRuntimeInfo(String path)"
  exceptions:
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves the runtime information of a queue."
  returns:
    description: "- QueueRuntimeInfo containing runtime information about the queue."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.QueueRuntimeInfo?alt=com.microsoft.azure.servicebus.management.QueueRuntimeInfo&text=QueueRuntimeInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getQueues()"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getQueues()"
  name: "getQueues()"
  nameWithType: "ManagementClient.getQueues()"
  summary: "Retrieves the list of queues present in the namespace."
  syntax: "public List<QueueDescription> getQueues()"
  exceptions:
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves the list of queues present in the namespace."
  returns:
    description: "the first 100 queues."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getQueues(int,int)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getQueues(int count, int skip)"
  name: "getQueues(int count, int skip)"
  nameWithType: "ManagementClient.getQueues(int count, int skip)"
  summary: "Retrieves the list of queues present in the namespace."
  parameters:
  - description: "- The number of queues to fetch. Defaults to 100. Maximum value allowed is 100."
    name: "count"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The number of queues to skip. Defaults to 0. Cannot be negative."
    name: "skip"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<QueueDescription> getQueues(int count, int skip)"
  exceptions:
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves the list of queues present in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities."
  returns:
    description: "the list of queues."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getRule(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getRule(String topicPath, String subscriptionName, String ruleName)"
  name: "getRule(String topicPath, String subscriptionName, String ruleName)"
  nameWithType: "ManagementClient.getRule(String topicPath, String subscriptionName, String ruleName)"
  summary: "Retrieves a rule for a given topic and subscription from the service namespace"
  parameters:
  - description: "- The path of the topic relative to service bus namespace."
    name: "topicPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The name of the rule."
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RuleDescription getRule(String topicPath, String subscriptionName, String ruleName)"
  exceptions:
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves a rule for a given topic and subscription from the service namespace"
  returns:
    description: "- RuleDescription containing information about the subscription."
    type: "<xref href=\"com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getRules(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getRules(String topicName, String subscriptionName)"
  name: "getRules(String topicName, String subscriptionName)"
  nameWithType: "ManagementClient.getRules(String topicName, String subscriptionName)"
  summary: "Retrieves the list of rules for a given topic-subscription in the namespace."
  parameters:
  - description: "- The name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<RuleDescription> getRules(String topicName, String subscriptionName)"
  exceptions:
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves the list of rules for a given topic-subscription in the namespace."
  returns:
    description: "the first 100 rules."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getRules(java.lang.String,java.lang.String,int,int)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getRules(String topicName, String subscriptionName, int count, int skip)"
  name: "getRules(String topicName, String subscriptionName, int count, int skip)"
  nameWithType: "ManagementClient.getRules(String topicName, String subscriptionName, int count, int skip)"
  summary: "Retrieves the list of rules for a given topic-subscription in the namespace."
  parameters:
  - description: "- The name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The number of rules to fetch. Defaults to 100. Maximum value allowed is 100."
    name: "count"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The number of rules to skip. Defaults to 0. Cannot be negative."
    name: "skip"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<RuleDescription> getRules(String topicName, String subscriptionName, int count, int skip)"
  exceptions:
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves the list of rules for a given topic-subscription in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities."
  returns:
    description: "the list of rules."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getSubscription(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getSubscription(String topicPath, String subscriptionName)"
  name: "getSubscription(String topicPath, String subscriptionName)"
  nameWithType: "ManagementClient.getSubscription(String topicPath, String subscriptionName)"
  summary: "Retrieves a subscription for a given topic from the service namespace"
  parameters:
  - description: "- The path of the topic relative to service bus namespace."
    name: "topicPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The name of the subscription"
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionDescription getSubscription(String topicPath, String subscriptionName)"
  exceptions:
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves a subscription for a given topic from the service namespace"
  returns:
    description: "- SubscriptionDescription containing information about the subscription."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptionRuntimeInfo(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptionRuntimeInfo(String topicPath, String subscriptionName)"
  name: "getSubscriptionRuntimeInfo(String topicPath, String subscriptionName)"
  nameWithType: "ManagementClient.getSubscriptionRuntimeInfo(String topicPath, String subscriptionName)"
  summary: "Retrieves the runtime information of a subscription in a given topic"
  parameters:
  - description: "- The path of the topic relative to service bus namespace."
    name: "topicPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The name of the subscription"
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionRuntimeInfo getSubscriptionRuntimeInfo(String topicPath, String subscriptionName)"
  exceptions:
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves the runtime information of a subscription in a given topic"
  returns:
    description: "- SubscriptionRuntimeInfo containing the runtime information about the subscription."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo?alt=com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo&text=SubscriptionRuntimeInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(String topicName)"
  name: "getSubscriptions(String topicName)"
  nameWithType: "ManagementClient.getSubscriptions(String topicName)"
  summary: "Retrieves the list of subscriptions for a given topic in the namespace."
  parameters:
  - description: "- The name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<SubscriptionDescription> getSubscriptions(String topicName)"
  exceptions:
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves the list of subscriptions for a given topic in the namespace."
  returns:
    description: "the first 100 subscriptions."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(java.lang.String,int,int)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(String topicName, int count, int skip)"
  name: "getSubscriptions(String topicName, int count, int skip)"
  nameWithType: "ManagementClient.getSubscriptions(String topicName, int count, int skip)"
  summary: "Retrieves the list of subscriptions for a given topic in the namespace."
  parameters:
  - description: "- The name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The number of subscriptions to fetch. Defaults to 100. Maximum value allowed is 100."
    name: "count"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The number of subscriptions to skip. Defaults to 0. Cannot be negative."
    name: "skip"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<SubscriptionDescription> getSubscriptions(String topicName, int count, int skip)"
  exceptions:
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves the list of subscriptions for a given topic in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities."
  returns:
    description: "the list of subscriptions."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getTopic(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getTopic(String path)"
  name: "getTopic(String path)"
  nameWithType: "ManagementClient.getTopic(String path)"
  summary: "Retrieves a topic from the service namespace"
  parameters:
  - description: "- The path of the queue relative to service bus namespace."
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicDescription getTopic(String path)"
  exceptions:
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves a topic from the service namespace"
  returns:
    description: "- Description containing information about the topic."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getTopicRuntimeInfo(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getTopicRuntimeInfo(String path)"
  name: "getTopicRuntimeInfo(String path)"
  nameWithType: "ManagementClient.getTopicRuntimeInfo(String path)"
  summary: "Retrieves the runtime information of a topic"
  parameters:
  - description: "- The path of the queue relative to service bus namespace."
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicRuntimeInfo getTopicRuntimeInfo(String path)"
  exceptions:
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Thrown if path is null, empty, or not in right format or length."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves the runtime information of a topic"
  returns:
    description: "- TopicRuntimeInfo containing runtime information about the topic."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.TopicRuntimeInfo?alt=com.microsoft.azure.servicebus.management.TopicRuntimeInfo&text=TopicRuntimeInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getTopics()"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getTopics()"
  name: "getTopics()"
  nameWithType: "ManagementClient.getTopics()"
  summary: "Retrieves the list of topics present in the namespace."
  syntax: "public List<TopicDescription> getTopics()"
  exceptions:
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves the list of topics present in the namespace."
  returns:
    description: "the first 100 topics."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getTopics(int,int)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getTopics(int count, int skip)"
  name: "getTopics(int count, int skip)"
  nameWithType: "ManagementClient.getTopics(int count, int skip)"
  summary: "Retrieves the list of topics present in the namespace."
  parameters:
  - description: "- The number of topics to fetch. Defaults to 100. Maximum value allowed is 100."
    name: "count"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The number of topics to skip. Defaults to 0. Cannot be negative."
    name: "skip"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<TopicDescription> getTopics(int count, int skip)"
  exceptions:
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieves the list of topics present in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities."
  returns:
    description: "the list of topics."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.queueExists(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.queueExists(String path)"
  name: "queueExists(String path)"
  nameWithType: "ManagementClient.queueExists(String path)"
  summary: "Checks whether a given queue exists or not."
  parameters:
  - description: "- Path of the entity to check"
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Boolean queueExists(String path)"
  exceptions:
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Checks whether a given queue exists or not."
  returns:
    description: "- True if the entity exists. False otherwise."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.ruleExists(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.ruleExists(String topicPath, String subscriptionName, String ruleName)"
  name: "ruleExists(String topicPath, String subscriptionName, String ruleName)"
  nameWithType: "ManagementClient.ruleExists(String topicPath, String subscriptionName, String ruleName)"
  summary: "Checks whether a given rule exists or not for a given subscription."
  parameters:
  - description: "- Path of the topic"
    name: "topicPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Name of the rule"
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Boolean ruleExists(String topicPath, String subscriptionName, String ruleName)"
  exceptions:
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Checks whether a given rule exists or not for a given subscription."
  returns:
    description: "- True if the entity exists. False otherwise."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.subscriptionExists(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.subscriptionExists(String topicPath, String subscriptionName)"
  name: "subscriptionExists(String topicPath, String subscriptionName)"
  nameWithType: "ManagementClient.subscriptionExists(String topicPath, String subscriptionName)"
  summary: "Checks whether a given subscription exists or not."
  parameters:
  - description: "- Path of the topic"
    name: "topicPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Boolean subscriptionExists(String topicPath, String subscriptionName)"
  exceptions:
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Checks whether a given subscription exists or not."
  returns:
    description: "- True if the entity exists. False otherwise."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.topicExists(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.topicExists(String path)"
  name: "topicExists(String path)"
  nameWithType: "ManagementClient.topicExists(String path)"
  summary: "Checks whether a given topic exists or not."
  parameters:
  - description: "- Path of the entity to check"
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Boolean topicExists(String path)"
  exceptions:
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- path is not null / empty / too long / invalid."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Checks whether a given topic exists or not."
  returns:
    description: "- True if the entity exists. False otherwise."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.updateQueue(com.microsoft.azure.servicebus.management.QueueDescription)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.updateQueue(QueueDescription queueDescription)"
  name: "updateQueue(QueueDescription queueDescription)"
  nameWithType: "ManagementClient.updateQueue(QueueDescription queueDescription)"
  summary: "Updates an existing queue."
  parameters:
  - description: "- A <xref uid=\"com.microsoft.azure.servicebus.management.QueueDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueDescription\"></xref> object describing the attributes with which the queue will be updated."
    name: "queueDescription"
    type: "<xref href=\"com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueDescription updateQueue(QueueDescription queueDescription)"
  exceptions:
  - description: "- Described entity was not found."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Described entity was not found."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Updates an existing queue."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.management.QueueDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueDescription\"></xref> of the updated queue."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.updateRule(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.updateRule(String topicName, String subscriptionName, RuleDescription ruleDescription)"
  name: "updateRule(String topicName, String subscriptionName, RuleDescription ruleDescription)"
  nameWithType: "ManagementClient.updateRule(String topicName, String subscriptionName, RuleDescription ruleDescription)"
  summary: "Updates an existing rule."
  parameters:
  - description: "- Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- A <xref uid=\"com.microsoft.azure.servicebus.rules.RuleDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleDescription\"></xref> object describing the attributes with which the rule will be updated."
    name: "ruleDescription"
    type: "<xref href=\"com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RuleDescription updateRule(String topicName, String subscriptionName, RuleDescription ruleDescription)"
  exceptions:
  - description: "- Described entity was not found."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Described entity was not found."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Updates an existing rule."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.rules.RuleDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleDescription\"></xref> of the updated rule."
    type: "<xref href=\"com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.updateSubscription(com.microsoft.azure.servicebus.management.SubscriptionDescription)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.updateSubscription(SubscriptionDescription subscriptionDescription)"
  name: "updateSubscription(SubscriptionDescription subscriptionDescription)"
  nameWithType: "ManagementClient.updateSubscription(SubscriptionDescription subscriptionDescription)"
  summary: "Updates an existing subscription."
  parameters:
  - description: "- A <xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> object describing the attributes with which the subscription will be updated."
    name: "subscriptionDescription"
    type: "<xref href=\"com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionDescription updateSubscription(SubscriptionDescription subscriptionDescription)"
  exceptions:
  - description: "- Described entity was not found."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Described entity was not found."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Updates an existing subscription."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> of the updated subscription."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.updateTopic(com.microsoft.azure.servicebus.management.TopicDescription)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.updateTopic(TopicDescription topicDescription)"
  name: "updateTopic(TopicDescription topicDescription)"
  nameWithType: "ManagementClient.updateTopic(TopicDescription topicDescription)"
  summary: "Updates an existing topic."
  parameters:
  - description: "- A <xref uid=\"com.microsoft.azure.servicebus.management.TopicDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicDescription\"></xref> object describing the attributes with which the topic will be updated."
    name: "topicDescription"
    type: "<xref href=\"com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicDescription updateTopic(TopicDescription topicDescription)"
  exceptions:
  - description: "- Described entity was not found."
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Described entity was not found."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Updates an existing topic."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.management.TopicDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicDescription\"></xref> of the updated topic."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Synchronous client to perform management operations on Service Bus entities. Use <xref uid=\"com.microsoft.azure.servicebus.management.ManagementClientAsync\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ManagementClientAsync\"></xref> for asynchronous operations."
metadata: {}
package: "com.microsoft.azure.servicebus.management"
artifact: com.microsoft.azure:azure-servicebus:3.6.6
