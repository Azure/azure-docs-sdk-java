### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.management.ManagementClient
  id: ManagementClient
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management
  children:
  - com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  - com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(java.net.URI,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.management.ManagementClient.close()
  - com.microsoft.azure.servicebus.management.ManagementClient.createQueue(com.microsoft.azure.servicebus.management.QueueDescription)
  - com.microsoft.azure.servicebus.management.ManagementClient.createQueue(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.createRule(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)
  - com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(com.microsoft.azure.servicebus.management.SubscriptionDescription)
  - com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(com.microsoft.azure.servicebus.management.SubscriptionDescription,com.microsoft.azure.servicebus.rules.RuleDescription)
  - com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.createTopic(com.microsoft.azure.servicebus.management.TopicDescription)
  - com.microsoft.azure.servicebus.management.ManagementClient.createTopic(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.deleteQueue(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.deleteRule(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.deleteSubscription(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.deleteTopic(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.getNamespaceInfo()
  - com.microsoft.azure.servicebus.management.ManagementClient.getQueue(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.getQueueRuntimeInfo(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.getQueues()
  - com.microsoft.azure.servicebus.management.ManagementClient.getQueues(int,int)
  - com.microsoft.azure.servicebus.management.ManagementClient.getRule(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.getRules(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.getRules(java.lang.String,java.lang.String,int,int)
  - com.microsoft.azure.servicebus.management.ManagementClient.getSubscription(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptionRuntimeInfo(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(java.lang.String,int,int)
  - com.microsoft.azure.servicebus.management.ManagementClient.getTopic(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.getTopicRuntimeInfo(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.getTopics()
  - com.microsoft.azure.servicebus.management.ManagementClient.getTopics(int,int)
  - com.microsoft.azure.servicebus.management.ManagementClient.queueExists(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.ruleExists(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.subscriptionExists(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.topicExists(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClient.updateQueue(com.microsoft.azure.servicebus.management.QueueDescription)
  - com.microsoft.azure.servicebus.management.ManagementClient.updateRule(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)
  - com.microsoft.azure.servicebus.management.ManagementClient.updateSubscription(com.microsoft.azure.servicebus.management.SubscriptionDescription)
  - com.microsoft.azure.servicebus.management.ManagementClient.updateTopic(com.microsoft.azure.servicebus.management.TopicDescription)
  langs:
  - java
  name: ManagementClient
  nameWithType: ManagementClient
  fullName: com.microsoft.azure.servicebus.management.ManagementClient
  type: Class
  package: com.microsoft.azure.servicebus.management
  summary: Synchronous client to perform management operations on Service Bus entities. Use <xref uid="com.microsoft.azure.servicebus.management.ManagementClientAsync" data-throw-if-not-resolved="false">ManagementClientAsync</xref> for asynchronous operations.
  syntax:
    content: public class ManagementClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  id: ManagementClient(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: ManagementClient(ConnectionStringBuilder connectionStringBuilder)
  nameWithType: ManagementClient.ManagementClient(ConnectionStringBuilder connectionStringBuilder)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(ConnectionStringBuilder connectionStringBuilder)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient*
  type: Constructor
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public ManagementClient(ConnectionStringBuilder connectionStringBuilder)
    parameters:
    - id: connectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
- uid: com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(java.net.URI,com.microsoft.azure.servicebus.ClientSettings)
  id: ManagementClient(java.net.URI,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: ManagementClient(URI namespaceEndpointURI, ClientSettings clientSettings)
  nameWithType: ManagementClient.ManagementClient(URI namespaceEndpointURI, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(URI namespaceEndpointURI, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient*
  type: Constructor
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public ManagementClient(URI namespaceEndpointURI, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
- uid: com.microsoft.azure.servicebus.management.ManagementClient.close()
  id: close()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: close()
  nameWithType: ManagementClient.close()
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.close()
  overload: com.microsoft.azure.servicebus.management.ManagementClient.close*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Disposes and closes the managementClient.
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
    description: if an I/O error occurs
- uid: com.microsoft.azure.servicebus.management.ManagementClient.createQueue(com.microsoft.azure.servicebus.management.QueueDescription)
  id: createQueue(com.microsoft.azure.servicebus.management.QueueDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: createQueue(QueueDescription queueDescription)
  nameWithType: ManagementClient.createQueue(QueueDescription queueDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.createQueue(QueueDescription queueDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.createQueue*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new queue in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> for default values of queue properties.
  syntax:
    content: public QueueDescription createQueue(QueueDescription queueDescription)
    parameters:
    - id: queueDescription
      type: com.microsoft.azure.servicebus.management.QueueDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> object describing the attributes with which the new queue will be created.'
    return:
      type: com.microsoft.azure.servicebus.management.QueueDescription
      description: <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> of the newly created queue.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- An entity with the same name exists under the same service namespace.'
  - type: java.lang.InterruptedException
    description: '- An entity with the same name exists under the same service namespace.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.createQueue(java.lang.String)
  id: createQueue(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: createQueue(String queuePath)
  nameWithType: ManagementClient.createQueue(String queuePath)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.createQueue(String queuePath)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.createQueue*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new queue in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> for default values of queue properties.
  syntax:
    content: public QueueDescription createQueue(String queuePath)
    parameters:
    - id: queuePath
      type: java.lang.String
      description: '- The name of the queue relative to the service namespace base address.'
    return:
      type: com.microsoft.azure.servicebus.management.QueueDescription
      description: <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> of the newly created queue.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Entity name is null, empty, too long or uses illegal characters.'
  - type: java.lang.InterruptedException
    description: '- Entity name is null, empty, too long or uses illegal characters.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.createRule(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)
  id: createRule(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: createRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  nameWithType: ManagementClient.createRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.createRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.createRule*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new rule for a given topic - subscription. See <xref uid="com.microsoft.azure.servicebus.rules.RuleDescription" data-throw-if-not-resolved="false">RuleDescription</xref> for default values of subscription properties.
  syntax:
    content: public RuleDescription createRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
    parameters:
    - id: topicName
      type: java.lang.String
      description: '- Name of the topic.'
    - id: subscriptionName
      type: java.lang.String
      description: '- Name of the subscription.'
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.rules.RuleDescription" data-throw-if-not-resolved="false">RuleDescription</xref> object describing the attributes with which the new rule will be created.'
    return:
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <xref uid="com.microsoft.azure.servicebus.rules.RuleDescription" data-throw-if-not-resolved="false">RuleDescription</xref> of the newly created rule.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- An entity with the same name exists under the same service namespace.'
  - type: java.lang.InterruptedException
    description: '- An entity with the same name exists under the same service namespace.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(com.microsoft.azure.servicebus.management.SubscriptionDescription)
  id: createSubscription(com.microsoft.azure.servicebus.management.SubscriptionDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: createSubscription(SubscriptionDescription subscriptionDescription)
  nameWithType: ManagementClient.createSubscription(SubscriptionDescription subscriptionDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(SubscriptionDescription subscriptionDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new subscription in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> for default values of subscription properties.
  syntax:
    content: public SubscriptionDescription createSubscription(SubscriptionDescription subscriptionDescription)
    parameters:
    - id: subscriptionDescription
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> object describing the attributes with which the new subscription will be created.'
    return:
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> of the newly created subscription.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- An entity with the same name exists under the same service namespace.'
  - type: java.lang.InterruptedException
    description: '- An entity with the same name exists under the same service namespace.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(com.microsoft.azure.servicebus.management.SubscriptionDescription,com.microsoft.azure.servicebus.rules.RuleDescription)
  id: createSubscription(com.microsoft.azure.servicebus.management.SubscriptionDescription,com.microsoft.azure.servicebus.rules.RuleDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: createSubscription(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  nameWithType: ManagementClient.createSubscription(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new subscription in the service namespace with the provided default rule. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> for default values of subscription properties.
  syntax:
    content: public SubscriptionDescription createSubscription(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
    parameters:
    - id: subscriptionDescription
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> object describing the attributes with which the new subscription will be created.'
    - id: defaultRule
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.rules.RuleDescription" data-throw-if-not-resolved="false">RuleDescription</xref> object describing the default rule. If null, then pass-through filter will be created.'
    return:
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> of the newly created subscription.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- An entity with the same name exists under the same service namespace.'
  - type: java.lang.InterruptedException
    description: '- An entity with the same name exists under the same service namespace.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(java.lang.String,java.lang.String)
  id: createSubscription(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: createSubscription(String topicPath, String subscriptionName)
  nameWithType: ManagementClient.createSubscription(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new subscription for a given topic in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> for default values of subscription properties.
  syntax:
    content: public SubscriptionDescription createSubscription(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The name of the topic relative to the service namespace base address.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription.'
    return:
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> of the newly created subscription.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Entity name is null, empty, too long or uses illegal characters.'
  - type: java.lang.InterruptedException
    description: '- Entity name is null, empty, too long or uses illegal characters.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.createTopic(com.microsoft.azure.servicebus.management.TopicDescription)
  id: createTopic(com.microsoft.azure.servicebus.management.TopicDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: createTopic(TopicDescription topicDescription)
  nameWithType: ManagementClient.createTopic(TopicDescription topicDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.createTopic(TopicDescription topicDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.createTopic*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new topic in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false">TopicDescription</xref> for default values of topic properties.
  syntax:
    content: public TopicDescription createTopic(TopicDescription topicDescription)
    parameters:
    - id: topicDescription
      type: com.microsoft.azure.servicebus.management.TopicDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> object describing the attributes with which the new topic will be created.'
    return:
      type: com.microsoft.azure.servicebus.management.TopicDescription
      description: <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false">TopicDescription</xref> of the newly created topic.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- An entity with the same name exists under the same service namespace.'
  - type: java.lang.InterruptedException
    description: '- An entity with the same name exists under the same service namespace.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.createTopic(java.lang.String)
  id: createTopic(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: createTopic(String topicPath)
  nameWithType: ManagementClient.createTopic(String topicPath)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.createTopic(String topicPath)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.createTopic*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new topic in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false">TopicDescription</xref> for default values of topic properties.
  syntax:
    content: public TopicDescription createTopic(String topicPath)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The name of the topic relative to the service namespace base address.'
    return:
      type: com.microsoft.azure.servicebus.management.TopicDescription
      description: <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false">TopicDescription</xref> of the newly created topic.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Entity name is null, empty, too long or uses illegal characters.'
  - type: java.lang.InterruptedException
    description: '- Entity name is null, empty, too long or uses illegal characters.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.deleteQueue(java.lang.String)
  id: deleteQueue(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: deleteQueue(String path)
  nameWithType: ManagementClient.deleteQueue(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.deleteQueue(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.deleteQueue*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Deletes the queue described by the path relative to the service namespace base address.
  syntax:
    content: public Void deleteQueue(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- The name of the entity relative to the service namespace base address.'
    return:
      type: java.lang.Void
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- path is not null / empty / too long / invalid.'
  - type: java.lang.InterruptedException
    description: '- path is not null / empty / too long / invalid.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.deleteRule(java.lang.String,java.lang.String,java.lang.String)
  id: deleteRule(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: deleteRule(String topicPath, String subscriptionName, String ruleName)
  nameWithType: ManagementClient.deleteRule(String topicPath, String subscriptionName, String ruleName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.deleteRule(String topicPath, String subscriptionName, String ruleName)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.deleteRule*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Deletes the rule for a given topic-subscription.
  syntax:
    content: public Void deleteRule(String topicPath, String subscriptionName, String ruleName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The name of the topic.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription.'
    - id: ruleName
      type: java.lang.String
      description: '- The name of the rule.'
    return:
      type: java.lang.Void
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- path is not null / empty / too long / invalid.'
  - type: java.lang.InterruptedException
    description: '- path is not null / empty / too long / invalid.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.deleteSubscription(java.lang.String,java.lang.String)
  id: deleteSubscription(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: deleteSubscription(String topicPath, String subscriptionName)
  nameWithType: ManagementClient.deleteSubscription(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.deleteSubscription(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.deleteSubscription*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Deletes the subscription described by the topicPath and the subscriptionName.
  syntax:
    content: public Void deleteSubscription(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The name of the topic.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription.'
    return:
      type: java.lang.Void
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- path is not null / empty / too long / invalid.'
  - type: java.lang.InterruptedException
    description: '- path is not null / empty / too long / invalid.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.deleteTopic(java.lang.String)
  id: deleteTopic(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: deleteTopic(String path)
  nameWithType: ManagementClient.deleteTopic(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.deleteTopic(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.deleteTopic*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Deletes the topic described by the path relative to the service namespace base address.
  syntax:
    content: public Void deleteTopic(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- The name of the entity relative to the service namespace base address.'
    return:
      type: java.lang.Void
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- path is not null / empty / too long / invalid.'
  - type: java.lang.InterruptedException
    description: '- path is not null / empty / too long / invalid.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getNamespaceInfo()
  id: getNamespaceInfo()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getNamespaceInfo()
  nameWithType: ManagementClient.getNamespaceInfo()
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getNamespaceInfo()
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getNamespaceInfo*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves information related to the namespace. Works with any claim (Send/Listen/Manage).
  syntax:
    content: public NamespaceInfo getNamespaceInfo()
    return:
      type: com.microsoft.azure.servicebus.management.NamespaceInfo
      description: '- <xref uid="com.microsoft.azure.servicebus.management.NamespaceInfo" data-throw-if-not-resolved="false">NamespaceInfo</xref> containing namespace information.'
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- An internal error or an unexpected exception occurred.'
  - type: java.lang.InterruptedException
    description: '- An internal error or an unexpected exception occurred.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getQueue(java.lang.String)
  id: getQueue(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getQueue(String path)
  nameWithType: ManagementClient.getQueue(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getQueue(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getQueue*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves a queue from the service namespace
  syntax:
    content: public QueueDescription getQueue(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- The path of the queue relative to service bus namespace.'
    return:
      type: com.microsoft.azure.servicebus.management.QueueDescription
      description: '- QueueDescription containing information about the queue.'
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Thrown if path is null, empty, or not in right format or length.'
  - type: java.lang.InterruptedException
    description: '- Thrown if path is null, empty, or not in right format or length.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getQueueRuntimeInfo(java.lang.String)
  id: getQueueRuntimeInfo(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getQueueRuntimeInfo(String path)
  nameWithType: ManagementClient.getQueueRuntimeInfo(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getQueueRuntimeInfo(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getQueueRuntimeInfo*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the runtime information of a queue.
  syntax:
    content: public QueueRuntimeInfo getQueueRuntimeInfo(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- The path of the queue relative to service bus namespace.'
    return:
      type: com.microsoft.azure.servicebus.management.QueueRuntimeInfo
      description: '- QueueRuntimeInfo containing runtime information about the queue.'
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Thrown if path is null, empty, or not in right format or length.'
  - type: java.lang.InterruptedException
    description: '- Thrown if path is null, empty, or not in right format or length.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getQueues()
  id: getQueues()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getQueues()
  nameWithType: ManagementClient.getQueues()
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getQueues()
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getQueues*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of queues present in the namespace.
  syntax:
    content: public List<QueueDescription> getQueues()
    return:
      type: java.util.List<com.microsoft.azure.servicebus.management.QueueDescription>
      description: the first 100 queues.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
  - type: java.lang.InterruptedException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getQueues(int,int)
  id: getQueues(int,int)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getQueues(int count, int skip)
  nameWithType: ManagementClient.getQueues(int count, int skip)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getQueues(int count, int skip)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getQueues*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of queues present in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities.
  syntax:
    content: public List<QueueDescription> getQueues(int count, int skip)
    parameters:
    - id: count
      type: int
      description: '- The number of queues to fetch. Defaults to 100. Maximum value allowed is 100.'
    - id: skip
      type: int
      description: '- The number of queues to skip. Defaults to 0. Cannot be negative.'
    return:
      type: java.util.List<com.microsoft.azure.servicebus.management.QueueDescription>
      description: the list of queues.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
  - type: java.lang.InterruptedException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getRule(java.lang.String,java.lang.String,java.lang.String)
  id: getRule(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getRule(String topicPath, String subscriptionName, String ruleName)
  nameWithType: ManagementClient.getRule(String topicPath, String subscriptionName, String ruleName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getRule(String topicPath, String subscriptionName, String ruleName)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getRule*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves a rule for a given topic and subscription from the service namespace
  syntax:
    content: public RuleDescription getRule(String topicPath, String subscriptionName, String ruleName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The path of the topic relative to service bus namespace.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription.'
    - id: ruleName
      type: java.lang.String
      description: '- The name of the rule.'
    return:
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: '- RuleDescription containing information about the subscription.'
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Thrown if path is null, empty, or not in right format or length.'
  - type: java.lang.InterruptedException
    description: '- Thrown if path is null, empty, or not in right format or length.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getRules(java.lang.String,java.lang.String)
  id: getRules(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getRules(String topicName, String subscriptionName)
  nameWithType: ManagementClient.getRules(String topicName, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getRules(String topicName, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getRules*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of rules for a given topic-subscription in the namespace.
  syntax:
    content: public List<RuleDescription> getRules(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: '- The name of the topic.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription.'
    return:
      type: java.util.List<com.microsoft.azure.servicebus.rules.RuleDescription>
      description: the first 100 rules.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
  - type: java.lang.InterruptedException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getRules(java.lang.String,java.lang.String,int,int)
  id: getRules(java.lang.String,java.lang.String,int,int)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getRules(String topicName, String subscriptionName, int count, int skip)
  nameWithType: ManagementClient.getRules(String topicName, String subscriptionName, int count, int skip)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getRules(String topicName, String subscriptionName, int count, int skip)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getRules*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of rules for a given topic-subscription in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities.
  syntax:
    content: public List<RuleDescription> getRules(String topicName, String subscriptionName, int count, int skip)
    parameters:
    - id: topicName
      type: java.lang.String
      description: '- The name of the topic.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription.'
    - id: count
      type: int
      description: '- The number of rules to fetch. Defaults to 100. Maximum value allowed is 100.'
    - id: skip
      type: int
      description: '- The number of rules to skip. Defaults to 0. Cannot be negative.'
    return:
      type: java.util.List<com.microsoft.azure.servicebus.rules.RuleDescription>
      description: the list of rules.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
  - type: java.lang.InterruptedException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getSubscription(java.lang.String,java.lang.String)
  id: getSubscription(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getSubscription(String topicPath, String subscriptionName)
  nameWithType: ManagementClient.getSubscription(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getSubscription(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getSubscription*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves a subscription for a given topic from the service namespace
  syntax:
    content: public SubscriptionDescription getSubscription(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The path of the topic relative to service bus namespace.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription'
    return:
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: '- SubscriptionDescription containing information about the subscription.'
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Thrown if path is null, empty, or not in right format or length.'
  - type: java.lang.InterruptedException
    description: '- Thrown if path is null, empty, or not in right format or length.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptionRuntimeInfo(java.lang.String,java.lang.String)
  id: getSubscriptionRuntimeInfo(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getSubscriptionRuntimeInfo(String topicPath, String subscriptionName)
  nameWithType: ManagementClient.getSubscriptionRuntimeInfo(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptionRuntimeInfo(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptionRuntimeInfo*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the runtime information of a subscription in a given topic
  syntax:
    content: public SubscriptionRuntimeInfo getSubscriptionRuntimeInfo(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The path of the topic relative to service bus namespace.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription'
    return:
      type: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo
      description: '- SubscriptionRuntimeInfo containing the runtime information about the subscription.'
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Thrown if path is null, empty, or not in right format or length.'
  - type: java.lang.InterruptedException
    description: '- Thrown if path is null, empty, or not in right format or length.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(java.lang.String)
  id: getSubscriptions(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getSubscriptions(String topicName)
  nameWithType: ManagementClient.getSubscriptions(String topicName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(String topicName)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of subscriptions for a given topic in the namespace.
  syntax:
    content: public List<SubscriptionDescription> getSubscriptions(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: '- The name of the topic.'
    return:
      type: java.util.List<com.microsoft.azure.servicebus.management.SubscriptionDescription>
      description: the first 100 subscriptions.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
  - type: java.lang.InterruptedException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(java.lang.String,int,int)
  id: getSubscriptions(java.lang.String,int,int)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getSubscriptions(String topicName, int count, int skip)
  nameWithType: ManagementClient.getSubscriptions(String topicName, int count, int skip)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(String topicName, int count, int skip)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of subscriptions for a given topic in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities.
  syntax:
    content: public List<SubscriptionDescription> getSubscriptions(String topicName, int count, int skip)
    parameters:
    - id: topicName
      type: java.lang.String
      description: '- The name of the topic.'
    - id: count
      type: int
      description: '- The number of subscriptions to fetch. Defaults to 100. Maximum value allowed is 100.'
    - id: skip
      type: int
      description: '- The number of subscriptions to skip. Defaults to 0. Cannot be negative.'
    return:
      type: java.util.List<com.microsoft.azure.servicebus.management.SubscriptionDescription>
      description: the list of subscriptions.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
  - type: java.lang.InterruptedException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopic(java.lang.String)
  id: getTopic(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getTopic(String path)
  nameWithType: ManagementClient.getTopic(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopic(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getTopic*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves a topic from the service namespace
  syntax:
    content: public TopicDescription getTopic(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- The path of the queue relative to service bus namespace.'
    return:
      type: com.microsoft.azure.servicebus.management.TopicDescription
      description: '- Description containing information about the topic.'
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Thrown if path is null, empty, or not in right format or length.'
  - type: java.lang.InterruptedException
    description: '- Thrown if path is null, empty, or not in right format or length.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopicRuntimeInfo(java.lang.String)
  id: getTopicRuntimeInfo(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getTopicRuntimeInfo(String path)
  nameWithType: ManagementClient.getTopicRuntimeInfo(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopicRuntimeInfo(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getTopicRuntimeInfo*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the runtime information of a topic
  syntax:
    content: public TopicRuntimeInfo getTopicRuntimeInfo(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- The path of the queue relative to service bus namespace.'
    return:
      type: com.microsoft.azure.servicebus.management.TopicRuntimeInfo
      description: '- TopicRuntimeInfo containing runtime information about the topic.'
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Thrown if path is null, empty, or not in right format or length.'
  - type: java.lang.InterruptedException
    description: '- Thrown if path is null, empty, or not in right format or length.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopics()
  id: getTopics()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getTopics()
  nameWithType: ManagementClient.getTopics()
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopics()
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getTopics*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of topics present in the namespace.
  syntax:
    content: public List<TopicDescription> getTopics()
    return:
      type: java.util.List<com.microsoft.azure.servicebus.management.TopicDescription>
      description: the first 100 topics.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
  - type: java.lang.InterruptedException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopics(int,int)
  id: getTopics(int,int)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: getTopics(int count, int skip)
  nameWithType: ManagementClient.getTopics(int count, int skip)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopics(int count, int skip)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.getTopics*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of topics present in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities.
  syntax:
    content: public List<TopicDescription> getTopics(int count, int skip)
    parameters:
    - id: count
      type: int
      description: '- The number of topics to fetch. Defaults to 100. Maximum value allowed is 100.'
    - id: skip
      type: int
      description: '- The number of topics to skip. Defaults to 0. Cannot be negative.'
    return:
      type: java.util.List<com.microsoft.azure.servicebus.management.TopicDescription>
      description: the list of topics.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
  - type: java.lang.InterruptedException
    description: '- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.queueExists(java.lang.String)
  id: queueExists(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: queueExists(String path)
  nameWithType: ManagementClient.queueExists(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.queueExists(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.queueExists*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Checks whether a given queue exists or not.
  syntax:
    content: public Boolean queueExists(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- Path of the entity to check'
    return:
      type: java.lang.Boolean
      description: '- True if the entity exists. False otherwise.'
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- path is not null / empty / too long / invalid.'
  - type: java.lang.InterruptedException
    description: '- path is not null / empty / too long / invalid.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.ruleExists(java.lang.String,java.lang.String,java.lang.String)
  id: ruleExists(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: ruleExists(String topicPath, String subscriptionName, String ruleName)
  nameWithType: ManagementClient.ruleExists(String topicPath, String subscriptionName, String ruleName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.ruleExists(String topicPath, String subscriptionName, String ruleName)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.ruleExists*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Checks whether a given rule exists or not for a given subscription.
  syntax:
    content: public Boolean ruleExists(String topicPath, String subscriptionName, String ruleName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- Path of the topic'
    - id: subscriptionName
      type: java.lang.String
      description: '- Name of the subscription.'
    - id: ruleName
      type: java.lang.String
      description: '- Name of the rule'
    return:
      type: java.lang.Boolean
      description: '- True if the entity exists. False otherwise.'
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- path is not null / empty / too long / invalid.'
  - type: java.lang.InterruptedException
    description: '- path is not null / empty / too long / invalid.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.subscriptionExists(java.lang.String,java.lang.String)
  id: subscriptionExists(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: subscriptionExists(String topicPath, String subscriptionName)
  nameWithType: ManagementClient.subscriptionExists(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.subscriptionExists(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.subscriptionExists*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Checks whether a given subscription exists or not.
  syntax:
    content: public Boolean subscriptionExists(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- Path of the topic'
    - id: subscriptionName
      type: java.lang.String
      description: '- Name of the subscription.'
    return:
      type: java.lang.Boolean
      description: '- True if the entity exists. False otherwise.'
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- path is not null / empty / too long / invalid.'
  - type: java.lang.InterruptedException
    description: '- path is not null / empty / too long / invalid.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.topicExists(java.lang.String)
  id: topicExists(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: topicExists(String path)
  nameWithType: ManagementClient.topicExists(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.topicExists(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.topicExists*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Checks whether a given topic exists or not.
  syntax:
    content: public Boolean topicExists(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- Path of the entity to check'
    return:
      type: java.lang.Boolean
      description: '- True if the entity exists. False otherwise.'
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- path is not null / empty / too long / invalid.'
  - type: java.lang.InterruptedException
    description: '- path is not null / empty / too long / invalid.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.updateQueue(com.microsoft.azure.servicebus.management.QueueDescription)
  id: updateQueue(com.microsoft.azure.servicebus.management.QueueDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: updateQueue(QueueDescription queueDescription)
  nameWithType: ManagementClient.updateQueue(QueueDescription queueDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.updateQueue(QueueDescription queueDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.updateQueue*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Updates an existing queue.
  syntax:
    content: public QueueDescription updateQueue(QueueDescription queueDescription)
    parameters:
    - id: queueDescription
      type: com.microsoft.azure.servicebus.management.QueueDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> object describing the attributes with which the queue will be updated.'
    return:
      type: com.microsoft.azure.servicebus.management.QueueDescription
      description: <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> of the updated queue.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Described entity was not found.'
  - type: java.lang.InterruptedException
    description: '- Described entity was not found.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.updateRule(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)
  id: updateRule(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: updateRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  nameWithType: ManagementClient.updateRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.updateRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.updateRule*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Updates an existing rule.
  syntax:
    content: public RuleDescription updateRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
    parameters:
    - id: topicName
      type: java.lang.String
      description: '- Name of the topic.'
    - id: subscriptionName
      type: java.lang.String
      description: '- Name of the subscription.'
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.rules.RuleDescription" data-throw-if-not-resolved="false">RuleDescription</xref> object describing the attributes with which the rule will be updated.'
    return:
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <xref uid="com.microsoft.azure.servicebus.rules.RuleDescription" data-throw-if-not-resolved="false">RuleDescription</xref> of the updated rule.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Described entity was not found.'
  - type: java.lang.InterruptedException
    description: '- Described entity was not found.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.updateSubscription(com.microsoft.azure.servicebus.management.SubscriptionDescription)
  id: updateSubscription(com.microsoft.azure.servicebus.management.SubscriptionDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: updateSubscription(SubscriptionDescription subscriptionDescription)
  nameWithType: ManagementClient.updateSubscription(SubscriptionDescription subscriptionDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.updateSubscription(SubscriptionDescription subscriptionDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.updateSubscription*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Updates an existing subscription.
  syntax:
    content: public SubscriptionDescription updateSubscription(SubscriptionDescription subscriptionDescription)
    parameters:
    - id: subscriptionDescription
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> object describing the attributes with which the subscription will be updated.'
    return:
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> of the updated subscription.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Described entity was not found.'
  - type: java.lang.InterruptedException
    description: '- Described entity was not found.'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.updateTopic(com.microsoft.azure.servicebus.management.TopicDescription)
  id: updateTopic(com.microsoft.azure.servicebus.management.TopicDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClient
  langs:
  - java
  name: updateTopic(TopicDescription topicDescription)
  nameWithType: ManagementClient.updateTopic(TopicDescription topicDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.updateTopic(TopicDescription topicDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClient.updateTopic*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Updates an existing topic.
  syntax:
    content: public TopicDescription updateTopic(TopicDescription topicDescription)
    parameters:
    - id: topicDescription
      type: com.microsoft.azure.servicebus.management.TopicDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false">TopicDescription</xref> object describing the attributes with which the topic will be updated.'
    return:
      type: com.microsoft.azure.servicebus.management.TopicDescription
      description: <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false">TopicDescription</xref> of the updated topic.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: '- Described entity was not found.'
  - type: java.lang.InterruptedException
    description: '- Described entity was not found.'
references:
- uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  name: ConnectionStringBuilder
  nameWithType: ConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
- uid: com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient*
  name: ManagementClient
  nameWithType: ManagementClient.ManagementClient
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient
  package: com.microsoft.azure.servicebus.management
- uid: java.net.URI
  spec.java:
  - uid: java.net.URI
    name: URI
    fullName: java.net.URI
- uid: com.microsoft.azure.servicebus.ClientSettings
  name: ClientSettings
  nameWithType: ClientSettings
  fullName: com.microsoft.azure.servicebus.ClientSettings
- uid: com.microsoft.azure.servicebus.primitives.ServiceBusException
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
- uid: java.lang.InterruptedException
  spec.java:
  - uid: java.lang.InterruptedException
    name: InterruptedException
    fullName: java.lang.InterruptedException
- uid: com.microsoft.azure.servicebus.management.NamespaceInfo
  name: NamespaceInfo
  nameWithType: NamespaceInfo
  fullName: com.microsoft.azure.servicebus.management.NamespaceInfo
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getNamespaceInfo*
  name: getNamespaceInfo
  nameWithType: ManagementClient.getNamespaceInfo
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getNamespaceInfo
  package: com.microsoft.azure.servicebus.management
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.servicebus.management.QueueDescription
  name: QueueDescription
  nameWithType: QueueDescription
  fullName: com.microsoft.azure.servicebus.management.QueueDescription
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getQueue*
  name: getQueue
  nameWithType: ManagementClient.getQueue
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getQueue
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueRuntimeInfo
  name: QueueRuntimeInfo
  nameWithType: QueueRuntimeInfo
  fullName: com.microsoft.azure.servicebus.management.QueueRuntimeInfo
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getQueueRuntimeInfo*
  name: getQueueRuntimeInfo
  nameWithType: ManagementClient.getQueueRuntimeInfo
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getQueueRuntimeInfo
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription
  name: TopicDescription
  nameWithType: TopicDescription
  fullName: com.microsoft.azure.servicebus.management.TopicDescription
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopic*
  name: getTopic
  nameWithType: ManagementClient.getTopic
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopic
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicRuntimeInfo
  name: TopicRuntimeInfo
  nameWithType: TopicRuntimeInfo
  fullName: com.microsoft.azure.servicebus.management.TopicRuntimeInfo
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopicRuntimeInfo*
  name: getTopicRuntimeInfo
  nameWithType: ManagementClient.getTopicRuntimeInfo
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopicRuntimeInfo
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription
  name: SubscriptionDescription
  nameWithType: SubscriptionDescription
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getSubscription*
  name: getSubscription
  nameWithType: ManagementClient.getSubscription
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getSubscription
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo
  name: SubscriptionRuntimeInfo
  nameWithType: SubscriptionRuntimeInfo
  fullName: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptionRuntimeInfo*
  name: getSubscriptionRuntimeInfo
  nameWithType: ManagementClient.getSubscriptionRuntimeInfo
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptionRuntimeInfo
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.rules.RuleDescription
  name: RuleDescription
  nameWithType: RuleDescription
  fullName: com.microsoft.azure.servicebus.rules.RuleDescription
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getRule*
  name: getRule
  nameWithType: ManagementClient.getRule
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getRule
  package: com.microsoft.azure.servicebus.management
- uid: java.util.List<com.microsoft.azure.servicebus.management.QueueDescription>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.QueueDescription
    name: QueueDescription
    fullName: com.microsoft.azure.servicebus.management.QueueDescription
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getQueues*
  name: getQueues
  nameWithType: ManagementClient.getQueues
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getQueues
  package: com.microsoft.azure.servicebus.management
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.util.List<com.microsoft.azure.servicebus.management.TopicDescription>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.TopicDescription
    name: TopicDescription
    fullName: com.microsoft.azure.servicebus.management.TopicDescription
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopics*
  name: getTopics
  nameWithType: ManagementClient.getTopics
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopics
  package: com.microsoft.azure.servicebus.management
- uid: java.util.List<com.microsoft.azure.servicebus.management.SubscriptionDescription>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.SubscriptionDescription
    name: SubscriptionDescription
    fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions*
  name: getSubscriptions
  nameWithType: ManagementClient.getSubscriptions
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions
  package: com.microsoft.azure.servicebus.management
- uid: java.util.List<com.microsoft.azure.servicebus.rules.RuleDescription>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.rules.RuleDescription
    name: RuleDescription
    fullName: com.microsoft.azure.servicebus.rules.RuleDescription
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClient.getRules*
  name: getRules
  nameWithType: ManagementClient.getRules
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.getRules
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.createQueue*
  name: createQueue
  nameWithType: ManagementClient.createQueue
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.createQueue
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.updateQueue*
  name: updateQueue
  nameWithType: ManagementClient.updateQueue
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.updateQueue
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.createTopic*
  name: createTopic
  nameWithType: ManagementClient.createTopic
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.createTopic
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.updateTopic*
  name: updateTopic
  nameWithType: ManagementClient.updateTopic
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.updateTopic
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription*
  name: createSubscription
  nameWithType: ManagementClient.createSubscription
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.updateSubscription*
  name: updateSubscription
  nameWithType: ManagementClient.updateSubscription
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.updateSubscription
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.createRule*
  name: createRule
  nameWithType: ManagementClient.createRule
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.createRule
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.updateRule*
  name: updateRule
  nameWithType: ManagementClient.updateRule
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.updateRule
  package: com.microsoft.azure.servicebus.management
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.microsoft.azure.servicebus.management.ManagementClient.queueExists*
  name: queueExists
  nameWithType: ManagementClient.queueExists
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.queueExists
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.topicExists*
  name: topicExists
  nameWithType: ManagementClient.topicExists
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.topicExists
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.subscriptionExists*
  name: subscriptionExists
  nameWithType: ManagementClient.subscriptionExists
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.subscriptionExists
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.ruleExists*
  name: ruleExists
  nameWithType: ManagementClient.ruleExists
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.ruleExists
  package: com.microsoft.azure.servicebus.management
- uid: java.lang.Void
  spec.java:
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
- uid: com.microsoft.azure.servicebus.management.ManagementClient.deleteQueue*
  name: deleteQueue
  nameWithType: ManagementClient.deleteQueue
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.deleteQueue
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.deleteTopic*
  name: deleteTopic
  nameWithType: ManagementClient.deleteTopic
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.deleteTopic
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.deleteSubscription*
  name: deleteSubscription
  nameWithType: ManagementClient.deleteSubscription
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.deleteSubscription
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClient.deleteRule*
  name: deleteRule
  nameWithType: ManagementClient.deleteRule
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.deleteRule
  package: com.microsoft.azure.servicebus.management
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.servicebus.management.ManagementClient.close*
  name: close
  nameWithType: ManagementClient.close
  fullName: com.microsoft.azure.servicebus.management.ManagementClient.close
  package: com.microsoft.azure.servicebus.management
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
