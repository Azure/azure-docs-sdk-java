### YamlMime:JavaType
uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate"
fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate"
name: "ElasticPoolUpdate"
nameWithType: "ElasticPoolUpdate"
summary: "An elastic pool update."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ElasticPoolUpdate"
constructors:
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.ElasticPoolUpdate()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.ElasticPoolUpdate()"
  name: "ElasticPoolUpdate()"
  nameWithType: "ElasticPoolUpdate.ElasticPoolUpdate()"
  syntax: "public ElasticPoolUpdate()"
methods:
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.licenseType()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.licenseType()"
  name: "licenseType()"
  nameWithType: "ElasticPoolUpdate.licenseType()"
  summary: "Get the licenseType property: The license type to apply for this elastic pool."
  syntax: "public ElasticPoolLicenseType licenseType()"
  returns:
    description: "the licenseType value."
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ElasticPoolLicenseType?alt=com.azure.resourcemanager.sql.models.ElasticPoolLicenseType&text=ElasticPoolLicenseType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.maxSizeBytes()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.maxSizeBytes()"
  name: "maxSizeBytes()"
  nameWithType: "ElasticPoolUpdate.maxSizeBytes()"
  summary: "Get the maxSizeBytes property: The storage limit for the database elastic pool in bytes."
  syntax: "public Long maxSizeBytes()"
  returns:
    description: "the maxSizeBytes value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.perDatabaseSettings()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.perDatabaseSettings()"
  name: "perDatabaseSettings()"
  nameWithType: "ElasticPoolUpdate.perDatabaseSettings()"
  summary: "Get the perDatabaseSettings property: The per database settings for the elastic pool."
  syntax: "public ElasticPoolPerDatabaseSettings perDatabaseSettings()"
  returns:
    description: "the perDatabaseSettings value."
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseSettings?alt=com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseSettings&text=ElasticPoolPerDatabaseSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.sku()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.sku()"
  name: "sku()"
  nameWithType: "ElasticPoolUpdate.sku()"
  summary: "Get the sku property: An ARM Resource SKU."
  syntax: "public Sku sku()"
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.sql.models.Sku?alt=com.azure.resourcemanager.sql.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.tags()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.tags()"
  name: "tags()"
  nameWithType: "ElasticPoolUpdate.tags()"
  summary: "Get the tags property: Resource tags."
  syntax: "public Map<String,String> tags()"
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.validate()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.validate()"
  name: "validate()"
  nameWithType: "ElasticPoolUpdate.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.withLicenseType(com.azure.resourcemanager.sql.models.ElasticPoolLicenseType)"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.withLicenseType(ElasticPoolLicenseType licenseType)"
  name: "withLicenseType(ElasticPoolLicenseType licenseType)"
  nameWithType: "ElasticPoolUpdate.withLicenseType(ElasticPoolLicenseType licenseType)"
  summary: "Set the licenseType property: The license type to apply for this elastic pool."
  parameters:
  - description: "the licenseType value to set."
    name: "licenseType"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ElasticPoolLicenseType?alt=com.azure.resourcemanager.sql.models.ElasticPoolLicenseType&text=ElasticPoolLicenseType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ElasticPoolUpdate withLicenseType(ElasticPoolLicenseType licenseType)"
  returns:
    description: "the ElasticPoolUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ElasticPoolUpdate?alt=com.azure.resourcemanager.sql.models.ElasticPoolUpdate&text=ElasticPoolUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.withMaxSizeBytes(java.lang.Long)"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.withMaxSizeBytes(Long maxSizeBytes)"
  name: "withMaxSizeBytes(Long maxSizeBytes)"
  nameWithType: "ElasticPoolUpdate.withMaxSizeBytes(Long maxSizeBytes)"
  summary: "Set the maxSizeBytes property: The storage limit for the database elastic pool in bytes."
  parameters:
  - description: "the maxSizeBytes value to set."
    name: "maxSizeBytes"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ElasticPoolUpdate withMaxSizeBytes(Long maxSizeBytes)"
  returns:
    description: "the ElasticPoolUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ElasticPoolUpdate?alt=com.azure.resourcemanager.sql.models.ElasticPoolUpdate&text=ElasticPoolUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.withPerDatabaseSettings(com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseSettings)"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.withPerDatabaseSettings(ElasticPoolPerDatabaseSettings perDatabaseSettings)"
  name: "withPerDatabaseSettings(ElasticPoolPerDatabaseSettings perDatabaseSettings)"
  nameWithType: "ElasticPoolUpdate.withPerDatabaseSettings(ElasticPoolPerDatabaseSettings perDatabaseSettings)"
  summary: "Set the perDatabaseSettings property: The per database settings for the elastic pool."
  parameters:
  - description: "the perDatabaseSettings value to set."
    name: "perDatabaseSettings"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseSettings?alt=com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseSettings&text=ElasticPoolPerDatabaseSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ElasticPoolUpdate withPerDatabaseSettings(ElasticPoolPerDatabaseSettings perDatabaseSettings)"
  returns:
    description: "the ElasticPoolUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ElasticPoolUpdate?alt=com.azure.resourcemanager.sql.models.ElasticPoolUpdate&text=ElasticPoolUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.withSku(com.azure.resourcemanager.sql.models.Sku)"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.withSku(Sku sku)"
  name: "withSku(Sku sku)"
  nameWithType: "ElasticPoolUpdate.withSku(Sku sku)"
  summary: "Set the sku property: An ARM Resource SKU."
  parameters:
  - description: "the sku value to set."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.Sku?alt=com.azure.resourcemanager.sql.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ElasticPoolUpdate withSku(Sku sku)"
  returns:
    description: "the ElasticPoolUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ElasticPoolUpdate?alt=com.azure.resourcemanager.sql.models.ElasticPoolUpdate&text=ElasticPoolUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "ElasticPoolUpdate.withTags(Map<String,String> tags)"
  summary: "Set the tags property: Resource tags."
  parameters:
  - description: "the tags value to set."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ElasticPoolUpdate withTags(Map<String,String> tags)"
  returns:
    description: "the ElasticPoolUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ElasticPoolUpdate?alt=com.azure.resourcemanager.sql.models.ElasticPoolUpdate&text=ElasticPoolUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.withZoneRedundant(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.withZoneRedundant(Boolean zoneRedundant)"
  name: "withZoneRedundant(Boolean zoneRedundant)"
  nameWithType: "ElasticPoolUpdate.withZoneRedundant(Boolean zoneRedundant)"
  summary: "Set the zoneRedundant property: Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones."
  parameters:
  - description: "the zoneRedundant value to set."
    name: "zoneRedundant"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ElasticPoolUpdate withZoneRedundant(Boolean zoneRedundant)"
  returns:
    description: "the ElasticPoolUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ElasticPoolUpdate?alt=com.azure.resourcemanager.sql.models.ElasticPoolUpdate&text=ElasticPoolUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.zoneRedundant()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolUpdate.zoneRedundant()"
  name: "zoneRedundant()"
  nameWithType: "ElasticPoolUpdate.zoneRedundant()"
  summary: "Get the zoneRedundant property: Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones."
  syntax: "public Boolean zoneRedundant()"
  returns:
    description: "the zoneRedundant value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.sql.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.14.0
