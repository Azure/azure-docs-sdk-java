### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
  id: PoolLifetimeOption
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.JOB
  - com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.JOB_SCHEDULE
  - com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.fromString(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.toString()
  - com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.valueOf(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.values()
  langs:
  - java
  name: PoolLifetimeOption
  nameWithType: PoolLifetimeOption
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
  type: Enum
  package: com.microsoft.azure.batch.protocol.models
  summary: Defines values for PoolLifetimeOption.
  syntax:
    content: public enum PoolLifetimeOption extends Enum<PoolLifetimeOption>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.JOB
  id: JOB
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
  langs:
  - java
  name: JOB
  nameWithType: PoolLifetimeOption.JOB
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.JOB
  type: Field
  package: com.microsoft.azure.batch.protocol.models
  summary: The Pool exists for the lifetime of the Job to which it is dedicated. The Batch service creates the Pool when it creates the Job. If the 'job' option is applied to a Job Schedule, the Batch service creates a new auto Pool for every Job created on the schedule.
  syntax:
    content: public static final PoolLifetimeOption JOB
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.JOB_SCHEDULE
  id: JOB_SCHEDULE
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
  langs:
  - java
  name: JOB_SCHEDULE
  nameWithType: PoolLifetimeOption.JOB_SCHEDULE
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.JOB_SCHEDULE
  type: Field
  package: com.microsoft.azure.batch.protocol.models
  summary: The Pool exists for the lifetime of the Job Schedule. The Batch Service creates the Pool when it creates the first Job on the schedule. You may apply this option only to Job Schedules, not to Jobs.
  syntax:
    content: public static final PoolLifetimeOption JOB_SCHEDULE
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.PoolLifetimeOption(java.lang.String)
  id: PoolLifetimeOption(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
  langs:
  - java
  name: PoolLifetimeOption(String value)
  nameWithType: PoolLifetimeOption.PoolLifetimeOption(String value)
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.PoolLifetimeOption(String value)
  overload: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.PoolLifetimeOption*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: private PoolLifetimeOption(String value)
    parameters:
    - id: value
      type: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.fromString(java.lang.String)
  id: fromString(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
  langs:
  - java
  name: fromString(String value)
  nameWithType: PoolLifetimeOption.fromString(String value)
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.fromString(String value)
  overload: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.fromString*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Parses a serialized value to a PoolLifetimeOption instance.
  syntax:
    content: public static PoolLifetimeOption fromString(String value)
    parameters:
    - id: value
      type: java.lang.String
      description: the serialized value to parse.
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
      description: the parsed PoolLifetimeOption object, or null if unable to parse.
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.toString()
  id: toString()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
  langs:
  - java
  name: toString()
  nameWithType: PoolLifetimeOption.toString()
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.toString()
  overload: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.toString*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
  langs:
  - java
  name: valueOf(String name)
  nameWithType: PoolLifetimeOption.valueOf(String name)
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.valueOf(String name)
  overload: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.valueOf*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public static PoolLifetimeOption valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.values()
  id: values()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
  langs:
  - java
  name: values()
  nameWithType: PoolLifetimeOption.values()
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.values()
  overload: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.values*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public static PoolLifetimeOption[] values()
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption[]
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.PoolLifetimeOption*
  name: PoolLifetimeOption
  nameWithType: PoolLifetimeOption.PoolLifetimeOption
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.PoolLifetimeOption
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption[]
  spec.java:
  - uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
    name: PoolLifetimeOption
    fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.values*
  name: values
  nameWithType: PoolLifetimeOption.values
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.values
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.valueOf*
  name: valueOf
  nameWithType: PoolLifetimeOption.valueOf
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.valueOf
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.fromString*
  name: fromString
  nameWithType: PoolLifetimeOption.fromString
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.fromString
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.toString*
  name: toString
  nameWithType: PoolLifetimeOption.toString
  fullName: com.microsoft.azure.batch.protocol.models.PoolLifetimeOption.toString
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Enum<com.microsoft.azure.batch.protocol.models.PoolLifetimeOption>
  name: Enum<PoolLifetimeOption>
  nameWithType: Enum<PoolLifetimeOption>
  fullName: java.lang.Enum<com.microsoft.azure.batch.protocol.models.PoolLifetimeOption>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
