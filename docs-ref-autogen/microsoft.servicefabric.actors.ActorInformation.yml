### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.actors.ActorInformation.ActorInformation(ActorId actorId, boolean isactive)
  name: ActorInformation(ActorId actorId, boolean isactive)
  nameWithType: ActorInformation.ActorInformation(ActorId actorId, boolean isactive)
  parameters:
  - description: <p>ActorId of actor. </p>
    name: actorId
    type: <xref href="microsoft.servicefabric.actors.ActorId?alt=microsoft.servicefabric.actors.ActorId&text=ActorId" data-throw-if-not-resolved="False"/>
  - description: <p>Value indicating if the Actor is active or inactive. </p>
    name: isactive
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the ActorInformation class.</p>

    <p></p>
  syntax: public ActorInformation(ActorId actorId, boolean isactive)
  uid: microsoft.servicefabric.actors.ActorInformation.ActorInformation(ActorId,boolean)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Serializable" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.actors.ActorInformation.getActorId()
  name: getActorId()
  nameWithType: ActorInformation.getActorId()
  returns:
    description: >-
      <p>

        <xref uid="microsoft.servicefabric.actors.ActorId" data-throw-if-not-resolved="false" data-raw-source="for the actor. "></xref>

      </p>
    type: <xref href="microsoft.servicefabric.actors.ActorId?alt=microsoft.servicefabric.actors.ActorId&text=ActorId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets ActorId for the ACtor.</p>

    <p></p>
  syntax: public ActorId getActorId()
  uid: microsoft.servicefabric.actors.ActorInformation.getActorId()
- fullName: microsoft.servicefabric.actors.ActorInformation.isActive()
  name: isActive()
  nameWithType: ActorInformation.isActive()
  returns:
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.lang.Boolean"></xref> indicating if the Actor is active. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets if the actor is active.</p>

    <p></p>
  syntax: public boolean isActive()
  uid: microsoft.servicefabric.actors.ActorInformation.isActive()
nameWithType: ActorInformation
syntax: public class ActorInformation
type: class
uid: microsoft.servicefabric.actors.ActorInformation
fullName: microsoft.servicefabric.actors.ActorInformation
name: ActorInformation
package: microsoft.servicefabric.actors
summary: <p>Represents the information about an actor returned by Actor Query method call. </p>
metadata: {}
