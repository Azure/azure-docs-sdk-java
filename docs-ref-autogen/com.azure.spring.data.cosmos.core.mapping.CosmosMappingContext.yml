### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.core.mapping.CosmosMappingContext"
fullName: "com.azure.spring.data.cosmos.core.mapping.CosmosMappingContext"
name: "CosmosMappingContext"
nameWithType: "CosmosMappingContext"
summary: "Class to build mapping metadata and thus create instances of <xref uid=\"com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BasicCosmosPersistentEntity\"></xref> and <xref uid=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPersistentProperty\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
- classRef: "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext?alt=org.springframework.data.mapping.context.AbstractMappingContext&text=AbstractMappingContext\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.<T>createPersistentEntity(org.springframework.data.util.TypeInformation<T>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.<T>createPersistentEntity&text=<T>createPersistentEntity\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.<T>doFindPersistentPropertyPaths(java.lang.Class<T>,java.util.function.Predicate<? super P>,java.util.function.Predicate<P>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.<T>doFindPersistentPropertyPaths&text=<T>doFindPersistentPropertyPaths\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.<T>findPersistentPropertyPaths(java.lang.Class<T>,java.util.function.Predicate<? super P>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.<T>findPersistentPropertyPaths&text=<T>findPersistentPropertyPaths\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.addPersistentEntity(java.lang.Class<?>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.addPersistentEntity&text=addPersistentEntity\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.addPersistentEntity(org.springframework.data.util.TypeInformation<?>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.addPersistentEntity&text=addPersistentEntity\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.afterPropertiesSet()?alt=org.springframework.data.mapping.context.AbstractMappingContext.afterPropertiesSet&text=afterPropertiesSet\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.createPersistentProperty(org.springframework.data.mapping.model.Property,E,org.springframework.data.mapping.model.SimpleTypeHolder)?alt=org.springframework.data.mapping.context.AbstractMappingContext.createPersistentProperty&text=createPersistentProperty\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.getManagedTypes()?alt=org.springframework.data.mapping.context.AbstractMappingContext.getManagedTypes&text=getManagedTypes\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntities()?alt=org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntities&text=getPersistentEntities\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity(P)?alt=org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity&text=getPersistentEntity\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity(java.lang.Class<?>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity&text=getPersistentEntity\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity(org.springframework.data.util.TypeInformation<?>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity&text=getPersistentEntity\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.getPersistentPropertyPath(java.lang.String,java.lang.Class<?>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.getPersistentPropertyPath&text=getPersistentPropertyPath\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.getPersistentPropertyPath(java.lang.String,org.springframework.data.util.TypeInformation<?>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.getPersistentPropertyPath&text=getPersistentPropertyPath\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.getPersistentPropertyPath(org.springframework.data.mapping.PropertyPath)?alt=org.springframework.data.mapping.context.AbstractMappingContext.getPersistentPropertyPath&text=getPersistentPropertyPath\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.hasPersistentEntityFor(java.lang.Class<?>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.hasPersistentEntityFor&text=hasPersistentEntityFor\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.initialize()?alt=org.springframework.data.mapping.context.AbstractMappingContext.initialize&text=initialize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.setApplicationContext(org.springframework.context.ApplicationContext)?alt=org.springframework.data.mapping.context.AbstractMappingContext.setApplicationContext&text=setApplicationContext\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)?alt=org.springframework.data.mapping.context.AbstractMappingContext.setApplicationEventPublisher&text=setApplicationEventPublisher\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.setBeanFactory(org.springframework.beans.factory.BeanFactory)?alt=org.springframework.data.mapping.context.AbstractMappingContext.setBeanFactory&text=setBeanFactory\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.setEnvironment(org.springframework.core.env.Environment)?alt=org.springframework.data.mapping.context.AbstractMappingContext.setEnvironment&text=setEnvironment\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.setInitialEntitySet(java.util.Set<? extends java.lang.Class<?>>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.setInitialEntitySet&text=setInitialEntitySet\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.setManagedTypes(org.springframework.data.domain.ManagedTypes)?alt=org.springframework.data.mapping.context.AbstractMappingContext.setManagedTypes&text=setManagedTypes\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.setSimpleTypeHolder(org.springframework.data.mapping.model.SimpleTypeHolder)?alt=org.springframework.data.mapping.context.AbstractMappingContext.setSimpleTypeHolder&text=setSimpleTypeHolder\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.setStrict(boolean)?alt=org.springframework.data.mapping.context.AbstractMappingContext.setStrict&text=setStrict\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.shouldCreatePersistentEntityFor(org.springframework.data.util.TypeInformation<?>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.shouldCreatePersistentEntityFor&text=shouldCreatePersistentEntityFor\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.context.AbstractMappingContext.shouldCreateProperties(org.springframework.data.util.TypeInformation<?>)?alt=org.springframework.data.mapping.context.AbstractMappingContext.shouldCreateProperties&text=shouldCreateProperties\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **CosmosMappingContext**</br> extends <xref href=\"org.springframework.data.mapping.context.AbstractMappingContext?alt=org.springframework.data.mapping.context.AbstractMappingContext&text=AbstractMappingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity?alt=com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity&text=BasicCosmosPersistentEntity\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;,<xref href=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty?alt=com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty&text=CosmosPersistentProperty\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.spring.data.cosmos.core.mapping.CosmosMappingContext.CosmosMappingContext()"
  fullName: "com.azure.spring.data.cosmos.core.mapping.CosmosMappingContext.CosmosMappingContext()"
  name: "CosmosMappingContext()"
  nameWithType: "CosmosMappingContext.CosmosMappingContext()"
  summary: "Construct a <xref uid=\"com.azure.spring.data.cosmos.core.mapping.CosmosMappingContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosMappingContext\"></xref> instance, with the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosSimpleTypes\"></xref> as simple type holder."
  syntax: "public CosmosMappingContext()"
  desc: "Construct a <xref uid=\"com.azure.spring.data.cosmos.core.mapping.CosmosMappingContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosMappingContext\"></xref> instance, with the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosSimpleTypes\"></xref> as simple type holder."
methods:
- uid: "com.azure.spring.data.cosmos.core.mapping.CosmosMappingContext.<T>createPersistentEntity(org.springframework.data.util.TypeInformation<T>)"
  fullName: "com.azure.spring.data.cosmos.core.mapping.CosmosMappingContext.createPersistentEntity(TypeInformation<T> typeInformation)"
  name: "createPersistentEntity(TypeInformation<T> typeInformation)"
  nameWithType: "CosmosMappingContext.createPersistentEntity(TypeInformation<T> typeInformation)"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.mapping.context.AbstractMappingContext.<T>createPersistentEntity(org.springframework.data.util.TypeInformation<T>)"
  parameters:
  - name: "typeInformation"
    type: "<xref href=\"org.springframework.data.util.TypeInformation?alt=org.springframework.data.util.TypeInformation&text=TypeInformation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected BasicCosmosPersistentEntity<T> <T>createPersistentEntity(TypeInformation<T> typeInformation)"
  returns:
    type: "<xref href=\"com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity?alt=com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity&text=BasicCosmosPersistentEntity\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.mapping.CosmosMappingContext.createPersistentProperty(org.springframework.data.mapping.model.Property,com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity<?>,org.springframework.data.mapping.model.SimpleTypeHolder)"
  fullName: "com.azure.spring.data.cosmos.core.mapping.CosmosMappingContext.createPersistentProperty(Property property, BasicCosmosPersistentEntity<?> owner, SimpleTypeHolder simpleTypeHolder)"
  name: "createPersistentProperty(Property property, BasicCosmosPersistentEntity<?> owner, SimpleTypeHolder simpleTypeHolder)"
  nameWithType: "CosmosMappingContext.createPersistentProperty(Property property, BasicCosmosPersistentEntity<?> owner, SimpleTypeHolder simpleTypeHolder)"
  overridden: "org.springframework.data.mapping.context.AbstractMappingContext.createPersistentProperty(org.springframework.data.mapping.model.Property,E,org.springframework.data.mapping.model.SimpleTypeHolder)"
  parameters:
  - name: "property"
    type: "<xref href=\"org.springframework.data.mapping.model.Property?alt=org.springframework.data.mapping.model.Property&text=Property\" data-throw-if-not-resolved=\"False\" />"
  - name: "owner"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity?alt=com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity&text=BasicCosmosPersistentEntity\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "simpleTypeHolder"
    type: "<xref href=\"org.springframework.data.mapping.model.SimpleTypeHolder?alt=org.springframework.data.mapping.model.SimpleTypeHolder&text=SimpleTypeHolder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosPersistentProperty createPersistentProperty(Property property, BasicCosmosPersistentEntity<?> owner, SimpleTypeHolder simpleTypeHolder)"
  returns:
    type: "<xref href=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty?alt=com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty&text=CosmosPersistentProperty\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.mapping.CosmosMappingContext.setApplicationContext(org.springframework.context.ApplicationContext)"
  fullName: "com.azure.spring.data.cosmos.core.mapping.CosmosMappingContext.setApplicationContext(ApplicationContext applicationContext)"
  name: "setApplicationContext(ApplicationContext applicationContext)"
  nameWithType: "CosmosMappingContext.setApplicationContext(ApplicationContext applicationContext)"
  overridden: "org.springframework.data.mapping.context.AbstractMappingContext.setApplicationContext(org.springframework.context.ApplicationContext)"
  parameters:
  - name: "applicationContext"
    type: "<xref href=\"org.springframework.context.ApplicationContext?alt=org.springframework.context.ApplicationContext&text=ApplicationContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setApplicationContext(ApplicationContext applicationContext)"
type: "class"
desc: "Class to build mapping metadata and thus create instances of <xref uid=\"com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BasicCosmosPersistentEntity\"></xref> and <xref uid=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPersistentProperty\"></xref>."
metadata: {}
package: "com.azure.spring.data.cosmos.core.mapping"
artifact: com.azure:azure-spring-data-cosmos:5.21.0
