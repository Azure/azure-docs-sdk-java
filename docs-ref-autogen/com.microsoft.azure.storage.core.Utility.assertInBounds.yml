### YamlMime:JavaMember
nameWithType: Utility.assertInBounds
type: method
members:
- fullName: com.microsoft.azure.storage.core.Utility.assertInBounds(final String param, final long value, final long min, final long max)
  name: assertInBounds(final String param, final long value, final long min, final long max)
  nameWithType: Utility.assertInBounds(final String param, final long value, final long min, final long max)
  parameters:
  - description: <p>A <code>String</code> that represents the name of the parameter, which becomes the exception message text if the <code>value</code> parameter is out of bounds. </p>
    name: param
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The value of the specified parameter. </p>
    name: value
    type: <xref href="final+long?alt=final long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>The minimum value for the specified parameter. </p>
    name: min
    type: <xref href="final+long?alt=final long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum value for the specified parameter. </p>
    name: max
    type: <xref href="final+long?alt=final long&text=final+long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asserts that the specified integer is in the valid range.</p>

    <p></p>
  syntax: public static void assertInBounds(final String param, final long value, final long min, final long max)
  uid: com.microsoft.azure.storage.core.Utility.assertInBounds(final String,final long,final long,final long)
uid: com.microsoft.azure.storage.core.Utility.assertInBounds*
fullName: com.microsoft.azure.storage.core.Utility.assertInBounds(final String param, final long value, final long min, final long max)
name: assertInBounds(final String param, final long value, final long min, final long max)
package: com.microsoft.azure.storage.core
metadata: {}
