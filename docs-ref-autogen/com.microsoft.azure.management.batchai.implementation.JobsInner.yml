### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.JobsInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  name: JobsInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  nameWithType: JobsInner.JobsInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.batchai.implementation.BatchAIManagementClientImpl?alt=com.microsoft.azure.management.batchai.implementation.BatchAIManagementClientImpl&text=BatchAIManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of JobsInner.</p>

    <p></p>
  syntax: public JobsInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.JobsInner(Retrofit,BatchAIManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.beginCreate(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  name: beginCreate(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  nameWithType: JobsInner.beginCreate(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for job creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.JobCreateParameters?alt=com.microsoft.azure.management.batchai.JobCreateParameters&text=JobCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the JobInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a Job in the given Experiment.</p>

    <p></p>
  syntax: public JobInner beginCreate(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.beginCreate(String,String,String,String,JobCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  name: beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  nameWithType: JobsInner.beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for job creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.JobCreateParameters?alt=com.microsoft.azure.management.batchai.JobCreateParameters&text=JobCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the JobInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a Job in the given Experiment.</p>

    <p></p>
  syntax: public Observable<JobInner> beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.beginCreateAsync(String,String,String,String,JobCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters, final ServiceCallback<JobInner> serviceCallback)
  name: beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters, final ServiceCallback<JobInner> serviceCallback)
  nameWithType: JobsInner.beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters, final ServiceCallback<JobInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for job creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.JobCreateParameters?alt=com.microsoft.azure.management.batchai.JobCreateParameters&text=JobCreateParameters" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a Job in the given Experiment.</p>

    <p></p>
  syntax: public ServiceFuture<JobInner> beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters, final ServiceCallback<JobInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.beginCreateAsync(String,String,String,String,JobCreateParameters,final ServiceCallback<JobInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  name: beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  nameWithType: JobsInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for job creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.JobCreateParameters?alt=com.microsoft.azure.management.batchai.JobCreateParameters&text=JobCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the JobInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a Job in the given Experiment.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<JobInner>> beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.beginCreateWithServiceResponseAsync(String,String,String,String,JobCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.beginDelete(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: beginDelete(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.beginDelete(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a Job.</p>

    <p></p>
  syntax: public void beginDelete(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.beginDelete(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Job.</p>

    <p></p>
  syntax: public Observable<Void> beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.beginDeleteAsync(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  name: beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsInner.beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Job.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.beginDeleteAsync(String,String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Job.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.beginDeleteWithServiceResponseAsync(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.beginTerminate(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: beginTerminate(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.beginTerminate(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Terminates a job.</p>

    <p></p>
  syntax: public void beginTerminate(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.beginTerminate(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.beginTerminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: beginTerminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.beginTerminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Terminates a job.</p>

    <p></p>
  syntax: public Observable<Void> beginTerminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.beginTerminateAsync(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.beginTerminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  name: beginTerminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsInner.beginTerminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Terminates a job.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginTerminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.beginTerminateAsync(String,String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.beginTerminateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: beginTerminateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.beginTerminateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Terminates a job.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginTerminateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.beginTerminateWithServiceResponseAsync(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.create(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  name: create(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  nameWithType: JobsInner.create(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for job creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.JobCreateParameters?alt=com.microsoft.azure.management.batchai.JobCreateParameters&text=JobCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the JobInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a Job in the given Experiment.</p>

    <p></p>
  syntax: public JobInner create(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.create(String,String,String,String,JobCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.createAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  name: createAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  nameWithType: JobsInner.createAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for job creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.JobCreateParameters?alt=com.microsoft.azure.management.batchai.JobCreateParameters&text=JobCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a Job in the given Experiment.</p>

    <p></p>
  syntax: public Observable<JobInner> createAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.createAsync(String,String,String,String,JobCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.createAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters, final ServiceCallback<JobInner> serviceCallback)
  name: createAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters, final ServiceCallback<JobInner> serviceCallback)
  nameWithType: JobsInner.createAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters, final ServiceCallback<JobInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for job creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.JobCreateParameters?alt=com.microsoft.azure.management.batchai.JobCreateParameters&text=JobCreateParameters" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a Job in the given Experiment.</p>

    <p></p>
  syntax: public ServiceFuture<JobInner> createAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters, final ServiceCallback<JobInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.createAsync(String,String,String,String,JobCreateParameters,final ServiceCallback<JobInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.createWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  name: createWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  nameWithType: JobsInner.createWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for job creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.JobCreateParameters?alt=com.microsoft.azure.management.batchai.JobCreateParameters&text=JobCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a Job in the given Experiment.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<JobInner>> createWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, JobCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.createWithServiceResponseAsync(String,String,String,String,JobCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.delete(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: delete(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.delete(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a Job.</p>

    <p></p>
  syntax: public void delete(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.delete(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.deleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: deleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.deleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Job.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.deleteAsync(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.deleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsInner.deleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Job.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.deleteAsync(String,String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Job.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.deleteWithServiceResponseAsync(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.get(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: get(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.get(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the JobInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information about a Job.</p>

    <p></p>
  syntax: public JobInner get(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.get(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: getAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the JobInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about a Job.</p>

    <p></p>
  syntax: public Observable<JobInner> getAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.getAsync(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<JobInner> serviceCallback)
  name: getAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<JobInner> serviceCallback)
  nameWithType: JobsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<JobInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about a Job.</p>

    <p></p>
  syntax: public ServiceFuture<JobInner> getAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<JobInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.getAsync(String,String,String,String,final ServiceCallback<JobInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the JobInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about a Job.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<JobInner>> getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.getWithServiceResponseAsync(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperiment(final String resourceGroupName, final String workspaceName, final String experimentName)
  name: listByExperiment(final String resourceGroupName, final String workspaceName, final String experimentName)
  nameWithType: JobsInner.listByExperiment(final String resourceGroupName, final String workspaceName, final String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;JobInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public PagedList<JobInner> listByExperiment(final String resourceGroupName, final String workspaceName, final String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperiment(final String,final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperiment(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  name: listByExperiment(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  nameWithType: JobsInner.listByExperiment(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobsListByExperimentOptions
    type: final <xref href="com.microsoft.azure.management.batchai.JobsListByExperimentOptions?alt=com.microsoft.azure.management.batchai.JobsListByExperimentOptions&text=JobsListByExperimentOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;JobInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public PagedList<JobInner> listByExperiment(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperiment(final String,final String,final String,final JobsListByExperimentOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName)
  name: listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName)
  nameWithType: JobsInner.listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;JobInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public Observable<Page<JobInner>> listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentAsync(final String,final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  name: listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  nameWithType: JobsInner.listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobsListByExperimentOptions
    type: final <xref href="com.microsoft.azure.management.batchai.JobsListByExperimentOptions?alt=com.microsoft.azure.management.batchai.JobsListByExperimentOptions&text=JobsListByExperimentOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;JobInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public Observable<Page<JobInner>> listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentAsync(final String,final String,final String,final JobsListByExperimentOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions, final ListOperationCallback<JobInner> serviceCallback)
  name: listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions, final ListOperationCallback<JobInner> serviceCallback)
  nameWithType: JobsInner.listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions, final ListOperationCallback<JobInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobsListByExperimentOptions
    type: final <xref href="com.microsoft.azure.management.batchai.JobsListByExperimentOptions?alt=com.microsoft.azure.management.batchai.JobsListByExperimentOptions&text=JobsListByExperimentOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public ServiceFuture<List<JobInner>> listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions, final ListOperationCallback<JobInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentAsync(final String,final String,final String,final JobsListByExperimentOptions,final ListOperationCallback<JobInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final ListOperationCallback<JobInner> serviceCallback)
  name: listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final ListOperationCallback<JobInner> serviceCallback)
  nameWithType: JobsInner.listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final ListOperationCallback<JobInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public ServiceFuture<List<JobInner>> listByExperimentAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final ListOperationCallback<JobInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentAsync(final String,final String,final String,final ListOperationCallback<JobInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentNext(final String nextPageLink)
  name: listByExperimentNext(final String nextPageLink)
  nameWithType: JobsInner.listByExperimentNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;JobInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public PagedList<JobInner> listByExperimentNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentNext(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentNextAsync(final String nextPageLink)
  name: listByExperimentNextAsync(final String nextPageLink)
  nameWithType: JobsInner.listByExperimentNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;JobInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public Observable<Page<JobInner>> listByExperimentNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentNextAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentNextAsync(final String nextPageLink, final ServiceFuture<List<JobInner>> serviceFuture, final ListOperationCallback<JobInner> serviceCallback)
  name: listByExperimentNextAsync(final String nextPageLink, final ServiceFuture<List<JobInner>> serviceFuture, final ListOperationCallback<JobInner> serviceCallback)
  nameWithType: JobsInner.listByExperimentNextAsync(final String nextPageLink, final ServiceFuture<List<JobInner>> serviceFuture, final ListOperationCallback<JobInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public ServiceFuture<List<JobInner>> listByExperimentNextAsync(final String nextPageLink, final ServiceFuture<List<JobInner>> serviceFuture, final ListOperationCallback<JobInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentNextAsync(final String,final ServiceFuture<List<JobInner>>,final ListOperationCallback<JobInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentNextSinglePageAsync(final String nextPageLink)
  name: listByExperimentNextSinglePageAsync(final String nextPageLink)
  nameWithType: JobsInner.listByExperimentNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;JobInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p>ServiceResponse&lt;PageImpl&lt;JobInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<JobInner>>> listByExperimentNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentNextWithServiceResponseAsync(final String nextPageLink)
  name: listByExperimentNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: JobsInner.listByExperimentNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;JobInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<JobInner>>> listByExperimentNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName)
  name: listByExperimentSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName)
  nameWithType: JobsInner.listByExperimentSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;JobInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<JobInner>>> listByExperimentSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentSinglePageAsync(final String,final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  name: listByExperimentSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  nameWithType: JobsInner.listByExperimentSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. ServiceResponse&lt;PageImpl&lt;JobInner&gt;&gt; * </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. ServiceResponse&lt;PageImpl&lt;JobInner&gt;&gt; * </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. ServiceResponse&lt;PageImpl&lt;JobInner&gt;&gt; * </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobsListByExperimentOptions
    type: final <xref href="com.microsoft.azure.management.batchai.JobsListByExperimentOptions?alt=com.microsoft.azure.management.batchai.JobsListByExperimentOptions&text=JobsListByExperimentOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;JobInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p>ServiceResponse&lt;PageImpl&lt;JobInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<JobInner>>> listByExperimentSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentSinglePageAsync(final String,final String,final String,final JobsListByExperimentOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName)
  name: listByExperimentWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName)
  nameWithType: JobsInner.listByExperimentWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;JobInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<JobInner>>> listByExperimentWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentWithServiceResponseAsync(final String,final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  name: listByExperimentWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  nameWithType: JobsInner.listByExperimentWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobsListByExperimentOptions
    type: final <xref href="com.microsoft.azure.management.batchai.JobsListByExperimentOptions?alt=com.microsoft.azure.management.batchai.JobsListByExperimentOptions&text=JobsListByExperimentOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;JobInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Jobs within the specified Experiment.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<JobInner>>> listByExperimentWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final JobsListByExperimentOptions jobsListByExperimentOptions)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listByExperimentWithServiceResponseAsync(final String,final String,final String,final JobsListByExperimentOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFiles(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  name: listOutputFiles(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  nameWithType: JobsInner.listOutputFiles(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobsListOutputFilesOptions
    type: final <xref href="com.microsoft.azure.management.batchai.JobsListOutputFilesOptions?alt=com.microsoft.azure.management.batchai.JobsListOutputFilesOptions&text=JobsListOutputFilesOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;FileInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>List all directories and files inside the given directory of the Job's output directory (if the output directory is on Azure File Share or Azure Storage Container).</p>

    <p></p>
  syntax: public PagedList<FileInner> listOutputFiles(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFiles(final String,final String,final String,final String,final JobsListOutputFilesOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  name: listOutputFilesAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  nameWithType: JobsInner.listOutputFilesAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobsListOutputFilesOptions
    type: final <xref href="com.microsoft.azure.management.batchai.JobsListOutputFilesOptions?alt=com.microsoft.azure.management.batchai.JobsListOutputFilesOptions&text=JobsListOutputFilesOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;FileInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>List all directories and files inside the given directory of the Job's output directory (if the output directory is on Azure File Share or Azure Storage Container).</p>

    <p></p>
  syntax: public Observable<Page<FileInner>> listOutputFilesAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesAsync(final String,final String,final String,final String,final JobsListOutputFilesOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions, final ListOperationCallback<FileInner> serviceCallback)
  name: listOutputFilesAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions, final ListOperationCallback<FileInner> serviceCallback)
  nameWithType: JobsInner.listOutputFilesAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions, final ListOperationCallback<FileInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobsListOutputFilesOptions
    type: final <xref href="com.microsoft.azure.management.batchai.JobsListOutputFilesOptions?alt=com.microsoft.azure.management.batchai.JobsListOutputFilesOptions&text=JobsListOutputFilesOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>List all directories and files inside the given directory of the Job's output directory (if the output directory is on Azure File Share or Azure Storage Container).</p>

    <p></p>
  syntax: public ServiceFuture<List<FileInner>> listOutputFilesAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions, final ListOperationCallback<FileInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesAsync(final String,final String,final String,final String,final JobsListOutputFilesOptions,final ListOperationCallback<FileInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesNext(final String nextPageLink)
  name: listOutputFilesNext(final String nextPageLink)
  nameWithType: JobsInner.listOutputFilesNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;FileInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>List all directories and files inside the given directory of the Job's output directory (if the output directory is on Azure File Share or Azure Storage Container).</p>

    <p></p>
  syntax: public PagedList<FileInner> listOutputFilesNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesNext(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesNextAsync(final String nextPageLink)
  name: listOutputFilesNextAsync(final String nextPageLink)
  nameWithType: JobsInner.listOutputFilesNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;FileInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>List all directories and files inside the given directory of the Job's output directory (if the output directory is on Azure File Share or Azure Storage Container).</p>

    <p></p>
  syntax: public Observable<Page<FileInner>> listOutputFilesNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesNextAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesNextAsync(final String nextPageLink, final ServiceFuture<List<FileInner>> serviceFuture, final ListOperationCallback<FileInner> serviceCallback)
  name: listOutputFilesNextAsync(final String nextPageLink, final ServiceFuture<List<FileInner>> serviceFuture, final ListOperationCallback<FileInner> serviceCallback)
  nameWithType: JobsInner.listOutputFilesNextAsync(final String nextPageLink, final ServiceFuture<List<FileInner>> serviceFuture, final ListOperationCallback<FileInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>List all directories and files inside the given directory of the Job's output directory (if the output directory is on Azure File Share or Azure Storage Container).</p>

    <p></p>
  syntax: public ServiceFuture<List<FileInner>> listOutputFilesNextAsync(final String nextPageLink, final ServiceFuture<List<FileInner>> serviceFuture, final ListOperationCallback<FileInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesNextAsync(final String,final ServiceFuture<List<FileInner>>,final ListOperationCallback<FileInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesNextSinglePageAsync(final String nextPageLink)
  name: listOutputFilesNextSinglePageAsync(final String nextPageLink)
  nameWithType: JobsInner.listOutputFilesNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;FileInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>List all directories and files inside the given directory of the Job's output directory (if the output directory is on Azure File Share or Azure Storage Container).</p>

    <p>ServiceResponse&lt;PageImpl&lt;FileInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<FileInner>>> listOutputFilesNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesNextWithServiceResponseAsync(final String nextPageLink)
  name: listOutputFilesNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: JobsInner.listOutputFilesNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;FileInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>List all directories and files inside the given directory of the Job's output directory (if the output directory is on Azure File Share or Azure Storage Container).</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<FileInner>>> listOutputFilesNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  name: listOutputFilesSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  nameWithType: JobsInner.listOutputFilesSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. ServiceResponse&lt;PageImpl&lt;FileInner&gt;&gt; * </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. ServiceResponse&lt;PageImpl&lt;FileInner&gt;&gt; * </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. ServiceResponse&lt;PageImpl&lt;FileInner&gt;&gt; * </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. ServiceResponse&lt;PageImpl&lt;FileInner&gt;&gt; * </p>
    name: jobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobsListOutputFilesOptions
    type: final <xref href="com.microsoft.azure.management.batchai.JobsListOutputFilesOptions?alt=com.microsoft.azure.management.batchai.JobsListOutputFilesOptions&text=JobsListOutputFilesOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;FileInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>List all directories and files inside the given directory of the Job's output directory (if the output directory is on Azure File Share or Azure Storage Container).</p>

    <p>ServiceResponse&lt;PageImpl&lt;FileInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<FileInner>>> listOutputFilesSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesSinglePageAsync(final String,final String,final String,final String,final JobsListOutputFilesOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  name: listOutputFilesWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  nameWithType: JobsInner.listOutputFilesWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobsListOutputFilesOptions
    type: final <xref href="com.microsoft.azure.management.batchai.JobsListOutputFilesOptions?alt=com.microsoft.azure.management.batchai.JobsListOutputFilesOptions&text=JobsListOutputFilesOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;FileInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileInner?alt=com.microsoft.azure.management.batchai.implementation.FileInner&text=FileInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>List all directories and files inside the given directory of the Job's output directory (if the output directory is on Azure File Share or Azure Storage Container).</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<FileInner>>> listOutputFilesWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final JobsListOutputFilesOptions jobsListOutputFilesOptions)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listOutputFilesWithServiceResponseAsync(final String,final String,final String,final String,final JobsListOutputFilesOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformation(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  name: listRemoteLoginInformation(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  nameWithType: JobsInner.listRemoteLoginInformation(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;RemoteLoginInformationInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of currently existing nodes which were used for the Job execution. The returned information contains the node ID, its public IP and SSH port.</p>

    <p></p>
  syntax: public PagedList<RemoteLoginInformationInner> listRemoteLoginInformation(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformation(final String,final String,final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  name: listRemoteLoginInformationAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  nameWithType: JobsInner.listRemoteLoginInformationAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;RemoteLoginInformationInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of currently existing nodes which were used for the Job execution. The returned information contains the node ID, its public IP and SSH port.</p>

    <p></p>
  syntax: public Observable<Page<RemoteLoginInformationInner>> listRemoteLoginInformationAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationAsync(final String,final String,final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final ListOperationCallback<RemoteLoginInformationInner> serviceCallback)
  name: listRemoteLoginInformationAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final ListOperationCallback<RemoteLoginInformationInner> serviceCallback)
  nameWithType: JobsInner.listRemoteLoginInformationAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final ListOperationCallback<RemoteLoginInformationInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of currently existing nodes which were used for the Job execution. The returned information contains the node ID, its public IP and SSH port.</p>

    <p></p>
  syntax: public ServiceFuture<List<RemoteLoginInformationInner>> listRemoteLoginInformationAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName, final ListOperationCallback<RemoteLoginInformationInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationAsync(final String,final String,final String,final String,final ListOperationCallback<RemoteLoginInformationInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationNext(final String nextPageLink)
  name: listRemoteLoginInformationNext(final String nextPageLink)
  nameWithType: JobsInner.listRemoteLoginInformationNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;RemoteLoginInformationInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of currently existing nodes which were used for the Job execution. The returned information contains the node ID, its public IP and SSH port.</p>

    <p></p>
  syntax: public PagedList<RemoteLoginInformationInner> listRemoteLoginInformationNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationNext(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationNextAsync(final String nextPageLink)
  name: listRemoteLoginInformationNextAsync(final String nextPageLink)
  nameWithType: JobsInner.listRemoteLoginInformationNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;RemoteLoginInformationInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of currently existing nodes which were used for the Job execution. The returned information contains the node ID, its public IP and SSH port.</p>

    <p></p>
  syntax: public Observable<Page<RemoteLoginInformationInner>> listRemoteLoginInformationNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationNextAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationNextAsync(final String nextPageLink, final ServiceFuture<List<RemoteLoginInformationInner>> serviceFuture, final ListOperationCallback<RemoteLoginInformationInner> serviceCallback)
  name: listRemoteLoginInformationNextAsync(final String nextPageLink, final ServiceFuture<List<RemoteLoginInformationInner>> serviceFuture, final ListOperationCallback<RemoteLoginInformationInner> serviceCallback)
  nameWithType: JobsInner.listRemoteLoginInformationNextAsync(final String nextPageLink, final ServiceFuture<List<RemoteLoginInformationInner>> serviceFuture, final ListOperationCallback<RemoteLoginInformationInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of currently existing nodes which were used for the Job execution. The returned information contains the node ID, its public IP and SSH port.</p>

    <p></p>
  syntax: public ServiceFuture<List<RemoteLoginInformationInner>> listRemoteLoginInformationNextAsync(final String nextPageLink, final ServiceFuture<List<RemoteLoginInformationInner>> serviceFuture, final ListOperationCallback<RemoteLoginInformationInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationNextAsync(final String,final ServiceFuture<List<RemoteLoginInformationInner>>,final ListOperationCallback<RemoteLoginInformationInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationNextSinglePageAsync(final String nextPageLink)
  name: listRemoteLoginInformationNextSinglePageAsync(final String nextPageLink)
  nameWithType: JobsInner.listRemoteLoginInformationNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;RemoteLoginInformationInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of currently existing nodes which were used for the Job execution. The returned information contains the node ID, its public IP and SSH port.</p>

    <p>ServiceResponse&lt;PageImpl&lt;RemoteLoginInformationInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<RemoteLoginInformationInner>>> listRemoteLoginInformationNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationNextWithServiceResponseAsync(final String nextPageLink)
  name: listRemoteLoginInformationNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: JobsInner.listRemoteLoginInformationNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;RemoteLoginInformationInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of currently existing nodes which were used for the Job execution. The returned information contains the node ID, its public IP and SSH port.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<RemoteLoginInformationInner>>> listRemoteLoginInformationNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  name: listRemoteLoginInformationSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  nameWithType: JobsInner.listRemoteLoginInformationSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. ServiceResponse&lt;PageImpl&lt;RemoteLoginInformationInner&gt;&gt; * </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. ServiceResponse&lt;PageImpl&lt;RemoteLoginInformationInner&gt;&gt; * </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. ServiceResponse&lt;PageImpl&lt;RemoteLoginInformationInner&gt;&gt; * </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;RemoteLoginInformationInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of currently existing nodes which were used for the Job execution. The returned information contains the node ID, its public IP and SSH port.</p>

    <p>ServiceResponse&lt;PageImpl&lt;RemoteLoginInformationInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<RemoteLoginInformationInner>>> listRemoteLoginInformationSinglePageAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationSinglePageAsync(final String,final String,final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  name: listRemoteLoginInformationWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  nameWithType: JobsInner.listRemoteLoginInformationWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;RemoteLoginInformationInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner?alt=com.microsoft.azure.management.batchai.implementation.RemoteLoginInformationInner&text=RemoteLoginInformationInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of currently existing nodes which were used for the Job execution. The returned information contains the node ID, its public IP and SSH port.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<RemoteLoginInformationInner>>> listRemoteLoginInformationWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final String experimentName, final String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.listRemoteLoginInformationWithServiceResponseAsync(final String,final String,final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.terminate(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: terminate(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.terminate(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Terminates a job.</p>

    <p></p>
  syntax: public void terminate(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.terminate(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.terminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: terminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.terminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Terminates a job.</p>

    <p></p>
  syntax: public Observable<Void> terminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.terminateAsync(String,String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.terminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  name: terminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobsInner.terminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Terminates a job.</p>

    <p></p>
  syntax: public ServiceFuture<Void> terminateAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.terminateAsync(String,String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.terminateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: terminateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.terminateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Terminates a job.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> terminateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.terminateWithServiceResponseAsync(String,String,String,String)
nameWithType: JobsInner
syntax: public class JobsInner
type: class
uid: com.microsoft.azure.management.batchai.implementation.JobsInner
fullName: com.microsoft.azure.management.batchai.implementation.JobsInner
name: JobsInner
package: com.microsoft.azure.management.batchai.implementation
summary: <p>An instance of this class provides access to all the operations defined in Jobs. </p>
metadata: {}
