### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models._task_id_range
  id: _task_id_range
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models._task_id_range.end()
  - com.microsoft.azure.batch.protocol.models._task_id_range.start()
  - com.microsoft.azure.batch.protocol.models._task_id_range.withEnd(int)
  - com.microsoft.azure.batch.protocol.models._task_id_range.withStart(int)
  href: com.microsoft.azure.batch.protocol.models._task_id_range.yml
  langs:
  - java
  name: TaskIdRange
  nameWithType: TaskIdRange
  fullName: com.microsoft.azure.batch.protocol.models.TaskIdRange
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/batch/protocol/models/TaskIdRange.java
      branch: master
      repo: https://github.com/Azure/azure-batch-sdk-for-java
    path: src/main/java/com/microsoft/azure/batch/protocol/models/TaskIdRange.java
    startLine: 18
  package: com.microsoft.azure.batch.protocol.models
  summary: <p>A range of task IDs that a task can depend on. All tasks with IDs in the range must complete successfully before the dependent task can be scheduled. The start and end of the range are inclusive. For example, if a range has start 9 and end 12, then it represents tasks '9', '10', '11' and '12'. </p>
  syntax: &o1
    content: public class TaskIdRange
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.batch.protocol.models._task_id_range.end()
  id: end()
  parent: com.microsoft.azure.batch.protocol.models._task_id_range
  href: com.microsoft.azure.batch.protocol.models._task_id_range.yml
  langs:
  - java
  name: end()
  nameWithType: TaskIdRange.end()
  fullName: int com.microsoft.azure.batch.protocol.models.TaskIdRange.end()
  overload: com.microsoft.azure.batch.protocol.models._task_id_range.end*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/TaskIdRange.java
    startLine: 56
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Get the end value.</p>

    <p></p>
  syntax:
    content: public int end()
    return:
      type: f75371fa
      description: <p>the end value </p>
- uid: com.microsoft.azure.batch.protocol.models._task_id_range.start()
  id: start()
  parent: com.microsoft.azure.batch.protocol.models._task_id_range
  href: com.microsoft.azure.batch.protocol.models._task_id_range.yml
  langs:
  - java
  name: start()
  nameWithType: TaskIdRange.start()
  fullName: int com.microsoft.azure.batch.protocol.models.TaskIdRange.start()
  overload: com.microsoft.azure.batch.protocol.models._task_id_range.start*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/TaskIdRange.java
    startLine: 36
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Get the start value.</p>

    <p></p>
  syntax:
    content: public int start()
    return:
      type: f75371fa
      description: <p>the start value </p>
- uid: com.microsoft.azure.batch.protocol.models._task_id_range.withEnd(int)
  id: withEnd(int)
  parent: com.microsoft.azure.batch.protocol.models._task_id_range
  href: com.microsoft.azure.batch.protocol.models._task_id_range.yml
  langs:
  - java
  name: withEnd(int end)
  nameWithType: TaskIdRange.withEnd(int end)
  fullName: TaskIdRange com.microsoft.azure.batch.protocol.models.TaskIdRange.withEnd(int end)
  overload: com.microsoft.azure.batch.protocol.models._task_id_range.withEnd*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/TaskIdRange.java
    startLine: 66
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Set the end value.</p>

    <p></p>
  syntax:
    content: public TaskIdRange withEnd(int end)
    parameters:
    - id: end
      type: f75371fa
      description: <p>the end value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._task_id_range
      description: <p>the <xref uid="com.microsoft.azure.batch.protocol.models._task_id_range" data-throw-if-not-resolved="false">TaskIdRange</xref> object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models._task_id_range.withStart(int)
  id: withStart(int)
  parent: com.microsoft.azure.batch.protocol.models._task_id_range
  href: com.microsoft.azure.batch.protocol.models._task_id_range.yml
  langs:
  - java
  name: withStart(int start)
  nameWithType: TaskIdRange.withStart(int start)
  fullName: TaskIdRange com.microsoft.azure.batch.protocol.models.TaskIdRange.withStart(int start)
  overload: com.microsoft.azure.batch.protocol.models._task_id_range.withStart*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/TaskIdRange.java
    startLine: 46
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Set the start value.</p>

    <p></p>
  syntax:
    content: public TaskIdRange withStart(int start)
    parameters:
    - id: start
      type: f75371fa
      description: <p>the start value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._task_id_range
      description: <p>the <xref uid="com.microsoft.azure.batch.protocol.models._task_id_range" data-throw-if-not-resolved="false">TaskIdRange</xref> object itself. </p>
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.batch.protocol.models._task_id_range.start*
  name: start
  nameWithType: TaskIdRange.start
  fullName: int com.microsoft.azure.batch.protocol.models.TaskIdRange.start
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._task_id_range.withStart*
  name: withStart
  nameWithType: TaskIdRange.withStart
  fullName: TaskIdRange com.microsoft.azure.batch.protocol.models.TaskIdRange.withStart
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._task_id_range.end*
  name: end
  nameWithType: TaskIdRange.end
  fullName: int com.microsoft.azure.batch.protocol.models.TaskIdRange.end
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._task_id_range.withEnd*
  name: withEnd
  nameWithType: TaskIdRange.withEnd
  fullName: TaskIdRange com.microsoft.azure.batch.protocol.models.TaskIdRange.withEnd
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._task_id_range
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_id_range.yml
  name: TaskIdRange
  nameWithType: TaskIdRange
  fullName: com.microsoft.azure.batch.protocol.models.TaskIdRange
  type: Class
  summary: <p>A range of task IDs that a task can depend on. All tasks with IDs in the range must complete successfully before the dependent task can be scheduled. The start and end of the range are inclusive. For example, if a range has start 9 and end 12, then it represents tasks '9', '10', '11' and '12'. </p>
  syntax: *o1
