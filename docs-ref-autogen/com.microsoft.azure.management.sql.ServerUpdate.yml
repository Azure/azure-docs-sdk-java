### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.sql.ServerUpdate.administratorLogin()
  name: administratorLogin()
  nameWithType: ServerUpdate.administratorLogin()
  returns:
    description: <p>the administratorLogin value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get administrator username for the server. Once created it cannot be changed.</p>

    <p></p>
  syntax: public String administratorLogin()
  uid: com.microsoft.azure.management.sql.ServerUpdate.administratorLogin()
- fullName: com.microsoft.azure.management.sql.ServerUpdate.administratorLoginPassword()
  name: administratorLoginPassword()
  nameWithType: ServerUpdate.administratorLoginPassword()
  returns:
    description: <p>the administratorLoginPassword value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the administrator login password (required for server creation).</p>

    <p></p>
  syntax: public String administratorLoginPassword()
  uid: com.microsoft.azure.management.sql.ServerUpdate.administratorLoginPassword()
- fullName: com.microsoft.azure.management.sql.ServerUpdate.fullyQualifiedDomainName()
  name: fullyQualifiedDomainName()
  nameWithType: ServerUpdate.fullyQualifiedDomainName()
  returns:
    description: <p>the fullyQualifiedDomainName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the fully qualified domain name of the server.</p>

    <p></p>
  syntax: public String fullyQualifiedDomainName()
  uid: com.microsoft.azure.management.sql.ServerUpdate.fullyQualifiedDomainName()
- fullName: com.microsoft.azure.management.sql.ServerUpdate.state()
  name: state()
  nameWithType: ServerUpdate.state()
  returns:
    description: <p>the state value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the state of the server.</p>

    <p></p>
  syntax: public String state()
  uid: com.microsoft.azure.management.sql.ServerUpdate.state()
- fullName: com.microsoft.azure.management.sql.ServerUpdate.tags()
  name: tags()
  nameWithType: ServerUpdate.tags()
  returns:
    description: <p>the tags value </p>
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get resource tags.</p>

    <p></p>
  syntax: public Map<String, String> tags()
  uid: com.microsoft.azure.management.sql.ServerUpdate.tags()
- fullName: com.microsoft.azure.management.sql.ServerUpdate.version()
  name: version()
  nameWithType: ServerUpdate.version()
  returns:
    description: <p>the version value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the version of the server.</p>

    <p></p>
  syntax: public String version()
  uid: com.microsoft.azure.management.sql.ServerUpdate.version()
- fullName: com.microsoft.azure.management.sql.ServerUpdate.withAdministratorLogin(String administratorLogin)
  name: withAdministratorLogin(String administratorLogin)
  nameWithType: ServerUpdate.withAdministratorLogin(String administratorLogin)
  parameters:
  - description: <p>the administratorLogin value to set </p>
    name: administratorLogin
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ServerUpdate object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.ServerUpdate?alt=com.microsoft.azure.management.sql.ServerUpdate&text=ServerUpdate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set administrator username for the server. Once created it cannot be changed.</p>

    <p></p>
  syntax: public ServerUpdate withAdministratorLogin(String administratorLogin)
  uid: com.microsoft.azure.management.sql.ServerUpdate.withAdministratorLogin(String)
- fullName: com.microsoft.azure.management.sql.ServerUpdate.withAdministratorLoginPassword(String administratorLoginPassword)
  name: withAdministratorLoginPassword(String administratorLoginPassword)
  nameWithType: ServerUpdate.withAdministratorLoginPassword(String administratorLoginPassword)
  parameters:
  - description: <p>the administratorLoginPassword value to set </p>
    name: administratorLoginPassword
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ServerUpdate object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.ServerUpdate?alt=com.microsoft.azure.management.sql.ServerUpdate&text=ServerUpdate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the administrator login password (required for server creation).</p>

    <p></p>
  syntax: public ServerUpdate withAdministratorLoginPassword(String administratorLoginPassword)
  uid: com.microsoft.azure.management.sql.ServerUpdate.withAdministratorLoginPassword(String)
- fullName: com.microsoft.azure.management.sql.ServerUpdate.withTags(Map<String, String> tags)
  name: withTags(Map<String, String> tags)
  nameWithType: ServerUpdate.withTags(Map<String, String> tags)
  parameters:
  - description: <p>the tags value to set </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ServerUpdate object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.ServerUpdate?alt=com.microsoft.azure.management.sql.ServerUpdate&text=ServerUpdate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set resource tags.</p>

    <p></p>
  syntax: public ServerUpdate withTags(Map<String, String> tags)
  uid: com.microsoft.azure.management.sql.ServerUpdate.withTags(Map<String, String>)
- fullName: com.microsoft.azure.management.sql.ServerUpdate.withVersion(String version)
  name: withVersion(String version)
  nameWithType: ServerUpdate.withVersion(String version)
  parameters:
  - description: <p>the version value to set </p>
    name: version
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ServerUpdate object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.ServerUpdate?alt=com.microsoft.azure.management.sql.ServerUpdate&text=ServerUpdate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the version of the server.</p>

    <p></p>
  syntax: public ServerUpdate withVersion(String version)
  uid: com.microsoft.azure.management.sql.ServerUpdate.withVersion(String)
nameWithType: ServerUpdate
syntax: public class ServerUpdate
type: class
uid: com.microsoft.azure.management.sql.ServerUpdate
fullName: com.microsoft.azure.management.sql.ServerUpdate
name: ServerUpdate
package: com.microsoft.azure.management.sql
summary: <p>An update request for an Azure SQL Database server. </p>
metadata: {}
