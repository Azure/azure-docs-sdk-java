### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyAsyncClient.createRsaKeyWithResponse*"
fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.createRsaKeyWithResponse"
name: "createRsaKeyWithResponse"
nameWithType: "KeyAsyncClient.createRsaKeyWithResponse"
members:
- uid: "com.azure.security.keyvault.keys.KeyAsyncClient.createRsaKeyWithResponse(com.azure.security.keyvault.keys.models.CreateRsaKeyOptions)"
  fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.createRsaKeyWithResponse(CreateRsaKeyOptions createRsaKeyOptions)"
  name: "createRsaKeyWithResponse(CreateRsaKeyOptions createRsaKeyOptions)"
  nameWithType: "KeyAsyncClient.createRsaKeyWithResponse(CreateRsaKeyOptions createRsaKeyOptions)"
  summary: "Creates a new <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA key\"></xref> and stores it in the key vault. The create RSA key operation can be used to create any RSA key type in Azure Key Vault. If a <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> with the provided name already exists, Azure Key Vault creates a new version of the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>. It requires the `keys/create` permission.\n\nThe <xref uid=\"com.azure.security.keyvault.keys.models.CreateRsaKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateRsaKeyOptions\"></xref> parameter is required. The <xref uid=\"com.azure.security.keyvault.keys.models.CreateRsaKeyOptions.getKeySize()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"keySize\"></xref> can be optionally specified. The <xref uid=\"com.azure.security.keyvault.keys.models.CreateRsaKeyOptions.getExpiresOn*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"expires\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.CreateRsaKeyOptions.getNotBefore*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"notBefore\"></xref> values are optional. The <xref uid=\"com.azure.security.keyvault.keys.models.CreateRsaKeyOptions.isEnabled*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"enabled\"></xref> field is set to `true` by Azure Key Vault, if not specified.\n\nThe <xref uid=\"com.azure.security.keyvault.keys.models.CreateRsaKeyOptions.getKeyType*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"keyType\"></xref> indicates the type of <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> to create. Possible values include: <xref uid=\"com.azure.security.keyvault.keys.models.KeyType.RSA\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.KeyType.RSA_HSM\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA-HSM\"></xref>.\n\n**Code Samples**\n\nCreates a new <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA key\"></xref> with size 2048 which activates in one day and expires in one year. Subscribes to the call asynchronously and prints out the newly <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"created key\"></xref> details when a response has been received.\n\n```java\nCreateRsaKeyOptions createRsaKeyOptions = new CreateRsaKeyOptions(\"keyName\")\n     .setKeySize(2048)\n     .setNotBefore(OffsetDateTime.now().plusDays(1))\n     .setExpiresOn(OffsetDateTime.now().plusYears(1));\n \n keyAsyncClient.createRsaKeyWithResponse(createRsaKeyOptions)\n     .contextWrite(Context.of(\"key1\", \"value1\", \"key2\", \"value2\"))\n     .subscribe(createRsaKeyResponse ->\n         System.out.printf(\"Created key with name: %s and: id %s%n\", createRsaKeyResponse.getValue().getName(),\n             createRsaKeyResponse.getValue().getId()));\n```"
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.keys.models.CreateRsaKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options object\"></xref> containing information about the\n <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA key\"></xref> being created."
    name: "createRsaKeyOptions"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateRsaKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateRsaKeyOptions&text=CreateRsaKeyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<KeyVaultKey>> createRsaKeyWithResponse(CreateRsaKeyOptions createRsaKeyOptions)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the\n <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"created key\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.3.5
