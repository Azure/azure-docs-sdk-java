### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk(String name)
  name: defineUnmanagedDataDisk(String name)
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk(String name)
  parameters:
  - description: <p>the name for the data disk </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of the data disk definition </p>
    type: VirtualMachineUnmanagedDataDisk.UpdateDefinitionStages.Blank&lt;<xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Begins the definition of a blank unmanaged data disk to be attached to the virtual machine along with its configuration.</p>

    <p></p>
  syntax: public VirtualMachineUnmanagedDataDisk.UpdateDefinitionStages.Blank<Update> defineUnmanagedDataDisk(String name)
  uid: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk(String)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.updateUnmanagedDataDisk(String name)
  name: updateUnmanagedDataDisk(String name)
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.updateUnmanagedDataDisk(String name)
  parameters:
  - description: <p>the name of an existing disk </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of the data disk update </p>
    type: <xref href="VirtualMachineUnmanagedDataDisk.Update?alt=VirtualMachineUnmanagedDataDisk.Update&text=VirtualMachineUnmanagedDataDisk.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Begins the description of an update of an existing unmanaged data disk of this virtual machine.</p>

    <p></p>
  syntax: public VirtualMachineUnmanagedDataDisk.Update updateUnmanagedDataDisk(String name)
  uid: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.updateUnmanagedDataDisk(String)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk(String storageAccountName, String containerName, String vhdName)
  name: withExistingUnmanagedDataDisk(String storageAccountName, String containerName, String vhdName)
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk(String storageAccountName, String containerName, String vhdName)
  parameters:
  - description: <p>the storage account name </p>
    name: storageAccountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the container holding the VHD file </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name for the VHD file </p>
    name: vhdName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the stage representing creatable VM definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies an existing VHD that needs to be attached to the virtual machine as data disk.</p>

    <p></p>
  syntax: public Update withExistingUnmanagedDataDisk(String storageAccountName, String containerName, String vhdName)
  uid: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk(String,String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk(Integer sizeInGB)
  name: withNewUnmanagedDataDisk(Integer sizeInGB)
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk(Integer sizeInGB)
  parameters:
  - description: <p>the disk size in GB </p>
    name: sizeInGB
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the stage representing creatable VM definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies that a new blank unmanaged data disk needs to be attached to virtual machine.</p>

    <p></p>
  syntax: public Update withNewUnmanagedDataDisk(Integer sizeInGB)
  uid: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk(Integer)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(int lun)
  name: withoutUnmanagedDataDisk(int lun)
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(int lun)
  parameters:
  - description: <p>the logical unit number of the data disk to remove </p>
    name: lun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Detaches a unmanaged data disk from the virtual machine.</p>

    <p></p>
  syntax: public Update withoutUnmanagedDataDisk(int lun)
  uid: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(int)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(String name)
  name: withoutUnmanagedDataDisk(String name)
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(String name)
  parameters:
  - description: <p>the name of an existing data disk to remove </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Detaches an unmanaged data disk from the virtual machine.</p>

    <p></p>
  syntax: public Update withoutUnmanagedDataDisk(String name)
  uid: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(String)
nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk
syntax: public interface WithUnmanagedDataDisk
type: interface
uid: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk
fullName: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk
name: VirtualMachine.UpdateStages.WithUnmanagedDataDisk
package: com.microsoft.azure.management.compute
summary: <p>The stage of a virtual machine definition allowing to specify unmanaged data disk configuration. </p>
metadata: {}
