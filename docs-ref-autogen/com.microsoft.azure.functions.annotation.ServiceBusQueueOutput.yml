### YamlMime:JavaType
uid: "com.microsoft.azure.functions.annotation.ServiceBusQueueOutput"
fullName: "com.microsoft.azure.functions.annotation.ServiceBusQueueOutput"
name: "ServiceBusQueueOutput"
nameWithType: "ServiceBusQueueOutput"
summary: "Place this on a parameter whose value would be written to a service bus queue. The parameter type should be OutputBinding<T>, where T could be one of:\n\n *  Any native Java types such as int, String, byte\\[\\]\n *  Any POJO type\n\nThe following example shows a Java function that sends a Service Bus queue message:\n\n```java\n@FunctionName(\"httpToServiceBusQueue\")\n@ServiceBusQueueOutput(name = \"message\", queueName = \"myqueue\", connection = \"AzureServiceBusConnection\")\n public String pushToQueue(\n    @HttpTrigger(name = \"request\", methods = {HttpMethod.POST}, authLevel = AuthorizationLevel.ANONYMOUS)\n     final String message,\n    @HttpOutput(name = \"response\") final OutputBinding<String> result\n ) {\n     result.setValue(message + \" has been sent.\");\n     return message;\n }\n```"
syntax: "public interface ServiceBusQueueOutput implements Annotation"
methods:
- "com.microsoft.azure.functions.annotation.ServiceBusQueueOutput.access()"
- "com.microsoft.azure.functions.annotation.ServiceBusQueueOutput.connection()"
- "com.microsoft.azure.functions.annotation.ServiceBusQueueOutput.dataType()"
- "com.microsoft.azure.functions.annotation.ServiceBusQueueOutput.name()"
- "com.microsoft.azure.functions.annotation.ServiceBusQueueOutput.queueName()"
type: "interface"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.functions.annotation"
artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
