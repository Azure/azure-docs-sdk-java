### YamlMime:JavaType
uid: "com.azure.communication.identity.CommunicationIdentityClient"
fullName: "com.azure.communication.identity.CommunicationIdentityClient"
name: "CommunicationIdentityClient"
nameWithType: "CommunicationIdentityClient"
summary: "Synchronous client interface for Azure Communication Service Identity operations"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CommunicationIdentityClient"
methods:
- "com.azure.communication.identity.CommunicationIdentityClient.createUser()"
- "com.azure.communication.identity.CommunicationIdentityClient.createUserAndToken(java.lang.Iterable<com.azure.communication.identity.models.CommunicationTokenScope>)"
- "com.azure.communication.identity.CommunicationIdentityClient.createUserAndTokenWithResponse(java.lang.Iterable<com.azure.communication.identity.models.CommunicationTokenScope>,com.azure.core.util.Context)"
- "com.azure.communication.identity.CommunicationIdentityClient.createUserWithResponse(com.azure.core.util.Context)"
- "com.azure.communication.identity.CommunicationIdentityClient.deleteUser(com.azure.communication.common.CommunicationUserIdentifier)"
- "com.azure.communication.identity.CommunicationIdentityClient.deleteUserWithResponse(com.azure.communication.common.CommunicationUserIdentifier,com.azure.core.util.Context)"
- "com.azure.communication.identity.CommunicationIdentityClient.getToken(com.azure.communication.common.CommunicationUserIdentifier,java.lang.Iterable<com.azure.communication.identity.models.CommunicationTokenScope>)"
- "com.azure.communication.identity.CommunicationIdentityClient.getTokenForTeamsUser(com.azure.communication.identity.models.GetTokenForTeamsUserOptions)"
- "com.azure.communication.identity.CommunicationIdentityClient.getTokenForTeamsUserWithResponse(com.azure.communication.identity.models.GetTokenForTeamsUserOptions,com.azure.core.util.Context)"
- "com.azure.communication.identity.CommunicationIdentityClient.getTokenWithResponse(com.azure.communication.common.CommunicationUserIdentifier,java.lang.Iterable<com.azure.communication.identity.models.CommunicationTokenScope>,com.azure.core.util.Context)"
- "com.azure.communication.identity.CommunicationIdentityClient.revokeTokens(com.azure.communication.common.CommunicationUserIdentifier)"
- "com.azure.communication.identity.CommunicationIdentityClient.revokeTokensWithResponse(com.azure.communication.common.CommunicationUserIdentifier,com.azure.core.util.Context)"
type: "class"
desc: "Synchronous client interface for Azure Communication Service Identity operations\n\n**Instantiating a synchronous Azure Communication Service Identity Client**\n\n```java\n// You can find your endpoint and access key from your resource in the Azure Portal\n String endpoint = \"https://<RESOURCE_NAME>.communication.azure.com\";\n AzureKeyCredential keyCredential = new AzureKeyCredential(\"<access-key>\");\n\n CommunicationIdentityClient communicationIdentityClient = new CommunicationIdentityClientBuilder()\n     .endpoint(endpoint)\n     .credential(keyCredential)\n     .buildClient();\n```\n\nView <xref uid=\"com.azure.communication.identity.CommunicationIdentityClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"this\"></xref> for additional ways to construct the client."
metadata: {}
package: "com.azure.communication.identity"
artifact: com.azure:azure-communication-identity:1.3.0
