### YamlMime:JavaType
uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.Loggers"
fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.Loggers"
name: "Loggers"
nameWithType: "Loggers"
summary: "Type representing Loggers."
syntax: "public interface Loggers extends SupportsCreating<LoggerContract.DefinitionStages.Blank>, HasInner<LoggersInner>"
methods:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.Loggers.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.Loggers.deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  name: "deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  nameWithType: "Loggers.deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  summary: "Deletes the specified logger."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Logger identifier. Must be unique in the API Management service instance."
    name: "loggerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable deleteAsync(String resourceGroupName, String serviceName, String loggerId, String ifMatch)"
  desc: "Deletes the specified logger."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.Loggers.getAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.Loggers.getAsync(String resourceGroupName, String serviceName, String loggerId)"
  name: "getAsync(String resourceGroupName, String serviceName, String loggerId)"
  nameWithType: "Loggers.getAsync(String resourceGroupName, String serviceName, String loggerId)"
  summary: "Gets the details of the logger specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Logger identifier. Must be unique in the API Management service instance."
    name: "loggerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<LoggerContract> getAsync(String resourceGroupName, String serviceName, String loggerId)"
  desc: "Gets the details of the logger specified by its identifier."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerContract?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerContract&text=LoggerContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.Loggers.getEntityTagAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.Loggers.getEntityTagAsync(String resourceGroupName, String serviceName, String loggerId)"
  name: "getEntityTagAsync(String resourceGroupName, String serviceName, String loggerId)"
  nameWithType: "Loggers.getEntityTagAsync(String resourceGroupName, String serviceName, String loggerId)"
  summary: "Gets the entity state (Etag) version of the logger specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Logger identifier. Must be unique in the API Management service instance."
    name: "loggerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable getEntityTagAsync(String resourceGroupName, String serviceName, String loggerId)"
  desc: "Gets the entity state (Etag) version of the logger specified by its identifier."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.Loggers.listByServiceAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.Loggers.listByServiceAsync(String resourceGroupName, String serviceName)"
  name: "listByServiceAsync(String resourceGroupName, String serviceName)"
  nameWithType: "Loggers.listByServiceAsync(String resourceGroupName, String serviceName)"
  summary: "Lists a collection of loggers in the specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<LoggerContract> listByServiceAsync(String resourceGroupName, String serviceName)"
  desc: "Lists a collection of loggers in the specified service instance."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerContract?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerContract&text=LoggerContract\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Type representing Loggers."
implements:
- "<xref href=\"com.microsoft.azure.arm.collection.SupportsCreating?alt=com.microsoft.azure.arm.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerContract.DefinitionStages.Blank?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.LoggerContract.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.LoggersInner&text=LoggersInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.apimanagement.v2019_01_01"
artifact: com.microsoft.azure.apimanagement.v2019_01_01:azure-mgmt-apimanagement:1.0.0-beta-1
