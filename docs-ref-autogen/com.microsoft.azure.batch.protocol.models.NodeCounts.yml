### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.NodeCounts"
fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts"
name: "NodeCounts"
nameWithType: "NodeCounts"
summary: "The number of Compute Nodes in each Compute Node state."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class NodeCounts"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.NodeCounts()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.NodeCounts()"
  name: "NodeCounts()"
  nameWithType: "NodeCounts.NodeCounts()"
  syntax: "public NodeCounts()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.creating()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.creating()"
  name: "creating()"
  nameWithType: "NodeCounts.creating()"
  summary: "Get the creating value."
  syntax: "public int creating()"
  desc: "Get the creating value."
  returns:
    description: "the creating value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.idle()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.idle()"
  name: "idle()"
  nameWithType: "NodeCounts.idle()"
  summary: "Get the idle value."
  syntax: "public int idle()"
  desc: "Get the idle value."
  returns:
    description: "the idle value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.leavingPool()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.leavingPool()"
  name: "leavingPool()"
  nameWithType: "NodeCounts.leavingPool()"
  summary: "Get the leaving<wbr>Pool value."
  syntax: "public int leavingPool()"
  desc: "Get the leavingPool value."
  returns:
    description: "the leavingPool value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.offline()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.offline()"
  name: "offline()"
  nameWithType: "NodeCounts.offline()"
  summary: "Get the offline value."
  syntax: "public int offline()"
  desc: "Get the offline value."
  returns:
    description: "the offline value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.preempted()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.preempted()"
  name: "preempted()"
  nameWithType: "NodeCounts.preempted()"
  summary: "Get the preempted value."
  syntax: "public int preempted()"
  desc: "Get the preempted value."
  returns:
    description: "the preempted value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.rebooting()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.rebooting()"
  name: "rebooting()"
  nameWithType: "NodeCounts.rebooting()"
  summary: "Get the rebooting value."
  syntax: "public int rebooting()"
  desc: "Get the rebooting value."
  returns:
    description: "the rebooting value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.reimaging()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.reimaging()"
  name: "reimaging()"
  nameWithType: "NodeCounts.reimaging()"
  summary: "Get the reimaging value."
  syntax: "public int reimaging()"
  desc: "Get the reimaging value."
  returns:
    description: "the reimaging value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.running()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.running()"
  name: "running()"
  nameWithType: "NodeCounts.running()"
  summary: "Get the running value."
  syntax: "public int running()"
  desc: "Get the running value."
  returns:
    description: "the running value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.startTaskFailed()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.startTaskFailed()"
  name: "startTaskFailed()"
  nameWithType: "NodeCounts.startTaskFailed()"
  summary: "Get the start<wbr>Task<wbr>Failed value."
  syntax: "public int startTaskFailed()"
  desc: "Get the startTaskFailed value."
  returns:
    description: "the startTaskFailed value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.starting()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.starting()"
  name: "starting()"
  nameWithType: "NodeCounts.starting()"
  summary: "Get the starting value."
  syntax: "public int starting()"
  desc: "Get the starting value."
  returns:
    description: "the starting value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.total()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.total()"
  name: "total()"
  nameWithType: "NodeCounts.total()"
  summary: "Get the total value."
  syntax: "public int total()"
  desc: "Get the total value."
  returns:
    description: "the total value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.unknown()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.unknown()"
  name: "unknown()"
  nameWithType: "NodeCounts.unknown()"
  summary: "Get the unknown value."
  syntax: "public int unknown()"
  desc: "Get the unknown value."
  returns:
    description: "the unknown value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.unusable()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.unusable()"
  name: "unusable()"
  nameWithType: "NodeCounts.unusable()"
  summary: "Get the unusable value."
  syntax: "public int unusable()"
  desc: "Get the unusable value."
  returns:
    description: "the unusable value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.waitingForStartTask()"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.waitingForStartTask()"
  name: "waitingForStartTask()"
  nameWithType: "NodeCounts.waitingForStartTask()"
  summary: "Get the waiting<wbr>For<wbr>Start<wbr>Task value."
  syntax: "public int waitingForStartTask()"
  desc: "Get the waitingForStartTask value."
  returns:
    description: "the waitingForStartTask value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withCreating(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withCreating(int creating)"
  name: "withCreating(int creating)"
  nameWithType: "NodeCounts.withCreating(int creating)"
  summary: "Set the creating value."
  parameters:
  - description: "the creating value to set"
    name: "creating"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withCreating(int creating)"
  desc: "Set the creating value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withIdle(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withIdle(int idle)"
  name: "withIdle(int idle)"
  nameWithType: "NodeCounts.withIdle(int idle)"
  summary: "Set the idle value."
  parameters:
  - description: "the idle value to set"
    name: "idle"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withIdle(int idle)"
  desc: "Set the idle value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withLeavingPool(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withLeavingPool(int leavingPool)"
  name: "withLeavingPool(int leavingPool)"
  nameWithType: "NodeCounts.withLeavingPool(int leavingPool)"
  summary: "Set the leaving<wbr>Pool value."
  parameters:
  - description: "the leavingPool value to set"
    name: "leavingPool"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withLeavingPool(int leavingPool)"
  desc: "Set the leavingPool value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withOffline(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withOffline(int offline)"
  name: "withOffline(int offline)"
  nameWithType: "NodeCounts.withOffline(int offline)"
  summary: "Set the offline value."
  parameters:
  - description: "the offline value to set"
    name: "offline"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withOffline(int offline)"
  desc: "Set the offline value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withPreempted(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withPreempted(int preempted)"
  name: "withPreempted(int preempted)"
  nameWithType: "NodeCounts.withPreempted(int preempted)"
  summary: "Set the preempted value."
  parameters:
  - description: "the preempted value to set"
    name: "preempted"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withPreempted(int preempted)"
  desc: "Set the preempted value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withRebooting(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withRebooting(int rebooting)"
  name: "withRebooting(int rebooting)"
  nameWithType: "NodeCounts.withRebooting(int rebooting)"
  summary: "Set the rebooting value."
  parameters:
  - description: "the rebooting value to set"
    name: "rebooting"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withRebooting(int rebooting)"
  desc: "Set the rebooting value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withReimaging(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withReimaging(int reimaging)"
  name: "withReimaging(int reimaging)"
  nameWithType: "NodeCounts.withReimaging(int reimaging)"
  summary: "Set the reimaging value."
  parameters:
  - description: "the reimaging value to set"
    name: "reimaging"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withReimaging(int reimaging)"
  desc: "Set the reimaging value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withRunning(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withRunning(int running)"
  name: "withRunning(int running)"
  nameWithType: "NodeCounts.withRunning(int running)"
  summary: "Set the running value."
  parameters:
  - description: "the running value to set"
    name: "running"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withRunning(int running)"
  desc: "Set the running value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withStartTaskFailed(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withStartTaskFailed(int startTaskFailed)"
  name: "withStartTaskFailed(int startTaskFailed)"
  nameWithType: "NodeCounts.withStartTaskFailed(int startTaskFailed)"
  summary: "Set the start<wbr>Task<wbr>Failed value."
  parameters:
  - description: "the startTaskFailed value to set"
    name: "startTaskFailed"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withStartTaskFailed(int startTaskFailed)"
  desc: "Set the startTaskFailed value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withStarting(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withStarting(int starting)"
  name: "withStarting(int starting)"
  nameWithType: "NodeCounts.withStarting(int starting)"
  summary: "Set the starting value."
  parameters:
  - description: "the starting value to set"
    name: "starting"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withStarting(int starting)"
  desc: "Set the starting value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withTotal(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withTotal(int total)"
  name: "withTotal(int total)"
  nameWithType: "NodeCounts.withTotal(int total)"
  summary: "Set the total value."
  parameters:
  - description: "the total value to set"
    name: "total"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withTotal(int total)"
  desc: "Set the total value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withUnknown(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withUnknown(int unknown)"
  name: "withUnknown(int unknown)"
  nameWithType: "NodeCounts.withUnknown(int unknown)"
  summary: "Set the unknown value."
  parameters:
  - description: "the unknown value to set"
    name: "unknown"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withUnknown(int unknown)"
  desc: "Set the unknown value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withUnusable(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withUnusable(int unusable)"
  name: "withUnusable(int unusable)"
  nameWithType: "NodeCounts.withUnusable(int unusable)"
  summary: "Set the unusable value."
  parameters:
  - description: "the unusable value to set"
    name: "unusable"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withUnusable(int unusable)"
  desc: "Set the unusable value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.NodeCounts.withWaitingForStartTask(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.NodeCounts.withWaitingForStartTask(int waitingForStartTask)"
  name: "withWaitingForStartTask(int waitingForStartTask)"
  nameWithType: "NodeCounts.withWaitingForStartTask(int waitingForStartTask)"
  summary: "Set the waiting<wbr>For<wbr>Start<wbr>Task value."
  parameters:
  - description: "the waitingForStartTask value to set"
    name: "waitingForStartTask"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeCounts withWaitingForStartTask(int waitingForStartTask)"
  desc: "Set the waitingForStartTask value."
  returns:
    description: "the NodeCounts object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeCounts?alt=com.microsoft.azure.batch.protocol.models.NodeCounts&text=NodeCounts\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The number of Compute Nodes in each Compute Node state."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
