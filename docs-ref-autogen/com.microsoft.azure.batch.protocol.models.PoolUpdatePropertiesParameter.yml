### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  id: PoolUpdatePropertiesParameter
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.PoolUpdatePropertiesParameter()
  - com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.applicationPackageReferences()
  - com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.certificateReferences()
  - com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.metadata()
  - com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.startTask()
  - com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  - com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)
  - com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  - com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)
  langs:
  - java
  name: PoolUpdatePropertiesParameter
  nameWithType: PoolUpdatePropertiesParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: The set of changes to be made to a Pool.
  syntax:
    content: public class PoolUpdatePropertiesParameter
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.PoolUpdatePropertiesParameter()
  id: PoolUpdatePropertiesParameter()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  langs:
  - java
  name: PoolUpdatePropertiesParameter()
  nameWithType: PoolUpdatePropertiesParameter.PoolUpdatePropertiesParameter()
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.PoolUpdatePropertiesParameter()
  overload: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.PoolUpdatePropertiesParameter*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public PoolUpdatePropertiesParameter()
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.applicationPackageReferences()
  id: applicationPackageReferences()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  langs:
  - java
  name: applicationPackageReferences()
  nameWithType: PoolUpdatePropertiesParameter.applicationPackageReferences()
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.applicationPackageReferences()
  overload: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.applicationPackageReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the list replaces any existing Application Package references on the Pool. Changes to Application Package references affect all new Compute Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Application Package references on any given Pool. If omitted, or if you specify an empty collection, any existing Application Packages references are removed from the Pool. A maximum of 10 references may be specified on a given Pool.
  syntax:
    content: public List<ApplicationPackageReference> applicationPackageReferences()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: the applicationPackageReferences value
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.certificateReferences()
  id: certificateReferences()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  langs:
  - java
  name: certificateReferences()
  nameWithType: PoolUpdatePropertiesParameter.certificateReferences()
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.certificateReferences()
  overload: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.certificateReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this list replaces any existing Certificate references configured on the Pool. If you specify an empty collection, any existing Certificate references are removed from the Pool. For Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ\_BATCH\_CERTIFICATES\_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\{user-name\}/certs) and Certificates are placed in that directory.
  syntax:
    content: public List<CertificateReference> certificateReferences()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>
      description: the certificateReferences value
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.metadata()
  id: metadata()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  langs:
  - java
  name: metadata()
  nameWithType: PoolUpdatePropertiesParameter.metadata()
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.metadata()
  overload: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.metadata*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this list replaces any existing metadata configured on the Pool. If omitted, or if you specify an empty collection, any existing metadata is removed from the Pool.
  syntax:
    content: public List<MetadataItem> metadata()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: the metadata value
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.startTask()
  id: startTask()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  langs:
  - java
  name: startTask()
  nameWithType: PoolUpdatePropertiesParameter.startTask()
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.startTask()
  overload: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.startTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if this element is present, it overwrites any existing StartTask. If omitted, any existing StartTask is removed from the Pool.
  syntax:
    content: public StartTask startTask()
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTask
      description: the startTask value
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  id: withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  langs:
  - java
  name: withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  nameWithType: PoolUpdatePropertiesParameter.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  overload: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withApplicationPackageReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the list replaces any existing Application Package references on the Pool. Changes to Application Package references affect all new Compute Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Application Package references on any given Pool. If omitted, or if you specify an empty collection, any existing Application Packages references are removed from the Pool. A maximum of 10 references may be specified on a given Pool.
  syntax:
    content: public PoolUpdatePropertiesParameter withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
    parameters:
    - id: applicationPackageReferences
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: the applicationPackageReferences value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: the PoolUpdatePropertiesParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)
  id: withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  langs:
  - java
  name: withCertificateReferences(List<CertificateReference> certificateReferences)
  nameWithType: PoolUpdatePropertiesParameter.withCertificateReferences(List<CertificateReference> certificateReferences)
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withCertificateReferences(List<CertificateReference> certificateReferences)
  overload: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withCertificateReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this list replaces any existing Certificate references configured on the Pool. If you specify an empty collection, any existing Certificate references are removed from the Pool. For Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ\_BATCH\_CERTIFICATES\_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\{user-name\}/certs) and Certificates are placed in that directory.
  syntax:
    content: public PoolUpdatePropertiesParameter withCertificateReferences(List<CertificateReference> certificateReferences)
    parameters:
    - id: certificateReferences
      type: java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>
      description: the certificateReferences value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: the PoolUpdatePropertiesParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  id: withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  langs:
  - java
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: PoolUpdatePropertiesParameter.withMetadata(List<MetadataItem> metadata)
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withMetadata(List<MetadataItem> metadata)
  overload: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withMetadata*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this list replaces any existing metadata configured on the Pool. If omitted, or if you specify an empty collection, any existing metadata is removed from the Pool.
  syntax:
    content: public PoolUpdatePropertiesParameter withMetadata(List<MetadataItem> metadata)
    parameters:
    - id: metadata
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: the metadata value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: the PoolUpdatePropertiesParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)
  id: withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  langs:
  - java
  name: withStartTask(StartTask startTask)
  nameWithType: PoolUpdatePropertiesParameter.withStartTask(StartTask startTask)
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withStartTask(StartTask startTask)
  overload: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withStartTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if this element is present, it overwrites any existing StartTask. If omitted, any existing StartTask is removed from the Pool.
  syntax:
    content: public PoolUpdatePropertiesParameter withStartTask(StartTask startTask)
    parameters:
    - id: startTask
      type: com.microsoft.azure.batch.protocol.models.StartTask
      description: the startTask value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: the PoolUpdatePropertiesParameter object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.PoolUpdatePropertiesParameter*
  name: PoolUpdatePropertiesParameter
  nameWithType: PoolUpdatePropertiesParameter.PoolUpdatePropertiesParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.PoolUpdatePropertiesParameter
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTask
  name: StartTask
  nameWithType: StartTask
  fullName: com.microsoft.azure.batch.protocol.models.StartTask
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.startTask*
  name: startTask
  nameWithType: PoolUpdatePropertiesParameter.startTask
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.startTask
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withStartTask*
  name: withStartTask
  nameWithType: PoolUpdatePropertiesParameter.withStartTask
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withStartTask
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CertificateReference
    name: CertificateReference
    fullName: com.microsoft.azure.batch.protocol.models.CertificateReference
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.certificateReferences*
  name: certificateReferences
  nameWithType: PoolUpdatePropertiesParameter.certificateReferences
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.certificateReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withCertificateReferences*
  name: withCertificateReferences
  nameWithType: PoolUpdatePropertiesParameter.withCertificateReferences
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withCertificateReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
    name: ApplicationPackageReference
    fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.applicationPackageReferences*
  name: applicationPackageReferences
  nameWithType: PoolUpdatePropertiesParameter.applicationPackageReferences
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.applicationPackageReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withApplicationPackageReferences*
  name: withApplicationPackageReferences
  nameWithType: PoolUpdatePropertiesParameter.withApplicationPackageReferences
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withApplicationPackageReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.MetadataItem
    name: MetadataItem
    fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.metadata*
  name: metadata
  nameWithType: PoolUpdatePropertiesParameter.metadata
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.metadata
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withMetadata*
  name: withMetadata
  nameWithType: PoolUpdatePropertiesParameter.withMetadata
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.withMetadata
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.batch.protocol.models.CertificateReference
  name: CertificateReference
  nameWithType: CertificateReference
  fullName: com.microsoft.azure.batch.protocol.models.CertificateReference
- uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  name: ApplicationPackageReference
  nameWithType: ApplicationPackageReference
  fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
- uid: com.microsoft.azure.batch.protocol.models.MetadataItem
  name: MetadataItem
  nameWithType: MetadataItem
  fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
