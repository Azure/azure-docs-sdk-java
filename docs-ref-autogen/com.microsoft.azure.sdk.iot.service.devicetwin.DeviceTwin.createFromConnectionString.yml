### YamlMime:JavaMember
nameWithType: DeviceTwin.createFromConnectionString
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.createFromConnectionString(String connectionString)
  name: createFromConnectionString(String connectionString)
  nameWithType: DeviceTwin.createFromConnectionString(String connectionString)
  parameters:
  - description: <p>The iot hub connection string. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is never thrown. </p>
  returns:
    description: <p>The instance of DeviceTwin. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin?alt=com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin&text=DeviceTwin" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Static constructor to create instance from connection string.</p>

    <p>

      <xrefsect id="deprecated_1_deprecated000090">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>because this method declares a thrown IOException even though it never throws an IOException. Users are recommended to use <xref uid="com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.DeviceTwin(String,DeviceTwinClientOptions)" data-throw-if-not-resolved="false" data-raw-source="DeviceTwin(String, DeviceTwinClientOptions)"></xref> instead since it does not declare this exception even though it constructs the same DeviceTwin. </p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax: public static DeviceTwin createFromConnectionString(String connectionString)
  uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.createFromConnectionString(String)
- fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.createFromConnectionString(String connectionString, DeviceTwinClientOptions options)
  name: createFromConnectionString(String connectionString, DeviceTwinClientOptions options)
  nameWithType: DeviceTwin.createFromConnectionString(String connectionString, DeviceTwinClientOptions options)
  parameters:
  - description: <p>The IoT hub connection string. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>The configurable options for each operation on this client. May not be<code>nullÂ 

          </code> . </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinClientOptions?alt=com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinClientOptions&text=DeviceTwinClientOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is never thrown. </p>
  returns:
    description: <p>The instance of DeviceTwin. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin?alt=com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin&text=DeviceTwin" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Static constructor to create instance from connection string.</p>

    <p>

      <xrefsect id="deprecated_1_deprecated000091">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>because this method declares a thrown IOException even though it never throws an IOException. Users are recommended to use <xref uid="com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.DeviceTwin(String,DeviceTwinClientOptions)" data-throw-if-not-resolved="false" data-raw-source="DeviceTwin(String, DeviceTwinClientOptions)"></xref> instead since it does not declare this exception even though it constructs the same DeviceTwin. </p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax: public static DeviceTwin createFromConnectionString(String connectionString, DeviceTwinClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.createFromConnectionString(String,DeviceTwinClientOptions)
uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.createFromConnectionString*
fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.createFromConnectionString
name: createFromConnectionString(String connectionString)
package: com.microsoft.azure.sdk.iot.service.devicetwin
metadata: {}
