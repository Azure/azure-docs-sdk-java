### YamlMime:JavaMember
uid: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeBusinessCards*"
fullName: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeBusinessCards"
name: "beginRecognizeBusinessCards"
nameWithType: "FormRecognizerClient.beginRecognizeBusinessCards"
members:
- uid: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeBusinessCards(java.io.InputStream,long)"
  fullName: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeBusinessCards(InputStream businessCard, long length)"
  name: "beginRecognizeBusinessCards(InputStream businessCard, long length)"
  nameWithType: "FormRecognizerClient.beginRecognizeBusinessCards(InputStream businessCard, long length)"
  summary: "Recognizes business card data from the provided document data using optical character recognition (OCR) and a prebuilt trained business card model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support\n\nSee [here][] for fields found on a business card.\n\n**Code sample**\n\n\\{@codesnippet com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeBusinessCards\\#InputStream-long\\}\n\n\n[here]: https://aka.ms/formrecognizer/businesscardfields"
  parameters:
  - description: "The data of the business card to recognize business card information from."
    name: "businessCard"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<FormRecognizerOperationResult,List<RecognizedForm>> beginRecognizeBusinessCards(InputStream businessCard, long length)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the recognize business card operation until it has completed,\n has failed, or has been cancelled. The completed operation returns a list of <xref uid=\"com.azure.ai.formrecognizer.models.RecognizedForm\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RecognizedForm\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.RecognizedForm?alt=com.azure.ai.formrecognizer.models.RecognizedForm&text=RecognizedForm\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeBusinessCards(java.io.InputStream,long,com.azure.ai.formrecognizer.models.RecognizeBusinessCardsOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeBusinessCards(InputStream businessCard, long length, RecognizeBusinessCardsOptions recognizeBusinessCardsOptions, Context context)"
  name: "beginRecognizeBusinessCards(InputStream businessCard, long length, RecognizeBusinessCardsOptions recognizeBusinessCardsOptions, Context context)"
  nameWithType: "FormRecognizerClient.beginRecognizeBusinessCards(InputStream businessCard, long length, RecognizeBusinessCardsOptions recognizeBusinessCardsOptions, Context context)"
  summary: "Recognizes business card data from the provided document data using optical character recognition (OCR) and a prebuilt trained business card model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support\n\nSee [here][] for fields found on a business card.\n\n**Code sample**\n\n\\{@codesnippet com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeBusinessCards\\#InputStream-long-RecognizeBusinessCardsOptions-Context\\}\n\n\n[here]: https://aka.ms/formrecognizer/businesscardfields"
  parameters:
  - description: "The data of the business card to recognize business card information from."
    name: "businessCard"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional configurable <xref uid=\"com.azure.ai.formrecognizer.models.RecognizeBusinessCardsOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref>\n that may be passed when analyzing a business card."
    name: "recognizeBusinessCardsOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.models.RecognizeBusinessCardsOptions?alt=com.azure.ai.formrecognizer.models.RecognizeBusinessCardsOptions&text=RecognizeBusinessCardsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<FormRecognizerOperationResult,List<RecognizedForm>> beginRecognizeBusinessCards(InputStream businessCard, long length, RecognizeBusinessCardsOptions recognizeBusinessCardsOptions, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the recognize business card operation until it has completed, has failed,\n or has been cancelled. The completed operation returns a list of <xref uid=\"com.azure.ai.formrecognizer.models.RecognizedForm\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RecognizedForm\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.RecognizedForm?alt=com.azure.ai.formrecognizer.models.RecognizedForm&text=RecognizedForm\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.formrecognizer"
artifact: com.azure:azure-ai-formrecognizer:3.1.7
