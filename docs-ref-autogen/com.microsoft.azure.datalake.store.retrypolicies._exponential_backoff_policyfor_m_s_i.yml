### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i
  id: _exponential_backoff_policyfor_m_s_i
  parent: com.microsoft.azure.datalake.store.retrypolicies
  children:
  - com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.ExponentialBackoffPolicyforMSI()
  - com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.ExponentialBackoffPolicyforMSI(int,int,int)
  - com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.shouldRetry(int,Exception)
  href: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.yml
  langs:
  - java
  name: ExponentialBackoffPolicyforMSI
  nameWithType: ExponentialBackoffPolicyforMSI
  fullName: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/datalake/store/retrypolicies/ExponentialBackoffPolicyforMSI.java
      branch: master
      repo: https://github.com/azure/azure-data-lake-store-java
    path: src/main/java/com/microsoft/azure/datalake/store/retrypolicies/ExponentialBackoffPolicyforMSI.java
    startLine: 17
  package: com.microsoft.azure.datalake.store.retrypolicies
  summary: "<p>implements different retry decisions based on the error.</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>For nonretryable errors (3xx, most 4xx, and some 5xx return codes), do no retry. </p>\r\n    </li>\r\n    <li>\r\n      <p>For throttling error, do a retry with exponential backoff </p>\r\n    </li>\r\n    <li>\r\n      <p>for all other errors, do a retry with linear backoff </p>\r\n    </li>\r\n  </ul>\r\n</p>"
  syntax:
    content: public class ExponentialBackoffPolicyforMSI implements RetryPolicy
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.datalake.store.retrypolicies._retry_policy
- uid: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.ExponentialBackoffPolicyforMSI()
  id: ExponentialBackoffPolicyforMSI()
  parent: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i
  href: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.yml
  langs:
  - java
  name: ExponentialBackoffPolicyforMSI()
  nameWithType: ExponentialBackoffPolicyforMSI.ExponentialBackoffPolicyforMSI()
  fullName: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI.ExponentialBackoffPolicyforMSI()
  overload: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.ExponentialBackoffPolicyforMSI*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/retrypolicies/ExponentialBackoffPolicyforMSI.java
    startLine: 25
  package: com.microsoft.azure.datalake.store.retrypolicies
  syntax:
    content: public ExponentialBackoffPolicyforMSI()
- uid: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.ExponentialBackoffPolicyforMSI(int,int,int)
  id: ExponentialBackoffPolicyforMSI(int,int,int)
  parent: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i
  href: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.yml
  langs:
  - java
  name: ExponentialBackoffPolicyforMSI(int maxRetries, int exponentialRetryInterval, int exponentialFactor)
  nameWithType: ExponentialBackoffPolicyforMSI.ExponentialBackoffPolicyforMSI(int maxRetries, int exponentialRetryInterval, int exponentialFactor)
  fullName: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI.ExponentialBackoffPolicyforMSI(int maxRetries, int exponentialRetryInterval, int exponentialFactor)
  overload: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.ExponentialBackoffPolicyforMSI*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/retrypolicies/ExponentialBackoffPolicyforMSI.java
    startLine: 34
  package: com.microsoft.azure.datalake.store.retrypolicies
  summary: "<p>Implements Exponential backoff policy, with error condition checks specific to MSI </p>"
  syntax:
    content: public ExponentialBackoffPolicyforMSI(int maxRetries, int exponentialRetryInterval, int exponentialFactor)
    parameters:
    - id: maxRetries
      type: f75371fa
      description: <p>maximum number of retries </p>
    - id: exponentialRetryInterval
      type: f75371fa
      description: <p>(starting) interval to use for exponential backoff retries (in milliseconds) </p>
    - id: exponentialFactor
      type: f75371fa
      description: <p>factor to multiply the retry interval by </p>
- uid: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.shouldRetry(int,Exception)
  id: shouldRetry(int,Exception)
  parent: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i
  href: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.yml
  langs:
  - java
  name: shouldRetry(int httpResponseCode, Exception lastException)
  nameWithType: ExponentialBackoffPolicyforMSI.shouldRetry(int httpResponseCode, Exception lastException)
  fullName: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI.shouldRetry(int httpResponseCode, Exception lastException)
  overload: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.shouldRetry*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/retrypolicies/ExponentialBackoffPolicyforMSI.java
    startLine: 41
  package: com.microsoft.azure.datalake.store.retrypolicies
  summary: "<p>boolean indicating whether a failed request should be retried. Implementations can use the HTTP response code and any exceptions from the last failure to decide whether to retry. </p>\r\n<p>If the retry policy requires a wait before the next try, then the<code>shouldRetry \r\n    </code> method should wait for the appropriate time before responding back. i.e., there is not an explicit contract for waits, but it is implicit in the time taken by the<code>shouldRetry \r\n    </code> method to return. </p>\r\n<p></p>"
  syntax:
    content: public boolean shouldRetry(int httpResponseCode, Exception lastException)
    parameters:
    - id: httpResponseCode
      type: f75371fa
      description: <p>the HTTP response code received </p>
    - id: lastException
      type: 8a99d4b0
      description: <p>any exceptions encountered while processing the last request </p>
    return:
      type: 4fc6e284
      description: <p>boolean indicating whether the request should be retried </p>
  overridden: com.microsoft.azure.datalake.store.retrypolicies._retry_policy.shouldRetry(int,Exception)
references:
- uid: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.ExponentialBackoffPolicyforMSI*
  name: ExponentialBackoffPolicyforMSI
  nameWithType: ExponentialBackoffPolicyforMSI.ExponentialBackoffPolicyforMSI
  fullName: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI.ExponentialBackoffPolicyforMSI
  package: com.microsoft.azure.datalake.store.retrypolicies
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 8a99d4b0
  spec.java:
  - name: Exception
    fullName: Exception
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.datalake.store.retrypolicies._exponential_backoff_policyfor_m_s_i.shouldRetry*
  name: shouldRetry
  nameWithType: ExponentialBackoffPolicyforMSI.shouldRetry
  fullName: com.microsoft.azure.datalake.store.retrypolicies.ExponentialBackoffPolicyforMSI.shouldRetry
  package: com.microsoft.azure.datalake.store.retrypolicies
- uid: com.microsoft.azure.datalake.store.retrypolicies._retry_policy
  parent: com.microsoft.azure.datalake.store.retrypolicies
  href: com.microsoft.azure.datalake.store.retrypolicies._retry_policy.yml
  name: RetryPolicy
  nameWithType: RetryPolicy
  fullName: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy
  type: Interface
  summary: >-
    <p>the RetryPolicy controls whether a failed request should be retried, and how long to wait before retrying. </p>

    <p>Implementations of this interface implement different retry policies. </p>
  syntax:
    content: public interface RetryPolicy
- uid: com.microsoft.azure.datalake.store.retrypolicies._retry_policy.shouldRetry(int,Exception)
  parent: com.microsoft.azure.datalake.store.retrypolicies._retry_policy
  href: com.microsoft.azure.datalake.store.retrypolicies._retry_policy.yml
  name: shouldRetry(int httpResponseCode, Exception lastException)
  nameWithType: RetryPolicy.shouldRetry(int httpResponseCode, Exception lastException)
  fullName: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy.shouldRetry(int httpResponseCode, Exception lastException)
  type: Method
  summary: >-
    <p>boolean indicating whether a failed request should be retried. Implementations can use the HTTP response code and any exceptions from the last failure to decide whether to retry. </p>

    <p>If the retry policy requires a wait before the next try, then the<code>shouldRetry 

        </code> method should wait for the appropriate time before responding back. i.e., there is not an explicit contract for waits, but it is implicit in the time taken by the<code>shouldRetry 

        </code> method to return. </p>

    <p></p>
  syntax:
    content: public boolean shouldRetry(int httpResponseCode, Exception lastException)
    parameters:
    - id: httpResponseCode
      type: f75371fa
      description: <p>the HTTP response code received </p>
    - id: lastException
      type: 8a99d4b0
      description: <p>any exceptions encountered while processing the last request </p>
    return:
      type: 4fc6e284
      description: <p>boolean indicating whether the request should be retried </p>
