### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.EffectiveRoute"
fullName: "com.microsoft.azure.management.network.EffectiveRoute"
name: "EffectiveRoute"
nameWithType: "EffectiveRoute"
summary: "Effective Route."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class EffectiveRoute"
constructors:
- uid: "com.microsoft.azure.management.network.EffectiveRoute.EffectiveRoute()"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.EffectiveRoute()"
  name: "EffectiveRoute()"
  nameWithType: "EffectiveRoute.EffectiveRoute()"
  syntax: "public EffectiveRoute()"
methods:
- uid: "com.microsoft.azure.management.network.EffectiveRoute.addressPrefix()"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.addressPrefix()"
  name: "addressPrefix()"
  nameWithType: "EffectiveRoute.addressPrefix()"
  summary: "Get the address prefixes of the effective routes in CIDR notation."
  syntax: "public List<String> addressPrefix()"
  desc: "Get the address prefixes of the effective routes in CIDR notation."
  returns:
    description: "the addressPrefix value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.disableBgpRoutePropagation()"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.disableBgpRoutePropagation()"
  name: "disableBgpRoutePropagation()"
  nameWithType: "EffectiveRoute.disableBgpRoutePropagation()"
  summary: "Get if true, on-premises routes are not propagated to the network interfaces in the subnet."
  syntax: "public Boolean disableBgpRoutePropagation()"
  desc: "Get if true, on-premises routes are not propagated to the network interfaces in the subnet."
  returns:
    description: "the disableBgpRoutePropagation value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.name()"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.name()"
  name: "name()"
  nameWithType: "EffectiveRoute.name()"
  summary: "Get the name of the user defined route."
  syntax: "public String name()"
  desc: "Get the name of the user defined route. This is optional."
  returns:
    description: "the name value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.nextHopIpAddress()"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.nextHopIpAddress()"
  name: "nextHopIpAddress()"
  nameWithType: "EffectiveRoute.nextHopIpAddress()"
  summary: "Get the IP address of the next hop of the effective route."
  syntax: "public List<String> nextHopIpAddress()"
  desc: "Get the IP address of the next hop of the effective route."
  returns:
    description: "the nextHopIpAddress value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.nextHopType()"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.nextHopType()"
  name: "nextHopType()"
  nameWithType: "EffectiveRoute.nextHopType()"
  summary: "Get the type of Azure hop the packet should be sent to."
  syntax: "public RouteNextHopType nextHopType()"
  desc: "Get the type of Azure hop the packet should be sent to. Possible values include: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', 'None'."
  returns:
    description: "the nextHopType value"
    type: "<xref href=\"com.microsoft.azure.management.network.RouteNextHopType?alt=com.microsoft.azure.management.network.RouteNextHopType&text=RouteNextHopType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.source()"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.source()"
  name: "source()"
  nameWithType: "EffectiveRoute.source()"
  summary: "Get who created the route."
  syntax: "public EffectiveRouteSource source()"
  desc: "Get who created the route. Possible values include: 'Unknown', 'User', 'VirtualNetworkGateway', 'Default'."
  returns:
    description: "the source value"
    type: "<xref href=\"com.microsoft.azure.management.network.EffectiveRouteSource?alt=com.microsoft.azure.management.network.EffectiveRouteSource&text=EffectiveRouteSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.state()"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.state()"
  name: "state()"
  nameWithType: "EffectiveRoute.state()"
  summary: "Get the value of effective route."
  syntax: "public EffectiveRouteState state()"
  desc: "Get the value of effective route. Possible values include: 'Active', 'Invalid'."
  returns:
    description: "the state value"
    type: "<xref href=\"com.microsoft.azure.management.network.EffectiveRouteState?alt=com.microsoft.azure.management.network.EffectiveRouteState&text=EffectiveRouteState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.withAddressPrefix(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.withAddressPrefix(List<String> addressPrefix)"
  name: "withAddressPrefix(List<String> addressPrefix)"
  nameWithType: "EffectiveRoute.withAddressPrefix(List<String> addressPrefix)"
  summary: "Set the address prefixes of the effective routes in CIDR notation."
  parameters:
  - description: "the addressPrefix value to set"
    name: "addressPrefix"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EffectiveRoute withAddressPrefix(List<String> addressPrefix)"
  desc: "Set the address prefixes of the effective routes in CIDR notation."
  returns:
    description: "the EffectiveRoute object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.EffectiveRoute?alt=com.microsoft.azure.management.network.EffectiveRoute&text=EffectiveRoute\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.withDisableBgpRoutePropagation(java.lang.Boolean)"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.withDisableBgpRoutePropagation(Boolean disableBgpRoutePropagation)"
  name: "withDisableBgpRoutePropagation(Boolean disableBgpRoutePropagation)"
  nameWithType: "EffectiveRoute.withDisableBgpRoutePropagation(Boolean disableBgpRoutePropagation)"
  summary: "Set if true, on-premises routes are not propagated to the network interfaces in the subnet."
  parameters:
  - description: "the disableBgpRoutePropagation value to set"
    name: "disableBgpRoutePropagation"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EffectiveRoute withDisableBgpRoutePropagation(Boolean disableBgpRoutePropagation)"
  desc: "Set if true, on-premises routes are not propagated to the network interfaces in the subnet."
  returns:
    description: "the EffectiveRoute object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.EffectiveRoute?alt=com.microsoft.azure.management.network.EffectiveRoute&text=EffectiveRoute\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.withName(java.lang.String)"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.withName(String name)"
  name: "withName(String name)"
  nameWithType: "EffectiveRoute.withName(String name)"
  summary: "Set the name of the user defined route."
  parameters:
  - description: "the name value to set"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EffectiveRoute withName(String name)"
  desc: "Set the name of the user defined route. This is optional."
  returns:
    description: "the EffectiveRoute object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.EffectiveRoute?alt=com.microsoft.azure.management.network.EffectiveRoute&text=EffectiveRoute\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.withNextHopIpAddress(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.withNextHopIpAddress(List<String> nextHopIpAddress)"
  name: "withNextHopIpAddress(List<String> nextHopIpAddress)"
  nameWithType: "EffectiveRoute.withNextHopIpAddress(List<String> nextHopIpAddress)"
  summary: "Set the IP address of the next hop of the effective route."
  parameters:
  - description: "the nextHopIpAddress value to set"
    name: "nextHopIpAddress"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EffectiveRoute withNextHopIpAddress(List<String> nextHopIpAddress)"
  desc: "Set the IP address of the next hop of the effective route."
  returns:
    description: "the EffectiveRoute object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.EffectiveRoute?alt=com.microsoft.azure.management.network.EffectiveRoute&text=EffectiveRoute\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.withNextHopType(com.microsoft.azure.management.network.RouteNextHopType)"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.withNextHopType(RouteNextHopType nextHopType)"
  name: "withNextHopType(RouteNextHopType nextHopType)"
  nameWithType: "EffectiveRoute.withNextHopType(RouteNextHopType nextHopType)"
  summary: "Set the type of Azure hop the packet should be sent to."
  parameters:
  - description: "the nextHopType value to set"
    name: "nextHopType"
    type: "<xref href=\"com.microsoft.azure.management.network.RouteNextHopType?alt=com.microsoft.azure.management.network.RouteNextHopType&text=RouteNextHopType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EffectiveRoute withNextHopType(RouteNextHopType nextHopType)"
  desc: "Set the type of Azure hop the packet should be sent to. Possible values include: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', 'None'."
  returns:
    description: "the EffectiveRoute object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.EffectiveRoute?alt=com.microsoft.azure.management.network.EffectiveRoute&text=EffectiveRoute\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.withSource(com.microsoft.azure.management.network.EffectiveRouteSource)"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.withSource(EffectiveRouteSource source)"
  name: "withSource(EffectiveRouteSource source)"
  nameWithType: "EffectiveRoute.withSource(EffectiveRouteSource source)"
  summary: "Set who created the route."
  parameters:
  - description: "the source value to set"
    name: "source"
    type: "<xref href=\"com.microsoft.azure.management.network.EffectiveRouteSource?alt=com.microsoft.azure.management.network.EffectiveRouteSource&text=EffectiveRouteSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EffectiveRoute withSource(EffectiveRouteSource source)"
  desc: "Set who created the route. Possible values include: 'Unknown', 'User', 'VirtualNetworkGateway', 'Default'."
  returns:
    description: "the EffectiveRoute object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.EffectiveRoute?alt=com.microsoft.azure.management.network.EffectiveRoute&text=EffectiveRoute\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.EffectiveRoute.withState(com.microsoft.azure.management.network.EffectiveRouteState)"
  fullName: "com.microsoft.azure.management.network.EffectiveRoute.withState(EffectiveRouteState state)"
  name: "withState(EffectiveRouteState state)"
  nameWithType: "EffectiveRoute.withState(EffectiveRouteState state)"
  summary: "Set the value of effective route."
  parameters:
  - description: "the state value to set"
    name: "state"
    type: "<xref href=\"com.microsoft.azure.management.network.EffectiveRouteState?alt=com.microsoft.azure.management.network.EffectiveRouteState&text=EffectiveRouteState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EffectiveRoute withState(EffectiveRouteState state)"
  desc: "Set the value of effective route. Possible values include: 'Active', 'Invalid'."
  returns:
    description: "the EffectiveRoute object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.EffectiveRoute?alt=com.microsoft.azure.management.network.EffectiveRoute&text=EffectiveRoute\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Effective Route."
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
