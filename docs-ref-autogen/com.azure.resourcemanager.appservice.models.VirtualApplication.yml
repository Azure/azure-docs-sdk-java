### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.models.VirtualApplication"
fullName: "com.azure.resourcemanager.appservice.models.VirtualApplication"
name: "VirtualApplication"
nameWithType: "VirtualApplication"
summary: "Virtual application in an app."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VirtualApplication"
constructors:
- uid: "com.azure.resourcemanager.appservice.models.VirtualApplication.VirtualApplication()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualApplication.VirtualApplication()"
  name: "VirtualApplication()"
  nameWithType: "VirtualApplication.VirtualApplication()"
  syntax: "public VirtualApplication()"
methods:
- uid: "com.azure.resourcemanager.appservice.models.VirtualApplication.physicalPath()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualApplication.physicalPath()"
  name: "physicalPath()"
  nameWithType: "VirtualApplication.physicalPath()"
  summary: "Get the physical<wbr>Path property: Physical path."
  syntax: "public String physicalPath()"
  desc: "Get the physicalPath property: Physical path."
  returns:
    description: "the physicalPath value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualApplication.preloadEnabled()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualApplication.preloadEnabled()"
  name: "preloadEnabled()"
  nameWithType: "VirtualApplication.preloadEnabled()"
  summary: "Get the preload<wbr>Enabled property: <code>true</code> if preloading is enabled; otherwise, <code>false</code>."
  syntax: "public Boolean preloadEnabled()"
  desc: "Get the preloadEnabled property: <code>true</code> if preloading is enabled; otherwise, <code>false</code>."
  returns:
    description: "the preloadEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualApplication.validate()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualApplication.validate()"
  name: "validate()"
  nameWithType: "VirtualApplication.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appservice.models.VirtualApplication.virtualDirectories()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualApplication.virtualDirectories()"
  name: "virtualDirectories()"
  nameWithType: "VirtualApplication.virtualDirectories()"
  summary: "Get the virtual<wbr>Directories property: Virtual directories for virtual application."
  syntax: "public List<VirtualDirectory> virtualDirectories()"
  desc: "Get the virtualDirectories property: Virtual directories for virtual application."
  returns:
    description: "the virtualDirectories value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.models.VirtualDirectory?alt=com.azure.resourcemanager.appservice.models.VirtualDirectory&text=VirtualDirectory\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.models.VirtualApplication.virtualPath()"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualApplication.virtualPath()"
  name: "virtualPath()"
  nameWithType: "VirtualApplication.virtualPath()"
  summary: "Get the virtual<wbr>Path property: Virtual path."
  syntax: "public String virtualPath()"
  desc: "Get the virtualPath property: Virtual path."
  returns:
    description: "the virtualPath value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualApplication.withPhysicalPath(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualApplication.withPhysicalPath(String physicalPath)"
  name: "withPhysicalPath(String physicalPath)"
  nameWithType: "VirtualApplication.withPhysicalPath(String physicalPath)"
  summary: "Set the physical<wbr>Path property: Physical path."
  parameters:
  - description: "the physicalPath value to set."
    name: "physicalPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualApplication withPhysicalPath(String physicalPath)"
  desc: "Set the physicalPath property: Physical path."
  returns:
    description: "the VirtualApplication object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VirtualApplication?alt=com.azure.resourcemanager.appservice.models.VirtualApplication&text=VirtualApplication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualApplication.withPreloadEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualApplication.withPreloadEnabled(Boolean preloadEnabled)"
  name: "withPreloadEnabled(Boolean preloadEnabled)"
  nameWithType: "VirtualApplication.withPreloadEnabled(Boolean preloadEnabled)"
  summary: "Set the preload<wbr>Enabled property: <code>true</code> if preloading is enabled; otherwise, <code>false</code>."
  parameters:
  - description: "the preloadEnabled value to set."
    name: "preloadEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualApplication withPreloadEnabled(Boolean preloadEnabled)"
  desc: "Set the preloadEnabled property: <code>true</code> if preloading is enabled; otherwise, <code>false</code>."
  returns:
    description: "the VirtualApplication object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VirtualApplication?alt=com.azure.resourcemanager.appservice.models.VirtualApplication&text=VirtualApplication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualApplication.withVirtualDirectories(java.util.List<com.azure.resourcemanager.appservice.models.VirtualDirectory>)"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualApplication.withVirtualDirectories(List<VirtualDirectory> virtualDirectories)"
  name: "withVirtualDirectories(List<VirtualDirectory> virtualDirectories)"
  nameWithType: "VirtualApplication.withVirtualDirectories(List<VirtualDirectory> virtualDirectories)"
  summary: "Set the virtual<wbr>Directories property: Virtual directories for virtual application."
  parameters:
  - description: "the virtualDirectories value to set."
    name: "virtualDirectories"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.models.VirtualDirectory?alt=com.azure.resourcemanager.appservice.models.VirtualDirectory&text=VirtualDirectory\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VirtualApplication withVirtualDirectories(List<VirtualDirectory> virtualDirectories)"
  desc: "Set the virtualDirectories property: Virtual directories for virtual application."
  returns:
    description: "the VirtualApplication object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VirtualApplication?alt=com.azure.resourcemanager.appservice.models.VirtualApplication&text=VirtualApplication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.VirtualApplication.withVirtualPath(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.models.VirtualApplication.withVirtualPath(String virtualPath)"
  name: "withVirtualPath(String virtualPath)"
  nameWithType: "VirtualApplication.withVirtualPath(String virtualPath)"
  summary: "Set the virtual<wbr>Path property: Virtual path."
  parameters:
  - description: "the virtualPath value to set."
    name: "virtualPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualApplication withVirtualPath(String virtualPath)"
  desc: "Set the virtualPath property: Virtual path."
  returns:
    description: "the VirtualApplication object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.VirtualApplication?alt=com.azure.resourcemanager.appservice.models.VirtualApplication&text=VirtualApplication\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Virtual application in an app."
metadata: {}
package: "com.azure.resourcemanager.appservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.16.0
