### YamlMime:JavaType
methods:
- com.microsoft.applicationinsights.extensibility.TelemetryProcessor.process(Telemetry)
nameWithType: TelemetryProcessor
syntax: public interface TelemetryProcessor
type: interface
uid: com.microsoft.applicationinsights.extensibility.TelemetryProcessor
fullName: com.microsoft.applicationinsights.extensibility.TelemetryProcessor
name: TelemetryProcessor
package: com.microsoft.applicationinsights.extensibility
summary: "<p>The method gets a <xref uid=\"\" data-throw-if-not-resolved=\"false\">Telemetry</xref> instance that is ready to be sent. This is your chance to approve or deny it. Returning 'false' means that the Telemetry will not be sent while 'true' means you approve it.</p>\r\n<p>The Telemetry might go through other filters though, that might deny its sending.</p>\r\n<p>To enable this processor you need to add it in the ApplicationInsights.xml like this:</p>\r\n<p>\r\n  <pre>\r\n    <code>&lt;TelemetryProcessors&gt;\r\n        &lt;CustomProcessors&gt;\r\n            &lt;Processor type=\"full.path.to.Filter\"&gt;\r\n                &lt;Add name=\"Property\" value=\"stringValue\"/&gt;\r\n            &lt;/Processor&gt;\r\n        &lt;/CustomProcessors&gt;\r\n    &lt;/TelemetryProcessors&gt;\r\n    </code> \r\n*</pre>\r\n</p>\r\n<p>Note that the class defines a property named 'Property' which is configured too. Every property that you wish to configure needs to have a 'setX' public method like 'setProperty' in this example <b>Exceptions thrown from the 'setX' methods will be caught by the framework that will ignore the filter</b></p>\r\n<p>Created by gupele on 7/26/2016. </p>"
metadata: {}
