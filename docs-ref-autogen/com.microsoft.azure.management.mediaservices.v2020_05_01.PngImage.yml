### YamlMime:JavaType
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.PngImage"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.PngImage"
name: "PngImage"
nameWithType: "PngImage"
summary: "Describes the properties for producing a series of PNG images from the input video."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Codec?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Video?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Image?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Codec?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Codec&text=Codec\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Codec.label()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Codec.label&text=label\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Codec.withLabel(java.lang.String)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Codec.withLabel&text=withLabel\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Image?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Image&text=Image\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Image.range()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Image.range&text=range\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Image.start()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Image.start&text=start\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Image.step()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Image.step&text=step\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Image.withRange(java.lang.String)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Image.withRange&text=withRange\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Image.withStart(java.lang.String)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Image.withStart&text=withStart\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Image.withStep(java.lang.String)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Image.withStep&text=withStep\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Video?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Video&text=Video\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Video.keyFrameInterval()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Video.keyFrameInterval&text=keyFrameInterval\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Video.stretchMode()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Video.stretchMode&text=stretchMode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Video.syncMode()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Video.syncMode&text=syncMode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Video.withKeyFrameInterval(org.joda.time.Period)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Video.withKeyFrameInterval&text=withKeyFrameInterval\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Video.withStretchMode(com.microsoft.azure.management.mediaservices.v2020_05_01.StretchMode)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Video.withStretchMode&text=withStretchMode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Video.withSyncMode(com.microsoft.azure.management.mediaservices.v2020_05_01.VideoSyncMode)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Video.withSyncMode&text=withSyncMode\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **PngImage**</br> extends <xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Image?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Image&text=Image\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.PngImage.PngImage()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.PngImage.PngImage()"
  name: "PngImage()"
  nameWithType: "PngImage.PngImage()"
  syntax: "public PngImage()"
methods:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.PngImage.layers()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.PngImage.layers()"
  name: "layers()"
  nameWithType: "PngImage.layers()"
  summary: "Get a collection of output PNG image layers to be produced by the encoder."
  syntax: "public List<PngLayer> layers()"
  desc: "Get a collection of output PNG image layers to be produced by the encoder."
  returns:
    description: "the layers value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.PngLayer?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.PngLayer&text=PngLayer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.PngImage.withLayers(java.util.List<com.microsoft.azure.management.mediaservices.v2020_05_01.PngLayer>)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.PngImage.withLayers(List<PngLayer> layers)"
  name: "withLayers(List<PngLayer> layers)"
  nameWithType: "PngImage.withLayers(List<PngLayer> layers)"
  summary: "Set a collection of output PNG image layers to be produced by the encoder."
  parameters:
  - description: "the layers value to set"
    name: "layers"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.PngLayer?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.PngLayer&text=PngLayer\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PngImage withLayers(List<PngLayer> layers)"
  desc: "Set a collection of output PNG image layers to be produced by the encoder."
  returns:
    description: "the PngImage object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.PngImage?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.PngImage&text=PngImage\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes the properties for producing a series of PNG images from the input video."
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
