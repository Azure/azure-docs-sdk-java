### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.datalake.models.PathInfo"
  id: "PathInfo"
  parent: "com.azure.storage.file.datalake.models"
  children:
  - "com.azure.storage.file.datalake.models.PathInfo.PathInfo(java.lang.String,java.time.OffsetDateTime)"
  - "com.azure.storage.file.datalake.models.PathInfo.getETag()"
  - "com.azure.storage.file.datalake.models.PathInfo.getLastModified()"
  langs:
  - "java"
  name: "PathInfo"
  nameWithType: "PathInfo"
  fullName: "com.azure.storage.file.datalake.models.PathInfo"
  type: "Class"
  package: "com.azure.storage.file.datalake.models"
  summary: "`PathInfo` contains basic information about a path that is returned by the service after certain operations."
  syntax:
    content: "public class PathInfo"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.datalake.models.PathInfo.PathInfo(java.lang.String,java.time.OffsetDateTime)"
  id: "PathInfo(java.lang.String,java.time.OffsetDateTime)"
  parent: "com.azure.storage.file.datalake.models.PathInfo"
  langs:
  - "java"
  name: "PathInfo(String eTag, OffsetDateTime lastModified)"
  nameWithType: "PathInfo.PathInfo(String eTag, OffsetDateTime lastModified)"
  fullName: "com.azure.storage.file.datalake.models.PathInfo.PathInfo(String eTag, OffsetDateTime lastModified)"
  overload: "com.azure.storage.file.datalake.models.PathInfo.PathInfo*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.models"
  summary: "Constructs a <xref uid=\"com.azure.storage.file.datalake.models.PathInfo\" data-throw-if-not-resolved=\"false\">PathInfo</xref>"
  syntax:
    content: "public PathInfo(String eTag, OffsetDateTime lastModified)"
    parameters:
    - id: "eTag"
      type: "java.lang.String"
      description: "ETag of the path."
    - id: "lastModified"
      type: "java.time.OffsetDateTime"
      description: "Datetime when the path was last modified."
- uid: "com.azure.storage.file.datalake.models.PathInfo.getETag()"
  id: "getETag()"
  parent: "com.azure.storage.file.datalake.models.PathInfo"
  langs:
  - "java"
  name: "getETag()"
  nameWithType: "PathInfo.getETag()"
  fullName: "com.azure.storage.file.datalake.models.PathInfo.getETag()"
  overload: "com.azure.storage.file.datalake.models.PathInfo.getETag*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "Get the eTag property: The eTag property."
  syntax:
    content: "public String getETag()"
    return:
      type: "java.lang.String"
      description: "the eTag value."
- uid: "com.azure.storage.file.datalake.models.PathInfo.getLastModified()"
  id: "getLastModified()"
  parent: "com.azure.storage.file.datalake.models.PathInfo"
  langs:
  - "java"
  name: "getLastModified()"
  nameWithType: "PathInfo.getLastModified()"
  fullName: "com.azure.storage.file.datalake.models.PathInfo.getLastModified()"
  overload: "com.azure.storage.file.datalake.models.PathInfo.getLastModified*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "Get the last modified property: The last modified property."
  syntax:
    content: "public OffsetDateTime getLastModified()"
    return:
      type: "java.time.OffsetDateTime"
      description: "the time when the file was last modified"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.time.OffsetDateTime"
  spec.java:
  - uid: "java.time.OffsetDateTime"
    name: "OffsetDateTime"
    fullName: "java.time.OffsetDateTime"
- uid: "com.azure.storage.file.datalake.models.PathInfo.PathInfo*"
  name: "PathInfo"
  nameWithType: "PathInfo.PathInfo"
  fullName: "com.azure.storage.file.datalake.models.PathInfo.PathInfo"
  package: "com.azure.storage.file.datalake.models"
- uid: "com.azure.storage.file.datalake.models.PathInfo.getETag*"
  name: "getETag"
  nameWithType: "PathInfo.getETag"
  fullName: "com.azure.storage.file.datalake.models.PathInfo.getETag"
  package: "com.azure.storage.file.datalake.models"
- uid: "com.azure.storage.file.datalake.models.PathInfo.getLastModified*"
  name: "getLastModified"
  nameWithType: "PathInfo.getLastModified"
  fullName: "com.azure.storage.file.datalake.models.PathInfo.getLastModified"
  package: "com.azure.storage.file.datalake.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
