### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.RetryPolicy(int retryCount, Duration minBackOff, Duration maxBackOff, Duration deltaBackOff)
  name: RetryPolicy(int retryCount, Duration minBackOff, Duration maxBackOff, Duration deltaBackOff)
  nameWithType: RetryPolicy.RetryPolicy(int retryCount, Duration minBackOff, Duration maxBackOff, Duration deltaBackOff)
  parameters:
  - description: <p>The number of retry attempts. </p>
    name: retryCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Minimum backoff time for exponential backoff policy. </p>
    name: minBackOff
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum backoff time for exponential backoff policy. </p>
    name: maxBackOff
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  - description: <p>Delta backoff time for exponential backoff policy. </p>
    name: deltaBackOff
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of the <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy" data-throw-if-not-resolved="false" data-raw-source="RetryPolicy"></xref> class.</p>

    <p></p>
  syntax: public RetryPolicy(int retryCount, Duration minBackOff, Duration maxBackOff, Duration deltaBackOff)
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.RetryPolicy(int,Duration,Duration,Duration)
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount)
  name: RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount)
  nameWithType: RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy" data-throw-if-not-resolved="false" data-raw-source="ITransientErrorDetectionStrategy"></xref> that is responsible for detecting transient conditions. </p>
    name: errorDetectionStrategy
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy&text=ITransientErrorDetectionStrategy" data-throw-if-not-resolved="False"/>
  - description: <p>The number of retry attempts. </p>
    name: retryCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy" data-throw-if-not-resolved="false" data-raw-source="RetryPolicy"></xref> class with the specified number of retry attempts and default fixed time interval between retries.</p>

    <p></p>
  syntax: public RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount)
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy,int)
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, Duration retryInterval)
  name: RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, Duration retryInterval)
  nameWithType: RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, Duration retryInterval)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy" data-throw-if-not-resolved="false" data-raw-source="ITransientErrorDetectionStrategy"></xref> that is responsible for detecting transient conditions. </p>
    name: errorDetectionStrategy
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy&text=ITransientErrorDetectionStrategy" data-throw-if-not-resolved="False"/>
  - description: <p>The number of retry attempts. </p>
    name: retryCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>The interval between retries. </p>
    name: retryInterval
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy" data-throw-if-not-resolved="false" data-raw-source="RetryPolicy"></xref> class with the specified number of retry attempts and fixed time interval between retries.</p>

    <p></p>
  syntax: public RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, Duration retryInterval)
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy,int,Duration)
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, Duration initialInterval, Duration increment)
  name: RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, Duration initialInterval, Duration increment)
  nameWithType: RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, Duration initialInterval, Duration increment)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy" data-throw-if-not-resolved="false" data-raw-source="ITransientErrorDetectionStrategy"></xref> that is responsible for detecting transient conditions. </p>
    name: errorDetectionStrategy
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy&text=ITransientErrorDetectionStrategy" data-throw-if-not-resolved="False"/>
  - description: <p>The number of retry attempts. </p>
    name: retryCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>The initial interval that will apply for the first retry. </p>
    name: initialInterval
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  - description: <p>The incremental time value that will be used to calculate the progressive delay between retries. </p>
    name: increment
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy" data-throw-if-not-resolved="false" data-raw-source="RetryPolicy"></xref> class with the specified number of retry attempts and parameters defining the progressive delay between retries.</p>

    <p></p>
  syntax: public RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, Duration initialInterval, Duration increment)
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy,int,Duration,Duration)
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, Duration minBackoff, Duration maxBackoff, Duration deltaBackoff)
  name: RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, Duration minBackoff, Duration maxBackoff, Duration deltaBackoff)
  nameWithType: RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, Duration minBackoff, Duration maxBackoff, Duration deltaBackoff)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy" data-throw-if-not-resolved="false" data-raw-source="ITransientErrorDetectionStrategy"></xref> that is responsible for detecting transient conditions. </p>
    name: errorDetectionStrategy
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy&text=ITransientErrorDetectionStrategy" data-throw-if-not-resolved="False"/>
  - description: <p>The number of retry attempts. </p>
    name: retryCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>The minimum backoff time. </p>
    name: minBackoff
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum backoff time. </p>
    name: maxBackoff
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  - description: <p>The time value that will be used to calculate a random delta in the exponential delay between retries. </p>
    name: deltaBackoff
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy" data-throw-if-not-resolved="false" data-raw-source="RetryPolicy"></xref> class with the specified number of retry attempts and backoff parameters for calculating the exponential delay between retries.</p>

    <p></p>
  syntax: public RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, Duration minBackoff, Duration maxBackoff, Duration deltaBackoff)
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy,int,Duration,Duration,Duration)
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, RetryStrategy retryStrategy)
  name: RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, RetryStrategy retryStrategy)
  nameWithType: RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, RetryStrategy retryStrategy)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy" data-throw-if-not-resolved="false" data-raw-source="ITransientErrorDetectionStrategy"></xref> that is responsible for detecting transient conditions. </p>
    name: errorDetectionStrategy
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy&text=ITransientErrorDetectionStrategy" data-throw-if-not-resolved="False"/>
  - description: <p>The strategy to use for this retry policy. </p>
    name: retryStrategy
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryStrategy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryStrategy&text=RetryStrategy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy" data-throw-if-not-resolved="false" data-raw-source="RetryPolicy"></xref> class with the specified number of retry attempts and parameters defining the progressive delay between retries.</p>

    <p></p>
  syntax: public RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, RetryStrategy retryStrategy)
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.RetryPolicy(ITransientErrorDetectionStrategy,RetryStrategy)
fields:
- field:
    type: Event&lt;EventHandler&lt;<xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryingEventArgs?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryingEventArgs&text=RetryingEventArgs" data-throw-if-not-resolved="False"/>&gt;&gt;
  fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.retrying
  name: retrying
  nameWithType: RetryPolicy.retrying
  summary: <p>An instance of a callback delegate that will be invoked whenever a retry condition is encountered. </p>
  syntax: public Event<EventHandler<RetryingEventArgs>> retrying
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.retrying
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.executeAction(Callable<ResultT> callable)
  name: executeAction(Callable<ResultT> callable)
  nameWithType: RetryPolicy.executeAction(Callable<ResultT> callable)
  parameters:
  - description: <p>A delegate that represents the executable action that returns the result of type <em>ResultT</em> . </p>
    name: callable
    type: <xref href="Callable%3CResultT%3E?alt=Callable%3CResultT%3E&text=Callable%3CResultT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The result from the action. </p>
    type: <xref href="%3CResultT%3E+ResultT?alt=%3CResultT%3E+ResultT&text=%3CResultT%3E+ResultT" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Repetitively executes the specified action while it satisfies the current retry policy. </p>

    <p></p>
  syntax: public <ResultT> ResultT executeAction(Callable<ResultT> callable)
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.executeAction(Callable<ResultT>)
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.executeAction(Runnable action)
  name: executeAction(Runnable action)
  nameWithType: RetryPolicy.executeAction(Runnable action)
  parameters:
  - description: <p>A delegate that represents the executable action that doesn't return any results. </p>
    name: action
    type: <xref href="Runnable?alt=Runnable&text=Runnable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Repetitively executes the specified action while it satisfies the current retry policy.</p>

    <p></p>
  syntax: public void executeAction(Runnable action)
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.executeAction(Runnable)
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getDefaultExponential()
  name: getDefaultExponential()
  nameWithType: RetryPolicy.getDefaultExponential()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
  summary: <p>Returns a default policy that implements a random exponential retry interval configured with the default <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.FixedInterval" data-throw-if-not-resolved="false" data-raw-source="FixedInterval"></xref> retry strategy. The default retry policy treats all caught exceptions as transient errors. </p>
  syntax: public static RetryPolicy getDefaultExponential()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getDefaultExponential()
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getDefaultFixed()
  name: getDefaultFixed()
  nameWithType: RetryPolicy.getDefaultFixed()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
  summary: <p>Returns a default policy that implements a fixed retry interval configured with the default <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.FixedInterval" data-throw-if-not-resolved="false" data-raw-source="FixedInterval"></xref> retry strategy. The default retry policy treats all caught exceptions as transient errors. </p>
  syntax: public static RetryPolicy getDefaultFixed()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getDefaultFixed()
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getDefaultProgressive()
  name: getDefaultProgressive()
  nameWithType: RetryPolicy.getDefaultProgressive()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
  summary: <p>Returns a default policy that implements a progressive retry interval configured with the default <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.Incremental" data-throw-if-not-resolved="false" data-raw-source="Incremental"></xref> retry strategy. The default retry policy treats all caught exceptions as transient errors. </p>
  syntax: public static RetryPolicy getDefaultProgressive()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getDefaultProgressive()
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getDefaultRetryPolicy()
  name: getDefaultRetryPolicy()
  nameWithType: RetryPolicy.getDefaultRetryPolicy()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the default retry policy. 5 retries at 1 second intervals. </p>
  syntax: public static RetryPolicy getDefaultRetryPolicy()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getDefaultRetryPolicy()
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getDeltaBackOff()
  name: getDeltaBackOff()
  nameWithType: RetryPolicy.getDeltaBackOff()
  returns:
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public Duration getDeltaBackOff()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getDeltaBackOff()
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getErrorDetectionStrategy()
  name: getErrorDetectionStrategy()
  nameWithType: RetryPolicy.getErrorDetectionStrategy()
  returns:
    type: final <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.ITransientErrorDetectionStrategy&text=ITransientErrorDetectionStrategy" data-throw-if-not-resolved="False"/>
  syntax: public final ITransientErrorDetectionStrategy getErrorDetectionStrategy()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getErrorDetectionStrategy()
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getExponentialRetryStrategy()
  name: getExponentialRetryStrategy()
  nameWithType: RetryPolicy.getExponentialRetryStrategy()
  returns:
    description: <p>The RetryStrategy </p>
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryStrategy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryStrategy&text=RetryStrategy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Marshals this instance into the TFH library RetryStrategy type.</p>

    <p></p>
  syntax: public RetryStrategy getExponentialRetryStrategy()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getExponentialRetryStrategy()
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getMaxBackOff()
  name: getMaxBackOff()
  nameWithType: RetryPolicy.getMaxBackOff()
  returns:
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public Duration getMaxBackOff()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getMaxBackOff()
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getMinBackOff()
  name: getMinBackOff()
  nameWithType: RetryPolicy.getMinBackOff()
  returns:
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public Duration getMinBackOff()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getMinBackOff()
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getNoRetry()
  name: getNoRetry()
  nameWithType: RetryPolicy.getNoRetry()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
  summary: <p>Returns a default policy that performs no retries, but invokes the action only once. </p>
  syntax: public static RetryPolicy getNoRetry()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getNoRetry()
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getRetryCount()
  name: getRetryCount()
  nameWithType: RetryPolicy.getRetryCount()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int getRetryCount()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getRetryCount()
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getRetryStrategy()
  name: getRetryStrategy()
  nameWithType: RetryPolicy.getRetryStrategy()
  returns:
    type: final <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryStrategy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryStrategy&text=RetryStrategy" data-throw-if-not-resolved="False"/>
  syntax: public final RetryStrategy getRetryStrategy()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.getRetryStrategy()
- fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.toString()
  name: toString()
  nameWithType: RetryPolicy.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>String representation of <xref uid="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy" data-throw-if-not-resolved="false" data-raw-source="RetryPolicy"></xref>. </p>
  syntax: public String toString()
  uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.toString()
nameWithType: RetryPolicy
syntax: public class RetryPolicy
type: class
uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy
fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy
name: RetryPolicy
package: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling
summary: <p>Provides the base implementation of the retry mechanism for unreliable actions and transient conditions. </p>
metadata: {}
