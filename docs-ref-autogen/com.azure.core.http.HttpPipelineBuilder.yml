### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.HttpPipelineBuilder"
  id: "HttpPipelineBuilder"
  parent: "com.azure.core.http"
  children:
  - "com.azure.core.http.HttpPipelineBuilder.HttpPipelineBuilder()"
  - "com.azure.core.http.HttpPipelineBuilder.build()"
  - "com.azure.core.http.HttpPipelineBuilder.httpClient(com.azure.core.http.HttpClient)"
  - "com.azure.core.http.HttpPipelineBuilder.policies(com.azure.core.http.policy.HttpPipelinePolicy...)"
  langs:
  - "java"
  name: "HttpPipelineBuilder"
  nameWithType: "HttpPipelineBuilder"
  fullName: "com.azure.core.http.HttpPipelineBuilder"
  type: "Class"
  package: "com.azure.core.http"
  summary: "This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\">HttpPipeline</xref>, calling <xref uid=\"com.azure.core.http.HttpPipelineBuilder.build()\" data-throw-if-not-resolved=\"false\">build</xref> constructs an instance of the pipeline.\n\nA pipeline is configured with a HttpClient that sends the request, if no client is set a default is used. A pipeline may be configured with a list of policies that are applied to each request.\n\n**Code Samples**\n\nCreate a pipeline without configuration\n\n```java\nnew HttpPipelineBuilder()\n     .build();\n```\n\nCreate a pipeline using the default HTTP client and a retry policy\n\n```java\nnew HttpPipelineBuilder()\n     .httpClient(HttpClient.createDefault())\n     .policies(new RetryPolicy())\n     .build();\n```"
  syntax:
    content: "public class HttpPipelineBuilder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.HttpPipelineBuilder.HttpPipelineBuilder()"
  id: "HttpPipelineBuilder()"
  parent: "com.azure.core.http.HttpPipelineBuilder"
  langs:
  - "java"
  name: "HttpPipelineBuilder()"
  nameWithType: "HttpPipelineBuilder.HttpPipelineBuilder()"
  fullName: "com.azure.core.http.HttpPipelineBuilder.HttpPipelineBuilder()"
  overload: "com.azure.core.http.HttpPipelineBuilder.HttpPipelineBuilder*"
  type: "Constructor"
  package: "com.azure.core.http"
  summary: "Creates a new instance of HttpPipelineBuilder that can configure options for the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\">HttpPipeline</xref> before creating an instance of it."
  syntax:
    content: "public HttpPipelineBuilder()"
- uid: "com.azure.core.http.HttpPipelineBuilder.build()"
  id: "build()"
  parent: "com.azure.core.http.HttpPipelineBuilder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "HttpPipelineBuilder.build()"
  fullName: "com.azure.core.http.HttpPipelineBuilder.build()"
  overload: "com.azure.core.http.HttpPipelineBuilder.build*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Creates a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\">HttpPipeline</xref> based on options set in the Builder. Every time `build()` is called, a new instance of <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\">HttpPipeline</xref> is created. If HttpClient is not set then the <xref uid=\"com.azure.core.http.HttpClient.createDefault()\" data-throw-if-not-resolved=\"false\">default HttpClient</xref> is used."
  syntax:
    content: "public HttpPipeline build()"
    return:
      type: "com.azure.core.http.HttpPipeline"
      description: "A HttpPipeline with the options set from the builder."
- uid: "com.azure.core.http.HttpPipelineBuilder.httpClient(com.azure.core.http.HttpClient)"
  id: "httpClient(com.azure.core.http.HttpClient)"
  parent: "com.azure.core.http.HttpPipelineBuilder"
  langs:
  - "java"
  name: "httpClient(HttpClient httpClient)"
  nameWithType: "HttpPipelineBuilder.httpClient(HttpClient httpClient)"
  fullName: "com.azure.core.http.HttpPipelineBuilder.httpClient(HttpClient httpClient)"
  overload: "com.azure.core.http.HttpPipelineBuilder.httpClient*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Sets the HttpClient that the pipeline will use to send requests."
  syntax:
    content: "public HttpPipelineBuilder httpClient(HttpClient httpClient)"
    parameters:
    - id: "httpClient"
      type: "com.azure.core.http.HttpClient"
      description: "The HttpClient the pipeline will use when sending requests."
    return:
      type: "com.azure.core.http.HttpPipelineBuilder"
      description: "The updated HttpPipelineBuilder object."
- uid: "com.azure.core.http.HttpPipelineBuilder.policies(com.azure.core.http.policy.HttpPipelinePolicy...)"
  id: "policies(com.azure.core.http.policy.HttpPipelinePolicy...)"
  parent: "com.azure.core.http.HttpPipelineBuilder"
  langs:
  - "java"
  name: "policies(HttpPipelinePolicy[] policies)"
  nameWithType: "HttpPipelineBuilder.policies(HttpPipelinePolicy[] policies)"
  fullName: "com.azure.core.http.HttpPipelineBuilder.policies(HttpPipelinePolicy[] policies)"
  overload: "com.azure.core.http.HttpPipelineBuilder.policies*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Adds <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\">policies</xref> to the set of policies that the pipeline will use when sending requests."
  syntax:
    content: "public HttpPipelineBuilder policies(HttpPipelinePolicy[] policies)"
    parameters:
    - id: "policies"
      type: "com.azure.core.http.policy.HttpPipelinePolicy[]"
      description: "Policies to add to the policy set."
    return:
      type: "com.azure.core.http.HttpPipelineBuilder"
      description: "The updated HttpPipelineBuilder object."
references:
- uid: "com.azure.core.http.HttpPipelineBuilder.HttpPipelineBuilder*"
  name: "HttpPipelineBuilder"
  nameWithType: "HttpPipelineBuilder.HttpPipelineBuilder"
  fullName: "com.azure.core.http.HttpPipelineBuilder.HttpPipelineBuilder"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpPipeline"
  name: "HttpPipeline"
  nameWithType: "HttpPipeline"
  fullName: "com.azure.core.http.HttpPipeline"
- uid: "com.azure.core.http.HttpPipelineBuilder.build*"
  name: "build"
  nameWithType: "HttpPipelineBuilder.build"
  fullName: "com.azure.core.http.HttpPipelineBuilder.build"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpClient"
  name: "HttpClient"
  nameWithType: "HttpClient"
  fullName: "com.azure.core.http.HttpClient"
- uid: "com.azure.core.http.HttpPipelineBuilder.httpClient*"
  name: "httpClient"
  nameWithType: "HttpPipelineBuilder.httpClient"
  fullName: "com.azure.core.http.HttpPipelineBuilder.httpClient"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.policy.HttpPipelinePolicy[]"
  spec.java:
  - uid: "com.azure.core.http.policy.HttpPipelinePolicy"
    name: "HttpPipelinePolicy"
    fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.core.http.HttpPipelineBuilder.policies*"
  name: "policies"
  nameWithType: "HttpPipelineBuilder.policies"
  fullName: "com.azure.core.http.HttpPipelineBuilder.policies"
  package: "com.azure.core.http"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
