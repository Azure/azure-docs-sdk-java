### YamlMime:JavaMember
nameWithType: DigitalTwinAsyncClient.updateDigitalTwin
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  name: updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  nameWithType: DigitalTwinAsyncClient.updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The JSON patch to apply to the specified digital twin. This argument can be created using <xref uid="com.microsoft.azure.sdk.iot.service.digitaltwin.UpdateOperationUtility" data-throw-if-not-resolved="false" data-raw-source="UpdateOperationUtility"></xref>. </p>
    name: digitalTwinUpdateOperations
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>void. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Updates a digital twin. </p>
  syntax: public Observable<Void> updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.updateDigitalTwin(String,List<Object>)
uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.updateDigitalTwin*
fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.updateDigitalTwin
name: updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
package: com.microsoft.azure.sdk.iot.service.digitaltwin
metadata: {}
