### YamlMime:JavaEnum
fields:
- fullName: com.microsoft.azure.storage.table.EdmType.BINARY
  name: BINARY
  nameWithType: EdmType.BINARY
  summary: >-
    <p>

      <b>Edm.Binary</b> Represents fixed- or variable-length binary data </p>
  uid: com.microsoft.azure.storage.table.EdmType.BINARY
- fullName: com.microsoft.azure.storage.table.EdmType.BOOLEAN
  name: BOOLEAN
  nameWithType: EdmType.BOOLEAN
  summary: >-
    <p>

      <b>Edm.Boolean</b> Represents the mathematical concept of binary-valued logic </p>
  uid: com.microsoft.azure.storage.table.EdmType.BOOLEAN
- fullName: com.microsoft.azure.storage.table.EdmType.BYTE
  name: BYTE
  nameWithType: EdmType.BYTE
  summary: >-
    <p>

      <b>Edm.Byte</b> Represents a unsigned 8-bit integer value </p>
  uid: com.microsoft.azure.storage.table.EdmType.BYTE
- fullName: com.microsoft.azure.storage.table.EdmType.DATE_TIME
  name: DATE_TIME
  nameWithType: EdmType.DATE_TIME
  summary: >-
    <p>

      <b>Edm.DateTime</b> Represents date and time with values ranging from 12:00:00 midnight, January 1, 1753 A.D. through 11:59:59 P.M, December 9999 A.D. </p>
  uid: com.microsoft.azure.storage.table.EdmType.DATE_TIME
- fullName: com.microsoft.azure.storage.table.EdmType.DATE_TIME_OFFSET
  name: DATE_TIME_OFFSET
  nameWithType: EdmType.DATE_TIME_OFFSET
  summary: >-
    <p>

      <b>Edm.DateTimeOffset</b> Represents date and time as an Offset in minutes from GMT, with values ranging from 12:00:00 midnight, January 1, 1753 A.D. through 11:59:59 P.M, December 9999 A.D </p>
  uid: com.microsoft.azure.storage.table.EdmType.DATE_TIME_OFFSET
- fullName: com.microsoft.azure.storage.table.EdmType.DECIMAL
  name: DECIMAL
  nameWithType: EdmType.DECIMAL
  summary: >-
    <p>

      <b>Edm.Decimal</b> Represents numeric values with fixed precision and scale. This type can describe a numeric value ranging from negative 10^255 + 1 to positive 10^255 -1 </p>
  uid: com.microsoft.azure.storage.table.EdmType.DECIMAL
- fullName: com.microsoft.azure.storage.table.EdmType.DOUBLE
  name: DOUBLE
  nameWithType: EdmType.DOUBLE
  summary: >-
    <p>

      <b>Edm.Double</b> Represents a floating point number with 15 digits precision that can represent values with approximate range of +/- 2.23e -308 through +/- 1.79e +308 </p>
  uid: com.microsoft.azure.storage.table.EdmType.DOUBLE
- fullName: com.microsoft.azure.storage.table.EdmType.GUID
  name: GUID
  nameWithType: EdmType.GUID
  summary: >-
    <p>

      <b>Edm.Guid</b> Represents a 16-byte (128-bit) unique identifier value </p>
  uid: com.microsoft.azure.storage.table.EdmType.GUID
- fullName: com.microsoft.azure.storage.table.EdmType.INT16
  name: INT16
  nameWithType: EdmType.INT16
  summary: >-
    <p>

      <b>Edm.Int16</b> Represents a signed 16-bit integer value </p>
  uid: com.microsoft.azure.storage.table.EdmType.INT16
- fullName: com.microsoft.azure.storage.table.EdmType.INT32
  name: INT32
  nameWithType: EdmType.INT32
  summary: >-
    <p>

      <b>Edm.Int32</b> Represents a signed 32-bit integer value </p>
  uid: com.microsoft.azure.storage.table.EdmType.INT32
- fullName: com.microsoft.azure.storage.table.EdmType.INT64
  name: INT64
  nameWithType: EdmType.INT64
  summary: >-
    <p>

      <b>Edm.Int64</b> Represents a signed 64-bit integer value </p>
  uid: com.microsoft.azure.storage.table.EdmType.INT64
- fullName: com.microsoft.azure.storage.table.EdmType.NULL
  name: "NULL"
  nameWithType: EdmType.NULL
  summary: >-
    <p>

      <b>Null</b> Represents the absence of a value </p>
  uid: com.microsoft.azure.storage.table.EdmType.NULL
- fullName: com.microsoft.azure.storage.table.EdmType.SBYTE
  name: SBYTE
  nameWithType: EdmType.SBYTE
  summary: >-
    <p>

      <b>Edm.SByte</b> Represents a signed 8-bit integer value </p>
  uid: com.microsoft.azure.storage.table.EdmType.SBYTE
- fullName: com.microsoft.azure.storage.table.EdmType.SINGLE
  name: SINGLE
  nameWithType: EdmType.SINGLE
  summary: >-
    <p>

      <b>Edm.Single</b> Represents a floating point number with 7 digits precision that can represent values with approximate range of +/- 1.18e -38 through +/- 3.40e +38 </p>
  uid: com.microsoft.azure.storage.table.EdmType.SINGLE
- fullName: com.microsoft.azure.storage.table.EdmType.STRING
  name: STRING
  nameWithType: EdmType.STRING
  summary: >-
    <p>

      <b>Edm.String</b> Represents fixed- or variable-length character data </p>
  uid: com.microsoft.azure.storage.table.EdmType.STRING
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="java.lang.Enum&lt;EdmType&gt;" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.storage.table._edm_type_1ac96fb66a1c026bf7f979ec54832f4df5
methods:
- fullName: com.microsoft.azure.storage.table.EdmType.mustAnnotateType()
  name: mustAnnotateType()
  nameWithType: EdmType.mustAnnotateType()
  returns:
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  syntax: protected final boolean mustAnnotateType()
  uid: com.microsoft.azure.storage.table.EdmType.mustAnnotateType()
- fullName: com.microsoft.azure.storage.table.EdmType.parse(final String value)
  name: parse(final String value)
  nameWithType: EdmType.parse(final String value)
  parameters:
  - description: <p>A <code>String</code> containing the name of an EDM data type. </p>
    name: value
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if an EDM data type not supported in Microsoft Azure Table storage is passed as an argument. </p>
  returns:
    description: <p>The <xref uid="com.microsoft.azure.storage.table.EdmType" data-throw-if-not-resolved="false" data-raw-source="EdmType"></xref> enumeration value matching the specified EDM data type.</p>
    type: <xref href="com.microsoft.azure.storage.table.EdmType?alt=com.microsoft.azure.storage.table.EdmType&text=EdmType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Parses an EDM data type name and return the matching <xref uid="com.microsoft.azure.storage.table.EdmType" data-throw-if-not-resolved="false" data-raw-source="EdmType"></xref> enumeration value. A  or empty value parameter is matched as <xref uid="com.microsoft.azure.storage.table.EdmType.STRING" data-throw-if-not-resolved="false" data-raw-source="EdmType#STRING"></xref>. Note that only the subset of EDM data types supported in Microsoft Azure Table storage is parsed, consisting of <xref uid="com.microsoft.azure.storage.table.EdmType.BINARY" data-throw-if-not-resolved="false" data-raw-source="BINARY"></xref>, <xref uid="com.microsoft.azure.storage.table.EdmType.BOOLEAN" data-throw-if-not-resolved="false" data-raw-source="BOOLEAN"></xref>, <xref uid="com.microsoft.azure.storage.table.EdmType.BYTE" data-throw-if-not-resolved="false" data-raw-source="BYTE"></xref> , <xref uid="com.microsoft.azure.storage.table.EdmType.DATE_TIME" data-throw-if-not-resolved="false" data-raw-source="DATE_TIME"></xref>, <xref uid="com.microsoft.azure.storage.table.EdmType.DOUBLE" data-throw-if-not-resolved="false" data-raw-source="DOUBLE"></xref>, <xref uid="com.microsoft.azure.storage.table.EdmType.GUID" data-throw-if-not-resolved="false" data-raw-source="GUID"></xref>, <xref uid="com.microsoft.azure.storage.table.EdmType.INT32" data-throw-if-not-resolved="false" data-raw-source="INT32"></xref>, <xref uid="com.microsoft.azure.storage.table.EdmType.INT64" data-throw-if-not-resolved="false" data-raw-source="INT64"></xref>, and <xref uid="com.microsoft.azure.storage.table.EdmType.STRING" data-throw-if-not-resolved="false" data-raw-source="STRING"></xref>. Any other type will cause an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IllegalArgumentException"></xref> to be thrown.</p>

    <p></p>
  syntax: public static EdmType parse(final String value)
  uid: com.microsoft.azure.storage.table.EdmType.parse(final String)
- fullName: com.microsoft.azure.storage.table.EdmType.toString()
  name: toString()
  nameWithType: EdmType.toString()
  returns:
    description: <p>A <code>String</code> containing the name of the EDM data type. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the name of the EDM data type corresponding to the enumeration value.</p>

    <p></p>
  syntax: public String toString()
  uid: com.microsoft.azure.storage.table.EdmType.toString()
nameWithType: EdmType
syntax: public enum EdmType
uid: com.microsoft.azure.storage.table.EdmType
fullName: com.microsoft.azure.storage.table.EdmType
name: EdmType
package: com.microsoft.azure.storage.table
summary: >-
  <p>A enumeration used to represent the primitive types of the Entity Data Model (EDM) in the Open Data Protocol (OData). The EDM is the underlying abstract data model used by OData services. The <xref uid="com.microsoft.azure.storage.table.EdmType" data-throw-if-not-resolved="false" data-raw-source="EdmType"></xref> enumeration includes a <xref uid="com.microsoft.azure.storage.table.EdmType.parse(final String)" data-throw-if-not-resolved="false" data-raw-source="parse(String)"></xref> method to convert EDM data type names to the enumeration type, and overrides the <xref uid="com.microsoft.azure.storage.table.EdmType.toString()" data-throw-if-not-resolved="false" data-raw-source="toString()"></xref> method to produce an EDM data type name. </p>

  <p>For more information about OData, see the <a href="http://www.odata.org/">Open Data Protocol</a> website. </p>

  <p>For an overview of the available EDM primitive data types and names, see the <a href="http://www.odata.org/developers/protocols/overview#AbstractTypeSystem">Primitive Data Types</a> section of the <a href="http://www.odata.org/developers/protocols/overview">OData Protocol Overview</a>. </p>

  <p>The Abstract Type System used to define the primitive types supported by OData is defined in detail in <a href="http://msdn.microsoft.com/en-us/library/dd541474.aspx">[MC-CSDL] (section 2.2.1)</a>. </p>
metadata: {}
