### YamlMime:JavaMember
uid: "com.microsoft.azure.documentdb.ConnectionPolicy.setMaxRetryOnThrottledAttempts*"
fullName: "com.microsoft.azure.documentdb.ConnectionPolicy.setMaxRetryOnThrottledAttempts"
name: "setMaxRetryOnThrottledAttempts"
nameWithType: "ConnectionPolicy.setMaxRetryOnThrottledAttempts"
members:
- uid: "com.microsoft.azure.documentdb.ConnectionPolicy.setMaxRetryOnThrottledAttempts(java.lang.Integer)"
  fullName: "com.microsoft.azure.documentdb.ConnectionPolicy.setMaxRetryOnThrottledAttempts(Integer maxRetryOnThrottledAttempts)"
  name: "setMaxRetryOnThrottledAttempts(Integer maxRetryOnThrottledAttempts)"
  nameWithType: "ConnectionPolicy.setMaxRetryOnThrottledAttempts(Integer maxRetryOnThrottledAttempts)"
  summary: "Sets the maximum number of retries in the case where the request fails due to a throttle error.\n\nWhen a client is sending request faster than the request rate limit imposed by the service, the service will return HttpStatusCode 429 (Too Many Request) to throttle the client. The current implementation in the SDK will then wait for the amount of time the service tells it to wait and retry after the time has elapsed.\n\nThe default value is 9. This means in the case where the request is throttled, the same request will be issued for a maximum of 10 times to the server before an error is returned to the application.\n\nThis property is deprecated. Please use connectionPolicy.getRetryOptions().setMaxRetryAttemptsOnThrottledRequests() for equivalent functionality."
  parameters:
  - description: "the max number of retry attempts on failed requests."
    name: "maxRetryOnThrottledAttempts"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setMaxRetryOnThrottledAttempts(Integer maxRetryOnThrottledAttempts)"
type: "method"
metadata: {}
package: "com.microsoft.azure.documentdb"
artifact: com.microsoft.azure:azure-documentdb:2.4.7
