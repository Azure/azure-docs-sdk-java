### YamlMime:JavaPackage
uid: "com.azure.ai.formrecognizer.documentanalysis.administration"
fullName: "com.azure.ai.formrecognizer.documentanalysis.administration"
name: "com.azure.ai.formrecognizer.documentanalysis.administration"
summary: "<p><a href=\"https://aka.ms/form-recognizer-3.0.0\">Azure Form Recognizer</a>\n is a cloud-based service provided by Microsoft Azure that utilizes machine learning to extract information\n from various types of documents."
classes:
- "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient"
- "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationClient"
- "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationClientBuilder"
desc: "<p><a href=\"https://aka.ms/form-recognizer-3.0.0\">Azure Form Recognizer</a>\n is a cloud-based service provided by Microsoft Azure that utilizes machine learning to extract information\n from various types of documents. Form Recognizer applies machine-learning-based optical character recognition (OCR)\n and document understanding technologies to classify documents, extract text, tables, structure, and key-value\n pairs from documents.\n You can also label and train custom models to automate data extraction from structured, semi-structured, and\n unstructured documents.</p>\n\n <p>The service uses advanced optical character recognition (OCR) technology to extract text and key-value\n pairs from documents, enabling organizations to automate data entry tasks that would otherwise require\n manual effort. It can recognize and extract information like dates, addresses, invoice numbers, line items,\n and other relevant data points from documents. </p>\n\n <p> The Azure Form Recognizer client library allows Java developers to interact with the Azure Form\n Recognizer service.\n It provides a set of classes and methods that abstract the underlying RESTful API of Azure\n Form Recognizer, making it easier to integrate the service into Java applications.</p>\n\n <p>The Azure Form Recognizer client library provides the following capabilities:</p>\n\n <ol>\n     <li>Document Analysis: It allows you to submit documents for analysis to detect and extract information like text,\n     key-value pairs, tables, language, and fields. You can analyze both structured and unstructured documents.</li>\n     <li>Model Management: It enables you to manage models created in your account by building, listing,\n     deleting, and see the limit of custom models your account.</li>\n     <li>Analysis Results: It provides methods to retrieve and interpret analysis results, including extracted text\n     and field values, confidence scores, and document layout information.</li>\n     <li>Polling and Callbacks: It includes mechanisms for polling the service to check the status of an analysis\n     operation or registering callbacks to receive notifications when the analysis is complete.</li>\n </ol>\n\n <h2>Getting Started</h2>\n\n <p>The Azure Form Recognizer library provides\n analysis clients like <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisAsyncClient\"></xref>\n and <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient\"></xref> to connect to the Form Recognizer\n Azure Cognitive Service to analyze information from documents and extract it into structured data.\n It also provides administration clients like\n <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationClient\"></xref>\n and <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient\"></xref> to\n build and manage models from custom documents.</p>\n\n <p><strong>Note: </strong>This client only supports\n <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisServiceVersion#V2022_08_31\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisServiceVersion#V2022_08_31\"></xref> and newer.\n To use an older service version, <xref uid=\"com.azure.ai.formrecognizer.training.FormTrainingClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.training.FormTrainingClient\"></xref> and\n <xref uid=\"com.azure.ai.formrecognizer.training.FormTrainingAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.training.FormTrainingAsyncClient\"></xref></p>\n\n <p>Service clients are the point of interaction for developers to use Azure Form Recognizer.\n <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient\"></xref> is the synchronous service client and\n <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisAsyncClient\"></xref> is the asynchronous service client.\n The examples shown in this document use a credential object named DefaultAzureCredential for authentication, which is\n appropriate for most scenarios, including local development and production environments. Additionally, we\n recommend using\n <a href=\"https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/\">managed identity</a>\n for authentication in production environments.\n You can find more information on different ways of authenticating and their corresponding credential types in the\n <a href=\"https://learn.microsoft.com/java/api/overview/azure/identity-readme\">Azure Identity documentation\"</a>.\n </p>\n\n <p><strong>Sample: Construct a\n <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationClient\"></xref> with\n DefaultAzureCredential</strong></p>\n\n <p>The following code sample demonstrates the creation of a\n <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationClient\"></xref>, using\n the `DefaultAzureCredentialBuilder` to configure it.</p>\n\n <!-- src_embed com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdminClient.initialization -->\n <pre>\n DocumentModelAdministrationClient client = new DocumentModelAdministrationClientBuilder&#40;&#41;\n     .endpoint&#40;&quot;&#123;endpoint&#125;&quot;&#41;\n     .credential&#40;new DefaultAzureCredentialBuilder&#40;&#41;.build&#40;&#41;&#41;\n     .buildClient&#40;&#41;;\n </pre>\n <!-- end com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdminClient.initialization  -->\n\n <p>Further, see the code sample below to use\n <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref> for client creation.</p>\n\n <!-- src_embed readme-sample-createDocumentModelAdministrationClient -->\n <pre>\n DocumentModelAdministrationClient client =\n     new DocumentModelAdministrationClientBuilder&#40;&#41;\n         .credential&#40;new AzureKeyCredential&#40;&quot;&#123;key&#125;&quot;&#41;&#41;\n         .endpoint&#40;&quot;&#123;endpoint&#125;&quot;&#41;\n         .buildClient&#40;&#41;;\n </pre>\n <!-- end readme-sample-createDocumentModelAdministrationClient  -->\n\n <p>Let's take a look at the administration client scenarios and their respective usage below.</p>\n\n <br>\n\n <hr>\n\n <h2>Build custom document models</h2>\n\n <p><a href=\"https://learn.microsoft.com/azure/applied-ai-services/form-recognizer/concept-custom?view=form-recog-3.0.0&tabs=extraction%2Cclassification#custom-document-model-types\">Custom document models</a>\n are built by labelling a dataset of documents with the values you want extracted to address your document scenario\n needs.</p>\n\n <p>The request must include a `blobContainerUrl` that is an externally accessible Azure storage blob container URI\n (preferably a Shared Access Signature URI).\n Note that a container URI (without SAS) is accepted only when the container is public or has a managed identity\n configured, see more about configuring managed identities to work with Form Recognizer\n <a href=\"https://docs.microsoft.com/azure/applied-ai-services/form-recognizer/managed-identities\">here</a>.</p>\n\n <p>For more information on different custom document model types, refer to\n <a href=\"https://learn.microsoft.com/azure/applied-ai-services/form-recognizer/concept-custom?view=form-recog-3.0.0&tabs=extraction%2Cclassification#custom-document-model-types\">custom document models types</a>\n\n <p><strong>Sample: Build a custom document model</strong></p>\n\n <p>The following code sample demonstrates how to build a custom model with your own data.</p>\n\n <!-- src_embed readme-sample-buildModel -->\n <pre>\n &#47;&#47; Build custom document analysis model\n String blobContainerUrl = &quot;&#123;SAS_URL_of_your_container_in_blob_storage&#125;&quot;;\n &#47;&#47; The shared access signature &#40;SAS&#41; Url of your Azure Blob Storage container with your forms.\n String prefix = &quot;&#123;blob_name_prefix&#125;&#125;&quot;;\n SyncPoller&lt;OperationResult, DocumentModelDetails&gt; buildOperationPoller =\n     documentModelAdminClient.beginBuildDocumentModel&#40;blobContainerUrl,\n         DocumentModelBuildMode.TEMPLATE,\n         prefix,\n         new BuildDocumentModelOptions&#40;&#41;.setModelId&#40;&quot;my-build-model&quot;&#41;.setDescription&#40;&quot;model desc&quot;&#41;,\n         Context.NONE&#41;;\n\n DocumentModelDetails documentModelDetails = buildOperationPoller.getFinalResult&#40;&#41;;\n\n &#47;&#47; Model Info\n System.out.printf&#40;&quot;Model ID: %s%n&quot;, documentModelDetails.getModelId&#40;&#41;&#41;;\n System.out.printf&#40;&quot;Model Description: %s%n&quot;, documentModelDetails.getDescription&#40;&#41;&#41;;\n System.out.printf&#40;&quot;Model created on: %s%n%n&quot;, documentModelDetails.getCreatedOn&#40;&#41;&#41;;\n documentModelDetails.getDocumentTypes&#40;&#41;.forEach&#40;&#40;key, documentTypeDetails&#41; -&gt; &#123;\n     System.out.printf&#40;&quot;Document type: %s%n&quot;, key&#41;;\n     documentTypeDetails.getFieldSchema&#40;&#41;.forEach&#40;&#40;name, documentFieldSchema&#41; -&gt; &#123;\n         System.out.printf&#40;&quot;Document field: %s%n&quot;, name&#41;;\n         System.out.printf&#40;&quot;Document field type: %s%n&quot;, documentFieldSchema.getType&#40;&#41;.toString&#40;&#41;&#41;;\n         System.out.printf&#40;&quot;Document field confidence: %.2f%n&quot;, documentTypeDetails.getFieldConfidence&#40;&#41;.get&#40;name&#41;&#41;;\n     &#125;&#41;;\n &#125;&#41;;\n </pre>\n <!-- end readme-sample-buildModel -->\n\n Please note that models can also be built using a graphical user interface\n <a href=\"https://aka.ms/azsdk/formrecognizer/labelingtool\">Form Recognizer Labeling Tool\n .</a>.\n\n <br>\n\n <hr>\n\n <h2>Manage models</h2>\n\n Managing models created in your account by building, listing, deleting, and see the limit of custom models your\n account.\n\n <p>\n Refer to\n <a href=\"https://learn.microsoft.com/azure/applied-ai-services/form-recognizer/service-limits?view=form-recog-3.0.0\">service quotas and limits</a>\n to know more your resource models and custom models usage.</p>\n\n <p><strong>Sample: Manage models</strong></p>\n\n <p>This sample demonstrates how to manage (get, list, delete) the models stored in your account.</p>\n\n <!-- src_embed readme-sample-manageModels -->\n <pre>\n AtomicReference&lt;String&gt; modelId = new AtomicReference&lt;&gt;&#40;&#41;;\n\n &#47;&#47; First, we see how many models we have, and what our limit is\n ResourceDetails resourceDetails = documentModelAdminClient.getResourceDetails&#40;&#41;;\n System.out.printf&#40;&quot;The resource has %s models, and we can have at most %s models&quot;,\n     resourceDetails.getCustomDocumentModelCount&#40;&#41;, resourceDetails.getCustomDocumentModelLimit&#40;&#41;&#41;;\n\n &#47;&#47; Next, we get a paged list of all of our models\n PagedIterable&lt;DocumentModelSummary&gt; customDocumentModels = documentModelAdminClient.listDocumentModels&#40;&#41;;\n System.out.println&#40;&quot;We have following models in the account:&quot;&#41;;\n customDocumentModels.forEach&#40;documentModelSummary -&gt; &#123;\n     System.out.printf&#40;&quot;Model ID: %s%n&quot;, documentModelSummary.getModelId&#40;&#41;&#41;;\n     modelId.set&#40;documentModelSummary.getModelId&#40;&#41;&#41;;\n\n     &#47;&#47; get custom document analysis model info\n     DocumentModelDetails documentModel = documentModelAdminClient.getDocumentModel&#40;documentModelSummary.getModelId&#40;&#41;&#41;;\n     System.out.printf&#40;&quot;Model ID: %s%n&quot;, documentModel.getModelId&#40;&#41;&#41;;\n     System.out.printf&#40;&quot;Model Description: %s%n&quot;, documentModel.getDescription&#40;&#41;&#41;;\n     System.out.printf&#40;&quot;Model created on: %s%n&quot;, documentModel.getCreatedOn&#40;&#41;&#41;;\n     documentModel.getDocumentTypes&#40;&#41;.forEach&#40;&#40;key, documentTypeDetails&#41; -&gt; &#123;\n         documentTypeDetails.getFieldSchema&#40;&#41;.forEach&#40;&#40;field, documentFieldSchema&#41; -&gt; &#123;\n             System.out.printf&#40;&quot;Field: %s&quot;, field&#41;;\n             System.out.printf&#40;&quot;Field type: %s&quot;, documentFieldSchema.getType&#40;&#41;&#41;;\n             System.out.printf&#40;&quot;Field confidence: %.2f&quot;, documentTypeDetails.getFieldConfidence&#40;&#41;.get&#40;field&#41;&#41;;\n         &#125;&#41;;\n     &#125;&#41;;\n &#125;&#41;;\n\n &#47;&#47; Delete Model\n documentModelAdminClient.deleteDocumentModel&#40;modelId.get&#40;&#41;&#41;;\n </pre>\n <!-- end readme-sample-manageModels -->"
metadata: {}
package: "com.azure.ai.formrecognizer.documentanalysis.administration"
artifact: com.azure:azure-ai-formrecognizer:4.1.5
