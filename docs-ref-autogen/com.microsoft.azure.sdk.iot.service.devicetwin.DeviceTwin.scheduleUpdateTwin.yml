### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.scheduleUpdateTwin*"
fullName: "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.scheduleUpdateTwin"
name: "scheduleUpdateTwin"
nameWithType: "DeviceTwin.scheduleUpdateTwin"
members:
- uid: "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.scheduleUpdateTwin(java.lang.String,com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice,java.util.Date,long)"
  fullName: "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.scheduleUpdateTwin(String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)"
  name: "scheduleUpdateTwin(String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)"
  nameWithType: "DeviceTwin.scheduleUpdateTwin(String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)"
  summary: "Creates a new Job to update twin tags and desired properties on one or multiple devices."
  parameters:
  - description: "Query condition to evaluate which devices to run the job on. It can be <code>null</code> or\n                       empty."
    name: "queryCondition"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Twin object to use for the update."
    name: "updateTwin"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice?alt=com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice&text=DeviceTwinDevice\" data-throw-if-not-resolved=\"False\" />"
  - description: "Date and time in UTC to start the job."
    name: "startTimeUtc"
    type: "<xref href=\"java.util.Date?alt=java.util.Date&text=Date\" data-throw-if-not-resolved=\"False\" />"
  - description: "Max run time in seconds, I.E., the duration the job can run."
    name: "maxExecutionTimeInSeconds"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Job scheduleUpdateTwin(String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)"
  exceptions:
  - description: "If the function contains invalid parameters."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the function contains invalid parameters."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "A <xref uid=\"com.microsoft.azure.sdk.iot.service.devicetwin.Job\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Job\"></xref> class that represent this job on IoT hub."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.devicetwin.Job?alt=com.microsoft.azure.sdk.iot.service.devicetwin.Job&text=Job\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.devicetwin"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.30.0
