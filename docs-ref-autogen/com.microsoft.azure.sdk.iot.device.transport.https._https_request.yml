### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request
  id: _https_request
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  children:
  - com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest()
  - com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest(URL,HttpsMethod,byte [])
  - com.microsoft.azure.sdk.iot.device.transport.https._https_request.send()
  - com.microsoft.azure.sdk.iot.device.transport.https._https_request.setHeaderField(String,String)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_request.setReadTimeoutMillis(int)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_request.setSSLContext(IotHubSSLContext)
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
  langs:
  - java
  name: HttpsRequest
  nameWithType: HttpsRequest
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
    startLine: 16
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: <p>An HTTPS request. </p>
  syntax: &o1
    content: public class HttpsRequest
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest()
  id: HttpsRequest()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_request
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
  langs:
  - java
  name: HttpsRequest()
  nameWithType: HttpsRequest.HttpsRequest()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest()
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
    startLine: 137
  package: com.microsoft.azure.sdk.iot.device.transport.https
  syntax:
    content: protected HttpsRequest()
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest(URL,HttpsMethod,byte [])
  id: HttpsRequest(URL,HttpsMethod,byte [])
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_request
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
  langs:
  - java
  name: HttpsRequest(URL url, HttpsMethod method, byte[] body)
  nameWithType: HttpsRequest.HttpsRequest(URL url, HttpsMethod method, byte[] body)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest(URL url, HttpsMethod method, byte[] body)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
    startLine: 35
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Constructor. Takes a URL as an argument and returns an HTTPS request that is ready to be sent.</p>

    <p></p>
  syntax:
    content: public HttpsRequest(URL url, HttpsMethod method, byte[] body)
    parameters:
    - id: url
      type: a891b3e6
      description: <p>the URL for the request. </p>
    - id: method
      type: com.microsoft.azure.sdk.iot.device.transport.https._https_method
      description: <p>the HTTPS request method (i.e. GET). </p>
    - id: body
      type: ccd9418d
      description: <p>the request body. Must be an array of size 0 if the request method is GET or DELETE.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>if an IOException occurs in setting up the HTTPS connection. </p>
  - type: 3c87bd19
    description: <p>if the endpoint given does not use the HTTPS protocol. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.send()
  id: send()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_request
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
  langs:
  - java
  name: send()
  nameWithType: HttpsRequest.send()
  fullName: HttpsResponse com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.send()
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_request.send*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
    startLine: 55
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Executes the HTTPS request.</p>

    <p></p>
  syntax:
    content: public HttpsResponse send()
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.https._https_response
      description: <p>an HTTPS response.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the connection could not be established, or the input/output streams could not be accessed. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setHeaderField(String,String)
  id: setHeaderField(String,String)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_request
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
  langs:
  - java
  name: setHeaderField(String field, String value)
  nameWithType: HttpsRequest.setHeaderField(String field, String value)
  fullName: HttpsRequest com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setHeaderField(String field, String value)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setHeaderField*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
    startLine: 101
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Sets the header field to the given value.</p>

    <p></p>
  syntax:
    content: public HttpsRequest setHeaderField(String field, String value)
    parameters:
    - id: field
      type: "26831127"
      description: <p>the header field name. </p>
    - id: value
      type: "26831127"
      description: <p>the header field value.</p>
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.https._https_request
      description: <p>itself, for fluent setting. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setReadTimeoutMillis(int)
  id: setReadTimeoutMillis(int)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_request
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
  langs:
  - java
  name: setReadTimeoutMillis(int timeout)
  nameWithType: HttpsRequest.setReadTimeoutMillis(int timeout)
  fullName: HttpsRequest com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setReadTimeoutMillis(int timeout)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setReadTimeoutMillis*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
    startLine: 117
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Sets the read timeout, in milliseconds, for the request. The read timeout is the number of milliseconds after the server receives a request and before the server sends data back.</p>

    <p></p>
  syntax:
    content: public HttpsRequest setReadTimeoutMillis(int timeout)
    parameters:
    - id: timeout
      type: f75371fa
      description: <p>the read timeout.</p>
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.https._https_request
      description: <p>itself, for fluent setting. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setSSLContext(IotHubSSLContext)
  id: setSSLContext(IotHubSSLContext)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_request
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
  langs:
  - java
  name: setSSLContext(IotHubSSLContext iotHubSSLContext)
  nameWithType: HttpsRequest.setSSLContext(IotHubSSLContext iotHubSSLContext)
  fullName: HttpsRequest com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setSSLContext(IotHubSSLContext iotHubSSLContext)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setSSLContext*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
    startLine: 124
  package: com.microsoft.azure.sdk.iot.device.transport.https
  syntax:
    content: public HttpsRequest setSSLContext(IotHubSSLContext iotHubSSLContext)
    parameters:
    - id: iotHubSSLContext
      type: com.microsoft.azure.sdk.iot.device._iot_hub_s_s_l_context
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.https._https_request
references:
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: a891b3e6
  spec.java:
  - name: URL
    fullName: URL
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest*
  name: HttpsRequest
  nameWithType: HttpsRequest.HttpsRequest
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.send*
  name: send
  nameWithType: HttpsRequest.send
  fullName: HttpsResponse com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.send
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setHeaderField*
  name: setHeaderField
  nameWithType: HttpsRequest.setHeaderField
  fullName: HttpsRequest com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setHeaderField
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setReadTimeoutMillis*
  name: setReadTimeoutMillis
  nameWithType: HttpsRequest.setReadTimeoutMillis
  fullName: HttpsRequest com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setReadTimeoutMillis
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setSSLContext*
  name: setSSLContext
  nameWithType: HttpsRequest.setSSLContext
  fullName: HttpsRequest com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setSSLContext
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  name: HttpsConnection
  nameWithType: HttpsConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  type: Class
  summary: >-
    <p>A wrapper for the Java SE class <xref uid="" data-throw-if-not-resolved="false">HttpsURLConnection</xref>. Used to avoid compatibility issues when testing with the mocking framework JMockit, as well as to avoid some undocumented side effects when using HttpsURLConnection. </p>

    <p>The underlying <xref uid="" data-throw-if-not-resolved="false">HttpsURLConnection</xref> is transparently managed by Java. To reuse connections, for each time <xref uid="com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect()" data-throw-if-not-resolved="false">connect()</xref> is called, the input streams (input stream or error stream, if input stream is not accessible) must be completely read. Otherwise, the data remains in the stream and the connection will not be reusable. </p>
  syntax:
    content: public class HttpsConnection
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_method
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_method.yml
  name: HttpsMethod
  nameWithType: HttpsMethod
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
  type: Enum
  summary: <p>The HTTPS request method (i.e. GET). </p>
  syntax:
    content: public enum HttpsMethod
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_response
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_response.yml
  name: HttpsResponse
  nameWithType: HttpsResponse
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse
  type: Class
  summary: <p>An HTTPS response. Contains the status code, body, header fields, and error reason (if any). </p>
  syntax:
    content: public class HttpsResponse
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
  name: HttpsRequest
  nameWithType: HttpsRequest
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  type: Class
  summary: <p>An HTTPS request. </p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_s_s_l_context
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_s_s_l_context.yml
  name: IotHubSSLContext
  nameWithType: IotHubSSLContext
  fullName: com.microsoft.azure.sdk.iot.device.IotHubSSLContext
  type: Class
  syntax:
    content: public class IotHubSSLContext
