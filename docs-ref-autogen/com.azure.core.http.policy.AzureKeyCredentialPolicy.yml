### YamlMime:JavaType
uid: "com.azure.core.http.policy.AzureKeyCredentialPolicy"
fullName: "com.azure.core.http.policy.AzureKeyCredentialPolicy"
name: "AzureKeyCredentialPolicy"
nameWithType: "AzureKeyCredentialPolicy"
summary: "Pipeline policy that uses an <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref> to set the authorization key for a request."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureKeyCredentialPolicy implements HttpPipelinePolicy"
constructors:
- uid: "com.azure.core.http.policy.AzureKeyCredentialPolicy.AzureKeyCredentialPolicy(java.lang.String,com.azure.core.credential.AzureKeyCredential)"
  fullName: "com.azure.core.http.policy.AzureKeyCredentialPolicy.AzureKeyCredentialPolicy(String name, AzureKeyCredential credential)"
  name: "AzureKeyCredentialPolicy(String name, AzureKeyCredential credential)"
  nameWithType: "AzureKeyCredentialPolicy.AzureKeyCredentialPolicy(String name, AzureKeyCredential credential)"
  summary: "Creates a policy that uses the passed <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref> to set the specified header name."
  parameters:
  - description: "The name of the key header that will be set to <xref uid=\"com.azure.core.credential.AzureKeyCredential.getKey()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential#getKey()\"></xref>."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref> containing the authorization key to use."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.AzureKeyCredential?alt=com.azure.core.credential.AzureKeyCredential&text=AzureKeyCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureKeyCredentialPolicy(String name, AzureKeyCredential credential)"
  desc: "Creates a policy that uses the passed <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref> to set the specified header name."
methods:
- uid: "com.azure.core.http.policy.AzureKeyCredentialPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  fullName: "com.azure.core.http.policy.AzureKeyCredentialPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  name: "process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  nameWithType: "AzureKeyCredentialPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  summary: "Processes provided request context and invokes the next policy."
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "next"
    type: "<xref href=\"com.azure.core.http.HttpPipelineNextPolicy?alt=com.azure.core.http.HttpPipelineNextPolicy&text=HttpPipelineNextPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  desc: "Processes provided request context and invokes the next policy."
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.http.policy.AzureKeyCredentialPolicy.processSync(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextSyncPolicy)"
  fullName: "com.azure.core.http.policy.AzureKeyCredentialPolicy.processSync(HttpPipelineCallContext context, HttpPipelineNextSyncPolicy next)"
  name: "processSync(HttpPipelineCallContext context, HttpPipelineNextSyncPolicy next)"
  nameWithType: "AzureKeyCredentialPolicy.processSync(HttpPipelineCallContext context, HttpPipelineNextSyncPolicy next)"
  summary: "Processes provided request context and invokes the next policy synchronously."
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "next"
    type: "<xref href=\"com.azure.core.http.HttpPipelineNextSyncPolicy?alt=com.azure.core.http.HttpPipelineNextSyncPolicy&text=HttpPipelineNextSyncPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpResponse processSync(HttpPipelineCallContext context, HttpPipelineNextSyncPolicy next)"
  desc: "Processes provided request context and invokes the next policy synchronously."
  returns:
    type: "<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Pipeline policy that uses an <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref> to set the authorization key for a request.\n\nRequests sent with this pipeline policy are required to use `HTTPS`. If the request isn't using `HTTPS` an exception will be thrown to prevent leaking the key."
implements:
- "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.http.policy"
artifact: com.azure:azure-core:1.31.0
