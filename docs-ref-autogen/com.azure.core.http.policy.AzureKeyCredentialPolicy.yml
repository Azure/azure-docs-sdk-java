### YamlMime:JavaType
uid: "com.azure.core.http.policy.AzureKeyCredentialPolicy"
fullName: "com.azure.core.http.policy.AzureKeyCredentialPolicy"
name: "AzureKeyCredentialPolicy"
nameWithType: "AzureKeyCredentialPolicy"
summary: "Pipeline policy that uses an <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref> to set the authorization key for a request.\n\nRequests sent with this pipeline policy are required to use `HTTPS`. If the request isn't using `HTTPS` an exception will be thrown to prevent leaking the key."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureKeyCredentialPolicy implements HttpPipelinePolicy"
constructors:
- "com.azure.core.http.policy.AzureKeyCredentialPolicy.AzureKeyCredentialPolicy(java.lang.String,com.azure.core.credential.AzureKeyCredential)"
methods:
- "com.azure.core.http.policy.AzureKeyCredentialPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
type: "class"
implements:
- "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.http.policy"
artifact: com.azure:azure-core:1.12.0
