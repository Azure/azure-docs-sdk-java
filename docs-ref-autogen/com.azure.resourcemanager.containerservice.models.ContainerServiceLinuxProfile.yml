### YamlMime:JavaType
uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile"
fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile"
name: "ContainerServiceLinuxProfile"
nameWithType: "ContainerServiceLinuxProfile"
summary: "Profile for Linux VMs in the container service cluster."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ContainerServiceLinuxProfile**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile&text=ContainerServiceLinuxProfile\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.ContainerServiceLinuxProfile()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.ContainerServiceLinuxProfile()"
  name: "ContainerServiceLinuxProfile()"
  nameWithType: "ContainerServiceLinuxProfile.ContainerServiceLinuxProfile()"
  summary: "Creates an instance of Container<wbr>Service<wbr>Linux<wbr>Profile class."
  syntax: "public ContainerServiceLinuxProfile()"
  desc: "Creates an instance of ContainerServiceLinuxProfile class."
methods:
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.adminUsername()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.adminUsername()"
  name: "adminUsername()"
  nameWithType: "ContainerServiceLinuxProfile.adminUsername()"
  summary: "Get the admin<wbr>Username property: The administrator username to use for Linux VMs."
  syntax: "public String adminUsername()"
  desc: "Get the adminUsername property: The administrator username to use for Linux VMs."
  returns:
    description: "the adminUsername value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "ContainerServiceLinuxProfile.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Container<wbr>Service<wbr>Linux<wbr>Profile from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ContainerServiceLinuxProfile fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of ContainerServiceLinuxProfile from the JsonReader."
  returns:
    description: "An instance of ContainerServiceLinuxProfile if the JsonReader was pointing to an instance of it, or null\n if it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile&text=ContainerServiceLinuxProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.ssh()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.ssh()"
  name: "ssh()"
  nameWithType: "ContainerServiceLinuxProfile.ssh()"
  summary: "Get the ssh property: The SSH configuration for Linux-based VMs running on Azure."
  syntax: "public ContainerServiceSshConfiguration ssh()"
  desc: "Get the ssh property: The SSH configuration for Linux-based VMs running on Azure."
  returns:
    description: "the ssh value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceSshConfiguration?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceSshConfiguration&text=ContainerServiceSshConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "ContainerServiceLinuxProfile.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.validate()"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.validate()"
  name: "validate()"
  nameWithType: "ContainerServiceLinuxProfile.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.withAdminUsername(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.withAdminUsername(String adminUsername)"
  name: "withAdminUsername(String adminUsername)"
  nameWithType: "ContainerServiceLinuxProfile.withAdminUsername(String adminUsername)"
  summary: "Set the admin<wbr>Username property: The administrator username to use for Linux VMs."
  parameters:
  - description: "the adminUsername value to set."
    name: "adminUsername"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ContainerServiceLinuxProfile withAdminUsername(String adminUsername)"
  desc: "Set the adminUsername property: The administrator username to use for Linux VMs."
  returns:
    description: "the ContainerServiceLinuxProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile&text=ContainerServiceLinuxProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.withSsh(com.azure.resourcemanager.containerservice.models.ContainerServiceSshConfiguration)"
  fullName: "com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile.withSsh(ContainerServiceSshConfiguration ssh)"
  name: "withSsh(ContainerServiceSshConfiguration ssh)"
  nameWithType: "ContainerServiceLinuxProfile.withSsh(ContainerServiceSshConfiguration ssh)"
  summary: "Set the ssh property: The SSH configuration for Linux-based VMs running on Azure."
  parameters:
  - description: "the ssh value to set."
    name: "ssh"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceSshConfiguration?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceSshConfiguration&text=ContainerServiceSshConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceLinuxProfile withSsh(ContainerServiceSshConfiguration ssh)"
  desc: "Set the ssh property: The SSH configuration for Linux-based VMs running on Azure."
  returns:
    description: "the ContainerServiceLinuxProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile&text=ContainerServiceLinuxProfile\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Profile for Linux VMs in the container service cluster."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceLinuxProfile&text=ContainerServiceLinuxProfile\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.containerservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.46.0
