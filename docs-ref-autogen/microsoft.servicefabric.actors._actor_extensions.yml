### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors._actor_extensions
  id: _actor_extensions
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_extensions.getActorId(TIActor)
  - microsoft.servicefabric.actors._actor_extensions.getActorReference(Actor)
  href: microsoft.servicefabric.actors._actor_extensions.yml
  langs:
  - java
  name: ActorExtensions
  nameWithType: ActorExtensions
  fullName: microsoft.servicefabric.actors.ActorExtensions
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorExtensions.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorExtensions.java
    startLine: 5
  package: microsoft.servicefabric.actors
  summary: <p>Class containing extension methods for Actors. </p>
  syntax:
    content: public class ActorExtensions
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.actors._actor_extensions.getActorId(TIActor)
  id: getActorId(TIActor)
  parent: microsoft.servicefabric.actors._actor_extensions
  href: microsoft.servicefabric.actors._actor_extensions.yml
  langs:
  - java
  name: getActorId(TIActor actor)
  nameWithType: ActorExtensions.getActorId(TIActor actor)
  fullName: static <TIActor extends Actor> ActorId microsoft.servicefabric.actors.ActorExtensions.getActorId(TIActor actor)
  overload: microsoft.servicefabric.actors._actor_extensions.getActorId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorExtensions.java
    startLine: 15
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Gets <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref> for the actor.</p>

    <p></p>
  syntax:
    content: public static static<TIActor extends Actor> ActorId getActorId(TIActor actor)
    parameters:
    - id: actor
      type: eb33308e
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> object to get <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref> for. </p>
    return:
      type: 235f8585microsoft.servicefabric.actors._actor410a1f1cmicrosoft.servicefabric.actors._actor_id
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref> for the actor. </p>
- uid: microsoft.servicefabric.actors._actor_extensions.getActorReference(Actor)
  id: getActorReference(Actor)
  parent: microsoft.servicefabric.actors._actor_extensions
  href: microsoft.servicefabric.actors._actor_extensions.yml
  langs:
  - java
  name: getActorReference(Actor actor)
  nameWithType: ActorExtensions.getActorReference(Actor actor)
  fullName: static FabricActorReference microsoft.servicefabric.actors.ActorExtensions.getActorReference(Actor actor)
  overload: microsoft.servicefabric.actors._actor_extensions.getActorReference*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorExtensions.java
    startLine: 26
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Gets <xref uid="" data-throw-if-not-resolved="false">ActorReference</xref> for the actor.</p>

    <p></p>
  syntax:
    content: public static FabricActorReference getActorReference(Actor actor)
    parameters:
    - id: actor
      type: microsoft.servicefabric.actors._actor
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> object to get ActorReference for. </p>
    return:
      type: microsoft.servicefabric.actors._fabric_actor_reference
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">ActorReference</xref> for the actor. </p>
references:
- uid: eb33308e
  spec.java:
  - name: TIActor
    fullName: TIActor
- uid: 235f8585microsoft.servicefabric.actors._actor410a1f1cmicrosoft.servicefabric.actors._actor_id
  spec.java:
  - name: 'static<TIActor extends '
    fullName: 'static<TIActor extends '
  - uid: microsoft.servicefabric.actors._actor
    name: Actor
    fullName: microsoft.servicefabric.actors.Actor
    href: microsoft.servicefabric.actors._actor.yml
  - name: '> '
    fullName: '> '
  - uid: microsoft.servicefabric.actors._actor_id
    name: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    href: microsoft.servicefabric.actors._actor_id.yml
- uid: microsoft.servicefabric.actors._actor_extensions.getActorId*
  name: getActorId
  nameWithType: ActorExtensions.getActorId
  fullName: static <TIActor extends Actor> ActorId microsoft.servicefabric.actors.ActorExtensions.getActorId
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_extensions.getActorReference*
  name: getActorReference
  nameWithType: ActorExtensions.getActorReference
  fullName: static FabricActorReference microsoft.servicefabric.actors.ActorExtensions.getActorReference
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor.yml
  name: Actor
  nameWithType: Actor
  fullName: microsoft.servicefabric.actors.Actor
  type: Interface
  summary: <p>Base interface for inheriting reliable actor interfaces. </p>
  syntax:
    content: public interface Actor
- uid: microsoft.servicefabric.actors._actor_id
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_id.yml
  name: ActorId
  nameWithType: ActorId
  fullName: microsoft.servicefabric.actors.ActorId
  type: Class
  summary: >-
    <p>

      <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref> represents identity of an actor within an actor service. The actors can be identified by <xref uid="" data-throw-if-not-resolved="false">java.lang.String</xref>, <xref uid="" data-throw-if-not-resolved="false">java.util.UUID</xref> or long. </p>
  syntax:
    content: public class ActorId
- uid: microsoft.servicefabric.actors._fabric_actor_reference
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._fabric_actor_reference.yml
  name: FabricActorReference
  nameWithType: FabricActorReference
  fullName: microsoft.servicefabric.actors.FabricActorReference
  type: Class
  summary: <p>Encapsulation of a reference to an actor for serialization. </p>
  syntax:
    content: public class FabricActorReference
