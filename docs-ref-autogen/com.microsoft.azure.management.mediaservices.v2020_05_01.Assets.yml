### YamlMime:JavaType
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets"
name: "Assets"
nameWithType: "Assets"
summary: "Type representing Assets."
syntax: "public interface Assets extends SupportsCreating<Asset.DefinitionStages.Blank>, HasInner<AssetsInner>"
methods:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets.deleteAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets.deleteAsync(String resourceGroupName, String accountName, String assetName)"
  name: "deleteAsync(String resourceGroupName, String accountName, String assetName)"
  nameWithType: "Assets.deleteAsync(String resourceGroupName, String accountName, String assetName)"
  summary: "Delete an Asset."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Asset name."
    name: "assetName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable deleteAsync(String resourceGroupName, String accountName, String assetName)"
  desc: "Delete an Asset. Deletes an Asset in the Media Services account."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets.getAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets.getAsync(String resourceGroupName, String accountName, String assetName)"
  name: "getAsync(String resourceGroupName, String accountName, String assetName)"
  nameWithType: "Assets.getAsync(String resourceGroupName, String accountName, String assetName)"
  summary: "Get an Asset."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Asset name."
    name: "assetName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Asset> getAsync(String resourceGroupName, String accountName, String assetName)"
  desc: "Get an Asset. Get the details of an Asset in the Media Services account."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Asset?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Asset&text=Asset\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets.getEncryptionKeyAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets.getEncryptionKeyAsync(String resourceGroupName, String accountName, String assetName)"
  name: "getEncryptionKeyAsync(String resourceGroupName, String accountName, String assetName)"
  nameWithType: "Assets.getEncryptionKeyAsync(String resourceGroupName, String accountName, String assetName)"
  summary: "Gets the Asset storage key."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Asset name."
    name: "assetName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<StorageEncryptedAssetDecryptionData> getEncryptionKeyAsync(String resourceGroupName, String accountName, String assetName)"
  desc: "Gets the Asset storage key. Gets the Asset storage encryption keys used to decrypt content created by version 2 of the Media Services API."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.StorageEncryptedAssetDecryptionData?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.StorageEncryptedAssetDecryptionData&text=StorageEncryptedAssetDecryptionData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets.listAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets.listAsync(String resourceGroupName, String accountName)"
  name: "listAsync(String resourceGroupName, String accountName)"
  nameWithType: "Assets.listAsync(String resourceGroupName, String accountName)"
  summary: "List Assets."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Asset> listAsync(String resourceGroupName, String accountName)"
  desc: "List Assets. List Assets in the Media Services account with optional filtering and ordering."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Asset?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Asset&text=Asset\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets.listContainerSasAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.mediaservices.v2020_05_01.ListContainerSasInput)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets.listContainerSasAsync(String resourceGroupName, String accountName, String assetName, ListContainerSasInput parameters)"
  name: "listContainerSasAsync(String resourceGroupName, String accountName, String assetName, ListContainerSasInput parameters)"
  nameWithType: "Assets.listContainerSasAsync(String resourceGroupName, String accountName, String assetName, ListContainerSasInput parameters)"
  summary: "List the Asset URLs."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Asset name."
    name: "assetName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters"
    name: "parameters"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ListContainerSasInput?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ListContainerSasInput&text=ListContainerSasInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<AssetContainerSas> listContainerSasAsync(String resourceGroupName, String accountName, String assetName, ListContainerSasInput parameters)"
  desc: "List the Asset URLs. Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content. The signatures are derived from the storage account keys."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.AssetContainerSas?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.AssetContainerSas&text=AssetContainerSas\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets.listStreamingLocatorsAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.Assets.listStreamingLocatorsAsync(String resourceGroupName, String accountName, String assetName)"
  name: "listStreamingLocatorsAsync(String resourceGroupName, String accountName, String assetName)"
  nameWithType: "Assets.listStreamingLocatorsAsync(String resourceGroupName, String accountName, String assetName)"
  summary: "List Streaming Locators."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Asset name."
    name: "assetName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ListStreamingLocatorsResponse> listStreamingLocatorsAsync(String resourceGroupName, String accountName, String assetName)"
  desc: "List Streaming Locators. Lists Streaming Locators which are associated with this asset."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ListStreamingLocatorsResponse?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ListStreamingLocatorsResponse&text=ListStreamingLocatorsResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Type representing Assets."
implements:
- "<xref href=\"com.microsoft.azure.arm.collection.SupportsCreating?alt=com.microsoft.azure.arm.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Asset.DefinitionStages.Blank?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Asset.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.AssetsInner?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.AssetsInner&text=AssetsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
