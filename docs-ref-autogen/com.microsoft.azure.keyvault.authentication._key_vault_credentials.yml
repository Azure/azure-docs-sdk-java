### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.keyvault.authentication._key_vault_credentials
  id: _key_vault_credentials
  parent: com.microsoft.azure.keyvault.authentication
  children:
  - com.microsoft.azure.keyvault.authentication._key_vault_credentials.applyCredentialsFilter(OkHttpClient.Builder)
  - com.microsoft.azure.keyvault.authentication._key_vault_credentials.doAuthenticate(String,String,String)
  href: com.microsoft.azure.keyvault.authentication._key_vault_credentials.yml
  langs:
  - java
  name: KeyVaultCredentials
  nameWithType: KeyVaultCredentials
  fullName: com.microsoft.azure.keyvault.authentication.KeyVaultCredentials
  type: Class
  source:
    remote: &o0
      path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/authentication/KeyVaultCredentials.java
      branch: bb950b2a0255c017040501de0c19e4849361ca1d
      repo: https://github.com/Azure/azure-keyvault-java
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/authentication/KeyVaultCredentials.java
    startLine: 26
  package: com.microsoft.azure.keyvault.authentication
  summary: "<p>An implementation of <xref uid=\"\" data-throw-if-not-resolved=\"false\">ServiceClientCredentials</xref> that supports automatic bearer token refresh. </p>"
  syntax:
    content: public class KeyVaultCredentials
  inheritance:
  - java.lang.Object
  - ServiceClientCredentials
- uid: com.microsoft.azure.keyvault.authentication._key_vault_credentials.applyCredentialsFilter(OkHttpClient.Builder)
  id: Builder)
  parent: com.microsoft.azure.keyvault.authentication._key_vault_credentials
  href: com.microsoft.azure.keyvault.authentication._key_vault_credentials.yml
  langs:
  - java
  name: applyCredentialsFilter(OkHttpClient.Builder clientBuilder)
  nameWithType: KeyVaultCredentials.applyCredentialsFilter(OkHttpClient.Builder clientBuilder)
  fullName: com.microsoft.azure.keyvault.authentication.KeyVaultCredentials.applyCredentialsFilter(OkHttpClient.Builder clientBuilder)
  overload: com.microsoft.azure.keyvault.authentication._key_vault_credentials.applyCredentialsFilter*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/authentication/KeyVaultCredentials.java
    startLine: 35
  package: com.microsoft.azure.keyvault.authentication
  syntax:
    content: public void applyCredentialsFilter(OkHttpClient.Builder clientBuilder)
    parameters:
    - id: clientBuilder
      type: 2c0be77c
- uid: com.microsoft.azure.keyvault.authentication._key_vault_credentials.doAuthenticate(String,String,String)
  id: doAuthenticate(String,String,String)
  parent: com.microsoft.azure.keyvault.authentication._key_vault_credentials
  href: com.microsoft.azure.keyvault.authentication._key_vault_credentials.yml
  langs:
  - java
  name: doAuthenticate(String authorization, String resource, String scope)
  nameWithType: KeyVaultCredentials.doAuthenticate(String authorization, String resource, String scope)
  fullName: com.microsoft.azure.keyvault.authentication.KeyVaultCredentials.doAuthenticate(String authorization, String resource, String scope)
  overload: com.microsoft.azure.keyvault.authentication._key_vault_credentials.doAuthenticate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/authentication/KeyVaultCredentials.java
    startLine: 215
  package: com.microsoft.azure.keyvault.authentication
  summary: "<p>Abstract method to be implemented.</p>\r\n<p>\r\nAnswers a server challenge with a token header. </p>\r\n<p>Implementations typically use ADAL to get a token, as performed in the sample below: </p>\r\n<p>\r\n  <pre>\r\n&amp;#064;Override\r\npublic String doAuthenticate(String authorization, String resource, String scope) {\r\n    String clientId = ...; // client GUID as shown in Azure portal.\r\n    String clientKey = ...; // client key as provided by Azure portal.\r\n    AuthenticationResult token = getAccessTokenFromClientCredentials(authorization, resource, clientId, clientKey);\r\n    return token.getAccessToken();;\r\n}</pre>\r\n</p>\r\n<p>\r\n  <pre>private static AuthenticationResult getAccessTokenFromClientCredentials(String authorization, String resource, String clientId, String clientKey) {\r\n    AuthenticationContext context = null;\r\n    AuthenticationResult result = null;\r\n    ExecutorService service = null;\r\n    try {\r\n        service = Executors.newFixedThreadPool(1);\r\n        context = new AuthenticationContext(authorization, false, service);\r\n        ClientCredential credentials = new ClientCredential(clientId, clientKey);\r\n        Future&lt;AuthenticationResult&gt; future = context.acquireToken(resource, credentials, null);\r\n        result = future.get();\r\n    } catch (Exception e) {\r\n        throw new RuntimeException(e);\r\n    } finally {\r\n        service.shutdown();\r\n    }</pre>\r\n</p>\r\n<p>\r\n  <pre>    if (result == null) {\r\n        throw new RuntimeException(\"authentication result was null\");\r\n    }\r\n    return result;\r\n}\r\n        </pre>\r\n</p>\r\n<p>\r\n  <b>Note: The client key must be securely stored. It's advised to use two client applications - one for development and other for production - managed by separate parties.</b>\r\n</p>"
  syntax:
    content: public abstract String doAuthenticate(String authorization, String resource, String scope)
    parameters:
    - id: authorization
      type: "26831127"
      description: <p>Identifier of the authority, a URL. </p>
    - id: resource
      type: "26831127"
      description: <p>Identifier of the target resource that is the recipient of the requested token, a URL. </p>
    - id: scope
      type: "26831127"
      description: <p>The scope of the authentication request.</p>
    return:
      type: 9065866d
      description: <p>The access token</p>
references:
- uid: 2c0be77c
  spec.java:
  - name: OkHttpClient.Builder
    fullName: OkHttpClient.Builder
- uid: com.microsoft.azure.keyvault.authentication._key_vault_credentials.applyCredentialsFilter*
  name: applyCredentialsFilter
  nameWithType: KeyVaultCredentials.applyCredentialsFilter
  fullName: com.microsoft.azure.keyvault.authentication.KeyVaultCredentials.applyCredentialsFilter
  package: com.microsoft.azure.keyvault.authentication
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 9065866d
  spec.java:
  - name: abstract String
    fullName: abstract String
- uid: com.microsoft.azure.keyvault.authentication._key_vault_credentials.doAuthenticate*
  name: doAuthenticate
  nameWithType: KeyVaultCredentials.doAuthenticate
  fullName: com.microsoft.azure.keyvault.authentication.KeyVaultCredentials.doAuthenticate
  package: com.microsoft.azure.keyvault.authentication
