### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.ListShardMapper(ShardMapManager shardMapManager, ShardMap sm)
  name: ListShardMapper(ShardMapManager shardMapManager, ShardMap sm)
  nameWithType: ListShardMapper.ListShardMapper(ShardMapManager shardMapManager, ShardMap sm)
  parameters:
  - description: <p>Reference to ShardMapManager. </p>
    name: shardMapManager
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  - description: <p>Containing shard map. </p>
    name: sm
    type: <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>List shard mapper, which managers point mappings.</p>

    <p></p>
  syntax: public ListShardMapper(ShardMapManager shardMapManager, ShardMap sm)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.ListShardMapper(ShardMapManager,ShardMap)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper?alt=com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper&text=BaseShardMapper" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.add(MappingT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>)
- com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.add(MappingT)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.BaseShardMapper(ShardMapManager,ShardMap)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.DEFAULT_OWNER
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.ensureMappingBelongsToShardMap(MappingT,String,String)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.getLockOwnerForMapping(MappingT,ShardManagementErrorCategory)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.getMappingsForRange(Range,Shard,LookupOptions,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,ShardManagementErrorCategory,String)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.getShardMap()
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.getShardMapManager()
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.lockOrUnlockMappings(MappingT,UUID,LockOwnerIdOpType,ShardManagementErrorCategory)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.lookup(KeyT,LookupOptions,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,ShardManagementErrorCategory)
- com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.lookup(ValueT,LookupOptions)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.openConnectionForKey(KeyT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,ShardManagementErrorCategory,String)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.openConnectionForKey(KeyT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,ShardManagementErrorCategory,String,ConnectionOptions)
- com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.openConnectionForKey(ValueT,String)
- com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.openConnectionForKey(ValueT,String,ConnectionOptions)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.openConnectionForKeyAsync(KeyT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,ShardManagementErrorCategory,String)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.openConnectionForKeyAsync(KeyT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,ShardManagementErrorCategory,String,ConnectionOptions)
- com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.openConnectionForKeyAsync(ValueT,String)
- com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.openConnectionForKeyAsync(ValueT,String,ConnectionOptions)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.remove(MappingT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,UUID)
- com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.remove(MappingT,UUID)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.setStatus(MappingT,StatusT,Function<StatusT, StatusT>,Function<StatusT, UpdateT>,ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT>)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.setStatus(MappingT,StatusT,Function<StatusT, StatusT>,Function<StatusT, UpdateT>,ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT>,UUID)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.shardMap
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.shardMapManager
- com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.tryLookup(ValueT,LookupOptions,ReferenceObjectHelper<MappingT>)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.update(MappingT,UpdateT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,Function<StatusT, Integer>,Function<Integer, StatusT>)
- com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.update(MappingT,UpdateT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,Function<StatusT, Integer>,Function<Integer, StatusT>,UUID)
methods:
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.add(PointMapping mapping)
  name: add(PointMapping mapping)
  nameWithType: ListShardMapper.add(PointMapping mapping)
  parameters:
  - description: <p>Mapping being added. </p>
    name: mapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The added mapping object. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a point mapping.</p>

    <p></p>
  syntax: public PointMapping add(PointMapping mapping)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.add(PointMapping)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.getLockOwnerForMapping(PointMapping mapping)
  name: getLockOwnerForMapping(PointMapping mapping)
  nameWithType: ListShardMapper.getLockOwnerForMapping(PointMapping mapping)
  parameters:
  - description: <p>The mapping </p>
    name: mapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Lock owner for the mapping. </p>
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the lock owner of a mapping.</p>

    <p></p>
  syntax: public UUID getLockOwnerForMapping(PointMapping mapping)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.getLockOwnerForMapping(PointMapping)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.getMappingsForRange(Range range, Shard shard, LookupOptions lookupOptions)
  name: getMappingsForRange(Range range, Shard shard, LookupOptions lookupOptions)
  nameWithType: ListShardMapper.getMappingsForRange(Range range, Shard shard, LookupOptions lookupOptions)
  parameters:
  - description: <p>Optional range value, if null, we cover everything. </p>
    name: range
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.Range?alt=com.microsoft.azure.elasticdb.shard.base.Range&text=Range" data-throw-if-not-resolved="False"/>
  - description: <p>Optional shard parameter, if null, we cover all shards. </p>
    name: shard
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  - description: <p>Whether to use cache and/or storage for lookups. </p>
    name: lookupOptions
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.LookupOptions?alt=com.microsoft.azure.elasticdb.shard.base.LookupOptions&text=LookupOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Read-only collection of mappings that overlap with given range. </p>
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets all the mappings that exist within given range.</p>

    <p></p>
  syntax: public List<PointMapping> getMappingsForRange(Range range, Shard shard, LookupOptions lookupOptions)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.getMappingsForRange(Range,Shard,LookupOptions)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.lockOrUnlockMappings(PointMapping mapping, UUID lockOwnerId, LockOwnerIdOpType lockOwnerIdOpType)
  name: lockOrUnlockMappings(PointMapping mapping, UUID lockOwnerId, LockOwnerIdOpType lockOwnerIdOpType)
  nameWithType: ListShardMapper.lockOrUnlockMappings(PointMapping mapping, UUID lockOwnerId, LockOwnerIdOpType lockOwnerIdOpType)
  parameters:
  - description: <p>Optional mapping </p>
    name: mapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  - description: <p>The lock owner id </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>Operation to perform on this mapping with the given lockOwnerId </p>
    name: lockOwnerIdOpType
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.LockOwnerIdOpType?alt=com.microsoft.azure.elasticdb.shard.base.LockOwnerIdOpType&text=LockOwnerIdOpType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Locks or unlocks a given mapping or all mappings.</p>

    <p></p>
  syntax: public void lockOrUnlockMappings(PointMapping mapping, UUID lockOwnerId, LockOwnerIdOpType lockOwnerIdOpType)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.lockOrUnlockMappings(PointMapping,UUID,LockOwnerIdOpType)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.lookup(Object key, LookupOptions lookupOptions)
  name: lookup(Object key, LookupOptions lookupOptions)
  nameWithType: ListShardMapper.lookup(Object key, LookupOptions lookupOptions)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Whether to use cache and/or storage for lookups. </p>
    name: lookupOptions
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.LookupOptions?alt=com.microsoft.azure.elasticdb.shard.base.LookupOptions&text=LookupOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Mapping that contains the key value. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Looks up the key value and returns the corresponding mapping.</p>

    <p></p>
  syntax: public PointMapping lookup(Object key, LookupOptions lookupOptions)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.lookup(Object,LookupOptions)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.markMappingOffline(PointMapping mapping)
  name: markMappingOffline(PointMapping mapping)
  nameWithType: ListShardMapper.markMappingOffline(PointMapping mapping)
  parameters:
  - description: <p>Input point mapping. </p>
    name: mapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An offline mapping. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Marks the given mapping offline.</p>

    <p></p>
  syntax: public PointMapping markMappingOffline(PointMapping mapping)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.markMappingOffline(PointMapping)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.markMappingOffline(PointMapping mapping, UUID lockOwnerId)
  name: markMappingOffline(PointMapping mapping, UUID lockOwnerId)
  nameWithType: ListShardMapper.markMappingOffline(PointMapping mapping, UUID lockOwnerId)
  parameters:
  - description: <p>Input point mapping. </p>
    name: mapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  - description: <p>Lock owner id of this mapping </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An offline mapping. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Marks the given mapping offline.</p>

    <p></p>
  syntax: public PointMapping markMappingOffline(PointMapping mapping, UUID lockOwnerId)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.markMappingOffline(PointMapping,UUID)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.markMappingOnline(PointMapping mapping)
  name: markMappingOnline(PointMapping mapping)
  nameWithType: ListShardMapper.markMappingOnline(PointMapping mapping)
  parameters:
  - description: <p>Input point mapping. </p>
    name: mapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An online mapping. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Marks the given mapping online.</p>

    <p></p>
  syntax: public PointMapping markMappingOnline(PointMapping mapping)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.markMappingOnline(PointMapping)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.markMappingOnline(PointMapping mapping, UUID lockOwnerId)
  name: markMappingOnline(PointMapping mapping, UUID lockOwnerId)
  nameWithType: ListShardMapper.markMappingOnline(PointMapping mapping, UUID lockOwnerId)
  parameters:
  - description: <p>Input point mapping. </p>
    name: mapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  - description: <p>Lock owner id of this mapping </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An online mapping. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Marks the given mapping online.</p>

    <p></p>
  syntax: public PointMapping markMappingOnline(PointMapping mapping, UUID lockOwnerId)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.markMappingOnline(PointMapping,UUID)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.openConnectionForKey(Object key, String connectionString)
  name: openConnectionForKey(Object key, String connectionString)
  nameWithType: ListShardMapper.openConnectionForKey(Object key, String connectionString)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information, the DataSource and Database are obtained from the results of the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An opened SqlConnection. </p>
    type: <xref href="Connection?alt=Connection&text=Connection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Given a key value, obtains a SqlConnection to the shard in the mapping that contains the key value.</p>

    <p></p>
  syntax: public Connection openConnectionForKey(Object key, String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.openConnectionForKey(Object,String)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.openConnectionForKey(Object key, String connectionString, ConnectionOptions options)
  name: openConnectionForKey(Object key, String connectionString, ConnectionOptions options)
  nameWithType: ListShardMapper.openConnectionForKey(Object key, String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information, the DataSource and Database are obtained from the results of the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Options for validation operations to perform on opened connection. </p>
    name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An opened SqlConnection. </p>
    type: <xref href="Connection?alt=Connection&text=Connection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Given a key value, obtains a SqlConnection to the shard in the mapping that contains the key value.</p>

    <p></p>
  syntax: public Connection openConnectionForKey(Object key, String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.openConnectionForKey(Object,String,ConnectionOptions)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.openConnectionForKeyAsync(Object key, String connectionString)
  name: openConnectionForKeyAsync(Object key, String connectionString)
  nameWithType: ListShardMapper.openConnectionForKeyAsync(Object key, String connectionString)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information, the DataSource and Database are obtained from the results of the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A Task encapsulating an opened SqlConnection. All non usage-error exceptions will be reported via the returned Task </p>
    type: <xref href="Callable%3CConnection%3E?alt=Callable%3CConnection%3E&text=Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Given a key value, asynchronously obtains a SqlConnection to the shard in the mapping that contains the key value.</p>

    <p></p>
  syntax: public Callable<Connection> openConnectionForKeyAsync(Object key, String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.openConnectionForKeyAsync(Object,String)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.openConnectionForKeyAsync(Object key, String connectionString, ConnectionOptions options)
  name: openConnectionForKeyAsync(Object key, String connectionString, ConnectionOptions options)
  nameWithType: ListShardMapper.openConnectionForKeyAsync(Object key, String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information, the DataSource and Database are obtained from the results of the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Options for validation operations to perform on opened connection. </p>
    name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A Task encapsulating an opened SqlConnection. All non usage-error exceptions will be reported via the returned Task </p>
    type: <xref href="Callable%3CConnection%3E?alt=Callable%3CConnection%3E&text=Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Given a key value, asynchronously obtains a SqlConnection to the shard in the mapping that contains the key value.</p>

    <p></p>
  syntax: public Callable<Connection> openConnectionForKeyAsync(Object key, String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.openConnectionForKeyAsync(Object,String,ConnectionOptions)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.remove(PointMapping mapping)
  name: remove(PointMapping mapping)
  nameWithType: ListShardMapper.remove(PointMapping mapping)
  parameters:
  - description: <p>Mapping being removed. </p>
    name: mapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Removes a point mapping.</p>

    <p></p>
  syntax: public void remove(PointMapping mapping)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.remove(PointMapping)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.remove(PointMapping mapping, UUID lockOwnerId)
  name: remove(PointMapping mapping, UUID lockOwnerId)
  nameWithType: ListShardMapper.remove(PointMapping mapping, UUID lockOwnerId)
  parameters:
  - description: <p>Mapping being removed. </p>
    name: mapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  - description: <p>Lock owner id of the mapping </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Removes a point mapping.</p>

    <p></p>
  syntax: public void remove(PointMapping mapping, UUID lockOwnerId)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.remove(PointMapping,UUID)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.tryLookup(Object key, LookupOptions lookupOptions, ReferenceObjectHelper<PointMapping> mapping)
  name: tryLookup(Object key, LookupOptions lookupOptions, ReferenceObjectHelper<PointMapping> mapping)
  nameWithType: ListShardMapper.tryLookup(Object key, LookupOptions lookupOptions, ReferenceObjectHelper<PointMapping> mapping)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Whether to use cache and/or storage for lookups. </p>
    name: lookupOptions
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.LookupOptions?alt=com.microsoft.azure.elasticdb.shard.base.LookupOptions&text=LookupOptions" data-throw-if-not-resolved="False"/>
  - description: <p>Mapping that contains the key value. </p>
    name: mapping
    type: ReferenceObjectHelper&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: >-
      <p>

        <code>true</code> if mapping is found, <code>false</code> otherwise. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Tries to looks up the key value and returns the corresponding mapping.</p>

    <p></p>
  syntax: public boolean tryLookup(Object key, LookupOptions lookupOptions, ReferenceObjectHelper<PointMapping> mapping)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.tryLookup(Object,LookupOptions,ReferenceObjectHelper<PointMapping>)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.update(PointMapping currentMapping, PointMappingUpdate update)
  name: update(PointMapping currentMapping, PointMappingUpdate update)
  nameWithType: ListShardMapper.update(PointMapping currentMapping, PointMappingUpdate update)
  parameters:
  - description: <p>Mapping being updated. </p>
    name: currentMapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  - description: <p>Updated properties of the Shard. </p>
    name: update
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMappingUpdate?alt=com.microsoft.azure.elasticdb.shard.base.PointMappingUpdate&text=PointMappingUpdate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>New instance of mapping with updated information. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Allows for update to a point mapping with the updates provided in the <em>update</em>  parameter.</p>

    <p></p>
  syntax: public PointMapping update(PointMapping currentMapping, PointMappingUpdate update)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.update(PointMapping,PointMappingUpdate)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.update(PointMapping currentMapping, PointMappingUpdate update, UUID lockOwnerId)
  name: update(PointMapping currentMapping, PointMappingUpdate update, UUID lockOwnerId)
  nameWithType: ListShardMapper.update(PointMapping currentMapping, PointMappingUpdate update, UUID lockOwnerId)
  parameters:
  - description: <p>Mapping being updated. </p>
    name: currentMapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  - description: <p>Updated properties of the Shard. </p>
    name: update
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMappingUpdate?alt=com.microsoft.azure.elasticdb.shard.base.PointMappingUpdate&text=PointMappingUpdate" data-throw-if-not-resolved="False"/>
  - description: <p>Lock owner id of this mapping </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>New instance of mapping with updated information. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Allows for update to a point mapping with the updates provided in the <em>update</em>  parameter.</p>

    <p></p>
  syntax: public PointMapping update(PointMapping currentMapping, PointMappingUpdate update, UUID lockOwnerId)
  uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper.update(PointMapping,PointMappingUpdate,UUID)
nameWithType: ListShardMapper
syntax: public class ListShardMapper extends BaseShardMapper implements IShardMapper<PointMapping, Object>
type: class
uid: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper
fullName: com.microsoft.azure.elasticdb.shard.mapper.ListShardMapper
name: ListShardMapper
package: com.microsoft.azure.elasticdb.shard.mapper
summary: >-
  <p>Mapper from single keys (points) to their corresponding shards.</p>

  <p></p>
metadata: {}
