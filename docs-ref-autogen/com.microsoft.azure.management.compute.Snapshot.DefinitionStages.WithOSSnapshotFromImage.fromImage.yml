### YamlMime:JavaMember
nameWithType: Snapshot.DefinitionStages.WithOSSnapshotFromImage.fromImage
type: method
members:
- fullName: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithOSSnapshotFromImage.fromImage(String imageId, OperatingSystemTypes osType)
  name: fromImage(String imageId, OperatingSystemTypes osType)
  nameWithType: Snapshot.DefinitionStages.WithOSSnapshotFromImage.fromImage(String imageId, OperatingSystemTypes osType)
  parameters:
  - description: <p>image resource ID </p>
    name: imageId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>operating system type </p>
    name: osType
    type: <xref href="com.microsoft.azure.management.compute.OperatingSystemTypes?alt=com.microsoft.azure.management.compute.OperatingSystemTypes&text=OperatingSystemTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate&text=Snapshot.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies an image containing an operating system.</p>

    <p></p>
  syntax: public WithCreate fromImage(String imageId, OperatingSystemTypes osType)
  uid: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithOSSnapshotFromImage.fromImage(String,OperatingSystemTypes)
- fullName: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithOSSnapshotFromImage.fromImage(VirtualMachineCustomImage image)
  name: fromImage(VirtualMachineCustomImage image)
  nameWithType: Snapshot.DefinitionStages.WithOSSnapshotFromImage.fromImage(VirtualMachineCustomImage image)
  parameters:
  - description: <p>the image </p>
    name: image
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineCustomImage?alt=com.microsoft.azure.management.compute.VirtualMachineCustomImage&text=VirtualMachineCustomImage" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate&text=Snapshot.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies a custom image containing an operating system.</p>

    <p></p>
  syntax: public WithCreate fromImage(VirtualMachineCustomImage image)
  uid: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithOSSnapshotFromImage.fromImage(VirtualMachineCustomImage)
- fullName: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithOSSnapshotFromImage.fromImage(VirtualMachineImage image)
  name: fromImage(VirtualMachineImage image)
  nameWithType: Snapshot.DefinitionStages.WithOSSnapshotFromImage.fromImage(VirtualMachineImage image)
  parameters:
  - description: <p>the image </p>
    name: image
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineImage?alt=com.microsoft.azure.management.compute.VirtualMachineImage&text=VirtualMachineImage" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate&text=Snapshot.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies an image containing an operating system.</p>

    <p></p>
  syntax: public WithCreate fromImage(VirtualMachineImage image)
  uid: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithOSSnapshotFromImage.fromImage(VirtualMachineImage)
uid: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithOSSnapshotFromImage.fromImage*
fullName: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithOSSnapshotFromImage.fromImage(String imageId, OperatingSystemTypes osType)
name: fromImage(String imageId, OperatingSystemTypes osType)
package: com.microsoft.azure.management.compute
metadata: {}
