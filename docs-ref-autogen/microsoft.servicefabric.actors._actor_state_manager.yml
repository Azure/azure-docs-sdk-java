items:
- uid: microsoft.servicefabric.actors._actor_state_manager
  id: _actor_state_manager
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_state_manager.addOrUpdateStateAsync(String,T,BiFunction<String, T, T>)
  - microsoft.servicefabric.actors._actor_state_manager.addStateAsync(String,T)
  - microsoft.servicefabric.actors._actor_state_manager.clearCacheAsync()
  - microsoft.servicefabric.actors._actor_state_manager.containsStateAsync(String)
  - microsoft.servicefabric.actors._actor_state_manager.getOrAddStateAsync(String,T)
  - microsoft.servicefabric.actors._actor_state_manager.getStateAsync(String)
  - microsoft.servicefabric.actors._actor_state_manager.getStateNamesAsync()
  - microsoft.servicefabric.actors._actor_state_manager.removeStateAsync(String)
  - microsoft.servicefabric.actors._actor_state_manager.saveStateAsync()
  - microsoft.servicefabric.actors._actor_state_manager.setStateAsync(String,T)
  - microsoft.servicefabric.actors._actor_state_manager.tryAddStateAsync(String,T)
  - microsoft.servicefabric.actors._actor_state_manager.tryGetStateAsync(String)
  - microsoft.servicefabric.actors._actor_state_manager.tryRemoveStateAsync(String)
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: ActorStateManager
  nameWithType: ActorStateManager
  fullName: microsoft.servicefabric.actors.ActorStateManager
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 11
  package: microsoft.servicefabric.actors
  summary: <p>Represents the interface that state manager for <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> implements. </p>
  syntax: &o1
    content: public interface ActorStateManager
- uid: microsoft.servicefabric.actors._actor_state_manager.addOrUpdateStateAsync(String,T,BiFunction<String, T, T>)
  id: addOrUpdateStateAsync(String,T,BiFunction<String, T, T>)
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
  nameWithType: ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
  fullName: <T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
  overload: microsoft.servicefabric.actors._actor_state_manager.addOrUpdateStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 138
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Adds an actor state with given state name, if it does not already exist or updates specified state name and value, if it does not exist.</p>

    <p></p>
  syntax:
    content: public <T> CompletableFuture<T> addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add or get. </p>
    - id: addValue
      type: 8ce1ecb9
      description: <p>Value of the actor state to add if it doesn't exist. </p>
    - id: updateValueFactory
      type: 6d910369
      description: <p>Factory function to generate value of actor state to update if it exists. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous add/update operation. The value of T parameter contains value of actor state that was added/updated. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager.addStateAsync(String,T)
  id: addStateAsync(String,T)
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: addStateAsync(String stateName, T value)
  nameWithType: ActorStateManager.addStateAsync(String stateName, T value)
  fullName: <T> CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.addStateAsync(String stateName, T value)
  overload: microsoft.servicefabric.actors._actor_state_manager.addStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 24
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Adds an actor state with given state name.</p>

    <p></p>
  syntax:
    content: public <T> CompletableFuture<?> addStateAsync(String stateName, T value)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>Value of the actor state to add. </p>
    return:
      type: a5c17814
      description: <p>A task that represents the asynchronous add operation. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager.clearCacheAsync()
  id: clearCacheAsync()
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: clearCacheAsync()
  nameWithType: ActorStateManager.clearCacheAsync()
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.clearCacheAsync()
  overload: microsoft.servicefabric.actors._actor_state_manager.clearCacheAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 162
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Clears all the cached actor states and any operation(s) performed on <xref href="microsoft.servicefabric.actors._actor_state_manager" data-throw-if-not-resolved="false"></xref> since last state save operation.</p>

    <p>

      <bold>Remarks:</bold> All the operation(s) performed on <xref href="microsoft.servicefabric.actors._actor_state_manager" data-throw-if-not-resolved="false"></xref> since last save operation are cleared on clearing the cache and will not be included in next save operation. </p>
  syntax:
    content: public CompletableFuture<?> clearCacheAsync()
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous clear cache operation. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager.containsStateAsync(String)
  id: containsStateAsync(String)
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: containsStateAsync(String stateName)
  nameWithType: ActorStateManager.containsStateAsync(String stateName)
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateManager.containsStateAsync(String stateName)
  overload: microsoft.servicefabric.actors._actor_state_manager.containsStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 106
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Checks if an actor state with specified name exists.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> containsStateAsync(String stateName)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous check operation. The value of T parameter is true if state with specified name exists otherwise false. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager.getOrAddStateAsync(String,T)
  id: getOrAddStateAsync(String,T)
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: getOrAddStateAsync(String stateName, T value)
  nameWithType: ActorStateManager.getOrAddStateAsync(String stateName, T value)
  fullName: <T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateManager.getOrAddStateAsync(String stateName, T value)
  overload: microsoft.servicefabric.actors._actor_state_manager.getOrAddStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 121
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Gets an actor state with given state name, if it exists or adds the state with the state with specified state name, if it exists.</p>

    <p></p>
  syntax:
    content: public <T> CompletableFuture<T> getOrAddStateAsync(String stateName, T value)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add/update. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>Value of the actor state to add /update. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous add or get operation. The value of T parameter contains the value of the actor state with the given state. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager.getStateAsync(String)
  id: getStateAsync(String)
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: getStateAsync(String stateName)
  nameWithType: ActorStateManager.getStateAsync(String stateName)
  fullName: <T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateManager.getStateAsync(String stateName)
  overload: microsoft.servicefabric.actors._actor_state_manager.getStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 36
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Gets an actor state with specified state name.</p>

    <p></p>
  syntax:
    content: public <T> CompletableFuture<T> getStateAsync(String stateName)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous get operation. The value of T parameter contains value of actor state with given state name. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager.getStateNamesAsync()
  id: getStateNamesAsync()
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: getStateNamesAsync()
  nameWithType: ActorStateManager.getStateNamesAsync()
  fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.ActorStateManager.getStateNamesAsync()
  overload: microsoft.servicefabric.actors._actor_state_manager.getStateNamesAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 149
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Creates an List of all actor state names for current actor.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<List<String>> getStateNamesAsync()
    return:
      type: d20512af
      description: <p>A task that represents the asynchronous enumeration operation. The value of T parameter is an enumerable of all actor state names. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager.removeStateAsync(String)
  id: removeStateAsync(String)
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: removeStateAsync(String stateName)
  nameWithType: ActorStateManager.removeStateAsync(String stateName)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.removeStateAsync(String stateName)
  overload: microsoft.servicefabric.actors._actor_state_manager.removeStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 59
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Removes an actor state with given state name to specified value.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> removeStateAsync(String stateName)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to remove. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous remove operation. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager.saveStateAsync()
  id: saveStateAsync()
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: saveStateAsync()
  nameWithType: ActorStateManager.saveStateAsync()
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.saveStateAsync()
  overload: microsoft.servicefabric.actors._actor_state_manager.saveStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 170
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Saves all the cached state changes (add/update/remove) that were made since last call to <xref href="microsoft.servicefabric.actors._actor_state_manager.saveStateAsync()" data-throw-if-not-resolved="false"></xref> by actor runtime or by user explicitly.</p>

    <p></p>
  syntax: &o2
    content: public CompletableFuture<?> saveStateAsync()
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager.setStateAsync(String,T)
  id: setStateAsync(String,T)
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: setStateAsync(String stateName, T value)
  nameWithType: ActorStateManager.setStateAsync(String stateName, T value)
  fullName: <T> CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.setStateAsync(String stateName, T value)
  overload: microsoft.servicefabric.actors._actor_state_manager.setStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 50
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Removes an actor state with specified state name. If an actor state with specified name does not exist, it is added.</p>

    <p></p>
  syntax:
    content: public <T> CompletableFuture<?> setStateAsync(String stateName, T value)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to set. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>Value of the actor state to set. </p>
    return:
      type: a5c17814
      description: <p>A task that represents the asynchronous set operation. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager.tryAddStateAsync(String,T)
  id: tryAddStateAsync(String,T)
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: tryAddStateAsync(String stateName, T value)
  nameWithType: ActorStateManager.tryAddStateAsync(String stateName, T value)
  fullName: <T> CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateManager.tryAddStateAsync(String stateName, T value)
  overload: microsoft.servicefabric.actors._actor_state_manager.tryAddStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 73
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Attempts to add an actor state with given state name.</p>

    <p></p>
  syntax:
    content: public <T> CompletableFuture<Boolean> tryAddStateAsync(String stateName, T value)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to add. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>Value of the actor state to add. </p>
    return:
      type: 2ebb647c
      description: <p>A task that represents the asynchronous add operation. The value of T parameter indicates if the state was successfully added. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager.tryGetStateAsync(String)
  id: tryGetStateAsync(String)
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: tryGetStateAsync(String stateName)
  nameWithType: ActorStateManager.tryGetStateAsync(String stateName)
  fullName: <T> CompletableFuture<ConditionalValue<T>> microsoft.servicefabric.actors.ActorStateManager.tryGetStateAsync(String stateName)
  overload: microsoft.servicefabric.actors._actor_state_manager.tryGetStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 86
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Attempts to get an actor state with specified state name.</p>

    <p></p>
  syntax:
    content: public <T> CompletableFuture<ConditionalValue<T>> tryGetStateAsync(String stateName)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to get. </p>
    return:
      type: 013f9378microsoft.servicefabric.data._conditional_value84ce83e6
      description: <p>A task that represents the asynchronous get operation. The value of T parameter contains <ref refid="" kindref="compound">ConditionalValue</ref> indicating whether the actor state is present and the value of actor state if it is present. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager.tryRemoveStateAsync(String)
  id: tryRemoveStateAsync(String)
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  langs:
  - java
  name: tryRemoveStateAsync(String stateName)
  nameWithType: ActorStateManager.tryRemoveStateAsync(String stateName)
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateManager.tryRemoveStateAsync(String stateName)
  overload: microsoft.servicefabric.actors._actor_state_manager.tryRemoveStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
    startLine: 96
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Attempts to remove an actor state with specified state name.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> tryRemoveStateAsync(String stateName)
    parameters:
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to remove. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous remove operation. The value of T parameter indicates if the state was successfully removed. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: a5c17814
  spec.java:
  - name: <T> CompletableFuture<?>
    fullName: <T> CompletableFuture<?>
- uid: microsoft.servicefabric.actors._actor_state_manager.addStateAsync*
  name: addStateAsync
  nameWithType: ActorStateManager.addStateAsync
  fullName: <T> CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.addStateAsync
  package: microsoft.servicefabric.actors
- uid: 6d056e8b
  spec.java:
  - name: <T> CompletableFuture<T>
    fullName: <T> CompletableFuture<T>
- uid: microsoft.servicefabric.actors._actor_state_manager.getStateAsync*
  name: getStateAsync
  nameWithType: ActorStateManager.getStateAsync
  fullName: <T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateManager.getStateAsync
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_state_manager.setStateAsync*
  name: setStateAsync
  nameWithType: ActorStateManager.setStateAsync
  fullName: <T> CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.setStateAsync
  package: microsoft.servicefabric.actors
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.actors._actor_state_manager.removeStateAsync*
  name: removeStateAsync
  nameWithType: ActorStateManager.removeStateAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.removeStateAsync
  package: microsoft.servicefabric.actors
- uid: 2ebb647c
  spec.java:
  - name: <T> CompletableFuture<Boolean>
    fullName: <T> CompletableFuture<Boolean>
- uid: microsoft.servicefabric.actors._actor_state_manager.tryAddStateAsync*
  name: tryAddStateAsync
  nameWithType: ActorStateManager.tryAddStateAsync
  fullName: <T> CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateManager.tryAddStateAsync
  package: microsoft.servicefabric.actors
- uid: 013f9378microsoft.servicefabric.data._conditional_value84ce83e6
  spec.java:
  - name: <T> CompletableFuture<
    fullName: <T> CompletableFuture<
  - uid: microsoft.servicefabric.data._conditional_value
    name: ConditionalValue
    fullName: microsoft.servicefabric.data.ConditionalValue
    href: microsoft.servicefabric.data._conditional_value.yml
  - name: <T>>
    fullName: <T>>
- uid: microsoft.servicefabric.actors._actor_state_manager.tryGetStateAsync*
  name: tryGetStateAsync
  nameWithType: ActorStateManager.tryGetStateAsync
  fullName: <T> CompletableFuture<ConditionalValue<T>> microsoft.servicefabric.actors.ActorStateManager.tryGetStateAsync
  package: microsoft.servicefabric.actors
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: microsoft.servicefabric.actors._actor_state_manager.tryRemoveStateAsync*
  name: tryRemoveStateAsync
  nameWithType: ActorStateManager.tryRemoveStateAsync
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateManager.tryRemoveStateAsync
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_state_manager.containsStateAsync*
  name: containsStateAsync
  nameWithType: ActorStateManager.containsStateAsync
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateManager.containsStateAsync
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_state_manager.getOrAddStateAsync*
  name: getOrAddStateAsync
  nameWithType: ActorStateManager.getOrAddStateAsync
  fullName: <T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateManager.getOrAddStateAsync
  package: microsoft.servicefabric.actors
- uid: 6d910369
  spec.java:
  - name: BiFunction<String, T, T>
    fullName: BiFunction<String, T, T>
- uid: microsoft.servicefabric.actors._actor_state_manager.addOrUpdateStateAsync*
  name: addOrUpdateStateAsync
  nameWithType: ActorStateManager.addOrUpdateStateAsync
  fullName: <T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateManager.addOrUpdateStateAsync
  package: microsoft.servicefabric.actors
- uid: d20512af
  spec.java:
  - name: CompletableFuture<List<String>>
    fullName: CompletableFuture<List<String>>
- uid: microsoft.servicefabric.actors._actor_state_manager.getStateNamesAsync*
  name: getStateNamesAsync
  nameWithType: ActorStateManager.getStateNamesAsync
  fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.ActorStateManager.getStateNamesAsync
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_state_manager.clearCacheAsync*
  name: clearCacheAsync
  nameWithType: ActorStateManager.clearCacheAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.clearCacheAsync
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_state_manager.saveStateAsync*
  name: saveStateAsync
  nameWithType: ActorStateManager.saveStateAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.saveStateAsync
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_state_manager_impl
- uid: microsoft.servicefabric.data._conditional_value
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._conditional_value.yml
  name: ConditionalValue<TValue>
  nameWithType: ConditionalValue<TValue>
  fullName: microsoft.servicefabric.data.ConditionalValue<TValue>
  type: Class
  summary: >-
    <p>Result class returned by DistributedCollections APIs that may or may not return a value.</p>

    <p></p>
  syntax:
    content: public class ConditionalValue<TValue>
    typeParameters:
    - type: 649a7377
      description: <p>Value to initialize the result with. </p>
- uid: microsoft.servicefabric.actors._actor_state_manager
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  name: ActorStateManager
  nameWithType: ActorStateManager
  fullName: microsoft.servicefabric.actors.ActorStateManager
  type: Interface
  summary: <p>Represents the interface that state manager for <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> implements. </p>
  syntax: *o1
- uid: microsoft.servicefabric.actors._actor_state_manager.saveStateAsync()
  parent: microsoft.servicefabric.actors._actor_state_manager
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  name: saveStateAsync()
  nameWithType: ActorStateManager.saveStateAsync()
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.saveStateAsync()
  type: Method
  summary: >-
    <p>Saves all the cached state changes (add/update/remove) that were made since last call to <xref href="microsoft.servicefabric.actors._actor_state_manager.saveStateAsync()" data-throw-if-not-resolved="false"></xref> by actor runtime or by user explicitly.</p>

    <p></p>
  syntax: *o2
- uid: microsoft.servicefabric.actors._actor
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor.yml
  name: Actor
  nameWithType: Actor
  fullName: microsoft.servicefabric.actors.Actor
  type: Interface
  summary: <p>Base interface for inheriting reliable actor interfaces. </p>
  syntax:
    content: public interface Actor
