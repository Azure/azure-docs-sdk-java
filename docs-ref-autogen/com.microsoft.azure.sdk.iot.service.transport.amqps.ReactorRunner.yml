### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.ReactorRunner"
fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.ReactorRunner"
name: "ReactorRunner"
nameWithType: "ReactorRunner"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ReactorRunner"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.ReactorRunner.ReactorRunner(org.apache.qpid.proton.engine.BaseHandler,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.ReactorRunner.ReactorRunner(BaseHandler baseHandler, String threadNamePostfix)"
  name: "ReactorRunner(BaseHandler baseHandler, String threadNamePostfix)"
  nameWithType: "ReactorRunner.ReactorRunner(BaseHandler baseHandler, String threadNamePostfix)"
  parameters:
  - name: "baseHandler"
    type: "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?alt=org.apache.qpid.proton.engine.BaseHandler&text=BaseHandler\" data-throw-if-not-resolved=\"False\" />"
  - name: "threadNamePostfix"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReactorRunner(BaseHandler baseHandler, String threadNamePostfix)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
fields:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.ReactorRunner.CLOSE_REACTOR_GRACEFULLY_TIMEOUT"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.ReactorRunner.CLOSE_REACTOR_GRACEFULLY_TIMEOUT"
  name: "CLOSE_REACTOR_GRACEFULLY_TIMEOUT"
  nameWithType: "ReactorRunner.CLOSE_REACTOR_GRACEFULLY_TIMEOUT"
  modifiers:
  - "static"
  - "final"
  field:
    value: "10000"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final int CLOSE_REACTOR_GRACEFULLY_TIMEOUT"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.ReactorRunner.REACTOR_TIMEOUT"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.ReactorRunner.REACTOR_TIMEOUT"
  name: "REACTOR_TIMEOUT"
  nameWithType: "ReactorRunner.REACTOR_TIMEOUT"
  modifiers:
  - "static"
  - "final"
  field:
    value: "3141"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final int REACTOR_TIMEOUT"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.ReactorRunner.run()"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.ReactorRunner.run()"
  name: "run()"
  nameWithType: "ReactorRunner.run()"
  syntax: "public void run()"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.ReactorRunner.run(long)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.ReactorRunner.run(long timeoutMs)"
  name: "run(long timeoutMs)"
  nameWithType: "ReactorRunner.run(long timeoutMs)"
  parameters:
  - name: "timeoutMs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void run(long timeoutMs)"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.transport.amqps"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.30.0
