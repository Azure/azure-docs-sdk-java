### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactoryBean"
fullName: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactoryBean<T,S,K>"
name: "ReactiveCosmosRepositoryFactoryBean<T,S,K>"
nameWithType: "ReactiveCosmosRepositoryFactoryBean<T,S,K>"
summary: "Adapter for Springs <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FactoryBean\"></xref> interface to allow easy setup of reactive cosmos repository factories via Spring configuration."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet()"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.createRepositoryFactory()"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getEntityInformation()"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject()"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObjectType()"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getPersistentEntity()"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getQueryMethods()"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getRepositoryInformation()"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.isSingleton()"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.setBeanClassLoader(java.lang.ClassLoader)"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.setBeanFactory(org.springframework.beans.factory.BeanFactory)"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.setCustomImplementation(java.lang.Object)"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.setEvaluationContextProvider(org.springframework.data.repository.query.QueryMethodEvaluationContextProvider)"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.setLazyInit(boolean)"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.setMappingContext(org.springframework.data.mapping.context.MappingContext<?,?>)"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.setNamedQueries(org.springframework.data.repository.core.NamedQueries)"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.setQueryLookupStrategyKey(org.springframework.data.repository.query.QueryLookupStrategy.Key)"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.setRepositoryBaseClass(java.lang.Class<?>)"
- "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.setRepositoryFragments(org.springframework.data.repository.core.support.RepositoryComposition.RepositoryFragments)"
syntax: "public class ReactiveCosmosRepositoryFactoryBean<T,S,K> extends RepositoryFactoryBeanSupport<T,S,K>"
constructors:
- "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactoryBean.ReactiveCosmosRepositoryFactoryBean(java.lang.Class<? extends T>)"
methods:
- "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactoryBean.afterPropertiesSet()"
- "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactoryBean.createRepositoryFactory()"
- "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactoryBean.getFactoryInstance()"
- "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactoryBean.setMappingContext(org.springframework.data.mapping.context.MappingContext<?,?>)"
- "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactoryBean.setReactiveCosmosOperations(com.azure.spring.data.cosmos.core.ReactiveCosmosOperations)"
type: "class"
typeParameters:
- name: "T"
- name: "S"
- name: "K"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:3.3.0
