### YamlMime:JavaType
uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation"
fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation"
name: "Conversation"
nameWithType: "Conversation"
summary: "Performs conversation management including add and remove participants."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **Conversation**</br> implements <xref href=\"java.lang.AutoCloseable?alt=java.lang.AutoCloseable&text=AutoCloseable\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.Conversation(long)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.Conversation(long handleValue)"
  name: "Conversation(long handleValue)"
  nameWithType: "Conversation.Conversation(long handleValue)"
  summary: "Protected constructor."
  modifiers:
  - "protected"
  parameters:
  - description: "Internal conversation implementation"
    name: "handleValue"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Conversation(long handleValue)"
  desc: "Protected constructor."
methods:
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.addParticipantAsync(com.microsoft.cognitiveservices.speech.transcription.Participant)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.addParticipantAsync(Participant participant)"
  name: "addParticipantAsync(Participant participant)"
  nameWithType: "Conversation.addParticipantAsync(Participant participant)"
  summary: "Add a participant to a conversation using a participant object."
  parameters:
  - description: "A participant object."
    name: "participant"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.transcription.Participant?alt=com.microsoft.cognitiveservices.speech.transcription.Participant&text=Participant\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Future<Participant> addParticipantAsync(Participant participant)"
  desc: "Add a participant to a conversation using a participant object."
  returns:
    description: "A task representing the asynchronous operation of adding a participant."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.transcription.Participant?alt=com.microsoft.cognitiveservices.speech.transcription.Participant&text=Participant\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.addParticipantAsync(com.microsoft.cognitiveservices.speech.transcription.User)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.addParticipantAsync(User user)"
  name: "addParticipantAsync(User user)"
  nameWithType: "Conversation.addParticipantAsync(User user)"
  summary: "Add a participant to a conversation using a user object."
  parameters:
  - description: "A user object."
    name: "user"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.transcription.User?alt=com.microsoft.cognitiveservices.speech.transcription.User&text=User\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Future<User> addParticipantAsync(User user)"
  desc: "Add a participant to a conversation using a user object."
  returns:
    description: "A task representing the asynchronous operation of adding a participant."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.transcription.User?alt=com.microsoft.cognitiveservices.speech.transcription.User&text=User\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.addParticipantAsync(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.addParticipantAsync(String userId)"
  name: "addParticipantAsync(String userId)"
  nameWithType: "Conversation.addParticipantAsync(String userId)"
  summary: "Add a participant to a conversation using the user's id."
  parameters:
  - description: "The user id."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Future<Participant> addParticipantAsync(String userId)"
  desc: "Add a participant to a conversation using the user's id."
  returns:
    description: "A task representing the asynchronous operation of adding a participant."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.transcription.Participant?alt=com.microsoft.cognitiveservices.speech.transcription.Participant&text=Participant\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.close()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.close()"
  name: "close()"
  nameWithType: "Conversation.close()"
  summary: "Dispose of associated resources."
  syntax: "public void close()"
  desc: "Dispose of associated resources. Note: close() must be called in order to release underlying resources held by the object."
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.createConversationAsync(com.microsoft.cognitiveservices.speech.SpeechConfig)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.createConversationAsync(SpeechConfig speechConfig)"
  name: "createConversationAsync(SpeechConfig speechConfig)"
  nameWithType: "Conversation.createConversationAsync(SpeechConfig speechConfig)"
  summary: "Initializes a new instance of Conversation."
  modifiers:
  - "static"
  parameters:
  - description: "speech configuration."
    name: "speechConfig"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Future<Conversation> createConversationAsync(SpeechConfig speechConfig)"
  desc: "Initializes a new instance of Conversation."
  returns:
    description: "A task representing the asynchronous operation that creates a conversation."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.transcription.Conversation?alt=com.microsoft.cognitiveservices.speech.transcription.Conversation&text=Conversation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.createConversationAsync(com.microsoft.cognitiveservices.speech.SpeechConfig,java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.createConversationAsync(SpeechConfig speechConfig, String conversationId)"
  name: "createConversationAsync(SpeechConfig speechConfig, String conversationId)"
  nameWithType: "Conversation.createConversationAsync(SpeechConfig speechConfig, String conversationId)"
  summary: "Initializes a new instance of Conversation."
  modifiers:
  - "static"
  parameters:
  - description: "speech configuration."
    name: "speechConfig"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig\" data-throw-if-not-resolved=\"False\" />"
  - description: "a unqiue identification of your conversation."
    name: "conversationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Future<Conversation> createConversationAsync(SpeechConfig speechConfig, String conversationId)"
  desc: "Initializes a new instance of Conversation."
  returns:
    description: "A task representing the asynchronous operation that creates a conversation."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.transcription.Conversation?alt=com.microsoft.cognitiveservices.speech.transcription.Conversation&text=Conversation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.deleteConversationAsync()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.deleteConversationAsync()"
  name: "deleteConversationAsync()"
  nameWithType: "Conversation.deleteConversationAsync()"
  summary: "Delete a conversation."
  syntax: "public Future<Void> deleteConversationAsync()"
  desc: "Delete a conversation. After this no one will be able to join the conversation."
  returns:
    description: "An asynchronous operation representing deleting a conversation."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.dispose(boolean)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.dispose(boolean disposing)"
  name: "dispose(boolean disposing)"
  nameWithType: "Conversation.dispose(boolean disposing)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  parameters:
  - description: "PROTECTED"
    name: "disposing"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void dispose(boolean disposing)"
  desc: "PROTECTED"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.endConversationAsync()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.endConversationAsync()"
  name: "endConversationAsync()"
  nameWithType: "Conversation.endConversationAsync()"
  summary: "End a conversation."
  syntax: "public Future<Void> endConversationAsync()"
  desc: "End a conversation."
  returns:
    description: "An empty task representing the asynchronous operation that ending a conversation."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.getAuthorizationToken()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.getAuthorizationToken()"
  name: "getAuthorizationToken()"
  nameWithType: "Conversation.getAuthorizationToken()"
  summary: "Gets the authorization token used to communicate with the service."
  syntax: "public String getAuthorizationToken()"
  desc: "Gets the authorization token used to communicate with the service."
  returns:
    description: "Authorization token."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.getConversationId()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.getConversationId()"
  name: "getConversationId()"
  nameWithType: "Conversation.getConversationId()"
  summary: "Gets the conversation Id."
  syntax: "public String getConversationId()"
  desc: "Gets the conversation Id."
  returns:
    description: "the conversation Id."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.getImpl()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.getImpl()"
  name: "getImpl()"
  nameWithType: "Conversation.getImpl()"
  summary: "Returns the comversation implementation."
  syntax: "public SafeHandle getImpl()"
  desc: "Returns the comversation implementation."
  returns:
    description: "The implementation of the conversation."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.getProperties()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.getProperties()"
  name: "getProperties()"
  nameWithType: "Conversation.getProperties()"
  summary: "The collection of properties and their values defined for this Conversation."
  syntax: "public PropertyCollection getProperties()"
  desc: "The collection of properties and their values defined for this Conversation."
  returns:
    description: "The collection of properties and their values defined for this Conversation."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.PropertyCollection?alt=com.microsoft.cognitiveservices.speech.PropertyCollection&text=PropertyCollection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.lockConversationAsync()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.lockConversationAsync()"
  name: "lockConversationAsync()"
  nameWithType: "Conversation.lockConversationAsync()"
  summary: "Lock a conversation."
  syntax: "public Future<Void> lockConversationAsync()"
  desc: "Lock a conversation. This will prevent new participants from joining."
  returns:
    description: "An asynchronous operation representing locking a conversation."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.muteAllParticipantsAsync()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.muteAllParticipantsAsync()"
  name: "muteAllParticipantsAsync()"
  nameWithType: "Conversation.muteAllParticipantsAsync()"
  summary: "Mute all other participants in the conversation."
  syntax: "public Future<Void> muteAllParticipantsAsync()"
  desc: "Mute all other participants in the conversation. After this no other participants will have their speech recognitions broadcast, nor be able to send text messages."
  returns:
    description: "An asynchronous operation representing muting all participants."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.muteParticipantAsync(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.muteParticipantAsync(String userId)"
  name: "muteParticipantAsync(String userId)"
  nameWithType: "Conversation.muteParticipantAsync(String userId)"
  summary: "Mute a participant."
  parameters:
  - description: "A user identifier."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Future<Void> muteParticipantAsync(String userId)"
  desc: "Mute a participant."
  returns:
    description: "An asynchronous operation representing muting a particular participant."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.removeParticipantAsync(com.microsoft.cognitiveservices.speech.transcription.Participant)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.removeParticipantAsync(Participant participant)"
  name: "removeParticipantAsync(Participant participant)"
  nameWithType: "Conversation.removeParticipantAsync(Participant participant)"
  summary: "Remove a participant from a conversation using a participant object."
  parameters:
  - description: "A participant object."
    name: "participant"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.transcription.Participant?alt=com.microsoft.cognitiveservices.speech.transcription.Participant&text=Participant\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Future<Void> removeParticipantAsync(Participant participant)"
  desc: "Remove a participant from a conversation using a participant object."
  returns:
    description: "Am empty task representing the asynchronous operation of removing a participant."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.removeParticipantAsync(com.microsoft.cognitiveservices.speech.transcription.User)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.removeParticipantAsync(User user)"
  name: "removeParticipantAsync(User user)"
  nameWithType: "Conversation.removeParticipantAsync(User user)"
  summary: "Remove a participant from a conversation using a user object."
  parameters:
  - description: "A user object."
    name: "user"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.transcription.User?alt=com.microsoft.cognitiveservices.speech.transcription.User&text=User\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Future<Void> removeParticipantAsync(User user)"
  desc: "Remove a participant from a conversation using a user object."
  returns:
    description: "Am empty task representing the asynchronous operation of removing a participant."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.removeParticipantAsync(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.removeParticipantAsync(String userId)"
  name: "removeParticipantAsync(String userId)"
  nameWithType: "Conversation.removeParticipantAsync(String userId)"
  summary: "Remove a participant from a conversation using a user id."
  parameters:
  - description: "A user id."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Future<Void> removeParticipantAsync(String userId)"
  desc: "Remove a participant from a conversation using a user id."
  returns:
    description: "Am empty task representing the asynchronous operation of removing a participant."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.setAuthorizationToken(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.setAuthorizationToken(String token)"
  name: "setAuthorizationToken(String token)"
  nameWithType: "Conversation.setAuthorizationToken(String token)"
  summary: "Sets the authorization token used to communicate with the service."
  parameters:
  - description: "Authorization token."
    name: "token"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setAuthorizationToken(String token)"
  desc: "Sets the authorization token used to communicate with the service. Note: The caller needs to ensure that the authorization token is valid. Before the authorization token expires, the caller needs to refresh it by calling this setter with a new valid token. Otherwise, the recognizer will encounter errors during recognition."
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.startConversationAsync()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.startConversationAsync()"
  name: "startConversationAsync()"
  nameWithType: "Conversation.startConversationAsync()"
  summary: "Start a conversation."
  syntax: "public Future<Void> startConversationAsync()"
  desc: "Start a conversation."
  returns:
    description: "An asynchronous operation representing starting a conversation."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.unlockConversationAsync()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.unlockConversationAsync()"
  name: "unlockConversationAsync()"
  nameWithType: "Conversation.unlockConversationAsync()"
  summary: "Unlocks a conversation."
  syntax: "public Future<Void> unlockConversationAsync()"
  desc: "Unlocks a conversation."
  returns:
    description: "An asynchronous operation representing unlocking a conversation."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.unmuteAllParticipantsAsync()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.unmuteAllParticipantsAsync()"
  name: "unmuteAllParticipantsAsync()"
  nameWithType: "Conversation.unmuteAllParticipantsAsync()"
  summary: "Unmute all other participants in the conversation."
  syntax: "public Future<Void> unmuteAllParticipantsAsync()"
  desc: "Unmute all other participants in the conversation."
  returns:
    description: "An asynchronous operation representing un-muting all participants."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.Conversation.unmuteParticipantAsync(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.Conversation.unmuteParticipantAsync(String userId)"
  name: "unmuteParticipantAsync(String userId)"
  nameWithType: "Conversation.unmuteParticipantAsync(String userId)"
  summary: "Unmute a participant."
  parameters:
  - description: "A user identifier."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Future<Void> unmuteParticipantAsync(String userId)"
  desc: "Unmute a participant."
  returns:
    description: "An asynchronous operation representing un-muting a particular participant."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Performs conversation management including add and remove participants. Note: close() must be called in order to release underlying resources held by the object. Added in version 1.8.0"
implements:
- "<xref href=\"java.lang.AutoCloseable?alt=java.lang.AutoCloseable&text=AutoCloseable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.cognitiveservices.speech.transcription"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.24.2
