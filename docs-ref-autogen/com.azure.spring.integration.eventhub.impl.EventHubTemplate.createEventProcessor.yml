### YamlMime:JavaMember
uid: "com.azure.spring.integration.eventhub.impl.EventHubTemplate.createEventProcessor*"
fullName: "com.azure.spring.integration.eventhub.impl.EventHubTemplate.createEventProcessor"
name: "createEventProcessor"
nameWithType: "EventHubTemplate.createEventProcessor"
members:
- uid: "com.azure.spring.integration.eventhub.impl.EventHubTemplate.createEventProcessor(java.util.function.Consumer<org.springframework.messaging.Message<?>>,java.lang.Class<?>)"
  fullName: "com.azure.spring.integration.eventhub.impl.EventHubTemplate.createEventProcessor(Consumer<Message<?>> consumer, Class<?> messagePayloadType)"
  name: "createEventProcessor(Consumer<Message<?>> consumer, Class<?> messagePayloadType)"
  nameWithType: "EventHubTemplate.createEventProcessor(Consumer<Message<?>> consumer, Class<?> messagePayloadType)"
  parameters:
  - name: "consumer"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.springframework.messaging.Message?alt=org.springframework.messaging.Message&text=Message\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;&gt;"
  - name: "messagePayloadType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public EventHubProcessor createEventProcessor(Consumer<Message<?>> consumer, Class<?> messagePayloadType)"
  returns:
    type: "<xref href=\"com.azure.spring.integration.eventhub.impl.EventHubProcessor?alt=com.azure.spring.integration.eventhub.impl.EventHubProcessor&text=EventHubProcessor\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.spring.integration.eventhub.impl"
artifact: com.azure.spring:azure-spring-integration-eventhubs:2.0.0
