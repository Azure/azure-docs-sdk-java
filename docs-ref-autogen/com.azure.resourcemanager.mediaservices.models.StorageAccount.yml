### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.StorageAccount"
fullName: "com.azure.resourcemanager.mediaservices.models.StorageAccount"
name: "StorageAccount"
nameWithType: "StorageAccount"
summary: "The storage account details."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class StorageAccount"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.StorageAccount.StorageAccount()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StorageAccount.StorageAccount()"
  name: "StorageAccount()"
  nameWithType: "StorageAccount.StorageAccount()"
  syntax: "public StorageAccount()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.StorageAccount.id()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StorageAccount.id()"
  name: "id()"
  nameWithType: "StorageAccount.id()"
  summary: "Get the id property: The ID of the storage account resource."
  syntax: "public String id()"
  desc: "Get the id property: The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StorageAccount.identity()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StorageAccount.identity()"
  name: "identity()"
  nameWithType: "StorageAccount.identity()"
  summary: "Get the identity property: The storage account identity."
  syntax: "public ResourceIdentity identity()"
  desc: "Get the identity property: The storage account identity."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ResourceIdentity?alt=com.azure.resourcemanager.mediaservices.models.ResourceIdentity&text=ResourceIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StorageAccount.status()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StorageAccount.status()"
  name: "status()"
  nameWithType: "StorageAccount.status()"
  summary: "Get the status property: The current status of the storage account mapping."
  syntax: "public String status()"
  desc: "Get the status property: The current status of the storage account mapping."
  returns:
    description: "the status value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StorageAccount.type()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StorageAccount.type()"
  name: "type()"
  nameWithType: "StorageAccount.type()"
  summary: "Get the type property: The type of the storage account."
  syntax: "public StorageAccountType type()"
  desc: "Get the type property: The type of the storage account."
  returns:
    description: "the type value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageAccountType?alt=com.azure.resourcemanager.mediaservices.models.StorageAccountType&text=StorageAccountType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StorageAccount.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StorageAccount.validate()"
  name: "validate()"
  nameWithType: "StorageAccount.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.StorageAccount.withId(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.StorageAccount.withId(String id)"
  name: "withId(String id)"
  nameWithType: "StorageAccount.withId(String id)"
  summary: "Set the id property: The ID of the storage account resource."
  parameters:
  - description: "the id value to set."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccount withId(String id)"
  desc: "Set the id property: The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts."
  returns:
    description: "the StorageAccount object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageAccount?alt=com.azure.resourcemanager.mediaservices.models.StorageAccount&text=StorageAccount\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StorageAccount.withIdentity(com.azure.resourcemanager.mediaservices.models.ResourceIdentity)"
  fullName: "com.azure.resourcemanager.mediaservices.models.StorageAccount.withIdentity(ResourceIdentity identity)"
  name: "withIdentity(ResourceIdentity identity)"
  nameWithType: "StorageAccount.withIdentity(ResourceIdentity identity)"
  summary: "Set the identity property: The storage account identity."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ResourceIdentity?alt=com.azure.resourcemanager.mediaservices.models.ResourceIdentity&text=ResourceIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccount withIdentity(ResourceIdentity identity)"
  desc: "Set the identity property: The storage account identity."
  returns:
    description: "the StorageAccount object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageAccount?alt=com.azure.resourcemanager.mediaservices.models.StorageAccount&text=StorageAccount\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StorageAccount.withType(com.azure.resourcemanager.mediaservices.models.StorageAccountType)"
  fullName: "com.azure.resourcemanager.mediaservices.models.StorageAccount.withType(StorageAccountType type)"
  name: "withType(StorageAccountType type)"
  nameWithType: "StorageAccount.withType(StorageAccountType type)"
  summary: "Set the type property: The type of the storage account."
  parameters:
  - description: "the type value to set."
    name: "type"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageAccountType?alt=com.azure.resourcemanager.mediaservices.models.StorageAccountType&text=StorageAccountType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccount withType(StorageAccountType type)"
  desc: "Set the type property: The type of the storage account."
  returns:
    description: "the StorageAccount object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageAccount?alt=com.azure.resourcemanager.mediaservices.models.StorageAccount&text=StorageAccount\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The storage account details."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0
