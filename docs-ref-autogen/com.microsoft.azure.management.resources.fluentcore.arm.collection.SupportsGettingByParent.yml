### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent"
fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T,ParentT,ManagerT>"
name: "SupportsGettingByParent<T,ParentT,ManagerT>"
nameWithType: "SupportsGettingByParent<T,ParentT,ManagerT>"
summary: "Provides access to getting a specific Azure resource based on its resource group and parent."
syntax: "public interface SupportsGettingByParent<T,ParentT,ManagerT>"
methods:
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParent(ParentT,java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T,ParentT,ManagerT>.getByParent(ParentT parentResource, String name)"
  name: "getByParent(ParentT parentResource, String name)"
  nameWithType: "SupportsGettingByParent<T,ParentT,ManagerT>.getByParent(ParentT parentResource, String name)"
  summary: "Gets the information about a resource from Azure based on the resource id."
  modifiers:
  - "abstract"
  parameters:
  - description: "the instance of parent resource"
    name: "parentResource"
    type: "<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of resource"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T getByParent(ParentT parentResource, String name)"
  desc: "Gets the information about a resource from Azure based on the resource id."
  returns:
    description: "an immutable representation of the resource"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParent(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T,ParentT,ManagerT>.getByParent(String resourceGroup, String parentName, String name)"
  name: "getByParent(String resourceGroup, String parentName, String name)"
  nameWithType: "SupportsGettingByParent<T,ParentT,ManagerT>.getByParent(String resourceGroup, String parentName, String name)"
  summary: "Gets the information about a resource from Azure based on the resource id."
  modifiers:
  - "abstract"
  parameters:
  - description: "the name of resource group"
    name: "resourceGroup"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of parent resource"
    name: "parentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of resource"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T getByParent(String resourceGroup, String parentName, String name)"
  desc: "Gets the information about a resource from Azure based on the resource id."
  returns:
    description: "an immutable representation of the resource"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParentAsync(ParentT,java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync(ParentT parentResource, String name)"
  name: "getByParentAsync(ParentT parentResource, String name)"
  nameWithType: "SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync(ParentT parentResource, String name)"
  summary: "Gets the information about a resource from Azure based on the resource id."
  modifiers:
  - "abstract"
  parameters:
  - description: "the instance of parent resource."
    name: "parentResource"
    type: "<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of resource."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<T> getByParentAsync(ParentT parentResource, String name)"
  desc: "Gets the information about a resource from Azure based on the resource id."
  returns:
    description: "a representation of the deferred computation of this call returning the found resource"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParentAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync(String resourceGroup, String parentName, String name)"
  name: "getByParentAsync(String resourceGroup, String parentName, String name)"
  nameWithType: "SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync(String resourceGroup, String parentName, String name)"
  summary: "Gets the information about a resource from Azure based on the resource id."
  modifiers:
  - "abstract"
  parameters:
  - description: "the name of resource group"
    name: "resourceGroup"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of parent resource"
    name: "parentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of resource"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<T> getByParentAsync(String resourceGroup, String parentName, String name)"
  desc: "Gets the information about a resource from Azure based on the resource id."
  returns:
    description: "a representation of the deferred computation of this call returning the found resource"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
typeParameters:
- description: "the type of the resource collection"
  name: "T"
- description: "the parent resource type"
  name: "ParentT"
- description: "the client manager type representing the service"
  name: "ManagerT"
desc: "Provides access to getting a specific Azure resource based on its resource group and parent.\n\n(Note this interface is not intended to be implemented by user code.)"
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.arm.collection"
artifact: com.microsoft.azure:azure-mgmt-resources:1.41.4
