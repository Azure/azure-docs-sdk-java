items:
- uid: system.fabric.health._node_health
  id: _node_health
  parent: system.fabric.health
  children:
  - system.fabric.health._node_health.getNodeName()
  href: system.fabric.health._node_health.yml
  langs:
  - java
  name: NodeHealth
  nameWithType: NodeHealth
  fullName: system.fabric.health.NodeHealth
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/NodeHealth.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/health/NodeHealth.java
    startLine: 8
  package: system.fabric.health
  summary: <p>Describes the health of a node as returned by <xref href="system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription)" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class NodeHealth extends EntityHealth
  inheritance:
  - java.lang.Object
  - system.fabric.health._entity_health
  inheritedMembers:
  - system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  - system.fabric.health._entity_health.getAggregatedHealthState()
  - system.fabric.health._entity_health.getHealthEvents()
  - system.fabric.health._entity_health.getUnhealthyEvaluations()
  - system.fabric.health._node_health.NodeHealth(String,int,HealthEvent [],HealthEvaluation [])
- uid: system.fabric.health._node_health.getNodeName()
  id: getNodeName()
  parent: system.fabric.health._node_health
  href: system.fabric.health._node_health.yml
  langs:
  - java
  name: getNodeName()
  nameWithType: NodeHealth.getNodeName()
  fullName: String system.fabric.health.NodeHealth.getNodeName()
  overload: system.fabric.health._node_health.getNodeName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/NodeHealth.java
    startLine: 29
  package: system.fabric.health
  summary: >-
    <p>Gets the node name.</p>

    <p></p>
  syntax:
    content: public String getNodeName()
    return:
      type: "26831127"
      description: <p>The node name. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: system.fabric.health._node_health.getNodeName*
  name: getNodeName
  nameWithType: NodeHealth.getNodeName
  fullName: String system.fabric.health.NodeHealth.getNodeName
  package: system.fabric.health
- uid: system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  nameWithType: EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  fullName: system.fabric.health.EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  type: Constructor
  syntax:
    content: protected EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
    parameters:
    - id: aggregatedHealthState
      type: f75371fa
    - id: healthEvents
      type: 5618da2dsystem.fabric.health._health_eventa08ddfce
    - id: unhealthyEvaluations
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
- uid: system.fabric.health._entity_health.getAggregatedHealthState()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getAggregatedHealthState()
  nameWithType: EntityHealth.getAggregatedHealthState()
  fullName: HealthState system.fabric.health.EntityHealth.getAggregatedHealthState()
  type: Method
  summary: >-
    <p>Gets the entity aggregated health state.</p>

    <p></p>
  syntax:
    content: public HealthState getAggregatedHealthState()
    return:
      type: system.fabric.health._health_state
      description: >-
        <p>

          <xref href="system.fabric.health._health_state" data-throw-if-not-resolved="false"></xref> representing the aggregated health state computed by Health Manager based on reported events on entity and its children (if any) and desired health policy. </p>
- uid: system.fabric.health._entity_health.getHealthEvents()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getHealthEvents()
  nameWithType: EntityHealth.getHealthEvents()
  fullName: List<HealthEvent> system.fabric.health.EntityHealth.getHealthEvents()
  type: Method
  summary: >-
    <p>Gets the health events reported on the entity.</p>

    <p>

      <bold>Remarks:</bold>The health events are created based on health reports sent to health store. They contain additional metadata added by health store. </p>
  syntax:
    content: public List<HealthEvent> getHealthEvents()
    return:
      type: 5618da2dsystem.fabric.health._health_eventa08ddfce
      description: <p>The health events reported on the entity. </p>
- uid: system.fabric.health._entity_health.getUnhealthyEvaluations()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getUnhealthyEvaluations()
  nameWithType: EntityHealth.getUnhealthyEvaluations()
  fullName: List<HealthEvaluation> system.fabric.health.EntityHealth.getUnhealthyEvaluations()
  type: Method
  summary: >-
    <p>Gets the unhealthy evaluations that show why the current aggregated health state was returned by Health Manager.</p>

    <p></p>
  syntax:
    content: public List<HealthEvaluation> getUnhealthyEvaluations()
    return:
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
      description: <p>The unhealthy evaluations that describe why the current aggregated health state was returned by Health Manager. </p>
- uid: system.fabric.health._node_health.NodeHealth(String,int,HealthEvent [],HealthEvaluation [])
- uid: system.fabric.health._entity_health
  parent: system.fabric.health
  href: system.fabric.health._entity_health.yml
  name: EntityHealth
  nameWithType: EntityHealth
  fullName: system.fabric.health.EntityHealth
  type: Class
  summary: <p>Represents the base class for all entity health related classes. </p>
  syntax:
    content: public class EntityHealth
- uid: system.fabric.health._health_event
  parent: system.fabric.health
  href: system.fabric.health._health_event.yml
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: system.fabric.health.HealthEvent
  type: Class
  summary: <p>A <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> object is a structure which contains the health information that is used while reporting health on an entity via ReportHealth API </p>
  syntax:
    content: public class HealthEvent
- uid: system.fabric.health._health_evaluation
  parent: system.fabric.health
  href: system.fabric.health._health_evaluation.yml
  name: HealthEvaluation
  nameWithType: HealthEvaluation
  fullName: system.fabric.health.HealthEvaluation
  type: Class
  summary: <p>Represents a health evaluation which describes the data and the algorithm used by health store to evaluate the health of an entity. </p>
  syntax:
    content: public class HealthEvaluation
- uid: system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription)
  parent: system.fabric._health_client
  href: system.fabric._health_client.yml
  name: getNodeHealthAsync(NodeHealthQueryDescription queryDescription)
  nameWithType: HealthClient.getNodeHealthAsync(NodeHealthQueryDescription queryDescription)
  fullName: CompletableFuture<NodeHealth> system.fabric.HealthClient.getNodeHealthAsync(NodeHealthQueryDescription queryDescription)
  type: Method
  summary: >-
    <p>Asynchronously gets the health of a Service Fabric node by using the specified timeout and cancellation token.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<NodeHealth> getNodeHealthAsync(NodeHealthQueryDescription queryDescription)
    parameters:
    - id: queryDescription
      type: system.fabric._node_health_query_description
      description: <p>The query description that defines parameters like health policy, filters etc. </p>
    return:
      type: 9cdf14d0system.fabric.health._node_healtha08ddfce
      description: <p>The health of a Service Fabric node. </p>
