### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.certificates.CertificateService"
  id: "CertificateService"
  parent: "com.azure.security.keyvault.certificates"
  children:
  - "com.azure.security.keyvault.certificates.CertificateService.backupCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.createCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateRequestParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.deleteCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.deleteCertificateContacts(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.deleteCertificateIssuer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.deletetCertificateOperation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getCertificateContacts(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuers(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getCertificateOperation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getCertificatePolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getCertificatePoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getCertificateVersions(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getCertificateWithPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getCertificates(java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getCertificates(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificatePoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificates(java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificates(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.importCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateImportParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.mergeCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateMergeParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.purgeDeletedcertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.recoverDeletedCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.restoreCertificate(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateRestoreParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.setCertificateContacts(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.Contacts,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.setCertificateIssuer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateIssuerSetParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.updateCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateUpdateParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.updateCertificateIssuer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateIssuerUpdateParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.updateCertificateOperation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateOperationUpdateParameter,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.certificates.CertificateService.updateCertificatePolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificatePolicyRequest,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "CertificateService"
  nameWithType: "CertificateService"
  fullName: "com.azure.security.keyvault.certificates.CertificateService"
  type: "Interface"
  package: "com.azure.security.keyvault.certificates"
  summary: "The interface defining all the services for <xref uid=\"com.azure.security.keyvault.certificates.CertificateAsyncClient\" data-throw-if-not-resolved=\"false\">CertificateAsyncClient</xref> to be used by the proxy service to perform REST calls. This is package-private so that these REST calls are transparent to the user."
  syntax:
    content: " interface CertificateService"
- uid: "com.azure.security.keyvault.certificates.CertificateService.backupCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "backupCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "backupCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.backupCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.backupCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.backupCertificate*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<CertificateBackup>> backupCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.CertificateBackup>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.createCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateRequestParameters,java.lang.String,com.azure.core.util.Context)"
  id: "createCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateRequestParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "createCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateRequestParameters parameters, String type, Context context)"
  nameWithType: "CertificateService.createCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateRequestParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.createCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateRequestParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.createCertificate*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<CertificateOperation>> createCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateRequestParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.certificates.CertificateRequestParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificateOperation>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "deleteCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "deleteCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.deleteCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificate*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<DeletedCertificate>> deleteCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.DeletedCertificate>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificateContacts(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "deleteCertificateContacts(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "deleteCertificateContacts(String url, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.deleteCertificateContacts(String url, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificateContacts(String url, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificateContacts*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<PagedResponse<CertificateContact>> deleteCertificateContacts(String url, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.CertificateContact>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificateIssuer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "deleteCertificateIssuer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "deleteCertificateIssuer(String url, String issuerName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.deleteCertificateIssuer(String url, String issuerName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificateIssuer(String url, String issuerName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificateIssuer*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<CertificateIssuer>> deleteCertificateIssuer(String url, String issuerName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "issuerName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificateIssuer>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.deletetCertificateOperation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "deletetCertificateOperation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "deletetCertificateOperation(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.deletetCertificateOperation(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.deletetCertificateOperation(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.deletetCertificateOperation*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<CertificateOperation>> deletetCertificateOperation(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificateOperation>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getCertificate(String url, String certificateName, String certificateVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getCertificate(String url, String certificateName, String certificateVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificate(String url, String certificateName, String certificateVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getCertificate*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<KeyVaultCertificate>> getCertificate(String url, String certificateName, String certificateVersion, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "certificateVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.KeyVaultCertificate>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateContacts(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getCertificateContacts(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getCertificateContacts(String url, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getCertificateContacts(String url, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateContacts(String url, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getCertificateContacts*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<PagedResponse<CertificateContact>> getCertificateContacts(String url, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.CertificateContact>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getCertificateIssuer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getCertificateIssuer(String url, String apiVersion, String acceptLanguage, String issuerName, String type, Context context)"
  nameWithType: "CertificateService.getCertificateIssuer(String url, String apiVersion, String acceptLanguage, String issuerName, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuer(String url, String apiVersion, String acceptLanguage, String issuerName, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuer*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<CertificateIssuer>> getCertificateIssuer(String url, String apiVersion, String acceptLanguage, String issuerName, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "issuerName"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificateIssuer>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuers(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getCertificateIssuers(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getCertificateIssuers(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getCertificateIssuers(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuers(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuers*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<PagedResponse<IssuerProperties>> getCertificateIssuers(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.IssuerProperties>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getCertificateIssuers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getCertificateIssuers(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getCertificateIssuers(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuers(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuers*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<PagedResponse<IssuerProperties>> getCertificateIssuers(String url, String nextUrl, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "nextUrl"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.IssuerProperties>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateOperation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getCertificateOperation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getCertificateOperation(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getCertificateOperation(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateOperation(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getCertificateOperation*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<CertificateOperation>> getCertificateOperation(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificateOperation>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificatePolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getCertificatePolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getCertificatePolicy(String url, String apiVersion, String acceptLanguage, String certificateName, String type, Context context)"
  nameWithType: "CertificateService.getCertificatePolicy(String url, String apiVersion, String acceptLanguage, String certificateName, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificatePolicy(String url, String apiVersion, String acceptLanguage, String certificateName, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getCertificatePolicy*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<CertificatePolicy>> getCertificatePolicy(String url, String apiVersion, String acceptLanguage, String certificateName, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificatePolicy>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificatePoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getCertificatePoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getCertificatePoller(String url, String certificateName, String certificateVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getCertificatePoller(String url, String certificateName, String certificateVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificatePoller(String url, String certificateName, String certificateVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getCertificatePoller*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<KeyVaultCertificateWithPolicy>> getCertificatePoller(String url, String certificateName, String certificateVersion, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "certificateVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateVersions(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getCertificateVersions(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getCertificateVersions(String url, String certificateName, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getCertificateVersions(String url, String certificateName, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateVersions(String url, String certificateName, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getCertificateVersions*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<PagedResponse<CertificateProperties>> getCertificateVersions(String url, String certificateName, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.CertificateProperties>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateWithPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getCertificateWithPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getCertificateWithPolicy(String url, String certificateName, String certificateVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getCertificateWithPolicy(String url, String certificateName, String certificateVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateWithPolicy(String url, String certificateName, String certificateVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getCertificateWithPolicy*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<KeyVaultCertificateWithPolicy>> getCertificateWithPolicy(String url, String certificateName, String certificateVersion, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "certificateVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificates(java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getCertificates(java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getCertificates(String url, Integer maxresults, Boolean includePending, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getCertificates(String url, Integer maxresults, Boolean includePending, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificates(String url, Integer maxresults, Boolean includePending, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getCertificates*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<PagedResponse<CertificateProperties>> getCertificates(String url, Integer maxresults, Boolean includePending, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "includePending"
      type: "java.lang.Boolean"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.CertificateProperties>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificates(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getCertificates(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getCertificates(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getCertificates(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificates(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getCertificates*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<PagedResponse<CertificateProperties>> getCertificates(String url, String nextUrl, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "nextUrl"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.CertificateProperties>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getDeletedCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getDeletedCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getDeletedCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificate*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<DeletedCertificate>> getDeletedCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.DeletedCertificate>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificatePoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getDeletedCertificatePoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getDeletedCertificatePoller(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getDeletedCertificatePoller(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificatePoller(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificatePoller*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<DeletedCertificate>> getDeletedCertificatePoller(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.DeletedCertificate>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificates(java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getDeletedCertificates(java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getDeletedCertificates(String url, Integer maxresults, Boolean includePending, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getDeletedCertificates(String url, Integer maxresults, Boolean includePending, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificates(String url, Integer maxresults, Boolean includePending, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificates*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<PagedResponse<DeletedCertificate>> getDeletedCertificates(String url, Integer maxresults, Boolean includePending, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "includePending"
      type: "java.lang.Boolean"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.DeletedCertificate>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificates(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getDeletedCertificates(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "getDeletedCertificates(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.getDeletedCertificates(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificates(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificates*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<PagedResponse<DeletedCertificate>> getDeletedCertificates(String url, String nextUrl, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "nextUrl"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.DeletedCertificate>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.importCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateImportParameters,java.lang.String,com.azure.core.util.Context)"
  id: "importCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateImportParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "importCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateImportParameters parameters, String type, Context context)"
  nameWithType: "CertificateService.importCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateImportParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.importCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateImportParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.importCertificate*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<KeyVaultCertificateWithPolicy>> importCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateImportParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.certificates.CertificateImportParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.mergeCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateMergeParameters,java.lang.String,com.azure.core.util.Context)"
  id: "mergeCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateMergeParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "mergeCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateMergeParameters parameters, String type, Context context)"
  nameWithType: "CertificateService.mergeCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateMergeParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.mergeCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateMergeParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.mergeCertificate*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<KeyVaultCertificateWithPolicy>> mergeCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateMergeParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.certificates.CertificateMergeParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.purgeDeletedcertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "purgeDeletedcertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "purgeDeletedcertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.purgeDeletedcertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.purgeDeletedcertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.purgeDeletedcertificate*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<Void>> purgeDeletedcertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.recoverDeletedCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "recoverDeletedCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "recoverDeletedCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CertificateService.recoverDeletedCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.recoverDeletedCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.recoverDeletedCertificate*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<KeyVaultCertificateWithPolicy>> recoverDeletedCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.restoreCertificate(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateRestoreParameters,java.lang.String,com.azure.core.util.Context)"
  id: "restoreCertificate(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateRestoreParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "restoreCertificate(String url, String apiVersion, String acceptLanguage, CertificateRestoreParameters parameters, String type, Context context)"
  nameWithType: "CertificateService.restoreCertificate(String url, String apiVersion, String acceptLanguage, CertificateRestoreParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.restoreCertificate(String url, String apiVersion, String acceptLanguage, CertificateRestoreParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.restoreCertificate*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<KeyVaultCertificateWithPolicy>> restoreCertificate(String url, String apiVersion, String acceptLanguage, CertificateRestoreParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.certificates.CertificateRestoreParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.setCertificateContacts(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.Contacts,java.lang.String,com.azure.core.util.Context)"
  id: "setCertificateContacts(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.Contacts,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "setCertificateContacts(String url, String apiVersion, String acceptLanguage, Contacts contacts, String type, Context context)"
  nameWithType: "CertificateService.setCertificateContacts(String url, String apiVersion, String acceptLanguage, Contacts contacts, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.setCertificateContacts(String url, String apiVersion, String acceptLanguage, Contacts contacts, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.setCertificateContacts*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<PagedResponse<CertificateContact>> setCertificateContacts(String url, String apiVersion, String acceptLanguage, Contacts contacts, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "contacts"
      type: "com.azure.security.keyvault.certificates.Contacts"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.CertificateContact>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.setCertificateIssuer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateIssuerSetParameters,java.lang.String,com.azure.core.util.Context)"
  id: "setCertificateIssuer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateIssuerSetParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "setCertificateIssuer(String url, String apiVersion, String acceptLanguage, String issuerName, CertificateIssuerSetParameters parameter, String type, Context context)"
  nameWithType: "CertificateService.setCertificateIssuer(String url, String apiVersion, String acceptLanguage, String issuerName, CertificateIssuerSetParameters parameter, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.setCertificateIssuer(String url, String apiVersion, String acceptLanguage, String issuerName, CertificateIssuerSetParameters parameter, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.setCertificateIssuer*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<CertificateIssuer>> setCertificateIssuer(String url, String apiVersion, String acceptLanguage, String issuerName, CertificateIssuerSetParameters parameter, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "issuerName"
      type: "java.lang.String"
    - id: "parameter"
      type: "com.azure.security.keyvault.certificates.CertificateIssuerSetParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificateIssuer>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.updateCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateUpdateParameters,java.lang.String,com.azure.core.util.Context)"
  id: "updateCertificate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateUpdateParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "updateCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateUpdateParameters properties, String type, Context context)"
  nameWithType: "CertificateService.updateCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateUpdateParameters properties, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.updateCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateUpdateParameters properties, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.updateCertificate*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<KeyVaultCertificate>> updateCertificate(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateUpdateParameters properties, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "properties"
      type: "com.azure.security.keyvault.certificates.CertificateUpdateParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.KeyVaultCertificate>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.updateCertificateIssuer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateIssuerUpdateParameters,java.lang.String,com.azure.core.util.Context)"
  id: "updateCertificateIssuer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateIssuerUpdateParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "updateCertificateIssuer(String url, String issuerName, String apiVersion, String acceptLanguage, CertificateIssuerUpdateParameters properties, String type, Context context)"
  nameWithType: "CertificateService.updateCertificateIssuer(String url, String issuerName, String apiVersion, String acceptLanguage, CertificateIssuerUpdateParameters properties, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.updateCertificateIssuer(String url, String issuerName, String apiVersion, String acceptLanguage, CertificateIssuerUpdateParameters properties, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.updateCertificateIssuer*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<CertificateIssuer>> updateCertificateIssuer(String url, String issuerName, String apiVersion, String acceptLanguage, CertificateIssuerUpdateParameters properties, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "issuerName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "properties"
      type: "com.azure.security.keyvault.certificates.CertificateIssuerUpdateParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificateIssuer>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.updateCertificateOperation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateOperationUpdateParameter,java.lang.String,com.azure.core.util.Context)"
  id: "updateCertificateOperation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificateOperationUpdateParameter,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "updateCertificateOperation(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateOperationUpdateParameter properties, String type, Context context)"
  nameWithType: "CertificateService.updateCertificateOperation(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateOperationUpdateParameter properties, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.updateCertificateOperation(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateOperationUpdateParameter properties, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.updateCertificateOperation*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<CertificateOperation>> updateCertificateOperation(String url, String certificateName, String apiVersion, String acceptLanguage, CertificateOperationUpdateParameter properties, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "properties"
      type: "com.azure.security.keyvault.certificates.CertificateOperationUpdateParameter"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificateOperation>>"
- uid: "com.azure.security.keyvault.certificates.CertificateService.updateCertificatePolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificatePolicyRequest,java.lang.String,com.azure.core.util.Context)"
  id: "updateCertificatePolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.CertificatePolicyRequest,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.certificates.CertificateService"
  langs:
  - "java"
  name: "updateCertificatePolicy(String url, String apiVersion, String acceptLanguage, String certificateName, CertificatePolicyRequest certificatePolicyRequest, String type, Context context)"
  nameWithType: "CertificateService.updateCertificatePolicy(String url, String apiVersion, String acceptLanguage, String certificateName, CertificatePolicyRequest certificatePolicyRequest, String type, Context context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.updateCertificatePolicy(String url, String apiVersion, String acceptLanguage, String certificateName, CertificatePolicyRequest certificatePolicyRequest, String type, Context context)"
  overload: "com.azure.security.keyvault.certificates.CertificateService.updateCertificatePolicy*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: "public abstract Mono<Response<CertificatePolicy>> updateCertificatePolicy(String url, String apiVersion, String acceptLanguage, String certificateName, CertificatePolicyRequest certificatePolicyRequest, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "certificateName"
      type: "java.lang.String"
    - id: "certificatePolicyRequest"
      type: "com.azure.security.keyvault.certificates.CertificatePolicyRequest"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificatePolicy>>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.security.keyvault.certificates.CertificateRequestParameters"
  name: "CertificateRequestParameters"
  nameWithType: "CertificateRequestParameters"
  fullName: "com.azure.security.keyvault.certificates.CertificateRequestParameters"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificateOperation>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.certificates.models.CertificateOperation"
    name: "CertificateOperation"
    fullName: "com.azure.security.keyvault.certificates.models.CertificateOperation"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.CertificateService.createCertificate*"
  name: "createCertificate"
  nameWithType: "CertificateService.createCertificate"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.createCertificate"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateOperation*"
  name: "getCertificateOperation"
  nameWithType: "CertificateService.getCertificateOperation"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateOperation"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateOperationUpdateParameter"
  name: "CertificateOperationUpdateParameter"
  nameWithType: "CertificateOperationUpdateParameter"
  fullName: "com.azure.security.keyvault.certificates.CertificateOperationUpdateParameter"
- uid: "com.azure.security.keyvault.certificates.CertificateService.updateCertificateOperation*"
  name: "updateCertificateOperation"
  nameWithType: "CertificateService.updateCertificateOperation"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.updateCertificateOperation"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateService.deletetCertificateOperation*"
  name: "deletetCertificateOperation"
  nameWithType: "CertificateService.deletetCertificateOperation"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.deletetCertificateOperation"
  package: "com.azure.security.keyvault.certificates"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.KeyVaultCertificate>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.certificates.models.KeyVaultCertificate"
    name: "KeyVaultCertificate"
    fullName: "com.azure.security.keyvault.certificates.models.KeyVaultCertificate"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificate*"
  name: "getCertificate"
  nameWithType: "CertificateService.getCertificate"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificate"
  package: "com.azure.security.keyvault.certificates"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy"
    name: "KeyVaultCertificateWithPolicy"
    fullName: "com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificatePoller*"
  name: "getCertificatePoller"
  nameWithType: "CertificateService.getCertificatePoller"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificatePoller"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateWithPolicy*"
  name: "getCertificateWithPolicy"
  nameWithType: "CertificateService.getCertificateWithPolicy"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateWithPolicy"
  package: "com.azure.security.keyvault.certificates"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.CertificateProperties>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.PagedResponse"
    name: "PagedResponse"
    fullName: "com.azure.core.http.rest.PagedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.certificates.models.CertificateProperties"
    name: "CertificateProperties"
    fullName: "com.azure.security.keyvault.certificates.models.CertificateProperties"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificates*"
  name: "getCertificates"
  nameWithType: "CertificateService.getCertificates"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificates"
  package: "com.azure.security.keyvault.certificates"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.DeletedCertificate>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.certificates.models.DeletedCertificate"
    name: "DeletedCertificate"
    fullName: "com.azure.security.keyvault.certificates.models.DeletedCertificate"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificate*"
  name: "deleteCertificate"
  nameWithType: "CertificateService.deleteCertificate"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificate"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateUpdateParameters"
  name: "CertificateUpdateParameters"
  nameWithType: "CertificateUpdateParameters"
  fullName: "com.azure.security.keyvault.certificates.CertificateUpdateParameters"
- uid: "com.azure.security.keyvault.certificates.CertificateService.updateCertificate*"
  name: "updateCertificate"
  nameWithType: "CertificateService.updateCertificate"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.updateCertificate"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificate*"
  name: "getDeletedCertificate"
  nameWithType: "CertificateService.getDeletedCertificate"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificate"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificatePoller*"
  name: "getDeletedCertificatePoller"
  nameWithType: "CertificateService.getDeletedCertificatePoller"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificatePoller"
  package: "com.azure.security.keyvault.certificates"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.CertificateService.purgeDeletedcertificate*"
  name: "purgeDeletedcertificate"
  nameWithType: "CertificateService.purgeDeletedcertificate"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.purgeDeletedcertificate"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateService.recoverDeletedCertificate*"
  name: "recoverDeletedCertificate"
  nameWithType: "CertificateService.recoverDeletedCertificate"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.recoverDeletedCertificate"
  package: "com.azure.security.keyvault.certificates"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.CertificateBackup>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.certificates.CertificateBackup"
    name: "CertificateBackup"
    fullName: "com.azure.security.keyvault.certificates.CertificateBackup"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.CertificateService.backupCertificate*"
  name: "backupCertificate"
  nameWithType: "CertificateService.backupCertificate"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.backupCertificate"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateRestoreParameters"
  name: "CertificateRestoreParameters"
  nameWithType: "CertificateRestoreParameters"
  fullName: "com.azure.security.keyvault.certificates.CertificateRestoreParameters"
- uid: "com.azure.security.keyvault.certificates.CertificateService.restoreCertificate*"
  name: "restoreCertificate"
  nameWithType: "CertificateService.restoreCertificate"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.restoreCertificate"
  package: "com.azure.security.keyvault.certificates"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.DeletedCertificate>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.PagedResponse"
    name: "PagedResponse"
    fullName: "com.azure.core.http.rest.PagedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.certificates.models.DeletedCertificate"
    name: "DeletedCertificate"
    fullName: "com.azure.security.keyvault.certificates.models.DeletedCertificate"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificates*"
  name: "getDeletedCertificates"
  nameWithType: "CertificateService.getDeletedCertificates"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getDeletedCertificates"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.Contacts"
  name: "Contacts"
  nameWithType: "Contacts"
  fullName: "com.azure.security.keyvault.certificates.Contacts"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.CertificateContact>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.PagedResponse"
    name: "PagedResponse"
    fullName: "com.azure.core.http.rest.PagedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.certificates.models.CertificateContact"
    name: "CertificateContact"
    fullName: "com.azure.security.keyvault.certificates.models.CertificateContact"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.CertificateService.setCertificateContacts*"
  name: "setCertificateContacts"
  nameWithType: "CertificateService.setCertificateContacts"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.setCertificateContacts"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateContacts*"
  name: "getCertificateContacts"
  nameWithType: "CertificateService.getCertificateContacts"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateContacts"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificateContacts*"
  name: "deleteCertificateContacts"
  nameWithType: "CertificateService.deleteCertificateContacts"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificateContacts"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateIssuerSetParameters"
  name: "CertificateIssuerSetParameters"
  nameWithType: "CertificateIssuerSetParameters"
  fullName: "com.azure.security.keyvault.certificates.CertificateIssuerSetParameters"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificateIssuer>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.certificates.models.CertificateIssuer"
    name: "CertificateIssuer"
    fullName: "com.azure.security.keyvault.certificates.models.CertificateIssuer"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.CertificateService.setCertificateIssuer*"
  name: "setCertificateIssuer"
  nameWithType: "CertificateService.setCertificateIssuer"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.setCertificateIssuer"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuer*"
  name: "getCertificateIssuer"
  nameWithType: "CertificateService.getCertificateIssuer"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuer"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificateIssuer*"
  name: "deleteCertificateIssuer"
  nameWithType: "CertificateService.deleteCertificateIssuer"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.deleteCertificateIssuer"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateIssuerUpdateParameters"
  name: "CertificateIssuerUpdateParameters"
  nameWithType: "CertificateIssuerUpdateParameters"
  fullName: "com.azure.security.keyvault.certificates.CertificateIssuerUpdateParameters"
- uid: "com.azure.security.keyvault.certificates.CertificateService.updateCertificateIssuer*"
  name: "updateCertificateIssuer"
  nameWithType: "CertificateService.updateCertificateIssuer"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.updateCertificateIssuer"
  package: "com.azure.security.keyvault.certificates"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.certificates.models.IssuerProperties>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.PagedResponse"
    name: "PagedResponse"
    fullName: "com.azure.core.http.rest.PagedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.certificates.models.IssuerProperties"
    name: "IssuerProperties"
    fullName: "com.azure.security.keyvault.certificates.models.IssuerProperties"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuers*"
  name: "getCertificateIssuers"
  nameWithType: "CertificateService.getCertificateIssuers"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateIssuers"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificateVersions*"
  name: "getCertificateVersions"
  nameWithType: "CertificateService.getCertificateVersions"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificateVersions"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateImportParameters"
  name: "CertificateImportParameters"
  nameWithType: "CertificateImportParameters"
  fullName: "com.azure.security.keyvault.certificates.CertificateImportParameters"
- uid: "com.azure.security.keyvault.certificates.CertificateService.importCertificate*"
  name: "importCertificate"
  nameWithType: "CertificateService.importCertificate"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.importCertificate"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificateMergeParameters"
  name: "CertificateMergeParameters"
  nameWithType: "CertificateMergeParameters"
  fullName: "com.azure.security.keyvault.certificates.CertificateMergeParameters"
- uid: "com.azure.security.keyvault.certificates.CertificateService.mergeCertificate*"
  name: "mergeCertificate"
  nameWithType: "CertificateService.mergeCertificate"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.mergeCertificate"
  package: "com.azure.security.keyvault.certificates"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.certificates.models.CertificatePolicy>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy"
    name: "CertificatePolicy"
    fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.CertificateService.getCertificatePolicy*"
  name: "getCertificatePolicy"
  nameWithType: "CertificateService.getCertificatePolicy"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.getCertificatePolicy"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.CertificatePolicyRequest"
  name: "CertificatePolicyRequest"
  nameWithType: "CertificatePolicyRequest"
  fullName: "com.azure.security.keyvault.certificates.CertificatePolicyRequest"
- uid: "com.azure.security.keyvault.certificates.CertificateService.updateCertificatePolicy*"
  name: "updateCertificatePolicy"
  nameWithType: "CertificateService.updateCertificatePolicy"
  fullName: "com.azure.security.keyvault.certificates.CertificateService.updateCertificatePolicy"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.models.CertificateOperation"
  name: "CertificateOperation"
  nameWithType: "CertificateOperation"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateOperation"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.core.http.rest.Response"
  name: "Response"
  nameWithType: "Response"
  fullName: "com.azure.core.http.rest.Response"
- uid: "com.azure.security.keyvault.certificates.models.KeyVaultCertificate"
  name: "KeyVaultCertificate"
  nameWithType: "KeyVaultCertificate"
  fullName: "com.azure.security.keyvault.certificates.models.KeyVaultCertificate"
- uid: "com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy"
  name: "KeyVaultCertificateWithPolicy"
  nameWithType: "KeyVaultCertificateWithPolicy"
  fullName: "com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy"
- uid: "com.azure.security.keyvault.certificates.models.CertificateProperties"
  name: "CertificateProperties"
  nameWithType: "CertificateProperties"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateProperties"
- uid: "com.azure.core.http.rest.PagedResponse"
  name: "PagedResponse"
  nameWithType: "PagedResponse"
  fullName: "com.azure.core.http.rest.PagedResponse"
- uid: "com.azure.security.keyvault.certificates.models.DeletedCertificate"
  name: "DeletedCertificate"
  nameWithType: "DeletedCertificate"
  fullName: "com.azure.security.keyvault.certificates.models.DeletedCertificate"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "com.azure.security.keyvault.certificates.CertificateBackup"
  name: "CertificateBackup"
  nameWithType: "CertificateBackup"
  fullName: "com.azure.security.keyvault.certificates.CertificateBackup"
- uid: "com.azure.security.keyvault.certificates.models.CertificateContact"
  name: "CertificateContact"
  nameWithType: "CertificateContact"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateContact"
- uid: "com.azure.security.keyvault.certificates.models.CertificateIssuer"
  name: "CertificateIssuer"
  nameWithType: "CertificateIssuer"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateIssuer"
- uid: "com.azure.security.keyvault.certificates.models.IssuerProperties"
  name: "IssuerProperties"
  nameWithType: "IssuerProperties"
  fullName: "com.azure.security.keyvault.certificates.models.IssuerProperties"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy"
  name: "CertificatePolicy"
  nameWithType: "CertificatePolicy"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy"
