### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.table.TableBatchOperation
  id: TableBatchOperation
  parent: com.microsoft.azure.storage.table
  children:
  - com.microsoft.azure.storage.table.TableBatchOperation.add(final int,final TableOperation)
  - com.microsoft.azure.storage.table.TableBatchOperation.add(final TableOperation)
  - com.microsoft.azure.storage.table.TableBatchOperation.addAll(final int,final java.util.Collection<? extends TableOperation>)
  - com.microsoft.azure.storage.table.TableBatchOperation.addAll(final java.util.Collection<? extends TableOperation>)
  - com.microsoft.azure.storage.table.TableBatchOperation.clear()
  - com.microsoft.azure.storage.table.TableBatchOperation.delete(final TableEntity)
  - com.microsoft.azure.storage.table.TableBatchOperation.execute(final CloudTableClient,final String,final TableRequestOptions,final OperationContext)
  - com.microsoft.azure.storage.table.TableBatchOperation.insert(final TableEntity)
  - com.microsoft.azure.storage.table.TableBatchOperation.insert(final TableEntity,boolean)
  - com.microsoft.azure.storage.table.TableBatchOperation.insertOrMerge(final TableEntity)
  - com.microsoft.azure.storage.table.TableBatchOperation.insertOrReplace(final TableEntity)
  - com.microsoft.azure.storage.table.TableBatchOperation.merge(final TableEntity)
  - com.microsoft.azure.storage.table.TableBatchOperation.remove(int)
  - com.microsoft.azure.storage.table.TableBatchOperation.remove(Object)
  - com.microsoft.azure.storage.table.TableBatchOperation.removeAll(java.util.Collection<?>)
  - com.microsoft.azure.storage.table.TableBatchOperation.removeRange(int,int)
  - com.microsoft.azure.storage.table.TableBatchOperation.replace(final TableEntity)
  - com.microsoft.azure.storage.table.TableBatchOperation.retrieve(final String,final String,final Class<? extends TableEntity>)
  - com.microsoft.azure.storage.table.TableBatchOperation.retrieve(final String,final String,final EntityResolver<?>)
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: TableBatchOperation
  nameWithType: TableBatchOperation
  fullName: com.microsoft.azure.storage.table.TableBatchOperation
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
      branch: legacy-master
      repo: https://github.com/azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 47
  package: com.microsoft.azure.storage.table
  summary: "<p>A class which represents a batch operation. A batch operation is a collection of table operations which are executed by the Storage Service REST API as a single atomic operation, by invoking an <a href=\"http://msdn.microsoft.com/en-us/library/azure/dd894038.aspx\">Entity Group Transaction</a>. </p>\r\n<p>A batch operation may contain up to 100 individual table operations, with the requirement that each operation entity must have same partition key. A batch with a retrieve operation cannot contain any other operations. Note that the total payload of a batch operation is limited to 4MB. </p>"
  syntax: &o1
    content: public class TableBatchOperation
  inheritance:
  - java.lang.Object
  - java.util.ArrayList<TableOperation>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.add(final int,final TableOperation)
  id: add(final int,final TableOperation)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: add(final int index, final TableOperation element)
  nameWithType: TableBatchOperation.add(final int index, final TableOperation element)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.add(final int index, final TableOperation element)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.add*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 64
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds the table operation at the specified index in the batch operation .</p>\r\n<p></p>"
  syntax:
    content: public void add(final int index, final TableOperation element)
    parameters:
    - id: index
      type: cd225469
      description: <p>An <code>int</code> which represents the index in the batch operation <code>ArrayList</code> to add the table operation at. </p>
    - id: element
      type: 93de0ef9com.microsoft.azure.storage.table.TableOperation
      description: <p>The <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> to add to the batch operation. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.add(final TableOperation)
  id: add(final TableOperation)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: add(final TableOperation element)
  nameWithType: TableBatchOperation.add(final TableOperation element)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.add(final TableOperation element)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.add*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 88
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds the table operation to the batch operation .</p>\r\n<p></p>"
  syntax:
    content: public boolean add(final TableOperation element)
    parameters:
    - id: element
      type: 93de0ef9com.microsoft.azure.storage.table.TableOperation
      description: <p>The <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> to add to the batch operation. </p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the operation was added successfully. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.addAll(final int,final java.util.Collection<? extends TableOperation>)
  id: Collection<? extends TableOperation>)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: addAll(final int index, final java.util.Collection<? extends TableOperation> c)
  nameWithType: TableBatchOperation.addAll(final int index, final java.util.Collection<? extends TableOperation> c)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.addAll(final int index, final java.util.Collection<? extends TableOperation> c)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.addAll*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 117
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds the collection of table operations to the batch operation  starting at the specified index.</p>\r\n<p></p>"
  syntax:
    content: public boolean addAll(final int index, final java.util.Collection<? extends TableOperation> c)
    parameters:
    - id: index
      type: cd225469
      description: <p>An <code>int</code> which represents the index in the batch operation <code>ArrayList</code> to add the table operation at. </p>
    - id: c
      type: 4f93b78dcom.microsoft.azure.storage.table.TableOperationa08ddfce
      description: <p>A <code>java.util.Collection</code> of <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> objects to add to the batch operation. </p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the operations were added successfully. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.addAll(final java.util.Collection<? extends TableOperation>)
  id: Collection<? extends TableOperation>)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: addAll(final java.util.Collection<? extends TableOperation> c)
  nameWithType: TableBatchOperation.addAll(final java.util.Collection<? extends TableOperation> c)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.addAll(final java.util.Collection<? extends TableOperation> c)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.addAll*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 146
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds the collection of table operations to the batch operation .</p>\r\n<p></p>"
  syntax:
    content: public boolean addAll(final java.util.Collection<? extends TableOperation> c)
    parameters:
    - id: c
      type: 4f93b78dcom.microsoft.azure.storage.table.TableOperationa08ddfce
      description: <p>A <code>java.util.Collection</code> of <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> objects to add to the batch operation. </p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the operations were added successfully. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.clear()
  id: clear()
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: clear()
  nameWithType: TableBatchOperation.clear()
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.clear()
  overload: com.microsoft.azure.storage.table.TableBatchOperation.clear*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 170
  package: com.microsoft.azure.storage.table
  summary: "<p>Clears all table operations from the batch operation. </p>"
  syntax:
    content: public void clear()
- uid: com.microsoft.azure.storage.table.TableBatchOperation.delete(final TableEntity)
  id: delete(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: delete(final TableEntity entity)
  nameWithType: TableBatchOperation.delete(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.delete(final TableEntity entity)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.delete*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 181
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds a table operation to delete the specified entity to the batch operation.</p>\r\n<p></p>"
  syntax:
    content: public void delete(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to delete. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.execute(final CloudTableClient,final String,final TableRequestOptions,final OperationContext)
  id: execute(final CloudTableClient,final String,final TableRequestOptions,final OperationContext)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: execute(final CloudTableClient client, final String tableName, final TableRequestOptions options, final OperationContext opContext)
  nameWithType: TableBatchOperation.execute(final CloudTableClient client, final String tableName, final TableRequestOptions options, final OperationContext opContext)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.execute(final CloudTableClient client, final String tableName, final TableRequestOptions options, final OperationContext opContext)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.execute*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 408
  package: com.microsoft.azure.storage.table
  summary: "<p>Reserved for internal use. Executes this batch operation on the specified table, using the specified <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableRequestOptions\"></xref> and <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationContext\"></xref>. </p>\r\n<p>This method will invoke the Storage Service REST API to execute this batch operation, using the Table service endpoint and storage account credentials in the <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> object.</p>\r\n<p></p>"
  syntax:
    content: protected ArrayList<TableResult> execute(final CloudTableClient client, final String tableName, final TableRequestOptions options, final OperationContext opContext)
    parameters:
    - id: client
      type: 93de0ef9com.microsoft.azure.storage.table.CloudTableClient
      description: <p>A <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance specifying the Table service endpoint and storage account credentials to use. </p>
    - id: tableName
      type: 3d93591e
      description: <p>A <code>String</code> containing the name of the table. </p>
    - id: options
      type: 93de0ef9com.microsoft.azure.storage.table.TableRequestOptions
      description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. </p>
    - id: opContext
      type: 93de0ef9com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object for tracking the current operation.</p>
    return:
      type: 573b1e0bcom.microsoft.azure.storage.table.TableResulta08ddfce
      description: <p>An <code>ArrayList</code> of <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> containing the results of executing the operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>if an error occurs in the storage operation. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.insert(final TableEntity)
  id: insert(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: insert(final TableEntity entity)
  nameWithType: TableBatchOperation.insert(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.insert(final TableEntity entity)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.insert*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 192
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds a table operation to insert the specified entity to the batch operation.</p>\r\n<p></p>"
  syntax:
    content: public void insert(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to insert. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.insert(final TableEntity,boolean)
  id: insert(final TableEntity,boolean)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: insert(final TableEntity entity, boolean echoContent)
  nameWithType: TableBatchOperation.insert(final TableEntity entity, boolean echoContent)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.insert(final TableEntity entity, boolean echoContent)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.insert*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 204
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds a table operation to insert the specified entity to the batch operation.</p>\r\n<p></p>"
  syntax:
    content: public void insert(final TableEntity entity, boolean echoContent)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to insert. </p>
    - id: echoContent
      type: 4fc6e284
      description: <p>The boolean representing whether the message payload should be returned in the response. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.insertOrMerge(final TableEntity)
  id: insertOrMerge(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: insertOrMerge(final TableEntity entity)
  nameWithType: TableBatchOperation.insertOrMerge(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.insertOrMerge(final TableEntity entity)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.insertOrMerge*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 215
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds a table operation to insert or merge the specified entity to the batch operation.</p>\r\n<p></p>"
  syntax:
    content: public void insertOrMerge(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to insert if not found or to merge if it exists. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.insertOrReplace(final TableEntity)
  id: insertOrReplace(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: insertOrReplace(final TableEntity entity)
  nameWithType: TableBatchOperation.insertOrReplace(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.insertOrReplace(final TableEntity entity)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.insertOrReplace*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 226
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds a table operation to insert or replace the specified entity to the batch operation.</p>\r\n<p></p>"
  syntax:
    content: public void insertOrReplace(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to insert if not found or to replace if it exists. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.merge(final TableEntity)
  id: merge(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: merge(final TableEntity entity)
  nameWithType: TableBatchOperation.merge(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.merge(final TableEntity entity)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.merge*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 237
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds a table operation to merge the specified entity to the batch operation.</p>\r\n<p></p>"
  syntax:
    content: public void merge(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to merge. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.remove(int)
  id: remove(int)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: remove(int index)
  nameWithType: TableBatchOperation.remove(int index)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.remove(int index)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.remove*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 283
  package: com.microsoft.azure.storage.table
  summary: "<p>Removes the table operation at the specified index from the batch operation.</p>\r\n<p></p>"
  syntax:
    content: public TableOperation remove(int index)
    parameters:
    - id: index
      type: f75371fa
      description: <p>An <code>int</code> which represents the index in the <code>ArrayList</code> of the table operation to remove from the batch operation. </p>
    return:
      type: com.microsoft.azure.storage.table.TableOperation
- uid: com.microsoft.azure.storage.table.TableBatchOperation.remove(Object)
  id: remove(Object)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: remove(Object o)
  nameWithType: TableBatchOperation.remove(Object o)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.remove(Object o)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.remove*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 298
  package: com.microsoft.azure.storage.table
  summary: "<p>Removes the specified  from the batch operation.</p>\r\n<p></p>"
  syntax:
    content: public boolean remove(Object o)
    parameters:
    - id: o
      type: "79317049"
      description: <p>The <code>Object</code> to remove from the batch operation. </p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the object was removed successfully. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.removeAll(java.util.Collection<?>)
  id: Collection<?>)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: removeAll(java.util.Collection<?> c)
  nameWithType: TableBatchOperation.removeAll(java.util.Collection<?> c)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.removeAll(java.util.Collection<?> c)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.removeAll*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 313
  package: com.microsoft.azure.storage.table
  summary: "<p>Removes all elements of the specified collection from the batch operation.</p>\r\n<p></p>"
  syntax:
    content: public boolean removeAll(java.util.Collection<?> c)
    parameters:
    - id: c
      type: 5c3b993a
      description: <p>The collection of elements to remove from the batch operation. </p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the objects in the collection were removed successfully. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.removeRange(int,int)
  id: removeRange(int,int)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: removeRange(int fromIndex, int toIndex)
  nameWithType: TableBatchOperation.removeRange(int fromIndex, int toIndex)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.removeRange(int fromIndex, int toIndex)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.removeRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 575
  package: com.microsoft.azure.storage.table
  summary: "<p>Reserved for internal use. Removes all the table operations at indexes in the specified range from the batch operation .</p>\r\n<p></p>"
  syntax:
    content: protected void removeRange(int fromIndex, int toIndex)
    parameters:
    - id: fromIndex
      type: f75371fa
      description: <p>An <code>int</code> which represents the inclusive lower bound of the range of <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> objects to remove from the batch operation <code>ArrayList</code>. </p>
    - id: toIndex
      type: f75371fa
      description: <p>An <code>int</code> which represents the exclusive upper bound of the range of <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> objects to remove from the batch operation <code>ArrayList</code>. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.replace(final TableEntity)
  id: replace(final TableEntity)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: replace(final TableEntity entity)
  nameWithType: TableBatchOperation.replace(final TableEntity entity)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.replace(final TableEntity entity)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.replace*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 325
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds a table operation to replace the specified entity to the batch operation.</p>\r\n<p></p>"
  syntax:
    content: public void replace(final TableEntity entity)
    parameters:
    - id: entity
      type: 93de0ef9com.microsoft.azure.storage.table.TableEntity
      description: <p>The <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to replace. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.retrieve(final String,final String,final Class<? extends TableEntity>)
  id: retrieve(final String,final String,final Class<? extends TableEntity>)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: retrieve(final String partitionKey, final String rowKey, final Class<? extends TableEntity> clazzType)
  nameWithType: TableBatchOperation.retrieve(final String partitionKey, final String rowKey, final Class<? extends TableEntity> clazzType)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.retrieve(final String partitionKey, final String rowKey, final Class<? extends TableEntity> clazzType)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.retrieve*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 253
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds a table operation to retrieve an entity of the specified class type with the specified PartitionKey and RowKey to the batch operation.</p>\r\n<p></p>"
  syntax:
    content: public void retrieve(final String partitionKey, final String rowKey, final Class<? extends TableEntity> clazzType)
    parameters:
    - id: partitionKey
      type: 3d93591e
      description: <p>A <code>String</code> containing the PartitionKey of the entity to retrieve. </p>
    - id: rowKey
      type: 3d93591e
      description: <p>A <code>String</code> containing the RowKey of the entity to retrieve. </p>
    - id: clazzType
      type: f6d66785com.microsoft.azure.storage.table.TableEntitya08ddfce
      description: <p>The class of the <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> type for the entity to retrieve. </p>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.retrieve(final String,final String,final EntityResolver<?>)
  id: retrieve(final String,final String,final EntityResolver<?>)
  parent: com.microsoft.azure.storage.table.TableBatchOperation
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  langs:
  - java
  name: retrieve(final String partitionKey, final String rowKey, final EntityResolver<?> resolver)
  nameWithType: TableBatchOperation.retrieve(final String partitionKey, final String rowKey, final EntityResolver<?> resolver)
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.retrieve(final String partitionKey, final String rowKey, final EntityResolver<?> resolver)
  overload: com.microsoft.azure.storage.table.TableBatchOperation.retrieve*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableBatchOperation.java
    startLine: 270
  package: com.microsoft.azure.storage.table
  summary: "<p>Adds a table operation to retrieve an entity of the specified class type with the specified PartitionKey and RowKey to the batch operation.</p>\r\n<p></p>"
  syntax:
    content: public void retrieve(final String partitionKey, final String rowKey, final EntityResolver<?> resolver)
    parameters:
    - id: partitionKey
      type: 3d93591e
      description: <p>A <code>String</code> containing the PartitionKey of the entity to retrieve. </p>
    - id: rowKey
      type: 3d93591e
      description: <p>A <code>String</code> containing the RowKey of the entity to retrieve. </p>
    - id: resolver
      type: 93de0ef9com.microsoft.azure.storage.table.EntityResolver7e6ad1eb
      description: <p>The <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> implementation to project the entity to retrieve as a particular type in the result. </p>
references:
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: 93de0ef9com.microsoft.azure.storage.table.TableOperation
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.table.TableOperation
    name: TableOperation
    fullName: com.microsoft.azure.storage.table.TableOperation
    href: com.microsoft.azure.storage.table.TableOperation.yml
- uid: com.microsoft.azure.storage.table.TableBatchOperation.add*
  name: add
  nameWithType: TableBatchOperation.add
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.add
  package: com.microsoft.azure.storage.table
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: 4f93b78dcom.microsoft.azure.storage.table.TableOperationa08ddfce
  spec.java:
  - name: 'final java.util.Collection<? extends '
    fullName: 'final java.util.Collection<? extends '
  - uid: com.microsoft.azure.storage.table.TableOperation
    name: TableOperation
    fullName: com.microsoft.azure.storage.table.TableOperation
    href: com.microsoft.azure.storage.table.TableOperation.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.table.TableBatchOperation.addAll*
  name: addAll
  nameWithType: TableBatchOperation.addAll
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.addAll
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableBatchOperation.clear*
  name: clear
  nameWithType: TableBatchOperation.clear
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.clear
  package: com.microsoft.azure.storage.table
- uid: 93de0ef9com.microsoft.azure.storage.table.TableEntity
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.table.TableEntity
    name: TableEntity
    fullName: com.microsoft.azure.storage.table.TableEntity
    href: com.microsoft.azure.storage.table.TableEntity.yml
- uid: com.microsoft.azure.storage.table.TableBatchOperation.delete*
  name: delete
  nameWithType: TableBatchOperation.delete
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.delete
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableBatchOperation.insert*
  name: insert
  nameWithType: TableBatchOperation.insert
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.insert
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableBatchOperation.insertOrMerge*
  name: insertOrMerge
  nameWithType: TableBatchOperation.insertOrMerge
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.insertOrMerge
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableBatchOperation.insertOrReplace*
  name: insertOrReplace
  nameWithType: TableBatchOperation.insertOrReplace
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.insertOrReplace
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableBatchOperation.merge*
  name: merge
  nameWithType: TableBatchOperation.merge
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.merge
  package: com.microsoft.azure.storage.table
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: f6d66785com.microsoft.azure.storage.table.TableEntitya08ddfce
  spec.java:
  - name: 'final Class<? extends '
    fullName: 'final Class<? extends '
  - uid: com.microsoft.azure.storage.table.TableEntity
    name: TableEntity
    fullName: com.microsoft.azure.storage.table.TableEntity
    href: com.microsoft.azure.storage.table.TableEntity.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.table.TableBatchOperation.retrieve*
  name: retrieve
  nameWithType: TableBatchOperation.retrieve
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.retrieve
  package: com.microsoft.azure.storage.table
- uid: 93de0ef9com.microsoft.azure.storage.table.EntityResolver7e6ad1eb
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.table.EntityResolver
    name: EntityResolver
    fullName: com.microsoft.azure.storage.table.EntityResolver
    href: com.microsoft.azure.storage.table.EntityResolver.yml
  - name: <?>
    fullName: <?>
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.storage.table.TableBatchOperation.remove*
  name: remove
  nameWithType: TableBatchOperation.remove
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.remove
  package: com.microsoft.azure.storage.table
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: 5c3b993a
  spec.java:
  - name: java.util.Collection<?>
    fullName: java.util.Collection<?>
- uid: com.microsoft.azure.storage.table.TableBatchOperation.removeAll*
  name: removeAll
  nameWithType: TableBatchOperation.removeAll
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.removeAll
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableBatchOperation.replace*
  name: replace
  nameWithType: TableBatchOperation.replace
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.replace
  package: com.microsoft.azure.storage.table
- uid: ca4f407a
  spec.java:
  - name: StorageException
    fullName: StorageException
- uid: 93de0ef9com.microsoft.azure.storage.table.CloudTableClient
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.table.CloudTableClient
    name: CloudTableClient
    fullName: com.microsoft.azure.storage.table.CloudTableClient
    href: com.microsoft.azure.storage.table.CloudTableClient.yml
- uid: 93de0ef9com.microsoft.azure.storage.table.TableRequestOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.table.TableRequestOptions
    name: TableRequestOptions
    fullName: com.microsoft.azure.storage.table.TableRequestOptions
    href: com.microsoft.azure.storage.table.TableRequestOptions.yml
- uid: 93de0ef9com.microsoft.azure.storage.OperationContext
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.OperationContext
    name: OperationContext
    fullName: com.microsoft.azure.storage.OperationContext
    href: com.microsoft.azure.storage.OperationContext.yml
- uid: 573b1e0bcom.microsoft.azure.storage.table.TableResulta08ddfce
  spec.java:
  - name: ArrayList<
    fullName: ArrayList<
  - uid: com.microsoft.azure.storage.table.TableResult
    name: TableResult
    fullName: com.microsoft.azure.storage.table.TableResult
    href: com.microsoft.azure.storage.table.TableResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.table.TableBatchOperation.execute*
  name: execute
  nameWithType: TableBatchOperation.execute
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.execute
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableBatchOperation.removeRange*
  name: removeRange
  nameWithType: TableBatchOperation.removeRange
  fullName: com.microsoft.azure.storage.table.TableBatchOperation.removeRange
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableOperation
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: TableOperation
  nameWithType: TableOperation
  fullName: com.microsoft.azure.storage.table.TableOperation
  type: Class
  summary: "<p>A class which represents a single table operation. </p>\r\n<p>Use the static factory methods to construct <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instances for operations on tables that insert, update, merge, delete, replace or retrieve table entities. To execute a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instance, call the  method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance. A <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> may be executed directly or as part of a <xref uid=\"com.microsoft.azure.storage.table.TableBatchOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableBatchOperation\"></xref>. If a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> returns an entity result, it is stored in the corresponding <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableResult\"></xref> returned by the  method. </p>"
  syntax:
    content: public class TableOperation
- uid: com.microsoft.azure.storage.table.TableEntity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableEntity.yml
  name: TableEntity
  nameWithType: TableEntity
  fullName: com.microsoft.azure.storage.table.TableEntity
  type: Interface
  summary: "<p>An interface required for table entity types. The <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> interface declares getter and setter methods for the common entity properties, and  and  methods for serialization and deserialization of all entity properties using a property map. Create classes implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity. </p>\r\n<p>The Storage client library includes two implementations of <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> that provide for simple property access and serialization: </p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> and provides a simple property map to store and retrieve properties. Use a <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties. You can also use this type to perform bulk table updates of heterogeneous entities without losing property information. </p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> is an implementation of <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> that uses reflection-based serialization and deserialization behavior in its  and  methods. <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref>-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically. </p>\r\n<p>Any class that implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> by invoking the static methods  in  and  in . The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically. When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data. The reflection code looks for getter and setter methods in pairs of the form </p>\r\n<p></p>\r\n<p>and </p>\r\n<p></p>\r\n<p>where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property. See the table in the class description for <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> for a map of property types to their Java equivalents. The <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention. Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotations are case sensitive for matching property names with reflection. Use the <xref uid=\"com.microsoft.azure.storage.table.Ignore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Ignore\"></xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization. Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation in a subclass that uses the reflection methods. </p>\r\n<p></p>"
  syntax:
    content: public interface TableEntity
- uid: com.microsoft.azure.storage.table.EntityResolver
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.EntityResolver.yml
  name: EntityResolver<T>
  nameWithType: EntityResolver<T>
  fullName: com.microsoft.azure.storage.table.EntityResolver<T>
  type: Interface
  summary: "<p>An interface to perform client side projection on a retrieved entity. An <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityResolver\"></xref> instance must implement a  method projecting the entity data represented by the parameters passed in as a new instance of the type specified by the type parameter. </p>\r\n<p>This interface is useful for converting directly from table entity data to a client object type without requiring a separate table entity class type that deserializes every property individually. For example, a client can perform a client side projection of a <em>Customer</em> entity by simply returning the  for the <em>CustomerName</em> property of each entity. The result of this projection will be a collection of s containing each customer name.</p>\r\n<p></p>"
  syntax:
    content: public interface EntityResolver<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>The type of the object that the resolver produces. </p>
- uid: com.microsoft.azure.storage.core.StorageRequest
  parent: com.microsoft.azure.storage.core
  href: com.microsoft.azure.storage.core.StorageRequest.yml
  name: StorageRequest<C,P,R>
  nameWithType: StorageRequest<C,P,R>
  fullName: com.microsoft.azure.storage.core.StorageRequest<C,P,R>
  type: Class
  summary: "<p>RESERVED FOR INTERNAL USE. A class which encapsulate the execution of a given storage operation.</p>\r\n<p></p>"
  syntax:
    content: public class StorageRequest<C,P,R>
    typeParameters:
    - id: C
      type: 37f8610d
      description: <p>The service client type </p>
    - id: P
      type: db9ec244
      description: <p>The type of the parent object, i.e. CloudBlobContainer for downloadAttributes etc. </p>
    - id: R
      type: d4d3e1e1
      description: <p>The type of the expected result </p>
- uid: com.microsoft.azure.storage.table.CloudTableClient
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.CloudTableClient.yml
  name: CloudTableClient
  nameWithType: CloudTableClient
  fullName: com.microsoft.azure.storage.table.CloudTableClient
  type: Class
  summary: "<p>Provides a service client for accessing the Microsoft Azure Table service. </p>\r\n<p>The <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> class encapsulates the base URI for the Table service endpoint and the credentials for accessing the storage account, and provides methods to create, delete, list, and query tables, as well as methods to execute operations and queries on table entities. These methods invoke Storage Service REST API operations to make the requests and obtain the results that are returned. </p>\r\n<p>A Table service endpoint is the base URI for Table service resources, including the DNS name of the storage account: <br /><br />\r\n For more information, see the MSDN topic <a href=\"http://msdn.microsoft.com/en-us/library/azure/dd179360.aspx\">Addressing Table Service Resources</a>. </p>\r\n<p>The credentials can be a combination of the storage account name and a key, or a shared access signature. For more information, see the MSDN topic <a href=\"http://msdn.microsoft.com/en-us/library/azure/hh225339.aspx\">Authenticating Access to Your Storage Account</a>. </p>"
  syntax:
    content: public class CloudTableClient extends ServiceClient
- uid: com.microsoft.azure.storage.table.TableBatchOperation
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  name: TableBatchOperation
  nameWithType: TableBatchOperation
  fullName: com.microsoft.azure.storage.table.TableBatchOperation
  type: Class
  summary: "<p>A class which represents a batch operation. A batch operation is a collection of table operations which are executed by the Storage Service REST API as a single atomic operation, by invoking an <a href=\"http://msdn.microsoft.com/en-us/library/azure/dd894038.aspx\">Entity Group Transaction</a>. </p>\r\n<p>A batch operation may contain up to 100 individual table operations, with the requirement that each operation entity must have same partition key. A batch with a retrieve operation cannot contain any other operations. Note that the total payload of a batch operation is limited to 4MB. </p>"
  syntax: *o1
- uid: com.microsoft.azure.storage.table.TableResult
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableResult.yml
  name: TableResult
  nameWithType: TableResult
  fullName: com.microsoft.azure.storage.table.TableResult
  type: Class
  summary: "<p>A class which represents the result of a table operation. The <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableResult\"></xref> class encapsulates the HTTP response and any table entity results returned by the Storage Service REST API operation called for a particular <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref>. </p>"
  syntax:
    content: public class TableResult
- uid: com.microsoft.azure.storage.table.TableRequestOptions
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableRequestOptions.yml
  name: TableRequestOptions
  nameWithType: TableRequestOptions
  fullName: com.microsoft.azure.storage.table.TableRequestOptions
  type: Class
  summary: "<p>Represents a set of timeout, payload format, and retry policy options that may be specified for a table operation request. </p>"
  syntax:
    content: public class TableRequestOptions
- uid: com.microsoft.azure.storage.OperationContext
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.OperationContext.yml
  name: OperationContext
  nameWithType: OperationContext
  fullName: com.microsoft.azure.storage.OperationContext
  type: Class
  summary: "<p>Represents the current logical operation. A logical operation may have a one-to-many relationship with multiple individual physical requests. </p>"
  syntax:
    content: public class OperationContext
- uid: com.microsoft.azure.storage.StorageException
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.StorageException.yml
  name: StorageException
  nameWithType: StorageException
  fullName: com.microsoft.azure.storage.StorageException
  type: Class
  summary: "<p>Represents an exception for the Microsoft Azure storage service. </p>"
  syntax:
    content: public class StorageException
