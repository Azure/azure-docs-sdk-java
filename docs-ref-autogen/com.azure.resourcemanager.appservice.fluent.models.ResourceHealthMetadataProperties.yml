### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties"
fullName: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties"
name: "ResourceHealthMetadataProperties"
nameWithType: "ResourceHealthMetadataProperties"
summary: "Resource<wbr>Health<wbr>Metadata resource specific properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ResourceHealthMetadataProperties"
constructors:
- uid: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties.ResourceHealthMetadataProperties()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties.ResourceHealthMetadataProperties()"
  name: "ResourceHealthMetadataProperties()"
  nameWithType: "ResourceHealthMetadataProperties.ResourceHealthMetadataProperties()"
  syntax: "public ResourceHealthMetadataProperties()"
methods:
- uid: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties.category()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties.category()"
  name: "category()"
  nameWithType: "ResourceHealthMetadataProperties.category()"
  summary: "Get the category property: The category that the resource matches in the RHC Policy File."
  syntax: "public String category()"
  desc: "Get the category property: The category that the resource matches in the RHC Policy File."
  returns:
    description: "the category value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties.signalAvailability()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties.signalAvailability()"
  name: "signalAvailability()"
  nameWithType: "ResourceHealthMetadataProperties.signalAvailability()"
  summary: "Get the signal<wbr>Availability property: Is there a health signal for the resource."
  syntax: "public Boolean signalAvailability()"
  desc: "Get the signalAvailability property: Is there a health signal for the resource."
  returns:
    description: "the signalAvailability value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties.validate()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties.validate()"
  name: "validate()"
  nameWithType: "ResourceHealthMetadataProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties.withCategory(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties.withCategory(String category)"
  name: "withCategory(String category)"
  nameWithType: "ResourceHealthMetadataProperties.withCategory(String category)"
  summary: "Set the category property: The category that the resource matches in the RHC Policy File."
  parameters:
  - description: "the category value to set."
    name: "category"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceHealthMetadataProperties withCategory(String category)"
  desc: "Set the category property: The category that the resource matches in the RHC Policy File."
  returns:
    description: "the ResourceHealthMetadataProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties&text=ResourceHealthMetadataProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties.withSignalAvailability(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties.withSignalAvailability(Boolean signalAvailability)"
  name: "withSignalAvailability(Boolean signalAvailability)"
  nameWithType: "ResourceHealthMetadataProperties.withSignalAvailability(Boolean signalAvailability)"
  summary: "Set the signal<wbr>Availability property: Is there a health signal for the resource."
  parameters:
  - description: "the signalAvailability value to set."
    name: "signalAvailability"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceHealthMetadataProperties withSignalAvailability(Boolean signalAvailability)"
  desc: "Set the signalAvailability property: Is there a health signal for the resource."
  returns:
    description: "the ResourceHealthMetadataProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ResourceHealthMetadataProperties&text=ResourceHealthMetadataProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "ResourceHealthMetadata resource specific properties."
metadata: {}
package: "com.azure.resourcemanager.appservice.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.16.0
