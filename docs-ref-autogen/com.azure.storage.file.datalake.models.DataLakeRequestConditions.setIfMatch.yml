### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.models.DataLakeRequestConditions.setIfMatch*"
fullName: "com.azure.storage.file.datalake.models.DataLakeRequestConditions.setIfMatch"
name: "setIfMatch"
nameWithType: "DataLakeRequestConditions.setIfMatch"
members:
- uid: "com.azure.storage.file.datalake.models.DataLakeRequestConditions.setIfMatch(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.DataLakeRequestConditions.setIfMatch(String ifMatch)"
  name: "setIfMatch(String ifMatch)"
  nameWithType: "DataLakeRequestConditions.setIfMatch(String ifMatch)"
  summary: "Optionally limit requests to resources that match the passed ETag."
  overridden: "com.azure.core.http.RequestConditions.setIfMatch(java.lang.String)"
  parameters:
  - description: "ETag that resources must match."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeRequestConditions setIfMatch(String ifMatch)"
  returns:
    description: "The updated DataLakeRequestConditions object."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeRequestConditions?alt=com.azure.storage.file.datalake.models.DataLakeRequestConditions&text=DataLakeRequestConditions\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.models"
artifact: com.azure:azure-storage-file-datalake:12.2.0
