### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors._actor_information
  id: _actor_information
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_information.ActorInformation(ActorId,boolean)
  - microsoft.servicefabric.actors._actor_information.getActorId()
  - microsoft.servicefabric.actors._actor_information.isActive()
  href: microsoft.servicefabric.actors._actor_information.yml
  langs:
  - java
  name: ActorInformation
  nameWithType: ActorInformation
  fullName: microsoft.servicefabric.actors.ActorInformation
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
    startLine: 5
  package: microsoft.servicefabric.actors
  summary: "<p>Represents the information about an actor returned by Actor Query method call. </p>"
  syntax:
    content: public class ActorInformation
  inheritance:
  - java.lang.Object
  - Serializable
- uid: microsoft.servicefabric.actors._actor_information.ActorInformation(ActorId,boolean)
  id: ActorInformation(ActorId,boolean)
  parent: microsoft.servicefabric.actors._actor_information
  href: microsoft.servicefabric.actors._actor_information.yml
  langs:
  - java
  name: ActorInformation(ActorId actorId, boolean isactive)
  nameWithType: ActorInformation.ActorInformation(ActorId actorId, boolean isactive)
  fullName: microsoft.servicefabric.actors.ActorInformation.ActorInformation(ActorId actorId, boolean isactive)
  overload: microsoft.servicefabric.actors._actor_information.ActorInformation*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
    startLine: 18
  package: microsoft.servicefabric.actors
  summary: "<p>Initializes a new instance of the ActorInformation class.</p>\r\n<p></p>"
  syntax:
    content: public ActorInformation(ActorId actorId, boolean isactive)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ActorId of actor. </p>
    - id: isactive
      type: 4fc6e284
      description: <p>Value indicating if the Actor is active or inactive. </p>
- uid: microsoft.servicefabric.actors._actor_information.getActorId()
  id: getActorId()
  parent: microsoft.servicefabric.actors._actor_information
  href: microsoft.servicefabric.actors._actor_information.yml
  langs:
  - java
  name: getActorId()
  nameWithType: ActorInformation.getActorId()
  fullName: microsoft.servicefabric.actors.ActorInformation.getActorId()
  overload: microsoft.servicefabric.actors._actor_information.getActorId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
    startLine: 28
  package: microsoft.servicefabric.actors
  summary: "<p>Gets ActorId for the ACtor.</p>\r\n<p></p>"
  syntax:
    content: public ActorId getActorId()
    return:
      type: microsoft.servicefabric.actors._actor_id
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">for the actor. </xref>

        </p>
- uid: microsoft.servicefabric.actors._actor_information.isActive()
  id: isActive()
  parent: microsoft.servicefabric.actors._actor_information
  href: microsoft.servicefabric.actors._actor_information.yml
  langs:
  - java
  name: isActive()
  nameWithType: ActorInformation.isActive()
  fullName: microsoft.servicefabric.actors.ActorInformation.isActive()
  overload: microsoft.servicefabric.actors._actor_information.isActive*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
    startLine: 37
  package: microsoft.servicefabric.actors
  summary: "<p>Gets if the actor is active.</p>\r\n<p></p>"
  syntax:
    content: public boolean isActive()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">java.lang.Boolean</xref> indicating if the Actor is active. </p>
references:
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: microsoft.servicefabric.actors._actor_information.ActorInformation*
  name: ActorInformation
  nameWithType: ActorInformation.ActorInformation
  fullName: microsoft.servicefabric.actors.ActorInformation.ActorInformation
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_information.getActorId*
  name: getActorId
  nameWithType: ActorInformation.getActorId
  fullName: microsoft.servicefabric.actors.ActorInformation.getActorId
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_information.isActive*
  name: isActive
  nameWithType: ActorInformation.isActive
  fullName: microsoft.servicefabric.actors.ActorInformation.isActive
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_id
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_id.yml
  name: ActorId
  nameWithType: ActorId
  fullName: microsoft.servicefabric.actors.ActorId
  type: Class
  summary: <p>ActorId represents identity of an actor within an actor service. The actors can be identified by <xref uid="" data-throw-if-not-resolved="false">java.lang.String</xref>, <xref uid="" data-throw-if-not-resolved="false">java.util.UUID</xref> or long. </p>
  syntax:
    content: public class ActorId
