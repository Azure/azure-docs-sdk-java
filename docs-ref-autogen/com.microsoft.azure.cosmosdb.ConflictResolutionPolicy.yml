### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
  id: ConflictResolutionPolicy
  parent: com.microsoft.azure.cosmosdb
  children:
  - com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.ConflictResolutionPolicy(String)
  - com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createCustomPolicy()
  - com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createCustomPolicy(String)
  - com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createLastWriterWinsPolicy()
  - com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createLastWriterWinsPolicy(String)
  - com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionMode()
  - com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionPath()
  - com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionProcedure()
  href: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.yml
  langs:
  - java
  name: ConflictResolutionPolicy
  nameWithType: ConflictResolutionPolicy
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
  type: Class
  source:
    remote: &o0
      path: commons/src/main/java/com/microsoft/azure/cosmosdb/ConflictResolutionPolicy.java
      branch: master
      repo: https://github.com/Azure/azure-cosmosdb-java
    path: commons/src/main/java/com/microsoft/azure/cosmosdb/ConflictResolutionPolicy.java
    startLine: 55
  package: com.microsoft.azure.cosmosdb
  summary: "<p>Represents the conflict resolution policy configuration for specifying how to resolve conflicts in case writes from different regions result in conflicts on documents in the collection in the Azure Cosmos DB service.</p>\r\n<p>A collection with custom conflict resolution with no user-registered stored procedure. <pre><code>DocumentCollection collectionSpec = new DocumentCollection();\r\n    collectionSpec.setId(\"Multi-master collection\");\r\n    \r\n    ConflictResolutionPolicy policy = ConflictResolutionPolicy.createCustomPolicy();\r\n    collectionSpec.setConflictResolutionPolicy(policy);\r\n    \r\n    DocumentCollection collection = client.createCollection(databaseLink, collectionSpec, null)\r\n            .toBlocking().single().getResource();\r\n    </code></pre></p>\r\n<p>A collection with custom conflict resolution with a user-registered stored procedure. <pre><code>DocumentCollection collectionSpec = new DocumentCollection();\r\n    collectionSpec.setId(\"Multi-master collection\");\r\n    \r\n    ConflictResolutionPolicy policy = ConflictResolutionPolicy.createCustomPolicy(conflictResolutionSprocName);\r\n    collectionSpec.setConflictResolutionPolicy(policy);\r\n    \r\n    DocumentCollection collection = client.createCollection(databaseLink, collectionSpec, null)\r\n            .toBlocking().single().getResource();\r\n    </code></pre></p>\r\n<p>A collection with last writer wins conflict resolution, based on a path in the conflicting documents. A collection with custom conflict resolution with a user-registered stored procedure. <pre><code>DocumentCollection collectionSpec = new DocumentCollection();\r\n    collectionSpec.setId(\"Multi-master collection\");\r\n    \r\n    ConflictResolutionPolicy policy = ConflictResolutionPolicy.createLastWriterWinsPolicy(\"/path/for/conflict/resolution\");\r\n    collectionSpec.setConflictResolutionPolicy(policy);\r\n    \r\n    DocumentCollection collection = client.createCollection(databaseLink, collectionSpec, null)\r\n            .toBlocking().single().getResource();\r\n    </code></pre></p>"
  syntax: &o1
    content: public class ConflictResolutionPolicy extends JsonSerializable
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.cosmosdb.JsonSerializable
  inheritedMembers:
  - com.microsoft.azure.cosmosdb.JsonSerializable.get(String)
  - com.microsoft.azure.cosmosdb.JsonSerializable.getBoolean(String)
  - com.microsoft.azure.cosmosdb.JsonSerializable.getCollection(String)
  - com.microsoft.azure.cosmosdb.JsonSerializable.getDouble(String)
  - com.microsoft.azure.cosmosdb.JsonSerializable.getHashMap()
  - com.microsoft.azure.cosmosdb.JsonSerializable.getInt(String)
  - com.microsoft.azure.cosmosdb.JsonSerializable.getLogger()
  - com.microsoft.azure.cosmosdb.JsonSerializable.getLong(String)
  - com.microsoft.azure.cosmosdb.JsonSerializable.getMapper()
  - com.microsoft.azure.cosmosdb.JsonSerializable.getObject(String)
  - com.microsoft.azure.cosmosdb.JsonSerializable.getObjectByPath(List<String>)
  - com.microsoft.azure.cosmosdb.JsonSerializable.getString(String)
  - com.microsoft.azure.cosmosdb.JsonSerializable.has(String)
  - com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable()
  - com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String,ObjectMapper)
  - com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String)
  - com.microsoft.azure.cosmosdb.JsonSerializable.remove(String)
  - com.microsoft.azure.cosmosdb.JsonSerializable.toJson()
  - com.microsoft.azure.cosmosdb.JsonSerializable.toJson(SerializationFormattingPolicy)
  - com.microsoft.azure.cosmosdb.JsonSerializable.toString()
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.ConflictResolutionPolicy(String)
  id: ConflictResolutionPolicy(String)
  parent: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
  href: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.yml
  langs:
  - java
  name: ConflictResolutionPolicy(String jsonString)
  nameWithType: ConflictResolutionPolicy.ConflictResolutionPolicy(String jsonString)
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.ConflictResolutionPolicy(String jsonString)
  overload: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.ConflictResolutionPolicy*
  type: Constructor
  source:
    remote: *o0
    path: commons/src/main/java/com/microsoft/azure/cosmosdb/ConflictResolutionPolicy.java
    startLine: 134
  package: com.microsoft.azure.cosmosdb
  syntax:
    content: public ConflictResolutionPolicy(String jsonString)
    parameters:
    - id: jsonString
      type: "26831127"
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createCustomPolicy()
  id: createCustomPolicy()
  parent: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
  href: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.yml
  langs:
  - java
  name: createCustomPolicy()
  nameWithType: ConflictResolutionPolicy.createCustomPolicy()
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createCustomPolicy()
  overload: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createCustomPolicy*
  type: Method
  source:
    remote: *o0
    path: commons/src/main/java/com/microsoft/azure/cosmosdb/ConflictResolutionPolicy.java
    startLine: 123
  package: com.microsoft.azure.cosmosdb
  summary: "<p>Creates a Custom <xref uid=\"com.microsoft.azure.cosmosdb.ConflictResolutionPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionPolicy\"></xref> without any <xref uid=\"com.microsoft.azure.cosmosdb.StoredProcedure\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoredProcedure\"></xref>. User manually should resolve conflicts.</p>\r\n<p>The conflicts will be registered in the conflicts feed and the user should manually resolve them.</p>\r\n<p></p>"
  syntax:
    content: public static ConflictResolutionPolicy createCustomPolicy()
    return:
      type: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
      description: <p>ConflictResolutionPolicy. </p>
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createCustomPolicy(String)
  id: createCustomPolicy(String)
  parent: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
  href: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.yml
  langs:
  - java
  name: createCustomPolicy(String conflictResolutionSprocName)
  nameWithType: ConflictResolutionPolicy.createCustomPolicy(String conflictResolutionSprocName)
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createCustomPolicy(String conflictResolutionSprocName)
  overload: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createCustomPolicy*
  type: Method
  source:
    remote: *o0
    path: commons/src/main/java/com/microsoft/azure/cosmosdb/ConflictResolutionPolicy.java
    startLine: 106
  package: com.microsoft.azure.cosmosdb
  summary: "<p>Creates a Custom <xref uid=\"com.microsoft.azure.cosmosdb.ConflictResolutionPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionPolicy\"></xref> which uses the specified stored procedure to perform conflict resolution</p>\r\n<p>This stored procedure may be created after the <xref uid=\"com.microsoft.azure.cosmosdb.DocumentCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentCollection\"></xref> is created and can be changed as required.</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>In case the stored procedure fails or throws an exception, the conflict resolution will default to registering conflicts in the conflicts feed </p>\r\n    </li>\r\n    <li>\r\n      <p>The user can provide the stored procedure </p>\r\n    </li>\r\n  </ul>\r\n</p>"
  syntax:
    content: public static ConflictResolutionPolicy createCustomPolicy(String conflictResolutionSprocName)
    parameters:
    - id: conflictResolutionSprocName
      type: "26831127"
      description: <p>stored procedure to perform conflict resolution. </p>
    return:
      type: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
      description: <p>ConflictResolutionPolicy. </p>
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createLastWriterWinsPolicy()
  id: createLastWriterWinsPolicy()
  parent: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
  href: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.yml
  langs:
  - java
  name: createLastWriterWinsPolicy()
  nameWithType: ConflictResolutionPolicy.createLastWriterWinsPolicy()
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createLastWriterWinsPolicy()
  overload: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createLastWriterWinsPolicy*
  type: Method
  source:
    remote: *o0
    path: commons/src/main/java/com/microsoft/azure/cosmosdb/ConflictResolutionPolicy.java
    startLine: 65
  package: com.microsoft.azure.cosmosdb
  summary: "<p>Creates a LastWriterWins <xref uid=\"com.microsoft.azure.cosmosdb.ConflictResolutionPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionPolicy\"></xref> with \"/_ts\" as the resolution path.</p>\r\n<p>In case of a conflict occurring on a document, the document with the higher integer value in the default path <xref uid=\"com.microsoft.azure.cosmosdb.Resource.getTimestamp()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Resource#getTimestamp()\"></xref>, i.e., \"/_ts\" will be used.</p>\r\n<p></p>"
  syntax:
    content: public static ConflictResolutionPolicy createLastWriterWinsPolicy()
    return:
      type: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
      description: <p>ConflictResolutionPolicy. </p>
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createLastWriterWinsPolicy(String)
  id: createLastWriterWinsPolicy(String)
  parent: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
  href: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.yml
  langs:
  - java
  name: createLastWriterWinsPolicy(String conflictResolutionPath)
  nameWithType: ConflictResolutionPolicy.createLastWriterWinsPolicy(String conflictResolutionPath)
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createLastWriterWinsPolicy(String conflictResolutionPath)
  overload: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createLastWriterWinsPolicy*
  type: Method
  source:
    remote: *o0
    path: commons/src/main/java/com/microsoft/azure/cosmosdb/ConflictResolutionPolicy.java
    startLine: 83
  package: com.microsoft.azure.cosmosdb
  summary: "<p>Creates a LastWriterWins <xref uid=\"com.microsoft.azure.cosmosdb.ConflictResolutionPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionPolicy\"></xref> with path as the resolution path.</p>\r\n<p>The specified path must be present in each document and must be an integer value. In case of a conflict occurring on a document, the document with the higher integer value in the specified path will be picked.</p>\r\n<p></p>"
  syntax:
    content: public static ConflictResolutionPolicy createLastWriterWinsPolicy(String conflictResolutionPath)
    parameters:
    - id: conflictResolutionPath
      type: "26831127"
      description: <p>The path to check values for last-writer wins conflict resolution. That path is a rooted path of the property in the document, such as "/name/first". </p>
    return:
      type: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
      description: <p>ConflictResolutionPolicy. </p>
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionMode()
  id: getConflictResolutionMode()
  parent: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
  href: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.yml
  langs:
  - java
  name: getConflictResolutionMode()
  nameWithType: ConflictResolutionPolicy.getConflictResolutionMode()
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionMode()
  overload: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionMode*
  type: Method
  source:
    remote: *o0
    path: commons/src/main/java/com/microsoft/azure/cosmosdb/ConflictResolutionPolicy.java
    startLine: 144
  package: com.microsoft.azure.cosmosdb
  summary: "<p>Gets the <xref uid=\"com.microsoft.azure.cosmosdb.ConflictResolutionMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionMode\"></xref> in the Azure Cosmos DB service. By default it is <xref uid=\"com.microsoft.azure.cosmosdb.ConflictResolutionMode.LastWriterWins\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionMode#LastWriterWins\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public ConflictResolutionMode getConflictResolutionMode()
    return:
      type: com.microsoft.azure.cosmosdb.ConflictResolutionMode
      description: <p>ConflictResolutionMode. </p>
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionPath()
  id: getConflictResolutionPath()
  parent: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
  href: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.yml
  langs:
  - java
  name: getConflictResolutionPath()
  nameWithType: ConflictResolutionPolicy.getConflictResolutionPath()
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionPath()
  overload: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionPath*
  type: Method
  source:
    remote: *o0
    path: commons/src/main/java/com/microsoft/azure/cosmosdb/ConflictResolutionPolicy.java
    startLine: 181
  package: com.microsoft.azure.cosmosdb
  summary: "<p>Gets the path which is present in each document in the Azure Cosmos DB service for last writer wins conflict-resolution. This path must be present in each document and must be an integer value. In case of a conflict occurring on a document, the document with the higher integer value in the specified path will be picked. If the path is unspecified, by default the <xref uid=\"com.microsoft.azure.cosmosdb.Resource.getTimestamp()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Resource#getTimestamp()\"></xref> path will be used.</p>\r\n<p>This value should only be set when using <xref uid=\"com.microsoft.azure.cosmosdb.ConflictResolutionMode.LastWriterWins\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionMode#LastWriterWins\"></xref></p>\r\n<p></p>"
  syntax:
    content: public String getConflictResolutionPath()
    return:
      type: "26831127"
      description: <p>The path to check values for last-writer wins conflict resolution. That path is a rooted path of the property in the document, such as "/name/first". </p>
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionProcedure()
  id: getConflictResolutionProcedure()
  parent: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
  href: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.yml
  langs:
  - java
  name: getConflictResolutionProcedure()
  nameWithType: ConflictResolutionPolicy.getConflictResolutionProcedure()
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionProcedure()
  overload: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionProcedure*
  type: Method
  source:
    remote: *o0
    path: commons/src/main/java/com/microsoft/azure/cosmosdb/ConflictResolutionPolicy.java
    startLine: 213
  package: com.microsoft.azure.cosmosdb
  summary: "<p>Gets the <xref uid=\"com.microsoft.azure.cosmosdb.StoredProcedure\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoredProcedure\"></xref> which is used for conflict resolution in the Azure Cosmos DB service. This stored procedure may be created after the <xref uid=\"com.microsoft.azure.cosmosdb.DocumentCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentCollection\"></xref> is created and can be changed as required.</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>This value should only be set when using <xref uid=\"com.microsoft.azure.cosmosdb.ConflictResolutionMode.Custom\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionMode#Custom\"></xref></p>\r\n    </li>\r\n    <li>\r\n      <p>In case the stored procedure fails or throws an exception, the conflict resolution will default to registering conflicts in the conflicts feed </p>\r\n    </li>\r\n    <li>\r\n      <p>The user can provide the stored procedure </p>\r\n    </li>\r\n  </ul>\r\n</p>\r\n<p></p>"
  syntax:
    content: public String getConflictResolutionProcedure()
    return:
      type: "26831127"
      description: <p>the stored procedure to perform conflict resolution.] </p>
references:
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createLastWriterWinsPolicy*
  name: createLastWriterWinsPolicy
  nameWithType: ConflictResolutionPolicy.createLastWriterWinsPolicy
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createLastWriterWinsPolicy
  package: com.microsoft.azure.cosmosdb
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createCustomPolicy*
  name: createCustomPolicy
  nameWithType: ConflictResolutionPolicy.createCustomPolicy
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.createCustomPolicy
  package: com.microsoft.azure.cosmosdb
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.ConflictResolutionPolicy*
  name: ConflictResolutionPolicy
  nameWithType: ConflictResolutionPolicy.ConflictResolutionPolicy
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.ConflictResolutionPolicy
  package: com.microsoft.azure.cosmosdb
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionMode*
  name: getConflictResolutionMode
  nameWithType: ConflictResolutionPolicy.getConflictResolutionMode
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionMode
  package: com.microsoft.azure.cosmosdb
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionPath*
  name: getConflictResolutionPath
  nameWithType: ConflictResolutionPolicy.getConflictResolutionPath
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionPath
  package: com.microsoft.azure.cosmosdb
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionProcedure*
  name: getConflictResolutionProcedure
  nameWithType: ConflictResolutionPolicy.getConflictResolutionProcedure
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionProcedure
  package: com.microsoft.azure.cosmosdb
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.get(String)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: get(String propertyName)
  nameWithType: JsonSerializable.get(String propertyName)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.get(String propertyName)
  type: Method
  summary: "<p>Gets a property value as Object.</p>\r\n<p></p>"
  syntax:
    content: public Object get(String propertyName)
    parameters:
    - id: propertyName
      type: "26831127"
      description: <p>the property to get. </p>
    return:
      type: "79317049"
      description: <p>the value of the property. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.getBoolean(String)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: getBoolean(String propertyName)
  nameWithType: JsonSerializable.getBoolean(String propertyName)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getBoolean(String propertyName)
  type: Method
  summary: "<p>Gets a boolean value.</p>\r\n<p></p>"
  syntax:
    content: public Boolean getBoolean(String propertyName)
    parameters:
    - id: propertyName
      type: "26831127"
      description: <p>the property to get. </p>
    return:
      type: 866c2227
      description: <p>the boolean value. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.getCollection(String)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: getCollection(String propertyName)
  nameWithType: JsonSerializable.getCollection(String propertyName)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getCollection(String propertyName)
  type: Method
  summary: "<p>Gets a JSONObject collection.</p>\r\n<p></p>"
  syntax:
    content: public Collection<ObjectNode> getCollection(String propertyName)
    parameters:
    - id: propertyName
      type: "26831127"
      description: <p>the property to get. </p>
    return:
      type: e4736bec
      description: <p>the JSONObject collection. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.getDouble(String)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: getDouble(String propertyName)
  nameWithType: JsonSerializable.getDouble(String propertyName)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getDouble(String propertyName)
  type: Method
  summary: "<p>Gets a double value.</p>\r\n<p></p>"
  syntax:
    content: public Double getDouble(String propertyName)
    parameters:
    - id: propertyName
      type: "26831127"
      description: <p>the property to get. </p>
    return:
      type: 8dd309d9
      description: <p>the double value. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.getHashMap()
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: getHashMap()
  nameWithType: JsonSerializable.getHashMap()
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getHashMap()
  type: Method
  summary: "<p>Returns the propertybag(JSONObject) in a hashMap</p>\r\n<p></p>"
  syntax:
    content: public HashMap<String, Object> getHashMap()
    return:
      type: f39c727f
      description: <p>the HashMap. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.getInt(String)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: getInt(String propertyName)
  nameWithType: JsonSerializable.getInt(String propertyName)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getInt(String propertyName)
  type: Method
  summary: "<p>Gets an integer value.</p>\r\n<p></p>"
  syntax:
    content: public Integer getInt(String propertyName)
    parameters:
    - id: propertyName
      type: "26831127"
      description: <p>the property to get. </p>
    return:
      type: 08effaa0
      description: <p>the boolean value </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.getLogger()
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: getLogger()
  nameWithType: JsonSerializable.getLogger()
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getLogger()
  type: Method
  syntax:
    content: protected Logger getLogger()
    return:
      type: ef129195
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.getLong(String)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: getLong(String propertyName)
  nameWithType: JsonSerializable.getLong(String propertyName)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getLong(String propertyName)
  type: Method
  summary: "<p>Gets a long value.</p>\r\n<p></p>"
  syntax:
    content: public Long getLong(String propertyName)
    parameters:
    - id: propertyName
      type: "26831127"
      description: <p>the property to get. </p>
    return:
      type: 34f09483
      description: <p>the long value </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.getMapper()
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: getMapper()
  nameWithType: JsonSerializable.getMapper()
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getMapper()
  type: Method
  syntax:
    content: protected ObjectMapper getMapper()
    return:
      type: 7db3dbca
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.getObject(String)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: getObject(String propertyName)
  nameWithType: JsonSerializable.getObject(String propertyName)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getObject(String propertyName)
  type: Method
  summary: "<p>Gets a JSONObject.</p>\r\n<p></p>"
  syntax:
    content: public ObjectNode getObject(String propertyName)
    parameters:
    - id: propertyName
      type: "26831127"
      description: <p>the property to get. </p>
    return:
      type: fd8bcc27
      description: <p>the JSONObject. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.getObjectByPath(List<String>)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: getObjectByPath(List<String> propertyNames)
  nameWithType: JsonSerializable.getObjectByPath(List<String> propertyNames)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getObjectByPath(List<String> propertyNames)
  type: Method
  summary: "<p>Gets the value of a property identified by an array of property names that forms the path.</p>\r\n<p></p>"
  syntax:
    content: public Object getObjectByPath(List<String> propertyNames)
    parameters:
    - id: propertyNames
      type: 7d60c20e
      description: <p>that form the path to the property to get. </p>
    return:
      type: "79317049"
      description: <p>the value of the property. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.getString(String)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: getString(String propertyName)
  nameWithType: JsonSerializable.getString(String propertyName)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getString(String propertyName)
  type: Method
  summary: "<p>Gets a string value.</p>\r\n<p></p>"
  syntax:
    content: public String getString(String propertyName)
    parameters:
    - id: propertyName
      type: "26831127"
      description: <p>the property to get. </p>
    return:
      type: "26831127"
      description: <p>the string value. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.has(String)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: has(String propertyName)
  nameWithType: JsonSerializable.has(String propertyName)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.has(String propertyName)
  type: Method
  summary: "<p>Checks whether a property exists.</p>\r\n<p></p>"
  syntax:
    content: public boolean has(String propertyName)
    parameters:
    - id: propertyName
      type: "26831127"
      description: <p>the property to look up. </p>
    return:
      type: 4fc6e284
      description: <p>true if the property exists. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable()
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: JsonSerializable()
  nameWithType: JsonSerializable.JsonSerializable()
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable()
  type: Constructor
  syntax:
    content: protected JsonSerializable()
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String,ObjectMapper)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: JsonSerializable(String jsonString, ObjectMapper objectMapper)
  nameWithType: JsonSerializable.JsonSerializable(String jsonString, ObjectMapper objectMapper)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String jsonString, ObjectMapper objectMapper)
  type: Constructor
  summary: "<p>Constructor.</p>\r\n<p></p>"
  syntax:
    content: protected JsonSerializable(String jsonString, ObjectMapper objectMapper)
    parameters:
    - id: jsonString
      type: "26831127"
      description: <p>the json string that represents the JsonSerializable. </p>
    - id: objectMapper
      type: 7db3dbca
      description: <p>the custom object mapper </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: JsonSerializable(String jsonString)
  nameWithType: JsonSerializable.JsonSerializable(String jsonString)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String jsonString)
  type: Constructor
  summary: "<p>Constructor.</p>\r\n<p></p>"
  syntax:
    content: protected JsonSerializable(String jsonString)
    parameters:
    - id: jsonString
      type: "26831127"
      description: <p>the json string that represents the JsonSerializable. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.remove(String)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: remove(String propertyName)
  nameWithType: JsonSerializable.remove(String propertyName)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.remove(String propertyName)
  type: Method
  summary: "<p>Removes a value by propertyName.</p>\r\n<p></p>"
  syntax:
    content: public void remove(String propertyName)
    parameters:
    - id: propertyName
      type: "26831127"
      description: <p>the property to remove. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.toJson()
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: toJson()
  nameWithType: JsonSerializable.toJson()
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.toJson()
  type: Method
  summary: "<p>Converts to a JSON string.</p>\r\n<p></p>"
  syntax:
    content: public String toJson()
    return:
      type: "26831127"
      description: <p>the JSON string. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.toJson(SerializationFormattingPolicy)
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: toJson(SerializationFormattingPolicy formattingPolicy)
  nameWithType: JsonSerializable.toJson(SerializationFormattingPolicy formattingPolicy)
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.toJson(SerializationFormattingPolicy formattingPolicy)
  type: Method
  summary: "<p>Converts to a JSON string.</p>\r\n<p></p>"
  syntax:
    content: public String toJson(SerializationFormattingPolicy formattingPolicy)
    parameters:
    - id: formattingPolicy
      type: com.microsoft.azure.cosmosdb.SerializationFormattingPolicy
      description: <p>the formatting policy to be used. </p>
    return:
      type: "26831127"
      description: <p>the JSON string. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable.toString()
  parent: com.microsoft.azure.cosmosdb.JsonSerializable
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: toString()
  nameWithType: JsonSerializable.toString()
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable.toString()
  type: Method
  summary: "<p>Gets Simple String representation of property bag.</p>\r\n<p>For proper conversion to json and inclusion of the default values use <xref uid=\"com.microsoft.azure.cosmosdb.JsonSerializable.toJson()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"toJson()\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public String toString()
    return:
      type: "26831127"
      description: <p>string representation of property bag. </p>
- uid: com.microsoft.azure.cosmosdb.JsonSerializable
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.JsonSerializable.yml
  name: JsonSerializable
  nameWithType: JsonSerializable
  fullName: com.microsoft.azure.cosmosdb.JsonSerializable
  type: Class
  summary: "<p>Represents a base resource that can be serialized to JSON in the Azure Cosmos DB database service. </p>"
  syntax:
    content: public class JsonSerializable
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.yml
  name: ConflictResolutionPolicy
  nameWithType: ConflictResolutionPolicy
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionPolicy
  type: Class
  summary: "<p>Represents the conflict resolution policy configuration for specifying how to resolve conflicts in case writes from different regions result in conflicts on documents in the collection in the Azure Cosmos DB service.</p>\r\n<p>A collection with custom conflict resolution with no user-registered stored procedure. <pre><code>DocumentCollection collectionSpec = new DocumentCollection();\r\n    collectionSpec.setId(\"Multi-master collection\");\r\n    \r\n    ConflictResolutionPolicy policy = ConflictResolutionPolicy.createCustomPolicy();\r\n    collectionSpec.setConflictResolutionPolicy(policy);\r\n    \r\n    DocumentCollection collection = client.createCollection(databaseLink, collectionSpec, null)\r\n            .toBlocking().single().getResource();\r\n    </code></pre></p>\r\n<p>A collection with custom conflict resolution with a user-registered stored procedure. <pre><code>DocumentCollection collectionSpec = new DocumentCollection();\r\n    collectionSpec.setId(\"Multi-master collection\");\r\n    \r\n    ConflictResolutionPolicy policy = ConflictResolutionPolicy.createCustomPolicy(conflictResolutionSprocName);\r\n    collectionSpec.setConflictResolutionPolicy(policy);\r\n    \r\n    DocumentCollection collection = client.createCollection(databaseLink, collectionSpec, null)\r\n            .toBlocking().single().getResource();\r\n    </code></pre></p>\r\n<p>A collection with last writer wins conflict resolution, based on a path in the conflicting documents. A collection with custom conflict resolution with a user-registered stored procedure. <pre><code>DocumentCollection collectionSpec = new DocumentCollection();\r\n    collectionSpec.setId(\"Multi-master collection\");\r\n    \r\n    ConflictResolutionPolicy policy = ConflictResolutionPolicy.createLastWriterWinsPolicy(\"/path/for/conflict/resolution\");\r\n    collectionSpec.setConflictResolutionPolicy(policy);\r\n    \r\n    DocumentCollection collection = client.createCollection(databaseLink, collectionSpec, null)\r\n            .toBlocking().single().getResource();\r\n    </code></pre></p>"
  syntax: *o1
- uid: com.microsoft.azure.cosmosdb.Resource.getTimestamp()
  parent: com.microsoft.azure.cosmosdb.Resource
  href: com.microsoft.azure.cosmosdb.Resource.yml
  name: getTimestamp()
  nameWithType: Resource.getTimestamp()
  fullName: com.microsoft.azure.cosmosdb.Resource.getTimestamp()
  type: Method
  summary: "<p>Get the last modified timestamp associated with the resource.</p>\r\n<p></p>"
  syntax:
    content: public Date getTimestamp()
    return:
      type: "12977444"
      description: <p>the timestamp. </p>
- uid: com.microsoft.azure.cosmosdb.DocumentCollection
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.DocumentCollection.yml
  name: DocumentCollection
  nameWithType: DocumentCollection
  fullName: com.microsoft.azure.cosmosdb.DocumentCollection
  type: Class
  summary: "<p>Represents a document collection in the Azure Cosmos DB database service. A collection is a named logical container for documents. </p>\r\n<p>A database may contain zero or more named collections and each collection consists of zero or more JSON documents. Being schema-free, the documents in a collection do not need to share the same structure or fields. Since collections are application resources, they can be authorized using either the master key or resource keys. </p>"
  syntax:
    content: public class DocumentCollection
- uid: com.microsoft.azure.cosmosdb.Resource.getId()
  parent: com.microsoft.azure.cosmosdb.Resource
  href: com.microsoft.azure.cosmosdb.Resource.yml
  name: getId()
  nameWithType: Resource.getId()
  fullName: com.microsoft.azure.cosmosdb.Resource.getId()
  type: Method
  summary: "<p>Gets the name of the resource.</p>\r\n<p></p>"
  syntax:
    content: public String getId()
    return:
      type: "26831127"
      description: <p>the name of the resource. </p>
- uid: com.microsoft.azure.cosmosdb.StoredProcedure
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.StoredProcedure.yml
  name: StoredProcedure
  nameWithType: StoredProcedure
  fullName: com.microsoft.azure.cosmosdb.StoredProcedure
  type: Class
  summary: "<p>Represents a stored procedure in the Azure Cosmos DB database service. </p>\r\n<p>Cosmos DB allows stored procedures to be executed in the storage tier, directly against a document collection. The script gets executed under ACID transactions on the primary storage partition of the specified collection. For additional details, refer to the server-side JavaScript API documentation. </p>"
  syntax:
    content: public class StoredProcedure
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionMode
  parent: com.microsoft.azure.cosmosdb
  href: com.microsoft.azure.cosmosdb.ConflictResolutionMode.yml
  name: ConflictResolutionMode
  nameWithType: ConflictResolutionMode
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionMode
  type: Enum
  syntax:
    content: public enum ConflictResolutionMode
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionMode.LastWriterWins
  parent: com.microsoft.azure.cosmosdb.ConflictResolutionMode
  href: com.microsoft.azure.cosmosdb.ConflictResolutionMode.yml
  name: LastWriterWins
  nameWithType: ConflictResolutionMode.LastWriterWins
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionMode.LastWriterWins
  type: Field
  summary: "<p>Last writer wins conflict resolution mode</p>\r\n<p>Setting the ConflictResolutionMode to \"LastWriterWins\" indicates that conflict resolution should be done by inspecting a field in the conflicting documents and picking the document which has the higher value in that path. See <xref uid=\"com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionPath()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionPolicy#getConflictResolutionPath()\"></xref> for details on how to specify the path to be checked for conflict resolution. Also note that Deletes win. </p>"
  syntax:
    content: public LastWriterWins
- uid: com.microsoft.azure.cosmosdb.ConflictResolutionMode.Custom
  parent: com.microsoft.azure.cosmosdb.ConflictResolutionMode
  href: com.microsoft.azure.cosmosdb.ConflictResolutionMode.yml
  name: Custom
  nameWithType: ConflictResolutionMode.Custom
  fullName: com.microsoft.azure.cosmosdb.ConflictResolutionMode.Custom
  type: Field
  summary: "<p>Custom conflict resolution mode</p>\r\n<p>Setting the ConflictResolutionMode to \"Custom\" indicates that conflict resolution is custom handled by a user. The user could elect to register a user specified <xref uid=\"com.microsoft.azure.cosmosdb.StoredProcedure\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoredProcedure\"></xref> for handling conflicting resources. Should the user not register a user specified StoredProcedure, conflicts will default to being made available as <xref uid=\"com.microsoft.azure.cosmosdb.Conflict\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Conflict\"></xref> resources, which the user can inspect and manually resolve. See <xref uid=\"com.microsoft.azure.cosmosdb.ConflictResolutionPolicy.getConflictResolutionProcedure()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionPolicy#getConflictResolutionProcedure()\"></xref> for details on how to specify the stored procedure to run for conflict resolution. </p>"
  syntax:
    content: public Custom
