### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery
  id: StringBasedCosmosQuery
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.support
  children:
  - com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.StringBasedCosmosQuery(com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod,com.azure.spring.data.cosmos.core.CosmosOperations)
  - com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)
  - com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.execute(java.lang.Object[])
  - com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.isDeleteQuery()
  - com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.isExistsQuery()
  langs:
  - java
  name: StringBasedCosmosQuery
  nameWithType: StringBasedCosmosQuery
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery
  type: Class
  package: com.azure.spring.data.cosmos.repository.support
  summary: Cosmos query class to handle the annotated queries. This overrides the execution and runs the query directly
  syntax:
    content: public class StringBasedCosmosQuery extends AbstractCosmosQuery
  inheritance:
  - java.lang.Object
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery
  inheritedMembers:
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.execute(java.lang.Object[])
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.getExecution(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor,org.springframework.data.repository.query.ReturnedType)
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.getQueryMethod()
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isCollectionQuery()
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isDeleteQuery()
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isExistsQuery()
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isPageQuery()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.StringBasedCosmosQuery(com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod,com.azure.spring.data.cosmos.core.CosmosOperations)
  id: StringBasedCosmosQuery(com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod,com.azure.spring.data.cosmos.core.CosmosOperations)
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery
  langs:
  - java
  name: StringBasedCosmosQuery(CosmosQueryMethod queryMethod, CosmosOperations dbOperations)
  nameWithType: StringBasedCosmosQuery.StringBasedCosmosQuery(CosmosQueryMethod queryMethod, CosmosOperations dbOperations)
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.StringBasedCosmosQuery(CosmosQueryMethod queryMethod, CosmosOperations dbOperations)
  overload: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.StringBasedCosmosQuery*
  type: Constructor
  package: com.azure.spring.data.cosmos.repository.support
  summary: Constructor
  syntax:
    content: public StringBasedCosmosQuery(CosmosQueryMethod queryMethod, CosmosOperations dbOperations)
    parameters:
    - id: queryMethod
      type: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod
      description: the CosmosQueryMethod
    - id: dbOperations
      type: com.azure.spring.data.cosmos.core.CosmosOperations
      description: the CosmosOperations
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)
  id: createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery
  langs:
  - java
  name: createQuery(CosmosParameterAccessor accessor)
  nameWithType: StringBasedCosmosQuery.createQuery(CosmosParameterAccessor accessor)
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.createQuery(CosmosParameterAccessor accessor)
  overload: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.createQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  syntax:
    content: protected CosmosQuery createQuery(CosmosParameterAccessor accessor)
    parameters:
    - id: accessor
      type: com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor
    return:
      type: com.azure.spring.data.cosmos.core.query.CosmosQuery
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.execute(java.lang.Object[])
  id: execute(java.lang.Object[])
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery
  langs:
  - java
  name: execute(Object[] parameters)
  nameWithType: StringBasedCosmosQuery.execute(Object[] parameters)
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.execute(Object[] parameters)
  overload: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.execute*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Executes the <xref uid="com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery" data-throw-if-not-resolved="false">AbstractCosmosQuery</xref> with the given parameters.
  syntax:
    content: public Object execute(Object[] parameters)
    parameters:
    - id: parameters
      type: java.lang.Object[]
    return:
      type: java.lang.Object
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.isDeleteQuery()
  id: isDeleteQuery()
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery
  langs:
  - java
  name: isDeleteQuery()
  nameWithType: StringBasedCosmosQuery.isDeleteQuery()
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.isDeleteQuery()
  overload: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.isDeleteQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  syntax:
    content: protected boolean isDeleteQuery()
    return:
      type: boolean
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.isExistsQuery()
  id: isExistsQuery()
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery
  langs:
  - java
  name: isExistsQuery()
  nameWithType: StringBasedCosmosQuery.isExistsQuery()
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.isExistsQuery()
  overload: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.isExistsQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  syntax:
    content: protected boolean isExistsQuery()
    return:
      type: boolean
references:
- uid: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod
  name: CosmosQueryMethod
  nameWithType: CosmosQueryMethod
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod
- uid: com.azure.spring.data.cosmos.core.CosmosOperations
  name: CosmosOperations
  nameWithType: CosmosOperations
  fullName: com.azure.spring.data.cosmos.core.CosmosOperations
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.StringBasedCosmosQuery*
  name: StringBasedCosmosQuery
  nameWithType: StringBasedCosmosQuery.StringBasedCosmosQuery
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.StringBasedCosmosQuery
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor
  name: CosmosParameterAccessor
  nameWithType: CosmosParameterAccessor
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor
- uid: com.azure.spring.data.cosmos.core.query.CosmosQuery
  name: CosmosQuery
  nameWithType: CosmosQuery
  fullName: com.azure.spring.data.cosmos.core.query.CosmosQuery
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.createQuery*
  name: createQuery
  nameWithType: StringBasedCosmosQuery.createQuery
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.createQuery
  package: com.azure.spring.data.cosmos.repository.support
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.execute*
  name: execute
  nameWithType: StringBasedCosmosQuery.execute
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.execute
  package: com.azure.spring.data.cosmos.repository.support
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.isDeleteQuery*
  name: isDeleteQuery
  nameWithType: StringBasedCosmosQuery.isDeleteQuery
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.isDeleteQuery
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.isExistsQuery*
  name: isExistsQuery
  nameWithType: StringBasedCosmosQuery.isExistsQuery
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedCosmosQuery.isExistsQuery
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery
  name: AbstractCosmosQuery
  nameWithType: AbstractCosmosQuery
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isExistsQuery()
  name: AbstractCosmosQuery.isExistsQuery()
  nameWithType: AbstractCosmosQuery.isExistsQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isExistsQuery()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isDeleteQuery()
  name: AbstractCosmosQuery.isDeleteQuery()
  nameWithType: AbstractCosmosQuery.isDeleteQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isDeleteQuery()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isPageQuery()
  name: AbstractCosmosQuery.isPageQuery()
  nameWithType: AbstractCosmosQuery.isPageQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isPageQuery()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)
  name: AbstractCosmosQuery.createQuery(CosmosParameterAccessor)
  nameWithType: AbstractCosmosQuery.createQuery(CosmosParameterAccessor)
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.getQueryMethod()
  name: AbstractCosmosQuery.getQueryMethod()
  nameWithType: AbstractCosmosQuery.getQueryMethod()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.getQueryMethod()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.getExecution(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor,org.springframework.data.repository.query.ReturnedType)
  name: AbstractCosmosQuery.getExecution(CosmosParameterAccessor,ReturnedType)
  nameWithType: AbstractCosmosQuery.getExecution(CosmosParameterAccessor,ReturnedType)
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.getExecution(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor,org.springframework.data.repository.query.ReturnedType)
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.execute(java.lang.Object[])
  name: AbstractCosmosQuery.execute(Object[])
  nameWithType: AbstractCosmosQuery.execute(Object[])
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.execute(java.lang.Object[])
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isCollectionQuery()
  name: AbstractCosmosQuery.isCollectionQuery()
  nameWithType: AbstractCosmosQuery.isCollectionQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isCollectionQuery()
