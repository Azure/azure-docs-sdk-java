### YamlMime:JavaType
uid: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder"
fullName: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder"
name: "JdkHttpClientBuilder"
nameWithType: "JdkHttpClientBuilder"
summary: "Builder to configure and build an instance of the azure-core <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> type using the JDK Http<wbr>Client APIs, first introduced as preview in JDK 9, but made generally available from JDK 11 onwards."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **JdkHttpClientBuilder**"
constructors:
- uid: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.JdkHttpClientBuilder()"
  fullName: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.JdkHttpClientBuilder()"
  name: "JdkHttpClientBuilder()"
  nameWithType: "JdkHttpClientBuilder.JdkHttpClientBuilder()"
  summary: "Creates Jdk<wbr>Http<wbr>Client<wbr>Builder."
  syntax: "public JdkHttpClientBuilder()"
  desc: "Creates JdkHttpClientBuilder."
- uid: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.JdkHttpClientBuilder(java.net.http.HttpClient.Builder)"
  fullName: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.JdkHttpClientBuilder(HttpClient.Builder httpClientBuilder)"
  name: "JdkHttpClientBuilder(HttpClient.Builder httpClientBuilder)"
  nameWithType: "JdkHttpClientBuilder.JdkHttpClientBuilder(HttpClient.Builder httpClientBuilder)"
  summary: "Creates Jdk<wbr>Http<wbr>Client<wbr>Builder from the builder of an existing <xref uid=\"java.net.http.HttpClient.Builder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.net.http.HttpClient.Builder\"></xref>."
  parameters:
  - description: "the HttpClient builder to use, may be null."
    name: "httpClientBuilder"
    type: "<xref href=\"java.net.http.HttpClient.Builder?alt=java.net.http.HttpClient.Builder&text=Builder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JdkHttpClientBuilder(HttpClient.Builder httpClientBuilder)"
  desc: "Creates JdkHttpClientBuilder from the builder of an existing <xref uid=\"java.net.http.HttpClient.Builder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.net.http.HttpClient.Builder\"></xref>.\n\nNull may be passed for `httpClientBuilder`, this is the same as calling <xref uid=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.JdkHttpClientBuilder()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#JdkHttpClientBuilder()\"></xref>."
methods:
- uid: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.build()"
  fullName: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.build()"
  name: "build()"
  nameWithType: "JdkHttpClientBuilder.build()"
  summary: "Build a Http<wbr>Client with current configurations."
  syntax: "public HttpClient build()"
  desc: "Build a HttpClient with current configurations."
  returns:
    description: "a <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref>."
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.configuration(com.azure.core.util.Configuration)"
  fullName: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.configuration(Configuration configuration)"
  name: "configuration(Configuration configuration)"
  nameWithType: "JdkHttpClientBuilder.configuration(Configuration configuration)"
  summary: "Sets the configuration store that is used during construction of the HTTP client."
  parameters:
  - description: "The configuration store used to"
    name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JdkHttpClientBuilder configuration(Configuration configuration)"
  desc: "Sets the configuration store that is used during construction of the HTTP client.\n\nThe default configuration store is a clone of the <xref uid=\"Configuration#getGlobalConfiguration()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"global\n configuration store\"></xref>, use <xref uid=\"com.azure.core.util.Configuration.NONE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#NONE\"></xref> to bypass using configuration settings during construction."
  returns:
    description: "The updated JdkHttpClientBuilder object."
    type: "<xref href=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder?alt=com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder&text=JdkHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.connectionTimeout(java.time.Duration)"
  fullName: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.connectionTimeout(Duration connectionTimeout)"
  name: "connectionTimeout(Duration connectionTimeout)"
  nameWithType: "JdkHttpClientBuilder.connectionTimeout(Duration connectionTimeout)"
  summary: "Sets the connection timeout."
  parameters:
  - description: "the connection timeout"
    name: "connectionTimeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JdkHttpClientBuilder connectionTimeout(Duration connectionTimeout)"
  desc: "Sets the connection timeout.\n\n**Code Samples**\n\n```java\nHttpClient client = new JdkHttpClientBuilder()\n         .connectionTimeout(Duration.ofSeconds(250)) // connection timeout of 250 seconds\n         .build();\n```\n\nThe default connection timeout is 10 seconds."
  returns:
    description: "the updated JdkHttpClientBuilder object"
    type: "<xref href=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder?alt=com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder&text=JdkHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.executor(java.util.concurrent.Executor)"
  fullName: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.executor(Executor executor)"
  name: "executor(Executor executor)"
  nameWithType: "JdkHttpClientBuilder.executor(Executor executor)"
  summary: "Sets the executor to be used for asynchronous and dependent tasks."
  parameters:
  - description: "the executor to be used for asynchronous and dependent tasks, if null a default will be used."
    name: "executor"
    type: "<xref href=\"java.util.concurrent.Executor?alt=java.util.concurrent.Executor&text=Executor\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JdkHttpClientBuilder executor(Executor executor)"
  desc: "Sets the executor to be used for asynchronous and dependent tasks. This cannot be null.\n\nIf this method is not invoked prior to <xref uid=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.build()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#build()\"></xref> and <xref uid=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.JdkHttpClientBuilder(java.net.http.HttpClient.Builder)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#JdkHttpClientBuilder(java.net.http.HttpClient.Builder)\"></xref> wasn't used to create this builder, <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SharedExecutorService\"></xref> will be used as the default for each newly built `HttpClient`.\n\nIf an <xref uid=\"java.util.concurrent.Executor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Executor\"></xref> was set and <xref uid=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.JdkHttpClientBuilder(java.net.http.HttpClient.Builder)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#JdkHttpClientBuilder(java.net.http.HttpClient.Builder)\"></xref> was used to create an instance of this builder, the set <xref uid=\"java.util.concurrent.Executor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Executor\"></xref> will override any value configured in the <xref uid=\"java.net.http.HttpClient.Builder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.net.http.HttpClient.Builder\"></xref> passed in the constructor.\n\nPassing null for the <xref uid=\"java.util.concurrent.Executor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Executor\"></xref> is allowed and is considered clearing the previously set <xref uid=\"java.util.concurrent.Executor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Executor\"></xref>, if a previous <xref uid=\"java.util.concurrent.Executor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Executor\"></xref> was set."
  returns:
    description: "the updated JdkHttpClientBuilder object"
    type: "<xref href=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder?alt=com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder&text=JdkHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.proxy(com.azure.core.http.ProxyOptions)"
  fullName: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.proxy(ProxyOptions proxyOptions)"
  name: "proxy(ProxyOptions proxyOptions)"
  nameWithType: "JdkHttpClientBuilder.proxy(ProxyOptions proxyOptions)"
  summary: "Sets the proxy."
  parameters:
  - description: "The proxy configuration to use."
    name: "proxyOptions"
    type: "<xref href=\"com.azure.core.http.ProxyOptions?alt=com.azure.core.http.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JdkHttpClientBuilder proxy(ProxyOptions proxyOptions)"
  desc: "Sets the proxy.\n\n**Code Samples**\n\n```java\nfinal String proxyHost = \"<proxy-host>\"; // e.g. localhost\n final int proxyPort = 9999; // Proxy port\n ProxyOptions proxyOptions = new ProxyOptions(ProxyOptions.Type.HTTP,\n         new InetSocketAddress(proxyHost, proxyPort));\n HttpClient client = new JdkHttpClientBuilder()\n         .proxy(proxyOptions)\n         .build();\n```"
  returns:
    description: "the updated JdkHttpClientBuilder object"
    type: "<xref href=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder?alt=com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder&text=JdkHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.readTimeout(java.time.Duration)"
  fullName: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.readTimeout(Duration readTimeout)"
  name: "readTimeout(Duration readTimeout)"
  nameWithType: "JdkHttpClientBuilder.readTimeout(Duration readTimeout)"
  summary: "Sets the read timeout duration used when reading the server response."
  parameters:
  - description: "Read timeout duration."
    name: "readTimeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JdkHttpClientBuilder readTimeout(Duration readTimeout)"
  desc: "Sets the read timeout duration used when reading the server response.\n\nThe read timeout begins once the first response read is triggered after the server response is received. This timeout triggers periodically but won't fire its operation if another read operation has completed between when the timeout is triggered and completes.\n\nIf `readTimeout` is null or <xref uid=\"com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_READ_TIMEOUT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#PROPERTY_AZURE_REQUEST_READ_TIMEOUT\"></xref> or a 60-second timeout will be used, if it is a <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref> less than or equal to zero then no timeout period will be applied to response read. When applying the timeout the greatest of one millisecond and the value of `readTimeout` will be used."
  returns:
    description: "The updated <xref uid=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JdkHttpClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder?alt=com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder&text=JdkHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.responseTimeout(java.time.Duration)"
  fullName: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.responseTimeout(Duration responseTimeout)"
  name: "responseTimeout(Duration responseTimeout)"
  nameWithType: "JdkHttpClientBuilder.responseTimeout(Duration responseTimeout)"
  summary: "Sets the response timeout duration used when waiting for a server to reply."
  parameters:
  - description: "Response timeout duration."
    name: "responseTimeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JdkHttpClientBuilder responseTimeout(Duration responseTimeout)"
  desc: "Sets the response timeout duration used when waiting for a server to reply.\n\nThe response timeout begins once the request write completes and finishes once the first response read is triggered when the server response is received.\n\nIf `responseTimeout` is null either <xref uid=\"com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_RESPONSE_TIMEOUT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#PROPERTY_AZURE_REQUEST_RESPONSE_TIMEOUT\"></xref> or a 60-second timeout will be used, if it is a <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref> less than or equal to zero then no timeout will be applied to the response. When applying the timeout the greatest of one millisecond and the value of `responseTimeout` will be used."
  returns:
    description: "The updated <xref uid=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JdkHttpClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder?alt=com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder&text=JdkHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.writeTimeout(java.time.Duration)"
  fullName: "com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder.writeTimeout(Duration writeTimeout)"
  name: "writeTimeout(Duration writeTimeout)"
  nameWithType: "JdkHttpClientBuilder.writeTimeout(Duration writeTimeout)"
  summary: "Sets the writing timeout for a request to be sent."
  parameters:
  - description: "Write operation timeout duration."
    name: "writeTimeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JdkHttpClientBuilder writeTimeout(Duration writeTimeout)"
  desc: "Sets the writing timeout for a request to be sent.\n\nThe writing timeout does not apply to the entire request but to the request being sent over the wire. For example a request body which emits `10` `8KB` buffers will trigger `10` write operations, the last write tracker will update when each operation completes and the outbound buffer will be periodically checked to determine if it is still draining.\n\nIf `writeTimeout` is null either <xref uid=\"com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_WRITE_TIMEOUT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#PROPERTY_AZURE_REQUEST_WRITE_TIMEOUT\"></xref> or a 60-second timeout will be used, if it is a <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref> less than or equal to zero then no write timeout will be applied. When applying the timeout the greatest of one millisecond and the value of `writeTimeout` will be used."
  returns:
    description: "The updated <xref uid=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JdkHttpClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder?alt=com.azure.core.http.jdk.httpclient.JdkHttpClientBuilder&text=JdkHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Builder to configure and build an instance of the azure-core <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> type using the JDK HttpClient APIs, first introduced as preview in JDK 9, but made generally available from JDK 11 onwards."
metadata: {}
package: "com.azure.core.http.jdk.httpclient"
artifact: com.azure:azure-core-http-jdk-httpclient:1.0.3
