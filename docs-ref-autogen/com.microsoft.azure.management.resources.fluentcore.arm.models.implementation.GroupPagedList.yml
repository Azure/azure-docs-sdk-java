### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList"
  id: "GroupPagedList"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation"
  children:
  - "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList.GroupPagedList(com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.ResourceGroup>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList.listNextGroup(java.lang.String)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList.nextPage(java.lang.String)"
  langs:
  - "java"
  name: "GroupPagedList<E>"
  nameWithType: "GroupPagedList<E>"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList<E>"
  type: "Class"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation"
  summary: "Defines a list of resources paginated across resource groups."
  syntax:
    content: "public abstract class GroupPagedList<E> extends PagedList<E>"
    typeParameters:
    - id: "E"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.PagedList"
  inheritedMembers:
  - "com.microsoft.azure.PagedList.<T>toArray(T[])"
  - "com.microsoft.azure.PagedList.add(E)"
  - "com.microsoft.azure.PagedList.add(int,E)"
  - "com.microsoft.azure.PagedList.addAll(int,java.util.Collection<? extends E>)"
  - "com.microsoft.azure.PagedList.addAll(java.util.Collection<? extends E>)"
  - "com.microsoft.azure.PagedList.clear()"
  - "com.microsoft.azure.PagedList.contains(java.lang.Object)"
  - "com.microsoft.azure.PagedList.containsAll(java.util.Collection<?>)"
  - "com.microsoft.azure.PagedList.currentPage()"
  - "com.microsoft.azure.PagedList.get(int)"
  - "com.microsoft.azure.PagedList.hasNextPage()"
  - "com.microsoft.azure.PagedList.indexOf(java.lang.Object)"
  - "com.microsoft.azure.PagedList.isEmpty()"
  - "com.microsoft.azure.PagedList.iterator()"
  - "com.microsoft.azure.PagedList.lastIndexOf(java.lang.Object)"
  - "com.microsoft.azure.PagedList.listIterator()"
  - "com.microsoft.azure.PagedList.listIterator(int)"
  - "com.microsoft.azure.PagedList.loadAll()"
  - "com.microsoft.azure.PagedList.loadNextPage()"
  - "com.microsoft.azure.PagedList.nextPage(java.lang.String)"
  - "com.microsoft.azure.PagedList.remove(int)"
  - "com.microsoft.azure.PagedList.remove(java.lang.Object)"
  - "com.microsoft.azure.PagedList.removeAll(java.util.Collection<?>)"
  - "com.microsoft.azure.PagedList.retainAll(java.util.Collection<?>)"
  - "com.microsoft.azure.PagedList.set(int,E)"
  - "com.microsoft.azure.PagedList.setCurrentPage(com.microsoft.azure.Page<E>)"
  - "com.microsoft.azure.PagedList.size()"
  - "com.microsoft.azure.PagedList.subList(int,int)"
  - "com.microsoft.azure.PagedList.toArray()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList.GroupPagedList(com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.ResourceGroup>)"
  id: "GroupPagedList(com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.ResourceGroup>)"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList"
  langs:
  - "java"
  name: "GroupPagedList(PagedList<ResourceGroup> resourceGroupList)"
  nameWithType: "GroupPagedList<E>.GroupPagedList(PagedList<ResourceGroup> resourceGroupList)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList<E>.GroupPagedList(PagedList<ResourceGroup> resourceGroupList)"
  overload: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList.GroupPagedList*"
  type: "Constructor"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation"
  summary: "Creates an instance from a list of resource groups."
  syntax:
    content: "public GroupPagedList(PagedList<ResourceGroup> resourceGroupList)"
    parameters:
    - id: "resourceGroupList"
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.ResourceGroup>"
      description: "the list of resource groups"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList.listNextGroup(java.lang.String)"
  id: "listNextGroup(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList"
  langs:
  - "java"
  name: "listNextGroup(String resourceGroupName)"
  nameWithType: "GroupPagedList<E>.listNextGroup(String resourceGroupName)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList<E>.listNextGroup(String resourceGroupName)"
  overload: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList.listNextGroup*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation"
  summary: "Override this method to implement how to list resources in a resource group."
  syntax:
    content: "public abstract List<E> listNextGroup(String resourceGroupName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "the name of the resource group"
    return:
      type: "java.util.List<E>"
      description: "the list of resources in this group."
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList.nextPage(java.lang.String)"
  id: "nextPage(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList"
  langs:
  - "java"
  name: "nextPage(String s)"
  nameWithType: "GroupPagedList<E>.nextPage(String s)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList<E>.nextPage(String s)"
  overload: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList.nextPage*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation"
  syntax:
    content: "public Page<E> nextPage(String s)"
    parameters:
    - id: "s"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.Page<E>"
references:
- uid: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.ResourceGroup>"
  spec.java:
  - uid: "com.microsoft.azure.PagedList"
    name: "PagedList"
    fullName: "com.microsoft.azure.PagedList"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.ResourceGroup"
    name: "ResourceGroup"
    fullName: "com.microsoft.azure.management.resources.ResourceGroup"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList.GroupPagedList*"
  name: "GroupPagedList"
  nameWithType: "GroupPagedList<E>.GroupPagedList"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList<E>.GroupPagedList"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.Page<E>"
  spec.java:
  - uid: "com.microsoft.azure.Page"
    name: "Page"
    fullName: "com.microsoft.azure.Page"
  - name: "<"
    fullName: "<"
  - uid: "E"
    name: "E"
    fullName: "E"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList.nextPage*"
  name: "nextPage"
  nameWithType: "GroupPagedList<E>.nextPage"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList<E>.nextPage"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation"
- uid: "java.util.List<E>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "E"
    name: "E"
    fullName: "E"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList.listNextGroup*"
  name: "listNextGroup"
  nameWithType: "GroupPagedList<E>.listNextGroup"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupPagedList<E>.listNextGroup"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.models.implementation"
- uid: "E"
  name: "E"
  nameWithType: "E"
  fullName: "E"
- uid: "com.microsoft.azure.PagedList<E>"
  name: "PagedList<E>"
  nameWithType: "PagedList<E>"
  fullName: "com.microsoft.azure.PagedList<E>"
- uid: "com.microsoft.azure.PagedList.subList(int,int)"
  name: "PagedList.subList(int,int)"
  nameWithType: "PagedList.subList(int,int)"
  fullName: "com.microsoft.azure.PagedList.subList(int,int)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.microsoft.azure.PagedList.clear()"
  name: "PagedList.clear()"
  nameWithType: "PagedList.clear()"
  fullName: "com.microsoft.azure.PagedList.clear()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.microsoft.azure.PagedList.loadNextPage()"
  name: "PagedList.loadNextPage()"
  nameWithType: "PagedList.loadNextPage()"
  fullName: "com.microsoft.azure.PagedList.loadNextPage()"
- uid: "com.microsoft.azure.PagedList.contains(java.lang.Object)"
  name: "PagedList.contains(Object)"
  nameWithType: "PagedList.contains(Object)"
  fullName: "com.microsoft.azure.PagedList.contains(java.lang.Object)"
- uid: "com.microsoft.azure.PagedList.removeAll(java.util.Collection<?>)"
  name: "PagedList.removeAll(Collection<?>)"
  nameWithType: "PagedList.removeAll(Collection<?>)"
  fullName: "com.microsoft.azure.PagedList.removeAll(java.util.Collection<?>)"
- uid: "com.microsoft.azure.PagedList.listIterator(int)"
  name: "PagedList.listIterator(int)"
  nameWithType: "PagedList.listIterator(int)"
  fullName: "com.microsoft.azure.PagedList.listIterator(int)"
- uid: "com.microsoft.azure.PagedList.hasNextPage()"
  name: "PagedList.hasNextPage()"
  nameWithType: "PagedList.hasNextPage()"
  fullName: "com.microsoft.azure.PagedList.hasNextPage()"
- uid: "com.microsoft.azure.PagedList.add(E)"
  name: "PagedList.add(E)"
  nameWithType: "PagedList.add(E)"
  fullName: "com.microsoft.azure.PagedList.add(E)"
- uid: "com.microsoft.azure.PagedList.addAll(java.util.Collection<? extends E>)"
  name: "PagedList.addAll(Collection<? extends E>)"
  nameWithType: "PagedList.addAll(Collection<? extends E>)"
  fullName: "com.microsoft.azure.PagedList.addAll(java.util.Collection<? extends E>)"
- uid: "com.microsoft.azure.PagedList.lastIndexOf(java.lang.Object)"
  name: "PagedList.lastIndexOf(Object)"
  nameWithType: "PagedList.lastIndexOf(Object)"
  fullName: "com.microsoft.azure.PagedList.lastIndexOf(java.lang.Object)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.microsoft.azure.PagedList.loadAll()"
  name: "PagedList.loadAll()"
  nameWithType: "PagedList.loadAll()"
  fullName: "com.microsoft.azure.PagedList.loadAll()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.PagedList.set(int,E)"
  name: "PagedList.set(int,E)"
  nameWithType: "PagedList.set(int,E)"
  fullName: "com.microsoft.azure.PagedList.set(int,E)"
- uid: "com.microsoft.azure.PagedList.currentPage()"
  name: "PagedList.currentPage()"
  nameWithType: "PagedList.currentPage()"
  fullName: "com.microsoft.azure.PagedList.currentPage()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.microsoft.azure.PagedList.size()"
  name: "PagedList.size()"
  nameWithType: "PagedList.size()"
  fullName: "com.microsoft.azure.PagedList.size()"
- uid: "com.microsoft.azure.PagedList.indexOf(java.lang.Object)"
  name: "PagedList.indexOf(Object)"
  nameWithType: "PagedList.indexOf(Object)"
  fullName: "com.microsoft.azure.PagedList.indexOf(java.lang.Object)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.microsoft.azure.PagedList.remove(java.lang.Object)"
  name: "PagedList.remove(Object)"
  nameWithType: "PagedList.remove(Object)"
  fullName: "com.microsoft.azure.PagedList.remove(java.lang.Object)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.PagedList.toArray()"
  name: "PagedList.toArray()"
  nameWithType: "PagedList.toArray()"
  fullName: "com.microsoft.azure.PagedList.toArray()"
- uid: "com.microsoft.azure.PagedList.retainAll(java.util.Collection<?>)"
  name: "PagedList.retainAll(Collection<?>)"
  nameWithType: "PagedList.retainAll(Collection<?>)"
  fullName: "com.microsoft.azure.PagedList.retainAll(java.util.Collection<?>)"
- uid: "com.microsoft.azure.PagedList.iterator()"
  name: "PagedList.iterator()"
  nameWithType: "PagedList.iterator()"
  fullName: "com.microsoft.azure.PagedList.iterator()"
- uid: "com.microsoft.azure.PagedList.setCurrentPage(com.microsoft.azure.Page<E>)"
  name: "PagedList.setCurrentPage(Page<E>)"
  nameWithType: "PagedList.setCurrentPage(Page<E>)"
  fullName: "com.microsoft.azure.PagedList.setCurrentPage(com.microsoft.azure.Page<E>)"
- uid: "com.microsoft.azure.PagedList.get(int)"
  name: "PagedList.get(int)"
  nameWithType: "PagedList.get(int)"
  fullName: "com.microsoft.azure.PagedList.get(int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.PagedList.remove(int)"
  name: "PagedList.remove(int)"
  nameWithType: "PagedList.remove(int)"
  fullName: "com.microsoft.azure.PagedList.remove(int)"
- uid: "com.microsoft.azure.PagedList.<T>toArray(T[])"
  name: "PagedList.<T>toArray(T[])"
  nameWithType: "PagedList.<T>toArray(T[])"
  fullName: "com.microsoft.azure.PagedList.<T>toArray(T[])"
- uid: "com.microsoft.azure.PagedList.nextPage(java.lang.String)"
  name: "PagedList.nextPage(String)"
  nameWithType: "PagedList.nextPage(String)"
  fullName: "com.microsoft.azure.PagedList.nextPage(java.lang.String)"
- uid: "com.microsoft.azure.PagedList.containsAll(java.util.Collection<?>)"
  name: "PagedList.containsAll(Collection<?>)"
  nameWithType: "PagedList.containsAll(Collection<?>)"
  fullName: "com.microsoft.azure.PagedList.containsAll(java.util.Collection<?>)"
- uid: "com.microsoft.azure.PagedList.addAll(int,java.util.Collection<? extends E>)"
  name: "PagedList.addAll(int,Collection<? extends E>)"
  nameWithType: "PagedList.addAll(int,Collection<? extends E>)"
  fullName: "com.microsoft.azure.PagedList.addAll(int,java.util.Collection<? extends E>)"
- uid: "com.microsoft.azure.PagedList.listIterator()"
  name: "PagedList.listIterator()"
  nameWithType: "PagedList.listIterator()"
  fullName: "com.microsoft.azure.PagedList.listIterator()"
- uid: "com.microsoft.azure.PagedList.isEmpty()"
  name: "PagedList.isEmpty()"
  nameWithType: "PagedList.isEmpty()"
  fullName: "com.microsoft.azure.PagedList.isEmpty()"
- uid: "com.microsoft.azure.PagedList.add(int,E)"
  name: "PagedList.add(int,E)"
  nameWithType: "PagedList.add(int,E)"
  fullName: "com.microsoft.azure.PagedList.add(int,E)"
- uid: "com.microsoft.azure.PagedList"
  name: "PagedList"
  nameWithType: "PagedList"
  fullName: "com.microsoft.azure.PagedList"
- uid: "com.microsoft.azure.management.resources.ResourceGroup"
  name: "ResourceGroup"
  nameWithType: "ResourceGroup"
  fullName: "com.microsoft.azure.management.resources.ResourceGroup"
- uid: "com.microsoft.azure.Page"
  name: "Page"
  nameWithType: "Page"
  fullName: "com.microsoft.azure.Page"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.microsoft.azure.PagedList.removeAll(java.util.Collection"
  name: "PagedList.removeAll(Collection"
  nameWithType: "PagedList.removeAll(Collection"
  fullName: "com.microsoft.azure.PagedList.removeAll(java.util.Collection"
- uid: "?>)"
  name: "?>)"
  nameWithType: "?>)"
  fullName: "?>)"
- uid: "? extends E>)"
  name: "? extends E>)"
  nameWithType: "? extends E>)"
  fullName: "? extends E>)"
- uid: "com.microsoft.azure.PagedList.addAll(java.util.Collection"
  name: "PagedList.addAll(Collection"
  nameWithType: "PagedList.addAll(Collection"
  fullName: "com.microsoft.azure.PagedList.addAll(java.util.Collection"
- uid: "com.microsoft.azure.PagedList.retainAll(java.util.Collection"
  name: "PagedList.retainAll(Collection"
  nameWithType: "PagedList.retainAll(Collection"
  fullName: "com.microsoft.azure.PagedList.retainAll(java.util.Collection"
- uid: "E>)"
  name: "E>)"
  nameWithType: "E>)"
  fullName: "E>)"
- uid: "com.microsoft.azure.PagedList.setCurrentPage(com.microsoft.azure.Page"
  name: "PagedList.setCurrentPage(Page"
  nameWithType: "PagedList.setCurrentPage(Page"
  fullName: "com.microsoft.azure.PagedList.setCurrentPage(com.microsoft.azure.Page"
- uid: "com.microsoft.azure.PagedList."
  name: "PagedList."
  nameWithType: "PagedList."
  fullName: "com.microsoft.azure.PagedList."
- uid: "T>toArray(T[])"
  name: "T>toArray(T[])"
  nameWithType: "T>toArray(T[])"
  fullName: "T>toArray(T[])"
- uid: "com.microsoft.azure.PagedList.containsAll(java.util.Collection"
  name: "PagedList.containsAll(Collection"
  nameWithType: "PagedList.containsAll(Collection"
  fullName: "com.microsoft.azure.PagedList.containsAll(java.util.Collection"
- uid: "com.microsoft.azure.PagedList.addAll(int,java.util.Collection"
  name: "PagedList.addAll(int,Collection"
  nameWithType: "PagedList.addAll(int,Collection"
  fullName: "com.microsoft.azure.PagedList.addAll(int,java.util.Collection"
