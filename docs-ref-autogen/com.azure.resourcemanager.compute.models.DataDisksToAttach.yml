### YamlMime:JavaType
uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach"
fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach"
name: "DataDisksToAttach"
nameWithType: "DataDisksToAttach"
summary: "Describes the data disk to be attached."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DataDisksToAttach**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.compute.models.DataDisksToAttach?alt=com.azure.resourcemanager.compute.models.DataDisksToAttach&text=DataDisksToAttach\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.DataDisksToAttach()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.DataDisksToAttach()"
  name: "DataDisksToAttach()"
  nameWithType: "DataDisksToAttach.DataDisksToAttach()"
  summary: "Creates an instance of Data<wbr>Disks<wbr>ToAttach class."
  syntax: "public DataDisksToAttach()"
  desc: "Creates an instance of DataDisksToAttach class."
methods:
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.caching()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.caching()"
  name: "caching()"
  nameWithType: "DataDisksToAttach.caching()"
  summary: "Get the caching property: Specifies the caching requirements."
  syntax: "public CachingTypes caching()"
  desc: "Get the caching property: Specifies the caching requirements. Possible values are: \\*\\*None,\\*\\* \\*\\*ReadOnly,\\*\\* \\*\\*ReadWrite.\\*\\* The defaulting behavior is: \\*\\*None for Standard storage. ReadOnly for Premium storage.\\*\\*."
  returns:
    description: "the caching value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CachingTypes?alt=com.azure.resourcemanager.compute.models.CachingTypes&text=CachingTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.deleteOption()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.deleteOption()"
  name: "deleteOption()"
  nameWithType: "DataDisksToAttach.deleteOption()"
  summary: "Get the delete<wbr>Option property: Specifies whether data disk should be deleted or detached upon VM deletion."
  syntax: "public DiskDeleteOptionTypes deleteOption()"
  desc: "Get the deleteOption property: Specifies whether data disk should be deleted or detached upon VM deletion. Possible values are: \\*\\*Delete.\\*\\* If this value is used, the data disk is deleted when VM is deleted. \\*\\*Detach.\\*\\* If this value is used, the data disk is retained after VM is deleted. The default value is set to \\*\\*Detach\\*\\*."
  returns:
    description: "the deleteOption value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskDeleteOptionTypes?alt=com.azure.resourcemanager.compute.models.DiskDeleteOptionTypes&text=DiskDeleteOptionTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.diskEncryptionSet()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.diskEncryptionSet()"
  name: "diskEncryptionSet()"
  nameWithType: "DataDisksToAttach.diskEncryptionSet()"
  summary: "Get the disk<wbr>Encryption<wbr>Set property: Specifies the customer managed disk encryption set resource id for the managed disk."
  syntax: "public DiskEncryptionSetParameters diskEncryptionSet()"
  desc: "Get the diskEncryptionSet property: Specifies the customer managed disk encryption set resource id for the managed disk."
  returns:
    description: "the diskEncryptionSet value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskEncryptionSetParameters?alt=com.azure.resourcemanager.compute.models.DiskEncryptionSetParameters&text=DiskEncryptionSetParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.diskId()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.diskId()"
  name: "diskId()"
  nameWithType: "DataDisksToAttach.diskId()"
  summary: "Get the disk<wbr>Id property: ID of the managed data disk."
  syntax: "public String diskId()"
  desc: "Get the diskId property: ID of the managed data disk."
  returns:
    description: "the diskId value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "DataDisksToAttach.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Data<wbr>Disks<wbr>ToAttach from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DataDisksToAttach fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of DataDisksToAttach from the JsonReader."
  returns:
    description: "An instance of DataDisksToAttach if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisksToAttach?alt=com.azure.resourcemanager.compute.models.DataDisksToAttach&text=DataDisksToAttach\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.lun()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.lun()"
  name: "lun()"
  nameWithType: "DataDisksToAttach.lun()"
  summary: "Get the lun property: The logical unit number of the data disk."
  syntax: "public Integer lun()"
  desc: "Get the lun property: The logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. If not specified, lun would be auto assigned."
  returns:
    description: "the lun value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "DataDisksToAttach.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.validate()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.validate()"
  name: "validate()"
  nameWithType: "DataDisksToAttach.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.withCaching(com.azure.resourcemanager.compute.models.CachingTypes)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.withCaching(CachingTypes caching)"
  name: "withCaching(CachingTypes caching)"
  nameWithType: "DataDisksToAttach.withCaching(CachingTypes caching)"
  summary: "Set the caching property: Specifies the caching requirements."
  parameters:
  - description: "the caching value to set."
    name: "caching"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CachingTypes?alt=com.azure.resourcemanager.compute.models.CachingTypes&text=CachingTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisksToAttach withCaching(CachingTypes caching)"
  desc: "Set the caching property: Specifies the caching requirements. Possible values are: \\*\\*None,\\*\\* \\*\\*ReadOnly,\\*\\* \\*\\*ReadWrite.\\*\\* The defaulting behavior is: \\*\\*None for Standard storage. ReadOnly for Premium storage.\\*\\*."
  returns:
    description: "the DataDisksToAttach object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisksToAttach?alt=com.azure.resourcemanager.compute.models.DataDisksToAttach&text=DataDisksToAttach\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.withDeleteOption(com.azure.resourcemanager.compute.models.DiskDeleteOptionTypes)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.withDeleteOption(DiskDeleteOptionTypes deleteOption)"
  name: "withDeleteOption(DiskDeleteOptionTypes deleteOption)"
  nameWithType: "DataDisksToAttach.withDeleteOption(DiskDeleteOptionTypes deleteOption)"
  summary: "Set the delete<wbr>Option property: Specifies whether data disk should be deleted or detached upon VM deletion."
  parameters:
  - description: "the deleteOption value to set."
    name: "deleteOption"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskDeleteOptionTypes?alt=com.azure.resourcemanager.compute.models.DiskDeleteOptionTypes&text=DiskDeleteOptionTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisksToAttach withDeleteOption(DiskDeleteOptionTypes deleteOption)"
  desc: "Set the deleteOption property: Specifies whether data disk should be deleted or detached upon VM deletion. Possible values are: \\*\\*Delete.\\*\\* If this value is used, the data disk is deleted when VM is deleted. \\*\\*Detach.\\*\\* If this value is used, the data disk is retained after VM is deleted. The default value is set to \\*\\*Detach\\*\\*."
  returns:
    description: "the DataDisksToAttach object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisksToAttach?alt=com.azure.resourcemanager.compute.models.DataDisksToAttach&text=DataDisksToAttach\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.withDiskEncryptionSet(com.azure.resourcemanager.compute.models.DiskEncryptionSetParameters)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.withDiskEncryptionSet(DiskEncryptionSetParameters diskEncryptionSet)"
  name: "withDiskEncryptionSet(DiskEncryptionSetParameters diskEncryptionSet)"
  nameWithType: "DataDisksToAttach.withDiskEncryptionSet(DiskEncryptionSetParameters diskEncryptionSet)"
  summary: "Set the disk<wbr>Encryption<wbr>Set property: Specifies the customer managed disk encryption set resource id for the managed disk."
  parameters:
  - description: "the diskEncryptionSet value to set."
    name: "diskEncryptionSet"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskEncryptionSetParameters?alt=com.azure.resourcemanager.compute.models.DiskEncryptionSetParameters&text=DiskEncryptionSetParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisksToAttach withDiskEncryptionSet(DiskEncryptionSetParameters diskEncryptionSet)"
  desc: "Set the diskEncryptionSet property: Specifies the customer managed disk encryption set resource id for the managed disk."
  returns:
    description: "the DataDisksToAttach object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisksToAttach?alt=com.azure.resourcemanager.compute.models.DataDisksToAttach&text=DataDisksToAttach\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.withDiskId(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.withDiskId(String diskId)"
  name: "withDiskId(String diskId)"
  nameWithType: "DataDisksToAttach.withDiskId(String diskId)"
  summary: "Set the disk<wbr>Id property: ID of the managed data disk."
  parameters:
  - description: "the diskId value to set."
    name: "diskId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DataDisksToAttach withDiskId(String diskId)"
  desc: "Set the diskId property: ID of the managed data disk."
  returns:
    description: "the DataDisksToAttach object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisksToAttach?alt=com.azure.resourcemanager.compute.models.DataDisksToAttach&text=DataDisksToAttach\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.withLun(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.withLun(Integer lun)"
  name: "withLun(Integer lun)"
  nameWithType: "DataDisksToAttach.withLun(Integer lun)"
  summary: "Set the lun property: The logical unit number of the data disk."
  parameters:
  - description: "the lun value to set."
    name: "lun"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public DataDisksToAttach withLun(Integer lun)"
  desc: "Set the lun property: The logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. If not specified, lun would be auto assigned."
  returns:
    description: "the DataDisksToAttach object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisksToAttach?alt=com.azure.resourcemanager.compute.models.DataDisksToAttach&text=DataDisksToAttach\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.withWriteAcceleratorEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.withWriteAcceleratorEnabled(Boolean writeAcceleratorEnabled)"
  name: "withWriteAcceleratorEnabled(Boolean writeAcceleratorEnabled)"
  nameWithType: "DataDisksToAttach.withWriteAcceleratorEnabled(Boolean writeAcceleratorEnabled)"
  summary: "Set the write<wbr>Accelerator<wbr>Enabled property: Specifies whether write<wbr>Accelerator should be enabled or disabled on the disk."
  parameters:
  - description: "the writeAcceleratorEnabled value to set."
    name: "writeAcceleratorEnabled"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public DataDisksToAttach withWriteAcceleratorEnabled(Boolean writeAcceleratorEnabled)"
  desc: "Set the writeAcceleratorEnabled property: Specifies whether writeAccelerator should be enabled or disabled on the disk."
  returns:
    description: "the DataDisksToAttach object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisksToAttach?alt=com.azure.resourcemanager.compute.models.DataDisksToAttach&text=DataDisksToAttach\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisksToAttach.writeAcceleratorEnabled()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisksToAttach.writeAcceleratorEnabled()"
  name: "writeAcceleratorEnabled()"
  nameWithType: "DataDisksToAttach.writeAcceleratorEnabled()"
  summary: "Get the write<wbr>Accelerator<wbr>Enabled property: Specifies whether write<wbr>Accelerator should be enabled or disabled on the disk."
  syntax: "public Boolean writeAcceleratorEnabled()"
  desc: "Get the writeAcceleratorEnabled property: Specifies whether writeAccelerator should be enabled or disabled on the disk."
  returns:
    description: "the writeAcceleratorEnabled value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
type: "class"
desc: "Describes the data disk to be attached."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.compute.models.DataDisksToAttach?alt=com.azure.resourcemanager.compute.models.DataDisksToAttach&text=DataDisksToAttach\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.49.0
