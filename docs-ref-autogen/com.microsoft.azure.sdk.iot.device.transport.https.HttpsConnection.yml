### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  id: HttpsConnection
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  children:
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod,com.microsoft.azure.sdk.iot.device.ProxySettings)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout(int)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout(int)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader(java.lang.String,java.lang.String)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod(com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput(byte[])
  langs:
  - java
  name: HttpsConnection
  nameWithType: HttpsConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  type: Class
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    A wrapper for the Java SE class <xref uid="" data-throw-if-not-resolved="false">HttpsURLConnection</xref>. Used to avoid compatibility issues when testing with the mocking framework JMockit, as well as to avoid some undocumented side effects when using HttpsURLConnection.


    The underlying <xref uid="" data-throw-if-not-resolved="false">HttpsURLConnection</xref> is transparently managed by Java. To reuse connections, for each time <xref uid="com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()" data-throw-if-not-resolved="false">#connect()</xref> is called, the input streams (input stream or error stream, if input stream is not accessible) must be completely read. Otherwise, the data remains in the stream and the connection will not be reusable.
  syntax:
    content: public class HttpsConnection
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection()
  id: HttpsConnection()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: HttpsConnection()
  nameWithType: HttpsConnection.HttpsConnection()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device.transport.https
  syntax:
    content: protected HttpsConnection()
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod)
  id: HttpsConnection(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: HttpsConnection(URL url, HttpsMethod method)
  nameWithType: HttpsConnection.HttpsConnection(URL url, HttpsMethod method)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL url, HttpsMethod method)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Constructor. Opens a connection to the given URL. Can be HTTPS or HTTP
  syntax:
    content: public HttpsConnection(URL url, HttpsMethod method)
    parameters:
    - id: url
      type: java.net.URL
      description: the URL for the HTTP/HTTPS connection.
    - id: method
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
      description: the HTTP method (i.e. GET).
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod,com.microsoft.azure.sdk.iot.device.ProxySettings)
  id: HttpsConnection(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod,com.microsoft.azure.sdk.iot.device.ProxySettings)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: HttpsConnection(URL url, HttpsMethod method, ProxySettings proxySettings)
  nameWithType: HttpsConnection.HttpsConnection(URL url, HttpsMethod method, ProxySettings proxySettings)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL url, HttpsMethod method, ProxySettings proxySettings)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Constructor. Opens a connection to the given URL. Can be HTTPS or HTTP
  syntax:
    content: public HttpsConnection(URL url, HttpsMethod method, ProxySettings proxySettings)
    parameters:
    - id: url
      type: java.net.URL
      description: the URL for the HTTP/HTTPS connection.
    - id: method
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
      description: the HTTP method (i.e. GET).
    - id: proxySettings
      type: com.microsoft.azure.sdk.iot.device.ProxySettings
      description: The proxy settings to use when connecting. If null, then no proxy will be used
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
  id: connect()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: connect()
  nameWithType: HttpsConnection.connect()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Sends the request to the URL given in the constructor.
  syntax:
    content: public void connect()
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: >-
      if the connection could not be established, or the
       server responded with a bad status code.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders()
  id: getResponseHeaders()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: getResponseHeaders()
  nameWithType: HttpsConnection.getResponseHeaders()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Returns the response headers as a <xref uid="java.util.Map" data-throw-if-not-resolved="false">Map</xref>, where the key is the header field name and the values are the values associated with the header field name.
  syntax:
    content: public Map<String,List<String>> getResponseHeaders()
    return:
      type: java.util.Map<java.lang.String,java.util.List<java.lang.String>>
      description: the response headers.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus()
  id: getResponseStatus()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: getResponseStatus()
  nameWithType: HttpsConnection.getResponseStatus()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Returns the response status code.
  syntax:
    content: public int getResponseStatus()
    return:
      type: int
      description: the response status code.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: if no response was received.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError()
  id: readError()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: readError()
  nameWithType: HttpsConnection.readError()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Reads from the error stream and returns the error reason.
  syntax:
    content: public byte[] readError()
    return:
      type: byte[]
      description: the error reason.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: >-
      if the input stream could not be accessed, for
       example if the server could not be reached.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput()
  id: readInput()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: readInput()
  nameWithType: HttpsConnection.readInput()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Reads from the input stream (response stream) and returns the response.
  syntax:
    content: public byte[] readInput()
    return:
      type: byte[]
      description: the response body.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: >-
      if the input stream could not be accessed, for
       example if the server could not be reached.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout(int)
  id: setConnectTimeout(int)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: setConnectTimeout(int timeout)
  nameWithType: HttpsConnection.setConnectTimeout(int timeout)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout(int timeout)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Sets the connect timeout in milliseconds.
  syntax:
    content: public void setConnectTimeout(int timeout)
    parameters:
    - id: timeout
      type: int
      description: the connect timeout in milliseconds.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout(int)
  id: setReadTimeout(int)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: setReadTimeout(int timeout)
  nameWithType: HttpsConnection.setReadTimeout(int timeout)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout(int timeout)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Sets the read timeout in milliseconds. The read timeout is the number of milliseconds after the server receives a request and before the server sends data back.
  syntax:
    content: public void setReadTimeout(int timeout)
    parameters:
    - id: timeout
      type: int
      description: the read timeout.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader(java.lang.String,java.lang.String)
  id: setRequestHeader(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: setRequestHeader(String field, String value)
  nameWithType: HttpsConnection.setRequestHeader(String field, String value)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader(String field, String value)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Sets the request header field to the given value.
  syntax:
    content: public void setRequestHeader(String field, String value)
    parameters:
    - id: field
      type: java.lang.String
      description: the header field name.
    - id: value
      type: java.lang.String
      description: the header field value.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod(com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod)
  id: setRequestMethod(com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: setRequestMethod(HttpsMethod method)
  nameWithType: HttpsConnection.setRequestMethod(HttpsMethod method)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod(HttpsMethod method)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Sets the request method (i.e. POST).
  syntax:
    content: public void setRequestMethod(HttpsMethod method)
    parameters:
    - id: method
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
      description: the request method.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: >-
      if the request currently has a non-empty
       body and the new method is not a POST or a PUT. This is because Java's
       <xref uid="HttpsURLConnection" data-throw-if-not-resolved="false">HttpsURLConnection</xref> silently converts the HTTPS method to POST or PUT if a
       body is written to the request.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput(byte[])
  id: writeOutput(byte[])
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  langs:
  - java
  name: writeOutput(byte[] body)
  nameWithType: HttpsConnection.writeOutput(byte[] body)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput(byte[] body)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Saves the body to be sent with the request.
  syntax:
    content: public void writeOutput(byte[] body)
    parameters:
    - id: body
      type: byte[]
      description: the request body.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: >-
      if the request does not currently use
       method POST or PUT and the body is non-empty. This is because Java's
       <xref uid="HttpsURLConnection" data-throw-if-not-resolved="false">HttpsURLConnection</xref> silently converts the HTTPS method to POST or PUT if a
       body is written to the request.
references:
- uid: java.net.URL
  spec.java:
  - uid: java.net.URL
    name: URL
    fullName: java.net.URL
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
  name: HttpsMethod
  nameWithType: HttpsMethod
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection*
  name: HttpsConnection
  nameWithType: HttpsConnection.HttpsConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.ProxySettings
  name: ProxySettings
  nameWithType: ProxySettings
  fullName: com.microsoft.azure.sdk.iot.device.ProxySettings
- uid: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
  name: TransportException
  nameWithType: TransportException
  fullName: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect*
  name: connect
  nameWithType: HttpsConnection.connect
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod*
  name: setRequestMethod
  nameWithType: HttpsConnection.setRequestMethod
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader*
  name: setRequestHeader
  nameWithType: HttpsConnection.setRequestHeader
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout*
  name: setReadTimeout
  nameWithType: HttpsConnection.setReadTimeout
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout*
  name: setConnectTimeout
  nameWithType: HttpsConnection.setConnectTimeout
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput*
  name: writeOutput
  nameWithType: HttpsConnection.writeOutput
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput*
  name: readInput
  nameWithType: HttpsConnection.readInput
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError*
  name: readError
  nameWithType: HttpsConnection.readError
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus*
  name: getResponseStatus
  nameWithType: HttpsConnection.getResponseStatus
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: java.util.Map<java.lang.String,java.util.List<java.lang.String>>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders*
  name: getResponseHeaders
  nameWithType: HttpsConnection.getResponseHeaders
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.util.List
  name: String,List
  nameWithType: String,List
  fullName: java.lang.String,java.util.List
