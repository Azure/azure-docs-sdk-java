### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  id: HttpsConnection
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  children:
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL,HttpsMethod)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL,HttpsMethod,final ProxySettings)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL,HttpsMethod,final ProxySettings,boolean)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout(int)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout(int)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader(String,String)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod(HttpsMethod)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput(byte [])
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: HttpsConnection
  nameWithType: HttpsConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 33
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>A wrapper for the Java SE class <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpsURLConnection\"></xref>. Used to avoid compatibility issues when testing with the mocking framework JMockit, as well as to avoid some undocumented side effects when using HttpsURLConnection. </p>\r\n<p>The underlying <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpsURLConnection\"></xref> is transparently managed by Java. To reuse connections, for each time <xref uid=\"com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"connect()\"></xref> is called, the input streams (input stream or error stream, if input stream is not accessible) must be completely read. Otherwise, the data remains in the stream and the connection will not be reusable. </p>"
  syntax:
    content: public class HttpsConnection
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
  id: connect()
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: connect()
  nameWithType: HttpsConnection.connect()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 128
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Sends the request to the URL given in the constructor.</p>\r\n<p></p>"
  syntax: &o1
    content: public void connect()
  exceptions:
  - type: 848a9648
    description: <p>if the connection could not be established, or the server responded with a bad status code. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders()
  id: getResponseHeaders()
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: getResponseHeaders()
  nameWithType: HttpsConnection.getResponseHeaders()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 348
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Returns the response headers as a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>, where the key is the header field name and the values are the values associated with the header field name.</p>\r\n<p></p>"
  syntax:
    content: public Map<String, List<String>> getResponseHeaders()
    return:
      type: b2319095
      description: <p>the response headers. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus()
  id: getResponseStatus()
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: getResponseStatus()
  nameWithType: HttpsConnection.getResponseStatus()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 326
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Returns the response status code.</p>\r\n<p></p>"
  syntax:
    content: public int getResponseStatus()
    return:
      type: f75371fa
      description: <p>the response status code.</p>
  exceptions:
  - type: 848a9648
    description: <p>if no response was received. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection()
  id: HttpsConnection()
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: HttpsConnection()
  nameWithType: HttpsConnection.HttpsConnection()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 418
  package: com.microsoft.azure.sdk.iot.device.transport.https
  syntax:
    content: protected HttpsConnection()
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL,HttpsMethod)
  id: HttpsConnection(URL,HttpsMethod)
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: HttpsConnection(URL url, HttpsMethod method)
  nameWithType: HttpsConnection.HttpsConnection(URL url, HttpsMethod method)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL url, HttpsMethod method)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 54
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Constructor. Opens a connection to the given URL. Can be HTTPS or HTTP</p>\r\n<p></p>"
  syntax:
    content: public HttpsConnection(URL url, HttpsMethod method)
    parameters:
    - id: url
      type: a891b3e6
      description: <p>the URL for the HTTP/HTTPS connection. </p>
    - id: method
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
      description: <p>the HTTP method (i.e. GET). </p>
  exceptions:
  - type: 848a9648
    description: <p>if the connection could not be opened. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL,HttpsMethod,final ProxySettings)
  id: HttpsConnection(URL,HttpsMethod,final ProxySettings)
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: HttpsConnection(URL url, HttpsMethod method, final ProxySettings proxySettings)
  nameWithType: HttpsConnection.HttpsConnection(URL url, HttpsMethod method, final ProxySettings proxySettings)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL url, HttpsMethod method, final ProxySettings proxySettings)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 68
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Constructor. Opens a connection to the given URL. Can be HTTPS or HTTP</p>\r\n<p></p>"
  syntax:
    content: public HttpsConnection(URL url, HttpsMethod method, final ProxySettings proxySettings)
    parameters:
    - id: url
      type: a891b3e6
      description: <p>the URL for the HTTP/HTTPS connection. </p>
    - id: method
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
      description: <p>the HTTP method (i.e. GET). </p>
    - id: proxySettings
      type: 93de0ef9com.microsoft.azure.sdk.iot.device.ProxySettings
      description: <p>The proxy settings to use when connecting. If null, then no proxy will be used</p>
  exceptions:
  - type: 848a9648
    description: <p>if the connection could not be opened. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL,HttpsMethod,final ProxySettings,boolean)
  id: HttpsConnection(URL,HttpsMethod,final ProxySettings,boolean)
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: HttpsConnection(URL url, HttpsMethod method, final ProxySettings proxySettings, boolean isHttps)
  nameWithType: HttpsConnection.HttpsConnection(URL url, HttpsMethod method, final ProxySettings proxySettings, boolean isHttps)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL url, HttpsMethod method, final ProxySettings proxySettings, boolean isHttps)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 81
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Constructor. Opens a connection to the given URL. Can be HTTPS or HTTP</p>\r\n<p></p>"
  syntax:
    content: public HttpsConnection(URL url, HttpsMethod method, final ProxySettings proxySettings, boolean isHttps)
    parameters:
    - id: url
      type: a891b3e6
      description: <p>the URL for the HTTP/HTTPS connection. </p>
    - id: method
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
      description: <p>the HTTP method (i.e. GET). </p>
    - id: proxySettings
      type: 93de0ef9com.microsoft.azure.sdk.iot.device.ProxySettings
      description: <p>The proxy settings to use when connecting. If null, then no proxy will be used </p>
    - id: isHttps
      type: 4fc6e284
      description: <p>if true, then this request is an https request as opposed to an http request </p>
  exceptions:
  - type: 848a9648
    description: <p>if the connection could not be opened. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError()
  id: readError()
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: readError()
  nameWithType: HttpsConnection.readError()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 291
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Reads from the error stream and returns the error reason.</p>\r\n<p></p>"
  syntax:
    content: public byte [] readError()
    return:
      type: ccd9418d
      description: <p>the error reason.</p>
  exceptions:
  - type: 848a9648
    description: <p>if the input stream could not be accessed, for example if the server could not be reached. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput()
  id: readInput()
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: readInput()
  nameWithType: HttpsConnection.readInput()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 260
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Reads from the input stream (response stream) and returns the response.</p>\r\n<p></p>"
  syntax:
    content: public byte [] readInput()
    return:
      type: ccd9418d
      description: <p>the response body.</p>
  exceptions:
  - type: 848a9648
    description: <p>if the input stream could not be accessed, for example if the server could not be reached. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout(int)
  id: setConnectTimeout(int)
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: setConnectTimeout(int timeout)
  nameWithType: HttpsConnection.setConnectTimeout(int timeout)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout(int timeout)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 216
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Sets the connect timeout in milliseconds. </p>"
  syntax:
    content: public void setConnectTimeout(int timeout)
    parameters:
    - id: timeout
      type: f75371fa
      description: <p>the connect timeout in milliseconds. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout(int)
  id: setReadTimeout(int)
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: setReadTimeout(int timeout)
  nameWithType: HttpsConnection.setReadTimeout(int timeout)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout(int timeout)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 206
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Sets the read timeout in milliseconds. The read timeout is the number of milliseconds after the server receives a request and before the server sends data back.</p>\r\n<p></p>"
  syntax:
    content: public void setReadTimeout(int timeout)
    parameters:
    - id: timeout
      type: f75371fa
      description: <p>the read timeout. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader(String,String)
  id: setRequestHeader(String,String)
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: setRequestHeader(String field, String value)
  nameWithType: HttpsConnection.setRequestHeader(String field, String value)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader(String field, String value)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 193
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Sets the request header field to the given value.</p>\r\n<p></p>"
  syntax:
    content: public void setRequestHeader(String field, String value)
    parameters:
    - id: field
      type: "26831127"
      description: <p>the header field name. </p>
    - id: value
      type: "26831127"
      description: <p>the header field value. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod(HttpsMethod)
  id: setRequestMethod(HttpsMethod)
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: setRequestMethod(HttpsMethod method)
  nameWithType: HttpsConnection.setRequestMethod(HttpsMethod method)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod(HttpsMethod method)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 158
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Sets the request method (i.e. POST).</p>\r\n<p></p>"
  syntax:
    content: public void setRequestMethod(HttpsMethod method)
    parameters:
    - id: method
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
      description: <p>the request method.</p>
  exceptions:
  - type: 848a9648
    description: <p>if the request currently has a non-empty body and the new method is not a POST or a PUT. This is because Java's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="HttpsURLConnection"></xref> silently converts the HTTPS method to POST or PUT if a body is written to the request. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput(byte [])
  id: writeOutput(byte [])
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  langs:
  - java
  name: writeOutput(byte[] body)
  nameWithType: HttpsConnection.writeOutput(byte[] body)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput(byte[] body)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 231
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Saves the body to be sent with the request.</p>\r\n<p></p>"
  syntax:
    content: public void writeOutput(byte[] body)
    parameters:
    - id: body
      type: ccd9418d
      description: <p>the request body.</p>
  exceptions:
  - type: 848a9648
    description: <p>if the request does not currently use method POST or PUT and the body is non-empty. This is because Java's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="HttpsURLConnection"></xref> silently converts the HTTPS method to POST or PUT if a body is written to the request. </p>
references:
- uid: 848a9648
  spec.java:
  - name: TransportException
    fullName: TransportException
- uid: a891b3e6
  spec.java:
  - name: URL
    fullName: URL
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection*
  name: HttpsConnection
  nameWithType: HttpsConnection.HttpsConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: 93de0ef9com.microsoft.azure.sdk.iot.device.ProxySettings
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.sdk.iot.device.ProxySettings
    name: ProxySettings
    fullName: com.microsoft.azure.sdk.iot.device.ProxySettings
    href: com.microsoft.azure.sdk.iot.device.ProxySettings.yml
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect*
  name: connect
  nameWithType: HttpsConnection.connect
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod*
  name: setRequestMethod
  nameWithType: HttpsConnection.setRequestMethod
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader*
  name: setRequestHeader
  nameWithType: HttpsConnection.setRequestHeader
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout*
  name: setReadTimeout
  nameWithType: HttpsConnection.setReadTimeout
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout*
  name: setConnectTimeout
  nameWithType: HttpsConnection.setConnectTimeout
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput*
  name: writeOutput
  nameWithType: HttpsConnection.writeOutput
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput*
  name: readInput
  nameWithType: HttpsConnection.readInput
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError*
  name: readError
  nameWithType: HttpsConnection.readError
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus*
  name: getResponseStatus
  nameWithType: HttpsConnection.getResponseStatus
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: b2319095
  spec.java:
  - name: Map<String, List<String>>
    fullName: Map<String, List<String>>
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders*
  name: getResponseHeaders
  nameWithType: HttpsConnection.getResponseHeaders
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.ProxySettings
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device.ProxySettings.yml
  name: ProxySettings
  nameWithType: ProxySettings
  fullName: com.microsoft.azure.sdk.iot.device.ProxySettings
  type: Class
  syntax:
    content: public class ProxySettings
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.yml
  name: connect()
  nameWithType: HttpsConnection.connect()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
  type: Method
  summary: "<p>Sends the request to the URL given in the constructor.</p>\r\n<p></p>"
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  href: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod.yml
  name: HttpsMethod
  nameWithType: HttpsMethod
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
  type: Enum
  summary: "<p>The HTTPS request method (i.e. GET). </p>"
  syntax:
    content: public enum HttpsMethod
- uid: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
  parent: com.microsoft.azure.sdk.iot.device.exceptions
  href: com.microsoft.azure.sdk.iot.device.exceptions.TransportException.yml
  name: TransportException
  nameWithType: TransportException
  fullName: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
  type: Class
  syntax:
    content: public class TransportException
