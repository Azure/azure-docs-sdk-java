### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluent.PolicyExemptionsClient.createOrUpdateWithResponse*"
fullName: "com.azure.resourcemanager.resources.fluent.PolicyExemptionsClient.createOrUpdateWithResponse"
name: "createOrUpdateWithResponse"
nameWithType: "PolicyExemptionsClient.createOrUpdateWithResponse"
members:
- uid: "com.azure.resourcemanager.resources.fluent.PolicyExemptionsClient.createOrUpdateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.PolicyExemptionInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyExemptionsClient.createOrUpdateWithResponse(String scope, String policyExemptionName, PolicyExemptionInner parameters, Context context)"
  name: "createOrUpdateWithResponse(String scope, String policyExemptionName, PolicyExemptionInner parameters, Context context)"
  nameWithType: "PolicyExemptionsClient.createOrUpdateWithResponse(String scope, String policyExemptionName, PolicyExemptionInner parameters, Context context)"
  summary: "This operation creates or updates a policy exemption with the given scope and name. Policy exemptions apply to all resources contained within their scope. For example, when you create a policy exemption at resource group scope for a policy assignment at the same or above level, the exemption exempts to all applicable resources in the resource group."
  parameters:
  - description: "The scope of the policy exemption. Valid scopes are: management group (format:\n     '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the policy exemption to delete."
    name: "policyExemptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters for the policy exemption."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyExemptionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyExemptionInner&text=PolicyExemptionInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PolicyExemptionInner> createOrUpdateWithResponse(String scope, String policyExemptionName, PolicyExemptionInner parameters, Context context)"
  returns:
    description: "the policy exemption along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyExemptionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyExemptionInner&text=PolicyExemptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.13.0
