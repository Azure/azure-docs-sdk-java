### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.CosmosRepository"
fullName: "com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>"
name: "CosmosRepository<T,ID>"
nameWithType: "CosmosRepository<T,ID>"
summary: "Extension of <xref uid=\"org.springframework.data.repository.PagingAndSortingRepository\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagingAndSortingRepository\"></xref> to provide additional methods to retrieve entities using the pagination and sorting abstraction."
syntax: "public interface **CosmosRepository<T,ID>**</br> extends <xref href=\"org.springframework.data.repository.PagingAndSortingRepository?alt=org.springframework.data.repository.PagingAndSortingRepository&text=PagingAndSortingRepository\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;, <xref href=\"org.springframework.data.repository.CrudRepository?alt=org.springframework.data.repository.CrudRepository&text=CrudRepository\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.spring.data.cosmos.repository.CosmosRepository.deleteById(ID,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>.deleteById(ID id, PartitionKey partitionKey)"
  name: "deleteById(ID id, PartitionKey partitionKey)"
  nameWithType: "CosmosRepository<T,ID>.deleteById(ID id, PartitionKey partitionKey)"
  summary: "Deletes an entity by its id and partition key."
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null."
    name: "id"
    type: "<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />"
  - description: "partition key value of the entity, must not be null."
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(ID id, PartitionKey partitionKey)"
  desc: "Deletes an entity by its id and partition key."
- uid: "com.azure.spring.data.cosmos.repository.CosmosRepository.findAll(com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>.findAll(PartitionKey partitionKey)"
  name: "findAll(PartitionKey partitionKey)"
  nameWithType: "CosmosRepository<T,ID>.findAll(PartitionKey partitionKey)"
  summary: "Returns list of items in a specific partition"
  modifiers:
  - "abstract"
  parameters:
  - description: "partition key value"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Iterable<T> findAll(PartitionKey partitionKey)"
  desc: "Returns list of items in a specific partition"
  returns:
    description: "Iterable of items with partition key value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.CosmosRepository.findById(ID,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>.findById(ID id, PartitionKey partitionKey)"
  name: "findById(ID id, PartitionKey partitionKey)"
  nameWithType: "CosmosRepository<T,ID>.findById(ID id, PartitionKey partitionKey)"
  summary: "Retrieves an entity by its id."
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null."
    name: "id"
    type: "<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />"
  - description: "partition key value of entity, must not be null."
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Optional<T> findById(ID id, PartitionKey partitionKey)"
  desc: "Retrieves an entity by its id."
  returns:
    description: "the entity with the given id or Optional#empty() if none found"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html\">Optional</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.CosmosRepository.<S>save(ID,com.azure.cosmos.models.PartitionKey,java.lang.Class<S>,com.azure.cosmos.models.CosmosPatchOperations)"
  fullName: "com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>.save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations)"
  name: "save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations)"
  nameWithType: "CosmosRepository<T,ID>.save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations)"
  summary: "Patches an entity by its id and partition key with Cosmos<wbr>Patch<wbr>Item<wbr>Request<wbr>Options"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "id"
    type: "<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "must not be null, max operations is 10"
    name: "patchOperations"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchOperations?alt=com.azure.cosmos.models.CosmosPatchOperations&text=CosmosPatchOperations\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract S <S>save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations)"
  desc: "Patches an entity by its id and partition key with CosmosPatchItemRequestOptions"
  returns:
    description: "the patched entity"
    type: "<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.CosmosRepository.<S>save(ID,com.azure.cosmos.models.PartitionKey,java.lang.Class<S>,com.azure.cosmos.models.CosmosPatchOperations,com.azure.cosmos.models.CosmosPatchItemRequestOptions)"
  fullName: "com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>.save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  name: "save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  nameWithType: "CosmosRepository<T,ID>.save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  summary: "Patches an entity by its id and partition key with Cosmos<wbr>Patch<wbr>Item<wbr>Request<wbr>Options"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "id"
    type: "<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "must not be null, max operations is 10"
    name: "patchOperations"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchOperations?alt=com.azure.cosmos.models.CosmosPatchOperations&text=CosmosPatchOperations\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional CosmosPatchItemRequestOptions, e.g. options.setFilterPredicate(\"FROM products p WHERE p.used = false\");"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchItemRequestOptions?alt=com.azure.cosmos.models.CosmosPatchItemRequestOptions&text=CosmosPatchItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract S <S>save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  desc: "Patches an entity by its id and partition key with CosmosPatchItemRequestOptions"
  returns:
    description: "the patched entity"
    type: "<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
typeParameters:
- description: "domain type."
  name: "T"
- description: "id type."
  name: "ID"
desc: "Extension of <xref uid=\"org.springframework.data.repository.PagingAndSortingRepository\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagingAndSortingRepository\"></xref> to provide additional methods to retrieve entities using the pagination and sorting abstraction."
implements:
- "<xref href=\"org.springframework.data.repository.CrudRepository?alt=org.springframework.data.repository.CrudRepository&text=CrudRepository\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"org.springframework.data.repository.PagingAndSortingRepository?alt=org.springframework.data.repository.PagingAndSortingRepository&text=PagingAndSortingRepository\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.spring.data.cosmos.repository"
artifact: com.azure:azure-spring-data-cosmos:5.21.0
