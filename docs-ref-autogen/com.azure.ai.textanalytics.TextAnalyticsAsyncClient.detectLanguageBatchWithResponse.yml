### YamlMime:JavaMember
uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatchWithResponse*"
fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatchWithResponse"
name: "detectLanguageBatchWithResponse"
nameWithType: "TextAnalyticsAsyncClient.detectLanguageBatchWithResponse"
members:
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatchWithResponse(java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatchWithResponse(Iterable<DetectLanguageInput> documents, TextAnalyticsRequestOptions options)"
  name: "detectLanguageBatchWithResponse(Iterable<DetectLanguageInput> documents, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguageBatchWithResponse(Iterable<DetectLanguageInput> documents, TextAnalyticsRequestOptions options)"
  summary: "Returns the detected language for a batch of <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageInput\" data-throw-if-not-resolved=\"false\" data-raw-source=\"document\"></xref> with provided request options.\n\n**Code sample**\n\nDetects language in a batch of <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageInput\" data-throw-if-not-resolved=\"false\" data-raw-source=\"document\"></xref> with provided request options. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n```java\nList<DetectLanguageInput> detectLanguageInputs1 = Arrays.asList(\n     new DetectLanguageInput(\"1\", \"This is written in English.\", \"US\"),\n     new DetectLanguageInput(\"2\", \"Este es un documento  escrito en Español.\", \"ES\")\n );\n \n // Request options: show statistics and model version\n TextAnalyticsRequestOptions requestOptions = new TextAnalyticsRequestOptions().setIncludeStatistics(true);\n \n textAnalyticsAsyncClient.detectLanguageBatchWithResponse(detectLanguageInputs1, requestOptions)\n     .subscribe(response -> {\n         // Response's status code\n         System.out.printf(\"Status code of request response: %d%n\", response.getStatusCode());\n \n         DetectLanguageResultCollection resultCollection = response.getValue();\n         // Batch statistics\n         TextDocumentBatchStatistics batchStatistics = resultCollection.getStatistics();\n         System.out.printf(\"Batch statistics, transaction count: %s, valid document count: %s.%n\",\n             batchStatistics.getTransactionCount(), batchStatistics.getValidDocumentCount());\n         // Batch result of languages\n         for (DetectLanguageResult detectLanguageResult : resultCollection) {\n             DetectedLanguage detectedLanguage = detectLanguageResult.getPrimaryLanguage();\n             System.out.printf(\"Detected language name: %s, ISO 6391 Name: %s, confidence score: %f.%n\",\n                 detectedLanguage.getName(), detectedLanguage.getIso6391Name(),\n                 detectedLanguage.getConfidenceScore());\n         }\n     });\n```"
  parameters:
  - description: "The list of <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageInput\" data-throw-if-not-resolved=\"false\" data-raw-source=\"documents\"></xref> to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\">data limits</a>."
    name: "documents"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.textanalytics.models.DetectLanguageInput?alt=com.azure.ai.textanalytics.models.DetectLanguageInput&text=DetectLanguageInput\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> to configure the scoring model for documents\n and show statistics."
    name: "options"
    type: "<xref href=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions?alt=com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions&text=TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<DetectLanguageResultCollection>> detectLanguageBatchWithResponse(Iterable<DetectLanguageInput> documents, TextAnalyticsRequestOptions options)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> contains a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> which contains a <xref uid=\"com.azure.ai.textanalytics.util.DetectLanguageResultCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DetectLanguageResultCollection\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.textanalytics.util.DetectLanguageResultCollection?alt=com.azure.ai.textanalytics.util.DetectLanguageResultCollection&text=DetectLanguageResultCollection\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.textanalytics"
artifact: com.azure:azure-ai-textanalytics:5.0.2
