### YamlMime:JavaMember
uid: "com.azure.resourcemanager.msi.fluent.UserAssignedIdentitiesClient.getByResourceGroupAsync*"
fullName: "com.azure.resourcemanager.msi.fluent.UserAssignedIdentitiesClient.getByResourceGroupAsync"
name: "getByResourceGroupAsync"
nameWithType: "UserAssignedIdentitiesClient.getByResourceGroupAsync"
members:
- uid: "com.azure.resourcemanager.msi.fluent.UserAssignedIdentitiesClient.getByResourceGroupAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.msi.fluent.UserAssignedIdentitiesClient.getByResourceGroupAsync(String resourceGroupName, String resourceName)"
  name: "getByResourceGroupAsync(String resourceGroupName, String resourceName)"
  nameWithType: "UserAssignedIdentitiesClient.getByResourceGroupAsync(String resourceGroupName, String resourceName)"
  summary: "Gets the identity."
  parameters:
  - description: "The name of the Resource Group to which the identity belongs."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the identity resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<IdentityInner> getByResourceGroupAsync(String resourceGroupName, String resourceName)"
  returns:
    description: "the identity."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.msi.fluent.models.IdentityInner?alt=com.azure.resourcemanager.msi.fluent.models.IdentityInner&text=IdentityInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.msi.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-msi:2.1.0
