### YamlMime:JavaMember
nameWithType: BlobInputStream.read
type: method
members:
- fullName: com.microsoft.azure.storage.blob.BlobInputStream.read()
  name: read()
  nameWithType: BlobInputStream.read()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O error occurs. </p>
  returns:
    description: <p>An <code>int</code> which represents the total number of bytes read into the buffer, or -1 if there is no more data because the end of the stream has been reached.</p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reads the next byte of data from the input stream. The value byte is returned as an int in the range 0 to 255. If no byte is available because the end of the stream has been reached, the value -1 is returned. This method blocks until input data is available, the end of the stream is detected, or an exception is thrown.</p>

    <p></p>
  syntax: public int read()
  uid: com.microsoft.azure.storage.blob.BlobInputStream.read()
- fullName: com.microsoft.azure.storage.blob.BlobInputStream.read(final byte[] b)
  name: read(final byte[] b)
  nameWithType: BlobInputStream.read(final byte[] b)
  parameters:
  - description: <p>A <code>byte</code> array which represents the buffer into which the data is read.</p>
    name: b
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If the first byte cannot be read for any reason other than the end of the file, if the input stream has been closed, or if some other I/O error occurs. </p>
  - type: <xref href="NullPointerException?alt=NullPointerException&text=NullPointerException" data-throw-if-not-resolved="False"/>
    description: <p>If the <code>byte</code> array <code>b</code> is null. </p>
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reads some number of bytes from the input stream and stores them into the buffer array . The number of bytes actually read is returned as an integer. This method blocks until input data is available, end of file is detected, or an exception is thrown. If the length of  is zero, then no bytes are read and 0 is returned; otherwise, there is an attempt to read at least one byte. If no byte is available because the stream is at the end of the file, the value -1 is returned; otherwise, at least one byte is read and stored into .</p>

    <p>The first byte read is stored into element , the next one into , and so on. The number of bytes read is, at most, equal to the length of . Let  be the number of bytes actually read; these bytes will be stored in elements  through , leaving elements  through  unaffected.</p>

    <p>The  method for class <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> has the same effect as:</p>

    <p></p>

    <p></p>
  syntax: public int read(final byte[] b)
  uid: com.microsoft.azure.storage.blob.BlobInputStream.read(final byte [])
- fullName: com.microsoft.azure.storage.blob.BlobInputStream.read(final byte[] b, final int off, final int len)
  name: read(final byte[] b, final int off, final int len)
  nameWithType: BlobInputStream.read(final byte[] b, final int off, final int len)
  parameters:
  - description: <p>A <code>byte</code> array which represents the buffer into which the data is read. </p>
    name: b
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the start offset in the <code>byte</code> array at which the data is written. </p>
    name: off
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the maximum number of bytes to read.</p>
    name: len
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If the first byte cannot be read for any reason other than end of file, or if the input stream has been closed, or if some other I/O error occurs. </p>
  - type: <xref href="NullPointerException?alt=NullPointerException&text=NullPointerException" data-throw-if-not-resolved="False"/>
    description: <p>If the <code>byte</code> array <code>b</code> is null. </p>
  - type: <xref href="IndexOutOfBoundsException?alt=IndexOutOfBoundsException&text=IndexOutOfBoundsException" data-throw-if-not-resolved="False"/>
    description: <p>If <code>off</code> is negative, <code>len</code> is negative, or <code>len</code> is greater than <code>b.length - off</code>. </p>
  returns:
    description: <p>An <code>int</code> which represents the total number of bytes read into the buffer, or -1 if there is no more data because the end of the stream has been reached.</p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reads up to  bytes of data from the input stream into an array of bytes. An attempt is made to read as many as  bytes, but a smaller number may be read. The number of bytes actually read is returned as an integer. This method blocks until input data is available, end of file is detected, or an exception is thrown.</p>

    <p>If  is zero, then no bytes are read and 0 is returned; otherwise, there is an attempt to read at least one byte. If no byte is available because the stream is at end of file, the value -1 is returned; otherwise, at least one byte is read and stored into .</p>

    <p>The first byte read is stored into element , the next one into , and so on. The number of bytes read is, at most, equal to . Let  be the number of bytes actually read; these bytes will be stored in elements  through , leaving elements  through  unaffected.</p>

    <p>In every case, elements  through  and elements  through  are unaffected.</p>

    <p>The  method for class <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> simply calls the method  repeatedly. If the first such call results in an , that exception is returned from the call to the  method. If any subsequent call to  results in a , the exception is caught and treated as if it were end of file; the bytes read up to that point are stored into  and the number of bytes read before the exception occurred is returned. The default implementation of this method blocks until the requested amount of input data  has been read, end of file is detected, or an exception is thrown. Subclasses are encouraged to provide a more efficient implementation of this method.</p>

    <p></p>
  syntax: public int read(final byte[] b, final int off, final int len)
  uid: com.microsoft.azure.storage.blob.BlobInputStream.read(final byte [],final int,final int)
uid: com.microsoft.azure.storage.blob.BlobInputStream.read*
fullName: com.microsoft.azure.storage.blob.BlobInputStream.read
name: read()
package: com.microsoft.azure.storage.blob
metadata: {}
