items:
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  id: _https_request_test
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  children:
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorOpensConnection(@Mocked final HttpConnection)
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorSetsHttpsMethodCorrectly(@Mocked final HttpConnection)
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorThrowsIoExceptionIfCannotSetupConnection(@Mocked final HttpConnection)
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorWritesBodyToConnection(@Mocked final HttpConnection)
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendHasCorrectHttpsMethod()
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReadsStatusCode(@Mocked final HttpConnection)
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsBody(@Mocked final HttpConnection)
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsError(@Mocked final HttpConnection)
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsHeaderFields(@Mocked final HttpConnection)
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsHeaderFieldsOnBadStatusException(@Mocked final HttpConnection)
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsStatusCodeOnBadStatusException(@Mocked final HttpConnection)
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendSetsHeaderFieldsCorrectly()
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendThrowsIoExceptionIfCannotConnect(@Mocked final HttpConnection)
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendWritesBodyToOutputStream()
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.setHeaderFieldSetsHeaderField(@Mocked final HttpConnection)
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.setReadTimeoutSetsReadTimeout(@Mocked final HttpConnection)
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: HttpsRequestTest
  nameWithType: HttpsRequestTest
  fullName: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 26
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  summary: <p>Unit tests for HttpRequest. </p>
  syntax:
    content: public class HttpsRequestTest
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.mockUrl()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorOpensConnection(@Mocked final HttpConnection)
  id: constructorOpensConnection(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: constructorOpensConnection(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.constructorOpensConnection(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.constructorOpensConnection(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorOpensConnection*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 32
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void constructorOpensConnection(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorSetsHttpsMethodCorrectly(@Mocked final HttpConnection)
  id: constructorSetsHttpsMethodCorrectly(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: constructorSetsHttpsMethodCorrectly(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.constructorSetsHttpsMethodCorrectly(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.constructorSetsHttpsMethodCorrectly(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorSetsHttpsMethodCorrectly*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 84
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void constructorSetsHttpsMethodCorrectly(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorThrowsIoExceptionIfCannotSetupConnection(@Mocked final HttpConnection)
  id: constructorThrowsIoExceptionIfCannotSetupConnection(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: constructorThrowsIoExceptionIfCannotSetupConnection(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.constructorThrowsIoExceptionIfCannotSetupConnection(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.constructorThrowsIoExceptionIfCannotSetupConnection(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorThrowsIoExceptionIfCannotSetupConnection*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 110
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void constructorThrowsIoExceptionIfCannotSetupConnection(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorWritesBodyToConnection(@Mocked final HttpConnection)
  id: constructorWritesBodyToConnection(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: constructorWritesBodyToConnection(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.constructorWritesBodyToConnection(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.constructorWritesBodyToConnection(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorWritesBodyToConnection*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 57
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void constructorWritesBodyToConnection(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendHasCorrectHttpsMethod()
  id: sendHasCorrectHttpsMethod()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: sendHasCorrectHttpsMethod()
  nameWithType: HttpsRequestTest.sendHasCorrectHttpsMethod()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendHasCorrectHttpsMethod()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendHasCorrectHttpsMethod*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 130
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void sendHasCorrectHttpsMethod()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReadsStatusCode(@Mocked final HttpConnection)
  id: sendReadsStatusCode(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: sendReadsStatusCode(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.sendReadsStatusCode(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendReadsStatusCode(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReadsStatusCode*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 379
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void sendReadsStatusCode(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsBody(@Mocked final HttpConnection)
  id: sendReturnsBody(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: sendReturnsBody(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.sendReturnsBody(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendReturnsBody(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsBody*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 405
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void sendReturnsBody(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsError(@Mocked final HttpConnection)
  id: sendReturnsError(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: sendReturnsError(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.sendReturnsError(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendReturnsError(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsError*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 432
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void sendReturnsError(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsHeaderFields(@Mocked final HttpConnection)
  id: sendReturnsHeaderFields(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: sendReturnsHeaderFields(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.sendReturnsHeaderFields(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendReturnsHeaderFields(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsHeaderFields*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 460
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void sendReturnsHeaderFields(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsHeaderFieldsOnBadStatusException(@Mocked final HttpConnection)
  id: sendReturnsHeaderFieldsOnBadStatusException(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: sendReturnsHeaderFieldsOnBadStatusException(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.sendReturnsHeaderFieldsOnBadStatusException(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendReturnsHeaderFieldsOnBadStatusException(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsHeaderFieldsOnBadStatusException*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 551
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void sendReturnsHeaderFieldsOnBadStatusException(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsStatusCodeOnBadStatusException(@Mocked final HttpConnection)
  id: sendReturnsStatusCodeOnBadStatusException(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: sendReturnsStatusCodeOnBadStatusException(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.sendReturnsStatusCodeOnBadStatusException(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendReturnsStatusCodeOnBadStatusException(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsStatusCodeOnBadStatusException*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 493
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void sendReturnsStatusCodeOnBadStatusException(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendSetsHeaderFieldsCorrectly()
  id: sendSetsHeaderFieldsCorrectly()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: sendSetsHeaderFieldsCorrectly()
  nameWithType: HttpsRequestTest.sendSetsHeaderFieldsCorrectly()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendSetsHeaderFieldsCorrectly()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendSetsHeaderFieldsCorrectly*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 210
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void sendSetsHeaderFieldsCorrectly()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendThrowsIoExceptionIfCannotConnect(@Mocked final HttpConnection)
  id: sendThrowsIoExceptionIfCannotConnect(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: sendThrowsIoExceptionIfCannotConnect(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.sendThrowsIoExceptionIfCannotConnect(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendThrowsIoExceptionIfCannotConnect(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendThrowsIoExceptionIfCannotConnect*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 522
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void sendThrowsIoExceptionIfCannotConnect(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendWritesBodyToOutputStream()
  id: sendWritesBodyToOutputStream()
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: sendWritesBodyToOutputStream()
  nameWithType: HttpsRequestTest.sendWritesBodyToOutputStream()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendWritesBodyToOutputStream()
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendWritesBodyToOutputStream*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 300
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void sendWritesBodyToOutputStream()
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.setHeaderFieldSetsHeaderField(@Mocked final HttpConnection)
  id: setHeaderFieldSetsHeaderField(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: setHeaderFieldSetsHeaderField(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.setHeaderFieldSetsHeaderField(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.setHeaderFieldSetsHeaderField(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.setHeaderFieldSetsHeaderField*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 584
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void setHeaderFieldSetsHeaderField(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.setReadTimeoutSetsReadTimeout(@Mocked final HttpConnection)
  id: setReadTimeoutSetsReadTimeout(@Mocked final HttpConnection)
  parent: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test
  href: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.yml
  langs:
  - java
  name: setReadTimeoutSetsReadTimeout(@Mocked final HttpConnection mockConn)
  nameWithType: HttpsRequestTest.setReadTimeoutSetsReadTimeout(@Mocked final HttpConnection mockConn)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.setReadTimeoutSetsReadTimeout(@Mocked final HttpConnection mockConn)
  overload: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.setReadTimeoutSetsReadTimeout*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/transport/http/HttpsRequestTest.java
    startLine: 612
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: public void setReadTimeoutSetsReadTimeout(@Mocked final HttpConnection mockConn)
    parameters:
    - id: mockConn
      type: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
references:
- uid: 5514d1f5com.microsoft.azure.sdk.iot.service.transport.http._http_connection
  spec.java:
  - name: '@Mocked final '
    fullName: '@Mocked final '
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    name: HttpConnection
    fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorOpensConnection*
  name: constructorOpensConnection
  nameWithType: HttpsRequestTest.constructorOpensConnection
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.constructorOpensConnection
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorWritesBodyToConnection*
  name: constructorWritesBodyToConnection
  nameWithType: HttpsRequestTest.constructorWritesBodyToConnection
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.constructorWritesBodyToConnection
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorSetsHttpsMethodCorrectly*
  name: constructorSetsHttpsMethodCorrectly
  nameWithType: HttpsRequestTest.constructorSetsHttpsMethodCorrectly
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.constructorSetsHttpsMethodCorrectly
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.constructorThrowsIoExceptionIfCannotSetupConnection*
  name: constructorThrowsIoExceptionIfCannotSetupConnection
  nameWithType: HttpsRequestTest.constructorThrowsIoExceptionIfCannotSetupConnection
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.constructorThrowsIoExceptionIfCannotSetupConnection
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendHasCorrectHttpsMethod*
  name: sendHasCorrectHttpsMethod
  nameWithType: HttpsRequestTest.sendHasCorrectHttpsMethod
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendHasCorrectHttpsMethod
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendSetsHeaderFieldsCorrectly*
  name: sendSetsHeaderFieldsCorrectly
  nameWithType: HttpsRequestTest.sendSetsHeaderFieldsCorrectly
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendSetsHeaderFieldsCorrectly
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendWritesBodyToOutputStream*
  name: sendWritesBodyToOutputStream
  nameWithType: HttpsRequestTest.sendWritesBodyToOutputStream
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendWritesBodyToOutputStream
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReadsStatusCode*
  name: sendReadsStatusCode
  nameWithType: HttpsRequestTest.sendReadsStatusCode
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendReadsStatusCode
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsBody*
  name: sendReturnsBody
  nameWithType: HttpsRequestTest.sendReturnsBody
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendReturnsBody
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsError*
  name: sendReturnsError
  nameWithType: HttpsRequestTest.sendReturnsError
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendReturnsError
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsHeaderFields*
  name: sendReturnsHeaderFields
  nameWithType: HttpsRequestTest.sendReturnsHeaderFields
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendReturnsHeaderFields
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsStatusCodeOnBadStatusException*
  name: sendReturnsStatusCodeOnBadStatusException
  nameWithType: HttpsRequestTest.sendReturnsStatusCodeOnBadStatusException
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendReturnsStatusCodeOnBadStatusException
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendThrowsIoExceptionIfCannotConnect*
  name: sendThrowsIoExceptionIfCannotConnect
  nameWithType: HttpsRequestTest.sendThrowsIoExceptionIfCannotConnect
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendThrowsIoExceptionIfCannotConnect
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.sendReturnsHeaderFieldsOnBadStatusException*
  name: sendReturnsHeaderFieldsOnBadStatusException
  nameWithType: HttpsRequestTest.sendReturnsHeaderFieldsOnBadStatusException
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.sendReturnsHeaderFieldsOnBadStatusException
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.setHeaderFieldSetsHeaderField*
  name: setHeaderFieldSetsHeaderField
  nameWithType: HttpsRequestTest.setHeaderFieldSetsHeaderField
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.setHeaderFieldSetsHeaderField
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.setReadTimeoutSetsReadTimeout*
  name: setReadTimeoutSetsReadTimeout
  nameWithType: HttpsRequestTest.setReadTimeoutSetsReadTimeout
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.service.transport.http.HttpsRequestTest.setReadTimeoutSetsReadTimeout
  package: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http
- uid: tests.unit.com.microsoft.azure.sdk.iot.service.transport.http._https_request_test.mockUrl()
- uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
  parent: com.microsoft.azure.sdk.iot.service.transport.http
  href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
  name: HttpConnection
  nameWithType: HttpConnection
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  type: Class
  summary: >-
    <p>A wrapper for the Java SE class HttpsURLConnection. Used to avoid compatibility issues when testing with the mocking framework JMockit, as well as to avoid some undocumented side effects when using HttpsURLConnection. </p>

    <p>The underlying HttpsURLConnection is transparently managed by Java. To reuse connections, for each time <xref href="com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()" data-throw-if-not-resolved="false"></xref> is called, the input streams (input stream or error stream, if input stream is not accessible) must be completely read. Otherwise, the data remains in the stream and the connection will not be reusable. </p>
  syntax:
    content: public class HttpConnection
