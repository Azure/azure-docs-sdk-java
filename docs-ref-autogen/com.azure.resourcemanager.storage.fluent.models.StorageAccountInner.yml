### YamlMime:JavaType
uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner"
fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner"
name: "StorageAccountInner"
nameWithType: "StorageAccountInner"
summary: "The storage account."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class StorageAccountInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.StorageAccountInner()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.StorageAccountInner()"
  name: "StorageAccountInner()"
  nameWithType: "StorageAccountInner.StorageAccountInner()"
  syntax: "public StorageAccountInner()"
methods:
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.accessTier()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.accessTier()"
  name: "accessTier()"
  nameWithType: "StorageAccountInner.accessTier()"
  summary: "Get the accessTier property: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type."
  syntax: "public AccessTier accessTier()"
  returns:
    description: "the accessTier value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.AccessTier?alt=com.azure.resourcemanager.storage.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.allowBlobPublicAccess()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.allowBlobPublicAccess()"
  name: "allowBlobPublicAccess()"
  nameWithType: "StorageAccountInner.allowBlobPublicAccess()"
  summary: "Get the allowBlobPublicAccess property: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property."
  syntax: "public Boolean allowBlobPublicAccess()"
  returns:
    description: "the allowBlobPublicAccess value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.allowCrossTenantReplication()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.allowCrossTenantReplication()"
  name: "allowCrossTenantReplication()"
  nameWithType: "StorageAccountInner.allowCrossTenantReplication()"
  summary: "Get the allowCrossTenantReplication property: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property."
  syntax: "public Boolean allowCrossTenantReplication()"
  returns:
    description: "the allowCrossTenantReplication value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.allowSharedKeyAccess()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.allowSharedKeyAccess()"
  name: "allowSharedKeyAccess()"
  nameWithType: "StorageAccountInner.allowSharedKeyAccess()"
  summary: "Get the allowSharedKeyAccess property: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true."
  syntax: "public Boolean allowSharedKeyAccess()"
  returns:
    description: "the allowSharedKeyAccess value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.allowedCopyScope()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.allowedCopyScope()"
  name: "allowedCopyScope()"
  nameWithType: "StorageAccountInner.allowedCopyScope()"
  summary: "Get the allowedCopyScope property: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet."
  syntax: "public AllowedCopyScope allowedCopyScope()"
  returns:
    description: "the allowedCopyScope value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.AllowedCopyScope?alt=com.azure.resourcemanager.storage.models.AllowedCopyScope&text=AllowedCopyScope\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.azureFilesIdentityBasedAuthentication()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.azureFilesIdentityBasedAuthentication()"
  name: "azureFilesIdentityBasedAuthentication()"
  nameWithType: "StorageAccountInner.azureFilesIdentityBasedAuthentication()"
  summary: "Get the azureFilesIdentityBasedAuthentication property: Provides the identity based authentication settings for Azure Files."
  syntax: "public AzureFilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication()"
  returns:
    description: "the azureFilesIdentityBasedAuthentication value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.AzureFilesIdentityBasedAuthentication?alt=com.azure.resourcemanager.storage.models.AzureFilesIdentityBasedAuthentication&text=AzureFilesIdentityBasedAuthentication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.blobRestoreStatus()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.blobRestoreStatus()"
  name: "blobRestoreStatus()"
  nameWithType: "StorageAccountInner.blobRestoreStatus()"
  summary: "Get the blobRestoreStatus property: Blob restore status."
  syntax: "public BlobRestoreStatusInner blobRestoreStatus()"
  returns:
    description: "the blobRestoreStatus value."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner?alt=com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner&text=BlobRestoreStatusInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.creationTime()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.creationTime()"
  name: "creationTime()"
  nameWithType: "StorageAccountInner.creationTime()"
  summary: "Get the creationTime property: Gets the creation date and time of the storage account in UTC."
  syntax: "public OffsetDateTime creationTime()"
  returns:
    description: "the creationTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.customDomain()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.customDomain()"
  name: "customDomain()"
  nameWithType: "StorageAccountInner.customDomain()"
  summary: "Get the customDomain property: Gets the custom domain the user assigned to this storage account."
  syntax: "public CustomDomain customDomain()"
  returns:
    description: "the customDomain value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.CustomDomain?alt=com.azure.resourcemanager.storage.models.CustomDomain&text=CustomDomain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.defaultToOAuthAuthentication()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.defaultToOAuthAuthentication()"
  name: "defaultToOAuthAuthentication()"
  nameWithType: "StorageAccountInner.defaultToOAuthAuthentication()"
  summary: "Get the defaultToOAuthAuthentication property: A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property."
  syntax: "public Boolean defaultToOAuthAuthentication()"
  returns:
    description: "the defaultToOAuthAuthentication value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.dnsEndpointType()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.dnsEndpointType()"
  name: "dnsEndpointType()"
  nameWithType: "StorageAccountInner.dnsEndpointType()"
  summary: "Get the dnsEndpointType property: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier."
  syntax: "public DnsEndpointType dnsEndpointType()"
  returns:
    description: "the dnsEndpointType value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.DnsEndpointType?alt=com.azure.resourcemanager.storage.models.DnsEndpointType&text=DnsEndpointType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.enableHttpsTrafficOnly()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.enableHttpsTrafficOnly()"
  name: "enableHttpsTrafficOnly()"
  nameWithType: "StorageAccountInner.enableHttpsTrafficOnly()"
  summary: "Get the enableHttpsTrafficOnly property: Allows https traffic only to storage service if sets to true."
  syntax: "public Boolean enableHttpsTrafficOnly()"
  returns:
    description: "the enableHttpsTrafficOnly value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.enableNfsV3()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.enableNfsV3()"
  name: "enableNfsV3()"
  nameWithType: "StorageAccountInner.enableNfsV3()"
  summary: "Get the enableNfsV3 property: NFS 3.0 protocol support enabled if set to true."
  syntax: "public Boolean enableNfsV3()"
  returns:
    description: "the enableNfsV3 value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.encryption()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.encryption()"
  name: "encryption()"
  nameWithType: "StorageAccountInner.encryption()"
  summary: "Get the encryption property: Encryption settings to be used for server-side encryption for the storage account."
  syntax: "public Encryption encryption()"
  returns:
    description: "the encryption value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.Encryption?alt=com.azure.resourcemanager.storage.models.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.extendedLocation()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.extendedLocation()"
  name: "extendedLocation()"
  nameWithType: "StorageAccountInner.extendedLocation()"
  summary: "Get the extendedLocation property: The extendedLocation of the resource."
  syntax: "public ExtendedLocation extendedLocation()"
  returns:
    description: "the extendedLocation value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.ExtendedLocation?alt=com.azure.resourcemanager.storage.models.ExtendedLocation&text=ExtendedLocation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.failoverInProgress()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.failoverInProgress()"
  name: "failoverInProgress()"
  nameWithType: "StorageAccountInner.failoverInProgress()"
  summary: "Get the failoverInProgress property: If the failover is in progress, the value will be true, otherwise, it will be null."
  syntax: "public Boolean failoverInProgress()"
  returns:
    description: "the failoverInProgress value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.geoReplicationStats()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.geoReplicationStats()"
  name: "geoReplicationStats()"
  nameWithType: "StorageAccountInner.geoReplicationStats()"
  summary: "Get the geoReplicationStats property: Geo Replication Stats."
  syntax: "public GeoReplicationStats geoReplicationStats()"
  returns:
    description: "the geoReplicationStats value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.GeoReplicationStats?alt=com.azure.resourcemanager.storage.models.GeoReplicationStats&text=GeoReplicationStats\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.identity()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.identity()"
  name: "identity()"
  nameWithType: "StorageAccountInner.identity()"
  summary: "Get the identity property: The identity of the resource."
  syntax: "public Identity identity()"
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.Identity?alt=com.azure.resourcemanager.storage.models.Identity&text=Identity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.immutableStorageWithVersioning()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.immutableStorageWithVersioning()"
  name: "immutableStorageWithVersioning()"
  nameWithType: "StorageAccountInner.immutableStorageWithVersioning()"
  summary: "Get the immutableStorageWithVersioning property: The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default."
  syntax: "public ImmutableStorageAccount immutableStorageWithVersioning()"
  returns:
    description: "the immutableStorageWithVersioning value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.ImmutableStorageAccount?alt=com.azure.resourcemanager.storage.models.ImmutableStorageAccount&text=ImmutableStorageAccount\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.isHnsEnabled()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.isHnsEnabled()"
  name: "isHnsEnabled()"
  nameWithType: "StorageAccountInner.isHnsEnabled()"
  summary: "Get the isHnsEnabled property: Account HierarchicalNamespace enabled if sets to true."
  syntax: "public Boolean isHnsEnabled()"
  returns:
    description: "the isHnsEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.isLocalUserEnabled()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.isLocalUserEnabled()"
  name: "isLocalUserEnabled()"
  nameWithType: "StorageAccountInner.isLocalUserEnabled()"
  summary: "Get the isLocalUserEnabled property: Enables local users feature, if set to true."
  syntax: "public Boolean isLocalUserEnabled()"
  returns:
    description: "the isLocalUserEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.isSftpEnabled()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.isSftpEnabled()"
  name: "isSftpEnabled()"
  nameWithType: "StorageAccountInner.isSftpEnabled()"
  summary: "Get the isSftpEnabled property: Enables Secure File Transfer Protocol, if set to true."
  syntax: "public Boolean isSftpEnabled()"
  returns:
    description: "the isSftpEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.keyCreationTime()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.keyCreationTime()"
  name: "keyCreationTime()"
  nameWithType: "StorageAccountInner.keyCreationTime()"
  summary: "Get the keyCreationTime property: Storage account keys creation time."
  syntax: "public KeyCreationTime keyCreationTime()"
  returns:
    description: "the keyCreationTime value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.KeyCreationTime?alt=com.azure.resourcemanager.storage.models.KeyCreationTime&text=KeyCreationTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.keyPolicy()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.keyPolicy()"
  name: "keyPolicy()"
  nameWithType: "StorageAccountInner.keyPolicy()"
  summary: "Get the keyPolicy property: KeyPolicy assigned to the storage account."
  syntax: "public KeyPolicy keyPolicy()"
  returns:
    description: "the keyPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.KeyPolicy?alt=com.azure.resourcemanager.storage.models.KeyPolicy&text=KeyPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.kind()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.kind()"
  name: "kind()"
  nameWithType: "StorageAccountInner.kind()"
  summary: "Get the kind property: Gets the Kind."
  syntax: "public Kind kind()"
  returns:
    description: "the kind value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.Kind?alt=com.azure.resourcemanager.storage.models.Kind&text=Kind\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.largeFileSharesState()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.largeFileSharesState()"
  name: "largeFileSharesState()"
  nameWithType: "StorageAccountInner.largeFileSharesState()"
  summary: "Get the largeFileSharesState property: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled."
  syntax: "public LargeFileSharesState largeFileSharesState()"
  returns:
    description: "the largeFileSharesState value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.LargeFileSharesState?alt=com.azure.resourcemanager.storage.models.LargeFileSharesState&text=LargeFileSharesState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.lastGeoFailoverTime()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.lastGeoFailoverTime()"
  name: "lastGeoFailoverTime()"
  nameWithType: "StorageAccountInner.lastGeoFailoverTime()"
  summary: "Get the lastGeoFailoverTime property: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard\\_GRS or Standard\\_RAGRS."
  syntax: "public OffsetDateTime lastGeoFailoverTime()"
  returns:
    description: "the lastGeoFailoverTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.minimumTlsVersion()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.minimumTlsVersion()"
  name: "minimumTlsVersion()"
  nameWithType: "StorageAccountInner.minimumTlsVersion()"
  summary: "Get the minimumTlsVersion property: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property."
  syntax: "public MinimumTlsVersion minimumTlsVersion()"
  returns:
    description: "the minimumTlsVersion value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.MinimumTlsVersion?alt=com.azure.resourcemanager.storage.models.MinimumTlsVersion&text=MinimumTlsVersion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.networkRuleSet()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.networkRuleSet()"
  name: "networkRuleSet()"
  nameWithType: "StorageAccountInner.networkRuleSet()"
  summary: "Get the networkRuleSet property: Network rule set."
  syntax: "public NetworkRuleSet networkRuleSet()"
  returns:
    description: "the networkRuleSet value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.NetworkRuleSet?alt=com.azure.resourcemanager.storage.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.primaryEndpoints()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.primaryEndpoints()"
  name: "primaryEndpoints()"
  nameWithType: "StorageAccountInner.primaryEndpoints()"
  summary: "Get the primaryEndpoints property: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard\\_ZRS and Premium\\_LRS accounts only return the blob endpoint."
  syntax: "public Endpoints primaryEndpoints()"
  returns:
    description: "the primaryEndpoints value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.Endpoints?alt=com.azure.resourcemanager.storage.models.Endpoints&text=Endpoints\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.primaryLocation()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.primaryLocation()"
  name: "primaryLocation()"
  nameWithType: "StorageAccountInner.primaryLocation()"
  summary: "Get the primaryLocation property: Gets the location of the primary data center for the storage account."
  syntax: "public String primaryLocation()"
  returns:
    description: "the primaryLocation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "StorageAccountInner.privateEndpointConnections()"
  summary: "Get the privateEndpointConnections property: List of private endpoint connection associated with the specified storage account."
  syntax: "public List<PrivateEndpointConnectionInner> privateEndpointConnections()"
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storage.fluent.models.PrivateEndpointConnectionInner?alt=com.azure.resourcemanager.storage.fluent.models.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.provisioningState()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "StorageAccountInner.provisioningState()"
  summary: "Get the provisioningState property: Gets the status of the storage account at the time the operation was called."
  syntax: "public ProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.ProvisioningState?alt=com.azure.resourcemanager.storage.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "StorageAccountInner.publicNetworkAccess()"
  summary: "Get the publicNetworkAccess property: Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
  syntax: "public PublicNetworkAccess publicNetworkAccess()"
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.PublicNetworkAccess?alt=com.azure.resourcemanager.storage.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.routingPreference()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.routingPreference()"
  name: "routingPreference()"
  nameWithType: "StorageAccountInner.routingPreference()"
  summary: "Get the routingPreference property: Maintains information about the network routing choice opted by the user for data transfer."
  syntax: "public RoutingPreference routingPreference()"
  returns:
    description: "the routingPreference value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.RoutingPreference?alt=com.azure.resourcemanager.storage.models.RoutingPreference&text=RoutingPreference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.sasPolicy()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.sasPolicy()"
  name: "sasPolicy()"
  nameWithType: "StorageAccountInner.sasPolicy()"
  summary: "Get the sasPolicy property: SasPolicy assigned to the storage account."
  syntax: "public SasPolicy sasPolicy()"
  returns:
    description: "the sasPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.SasPolicy?alt=com.azure.resourcemanager.storage.models.SasPolicy&text=SasPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.secondaryEndpoints()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.secondaryEndpoints()"
  name: "secondaryEndpoints()"
  nameWithType: "StorageAccountInner.secondaryEndpoints()"
  summary: "Get the secondaryEndpoints property: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard\\_RAGRS."
  syntax: "public Endpoints secondaryEndpoints()"
  returns:
    description: "the secondaryEndpoints value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.Endpoints?alt=com.azure.resourcemanager.storage.models.Endpoints&text=Endpoints\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.secondaryLocation()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.secondaryLocation()"
  name: "secondaryLocation()"
  nameWithType: "StorageAccountInner.secondaryLocation()"
  summary: "Get the secondaryLocation property: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard\\_GRS or Standard\\_RAGRS."
  syntax: "public String secondaryLocation()"
  returns:
    description: "the secondaryLocation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.sku()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.sku()"
  name: "sku()"
  nameWithType: "StorageAccountInner.sku()"
  summary: "Get the sku property: Gets the SKU."
  syntax: "public Sku sku()"
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.Sku?alt=com.azure.resourcemanager.storage.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.statusOfPrimary()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.statusOfPrimary()"
  name: "statusOfPrimary()"
  nameWithType: "StorageAccountInner.statusOfPrimary()"
  summary: "Get the statusOfPrimary property: Gets the status indicating whether the primary location of the storage account is available or unavailable."
  syntax: "public AccountStatus statusOfPrimary()"
  returns:
    description: "the statusOfPrimary value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.AccountStatus?alt=com.azure.resourcemanager.storage.models.AccountStatus&text=AccountStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.statusOfSecondary()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.statusOfSecondary()"
  name: "statusOfSecondary()"
  nameWithType: "StorageAccountInner.statusOfSecondary()"
  summary: "Get the statusOfSecondary property: Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard\\_GRS or Standard\\_RAGRS."
  syntax: "public AccountStatus statusOfSecondary()"
  returns:
    description: "the statusOfSecondary value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.AccountStatus?alt=com.azure.resourcemanager.storage.models.AccountStatus&text=AccountStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.storageAccountSkuConversionStatus()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.storageAccountSkuConversionStatus()"
  name: "storageAccountSkuConversionStatus()"
  nameWithType: "StorageAccountInner.storageAccountSkuConversionStatus()"
  summary: "Get the storageAccountSkuConversionStatus property: This property is readOnly and is set by server during asynchronous storage account sku conversion operations."
  syntax: "public StorageAccountSkuConversionStatus storageAccountSkuConversionStatus()"
  returns:
    description: "the storageAccountSkuConversionStatus value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.StorageAccountSkuConversionStatus?alt=com.azure.resourcemanager.storage.models.StorageAccountSkuConversionStatus&text=StorageAccountSkuConversionStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.validate()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.validate()"
  name: "validate()"
  nameWithType: "StorageAccountInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withAllowBlobPublicAccess(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withAllowBlobPublicAccess(Boolean allowBlobPublicAccess)"
  name: "withAllowBlobPublicAccess(Boolean allowBlobPublicAccess)"
  nameWithType: "StorageAccountInner.withAllowBlobPublicAccess(Boolean allowBlobPublicAccess)"
  summary: "Set the allowBlobPublicAccess property: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property."
  parameters:
  - description: "the allowBlobPublicAccess value to set."
    name: "allowBlobPublicAccess"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withAllowBlobPublicAccess(Boolean allowBlobPublicAccess)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withAllowCrossTenantReplication(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withAllowCrossTenantReplication(Boolean allowCrossTenantReplication)"
  name: "withAllowCrossTenantReplication(Boolean allowCrossTenantReplication)"
  nameWithType: "StorageAccountInner.withAllowCrossTenantReplication(Boolean allowCrossTenantReplication)"
  summary: "Set the allowCrossTenantReplication property: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property."
  parameters:
  - description: "the allowCrossTenantReplication value to set."
    name: "allowCrossTenantReplication"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withAllowCrossTenantReplication(Boolean allowCrossTenantReplication)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withAllowSharedKeyAccess(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withAllowSharedKeyAccess(Boolean allowSharedKeyAccess)"
  name: "withAllowSharedKeyAccess(Boolean allowSharedKeyAccess)"
  nameWithType: "StorageAccountInner.withAllowSharedKeyAccess(Boolean allowSharedKeyAccess)"
  summary: "Set the allowSharedKeyAccess property: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true."
  parameters:
  - description: "the allowSharedKeyAccess value to set."
    name: "allowSharedKeyAccess"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withAllowSharedKeyAccess(Boolean allowSharedKeyAccess)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withAllowedCopyScope(com.azure.resourcemanager.storage.models.AllowedCopyScope)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withAllowedCopyScope(AllowedCopyScope allowedCopyScope)"
  name: "withAllowedCopyScope(AllowedCopyScope allowedCopyScope)"
  nameWithType: "StorageAccountInner.withAllowedCopyScope(AllowedCopyScope allowedCopyScope)"
  summary: "Set the allowedCopyScope property: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet."
  parameters:
  - description: "the allowedCopyScope value to set."
    name: "allowedCopyScope"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.AllowedCopyScope?alt=com.azure.resourcemanager.storage.models.AllowedCopyScope&text=AllowedCopyScope\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withAllowedCopyScope(AllowedCopyScope allowedCopyScope)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withAzureFilesIdentityBasedAuthentication(com.azure.resourcemanager.storage.models.AzureFilesIdentityBasedAuthentication)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withAzureFilesIdentityBasedAuthentication(AzureFilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication)"
  name: "withAzureFilesIdentityBasedAuthentication(AzureFilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication)"
  nameWithType: "StorageAccountInner.withAzureFilesIdentityBasedAuthentication(AzureFilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication)"
  summary: "Set the azureFilesIdentityBasedAuthentication property: Provides the identity based authentication settings for Azure Files."
  parameters:
  - description: "the azureFilesIdentityBasedAuthentication value to set."
    name: "azureFilesIdentityBasedAuthentication"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.AzureFilesIdentityBasedAuthentication?alt=com.azure.resourcemanager.storage.models.AzureFilesIdentityBasedAuthentication&text=AzureFilesIdentityBasedAuthentication\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withAzureFilesIdentityBasedAuthentication(AzureFilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withDefaultToOAuthAuthentication(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withDefaultToOAuthAuthentication(Boolean defaultToOAuthAuthentication)"
  name: "withDefaultToOAuthAuthentication(Boolean defaultToOAuthAuthentication)"
  nameWithType: "StorageAccountInner.withDefaultToOAuthAuthentication(Boolean defaultToOAuthAuthentication)"
  summary: "Set the defaultToOAuthAuthentication property: A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property."
  parameters:
  - description: "the defaultToOAuthAuthentication value to set."
    name: "defaultToOAuthAuthentication"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withDefaultToOAuthAuthentication(Boolean defaultToOAuthAuthentication)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withDnsEndpointType(com.azure.resourcemanager.storage.models.DnsEndpointType)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withDnsEndpointType(DnsEndpointType dnsEndpointType)"
  name: "withDnsEndpointType(DnsEndpointType dnsEndpointType)"
  nameWithType: "StorageAccountInner.withDnsEndpointType(DnsEndpointType dnsEndpointType)"
  summary: "Set the dnsEndpointType property: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier."
  parameters:
  - description: "the dnsEndpointType value to set."
    name: "dnsEndpointType"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.DnsEndpointType?alt=com.azure.resourcemanager.storage.models.DnsEndpointType&text=DnsEndpointType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withDnsEndpointType(DnsEndpointType dnsEndpointType)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withEnableHttpsTrafficOnly(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withEnableHttpsTrafficOnly(Boolean enableHttpsTrafficOnly)"
  name: "withEnableHttpsTrafficOnly(Boolean enableHttpsTrafficOnly)"
  nameWithType: "StorageAccountInner.withEnableHttpsTrafficOnly(Boolean enableHttpsTrafficOnly)"
  summary: "Set the enableHttpsTrafficOnly property: Allows https traffic only to storage service if sets to true."
  parameters:
  - description: "the enableHttpsTrafficOnly value to set."
    name: "enableHttpsTrafficOnly"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withEnableHttpsTrafficOnly(Boolean enableHttpsTrafficOnly)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withEnableNfsV3(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withEnableNfsV3(Boolean enableNfsV3)"
  name: "withEnableNfsV3(Boolean enableNfsV3)"
  nameWithType: "StorageAccountInner.withEnableNfsV3(Boolean enableNfsV3)"
  summary: "Set the enableNfsV3 property: NFS 3.0 protocol support enabled if set to true."
  parameters:
  - description: "the enableNfsV3 value to set."
    name: "enableNfsV3"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withEnableNfsV3(Boolean enableNfsV3)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withExtendedLocation(com.azure.resourcemanager.storage.models.ExtendedLocation)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withExtendedLocation(ExtendedLocation extendedLocation)"
  name: "withExtendedLocation(ExtendedLocation extendedLocation)"
  nameWithType: "StorageAccountInner.withExtendedLocation(ExtendedLocation extendedLocation)"
  summary: "Set the extendedLocation property: The extendedLocation of the resource."
  parameters:
  - description: "the extendedLocation value to set."
    name: "extendedLocation"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.ExtendedLocation?alt=com.azure.resourcemanager.storage.models.ExtendedLocation&text=ExtendedLocation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withExtendedLocation(ExtendedLocation extendedLocation)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withIdentity(com.azure.resourcemanager.storage.models.Identity)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withIdentity(Identity identity)"
  name: "withIdentity(Identity identity)"
  nameWithType: "StorageAccountInner.withIdentity(Identity identity)"
  summary: "Set the identity property: The identity of the resource."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.Identity?alt=com.azure.resourcemanager.storage.models.Identity&text=Identity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withIdentity(Identity identity)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withImmutableStorageWithVersioning(com.azure.resourcemanager.storage.models.ImmutableStorageAccount)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withImmutableStorageWithVersioning(ImmutableStorageAccount immutableStorageWithVersioning)"
  name: "withImmutableStorageWithVersioning(ImmutableStorageAccount immutableStorageWithVersioning)"
  nameWithType: "StorageAccountInner.withImmutableStorageWithVersioning(ImmutableStorageAccount immutableStorageWithVersioning)"
  summary: "Set the immutableStorageWithVersioning property: The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default."
  parameters:
  - description: "the immutableStorageWithVersioning value to set."
    name: "immutableStorageWithVersioning"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.ImmutableStorageAccount?alt=com.azure.resourcemanager.storage.models.ImmutableStorageAccount&text=ImmutableStorageAccount\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withImmutableStorageWithVersioning(ImmutableStorageAccount immutableStorageWithVersioning)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withIsHnsEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withIsHnsEnabled(Boolean isHnsEnabled)"
  name: "withIsHnsEnabled(Boolean isHnsEnabled)"
  nameWithType: "StorageAccountInner.withIsHnsEnabled(Boolean isHnsEnabled)"
  summary: "Set the isHnsEnabled property: Account HierarchicalNamespace enabled if sets to true."
  parameters:
  - description: "the isHnsEnabled value to set."
    name: "isHnsEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withIsHnsEnabled(Boolean isHnsEnabled)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withIsLocalUserEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withIsLocalUserEnabled(Boolean isLocalUserEnabled)"
  name: "withIsLocalUserEnabled(Boolean isLocalUserEnabled)"
  nameWithType: "StorageAccountInner.withIsLocalUserEnabled(Boolean isLocalUserEnabled)"
  summary: "Set the isLocalUserEnabled property: Enables local users feature, if set to true."
  parameters:
  - description: "the isLocalUserEnabled value to set."
    name: "isLocalUserEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withIsLocalUserEnabled(Boolean isLocalUserEnabled)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withIsSftpEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withIsSftpEnabled(Boolean isSftpEnabled)"
  name: "withIsSftpEnabled(Boolean isSftpEnabled)"
  nameWithType: "StorageAccountInner.withIsSftpEnabled(Boolean isSftpEnabled)"
  summary: "Set the isSftpEnabled property: Enables Secure File Transfer Protocol, if set to true."
  parameters:
  - description: "the isSftpEnabled value to set."
    name: "isSftpEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withIsSftpEnabled(Boolean isSftpEnabled)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withLargeFileSharesState(com.azure.resourcemanager.storage.models.LargeFileSharesState)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withLargeFileSharesState(LargeFileSharesState largeFileSharesState)"
  name: "withLargeFileSharesState(LargeFileSharesState largeFileSharesState)"
  nameWithType: "StorageAccountInner.withLargeFileSharesState(LargeFileSharesState largeFileSharesState)"
  summary: "Set the largeFileSharesState property: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled."
  parameters:
  - description: "the largeFileSharesState value to set."
    name: "largeFileSharesState"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.LargeFileSharesState?alt=com.azure.resourcemanager.storage.models.LargeFileSharesState&text=LargeFileSharesState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withLargeFileSharesState(LargeFileSharesState largeFileSharesState)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "StorageAccountInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withMinimumTlsVersion(com.azure.resourcemanager.storage.models.MinimumTlsVersion)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withMinimumTlsVersion(MinimumTlsVersion minimumTlsVersion)"
  name: "withMinimumTlsVersion(MinimumTlsVersion minimumTlsVersion)"
  nameWithType: "StorageAccountInner.withMinimumTlsVersion(MinimumTlsVersion minimumTlsVersion)"
  summary: "Set the minimumTlsVersion property: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property."
  parameters:
  - description: "the minimumTlsVersion value to set."
    name: "minimumTlsVersion"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.MinimumTlsVersion?alt=com.azure.resourcemanager.storage.models.MinimumTlsVersion&text=MinimumTlsVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withMinimumTlsVersion(MinimumTlsVersion minimumTlsVersion)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withPublicNetworkAccess(com.azure.resourcemanager.storage.models.PublicNetworkAccess)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  name: "withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  nameWithType: "StorageAccountInner.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  summary: "Set the publicNetworkAccess property: Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
  parameters:
  - description: "the publicNetworkAccess value to set."
    name: "publicNetworkAccess"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.PublicNetworkAccess?alt=com.azure.resourcemanager.storage.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withRoutingPreference(com.azure.resourcemanager.storage.models.RoutingPreference)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withRoutingPreference(RoutingPreference routingPreference)"
  name: "withRoutingPreference(RoutingPreference routingPreference)"
  nameWithType: "StorageAccountInner.withRoutingPreference(RoutingPreference routingPreference)"
  summary: "Set the routingPreference property: Maintains information about the network routing choice opted by the user for data transfer."
  parameters:
  - description: "the routingPreference value to set."
    name: "routingPreference"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.RoutingPreference?alt=com.azure.resourcemanager.storage.models.RoutingPreference&text=RoutingPreference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withRoutingPreference(RoutingPreference routingPreference)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withStorageAccountSkuConversionStatus(com.azure.resourcemanager.storage.models.StorageAccountSkuConversionStatus)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withStorageAccountSkuConversionStatus(StorageAccountSkuConversionStatus storageAccountSkuConversionStatus)"
  name: "withStorageAccountSkuConversionStatus(StorageAccountSkuConversionStatus storageAccountSkuConversionStatus)"
  nameWithType: "StorageAccountInner.withStorageAccountSkuConversionStatus(StorageAccountSkuConversionStatus storageAccountSkuConversionStatus)"
  summary: "Set the storageAccountSkuConversionStatus property: This property is readOnly and is set by server during asynchronous storage account sku conversion operations."
  parameters:
  - description: "the storageAccountSkuConversionStatus value to set."
    name: "storageAccountSkuConversionStatus"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.StorageAccountSkuConversionStatus?alt=com.azure.resourcemanager.storage.models.StorageAccountSkuConversionStatus&text=StorageAccountSkuConversionStatus\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageAccountInner withStorageAccountSkuConversionStatus(StorageAccountSkuConversionStatus storageAccountSkuConversionStatus)"
  returns:
    description: "the StorageAccountInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.StorageAccountInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "StorageAccountInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public StorageAccountInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.StorageAccountInner?alt=com.azure.resourcemanager.storage.fluent.models.StorageAccountInner&text=StorageAccountInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.storage.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.14.0
