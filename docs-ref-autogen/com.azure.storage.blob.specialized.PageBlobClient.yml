### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.specialized.PageBlobClient
  id: PageBlobClient
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized
  children:
  - com.azure.storage.blob.specialized.PageBlobClient.MAX_PUT_PAGES_BYTES
  - com.azure.storage.blob.specialized.PageBlobClient.PAGE_BYTES
  - com.azure.storage.blob.specialized.PageBlobClient.clearPages(com.azure.storage.blob.models.PageRange)
  - com.azure.storage.blob.specialized.PageBlobClient.clearPagesWithResponse(com.azure.storage.blob.models.PageRange,com.azure.storage.blob.models.PageBlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.PageBlobClient.copyIncremental(java.lang.String,java.lang.String)
  - com.azure.storage.blob.specialized.PageBlobClient.copyIncrementalWithResponse(java.lang.String,java.lang.String,com.azure.core.http.RequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.PageBlobClient.create(long)
  - com.azure.storage.blob.specialized.PageBlobClient.create(long,boolean)
  - com.azure.storage.blob.specialized.PageBlobClient.createWithResponse(long,java.lang.Long,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.PageBlobClient.getBlobOutputStream(com.azure.storage.blob.models.PageRange)
  - com.azure.storage.blob.specialized.PageBlobClient.getBlobOutputStream(com.azure.storage.blob.models.PageRange,com.azure.storage.blob.models.BlobRequestConditions)
  - com.azure.storage.blob.specialized.PageBlobClient.getManagedDiskPageRangesDiff(com.azure.storage.blob.models.BlobRange,java.lang.String)
  - com.azure.storage.blob.specialized.PageBlobClient.getManagedDiskPageRangesDiffWithResponse(com.azure.storage.blob.models.BlobRange,java.lang.String,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.PageBlobClient.getPageRanges(com.azure.storage.blob.models.BlobRange)
  - com.azure.storage.blob.specialized.PageBlobClient.getPageRangesDiff(com.azure.storage.blob.models.BlobRange,java.lang.String)
  - com.azure.storage.blob.specialized.PageBlobClient.getPageRangesDiffWithResponse(com.azure.storage.blob.models.BlobRange,java.lang.String,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.PageBlobClient.resize(long)
  - com.azure.storage.blob.specialized.PageBlobClient.resizeWithResponse(long,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.PageBlobClient.updateSequenceNumber(com.azure.storage.blob.models.SequenceNumberActionType,java.lang.Long)
  - com.azure.storage.blob.specialized.PageBlobClient.updateSequenceNumberWithResponse(com.azure.storage.blob.models.SequenceNumberActionType,java.lang.Long,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.PageBlobClient.uploadPages(com.azure.storage.blob.models.PageRange,java.io.InputStream)
  - com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrl(com.azure.storage.blob.models.PageRange,java.lang.String,java.lang.Long)
  - com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrlWithResponse(com.azure.storage.blob.models.PageRange,java.lang.String,java.lang.Long,byte[],com.azure.storage.blob.models.PageBlobRequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.PageBlobClient.uploadPagesWithResponse(com.azure.storage.blob.models.PageRange,java.io.InputStream,byte[],com.azure.storage.blob.models.PageBlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  langs:
  - java
  name: PageBlobClient
  nameWithType: PageBlobClient
  fullName: com.azure.storage.blob.specialized.PageBlobClient
  type: Class
  package: com.azure.storage.blob.specialized
  summary: >-
    Client to a page blob. It may only be instantiated through a <xref uid="com.azure.storage.blob.specialized.SpecializedBlobClientBuilder" data-throw-if-not-resolved="false">SpecializedBlobClientBuilder</xref> or via the method <xref uid="com.azure.storage.blob.BlobClient.getPageBlobClient()" data-throw-if-not-resolved="false">BlobClient#getPageBlobClient()</xref>. This class does not hold any state about a particular blob, but is instead a convenient way of sending appropriate requests to the resource on the service.


    Please refer to the [Azure Docs][] for more information.



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/understanding-block-blobs--append-blobs--and-page-blobs
  syntax:
    content: public final class PageBlobClient extends BlobClientBase
  inheritance:
  - java.lang.Object
  - com.azure.storage.blob.specialized.BlobClientBase
  inheritedMembers:
  - com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)
  - com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
  - com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()
  - com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.delete()
  - com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String,boolean)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.exists()
  - com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)
  - com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)
  - com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()
  - com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.getAccountName()
  - com.azure.storage.blob.specialized.BlobClientBase.getBlobName()
  - com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()
  - com.azure.storage.blob.specialized.BlobClientBase.getContainerName()
  - com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()
  - com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()
  - com.azure.storage.blob.specialized.BlobClientBase.getProperties()
  - com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()
  - com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()
  - com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()
  - com.azure.storage.blob.specialized.BlobClientBase.openInputStream()
  - com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)
  - com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)
  - com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  - com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.undelete()
  - com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.specialized.PageBlobClient.MAX_PUT_PAGES_BYTES
  id: MAX_PUT_PAGES_BYTES
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: MAX_PUT_PAGES_BYTES
  nameWithType: PageBlobClient.MAX_PUT_PAGES_BYTES
  fullName: com.azure.storage.blob.specialized.PageBlobClient.MAX_PUT_PAGES_BYTES
  type: Field
  package: com.azure.storage.blob.specialized
  summary: Indicates the maximum number of bytes that may be sent in a call to putPage.
  syntax:
    content: public static final int MAX_PUT_PAGES_BYTES
    return:
      type: int
- uid: com.azure.storage.blob.specialized.PageBlobClient.PAGE_BYTES
  id: PAGE_BYTES
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: PAGE_BYTES
  nameWithType: PageBlobClient.PAGE_BYTES
  fullName: com.azure.storage.blob.specialized.PageBlobClient.PAGE_BYTES
  type: Field
  package: com.azure.storage.blob.specialized
  summary: Indicates the number of bytes in a page.
  syntax:
    content: public static final int PAGE_BYTES
    return:
      type: int
- uid: com.azure.storage.blob.specialized.PageBlobClient.PageBlobClient(com.azure.storage.blob.specialized.PageBlobAsyncClient)
  id: PageBlobClient(com.azure.storage.blob.specialized.PageBlobAsyncClient)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: PageBlobClient(PageBlobAsyncClient pageBlobAsyncClient)
  nameWithType: PageBlobClient.PageBlobClient(PageBlobAsyncClient pageBlobAsyncClient)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.PageBlobClient(PageBlobAsyncClient pageBlobAsyncClient)
  overload: com.azure.storage.blob.specialized.PageBlobClient.PageBlobClient*
  type: Constructor
  package: com.azure.storage.blob.specialized
  summary: Package-private constructor for use by <xref uid="com.azure.storage.blob.specialized.SpecializedBlobClientBuilder" data-throw-if-not-resolved="false">SpecializedBlobClientBuilder</xref>.
  syntax:
    content: " PageBlobClient(PageBlobAsyncClient pageBlobAsyncClient)"
    parameters:
    - id: pageBlobAsyncClient
      type: com.azure.storage.blob.specialized.PageBlobAsyncClient
      description: the async page blob client
- uid: com.azure.storage.blob.specialized.PageBlobClient.clearPages(com.azure.storage.blob.models.PageRange)
  id: clearPages(com.azure.storage.blob.models.PageRange)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: clearPages(PageRange pageRange)
  nameWithType: PageBlobClient.clearPages(PageRange pageRange)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.clearPages(PageRange pageRange)
  overload: com.azure.storage.blob.specialized.PageBlobClient.clearPages*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Frees the specified pages from the page blob. The size of the range must be a multiple of 512. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nPageRange pageRange = new PageRange()\n     .setStart(0)\n     .setEnd(511);\n \n PageBlobItem pageBlob = client.clearPages(pageRange);\n \n System.out.printf(\"Cleared page blob with sequence number %s%n\", pageBlob.getBlobSequenceNumber());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-page"
  syntax:
    content: public PageBlobItem clearPages(PageRange pageRange)
    parameters:
    - id: pageRange
      type: com.azure.storage.blob.models.PageRange
      description: >-
        A <xref uid="com.azure.storage.blob.models.PageRange" data-throw-if-not-resolved="false">PageRange</xref> object. Given that pages must be aligned with 512-byte boundaries, the start
         offset must be a modulus of 512 and the end offset must be a modulus of 512 - 1. Examples of valid byte ranges
         are 0-511, 512-1023, etc.
    return:
      type: com.azure.storage.blob.models.PageBlobItem
      description: The information of the cleared pages.
- uid: com.azure.storage.blob.specialized.PageBlobClient.clearPagesWithResponse(com.azure.storage.blob.models.PageRange,com.azure.storage.blob.models.PageBlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: clearPagesWithResponse(com.azure.storage.blob.models.PageRange,com.azure.storage.blob.models.PageBlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: clearPagesWithResponse(PageRange pageRange, PageBlobRequestConditions pageBlobRequestConditions, Duration timeout, Context context)
  nameWithType: PageBlobClient.clearPagesWithResponse(PageRange pageRange, PageBlobRequestConditions pageBlobRequestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.clearPagesWithResponse(PageRange pageRange, PageBlobRequestConditions pageBlobRequestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.PageBlobClient.clearPagesWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Frees the specified pages from the page blob. The size of the range must be a multiple of 512. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nPageRange pageRange = new PageRange()\n     .setStart(0)\n     .setEnd(511);\n PageBlobRequestConditions pageBlobRequestConditions = new PageBlobRequestConditions().setLeaseId(leaseId);\n Context context = new Context(key, value);\n \n PageBlobItem pageBlob = client\n     .clearPagesWithResponse(pageRange, pageBlobRequestConditions, timeout, context).getValue();\n \n System.out.printf(\"Cleared page blob with sequence number %s%n\", pageBlob.getBlobSequenceNumber());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-page"
  syntax:
    content: public Response<PageBlobItem> clearPagesWithResponse(PageRange pageRange, PageBlobRequestConditions pageBlobRequestConditions, Duration timeout, Context context)
    parameters:
    - id: pageRange
      type: com.azure.storage.blob.models.PageRange
      description: >-
        A <xref uid="com.azure.storage.blob.models.PageRange" data-throw-if-not-resolved="false">PageRange</xref> object. Given that pages must be aligned with 512-byte boundaries, the start
         offset must be a modulus of 512 and the end offset must be a modulus of 512 - 1. Examples of valid byte ranges
         are 0-511, 512-1023, etc.
    - id: pageBlobRequestConditions
      type: com.azure.storage.blob.models.PageBlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.PageBlobRequestConditions" data-throw-if-not-resolved="false">PageBlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.PageBlobItem>
      description: The information of the cleared pages.
- uid: com.azure.storage.blob.specialized.PageBlobClient.copyIncremental(java.lang.String,java.lang.String)
  id: copyIncremental(java.lang.String,java.lang.String)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: copyIncremental(String source, String snapshot)
  nameWithType: PageBlobClient.copyIncremental(String source, String snapshot)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.copyIncremental(String source, String snapshot)
  overload: com.azure.storage.blob.specialized.PageBlobClient.copyIncremental*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Begins an operation to start an incremental copy from one page blob's snapshot to this page blob. The snapshot is copied such that only the differential changes between the previously copied snapshot are transferred to the destination. The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual. For more information, see the Azure Docs [here][] and [here][here 1].\n\n**Code Samples**\n\n```java\nfinal String snapshot = \"copy snapshot\";\n CopyStatusType statusType = client.copyIncremental(url, snapshot);\n \n if (CopyStatusType.SUCCESS == statusType) {\n     System.out.println(\"Page blob copied successfully\");\n } else if (CopyStatusType.FAILED == statusType) {\n     System.out.println(\"Page blob copied failed\");\n } else if (CopyStatusType.ABORTED == statusType) {\n     System.out.println(\"Page blob copied aborted\");\n } else if (CopyStatusType.PENDING == statusType) {\n     System.out.println(\"Page blob copied pending\");\n }\n```\n\n\n[here]: https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob\n[here 1]: https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots"
  syntax:
    content: public CopyStatusType copyIncremental(String source, String snapshot)
    parameters:
    - id: source
      type: java.lang.String
      description: The source page blob.
    - id: snapshot
      type: java.lang.String
      description: The snapshot on the copy source.
    return:
      type: com.azure.storage.blob.models.CopyStatusType
      description: The copy status.
- uid: com.azure.storage.blob.specialized.PageBlobClient.copyIncrementalWithResponse(java.lang.String,java.lang.String,com.azure.core.http.RequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: copyIncrementalWithResponse(java.lang.String,java.lang.String,com.azure.core.http.RequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: copyIncrementalWithResponse(String source, String snapshot, RequestConditions modifiedRequestConditions, Duration timeout, Context context)
  nameWithType: PageBlobClient.copyIncrementalWithResponse(String source, String snapshot, RequestConditions modifiedRequestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.copyIncrementalWithResponse(String source, String snapshot, RequestConditions modifiedRequestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.PageBlobClient.copyIncrementalWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Begins an operation to start an incremental copy from one page blob's snapshot to this page blob. The snapshot is copied such that only the differential changes between the previously copied snapshot are transferred to the destination. The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual. For more information, see the Azure Docs [here][] and [here][here 1].\n\n**Code Samples**\n\n```java\nfinal String snapshot = \"copy snapshot\";\n RequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfNoneMatch(\"snapshotMatch\");\n Context context = new Context(key, value);\n \n CopyStatusType statusType = client\n     .copyIncrementalWithResponse(url, snapshot, modifiedRequestConditions, timeout, context).getValue();\n \n if (CopyStatusType.SUCCESS == statusType) {\n     System.out.println(\"Page blob copied successfully\");\n } else if (CopyStatusType.FAILED == statusType) {\n     System.out.println(\"Page blob copied failed\");\n } else if (CopyStatusType.ABORTED == statusType) {\n     System.out.println(\"Page blob copied aborted\");\n } else if (CopyStatusType.PENDING == statusType) {\n     System.out.println(\"Page blob copied pending\");\n }\n```\n\n\n[here]: https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob\n[here 1]: https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots"
  syntax:
    content: public Response<CopyStatusType> copyIncrementalWithResponse(String source, String snapshot, RequestConditions modifiedRequestConditions, Duration timeout, Context context)
    parameters:
    - id: source
      type: java.lang.String
      description: The source page blob.
    - id: snapshot
      type: java.lang.String
      description: The snapshot on the copy source.
    - id: modifiedRequestConditions
      type: com.azure.core.http.RequestConditions
      description: >-
        Standard HTTP Access conditions related to the modification of data. ETag and
         LastModifiedTime are used to construct conditions related to when the blob was changed relative to the given
         request. The request will fail if the specified condition is not satisfied.
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.CopyStatusType>
      description: The copy status.
- uid: com.azure.storage.blob.specialized.PageBlobClient.create(long)
  id: create(long)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: create(long size)
  nameWithType: PageBlobClient.create(long size)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.create(long size)
  overload: com.azure.storage.blob.specialized.PageBlobClient.create*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Creates a page blob of the specified length. By default this method will not overwrite an existing blob. Call PutPage to upload data data to a page blob. For more information, see the [Azure Docs][].


    **Code Samples**


    ```java

    PageBlobItem pageBlob = client.create(size);
     System.out.printf("Created page blob with sequence number %s%n", pageBlob.getBlobSequenceNumber());
    ```



    [Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-blob
  syntax:
    content: public PageBlobItem create(long size)
    parameters:
    - id: size
      type: long
      description: >-
        Specifies the maximum size for the page blob, up to 8 TB. The page blob size must be aligned to a
         512-byte boundary.
    return:
      type: com.azure.storage.blob.models.PageBlobItem
      description: The information of the created page blob.
- uid: com.azure.storage.blob.specialized.PageBlobClient.create(long,boolean)
  id: create(long,boolean)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: create(long size, boolean overwrite)
  nameWithType: PageBlobClient.create(long size, boolean overwrite)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.create(long size, boolean overwrite)
  overload: com.azure.storage.blob.specialized.PageBlobClient.create*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Creates a page blob of the specified length. Call PutPage to upload data data to a page blob. For more information, see the [Azure Docs][].


    **Code Samples**


    ```java

    boolean overwrite = false; // Default value
     PageBlobItem pageBlob = client.create(size, overwrite);
     System.out.printf("Created page blob with sequence number %s%n", pageBlob.getBlobSequenceNumber());
    ```



    [Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-blob
  syntax:
    content: public PageBlobItem create(long size, boolean overwrite)
    parameters:
    - id: size
      type: long
      description: >-
        Specifies the maximum size for the page blob, up to 8 TB. The page blob size must be aligned to a
         512-byte boundary.
    - id: overwrite
      type: boolean
      description: Whether or not to overwrite, should data exist on the blob.
    return:
      type: com.azure.storage.blob.models.PageBlobItem
      description: The information of the created page blob.
- uid: com.azure.storage.blob.specialized.PageBlobClient.createWithResponse(long,java.lang.Long,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: createWithResponse(long,java.lang.Long,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: createWithResponse(long size, Long sequenceNumber, BlobHttpHeaders headers, Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: PageBlobClient.createWithResponse(long size, Long sequenceNumber, BlobHttpHeaders headers, Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.createWithResponse(long size, Long sequenceNumber, BlobHttpHeaders headers, Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.PageBlobClient.createWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Creates a page blob of the specified length. Call PutPage to upload data data to a page blob. For more information, see the [Azure Docs][].\n\nTo avoid overwriting, pass \"\\*\" to <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions.setIfNoneMatch(java.lang.String)\" data-throw-if-not-resolved=\"false\">BlobRequestConditions#setIfNoneMatch(String)</xref>.\n\n**Code Samples**\n\n```java\nBlobHttpHeaders headers = new BlobHttpHeaders()\n     .setContentLanguage(\"en-US\")\n     .setContentType(\"binary\");\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n Context context = new Context(key, value);\n \n PageBlobItem pageBlob = client\n     .createWithResponse(size, sequenceNumber, headers, metadata, blobRequestConditions, timeout, context)\n     .getValue();\n \n System.out.printf(\"Created page blob with sequence number %s%n\", pageBlob.getBlobSequenceNumber());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-blob"
  syntax:
    content: public Response<PageBlobItem> createWithResponse(long size, Long sequenceNumber, BlobHttpHeaders headers, Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
    parameters:
    - id: size
      type: long
      description: >-
        Specifies the maximum size for the page blob, up to 8 TB. The page blob size must be aligned to a
         512-byte boundary.
    - id: sequenceNumber
      type: java.lang.Long
      description: >-
        A user-controlled value that you can use to track requests. The value of the sequence
         number must be between 0 and 2^63 - 1.The default value is 0.
    - id: headers
      type: com.azure.storage.blob.models.BlobHttpHeaders
      description: <xref uid="com.azure.storage.blob.models.BlobHttpHeaders" data-throw-if-not-resolved="false">BlobHttpHeaders</xref>
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the blob.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.PageBlobItem>
      description: The information of the created page blob.
- uid: com.azure.storage.blob.specialized.PageBlobClient.getBlobOutputStream(com.azure.storage.blob.models.PageRange)
  id: getBlobOutputStream(com.azure.storage.blob.models.PageRange)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: getBlobOutputStream(PageRange pageRange)
  nameWithType: PageBlobClient.getBlobOutputStream(PageRange pageRange)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getBlobOutputStream(PageRange pageRange)
  overload: com.azure.storage.blob.specialized.PageBlobClient.getBlobOutputStream*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Creates and opens an output stream to write data to the page blob. If the blob already exists on the service, it will be overwritten.
  syntax:
    content: public BlobOutputStream getBlobOutputStream(PageRange pageRange)
    parameters:
    - id: pageRange
      type: com.azure.storage.blob.models.PageRange
      description: >-
        A <xref uid="com.azure.storage.blob.models.PageRange" data-throw-if-not-resolved="false">PageRange</xref> object. Given that pages must be aligned with 512-byte boundaries, the start
         offset must be a modulus of 512 and the end offset must be a modulus of 512 - 1. Examples of valid byte ranges
         are 0-511, 512-1023, etc.
    return:
      type: com.azure.storage.blob.specialized.BlobOutputStream
      description: A <xref uid="com.azure.storage.blob.specialized.BlobOutputStream" data-throw-if-not-resolved="false">BlobOutputStream</xref> object used to write data to the blob.
- uid: com.azure.storage.blob.specialized.PageBlobClient.getBlobOutputStream(com.azure.storage.blob.models.PageRange,com.azure.storage.blob.models.BlobRequestConditions)
  id: getBlobOutputStream(com.azure.storage.blob.models.PageRange,com.azure.storage.blob.models.BlobRequestConditions)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: getBlobOutputStream(PageRange pageRange, BlobRequestConditions requestConditions)
  nameWithType: PageBlobClient.getBlobOutputStream(PageRange pageRange, BlobRequestConditions requestConditions)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getBlobOutputStream(PageRange pageRange, BlobRequestConditions requestConditions)
  overload: com.azure.storage.blob.specialized.PageBlobClient.getBlobOutputStream*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Creates and opens an output stream to write data to the page blob. If the blob already exists on the service, it will be overwritten.
  syntax:
    content: public BlobOutputStream getBlobOutputStream(PageRange pageRange, BlobRequestConditions requestConditions)
    parameters:
    - id: pageRange
      type: com.azure.storage.blob.models.PageRange
      description: >-
        A <xref uid="com.azure.storage.blob.models.PageRange" data-throw-if-not-resolved="false">PageRange</xref> object. Given that pages must be aligned with 512-byte boundaries, the start
         offset must be a modulus of 512 and the end offset must be a modulus of 512 - 1. Examples of valid byte ranges
         are 0-511, 512-1023, etc.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: >-
        A <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref> object that represents the access conditions for the
         blob.
    return:
      type: com.azure.storage.blob.specialized.BlobOutputStream
      description: A <xref uid="com.azure.storage.blob.specialized.BlobOutputStream" data-throw-if-not-resolved="false">BlobOutputStream</xref> object used to write data to the blob.
- uid: com.azure.storage.blob.specialized.PageBlobClient.getManagedDiskPageRangesDiff(com.azure.storage.blob.models.BlobRange,java.lang.String)
  id: getManagedDiskPageRangesDiff(com.azure.storage.blob.models.BlobRange,java.lang.String)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: getManagedDiskPageRangesDiff(BlobRange blobRange, String prevSnapshotUrl)
  nameWithType: PageBlobClient.getManagedDiskPageRangesDiff(BlobRange blobRange, String prevSnapshotUrl)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getManagedDiskPageRangesDiff(BlobRange blobRange, String prevSnapshotUrl)
  overload: com.azure.storage.blob.specialized.PageBlobClient.getManagedDiskPageRangesDiff*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "This API only works for managed disk accounts.\n\nGets the collection of page ranges that differ between a specified snapshot and this page blob. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(offset);\n final String prevSnapshotUrl = \"previous snapshot url\";\n PageList pageList = client.getPageRangesDiff(blobRange, prevSnapshotUrl);\n \n System.out.println(\"Valid Page Ranges are:\");\n for (PageRange pageRange : pageList.getPageRange()) {\n     System.out.printf(\"Start: %s, End: %s%n\", pageRange.getStart(), pageRange.getEnd());\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-page-ranges"
  syntax:
    content: public PageList getManagedDiskPageRangesDiff(BlobRange blobRange, String prevSnapshotUrl)
    parameters:
    - id: blobRange
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: prevSnapshotUrl
      type: java.lang.String
      description: >-
        Specifies the URL of a previous snapshot of the target blob. Specifies that the
         response will contain only pages that were changed between target blob and previous snapshot. Changed pages
         include both updated and cleared pages. The target blob may be a snapshot, as long as the snapshot specified by
         prevsnapshot is the older of the two.
    return:
      type: com.azure.storage.blob.models.PageList
      description: All the different page ranges.
- uid: com.azure.storage.blob.specialized.PageBlobClient.getManagedDiskPageRangesDiffWithResponse(com.azure.storage.blob.models.BlobRange,java.lang.String,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: getManagedDiskPageRangesDiffWithResponse(com.azure.storage.blob.models.BlobRange,java.lang.String,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: getManagedDiskPageRangesDiffWithResponse(BlobRange blobRange, String prevSnapshotUrl, BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: PageBlobClient.getManagedDiskPageRangesDiffWithResponse(BlobRange blobRange, String prevSnapshotUrl, BlobRequestConditions requestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getManagedDiskPageRangesDiffWithResponse(BlobRange blobRange, String prevSnapshotUrl, BlobRequestConditions requestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.PageBlobClient.getManagedDiskPageRangesDiffWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "This API only works for managed disk accounts.\n\nGets the collection of page ranges that differ between a specified snapshot and this page blob. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(offset);\n final String prevSnapshotUrl = \"previous snapshot url\";\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n Context context = new Context(key, value);\n \n PageList pageList = client\n     .getPageRangesDiffWithResponse(blobRange, prevSnapshotUrl, blobRequestConditions, timeout, context).getValue();\n \n System.out.println(\"Valid Page Ranges are:\");\n for (PageRange pageRange : pageList.getPageRange()) {\n     System.out.printf(\"Start: %s, End: %s%n\", pageRange.getStart(), pageRange.getEnd());\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-page-ranges"
  syntax:
    content: public Response<PageList> getManagedDiskPageRangesDiffWithResponse(BlobRange blobRange, String prevSnapshotUrl, BlobRequestConditions requestConditions, Duration timeout, Context context)
    parameters:
    - id: blobRange
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: prevSnapshotUrl
      type: java.lang.String
      description: >-
        Specifies the URL of a previous snapshot of the target blob. Specifies that the
         response will contain only pages that were changed between target blob and previous snapshot. Changed pages
         include both updated and cleared pages. The target blob may be a snapshot, as long as the snapshot specified by
         prevsnapshot is the older of the two.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.PageList>
      description: All the different page ranges.
- uid: com.azure.storage.blob.specialized.PageBlobClient.getPageRanges(com.azure.storage.blob.models.BlobRange)
  id: getPageRanges(com.azure.storage.blob.models.BlobRange)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: getPageRanges(BlobRange blobRange)
  nameWithType: PageBlobClient.getPageRanges(BlobRange blobRange)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getPageRanges(BlobRange blobRange)
  overload: com.azure.storage.blob.specialized.PageBlobClient.getPageRanges*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Returns the list of valid page ranges for a page blob or snapshot of a page blob. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(offset);\n PageList pageList = client.getPageRanges(blobRange);\n \n System.out.println(\"Valid Page Ranges are:\");\n for (PageRange pageRange : pageList.getPageRange()) {\n     System.out.printf(\"Start: %s, End: %s%n\", pageRange.getStart(), pageRange.getEnd());\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-page-ranges"
  syntax:
    content: public PageList getPageRanges(BlobRange blobRange)
    parameters:
    - id: blobRange
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    return:
      type: com.azure.storage.blob.models.PageList
      description: The information of the cleared pages.
- uid: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesDiff(com.azure.storage.blob.models.BlobRange,java.lang.String)
  id: getPageRangesDiff(com.azure.storage.blob.models.BlobRange,java.lang.String)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: getPageRangesDiff(BlobRange blobRange, String prevSnapshot)
  nameWithType: PageBlobClient.getPageRangesDiff(BlobRange blobRange, String prevSnapshot)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesDiff(BlobRange blobRange, String prevSnapshot)
  overload: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesDiff*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Gets the collection of page ranges that differ between a specified snapshot and this page blob. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(offset);\n final String prevSnapshot = \"previous snapshot\";\n PageList pageList = client.getPageRangesDiff(blobRange, prevSnapshot);\n \n System.out.println(\"Valid Page Ranges are:\");\n for (PageRange pageRange : pageList.getPageRange()) {\n     System.out.printf(\"Start: %s, End: %s%n\", pageRange.getStart(), pageRange.getEnd());\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-page-ranges"
  syntax:
    content: public PageList getPageRangesDiff(BlobRange blobRange, String prevSnapshot)
    parameters:
    - id: blobRange
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: prevSnapshot
      type: java.lang.String
      description: >-
        Specifies that the response will contain only pages that were changed between target blob and
         previous snapshot. Changed pages include both updated and cleared pages. The target blob may be a snapshot, as
         long as the snapshot specified by prevsnapshot is the older of the two.
    return:
      type: com.azure.storage.blob.models.PageList
      description: All the different page ranges.
- uid: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesDiffWithResponse(com.azure.storage.blob.models.BlobRange,java.lang.String,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: getPageRangesDiffWithResponse(com.azure.storage.blob.models.BlobRange,java.lang.String,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: getPageRangesDiffWithResponse(BlobRange blobRange, String prevSnapshot, BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: PageBlobClient.getPageRangesDiffWithResponse(BlobRange blobRange, String prevSnapshot, BlobRequestConditions requestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesDiffWithResponse(BlobRange blobRange, String prevSnapshot, BlobRequestConditions requestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesDiffWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "This API only works for managed disk accounts.\n\nGets the collection of page ranges that differ between a specified snapshot and this page blob. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(offset);\n final String prevSnapshot = \"previous snapshot\";\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n Context context = new Context(key, value);\n \n PageList pageList = client\n     .getPageRangesDiffWithResponse(blobRange, prevSnapshot, blobRequestConditions, timeout, context).getValue();\n \n System.out.println(\"Valid Page Ranges are:\");\n for (PageRange pageRange : pageList.getPageRange()) {\n     System.out.printf(\"Start: %s, End: %s%n\", pageRange.getStart(), pageRange.getEnd());\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-page-ranges"
  syntax:
    content: public Response<PageList> getPageRangesDiffWithResponse(BlobRange blobRange, String prevSnapshot, BlobRequestConditions requestConditions, Duration timeout, Context context)
    parameters:
    - id: blobRange
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: prevSnapshot
      type: java.lang.String
      description: >-
        Specifies that the response will contain only pages that were changed between target blob and
         previous snapshot. Changed pages include both updated and cleared pages. The target blob may be a snapshot, as
         long as the snapshot specified by prevsnapshot is the older of the two.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.PageList>
      description: All the different page ranges.
- uid: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: getPageRangesWithResponse(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: getPageRangesWithResponse(BlobRange blobRange, BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: PageBlobClient.getPageRangesWithResponse(BlobRange blobRange, BlobRequestConditions requestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse(BlobRange blobRange, BlobRequestConditions requestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Returns the list of valid page ranges for a page blob or snapshot of a page blob. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(offset);\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n Context context = new Context(key, value);\n \n PageList pageList = client\n     .getPageRangesWithResponse(blobRange, blobRequestConditions, timeout, context).getValue();\n \n System.out.println(\"Valid Page Ranges are:\");\n for (PageRange pageRange : pageList.getPageRange()) {\n     System.out.printf(\"Start: %s, End: %s%n\", pageRange.getStart(), pageRange.getEnd());\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-page-ranges"
  syntax:
    content: public Response<PageList> getPageRangesWithResponse(BlobRange blobRange, BlobRequestConditions requestConditions, Duration timeout, Context context)
    parameters:
    - id: blobRange
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.PageList>
      description: All the page ranges.
- uid: com.azure.storage.blob.specialized.PageBlobClient.resize(long)
  id: resize(long)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: resize(long size)
  nameWithType: PageBlobClient.resize(long size)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.resize(long size)
  overload: com.azure.storage.blob.specialized.PageBlobClient.resize*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Resizes the page blob to the specified size (which must be a multiple of 512). For more information, see the [Azure Docs][].


    **Code Samples**


    ```java

    PageBlobItem pageBlob = client.resize(size);
     System.out.printf("Page blob resized with sequence number %s%n", pageBlob.getBlobSequenceNumber());
    ```



    [Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-properties
  syntax:
    content: public PageBlobItem resize(long size)
    parameters:
    - id: size
      type: long
      description: >-
        Resizes a page blob to the specified size. If the specified value is less than the current size of
         the blob, then all pages above the specified value are cleared.
    return:
      type: com.azure.storage.blob.models.PageBlobItem
      description: The resized page blob.
- uid: com.azure.storage.blob.specialized.PageBlobClient.resizeWithResponse(long,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: resizeWithResponse(long,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: resizeWithResponse(long size, BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: PageBlobClient.resizeWithResponse(long size, BlobRequestConditions requestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.resizeWithResponse(long size, BlobRequestConditions requestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.PageBlobClient.resizeWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Resizes the page blob to the specified size (which must be a multiple of 512). For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n Context context = new Context(key, value);\n \n PageBlobItem pageBlob = client\n     .resizeWithResponse(size, blobRequestConditions, timeout, context).getValue();\n System.out.printf(\"Page blob resized with sequence number %s%n\", pageBlob.getBlobSequenceNumber());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-properties"
  syntax:
    content: public Response<PageBlobItem> resizeWithResponse(long size, BlobRequestConditions requestConditions, Duration timeout, Context context)
    parameters:
    - id: size
      type: long
      description: >-
        Resizes a page blob to the specified size. If the specified value is less than the current size of
         the blob, then all pages above the specified value are cleared.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.PageBlobItem>
      description: The resized page blob.
- uid: com.azure.storage.blob.specialized.PageBlobClient.updateSequenceNumber(com.azure.storage.blob.models.SequenceNumberActionType,java.lang.Long)
  id: updateSequenceNumber(com.azure.storage.blob.models.SequenceNumberActionType,java.lang.Long)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: updateSequenceNumber(SequenceNumberActionType action, Long sequenceNumber)
  nameWithType: PageBlobClient.updateSequenceNumber(SequenceNumberActionType action, Long sequenceNumber)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.updateSequenceNumber(SequenceNumberActionType action, Long sequenceNumber)
  overload: com.azure.storage.blob.specialized.PageBlobClient.updateSequenceNumber*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Sets the page blob's sequence number. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nPageBlobItem pageBlob = client.updateSequenceNumber(SequenceNumberActionType.INCREMENT, size);\n \n System.out.printf(\"Page blob updated to sequence number %s%n\", pageBlob.getBlobSequenceNumber());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-properties"
  syntax:
    content: public PageBlobItem updateSequenceNumber(SequenceNumberActionType action, Long sequenceNumber)
    parameters:
    - id: action
      type: com.azure.storage.blob.models.SequenceNumberActionType
      description: Indicates how the service should modify the blob's sequence number.
    - id: sequenceNumber
      type: java.lang.Long
      description: >-
        The blob's sequence number. The sequence number is a user-controlled property that you can
         use to track requests and manage concurrency issues.
    return:
      type: com.azure.storage.blob.models.PageBlobItem
      description: The updated page blob.
- uid: com.azure.storage.blob.specialized.PageBlobClient.updateSequenceNumberWithResponse(com.azure.storage.blob.models.SequenceNumberActionType,java.lang.Long,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: updateSequenceNumberWithResponse(com.azure.storage.blob.models.SequenceNumberActionType,java.lang.Long,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: updateSequenceNumberWithResponse(SequenceNumberActionType action, Long sequenceNumber, BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: PageBlobClient.updateSequenceNumberWithResponse(SequenceNumberActionType action, Long sequenceNumber, BlobRequestConditions requestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.updateSequenceNumberWithResponse(SequenceNumberActionType action, Long sequenceNumber, BlobRequestConditions requestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.PageBlobClient.updateSequenceNumberWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Sets the page blob's sequence number. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n Context context = new Context(key, value);\n \n PageBlobItem pageBlob = client.updateSequenceNumberWithResponse(\n     SequenceNumberActionType.INCREMENT, size, blobRequestConditions, timeout, context).getValue();\n \n System.out.printf(\"Page blob updated to sequence number %s%n\", pageBlob.getBlobSequenceNumber());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-properties"
  syntax:
    content: public Response<PageBlobItem> updateSequenceNumberWithResponse(SequenceNumberActionType action, Long sequenceNumber, BlobRequestConditions requestConditions, Duration timeout, Context context)
    parameters:
    - id: action
      type: com.azure.storage.blob.models.SequenceNumberActionType
      description: Indicates how the service should modify the blob's sequence number.
    - id: sequenceNumber
      type: java.lang.Long
      description: >-
        The blob's sequence number. The sequence number is a user-controlled property that you can
         use to track requests and manage concurrency issues.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.PageBlobItem>
      description: The updated page blob.
- uid: com.azure.storage.blob.specialized.PageBlobClient.uploadPages(com.azure.storage.blob.models.PageRange,java.io.InputStream)
  id: uploadPages(com.azure.storage.blob.models.PageRange,java.io.InputStream)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: uploadPages(PageRange pageRange, InputStream body)
  nameWithType: PageBlobClient.uploadPages(PageRange pageRange, InputStream body)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.uploadPages(PageRange pageRange, InputStream body)
  overload: com.azure.storage.blob.specialized.PageBlobClient.uploadPages*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Writes one or more pages to the page blob. The write size must be a multiple of 512. For more information, see the [Azure Docs][].\n\nNote that the data passed must be replayable if retries are enabled (the default). In other words, the `Flux` must produce the same data each time it is subscribed to.\n\n**Code Samples**\n\n```java\nPageRange pageRange = new PageRange()\n     .setStart(0)\n     .setEnd(511);\n InputStream dataStream = new ByteArrayInputStream(data.getBytes(StandardCharsets.UTF_8));\n \n PageBlobItem pageBlob = client.uploadPages(pageRange, dataStream);\n System.out.printf(\"Uploaded page blob with sequence number %s%n\", pageBlob.getBlobSequenceNumber());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-page"
  syntax:
    content: public PageBlobItem uploadPages(PageRange pageRange, InputStream body)
    parameters:
    - id: pageRange
      type: com.azure.storage.blob.models.PageRange
      description: >-
        A <xref uid="com.azure.storage.blob.models.PageRange" data-throw-if-not-resolved="false">PageRange</xref> object. Given that pages must be aligned with 512-byte boundaries, the start
         offset must be a modulus of 512 and the end offset must be a modulus of 512 - 1. Examples of valid byte ranges
         are 0-511, 512-1023, etc.
    - id: body
      type: java.io.InputStream
      description: The data to upload.
    return:
      type: com.azure.storage.blob.models.PageBlobItem
      description: The information of the uploaded pages.
- uid: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrl(com.azure.storage.blob.models.PageRange,java.lang.String,java.lang.Long)
  id: uploadPagesFromUrl(com.azure.storage.blob.models.PageRange,java.lang.String,java.lang.Long)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: uploadPagesFromUrl(PageRange range, String sourceUrl, Long sourceOffset)
  nameWithType: PageBlobClient.uploadPagesFromUrl(PageRange range, String sourceUrl, Long sourceOffset)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrl(PageRange range, String sourceUrl, Long sourceOffset)
  overload: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrl*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Writes one or more pages from the source page blob to this page blob. The write size must be a multiple of 512. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nPageRange pageRange = new PageRange()\n     .setStart(0)\n     .setEnd(511);\n \n PageBlobItem pageBlob = client.uploadPagesFromUrl(pageRange, url, sourceOffset);\n \n System.out.printf(\"Uploaded page blob from URL with sequence number %s%n\", pageBlob.getBlobSequenceNumber());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-page"
  syntax:
    content: public PageBlobItem uploadPagesFromUrl(PageRange range, String sourceUrl, Long sourceOffset)
    parameters:
    - id: range
      type: com.azure.storage.blob.models.PageRange
      description: >-
        A <xref uid="com.azure.storage.blob.models.PageRange" data-throw-if-not-resolved="false">PageRange</xref> object. Given that pages must be aligned with 512-byte boundaries, the start
         offset must be a modulus of 512 and the end offset must be a modulus of 512 - 1. Examples of valid byte ranges
         are 0-511, 512-1023, etc.
    - id: sourceUrl
      type: java.lang.String
      description: >-
        The url to the blob that will be the source of the copy.  A source blob in the same storage
         account can be authenticated via Shared Key. However, if the source is a blob in another account, the source blob
         must either be public or must be authenticated via a shared access signature. If the source blob is public, no
         authentication is required to perform the operation.
    - id: sourceOffset
      type: java.lang.Long
      description: >-
        The source offset to copy from.  Pass null or 0 to copy from the beginning of source page
         blob.
    return:
      type: com.azure.storage.blob.models.PageBlobItem
      description: The information of the uploaded pages.
- uid: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrlWithResponse(com.azure.storage.blob.models.PageRange,java.lang.String,java.lang.Long,byte[],com.azure.storage.blob.models.PageBlobRequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: uploadPagesFromUrlWithResponse(com.azure.storage.blob.models.PageRange,java.lang.String,java.lang.Long,byte[],com.azure.storage.blob.models.PageBlobRequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: uploadPagesFromUrlWithResponse(PageRange range, String sourceUrl, Long sourceOffset, byte[] sourceContentMd5, PageBlobRequestConditions destRequestConditions, BlobRequestConditions sourceRequestConditions, Duration timeout, Context context)
  nameWithType: PageBlobClient.uploadPagesFromUrlWithResponse(PageRange range, String sourceUrl, Long sourceOffset, byte[] sourceContentMd5, PageBlobRequestConditions destRequestConditions, BlobRequestConditions sourceRequestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrlWithResponse(PageRange range, String sourceUrl, Long sourceOffset, byte[] sourceContentMd5, PageBlobRequestConditions destRequestConditions, BlobRequestConditions sourceRequestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrlWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Writes one or more pages from the source page blob to this page blob. The write size must be a multiple of 512. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nPageRange pageRange = new PageRange()\n     .setStart(0)\n     .setEnd(511);\n InputStream dataStream = new ByteArrayInputStream(data.getBytes(StandardCharsets.UTF_8));\n byte[] sourceContentMD5 = new byte[512];\n PageBlobRequestConditions pageBlobRequestConditions = new PageBlobRequestConditions().setLeaseId(leaseId);\n BlobRequestConditions sourceRequestConditions = new BlobRequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(3));\n Context context = new Context(key, value);\n \n PageBlobItem pageBlob = client\n     .uploadPagesFromUrlWithResponse(pageRange, url, sourceOffset, sourceContentMD5, pageBlobRequestConditions,\n         sourceRequestConditions, timeout, context).getValue();\n \n System.out.printf(\"Uploaded page blob from URL with sequence number %s%n\", pageBlob.getBlobSequenceNumber());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-page"
  syntax:
    content: public Response<PageBlobItem> uploadPagesFromUrlWithResponse(PageRange range, String sourceUrl, Long sourceOffset, byte[] sourceContentMd5, PageBlobRequestConditions destRequestConditions, BlobRequestConditions sourceRequestConditions, Duration timeout, Context context)
    parameters:
    - id: range
      type: com.azure.storage.blob.models.PageRange
      description: >-
        The destination <xref uid="com.azure.storage.blob.models.PageRange" data-throw-if-not-resolved="false">PageRange</xref> range. Given that pages must be aligned with 512-byte boundaries,
         the start offset must be a modulus of 512 and the end offset must be a modulus of 512 - 1. Examples of valid byte
         ranges are 0-511, 512-1023, etc.
    - id: sourceUrl
      type: java.lang.String
      description: >-
        The url to the blob that will be the source of the copy.  A source blob in the same storage
         account can be authenticated via Shared Key. However, if the source is a blob in another account, the source blob
         must either be public or must be authenticated via a shared access signature. If the source blob is public, no
         authentication is required to perform the operation.
    - id: sourceOffset
      type: java.lang.Long
      description: The source offset to copy from.  Pass null or 0 to copy from the beginning of source blob.
    - id: sourceContentMd5
      type: byte[]
      description: >-
        An MD5 hash of the block content from the source blob. If specified, the service will
         calculate the MD5 of the received data and fail the request if it does not match the provided MD5.
    - id: destRequestConditions
      type: com.azure.storage.blob.models.PageBlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.PageBlobRequestConditions" data-throw-if-not-resolved="false">PageBlobRequestConditions</xref>
    - id: sourceRequestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.PageBlobItem>
      description: The information of the uploaded pages.
- uid: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesWithResponse(com.azure.storage.blob.models.PageRange,java.io.InputStream,byte[],com.azure.storage.blob.models.PageBlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: uploadPagesWithResponse(com.azure.storage.blob.models.PageRange,java.io.InputStream,byte[],com.azure.storage.blob.models.PageBlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.specialized.PageBlobClient
  langs:
  - java
  name: uploadPagesWithResponse(PageRange pageRange, InputStream body, byte[] contentMd5, PageBlobRequestConditions pageBlobRequestConditions, Duration timeout, Context context)
  nameWithType: PageBlobClient.uploadPagesWithResponse(PageRange pageRange, InputStream body, byte[] contentMd5, PageBlobRequestConditions pageBlobRequestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesWithResponse(PageRange pageRange, InputStream body, byte[] contentMd5, PageBlobRequestConditions pageBlobRequestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Writes one or more pages to the page blob. The write size must be a multiple of 512. For more information, see the [Azure Docs][].\n\nNote that the data passed must be replayable if retries are enabled (the default). In other words, the `Flux` must produce the same data each time it is subscribed to.\n\n**Code Samples**\n\n```java\nbyte[] md5 = MessageDigest.getInstance(\"MD5\").digest(\"data\".getBytes(StandardCharsets.UTF_8));\n PageRange pageRange = new PageRange()\n     .setStart(0)\n     .setEnd(511);\n InputStream dataStream = new ByteArrayInputStream(data.getBytes(StandardCharsets.UTF_8));\n PageBlobRequestConditions pageBlobRequestConditions = new PageBlobRequestConditions().setLeaseId(leaseId);\n Context context = new Context(key, value);\n \n PageBlobItem pageBlob = client\n     .uploadPagesWithResponse(pageRange, dataStream, md5, pageBlobRequestConditions, timeout, context).getValue();\n \n System.out.printf(\"Uploaded page blob with sequence number %s%n\", pageBlob.getBlobSequenceNumber());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-page"
  syntax:
    content: public Response<PageBlobItem> uploadPagesWithResponse(PageRange pageRange, InputStream body, byte[] contentMd5, PageBlobRequestConditions pageBlobRequestConditions, Duration timeout, Context context)
    parameters:
    - id: pageRange
      type: com.azure.storage.blob.models.PageRange
      description: >-
        A <xref uid="com.azure.storage.blob.models.PageRange" data-throw-if-not-resolved="false">PageRange</xref> object. Given that pages must be aligned with 512-byte boundaries, the start
         offset must be a modulus of 512 and the end offset must be a modulus of 512 - 1. Examples of valid byte ranges
         are 0-511, 512-1023, etc.
    - id: body
      type: java.io.InputStream
      description: The data to upload.
    - id: contentMd5
      type: byte[]
      description: >-
        An MD5 hash of the page content. This hash is used to verify the integrity of the page during
         transport. When this header is specified, the storage service compares the hash of the content that has arrived
         with this header value. Note that this MD5 hash is not stored with the blob. If the two hashes do not match, the
         operation will fail.
    - id: pageBlobRequestConditions
      type: com.azure.storage.blob.models.PageBlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.PageBlobRequestConditions" data-throw-if-not-resolved="false">PageBlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.PageBlobItem>
      description: The information of the uploaded pages.
references:
- uid: com.azure.storage.blob.specialized.PageBlobAsyncClient
  name: PageBlobAsyncClient
  nameWithType: PageBlobAsyncClient
  fullName: com.azure.storage.blob.specialized.PageBlobAsyncClient
- uid: com.azure.storage.blob.specialized.PageBlobClient.PageBlobClient*
  name: PageBlobClient
  nameWithType: PageBlobClient.PageBlobClient
  fullName: com.azure.storage.blob.specialized.PageBlobClient.PageBlobClient
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.PageRange
  name: PageRange
  nameWithType: PageRange
  fullName: com.azure.storage.blob.models.PageRange
- uid: com.azure.storage.blob.specialized.BlobOutputStream
  name: BlobOutputStream
  nameWithType: BlobOutputStream
  fullName: com.azure.storage.blob.specialized.BlobOutputStream
- uid: com.azure.storage.blob.specialized.PageBlobClient.getBlobOutputStream*
  name: getBlobOutputStream
  nameWithType: PageBlobClient.getBlobOutputStream
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getBlobOutputStream
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.BlobRequestConditions
  name: BlobRequestConditions
  nameWithType: BlobRequestConditions
  fullName: com.azure.storage.blob.models.BlobRequestConditions
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.azure.storage.blob.models.PageBlobItem
  name: PageBlobItem
  nameWithType: PageBlobItem
  fullName: com.azure.storage.blob.models.PageBlobItem
- uid: com.azure.storage.blob.specialized.PageBlobClient.create*
  name: create
  nameWithType: PageBlobClient.create
  fullName: com.azure.storage.blob.specialized.PageBlobClient.create
  package: com.azure.storage.blob.specialized
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.lang.Long
  spec.java:
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
- uid: com.azure.storage.blob.models.BlobHttpHeaders
  name: BlobHttpHeaders
  nameWithType: BlobHttpHeaders
  fullName: com.azure.storage.blob.models.BlobHttpHeaders
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.storage.blob.models.PageBlobItem>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.PageBlobItem
    name: PageBlobItem
    fullName: com.azure.storage.blob.models.PageBlobItem
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.PageBlobClient.createWithResponse*
  name: createWithResponse
  nameWithType: PageBlobClient.createWithResponse
  fullName: com.azure.storage.blob.specialized.PageBlobClient.createWithResponse
  package: com.azure.storage.blob.specialized
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: com.azure.storage.blob.specialized.PageBlobClient.uploadPages*
  name: uploadPages
  nameWithType: PageBlobClient.uploadPages
  fullName: com.azure.storage.blob.specialized.PageBlobClient.uploadPages
  package: com.azure.storage.blob.specialized
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.azure.storage.blob.models.PageBlobRequestConditions
  name: PageBlobRequestConditions
  nameWithType: PageBlobRequestConditions
  fullName: com.azure.storage.blob.models.PageBlobRequestConditions
- uid: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesWithResponse*
  name: uploadPagesWithResponse
  nameWithType: PageBlobClient.uploadPagesWithResponse
  fullName: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesWithResponse
  package: com.azure.storage.blob.specialized
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrl*
  name: uploadPagesFromUrl
  nameWithType: PageBlobClient.uploadPagesFromUrl
  fullName: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrl
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrlWithResponse*
  name: uploadPagesFromUrlWithResponse
  nameWithType: PageBlobClient.uploadPagesFromUrlWithResponse
  fullName: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrlWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.PageBlobClient.clearPages*
  name: clearPages
  nameWithType: PageBlobClient.clearPages
  fullName: com.azure.storage.blob.specialized.PageBlobClient.clearPages
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.PageBlobClient.clearPagesWithResponse*
  name: clearPagesWithResponse
  nameWithType: PageBlobClient.clearPagesWithResponse
  fullName: com.azure.storage.blob.specialized.PageBlobClient.clearPagesWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.BlobRange
  name: BlobRange
  nameWithType: BlobRange
  fullName: com.azure.storage.blob.models.BlobRange
- uid: com.azure.storage.blob.models.PageList
  name: PageList
  nameWithType: PageList
  fullName: com.azure.storage.blob.models.PageList
- uid: com.azure.storage.blob.specialized.PageBlobClient.getPageRanges*
  name: getPageRanges
  nameWithType: PageBlobClient.getPageRanges
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getPageRanges
  package: com.azure.storage.blob.specialized
- uid: com.azure.core.http.rest.Response<com.azure.storage.blob.models.PageList>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.PageList
    name: PageList
    fullName: com.azure.storage.blob.models.PageList
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse*
  name: getPageRangesWithResponse
  nameWithType: PageBlobClient.getPageRangesWithResponse
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesDiff*
  name: getPageRangesDiff
  nameWithType: PageBlobClient.getPageRangesDiff
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesDiff
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesDiffWithResponse*
  name: getPageRangesDiffWithResponse
  nameWithType: PageBlobClient.getPageRangesDiffWithResponse
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesDiffWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.PageBlobClient.getManagedDiskPageRangesDiff*
  name: getManagedDiskPageRangesDiff
  nameWithType: PageBlobClient.getManagedDiskPageRangesDiff
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getManagedDiskPageRangesDiff
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.PageBlobClient.getManagedDiskPageRangesDiffWithResponse*
  name: getManagedDiskPageRangesDiffWithResponse
  nameWithType: PageBlobClient.getManagedDiskPageRangesDiffWithResponse
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getManagedDiskPageRangesDiffWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.PageBlobClient.resize*
  name: resize
  nameWithType: PageBlobClient.resize
  fullName: com.azure.storage.blob.specialized.PageBlobClient.resize
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.PageBlobClient.resizeWithResponse*
  name: resizeWithResponse
  nameWithType: PageBlobClient.resizeWithResponse
  fullName: com.azure.storage.blob.specialized.PageBlobClient.resizeWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.SequenceNumberActionType
  name: SequenceNumberActionType
  nameWithType: SequenceNumberActionType
  fullName: com.azure.storage.blob.models.SequenceNumberActionType
- uid: com.azure.storage.blob.specialized.PageBlobClient.updateSequenceNumber*
  name: updateSequenceNumber
  nameWithType: PageBlobClient.updateSequenceNumber
  fullName: com.azure.storage.blob.specialized.PageBlobClient.updateSequenceNumber
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.PageBlobClient.updateSequenceNumberWithResponse*
  name: updateSequenceNumberWithResponse
  nameWithType: PageBlobClient.updateSequenceNumberWithResponse
  fullName: com.azure.storage.blob.specialized.PageBlobClient.updateSequenceNumberWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.CopyStatusType
  name: CopyStatusType
  nameWithType: CopyStatusType
  fullName: com.azure.storage.blob.models.CopyStatusType
- uid: com.azure.storage.blob.specialized.PageBlobClient.copyIncremental*
  name: copyIncremental
  nameWithType: PageBlobClient.copyIncremental
  fullName: com.azure.storage.blob.specialized.PageBlobClient.copyIncremental
  package: com.azure.storage.blob.specialized
- uid: com.azure.core.http.RequestConditions
  spec.java:
  - uid: com.azure.core.http.RequestConditions
    name: RequestConditions
    fullName: com.azure.core.http.RequestConditions
- uid: com.azure.core.http.rest.Response<com.azure.storage.blob.models.CopyStatusType>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.CopyStatusType
    name: CopyStatusType
    fullName: com.azure.storage.blob.models.CopyStatusType
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.PageBlobClient.copyIncrementalWithResponse*
  name: copyIncrementalWithResponse
  nameWithType: PageBlobClient.copyIncrementalWithResponse
  fullName: com.azure.storage.blob.specialized.PageBlobClient.copyIncrementalWithResponse
  package: com.azure.storage.blob.specialized
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.storage.blob.specialized.BlobClientBase
  name: BlobClientBase
  nameWithType: BlobClientBase
  fullName: com.azure.storage.blob.specialized.BlobClientBase
- uid: com.azure.storage.blob.specialized.BlobClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)
  name: BlobClientBase.generateSas(BlobServiceSasSignatureValues)
  nameWithType: BlobClientBase.generateSas(BlobServiceSasSignatureValues)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.storage.blob.specialized.BlobClientBase.exists()
  name: BlobClientBase.exists()
  nameWithType: BlobClientBase.exists()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.exists()
- uid: com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)
  name: BlobClientBase.setAccessTier(AccessTier)
  nameWithType: BlobClientBase.setAccessTier(AccessTier)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)
- uid: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  name: BlobClientBase.setHttpHeaders(BlobHttpHeaders)
  nameWithType: BlobClientBase.setHttpHeaders(BlobHttpHeaders)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
- uid: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.abortCopyFromUrlWithResponse(String,String,Duration,Context)
  nameWithType: BlobClientBase.abortCopyFromUrlWithResponse(String,String,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)
  name: BlobClientBase.download(OutputStream)
  nameWithType: BlobClientBase.download(OutputStream)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.createSnapshotWithResponse(Map<String,String>,BlobRequestConditions,Duration,Context)
  nameWithType: BlobClientBase.createSnapshotWithResponse(Map<String,String>,BlobRequestConditions,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.undeleteWithResponse(Duration,Context)
  nameWithType: BlobClientBase.undeleteWithResponse(Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()
  name: BlobClientBase.getBlobUrl()
  nameWithType: BlobClientBase.getBlobUrl()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.downloadWithResponse(OutputStream,BlobRange,DownloadRetryOptions,BlobRequestConditions,boolean,Duration,Context)
  nameWithType: BlobClientBase.downloadWithResponse(OutputStream,BlobRange,DownloadRetryOptions,BlobRequestConditions,boolean,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getBlobName()
  name: BlobClientBase.getBlobName()
  nameWithType: BlobClientBase.getBlobName()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getBlobName()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.getAccountInfoWithResponse(Duration,Context)
  nameWithType: BlobClientBase.getAccountInfoWithResponse(Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)
  name: BlobClientBase.copyFromUrl(String)
  nameWithType: BlobClientBase.copyFromUrl(String)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)
- uid: com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()
  name: BlobClientBase.getHttpPipeline()
  nameWithType: BlobClientBase.getHttpPipeline()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()
- uid: com.azure.storage.blob.specialized.BlobClientBase.openInputStream()
  name: BlobClientBase.openInputStream()
  nameWithType: BlobClientBase.openInputStream()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.openInputStream()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()
  name: BlobClientBase.getSnapshotId()
  nameWithType: BlobClientBase.getSnapshotId()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.setAccessTierWithResponse(AccessTier,RehydratePriority,String,Duration,Context)
  nameWithType: BlobClientBase.setAccessTierWithResponse(AccessTier,RehydratePriority,String,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Set<OpenOption>,Duration,Context)
  nameWithType: BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Set<OpenOption>,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.getProperties()
  name: BlobClientBase.getProperties()
  nameWithType: BlobClientBase.getProperties()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getProperties()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)
  name: BlobClientBase.abortCopyFromUrl(String)
  nameWithType: BlobClientBase.abortCopyFromUrl(String)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)
- uid: com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()
  name: BlobClientBase.getCustomerProvidedKey()
  nameWithType: BlobClientBase.getCustomerProvidedKey()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()
- uid: com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)
  name: BlobClientBase.generateUserDelegationSas(BlobServiceSasSignatureValues,UserDelegationKey)
  nameWithType: BlobClientBase.generateUserDelegationSas(BlobServiceSasSignatureValues,UserDelegationKey)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)
- uid: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.setHttpHeadersWithResponse(BlobHttpHeaders,BlobRequestConditions,Duration,Context)
  nameWithType: BlobClientBase.setHttpHeadersWithResponse(BlobHttpHeaders,BlobRequestConditions,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  name: BlobClientBase.setMetadata(Map<String,String>)
  nameWithType: BlobClientBase.setMetadata(Map<String,String>)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
- uid: com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.deleteWithResponse(DeleteSnapshotsOptionType,BlobRequestConditions,Duration,Context)
  nameWithType: BlobClientBase.deleteWithResponse(DeleteSnapshotsOptionType,BlobRequestConditions,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.undelete()
  name: BlobClientBase.undelete()
  nameWithType: BlobClientBase.undelete()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.undelete()
- uid: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
  name: BlobClientBase.beginCopy(String,Map<String,String>,AccessTier,RehydratePriority,RequestConditions,BlobRequestConditions,Duration)
  nameWithType: BlobClientBase.beginCopy(String,Map<String,String>,AccessTier,RehydratePriority,RequestConditions,BlobRequestConditions,Duration)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
- uid: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.copyFromUrlWithResponse(String,Map<String,String>,AccessTier,RequestConditions,BlobRequestConditions,Duration,Context)
  nameWithType: BlobClientBase.copyFromUrlWithResponse(String,Map<String,String>,AccessTier,RequestConditions,BlobRequestConditions,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)
  name: BlobClientBase.getSnapshotClient(String)
  nameWithType: BlobClientBase.getSnapshotClient(String)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)
- uid: com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.getPropertiesWithResponse(BlobRequestConditions,Duration,Context)
  nameWithType: BlobClientBase.getPropertiesWithResponse(BlobRequestConditions,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String,boolean)
  name: BlobClientBase.downloadToFile(String,boolean)
  nameWithType: BlobClientBase.downloadToFile(String,boolean)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String,boolean)
- uid: com.azure.storage.blob.specialized.BlobClientBase.delete()
  name: BlobClientBase.delete()
  nameWithType: BlobClientBase.delete()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.delete()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getAccountName()
  name: BlobClientBase.getAccountName()
  nameWithType: BlobClientBase.getAccountName()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getAccountName()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()
  name: BlobClientBase.getServiceVersion()
  nameWithType: BlobClientBase.getServiceVersion()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()
- uid: com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()
  name: BlobClientBase.createSnapshot()
  nameWithType: BlobClientBase.createSnapshot()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getContainerName()
  name: BlobClientBase.getContainerName()
  nameWithType: BlobClientBase.getContainerName()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getContainerName()
- uid: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()
  name: BlobClientBase.getAccountInfo()
  nameWithType: BlobClientBase.getAccountInfo()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()
- uid: com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()
  name: BlobClientBase.isSnapshot()
  nameWithType: BlobClientBase.isSnapshot()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()
- uid: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)
  name: BlobClientBase.beginCopy(String,Duration)
  nameWithType: BlobClientBase.beginCopy(String,Duration)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Duration,Context)
  nameWithType: BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.setMetadataWithResponse(Map<String,String>,BlobRequestConditions,Duration,Context)
  nameWithType: BlobClientBase.setMetadataWithResponse(Map<String,String>,BlobRequestConditions,Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)
  name: BlobClientBase.openInputStream(BlobRange,BlobRequestConditions)
  nameWithType: BlobClientBase.openInputStream(BlobRange,BlobRequestConditions)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)
  name: BlobClientBase.downloadToFile(String)
  nameWithType: BlobClientBase.downloadToFile(String)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)
- uid: com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)
  name: BlobClientBase.existsWithResponse(Duration,Context)
  nameWithType: BlobClientBase.existsWithResponse(Duration,Context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: String,String>,BlobRequestConditions,Duration,Context)
  nameWithType: String,String>,BlobRequestConditions,Duration,Context)
  fullName: java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map
  name: BlobClientBase.createSnapshotWithResponse(Map
  nameWithType: BlobClientBase.createSnapshotWithResponse(Map
  fullName: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set
  name: BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Set
  nameWithType: BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Set
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set
- uid: java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
  name: OpenOption>,Duration,Context)
  nameWithType: OpenOption>,Duration,Context)
  fullName: java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
- uid: java.lang.String,java.lang.String>)
  name: String,String>)
  nameWithType: String,String>)
  fullName: java.lang.String,java.lang.String>)
- uid: com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map
  name: BlobClientBase.setMetadata(Map
  nameWithType: BlobClientBase.setMetadata(Map
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map
- uid: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map
  name: BlobClientBase.beginCopy(String,Map
  nameWithType: BlobClientBase.beginCopy(String,Map
  fullName: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map
- uid: java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
  name: String,String>,AccessTier,RehydratePriority,RequestConditions,BlobRequestConditions,Duration)
  nameWithType: String,String>,AccessTier,RehydratePriority,RequestConditions,BlobRequestConditions,Duration)
  fullName: java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
- uid: java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  name: String,String>,AccessTier,RequestConditions,BlobRequestConditions,Duration,Context)
  nameWithType: String,String>,AccessTier,RequestConditions,BlobRequestConditions,Duration,Context)
  fullName: java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
- uid: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map
  name: BlobClientBase.copyFromUrlWithResponse(String,Map
  nameWithType: BlobClientBase.copyFromUrlWithResponse(String,Map
  fullName: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map
- uid: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map
  name: BlobClientBase.setMetadataWithResponse(Map
  nameWithType: BlobClientBase.setMetadataWithResponse(Map
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map
