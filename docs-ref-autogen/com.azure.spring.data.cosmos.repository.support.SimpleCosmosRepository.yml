### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository"
fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>"
name: "SimpleCosmosRepository<T,ID>"
nameWithType: "SimpleCosmosRepository<T,ID>"
summary: "Repository class for simple Cosmos operation"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **SimpleCosmosRepository<T,ID>**</br> implements <xref href=\"com.azure.spring.data.cosmos.repository.CosmosRepository?alt=com.azure.spring.data.cosmos.repository.CosmosRepository&text=CosmosRepository\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.SimpleCosmosRepository(com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>,com.azure.spring.data.cosmos.core.CosmosOperations)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.SimpleCosmosRepository(CosmosEntityInformation<T,ID> metadata, CosmosOperations dbOperations)"
  name: "SimpleCosmosRepository(CosmosEntityInformation<T,ID> metadata, CosmosOperations dbOperations)"
  nameWithType: "SimpleCosmosRepository<T,ID>.SimpleCosmosRepository(CosmosEntityInformation<T,ID> metadata, CosmosOperations dbOperations)"
  summary: "Initialization"
  parameters:
  - description: "for cosmos entity information"
    name: "metadata"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation?alt=com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation&text=CosmosEntityInformation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "for cosmosDB operation"
    name: "dbOperations"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.CosmosOperations?alt=com.azure.spring.data.cosmos.core.CosmosOperations&text=CosmosOperations\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SimpleCosmosRepository(CosmosEntityInformation<T,ID> metadata, CosmosOperations dbOperations)"
  desc: "Initialization"
methods:
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.count()"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.count()"
  name: "count()"
  nameWithType: "SimpleCosmosRepository<T,ID>.count()"
  summary: "return count of documents in one container without partitions"
  syntax: "public long count()"
  desc: "return count of documents in one container without partitions"
  returns:
    description: "count of documents in one container without partitions"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.delete(T)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.delete(T entity)"
  name: "delete(T entity)"
  nameWithType: "SimpleCosmosRepository<T,ID>.delete(T entity)"
  summary: "delete one document per entity"
  parameters:
  - description: "the entity used to specify a document"
    name: "entity"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void delete(T entity)"
  desc: "delete one document per entity"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.deleteAll()"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.deleteAll()"
  name: "deleteAll()"
  nameWithType: "SimpleCosmosRepository<T,ID>.deleteAll()"
  summary: "Delete all the domains of a container."
  syntax: "public void deleteAll()"
  desc: "Delete all the domains of a container. Uses bulk if possible."
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.deleteAll(java.lang.Iterable<? extends T>)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.deleteAll(Iterable<? extends T> entities)"
  name: "deleteAll(Iterable<? extends T> entities)"
  nameWithType: "SimpleCosmosRepository<T,ID>.deleteAll(Iterable<? extends T> entities)"
  summary: "Delete list of entities without partitions."
  parameters:
  - description: "list of entities to be deleted"
    name: "entities"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"? extends T?alt=? extends T&text=? extends T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void deleteAll(Iterable<? extends T> entities)"
  desc: "Delete list of entities without partitions. Uses bulk if possible."
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.deleteAllById(java.lang.Iterable<? extends ID>)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.deleteAllById(Iterable<? extends ID> ids)"
  name: "deleteAllById(Iterable<? extends ID> ids)"
  nameWithType: "SimpleCosmosRepository<T,ID>.deleteAllById(Iterable<? extends ID> ids)"
  parameters:
  - name: "ids"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"? extends ID?alt=? extends ID&text=? extends ID\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void deleteAllById(Iterable<? extends ID> ids)"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.deleteById(ID)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.deleteById(ID id)"
  name: "deleteById(ID id)"
  nameWithType: "SimpleCosmosRepository<T,ID>.deleteById(ID id)"
  summary: "delete one document per id without configuring partition key value"
  parameters:
  - description: "an id used to specify the deleted document"
    name: "id"
    type: "<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteById(ID id)"
  desc: "delete one document per id without configuring partition key value"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.deleteById(ID,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.deleteById(ID id, PartitionKey partitionKey)"
  name: "deleteById(ID id, PartitionKey partitionKey)"
  nameWithType: "SimpleCosmosRepository<T,ID>.deleteById(ID id, PartitionKey partitionKey)"
  summary: "Deletes an entity by its id and partition key."
  parameters:
  - name: "id"
    type: "<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />"
  - name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteById(ID id, PartitionKey partitionKey)"
  desc: "Deletes an entity by its id and partition key."
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.existsById(ID)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.existsById(ID primaryKey)"
  name: "existsById(ID primaryKey)"
  nameWithType: "SimpleCosmosRepository<T,ID>.existsById(ID primaryKey)"
  summary: "check if an entity exists per id without partition"
  parameters:
  - description: "an id to specify an entity"
    name: "primaryKey"
    type: "<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean existsById(ID primaryKey)"
  desc: "check if an entity exists per id without partition"
  returns:
    description: "if the entity exists"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll()"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.findAll()"
  name: "findAll()"
  nameWithType: "SimpleCosmosRepository<T,ID>.findAll()"
  summary: "find all entities from one container without configuring partition key value"
  syntax: "public Iterable<T> findAll()"
  desc: "find all entities from one container without configuring partition key value"
  returns:
    description: "return Iterable of the found entities List"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll(org.springframework.data.domain.Pageable)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.findAll(Pageable pageable)"
  name: "findAll(Pageable pageable)"
  nameWithType: "SimpleCosmosRepository<T,ID>.findAll(Pageable pageable)"
  summary: "Find<wbr>Query<wbr>Spec<wbr>Generator Returns a Page of entities meeting the paging restriction provided in the Pageable object."
  parameters:
  - description: "the Pageable object providing paging restriction"
    name: "pageable"
    type: "<xref href=\"org.springframework.data.domain.Pageable?alt=org.springframework.data.domain.Pageable&text=Pageable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Page<T> findAll(Pageable pageable)"
  desc: "FindQuerySpecGenerator Returns a Page of entities meeting the paging restriction provided in the Pageable object."
  returns:
    description: "a page of entities"
    type: "<xref href=\"org.springframework.data.domain.Page?alt=org.springframework.data.domain.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll(com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.findAll(PartitionKey partitionKey)"
  name: "findAll(PartitionKey partitionKey)"
  nameWithType: "SimpleCosmosRepository<T,ID>.findAll(PartitionKey partitionKey)"
  summary: "Returns list of items in a specific partition"
  parameters:
  - name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Iterable<T> findAll(PartitionKey partitionKey)"
  desc: "Returns list of items in a specific partition"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll(org.springframework.data.domain.Sort)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.findAll(Sort sort)"
  name: "findAll(Sort sort)"
  nameWithType: "SimpleCosmosRepository<T,ID>.findAll(Sort sort)"
  summary: "Returns all entities sorted by the given options."
  parameters:
  - description: "the Sort option for queries."
    name: "sort"
    type: "<xref href=\"org.springframework.data.domain.Sort?alt=org.springframework.data.domain.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Iterable<T> findAll(Sort sort)"
  desc: "Returns all entities sorted by the given options."
  returns:
    description: "all entities sorted by the given options"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAllById(java.lang.Iterable<ID>)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.findAllById(Iterable<ID> ids)"
  name: "findAllById(Iterable<ID> ids)"
  nameWithType: "SimpleCosmosRepository<T,ID>.findAllById(Iterable<ID> ids)"
  summary: "find entities based on id list from one container without partitions"
  parameters:
  - description: "id list used to find entities"
    name: "ids"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Iterable<T> findAllById(Iterable<ID> ids)"
  desc: "find entities based on id list from one container without partitions"
  returns:
    description: "return a List of all found entities"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findById(ID)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.findById(ID id)"
  name: "findById(ID id)"
  nameWithType: "SimpleCosmosRepository<T,ID>.findById(ID id)"
  summary: "find one entity per id without partitions"
  parameters:
  - description: "an id used to find entity"
    name: "id"
    type: "<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Optional<T> findById(ID id)"
  desc: "find one entity per id without partitions"
  returns:
    description: "return the searching result"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html\">Optional</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findById(ID,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.findById(ID id, PartitionKey partitionKey)"
  name: "findById(ID id, PartitionKey partitionKey)"
  nameWithType: "SimpleCosmosRepository<T,ID>.findById(ID id, PartitionKey partitionKey)"
  summary: "Retrieves an entity by its id."
  parameters:
  - name: "id"
    type: "<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />"
  - name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Optional<T> findById(ID id, PartitionKey partitionKey)"
  desc: "Retrieves an entity by its id."
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html\">Optional</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.<S>save(ID,com.azure.cosmos.models.PartitionKey,java.lang.Class<S>,com.azure.cosmos.models.CosmosPatchOperations)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations)"
  name: "save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations)"
  nameWithType: "SimpleCosmosRepository<T,ID>.save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations)"
  summary: "patch entity with Cosmos<wbr>Patch<wbr>Item<wbr>Request<wbr>Options"
  parameters:
  - description: "of entity to be patched"
    name: "id"
    type: "<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />"
  - description: "of entity to be patched"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "for entity to be patched"
    name: "patchOperations"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchOperations?alt=com.azure.cosmos.models.CosmosPatchOperations&text=CosmosPatchOperations\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public S <S>save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations)"
  desc: "patch entity with CosmosPatchItemRequestOptions"
  returns:
    type: "<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.<S>save(ID,com.azure.cosmos.models.PartitionKey,java.lang.Class<S>,com.azure.cosmos.models.CosmosPatchOperations,com.azure.cosmos.models.CosmosPatchItemRequestOptions)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  name: "save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  nameWithType: "SimpleCosmosRepository<T,ID>.save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  summary: "patch entity with Cosmos<wbr>Patch<wbr>Item<wbr>Request<wbr>Options"
  parameters:
  - description: "of entity to be patched"
    name: "id"
    type: "<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />"
  - description: "of entity to be patched"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "for entity to be patched"
    name: "patchOperations"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchOperations?alt=com.azure.cosmos.models.CosmosPatchOperations&text=CosmosPatchOperations\" data-throw-if-not-resolved=\"False\" />"
  - description: "options"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchItemRequestOptions?alt=com.azure.cosmos.models.CosmosPatchItemRequestOptions&text=CosmosPatchItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public S <S>save(ID id, PartitionKey partitionKey, Class<S> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  desc: "patch entity with CosmosPatchItemRequestOptions"
  returns:
    type: "<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.<S>save(S)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.save(S entity)"
  name: "save(S entity)"
  nameWithType: "SimpleCosmosRepository<T,ID>.save(S entity)"
  summary: "save entity without partition"
  parameters:
  - description: "to be saved"
    name: "entity"
    type: "<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public S <S>save(S entity)"
  desc: "save entity without partition"
  returns:
    description: "entity"
    type: "<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.<S>saveAll(java.lang.Iterable<S>)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.saveAll(Iterable<S> entities)"
  name: "saveAll(Iterable<S> entities)"
  nameWithType: "SimpleCosmosRepository<T,ID>.saveAll(Iterable<S> entities)"
  summary: "Batch save entities."
  parameters:
  - description: "Batch entities"
    name: "entities"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Iterable<S> <S>saveAll(Iterable<S> entities)"
  desc: "Batch save entities. Uses bulk if possible."
  returns:
    description: "return the saved entities"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
typeParameters:
- description: "domain type."
  name: "T"
- description: "id type."
  name: "ID"
desc: "Repository class for simple Cosmos operation"
implements:
- "<xref href=\"com.azure.spring.data.cosmos.repository.CosmosRepository?alt=com.azure.spring.data.cosmos.repository.CosmosRepository&text=CosmosRepository\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:5.20.0
