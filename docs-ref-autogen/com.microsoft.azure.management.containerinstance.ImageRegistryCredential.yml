### YamlMime:JavaType
uid: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential"
fullName: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential"
name: "ImageRegistryCredential"
nameWithType: "ImageRegistryCredential"
summary: "Image registry credential."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ImageRegistryCredential"
constructors:
- uid: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.ImageRegistryCredential()"
  fullName: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.ImageRegistryCredential()"
  name: "ImageRegistryCredential()"
  nameWithType: "ImageRegistryCredential.ImageRegistryCredential()"
  syntax: "public ImageRegistryCredential()"
methods:
- uid: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.password()"
  fullName: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.password()"
  name: "password()"
  nameWithType: "ImageRegistryCredential.password()"
  summary: "Get the password for the private registry."
  syntax: "public String password()"
  desc: "Get the password for the private registry."
  returns:
    description: "the password value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.server()"
  fullName: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.server()"
  name: "server()"
  nameWithType: "ImageRegistryCredential.server()"
  summary: "Get the Docker image registry server without a protocol such as \"http\" and \"https\"."
  syntax: "public String server()"
  desc: "Get the Docker image registry server without a protocol such as \"http\" and \"https\"."
  returns:
    description: "the server value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.username()"
  fullName: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.username()"
  name: "username()"
  nameWithType: "ImageRegistryCredential.username()"
  summary: "Get the username for the private registry."
  syntax: "public String username()"
  desc: "Get the username for the private registry."
  returns:
    description: "the username value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.withPassword(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.withPassword(String password)"
  name: "withPassword(String password)"
  nameWithType: "ImageRegistryCredential.withPassword(String password)"
  summary: "Set the password for the private registry."
  parameters:
  - description: "the password value to set"
    name: "password"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageRegistryCredential withPassword(String password)"
  desc: "Set the password for the private registry."
  returns:
    description: "the ImageRegistryCredential object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.ImageRegistryCredential?alt=com.microsoft.azure.management.containerinstance.ImageRegistryCredential&text=ImageRegistryCredential\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.withServer(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.withServer(String server)"
  name: "withServer(String server)"
  nameWithType: "ImageRegistryCredential.withServer(String server)"
  summary: "Set the Docker image registry server without a protocol such as \"http\" and \"https\"."
  parameters:
  - description: "the server value to set"
    name: "server"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageRegistryCredential withServer(String server)"
  desc: "Set the Docker image registry server without a protocol such as \"http\" and \"https\"."
  returns:
    description: "the ImageRegistryCredential object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.ImageRegistryCredential?alt=com.microsoft.azure.management.containerinstance.ImageRegistryCredential&text=ImageRegistryCredential\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.withUsername(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerinstance.ImageRegistryCredential.withUsername(String username)"
  name: "withUsername(String username)"
  nameWithType: "ImageRegistryCredential.withUsername(String username)"
  summary: "Set the username for the private registry."
  parameters:
  - description: "the username value to set"
    name: "username"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageRegistryCredential withUsername(String username)"
  desc: "Set the username for the private registry."
  returns:
    description: "the ImageRegistryCredential object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.ImageRegistryCredential?alt=com.microsoft.azure.management.containerinstance.ImageRegistryCredential&text=ImageRegistryCredential\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Image registry credential."
metadata: {}
package: "com.microsoft.azure.management.containerinstance"
artifact: com.microsoft.azure:azure-mgmt-containerinstance:1.41.4
