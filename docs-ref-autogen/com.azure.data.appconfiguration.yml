### YamlMime:JavaPackage
uid: "com.azure.data.appconfiguration"
fullName: "com.azure.data.appconfiguration"
name: "com.azure.data.appconfiguration"
summary: "<p><a href=\"https://learn.microsoft.com/azure/azure-app-configuration/\">Azure App Configuration Service</a>\n is a managed service provided by Microsoft Azure that allows developers to centralize configuration settings for\n their applications."
classes:
- "com.azure.data.appconfiguration.ConfigurationAsyncClient"
- "com.azure.data.appconfiguration.ConfigurationClient"
- "com.azure.data.appconfiguration.ConfigurationClientBuilder"
enums:
- "com.azure.data.appconfiguration.ConfigurationServiceVersion"
desc: "<p><a href=\"https://learn.microsoft.com/azure/azure-app-configuration/\">Azure App Configuration Service</a>\n is a managed service provided by Microsoft Azure that allows developers to centralize configuration settings for\n their applications. With App Configuration, developers can store and manage application settings, feature flags,\n and other configuration data in one central location. This simplifies the management of configuration settings and\n makes it easy to update configuration values for multiple applications.</p>\n\n <p>The Azure App Configuration library is a client library that provides Java developers with a simple and\n easy-to-use interface for accessing and using the Azure App Configuration Service. This library allows developers to\n easily manage their application's configuration settings, feature flags, and other configuration data stored in the\n Azure App Configuration Service.\n </p>\n\n <h2>Getting Started</h2>\n\n <p>In order to interact with the App Configuration service you'll need to create an instance of the Configuration\n Client class. To make this possible you'll need the connection string of the configuration store. Alternatively,\n you can use AAD authentication via\n <a href=\"https://learn.microsoft.com/java/api/overview/azure/identity-readme?view=azure-java-stable\"> Azure Identity</a>\n to connect to the service.</p>\n <ol>\n   <li>Connection string, see <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder#connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"connectionString\"></xref>.</li>\n   <li>Azure Active Directory, see <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder#credential(com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref>.</li>\n </ol>\n\n <p><strong>Sample: Construct Asynchronous Configuration Client with Connection String</strong></p>\n\n <p>The following code sample demonstrates the creation of a <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\"></xref>,\n using the <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.appconfiguration.ConfigurationClientBuilder\"></xref> to configure it with a connection\n string.</p>\n\n <!-- src_embed com.azure.data.applicationconfig.async.configurationclient.instantiation  -->\n <pre>\n ConfigurationAsyncClient configurationAsyncClient = new ConfigurationClientBuilder&#40;&#41;\n     .connectionString&#40;connectionString&#41;\n     .buildAsyncClient&#40;&#41;;\n </pre>\n <!-- end com.azure.data.applicationconfig.async.configurationclient.instantiation  -->\n\n <p><strong>Sample: Construct Synchronous Configuration Client with Connection String</strong></p>\n\n <p>The following code sample demonstrates the creation of a <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.appconfiguration.ConfigurationClient\"></xref>,\n using the <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.appconfiguration.ConfigurationClientBuilder\"></xref> to configure it with a connection\n string.</p>\n\n <!-- src_embed com.azure.data.applicationconfig.configurationclient.instantiation -->\n <pre>\n ConfigurationClient configurationClient = new ConfigurationClientBuilder&#40;&#41;\n     .connectionString&#40;connectionString&#41;\n     .buildClient&#40;&#41;;\n </pre>\n <!-- end com.azure.data.applicationconfig.configurationclient.instantiation -->\n\n <p>App Configuration support multiple operations, such as create, update, retrieve, and delete a configuration setting.\n See methods in client level class below to explore all capabilities that library provides.</p>\n\n <p>For more configuration setting types, see\n <xref uid=\"com.azure.data.appconfiguration.models.FeatureFlagConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.appconfiguration.models.FeatureFlagConfigurationSetting\"></xref> and\n <xref uid=\"com.azure.data.appconfiguration.models.SecretReferenceConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.appconfiguration.models.SecretReferenceConfigurationSetting\"></xref>.</p>\n\n <br/>\n\n <hr/>\n\n <h2>Add Configuration Setting</h2>\n\n <p>The <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient#addConfigurationSetting(com.azure.data.appconfiguration.models.ConfigurationSetting)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"addConfigurationSetting\"></xref>\n method can be used to add a configuration setting in the Azure App Configuration.</p>\n\n <p>The sample below shows how to add a setting with the key \"prodDBConnection\", label \"westUS\" and value \"db_connection\" using <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.appconfiguration.ConfigurationClient\"></xref>.</p>\n\n <!-- src_embed com.azure.data.appconfiguration.ConfigurationClient.addConfigurationSetting#ConfigurationSetting -->\n <pre>\n ConfigurationSetting setting = configurationClient.addConfigurationSetting&#40;new ConfigurationSetting&#40;&#41;\n     .setKey&#40;&quot;prodDBConnection&quot;&#41;\n     .setLabel&#40;&quot;westUS&quot;&#41;\n     .setValue&#40;&quot;db_connection&quot;&#41;&#41;;\n System.out.printf&#40;&quot;Key: %s, Label: %s, Value: %s&quot;, setting.getKey&#40;&#41;, setting.getLabel&#40;&#41;, setting.getValue&#40;&#41;&#41;;\n </pre>\n <!-- end com.azure.data.appconfiguration.ConfigurationClient.addConfigurationSetting#ConfigurationSetting -->\n\n <p><strong>Note:</strong> For asynchronous sample, refer to <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\"></xref>.</p>\n\n <br/>\n\n <hr/>\n\n <h2>Update Configuration Setting</h2>\n\n <p>The <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient#setConfigurationSetting(com.azure.data.appconfiguration.models.ConfigurationSetting)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setConfigurationSetting\"></xref>\n method can be used to update a configuration setting in the Azure App Configuration.</p>\n\n <p>The sample below shows how to update setting's value \"db_connection\" to \"updated_db_connection\"</p>\n\n <!-- src_embed com.azure.data.appconfiguration.ConfigurationClient.setConfigurationSetting#ConfigurationSetting -->\n <pre>\n ConfigurationSetting setting = configurationClient.setConfigurationSetting&#40;new ConfigurationSetting&#40;&#41;\n     .setKey&#40;&quot;prodDBConnection&quot;&#41;\n     .setLabel&#40;&quot;westUS&quot;&#41;\n     .setValue&#40;&quot;db_connection&quot;&#41;&#41;;\n System.out.printf&#40;&quot;Key: %s, Label: %s, Value: %s&quot;, setting.getKey&#40;&#41;, setting.getLabel&#40;&#41;, setting.getValue&#40;&#41;&#41;;\n\n &#47;&#47; Update the value of the setting to &quot;updated_db_connection&quot;.\n setting = configurationClient.setConfigurationSetting&#40;new ConfigurationSetting&#40;&#41;\n     .setKey&#40;&quot;prodDBConnection&quot;&#41;\n     .setLabel&#40;&quot;westUS&quot;&#41;\n     .setValue&#40;&quot;updated_db_connection&quot;&#41;&#41;;\n System.out.printf&#40;&quot;Key: %s, Label: %s, Value: %s&quot;, setting.getKey&#40;&#41;, setting.getLabel&#40;&#41;, setting.getValue&#40;&#41;&#41;;\n </pre>\n <!-- end com.azure.data.appconfiguration.ConfigurationClient.setConfigurationSetting#ConfigurationSetting -->\n\n <p><strong>Note:</strong> For asynchronous sample, refer to <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\"></xref>.</p>\n\n <br/>\n\n <hr/>\n\n <h2>Get Configuration Setting</h2>\n\n <p>The <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient#getConfigurationSetting(com.azure.data.appconfiguration.models.ConfigurationSetting)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getConfigurationSetting\"></xref>\n method can be used to get a configuration setting in the Azure App Configuration.</p>\n\n <p>The sample below shows how to retrieve the setting with the key \"prodDBConnection\".</p>\n\n <!-- src_embed com.azure.data.applicationconfig.configurationclient.getConfigurationSetting#ConfigurationSetting -->\n <pre>\n ConfigurationSetting setting = configurationClient.getConfigurationSetting&#40;new ConfigurationSetting&#40;&#41;\n     .setKey&#40;&quot;prodDBConnection&quot;&#41;\n     .setLabel&#40;&quot;westUS&quot;&#41;&#41;;\n System.out.printf&#40;&quot;Key: %s, Value: %s&quot;, setting.getKey&#40;&#41;, setting.getValue&#40;&#41;&#41;;\n </pre>\n <!-- end com.azure.data.applicationconfig.configurationclient.getConfigurationSetting#ConfigurationSetting -->\n\n <p><strong>Note:</strong> For asynchronous sample, refer to <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\"></xref>.</p>\n\n <br/>\n\n <hr/>\n\n <h2>Delete Configuration Setting</h2>\n\n <p>The <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient#deleteConfigurationSetting(com.azure.data.appconfiguration.models.ConfigurationSetting)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"deleteConfigurationSetting\"></xref>\n method can be used to delete a configuration setting in the Azure App Configuration.</p>\n\n <p>The sample below shows how to delete the setting with the key \"prodDBConnection\".</p>\n\n <!-- src_embed com.azure.data.applicationconfig.configurationclient.deleteConfigurationSetting#ConfigurationSetting -->\n <pre>\n ConfigurationSetting setting = configurationClient.deleteConfigurationSetting&#40;new ConfigurationSetting&#40;&#41;\n     .setKey&#40;&quot;prodDBConnection&quot;&#41;\n     .setLabel&#40;&quot;westUS&quot;&#41;&#41;;\n System.out.printf&#40;&quot;Key: %s, Value: %s&quot;, setting.getKey&#40;&#41;, setting.getValue&#40;&#41;&#41;;\n </pre>\n <!-- end com.azure.data.applicationconfig.configurationclient.deleteConfigurationSetting#ConfigurationSetting -->\n\n <p><strong>Note:</strong> For asynchronous sample, refer to <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\"></xref>.</p>\n\n <br/>\n\n <hr/>\n\n <h2>List Configuration Settings</h2>\n\n <p>The <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient#listConfigurationSettings(com.azure.data.appconfiguration.models.SettingSelector)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"listConfigurationSettings\"></xref>\n method can be used to list configuration settings in the Azure App Configuration.</p>\n\n <p>The sample below shows how to list all settings that use the key \"prodDBConnection\".</p>\n <!-- src_embed com.azure.data.applicationconfig.configurationclient.listConfigurationSettings#settingSelector -->\n <pre>\n SettingSelector settingSelector = new SettingSelector&#40;&#41;.setKeyFilter&#40;&quot;prodDBConnection&quot;&#41;;\n configurationClient.listConfigurationSettings&#40;settingSelector&#41;.forEach&#40;setting -&gt; &#123;\n     System.out.printf&#40;&quot;Key: %s, Value: %s&quot;, setting.getKey&#40;&#41;, setting.getValue&#40;&#41;&#41;;\n &#125;&#41;;\n </pre>\n <!-- end com.azure.data.applicationconfig.configurationclient.listConfigurationSettings#settingSelector -->\n\n <p><strong>Note:</strong> For asynchronous sample, refer to <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\"></xref>.</p>"
metadata: {}
package: "com.azure.data.appconfiguration"
artifact: com.azure:azure-data-appconfiguration:1.5.0
