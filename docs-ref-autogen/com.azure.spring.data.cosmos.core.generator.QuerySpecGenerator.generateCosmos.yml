### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.core.generator.QuerySpecGenerator.generateCosmos*"
fullName: "com.azure.spring.data.cosmos.core.generator.QuerySpecGenerator.generateCosmos"
name: "generateCosmos"
nameWithType: "QuerySpecGenerator.generateCosmos"
members:
- uid: "com.azure.spring.data.cosmos.core.generator.QuerySpecGenerator.generateCosmos(com.azure.spring.data.cosmos.core.query.CosmosQuery)"
  fullName: "com.azure.spring.data.cosmos.core.generator.QuerySpecGenerator.generateCosmos(CosmosQuery query)"
  name: "generateCosmos(CosmosQuery query)"
  nameWithType: "QuerySpecGenerator.generateCosmos(CosmosQuery query)"
  summary: "Generate the SqlQuerySpec for cosmosDB client."
  parameters:
  - description: "tree structured query condition."
    name: "query"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlQuerySpec generateCosmos(CosmosQuery query)"
  returns:
    description: "SqlQuerySpec executed by cosmos client."
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.core.generator"
artifact: com.azure:azure-spring-data-cosmos:3.3.0
