### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod"
fullName: "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod"
name: "DeviceMethod"
nameWithType: "DeviceMethod"
summary: "DeviceMethod enables service client to directly invoke methods on various devices from service client."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DeviceMethod"
constructors:
- "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.DeviceMethod()"
methods:
- "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.createFromConnectionString(java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.createFromConnectionString(java.lang.String,com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethodClientOptions)"
- "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object)"
- "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object)"
- "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.scheduleDeviceMethod(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object,java.util.Date,long)"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.devicetwin"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.26.0
