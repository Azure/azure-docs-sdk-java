### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod
  id: DeviceMethod
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin
  children:
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.DeviceMethod()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.createFromConnectionString(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.scheduleDeviceMethod(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object,java.util.Date,long)
  langs:
  - java
  name: DeviceMethod
  nameWithType: DeviceMethod
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod
  type: Class
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: DeviceMethod enables service client to directly invoke methods on various devices from service client.
  syntax:
    content: public class DeviceMethod
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.DeviceMethod()
  id: DeviceMethod()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod
  langs:
  - java
  name: DeviceMethod()
  nameWithType: DeviceMethod.DeviceMethod()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.DeviceMethod()
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.DeviceMethod*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public DeviceMethod()
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.createFromConnectionString(java.lang.String)
  id: createFromConnectionString(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod
  langs:
  - java
  name: createFromConnectionString(String connectionString)
  nameWithType: DeviceMethod.createFromConnectionString(String connectionString)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.createFromConnectionString(String connectionString)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.createFromConnectionString*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Create a DeviceMethod instance from the information in the connection string.
  syntax:
    content: public static DeviceMethod createFromConnectionString(String connectionString)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: is the IoTHub connection string.
    return:
      type: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod
      description: an instance of the DeviceMethod.
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the object creation failed
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object)
  id: invoke(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod
  langs:
  - java
  name: invoke(String deviceId, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload)
  nameWithType: DeviceMethod.invoke(String deviceId, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke(String deviceId, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Directly invokes a method on the device and return its result.
  syntax:
    content: public synchronized MethodResult invoke(String deviceId, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: is the device where the request is send to.
    - id: methodName
      type: java.lang.String
      description: is the name of the method that shall be invoked on the device.
    - id: responseTimeoutInSeconds
      type: java.lang.Long
      description: is the maximum waiting time for a response from the device in seconds.
    - id: connectTimeoutInSeconds
      type: java.lang.Long
      description: is the maximum waiting time for a response from the connection in seconds.
    - id: payload
      type: java.lang.Object
      description: is the the method parameter
    return:
      type: com.microsoft.azure.sdk.iot.service.devicetwin.MethodResult
      description: the status and payload resulted from the method invoke
  exceptions:
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the response verification failed
  - type: java.io.IOException
    description: This exception is thrown if the response verification failed
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object)
  id: invoke(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod
  langs:
  - java
  name: invoke(String deviceId, String moduleId, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload)
  nameWithType: DeviceMethod.invoke(String deviceId, String moduleId, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke(String deviceId, String moduleId, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Directly invokes a method on the module and return its result.
  syntax:
    content: public synchronized MethodResult invoke(String deviceId, String moduleId, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: is the device where the module is related to.
    - id: moduleId
      type: java.lang.String
      description: is the module where the request is sent to.
    - id: methodName
      type: java.lang.String
      description: is the name of the method that shall be invoked on the device.
    - id: responseTimeoutInSeconds
      type: java.lang.Long
      description: is the maximum waiting time for a response from the device in seconds.
    - id: connectTimeoutInSeconds
      type: java.lang.Long
      description: is the maximum waiting time for a response from the connection in seconds.
    - id: payload
      type: java.lang.Object
      description: is the the method parameter
    return:
      type: com.microsoft.azure.sdk.iot.service.devicetwin.MethodResult
      description: the status and payload resulted from the method invoke
  exceptions:
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the response verification failed
  - type: java.io.IOException
    description: This exception is thrown if the response verification failed
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.scheduleDeviceMethod(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object,java.util.Date,long)
  id: scheduleDeviceMethod(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object,java.util.Date,long)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod
  langs:
  - java
  name: scheduleDeviceMethod(String queryCondition, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload, Date startTimeUtc, long maxExecutionTimeInSeconds)
  nameWithType: DeviceMethod.scheduleDeviceMethod(String queryCondition, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload, Date startTimeUtc, long maxExecutionTimeInSeconds)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.scheduleDeviceMethod(String queryCondition, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload, Date startTimeUtc, long maxExecutionTimeInSeconds)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.scheduleDeviceMethod*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Creates a new Job to invoke method on one or multiple devices
  syntax:
    content: public Job scheduleDeviceMethod(String queryCondition, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload, Date startTimeUtc, long maxExecutionTimeInSeconds)
    parameters:
    - id: queryCondition
      type: java.lang.String
      description: Query condition to evaluate which devices to run the job on. It can be <code>null</code> or empty
    - id: methodName
      type: java.lang.String
      description: Method name to be invoked
    - id: responseTimeoutInSeconds
      type: java.lang.Long
      description: Maximum interval of time, in seconds, that the Direct Method will wait for answer. It can be <code>null</code>.
    - id: connectTimeoutInSeconds
      type: java.lang.Long
      description: Maximum interval of time, in seconds, that the Direct Method will wait for the connection. It can be <code>null</code>.
    - id: payload
      type: java.lang.Object
      description: Object that contains the payload defined by the user. It can be <code>null</code>.
    - id: startTimeUtc
      type: java.util.Date
      description: Date time in Utc to start the job
    - id: maxExecutionTimeInSeconds
      type: long
      description: Max execution time in seconds, i.e., ttl duration the job can run
    return:
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Job
      description: a Job class that represent this job on IotHub
  exceptions:
  - type: java.io.IOException
    description: if the function contains invalid parameters
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: if the function contains invalid parameters
references:
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.DeviceMethod*
  name: DeviceMethod
  nameWithType: DeviceMethod.DeviceMethod
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.DeviceMethod
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.createFromConnectionString*
  name: createFromConnectionString
  nameWithType: DeviceMethod.createFromConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.createFromConnectionString
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
- uid: java.lang.Long
  spec.java:
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.MethodResult
  name: MethodResult
  nameWithType: MethodResult
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.MethodResult
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke*
  name: invoke
  nameWithType: DeviceMethod.invoke
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: java.util.Date
  spec.java:
  - uid: java.util.Date
    name: Date
    fullName: java.util.Date
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Job
  name: Job
  nameWithType: Job
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Job
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.scheduleDeviceMethod*
  name: scheduleDeviceMethod
  nameWithType: DeviceMethod.scheduleDeviceMethod
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.scheduleDeviceMethod
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
