### YamlMime:JavaMember
nameWithType: CloudBlob.getQualifiedUri
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri()
  name: getQualifiedUri()
  nameWithType: CloudBlob.getQualifiedUri()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <code>java.net.URI</code> object that represents the snapshot or shared access signature.</p>
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the snapshot or shared access signature qualified URI for this blob.</p>

    <p>

      <xrefsect id="deprecated_1_deprecated000115">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri()" data-throw-if-not-resolved="false" data-raw-source="getSnapshotQualifiedUri()"></xref> instead.</p>

        </xrefdescription>

      </xrefsect>

    </p>

    <p></p>
  syntax: public final URI getQualifiedUri()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri()
uid: com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri*
fullName: com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri
name: getQualifiedUri()
package: com.microsoft.azure.storage.blob
metadata: {}
