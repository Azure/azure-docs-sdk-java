### YamlMime:JavaType
uid: "com.azure.storage.file.share.ShareFileClientBuilder"
fullName: "com.azure.storage.file.share.ShareFileClientBuilder"
name: "ShareFileClientBuilder"
nameWithType: "ShareFileClientBuilder"
summary: "This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.storage.file.share.ShareFileClient\" data-throw-if-not-resolved=\"false\">FileClients</xref>, <xref uid=\"com.azure.storage.file.share.ShareFileAsyncClient\" data-throw-if-not-resolved=\"false\">FileAsyncClients</xref>, <xref uid=\"com.azure.storage.file.share.ShareDirectoryClient\" data-throw-if-not-resolved=\"false\">DirectoryClients</xref>, and <xref uid=\"com.azure.storage.file.share.ShareDirectoryAsyncClient\" data-throw-if-not-resolved=\"false\">DirectoryAsyncClients</xref>. Calling <xref uid=\"com.azure.storage.file.share.ShareFileClientBuilder.buildFileClient()\" data-throw-if-not-resolved=\"false\">buildFileClient</xref>, <xref uid=\"com.azure.storage.file.share.ShareFileClientBuilder.buildFileAsyncClient()\" data-throw-if-not-resolved=\"false\">buildFileAsyncClient</xref>, <xref uid=\"com.azure.storage.file.share.ShareFileClientBuilder.buildDirectoryClient()\" data-throw-if-not-resolved=\"false\">buildDirectoryClient</xref>, or <xref uid=\"com.azure.storage.file.share.ShareFileClientBuilder.buildDirectoryAsyncClient()\" data-throw-if-not-resolved=\"false\">buildDirectoryAsyncClient</xref> constructs an instance of <xref uid=\"com.azure.storage.file.share.ShareFileClient\" data-throw-if-not-resolved=\"false\">ShareFileClient</xref>, <xref uid=\"com.azure.storage.file.share.ShareFileAsyncClient\" data-throw-if-not-resolved=\"false\">ShareFileAsyncClient</xref>, <xref uid=\"com.azure.storage.file.share.ShareDirectoryClient\" data-throw-if-not-resolved=\"false\">ShareDirectoryClient</xref>, or <xref uid=\"com.azure.storage.file.share.ShareDirectoryAsyncClient\" data-throw-if-not-resolved=\"false\">ShareDirectoryAsyncClient</xref> respectively.\n\nThe client needs the endpoint of the Azure Storage File service, name of the share, and authorization credential. <xref uid=\"com.azure.storage.file.share.ShareFileClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> gives the builder the endpoint and may give the builder the <xref uid=\"com.azure.storage.file.share.ShareFileClientBuilder.shareName(java.lang.String)\" data-throw-if-not-resolved=\"false\">ShareFileClientBuilder#shareName(String)</xref>, <xref uid=\"com.azure.storage.file.share.ShareFileClientBuilder.resourcePath(java.lang.String)\" data-throw-if-not-resolved=\"false\">ShareFileClientBuilder#resourcePath(String)</xref> and a <xref uid=\"com.azure.storage.file.share.ShareFileClientBuilder.sasToken(java.lang.String)\" data-throw-if-not-resolved=\"false\">SAS token</xref> that authorizes the client.\n\n**Instantiating a synchronous File Client with SAS token**\n\n```java\nShareFileClient fileClient = new ShareFileClientBuilder()\n     .endpoint(\"https://${accountName}.file.core.windows.net?${SASToken}\")\n     .shareName(\"myshare\")\n     .resourcePath(\"myfilepath\")\n     .buildFileClient();\n```\n\n**Instantiating an Asynchronous File Client with SAS token**\n\n```java\nShareDirectoryClient shareDirectoryClient = new ShareFileClientBuilder()\n     .endpoint(\"https://${accountName}.file.core.windows.net?${SASToken}\")\n     .shareName(\"myshare\")\n     .resourcePath(\"mydirectory\")\n     .buildDirectoryClient();\n```\n\nIf the `endpoint` doesn't contain the query parameters to construct a SAS token it may be set using <xref uid=\"com.azure.storage.file.share.ShareFileClientBuilder.sasToken(java.lang.String)\" data-throw-if-not-resolved=\"false\">sasToken</xref>.\n\n```java\nShareFileClient fileClient = new ShareFileClientBuilder()\n     .endpoint(\"https://${accountName}.file.core.windows.net\")\n     .sasToken(\"${SASTokenQueryParams}\")\n     .shareName(\"myshare\")\n     .resourcePath(\"myfilepath\")\n     .buildFileClient();\n```\n\n```java\nShareFileAsyncClient shareFileAsyncClient = new ShareFileClientBuilder()\n     .endpoint(\"https://{accountName}.file.core.windows.net\")\n     .sasToken(\"${SASTokenQueryParams}\")\n     .shareName(\"myshare\")\n     .resourcePath(\"myfilepath\")\n     .buildFileAsyncClient();\n```\n\nAnother way to authenticate the client is using a <xref uid=\"com.azure.storage.common.StorageSharedKeyCredential\" data-throw-if-not-resolved=\"false\">StorageSharedKeyCredential</xref>. To create a StorageSharedKeyCredential a connection string from the Storage File service must be used. Set the StorageSharedKeyCredential with <xref uid=\"com.azure.storage.file.share.ShareFileClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\">connectionString</xref>. If the builder has both a SAS token and StorageSharedKeyCredential the StorageSharedKeyCredential will be preferred when authorizing requests sent to the service.\n\n**Instantiating a synchronous File Client with connection string.**\n\n```java\nString connectionString = \"DefaultEndpointsProtocol=https;AccountName={name};AccountKey={key}\"\n     + \";EndpointSuffix={core.windows.net}\";\n ShareDirectoryClient shareDirectoryClient = new ShareFileClientBuilder()\n     .connectionString(connectionString)\n     .shareName(\"myshare\")\n     .resourcePath(\"mydirectory\")\n     .buildDirectoryClient();\n```\n\n**Instantiating an Asynchronous File Client with connection string.**\n\n```java\nString connectionString = \"DefaultEndpointsProtocol=https;AccountName={name};AccountKey={key};\"\n     + \"EndpointSuffix={core.windows.net}\";\n ShareDirectoryAsyncClient shareDirectoryAsyncClient = new ShareFileClientBuilder()\n     .connectionString(connectionString).shareName(\"myshare\").resourcePath(\"mydirectory\")\n     .buildDirectoryAsyncClient();\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ShareFileClientBuilder"
constructors:
- "com.azure.storage.file.share.ShareFileClientBuilder.ShareFileClientBuilder()"
methods:
- "com.azure.storage.file.share.ShareFileClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
- "com.azure.storage.file.share.ShareFileClientBuilder.buildDirectoryAsyncClient()"
- "com.azure.storage.file.share.ShareFileClientBuilder.buildDirectoryClient()"
- "com.azure.storage.file.share.ShareFileClientBuilder.buildFileAsyncClient()"
- "com.azure.storage.file.share.ShareFileClientBuilder.buildFileClient()"
- "com.azure.storage.file.share.ShareFileClientBuilder.configuration(com.azure.core.util.Configuration)"
- "com.azure.storage.file.share.ShareFileClientBuilder.connectionString(java.lang.String)"
- "com.azure.storage.file.share.ShareFileClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)"
- "com.azure.storage.file.share.ShareFileClientBuilder.endpoint(java.lang.String)"
- "com.azure.storage.file.share.ShareFileClientBuilder.getDefaultHttpLogOptions()"
- "com.azure.storage.file.share.ShareFileClientBuilder.httpClient(com.azure.core.http.HttpClient)"
- "com.azure.storage.file.share.ShareFileClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
- "com.azure.storage.file.share.ShareFileClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
- "com.azure.storage.file.share.ShareFileClientBuilder.resourcePath(java.lang.String)"
- "com.azure.storage.file.share.ShareFileClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
- "com.azure.storage.file.share.ShareFileClientBuilder.sasToken(java.lang.String)"
- "com.azure.storage.file.share.ShareFileClientBuilder.serviceVersion(com.azure.storage.file.share.ShareServiceVersion)"
- "com.azure.storage.file.share.ShareFileClientBuilder.shareName(java.lang.String)"
- "com.azure.storage.file.share.ShareFileClientBuilder.snapshot(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.storage.file.share"
artifact: com.azure:azure-storage-file-share:12.6.0
