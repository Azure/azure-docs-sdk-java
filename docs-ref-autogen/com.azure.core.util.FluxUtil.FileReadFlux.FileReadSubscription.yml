### YamlMime:ManagedReference
items:
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  id: "FileReadSubscription"
  parent: "com.azure.core.util"
  children:
  - "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.FileReadSubscription(org.reactivestreams.Subscriber<? super java.nio.ByteBuffer>,java.nio.channels.AsynchronousFileChannel,int,long,long)"
  - "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.REQUESTED"
  - "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.WIP"
  - "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.cancel()"
  - "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.completed(java.lang.Integer,java.nio.ByteBuffer)"
  - "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.failed(java.lang.Throwable,java.nio.ByteBuffer)"
  - "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.request(long)"
  - "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.requested"
  - "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.wip"
  langs:
  - "java"
  name: "FluxUtil.FileReadFlux.FileReadSubscription"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  type: "Class"
  package: "com.azure.core.util"
  syntax:
    content: "static final class FluxUtil.FileReadFlux.FileReadSubscription implements Subscription, CompletionHandler<Integer,ByteBuffer>"
  inheritance:
  - "java.lang.Object"
  implements:
  - "org.reactivestreams.Subscription"
  - "java.nio.channels.CompletionHandler<java.lang.Integer,java.nio.ByteBuffer>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.FileReadSubscription(org.reactivestreams.Subscriber<? super java.nio.ByteBuffer>,java.nio.channels.AsynchronousFileChannel,int,long,long)"
  id: "FileReadSubscription(org.reactivestreams.Subscriber<? super java.nio.ByteBuffer>,java.nio.channels.AsynchronousFileChannel,int,long,long)"
  parent: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  langs:
  - "java"
  name: "FileReadSubscription(Subscriber<? super ByteBuffer> subscriber, AsynchronousFileChannel fileChannel, int chunkSize, long offset, long length)"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.FileReadSubscription(Subscriber<? super ByteBuffer> subscriber, AsynchronousFileChannel fileChannel, int chunkSize, long offset, long length)"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.FileReadSubscription(Subscriber<? super ByteBuffer> subscriber, AsynchronousFileChannel fileChannel, int chunkSize, long offset, long length)"
  overload: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.FileReadSubscription*"
  type: "Constructor"
  package: "com.azure.core.util"
  syntax:
    content: " FileReadSubscription(Subscriber<? super ByteBuffer> subscriber, AsynchronousFileChannel fileChannel, int chunkSize, long offset, long length)"
    parameters:
    - id: "subscriber"
      type: "org.reactivestreams.Subscriber<? super java.nio.ByteBuffer>"
    - id: "fileChannel"
      type: "java.nio.channels.AsynchronousFileChannel"
    - id: "chunkSize"
      type: "int"
    - id: "offset"
      type: "long"
    - id: "length"
      type: "long"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.REQUESTED"
  id: "REQUESTED"
  parent: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  langs:
  - "java"
  name: "REQUESTED"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.REQUESTED"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.REQUESTED"
  type: "Field"
  package: "com.azure.core.util"
  syntax:
    content: "static final AtomicLongFieldUpdater<FluxUtil.FileReadFlux.FileReadSubscription> REQUESTED"
    return:
      type: "java.util.concurrent.atomic.AtomicLongFieldUpdater<com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription>"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.WIP"
  id: "WIP"
  parent: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  langs:
  - "java"
  name: "WIP"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.WIP"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.WIP"
  type: "Field"
  package: "com.azure.core.util"
  syntax:
    content: "static final AtomicIntegerFieldUpdater<FluxUtil.FileReadFlux.FileReadSubscription> WIP"
    return:
      type: "java.util.concurrent.atomic.AtomicIntegerFieldUpdater<com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription>"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.cancel()"
  id: "cancel()"
  parent: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  langs:
  - "java"
  name: "cancel()"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.cancel()"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.cancel()"
  overload: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.cancel*"
  type: "Method"
  package: "com.azure.core.util"
  syntax:
    content: "public void cancel()"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.completed(java.lang.Integer,java.nio.ByteBuffer)"
  id: "completed(java.lang.Integer,java.nio.ByteBuffer)"
  parent: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  langs:
  - "java"
  name: "completed(Integer bytesRead, ByteBuffer buffer)"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.completed(Integer bytesRead, ByteBuffer buffer)"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.completed(Integer bytesRead, ByteBuffer buffer)"
  overload: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.completed*"
  type: "Method"
  package: "com.azure.core.util"
  syntax:
    content: "public void completed(Integer bytesRead, ByteBuffer buffer)"
    parameters:
    - id: "bytesRead"
      type: "java.lang.Integer"
    - id: "buffer"
      type: "java.nio.ByteBuffer"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.failed(java.lang.Throwable,java.nio.ByteBuffer)"
  id: "failed(java.lang.Throwable,java.nio.ByteBuffer)"
  parent: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  langs:
  - "java"
  name: "failed(Throwable exc, ByteBuffer attachment)"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.failed(Throwable exc, ByteBuffer attachment)"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.failed(Throwable exc, ByteBuffer attachment)"
  overload: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.failed*"
  type: "Method"
  package: "com.azure.core.util"
  syntax:
    content: "public void failed(Throwable exc, ByteBuffer attachment)"
    parameters:
    - id: "exc"
      type: "java.lang.Throwable"
    - id: "attachment"
      type: "java.nio.ByteBuffer"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.request(long)"
  id: "request(long)"
  parent: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  langs:
  - "java"
  name: "request(long n)"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.request(long n)"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.request(long n)"
  overload: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.request*"
  type: "Method"
  package: "com.azure.core.util"
  syntax:
    content: "public void request(long n)"
    parameters:
    - id: "n"
      type: "long"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.requested"
  id: "requested"
  parent: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  langs:
  - "java"
  name: "requested"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.requested"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.requested"
  type: "Field"
  package: "com.azure.core.util"
  syntax:
    content: "volatile long requested"
    return:
      type: "long"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.wip"
  id: "wip"
  parent: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  langs:
  - "java"
  name: "wip"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.wip"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.wip"
  type: "Field"
  package: "com.azure.core.util"
  syntax:
    content: "volatile int wip"
    return:
      type: "int"
references:
- uid: "org.reactivestreams.Subscriber<? super java.nio.ByteBuffer>"
  spec.java:
  - uid: "org.reactivestreams.Subscriber"
    name: "Subscriber"
    fullName: "org.reactivestreams.Subscriber"
  - name: "<"
    fullName: "<"
  - uid: "? super java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "? super java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "java.nio.channels.AsynchronousFileChannel"
  spec.java:
  - uid: "java.nio.channels.AsynchronousFileChannel"
    name: "AsynchronousFileChannel"
    fullName: "java.nio.channels.AsynchronousFileChannel"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.FileReadSubscription*"
  name: "FileReadSubscription"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.FileReadSubscription"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.FileReadSubscription"
  package: "com.azure.core.util"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.request*"
  name: "request"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.request"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.request"
  package: "com.azure.core.util"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.cancel*"
  name: "cancel"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.cancel"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.cancel"
  package: "com.azure.core.util"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "java.nio.ByteBuffer"
  spec.java:
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.completed*"
  name: "completed"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.completed"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.completed"
  package: "com.azure.core.util"
- uid: "java.lang.Throwable"
  spec.java:
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
- uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.failed*"
  name: "failed"
  nameWithType: "FluxUtil.FileReadFlux.FileReadSubscription.failed"
  fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription.failed"
  package: "com.azure.core.util"
- uid: "java.util.concurrent.atomic.AtomicIntegerFieldUpdater<com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription>"
  spec.java:
  - uid: "java.util.concurrent.atomic.AtomicIntegerFieldUpdater"
    name: "AtomicIntegerFieldUpdater"
    fullName: "java.util.concurrent.atomic.AtomicIntegerFieldUpdater"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
    name: "FileReadSubscription"
    fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  - name: ">"
    fullName: ">"
- uid: "java.util.concurrent.atomic.AtomicLongFieldUpdater<com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription>"
  spec.java:
  - uid: "java.util.concurrent.atomic.AtomicLongFieldUpdater"
    name: "AtomicLongFieldUpdater"
    fullName: "java.util.concurrent.atomic.AtomicLongFieldUpdater"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
    name: "FileReadSubscription"
    fullName: "com.azure.core.util.FluxUtil.FileReadFlux.FileReadSubscription"
  - name: ">"
    fullName: ">"
- uid: "java.nio.channels.CompletionHandler<java.lang.Integer,java.nio.ByteBuffer>"
  name: "CompletionHandler<Integer,ByteBuffer>"
  nameWithType: "CompletionHandler<Integer,ByteBuffer>"
  fullName: "java.nio.channels.CompletionHandler<java.lang.Integer,java.nio.ByteBuffer>"
- uid: "org.reactivestreams.Subscription"
  name: "Subscription"
  nameWithType: "Subscription"
  fullName: "org.reactivestreams.Subscription"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "? super java.nio.ByteBuffer"
  name: "? super ByteBuffer"
  nameWithType: "? super ByteBuffer"
  fullName: "? super java.nio.ByteBuffer"
- uid: "org.reactivestreams.Subscriber"
  name: "Subscriber"
  nameWithType: "Subscriber"
  fullName: "org.reactivestreams.Subscriber"
- uid: "java.util.concurrent.atomic.AtomicIntegerFieldUpdater"
  name: "AtomicIntegerFieldUpdater"
  nameWithType: "AtomicIntegerFieldUpdater"
  fullName: "java.util.concurrent.atomic.AtomicIntegerFieldUpdater"
- uid: "java.util.concurrent.atomic.AtomicLongFieldUpdater"
  name: "AtomicLongFieldUpdater"
  nameWithType: "AtomicLongFieldUpdater"
  fullName: "java.util.concurrent.atomic.AtomicLongFieldUpdater"
- uid: "java.nio.channels.CompletionHandler"
  name: "CompletionHandler"
  nameWithType: "CompletionHandler"
  fullName: "java.nio.channels.CompletionHandler"
- uid: "java.lang.Integer,java.nio.ByteBuffer"
  name: "Integer,ByteBuffer"
  nameWithType: "Integer,ByteBuffer"
  fullName: "java.lang.Integer,java.nio.ByteBuffer"
