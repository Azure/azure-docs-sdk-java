### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeFileSystemClient.deleteDirectoryIfExists*"
fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClient.deleteDirectoryIfExists"
name: "deleteDirectoryIfExists"
nameWithType: "DataLakeFileSystemClient.deleteDirectoryIfExists"
members:
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClient.deleteDirectoryIfExists(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClient.deleteDirectoryIfExists(String directoryName)"
  name: "deleteDirectoryIfExists(String directoryName)"
  nameWithType: "DataLakeFileSystemClient.deleteDirectoryIfExists(String directoryName)"
  summary: "Deletes the specified directory in the file system if it exists."
  parameters:
  - description: "Name of the directory to delete.  If the path name contains special characters, pass in the\n url encoded version of the path name."
    name: "directoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean deleteDirectoryIfExists(String directoryName)"
  desc: "Deletes the specified directory in the file system if it exists. For more information see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nboolean result = client.deleteDirectoryIfExists(directoryName);\n System.out.println(\"Delete request completed: \" + result);\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/datalakestoragegen2/path/delete"
  returns:
    description: "<code>true</code> if the directory is successfully deleted, <code>false</code> if the directory does not exist."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.11.0
