### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  id: _file_upload_notification_receiver
  parent: com.microsoft.azure.sdk.iot.service
  children:
  - com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.close()
  - com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.closeAsync()
  - com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.open()
  - com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.openAsync()
  - com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receive()
  - com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receive(long)
  - com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receiveAsync()
  - com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receiveAsync(long)
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  langs:
  - java
  name: FileUploadNotificationReceiver
  nameWithType: FileUploadNotificationReceiver
  fullName: com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java
    startLine: 14
  package: com.microsoft.azure.sdk.iot.service
  syntax:
    content: public class FileUploadNotificationReceiver extends Receiver
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.sdk.iot.service._receiver
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  langs:
  - java
  name: close()
  nameWithType: FileUploadNotificationReceiver.close()
  fullName: void com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.close()
  overload: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.close*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java
    startLine: 68
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Close AmqpReceive object</p>

    <p></p>
  syntax: &o2
    content: public void close()
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the input AmqpReceive object is null </p>
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.closeAsync()
  id: closeAsync()
  parent: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  langs:
  - java
  name: closeAsync()
  nameWithType: FileUploadNotificationReceiver.closeAsync()
  fullName: CompletableFuture<Void> com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.closeAsync()
  overload: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.closeAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java
    startLine: 134
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Async wrapper for <xref uid="com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.close()" data-throw-if-not-resolved="false">close()</xref> operation</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> closeAsync()
    return:
      type: db03ee24
      description: <p>The future object for the requested operation </p>
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  langs:
  - java
  name: open()
  nameWithType: FileUploadNotificationReceiver.open()
  fullName: void com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.open()
  overload: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.open*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java
    startLine: 57
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Open AmqpReceive object</p>

    <p></p>
  syntax: &o1
    content: public void open()
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the input AmqpReceive object is null </p>
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.openAsync()
  id: openAsync()
  parent: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  langs:
  - java
  name: openAsync()
  nameWithType: FileUploadNotificationReceiver.openAsync()
  fullName: CompletableFuture<Void> com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.openAsync()
  overload: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.openAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java
    startLine: 111
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Async wrapper for <xref uid="com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.open()" data-throw-if-not-resolved="false">open()</xref> operation</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> openAsync()
    return:
      type: db03ee24
      description: <p>The future object for the requested operation </p>
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receive()
  id: receive()
  parent: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  langs:
  - java
  name: receive()
  nameWithType: FileUploadNotificationReceiver.receive()
  fullName: FileUploadNotification com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.receive()
  overload: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receive*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java
    startLine: 81
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Receive <xref uid="com.microsoft.azure.sdk.iot.service._file_upload_notification" data-throw-if-not-resolved="false">FileUploadNotification</xref> with default timeout</p>

    <p></p>
  syntax: &o3
    content: public FileUploadNotification receive()
    return:
      type: com.microsoft.azure.sdk.iot.service._file_upload_notification
      description: <p>The received <xref uid="com.microsoft.azure.sdk.iot.service._file_upload_notification" data-throw-if-not-resolved="false">FileUploadNotification</xref> object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the input AmqpReceive object is null </p>
  - type: 8256ba40
    description: <p>This exception is thrown if the receive process has been interrupted </p>
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receive(long)
  id: receive(long)
  parent: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  langs:
  - java
  name: receive(long timeoutMs)
  nameWithType: FileUploadNotificationReceiver.receive(long timeoutMs)
  fullName: FileUploadNotification com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.receive(long timeoutMs)
  overload: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receive*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java
    startLine: 94
  package: com.microsoft.azure.sdk.iot.service
  summary: <p>Receive <xref uid="com.microsoft.azure.sdk.iot.service._file_upload_notification" data-throw-if-not-resolved="false">FileUploadNotification</xref> with specific timeout </p>
  syntax:
    content: public FileUploadNotification receive(long timeoutMs)
    parameters:
    - id: timeoutMs
      type: 0364520f
      description: <p>The timeout in milliseconds </p>
    return:
      type: com.microsoft.azure.sdk.iot.service._file_upload_notification
      description: <p>The received <xref uid="com.microsoft.azure.sdk.iot.service._file_upload_notification" data-throw-if-not-resolved="false">FileUploadNotification</xref> object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the input AmqpReceive object is null </p>
  - type: 8256ba40
    description: <p>This exception is thrown if the receive process has been interrupted </p>
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receiveAsync()
  id: receiveAsync()
  parent: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  langs:
  - java
  name: receiveAsync()
  nameWithType: FileUploadNotificationReceiver.receiveAsync()
  fullName: CompletableFuture<FileUploadNotification> com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.receiveAsync()
  overload: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receiveAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java
    startLine: 157
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Async wrapper for <xref uid="com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receive()" data-throw-if-not-resolved="false">receive()</xref> operation with default timeout</p>

    <p></p>
  syntax:
    content: public CompletableFuture<FileUploadNotification> receiveAsync()
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service._file_upload_notificationa08ddfce
      description: <p>The future object for the requested operation </p>
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receiveAsync(long)
  id: receiveAsync(long)
  parent: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  langs:
  - java
  name: receiveAsync(long timeoutMs)
  nameWithType: FileUploadNotificationReceiver.receiveAsync(long timeoutMs)
  fullName: CompletableFuture<FileUploadNotification> com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.receiveAsync(long timeoutMs)
  overload: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receiveAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java
    startLine: 169
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Async wrapper for <xref uid="com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receive()" data-throw-if-not-resolved="false">receive()</xref> operation with specific timeout</p>

    <p></p>
  syntax:
    content: public CompletableFuture<FileUploadNotification> receiveAsync(long timeoutMs)
    parameters:
    - id: timeoutMs
      type: 0364520f
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service._file_upload_notificationa08ddfce
      description: <p>The future object for the requested operation </p>
references:
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.open*
  name: open
  nameWithType: FileUploadNotificationReceiver.open
  fullName: void com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.open
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.close*
  name: close
  nameWithType: FileUploadNotificationReceiver.close
  fullName: void com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.close
  package: com.microsoft.azure.sdk.iot.service
- uid: 8256ba40
  spec.java:
  - name: InterruptedException
    fullName: InterruptedException
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receive*
  name: receive
  nameWithType: FileUploadNotificationReceiver.receive
  fullName: FileUploadNotification com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.receive
  package: com.microsoft.azure.sdk.iot.service
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.openAsync*
  name: openAsync
  nameWithType: FileUploadNotificationReceiver.openAsync
  fullName: CompletableFuture<Void> com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.openAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.closeAsync*
  name: closeAsync
  nameWithType: FileUploadNotificationReceiver.closeAsync
  fullName: CompletableFuture<Void> com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.closeAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: 9cdf14d0com.microsoft.azure.sdk.iot.service._file_upload_notificationa08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.sdk.iot.service._file_upload_notification
    name: FileUploadNotification
    fullName: com.microsoft.azure.sdk.iot.service.FileUploadNotification
    href: com.microsoft.azure.sdk.iot.service._file_upload_notification.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receiveAsync*
  name: receiveAsync
  nameWithType: FileUploadNotificationReceiver.receiveAsync
  fullName: CompletableFuture<FileUploadNotification> com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.receiveAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._receiver
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._receiver.yml
  name: Receiver
  nameWithType: Receiver
  fullName: com.microsoft.azure.sdk.iot.service.Receiver
  type: Class
  summary: "<p>A receiver is a class abstracting the methods to receive messages, in order to use it for multiple endpoints, e.g. feedback endpoint, â€œalertsâ€\x9D (i.e. D2C). </p>"
  syntax:
    content: public class Receiver
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_file_upload_notification_receive
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_file_upload_notification_receive.yml
  name: AmqpFileUploadNotificationReceive
  nameWithType: AmqpFileUploadNotificationReceive
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive
  type: Class
  summary: <p>Instance of the QPID-Proton-J BaseHandler class overriding the events what are needed to handle high level open, close methods and feedback received event. </p>
  syntax:
    content: public class AmqpFileUploadNotificationReceive implements AmqpFeedbackReceivedEvent
- uid: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol.yml
  name: IotHubServiceClientProtocol
  nameWithType: IotHubServiceClientProtocol
  fullName: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
  type: Enum
  summary: <p>The application-layer protocol used by the service client to communicate with an IoT Hub. </p>
  syntax:
    content: public enum IotHubServiceClientProtocol
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification.yml
  name: FileUploadNotification
  nameWithType: FileUploadNotification
  fullName: com.microsoft.azure.sdk.iot.service.FileUploadNotification
  type: Class
  syntax:
    content: public class FileUploadNotification
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.open()
  parent: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  name: open()
  nameWithType: FileUploadNotificationReceiver.open()
  fullName: void com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.open()
  type: Method
  summary: >-
    <p>Open AmqpReceive object</p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.close()
  parent: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  name: close()
  nameWithType: FileUploadNotificationReceiver.close()
  fullName: void com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.close()
  type: Method
  summary: >-
    <p>Close AmqpReceive object</p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.receive()
  parent: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  name: receive()
  nameWithType: FileUploadNotificationReceiver.receive()
  fullName: FileUploadNotification com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver.receive()
  type: Method
  summary: >-
    <p>Receive <xref uid="com.microsoft.azure.sdk.iot.service._file_upload_notification" data-throw-if-not-resolved="false">FileUploadNotification</xref> with default timeout</p>

    <p></p>
  syntax: *o3
