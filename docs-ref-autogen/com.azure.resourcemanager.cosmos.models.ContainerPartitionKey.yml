### YamlMime:JavaType
uid: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey"
fullName: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey"
name: "ContainerPartitionKey"
nameWithType: "ContainerPartitionKey"
summary: "The configuration of the partition key to be used for partitioning data into multiple partitions."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ContainerPartitionKey"
constructors:
- uid: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.ContainerPartitionKey()"
  fullName: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.ContainerPartitionKey()"
  name: "ContainerPartitionKey()"
  nameWithType: "ContainerPartitionKey.ContainerPartitionKey()"
  syntax: "public ContainerPartitionKey()"
methods:
- uid: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.kind()"
  fullName: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.kind()"
  name: "kind()"
  nameWithType: "ContainerPartitionKey.kind()"
  summary: "Get the kind property: Indicates the kind of algorithm used for partitioning."
  syntax: "public PartitionKind kind()"
  desc: "Get the kind property: Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create."
  returns:
    description: "the kind value."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.PartitionKind?alt=com.azure.resourcemanager.cosmos.models.PartitionKind&text=PartitionKind\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.paths()"
  fullName: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.paths()"
  name: "paths()"
  nameWithType: "ContainerPartitionKey.paths()"
  summary: "Get the paths property: List of paths using which data within the container can be partitioned."
  syntax: "public List<String> paths()"
  desc: "Get the paths property: List of paths using which data within the container can be partitioned."
  returns:
    description: "the paths value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.systemKey()"
  fullName: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.systemKey()"
  name: "systemKey()"
  nameWithType: "ContainerPartitionKey.systemKey()"
  summary: "Get the system<wbr>Key property: Indicates if the container is using a system generated partition key."
  syntax: "public Boolean systemKey()"
  desc: "Get the systemKey property: Indicates if the container is using a system generated partition key."
  returns:
    description: "the systemKey value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.validate()"
  fullName: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.validate()"
  name: "validate()"
  nameWithType: "ContainerPartitionKey.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.version()"
  fullName: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.version()"
  name: "version()"
  nameWithType: "ContainerPartitionKey.version()"
  summary: "Get the version property: Indicates the version of the partition key definition."
  syntax: "public Integer version()"
  desc: "Get the version property: Indicates the version of the partition key definition."
  returns:
    description: "the version value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.withKind(com.azure.resourcemanager.cosmos.models.PartitionKind)"
  fullName: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.withKind(PartitionKind kind)"
  name: "withKind(PartitionKind kind)"
  nameWithType: "ContainerPartitionKey.withKind(PartitionKind kind)"
  summary: "Set the kind property: Indicates the kind of algorithm used for partitioning."
  parameters:
  - description: "the kind value to set."
    name: "kind"
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.PartitionKind?alt=com.azure.resourcemanager.cosmos.models.PartitionKind&text=PartitionKind\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerPartitionKey withKind(PartitionKind kind)"
  desc: "Set the kind property: Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create."
  returns:
    description: "the ContainerPartitionKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.ContainerPartitionKey?alt=com.azure.resourcemanager.cosmos.models.ContainerPartitionKey&text=ContainerPartitionKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.withPaths(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.withPaths(List<String> paths)"
  name: "withPaths(List<String> paths)"
  nameWithType: "ContainerPartitionKey.withPaths(List<String> paths)"
  summary: "Set the paths property: List of paths using which data within the container can be partitioned."
  parameters:
  - description: "the paths value to set."
    name: "paths"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ContainerPartitionKey withPaths(List<String> paths)"
  desc: "Set the paths property: List of paths using which data within the container can be partitioned."
  returns:
    description: "the ContainerPartitionKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.ContainerPartitionKey?alt=com.azure.resourcemanager.cosmos.models.ContainerPartitionKey&text=ContainerPartitionKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.withVersion(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.cosmos.models.ContainerPartitionKey.withVersion(Integer version)"
  name: "withVersion(Integer version)"
  nameWithType: "ContainerPartitionKey.withVersion(Integer version)"
  summary: "Set the version property: Indicates the version of the partition key definition."
  parameters:
  - description: "the version value to set."
    name: "version"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerPartitionKey withVersion(Integer version)"
  desc: "Set the version property: Indicates the version of the partition key definition."
  returns:
    description: "the ContainerPartitionKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.ContainerPartitionKey?alt=com.azure.resourcemanager.cosmos.models.ContainerPartitionKey&text=ContainerPartitionKey\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The configuration of the partition key to be used for partitioning data into multiple partitions."
metadata: {}
package: "com.azure.resourcemanager.cosmos.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.16.0
