### YamlMime:JavaMember
nameWithType: ComputePolicies.update
type: method
members:
- fullName: com.microsoft.azure.management.datalake.analytics.ComputePolicies.update(String resourceGroupName, String accountName, String computePolicyName)
  name: update(String resourceGroupName, String accountName, String computePolicyName)
  nameWithType: ComputePolicies.update(String resourceGroupName, String accountName, String computePolicyName)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Analytics account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Analytics account to which to update the compute policy. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the compute policy to update. </p>
    name: computePolicyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ComputePolicy object if successful. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.ComputePolicy?alt=com.microsoft.azure.management.datalake.analytics.models.ComputePolicy&text=ComputePolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the specified compute policy.</p>

    <p></p>
  syntax: public ComputePolicy update(String resourceGroupName, String accountName, String computePolicyName)
  uid: com.microsoft.azure.management.datalake.analytics.ComputePolicies.update(String,String,String)
- fullName: com.microsoft.azure.management.datalake.analytics.ComputePolicies.update(String resourceGroupName, String accountName, String computePolicyName, ComputePolicy parameters)
  name: update(String resourceGroupName, String accountName, String computePolicyName, ComputePolicy parameters)
  nameWithType: ComputePolicies.update(String resourceGroupName, String accountName, String computePolicyName, ComputePolicy parameters)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Analytics account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Analytics account to which to update the compute policy. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the compute policy to update. </p>
    name: computePolicyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to update the compute policy. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.ComputePolicy?alt=com.microsoft.azure.management.datalake.analytics.models.ComputePolicy&text=ComputePolicy" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ComputePolicy object if successful. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.ComputePolicy?alt=com.microsoft.azure.management.datalake.analytics.models.ComputePolicy&text=ComputePolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the specified compute policy.</p>

    <p></p>
  syntax: public ComputePolicy update(String resourceGroupName, String accountName, String computePolicyName, ComputePolicy parameters)
  uid: com.microsoft.azure.management.datalake.analytics.ComputePolicies.update(String,String,String,ComputePolicy)
uid: com.microsoft.azure.management.datalake.analytics.ComputePolicies.update*
fullName: com.microsoft.azure.management.datalake.analytics.ComputePolicies.update(String resourceGroupName, String accountName, String computePolicyName)
name: update(String resourceGroupName, String accountName, String computePolicyName)
package: com.microsoft.azure.management.datalake.analytics
metadata: {}
