### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync*"
fullName: "com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync"
name: "getFromComputeNodeWithServiceResponseAsync"
nameWithType: "Files.getFromComputeNodeWithServiceResponseAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)"
  name: "getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)"
  nameWithType: "Files.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)"
  summary: "Returns the content of the specified Compute Node file."
  parameters:
  - description: "The ID of the Pool that contains the Compute Node."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Compute Node that contains the file."
    name: "nodeId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The path to the Compute Node file that you want to get the content of."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<InputStream,FileGetFromComputeNodeHeaders>> getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)"
  returns:
    description: "the observable to the InputStream object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders?alt=com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders&text=FileGetFromComputeNodeHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)"
  name: "getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)"
  nameWithType: "Files.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)"
  summary: "Returns the content of the specified Compute Node file."
  parameters:
  - description: "The ID of the Pool that contains the Compute Node."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Compute Node that contains the file."
    name: "nodeId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The path to the Compute Node file that you want to get the content of."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "fileGetFromComputeNodeOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeOptions?alt=com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeOptions&text=FileGetFromComputeNodeOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<InputStream,FileGetFromComputeNodeHeaders>> getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)"
  returns:
    description: "the observable to the InputStream object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders?alt=com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders&text=FileGetFromComputeNodeHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:8.0.0
