### YamlMime:JavaMember
nameWithType: Files.getFromComputeNodeWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  name: getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  nameWithType: Files.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node that contains the file. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The path to the compute node file that you want to get the content of. </p>
    name: filePath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the InputStream object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;InputStream, <xref href="com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders?alt=com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders&text=FileGetFromComputeNodeHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Returns the content of the specified compute node file.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders>> getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  uid: com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  name: getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  nameWithType: Files.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node that contains the file. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The path to the compute node file that you want to get the content of. </p>
    name: filePath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: fileGetFromComputeNodeOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeOptions?alt=com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeOptions&text=FileGetFromComputeNodeOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the InputStream object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;InputStream, <xref href="com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders?alt=com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders&text=FileGetFromComputeNodeHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Returns the content of the specified compute node file.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders>> getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  uid: com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync(String,String,String,FileGetFromComputeNodeOptions)
uid: com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
name: getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
package: com.microsoft.azure.batch.protocol
metadata: {}
