### YamlMime:JavaMember
uid: "com.azure.resourcemanager.network.models.HasPublicIpAddress.UpdateStages.WithExistingPublicIPAddress.withExistingPublicIpAddress*"
fullName: "com.azure.resourcemanager.network.models.HasPublicIpAddress.UpdateStages.WithExistingPublicIPAddress<ReturnT>.withExistingPublicIpAddress"
name: "withExistingPublicIpAddress"
nameWithType: "HasPublicIpAddress.UpdateStages.WithExistingPublicIPAddress<ReturnT>.withExistingPublicIpAddress"
members:
- uid: "com.azure.resourcemanager.network.models.HasPublicIpAddress.UpdateStages.WithExistingPublicIPAddress.withExistingPublicIpAddress(com.azure.resourcemanager.network.models.PublicIpAddress)"
  fullName: "com.azure.resourcemanager.network.models.HasPublicIpAddress.UpdateStages.WithExistingPublicIPAddress<ReturnT>.withExistingPublicIpAddress(PublicIpAddress publicIPAddress)"
  name: "withExistingPublicIpAddress(PublicIpAddress publicIPAddress)"
  nameWithType: "HasPublicIpAddress.UpdateStages.WithExistingPublicIPAddress<ReturnT>.withExistingPublicIpAddress(PublicIpAddress publicIPAddress)"
  summary: "Associates an existing public IP address with the resource."
  parameters:
  - description: "an existing public IP address"
    name: "publicIPAddress"
    type: "<xref href=\"com.azure.resourcemanager.network.models.PublicIpAddress?alt=com.azure.resourcemanager.network.models.PublicIpAddress&text=PublicIpAddress\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ReturnT withExistingPublicIpAddress(PublicIpAddress publicIPAddress)"
  returns:
    description: "the next stage of the update"
    type: "<xref href=\"ReturnT?alt=ReturnT&text=ReturnT\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.HasPublicIpAddress.UpdateStages.WithExistingPublicIPAddress.withExistingPublicIpAddress(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.models.HasPublicIpAddress.UpdateStages.WithExistingPublicIPAddress<ReturnT>.withExistingPublicIpAddress(String resourceId)"
  name: "withExistingPublicIpAddress(String resourceId)"
  nameWithType: "HasPublicIpAddress.UpdateStages.WithExistingPublicIPAddress<ReturnT>.withExistingPublicIpAddress(String resourceId)"
  summary: "Associates an existing public IP address with the resource."
  parameters:
  - description: "the resource ID of an existing public IP address"
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ReturnT withExistingPublicIpAddress(String resourceId)"
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"ReturnT?alt=ReturnT&text=ReturnT\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
