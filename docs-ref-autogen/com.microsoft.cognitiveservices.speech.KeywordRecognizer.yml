### YamlMime:JavaType
constructors:
- fullName: com.microsoft.cognitiveservices.speech.KeywordRecognizer.KeywordRecognizer(com.microsoft.cognitiveservices.speech.audio.AudioConfig audioConfig)
  name: KeywordRecognizer(com.microsoft.cognitiveservices.speech.audio.AudioConfig audioConfig)
  nameWithType: KeywordRecognizer.KeywordRecognizer(com.microsoft.cognitiveservices.speech.audio.AudioConfig audioConfig)
  parameters:
  - description: <p>audio configuration. </p>
    name: audioConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.audio.AudioConfig?alt=com.microsoft.cognitiveservices.speech.audio.AudioConfig&text=AudioConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new instance of a keyword recognizer. If no audio config is provided as input parameter, it will be equivalent to calling with a config constructed with AudioConfig::FromDefaultMicrophoneInput. </p>
  syntax: public KeywordRecognizer(com.microsoft.cognitiveservices.speech.audio.AudioConfig audioConfig)
  uid: com.microsoft.cognitiveservices.speech.KeywordRecognizer.KeywordRecognizer(com.microsoft.cognitiveservices.speech.audio.AudioConfig)
fields:
- field:
    type: final EventHandlerImpl&lt;<xref href="com.microsoft.cognitiveservices.speech.SpeechRecognitionCanceledEventArgs?alt=com.microsoft.cognitiveservices.speech.SpeechRecognitionCanceledEventArgs&text=SpeechRecognitionCanceledEventArgs" data-throw-if-not-resolved="False"/>&gt;
  fullName: com.microsoft.cognitiveservices.speech.KeywordRecognizer.canceled
  name: canceled
  nameWithType: KeywordRecognizer.canceled
  summary: <p>The signal for events relating to the cancellation of an interaction. The event indicates if the reason is a direct cancellation or an error. </p>
  syntax: public final EventHandlerImpl<SpeechRecognitionCanceledEventArgs> canceled= new EventHandlerImpl<SpeechRecognitionCanceledEventArgs>(eventCounter)
  uid: com.microsoft.cognitiveservices.speech.KeywordRecognizer.canceled
- field:
    type: final EventHandlerImpl&lt;<xref href="com.microsoft.cognitiveservices.speech.KeywordRecognitionEventArgs?alt=com.microsoft.cognitiveservices.speech.KeywordRecognitionEventArgs&text=KeywordRecognitionEventArgs" data-throw-if-not-resolved="False"/>&gt;
  fullName: com.microsoft.cognitiveservices.speech.KeywordRecognizer.recognized
  name: recognized
  nameWithType: KeywordRecognizer.recognized
  summary: <p>The signal for events related to the recognition of keywords </p>
  syntax: public final EventHandlerImpl<KeywordRecognitionEventArgs> recognized= new EventHandlerImpl<KeywordRecognitionEventArgs>(eventCounter)
  uid: com.microsoft.cognitiveservices.speech.KeywordRecognizer.recognized
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.cognitiveservices.speech.KeywordRecognizer.close()
  name: close()
  nameWithType: KeywordRecognizer.close()
  summary: '<p>Dispose of associated resources. Note: close() must be called in order to release underlying resources held by the object. </p>'
  syntax: public void close()
  uid: com.microsoft.cognitiveservices.speech.KeywordRecognizer.close()
- fullName: com.microsoft.cognitiveservices.speech.KeywordRecognizer.getProperties()
  name: getProperties()
  nameWithType: KeywordRecognizer.getProperties()
  returns:
    description: <p>The collection of properties and their values defined for KeywordRecognizer. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.PropertyCollection?alt=com.microsoft.cognitiveservices.speech.PropertyCollection&text=PropertyCollection" data-throw-if-not-resolved="False"/>
  summary: <p>The collection of properties and their values defined for KeywordRecognizer. </p>
  syntax: public PropertyCollection getProperties()
  uid: com.microsoft.cognitiveservices.speech.KeywordRecognizer.getProperties()
- fullName: com.microsoft.cognitiveservices.speech.KeywordRecognizer.recognizeOnceAsync(final KeywordRecognitionModel model)
  name: recognizeOnceAsync(final KeywordRecognitionModel model)
  nameWithType: KeywordRecognizer.recognizeOnceAsync(final KeywordRecognitionModel model)
  parameters:
  - description: <p>The keyword recognition model that specifies the keyword to be recognized. </p>
    name: model
    type: final <xref href="com.microsoft.cognitiveservices.speech.KeywordRecognitionModel?alt=com.microsoft.cognitiveservices.speech.KeywordRecognitionModel&text=KeywordRecognitionModel" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task representing the keyword recognition operation. The task returns a value of KeywordRecognitionResult. </p>
    type: Future&lt;<xref href="com.microsoft.cognitiveservices.speech.KeywordRecognitionResult?alt=com.microsoft.cognitiveservices.speech.KeywordRecognitionResult&text=KeywordRecognitionResult" data-throw-if-not-resolved="False"/>&gt;
  summary: '<p>Starts a keyword recognition session. This session will last until the first keyword is recognized. When this happens, Recognized event will be raised and the session will end. To rearm the keyword, the method needs to be called again after the event is emitted. Note: If no keyword is detected in the input, the task will never resolve unless StopRecognition method is called. </p>'
  syntax: public Future<KeywordRecognitionResult> recognizeOnceAsync(final KeywordRecognitionModel model)
  uid: com.microsoft.cognitiveservices.speech.KeywordRecognizer.recognizeOnceAsync(final KeywordRecognitionModel)
- fullName: com.microsoft.cognitiveservices.speech.KeywordRecognizer.stopRecognitionAsync()
  name: stopRecognitionAsync()
  nameWithType: KeywordRecognizer.stopRecognitionAsync()
  returns:
    description: <p>A task representing the asynchronous operation that stops the recognition. </p>
    type: <xref href="Future%3CVoid%3E?alt=Future%3CVoid%3E&text=Future%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Stops a currently active keyword recognition session. </p>
  syntax: public Future<Void> stopRecognitionAsync()
  uid: com.microsoft.cognitiveservices.speech.KeywordRecognizer.stopRecognitionAsync()
nameWithType: KeywordRecognizer
syntax: public class KeywordRecognizer
type: class
uid: com.microsoft.cognitiveservices.speech.KeywordRecognizer
fullName: com.microsoft.cognitiveservices.speech.KeywordRecognizer
name: KeywordRecognizer
package: com.microsoft.cognitiveservices.speech
summary: '<p>Performs keyword recognition on the speech input. Note: close() must be called in order to release underlying resources held by the object. </p>'
metadata: {}
