### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.cognitiveservices.speech.SpeechConfig.enableAudioLogging()
- com.microsoft.cognitiveservices.speech.SpeechConfig.enableDictation()
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromAuthorizationToken(String,String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI,String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI,String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromSubscription(String,String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.getAuthorizationToken()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getEndpointId()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getOutputFormat()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechRecognitionLanguage()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisLanguage()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisVoiceName()
- com.microsoft.cognitiveservices.speech.SpeechConfig.requestWordLevelTimestamps()
- com.microsoft.cognitiveservices.speech.SpeechConfig.setAuthorizationToken(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setEndpointId(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setOutputFormat(OutputFormat)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setProfanity(ProfanityOption)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechRecognitionLanguage(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisLanguage(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisVoiceName(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.speechConfigClass
methods:
- fullName: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.close()
  name: close()
  nameWithType: DialogServiceConfig.close()
  summary: <p>Dispose of associated resources. </p>
  syntax: public void close()
  uid: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.close()
- fullName: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.getLanguage()
  name: getLanguage()
  nameWithType: DialogServiceConfig.getLanguage()
  returns:
    description: <p>Returns the language. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the language </p>
  syntax: public String getLanguage()
  uid: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.getLanguage()
- fullName: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.getProperty(PropertyId id)
  name: getProperty(PropertyId id)
  nameWithType: DialogServiceConfig.getProperty(PropertyId id)
  parameters:
  - description: <p>PropertyId of the property. </p>
    name: id
    type: <xref href="com.microsoft.cognitiveservices.speech.PropertyId?alt=com.microsoft.cognitiveservices.speech.PropertyId&text=PropertyId" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the property by propertyId. </p>
  syntax: public String getProperty(PropertyId id)
  uid: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.getProperty(PropertyId)
- fullName: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.getProperty(String name)
  name: getProperty(String name)
  nameWithType: DialogServiceConfig.getProperty(String name)
  parameters:
  - description: <p>the name of the property. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets a named property as value. </p>
  syntax: public String getProperty(String name)
  uid: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.getProperty(String)
- fullName: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setLanguage(String value)
  name: setLanguage(String value)
  nameWithType: DialogServiceConfig.setLanguage(String value)
  parameters:
  - description: <p>the language identifier in BCP-47 format. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the language </p>
  syntax: public void setLanguage(String value)
  uid: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setLanguage(String)
- fullName: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setProperty(PropertyId id, String value)
  name: setProperty(PropertyId id, String value)
  nameWithType: DialogServiceConfig.setProperty(PropertyId id, String value)
  parameters:
  - description: <p>PropertyId of the property. </p>
    name: id
    type: <xref href="com.microsoft.cognitiveservices.speech.PropertyId?alt=com.microsoft.cognitiveservices.speech.PropertyId&text=PropertyId" data-throw-if-not-resolved="False"/>
  - description: <p>The value. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the property by propertyId. </p>
  syntax: public void setProperty(PropertyId id, String value)
  uid: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setProperty(PropertyId,String)
- fullName: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setProperty(String name, String value)
  name: setProperty(String name, String value)
  nameWithType: DialogServiceConfig.setProperty(String name, String value)
  parameters:
  - description: <p>the name of the property. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the value. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets a named property as value. </p>
  syntax: public void setProperty(String name, String value)
  uid: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setProperty(String,String)
- fullName: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setProxy(String proxyHostName, int proxyPort, String proxyUserName, String proxyPassword)
  name: setProxy(String proxyHostName, int proxyPort, String proxyUserName, String proxyPassword)
  nameWithType: DialogServiceConfig.setProxy(String proxyHostName, int proxyPort, String proxyUserName, String proxyPassword)
  parameters:
  - description: <p>the host name of the proxy server, without the protocol scheme (<a href="http://">http://</a>) </p>
    name: proxyHostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the port number of the proxy server. </p>
    name: proxyPort
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the user name of the proxy server. Use empty string if no user name is needed. </p>
    name: proxyUserName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the password of the proxy server. Use empty string if no user password is needed. </p>
    name: proxyPassword
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: '<p>Sets proxy configuration Note: Proxy functionality is not available on macOS. This function will have no effect on this platform. </p>'
  syntax: public void setProxy(String proxyHostName, int proxyPort, String proxyUserName, String proxyPassword)
  uid: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setProxy(String,int,String,String)
- fullName: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setServiceProperty(String name, String value, ServicePropertyChannel channel)
  name: setServiceProperty(String name, String value, ServicePropertyChannel channel)
  nameWithType: DialogServiceConfig.setServiceProperty(String name, String value, ServicePropertyChannel channel)
  parameters:
  - description: <p>the property name. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the property value. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the channel used to pass the specified property to service. </p>
    name: channel
    type: <xref href="com.microsoft.cognitiveservices.speech.ServicePropertyChannel?alt=com.microsoft.cognitiveservices.speech.ServicePropertyChannel&text=ServicePropertyChannel" data-throw-if-not-resolved="False"/>
  summary: <p>Sets a property value that will be passed to service using the specified channel. </p>
  syntax: public void setServiceProperty(String name, String value, ServicePropertyChannel channel)
  uid: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setServiceProperty(String,String,ServicePropertyChannel)
nameWithType: DialogServiceConfig
syntax: public class DialogServiceConfig extends SpeechConfig
type: class
uid: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig
fullName: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig
name: DialogServiceConfig
package: com.microsoft.cognitiveservices.speech.dialog
summary: '<p>Class that defines base configurations for dialog service connector. Note: close() must be called in order to release underlying resources held by the object. </p>'
metadata: {}
