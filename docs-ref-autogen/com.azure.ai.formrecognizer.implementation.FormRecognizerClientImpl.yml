### YamlMime:ManagedReference
items:
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  id: FormRecognizerClientImpl
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation
  children:
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModel(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModel(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelWithResponseAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelWithResponseAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModel(java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModel(java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelAsync(java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelAsync(java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelWithResponseAsync(java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelWithResponseAsync(java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorization()
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorization(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationAsync()
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationAsync(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync()
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResult(java.util.UUID,java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResult(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultAsync(java.util.UUID,java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultAsync(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync(java.util.UUID,java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResult(java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResult(java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultAsync(java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultAsync(java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync(java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync(java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResult(java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResult(java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultAsync(java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultAsync(java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync(java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync(java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModel(java.util.UUID,java.lang.Boolean)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModel(java.util.UUID,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelAsync(java.util.UUID,java.lang.Boolean)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelAsync(java.util.UUID,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResult(java.util.UUID,java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResult(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultAsync(java.util.UUID,java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultAsync(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync(java.util.UUID,java.util.UUID)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelWithResponseAsync(java.util.UUID,java.lang.Boolean)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelWithResponseAsync(java.util.UUID,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModels()
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModels(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsAsync()
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsAsync(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsWithResponseAsync()
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsWithResponseAsync(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getEndpoint()
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getHttpPipeline()
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getSerializerAdapter()
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModels()
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModels(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsAsync()
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsAsync(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync(java.lang.String)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsSinglePageAsync()
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsSinglePageAsync(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest)
  - com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest,com.azure.core.util.Context)
  langs:
  - java
  name: FormRecognizerClientImpl
  nameWithType: FormRecognizerClientImpl
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  type: Class
  package: com.azure.ai.formrecognizer.implementation
  summary: Initializes a new instance of the FormRecognizerClient type.
  syntax:
    content: public final class FormRecognizerClientImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.FormRecognizerClientImpl(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,java.lang.String)
  id: FormRecognizerClientImpl(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: FormRecognizerClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint)
  nameWithType: FormRecognizerClientImpl.FormRecognizerClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.FormRecognizerClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.FormRecognizerClientImpl*
  type: Constructor
  package: com.azure.ai.formrecognizer.implementation
  summary: Initializes an instance of FormRecognizerClient client.
  syntax:
    content: " FormRecognizerClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint)"
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: The HTTP pipeline to send requests through.
    - id: serializerAdapter
      type: com.azure.core.util.serializer.SerializerAdapter
      description: The serializer to serialize an object into a string.
    - id: endpoint
      type: java.lang.String
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.FormRecognizerClientImpl(com.azure.core.http.HttpPipeline,java.lang.String)
  id: FormRecognizerClientImpl(com.azure.core.http.HttpPipeline,java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: FormRecognizerClientImpl(HttpPipeline httpPipeline, String endpoint)
  nameWithType: FormRecognizerClientImpl.FormRecognizerClientImpl(HttpPipeline httpPipeline, String endpoint)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.FormRecognizerClientImpl(HttpPipeline httpPipeline, String endpoint)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.FormRecognizerClientImpl*
  type: Constructor
  package: com.azure.ai.formrecognizer.implementation
  summary: Initializes an instance of FormRecognizerClient client.
  syntax:
    content: " FormRecognizerClientImpl(HttpPipeline httpPipeline, String endpoint)"
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: The HTTP pipeline to send requests through.
    - id: endpoint
      type: java.lang.String
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.FormRecognizerClientImpl(java.lang.String)
  id: FormRecognizerClientImpl(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: FormRecognizerClientImpl(String endpoint)
  nameWithType: FormRecognizerClientImpl.FormRecognizerClientImpl(String endpoint)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.FormRecognizerClientImpl(String endpoint)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.FormRecognizerClientImpl*
  type: Constructor
  package: com.azure.ai.formrecognizer.implementation
  summary: Initializes an instance of FormRecognizerClient client.
  syntax:
    content: " FormRecognizerClientImpl(String endpoint)"
    parameters:
    - id: endpoint
      type: java.lang.String
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)
  id: analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeLayoutAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength)
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public void analyzeLayoutAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength)
    parameters:
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)
  id: analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeLayoutAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public void analyzeLayoutAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Context context)
    parameters:
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath)
  id: analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeLayoutAsync(SourcePath fileStream)
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsync(SourcePath fileStream)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(SourcePath fileStream)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public void analyzeLayoutAsync(SourcePath fileStream)
    parameters:
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  id: analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeLayoutAsync(SourcePath fileStream, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsync(SourcePath fileStream, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(SourcePath fileStream, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public void analyzeLayoutAsync(SourcePath fileStream, Context context)
    parameters:
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)
  id: analyzeLayoutAsyncAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeLayoutAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength)
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<Void> analyzeLayoutAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength)
    parameters:
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)
  id: analyzeLayoutAsyncAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeLayoutAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<Void> analyzeLayoutAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Context context)
    parameters:
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath)
  id: analyzeLayoutAsyncAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeLayoutAsyncAsync(SourcePath fileStream)
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsyncAsync(SourcePath fileStream)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync(SourcePath fileStream)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<Void> analyzeLayoutAsyncAsync(SourcePath fileStream)
    parameters:
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  id: analyzeLayoutAsyncAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeLayoutAsyncAsync(SourcePath fileStream, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsyncAsync(SourcePath fileStream, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync(SourcePath fileStream, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<Void> analyzeLayoutAsyncAsync(SourcePath fileStream, Context context)
    parameters:
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)
  id: analyzeLayoutAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeLayoutAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength)
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<AnalyzeLayoutAsyncResponse> analyzeLayoutAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength)
    parameters:
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeLayoutAsyncResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)
  id: analyzeLayoutAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeLayoutAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<AnalyzeLayoutAsyncResponse> analyzeLayoutAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Context context)
    parameters:
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeLayoutAsyncResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath)
  id: analyzeLayoutAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeLayoutAsyncWithResponseAsync(SourcePath fileStream)
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(SourcePath fileStream)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(SourcePath fileStream)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<AnalyzeLayoutAsyncResponse> analyzeLayoutAsyncWithResponseAsync(SourcePath fileStream)
    parameters:
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeLayoutAsyncResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  id: analyzeLayoutAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeLayoutAsyncWithResponseAsync(SourcePath fileStream, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(SourcePath fileStream, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync(SourcePath fileStream, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<AnalyzeLayoutAsyncResponse> analyzeLayoutAsyncWithResponseAsync(SourcePath fileStream, Context context)
    parameters:
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeLayoutAsyncResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  id: analyzeReceiptAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeReceiptAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract field text and semantic values from a given receipt document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public void analyzeReceiptAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
    parameters:
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  id: analyzeReceiptAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeReceiptAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract field text and semantic values from a given receipt document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public void analyzeReceiptAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
    parameters:
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  id: analyzeReceiptAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeReceiptAsync(Boolean includeTextDetails, SourcePath fileStream)
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsync(Boolean includeTextDetails, SourcePath fileStream)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync(Boolean includeTextDetails, SourcePath fileStream)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract field text and semantic values from a given receipt document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public void analyzeReceiptAsync(Boolean includeTextDetails, SourcePath fileStream)
    parameters:
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  id: analyzeReceiptAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeReceiptAsync(Boolean includeTextDetails, SourcePath fileStream, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsync(Boolean includeTextDetails, SourcePath fileStream, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync(Boolean includeTextDetails, SourcePath fileStream, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract field text and semantic values from a given receipt document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public void analyzeReceiptAsync(Boolean includeTextDetails, SourcePath fileStream, Context context)
    parameters:
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  id: analyzeReceiptAsyncAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeReceiptAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract field text and semantic values from a given receipt document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<Void> analyzeReceiptAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
    parameters:
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  id: analyzeReceiptAsyncAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeReceiptAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract field text and semantic values from a given receipt document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<Void> analyzeReceiptAsyncAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
    parameters:
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  id: analyzeReceiptAsyncAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeReceiptAsyncAsync(Boolean includeTextDetails, SourcePath fileStream)
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsyncAsync(Boolean includeTextDetails, SourcePath fileStream)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync(Boolean includeTextDetails, SourcePath fileStream)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract field text and semantic values from a given receipt document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<Void> analyzeReceiptAsyncAsync(Boolean includeTextDetails, SourcePath fileStream)
    parameters:
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  id: analyzeReceiptAsyncAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeReceiptAsyncAsync(Boolean includeTextDetails, SourcePath fileStream, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsyncAsync(Boolean includeTextDetails, SourcePath fileStream, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync(Boolean includeTextDetails, SourcePath fileStream, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract field text and semantic values from a given receipt document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<Void> analyzeReceiptAsyncAsync(Boolean includeTextDetails, SourcePath fileStream, Context context)
    parameters:
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  id: analyzeReceiptAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeReceiptAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract field text and semantic values from a given receipt document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<AnalyzeReceiptAsyncResponse> analyzeReceiptAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
    parameters:
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeReceiptAsyncResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  id: analyzeReceiptAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeReceiptAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract field text and semantic values from a given receipt document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<AnalyzeReceiptAsyncResponse> analyzeReceiptAsyncWithResponseAsync(ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
    parameters:
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeReceiptAsyncResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  id: analyzeReceiptAsyncWithResponseAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeReceiptAsyncWithResponseAsync(Boolean includeTextDetails, SourcePath fileStream)
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(Boolean includeTextDetails, SourcePath fileStream)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(Boolean includeTextDetails, SourcePath fileStream)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract field text and semantic values from a given receipt document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<AnalyzeReceiptAsyncResponse> analyzeReceiptAsyncWithResponseAsync(Boolean includeTextDetails, SourcePath fileStream)
    parameters:
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeReceiptAsyncResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  id: analyzeReceiptAsyncWithResponseAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeReceiptAsyncWithResponseAsync(Boolean includeTextDetails, SourcePath fileStream, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(Boolean includeTextDetails, SourcePath fileStream, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync(Boolean includeTextDetails, SourcePath fileStream, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract field text and semantic values from a given receipt document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<AnalyzeReceiptAsyncResponse> analyzeReceiptAsyncWithResponseAsync(Boolean includeTextDetails, SourcePath fileStream, Context context)
    parameters:
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeReceiptAsyncResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  id: analyzeWithCustomModel(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeWithCustomModel(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModel(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract key-value pairs, tables, and semantic values from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public void analyzeWithCustomModel(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  id: analyzeWithCustomModel(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeWithCustomModel(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModel(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract key-value pairs, tables, and semantic values from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public void analyzeWithCustomModel(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  id: analyzeWithCustomModel(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeWithCustomModel(UUID modelId, Boolean includeTextDetails, SourcePath fileStream)
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModel(UUID modelId, Boolean includeTextDetails, SourcePath fileStream)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel(UUID modelId, Boolean includeTextDetails, SourcePath fileStream)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract key-value pairs, tables, and semantic values from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public void analyzeWithCustomModel(UUID modelId, Boolean includeTextDetails, SourcePath fileStream)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  id: analyzeWithCustomModel(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeWithCustomModel(UUID modelId, Boolean includeTextDetails, SourcePath fileStream, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModel(UUID modelId, Boolean includeTextDetails, SourcePath fileStream, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel(UUID modelId, Boolean includeTextDetails, SourcePath fileStream, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract key-value pairs, tables, and semantic values from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public void analyzeWithCustomModel(UUID modelId, Boolean includeTextDetails, SourcePath fileStream, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  id: analyzeWithCustomModelAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeWithCustomModelAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModelAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract key-value pairs, tables, and semantic values from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<Void> analyzeWithCustomModelAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  id: analyzeWithCustomModelAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeWithCustomModelAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModelAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract key-value pairs, tables, and semantic values from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<Void> analyzeWithCustomModelAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  id: analyzeWithCustomModelAsync(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeWithCustomModelAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream)
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModelAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract key-value pairs, tables, and semantic values from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<Void> analyzeWithCustomModelAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  id: analyzeWithCustomModelAsync(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeWithCustomModelAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModelAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract key-value pairs, tables, and semantic values from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<Void> analyzeWithCustomModelAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  id: analyzeWithCustomModelWithResponseAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeWithCustomModelWithResponseAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract key-value pairs, tables, and semantic values from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<AnalyzeWithCustomModelResponse> analyzeWithCustomModelWithResponseAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeWithCustomModelResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  id: analyzeWithCustomModelWithResponseAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.ContentType,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeWithCustomModelWithResponseAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract key-value pairs, tables, and semantic values from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<AnalyzeWithCustomModelResponse> analyzeWithCustomModelWithResponseAsync(UUID modelId, ContentType contentType, Flux<ByteBuffer> fileStream, long contentLength, Boolean includeTextDetails, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: contentType
      type: com.azure.ai.formrecognizer.implementation.models.ContentType
      description: Content type for upload.
    - id: fileStream
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: Uri or local path to source data.
    - id: contentLength
      type: long
      description: The contentLength parameter.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeWithCustomModelResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  id: analyzeWithCustomModelWithResponseAsync(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeWithCustomModelWithResponseAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream)
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract key-value pairs, tables, and semantic values from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<AnalyzeWithCustomModelResponse> analyzeWithCustomModelWithResponseAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeWithCustomModelResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  id: analyzeWithCustomModelWithResponseAsync(java.util.UUID,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.SourcePath,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: analyzeWithCustomModelWithResponseAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream, Context context)
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Extract key-value pairs, tables, and semantic values from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed.
  syntax:
    content: public Mono<AnalyzeWithCustomModelResponse> analyzeWithCustomModelWithResponseAsync(UUID modelId, Boolean includeTextDetails, SourcePath fileStream, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: includeTextDetails
      type: java.lang.Boolean
      description: Include text lines and element references in the result.
    - id: fileStream
      type: com.azure.ai.formrecognizer.implementation.models.SourcePath
      description: Uri or local path to source data.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeWithCustomModelResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModel(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest)
  id: copyCustomModel(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: copyCustomModel(UUID modelId, CopyRequest copyRequest)
  nameWithType: FormRecognizerClientImpl.copyCustomModel(UUID modelId, CopyRequest copyRequest)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModel(UUID modelId, CopyRequest copyRequest)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Copy custom model stored in this resource (the source) to user specified target Form Recognizer resource.
  syntax:
    content: public void copyCustomModel(UUID modelId, CopyRequest copyRequest)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: copyRequest
      type: com.azure.ai.formrecognizer.implementation.models.CopyRequest
      description: >-
        Request parameter to copy an existing custom model from the source resource to a target
             resource referenced by the resource ID.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModel(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest,com.azure.core.util.Context)
  id: copyCustomModel(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: copyCustomModel(UUID modelId, CopyRequest copyRequest, Context context)
  nameWithType: FormRecognizerClientImpl.copyCustomModel(UUID modelId, CopyRequest copyRequest, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModel(UUID modelId, CopyRequest copyRequest, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Copy custom model stored in this resource (the source) to user specified target Form Recognizer resource.
  syntax:
    content: public void copyCustomModel(UUID modelId, CopyRequest copyRequest, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: copyRequest
      type: com.azure.ai.formrecognizer.implementation.models.CopyRequest
      description: >-
        Request parameter to copy an existing custom model from the source resource to a target
             resource referenced by the resource ID.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest)
  id: copyCustomModelAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: copyCustomModelAsync(UUID modelId, CopyRequest copyRequest)
  nameWithType: FormRecognizerClientImpl.copyCustomModelAsync(UUID modelId, CopyRequest copyRequest)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelAsync(UUID modelId, CopyRequest copyRequest)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Copy custom model stored in this resource (the source) to user specified target Form Recognizer resource.
  syntax:
    content: public Mono<Void> copyCustomModelAsync(UUID modelId, CopyRequest copyRequest)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: copyRequest
      type: com.azure.ai.formrecognizer.implementation.models.CopyRequest
      description: >-
        Request parameter to copy an existing custom model from the source resource to a target
             resource referenced by the resource ID.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest,com.azure.core.util.Context)
  id: copyCustomModelAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: copyCustomModelAsync(UUID modelId, CopyRequest copyRequest, Context context)
  nameWithType: FormRecognizerClientImpl.copyCustomModelAsync(UUID modelId, CopyRequest copyRequest, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelAsync(UUID modelId, CopyRequest copyRequest, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Copy custom model stored in this resource (the source) to user specified target Form Recognizer resource.
  syntax:
    content: public Mono<Void> copyCustomModelAsync(UUID modelId, CopyRequest copyRequest, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: copyRequest
      type: com.azure.ai.formrecognizer.implementation.models.CopyRequest
      description: >-
        Request parameter to copy an existing custom model from the source resource to a target
             resource referenced by the resource ID.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelWithResponseAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest)
  id: copyCustomModelWithResponseAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: copyCustomModelWithResponseAsync(UUID modelId, CopyRequest copyRequest)
  nameWithType: FormRecognizerClientImpl.copyCustomModelWithResponseAsync(UUID modelId, CopyRequest copyRequest)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelWithResponseAsync(UUID modelId, CopyRequest copyRequest)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Copy custom model stored in this resource (the source) to user specified target Form Recognizer resource.
  syntax:
    content: public Mono<CopyCustomModelResponse> copyCustomModelWithResponseAsync(UUID modelId, CopyRequest copyRequest)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: copyRequest
      type: com.azure.ai.formrecognizer.implementation.models.CopyRequest
      description: >-
        Request parameter to copy an existing custom model from the source resource to a target
             resource referenced by the resource ID.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.CopyCustomModelResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelWithResponseAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest,com.azure.core.util.Context)
  id: copyCustomModelWithResponseAsync(java.util.UUID,com.azure.ai.formrecognizer.implementation.models.CopyRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: copyCustomModelWithResponseAsync(UUID modelId, CopyRequest copyRequest, Context context)
  nameWithType: FormRecognizerClientImpl.copyCustomModelWithResponseAsync(UUID modelId, CopyRequest copyRequest, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelWithResponseAsync(UUID modelId, CopyRequest copyRequest, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Copy custom model stored in this resource (the source) to user specified target Form Recognizer resource.
  syntax:
    content: public Mono<CopyCustomModelResponse> copyCustomModelWithResponseAsync(UUID modelId, CopyRequest copyRequest, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: copyRequest
      type: com.azure.ai.formrecognizer.implementation.models.CopyRequest
      description: >-
        Request parameter to copy an existing custom model from the source resource to a target
             resource referenced by the resource ID.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.CopyCustomModelResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModel(java.util.UUID)
  id: deleteCustomModel(java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: deleteCustomModel(UUID modelId)
  nameWithType: FormRecognizerClientImpl.deleteCustomModel(UUID modelId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModel(UUID modelId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Mark model for deletion. Model artifacts will be permanently removed within a predetermined period.
  syntax:
    content: public void deleteCustomModel(UUID modelId)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModel(java.util.UUID,com.azure.core.util.Context)
  id: deleteCustomModel(java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: deleteCustomModel(UUID modelId, Context context)
  nameWithType: FormRecognizerClientImpl.deleteCustomModel(UUID modelId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModel(UUID modelId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Mark model for deletion. Model artifacts will be permanently removed within a predetermined period.
  syntax:
    content: public void deleteCustomModel(UUID modelId, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelAsync(java.util.UUID)
  id: deleteCustomModelAsync(java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: deleteCustomModelAsync(UUID modelId)
  nameWithType: FormRecognizerClientImpl.deleteCustomModelAsync(UUID modelId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelAsync(UUID modelId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Mark model for deletion. Model artifacts will be permanently removed within a predetermined period.
  syntax:
    content: public Mono<Void> deleteCustomModelAsync(UUID modelId)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelAsync(java.util.UUID,com.azure.core.util.Context)
  id: deleteCustomModelAsync(java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: deleteCustomModelAsync(UUID modelId, Context context)
  nameWithType: FormRecognizerClientImpl.deleteCustomModelAsync(UUID modelId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelAsync(UUID modelId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Mark model for deletion. Model artifacts will be permanently removed within a predetermined period.
  syntax:
    content: public Mono<Void> deleteCustomModelAsync(UUID modelId, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelWithResponseAsync(java.util.UUID)
  id: deleteCustomModelWithResponseAsync(java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: deleteCustomModelWithResponseAsync(UUID modelId)
  nameWithType: FormRecognizerClientImpl.deleteCustomModelWithResponseAsync(UUID modelId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelWithResponseAsync(UUID modelId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Mark model for deletion. Model artifacts will be permanently removed within a predetermined period.
  syntax:
    content: public Mono<Response<Void>> deleteCustomModelWithResponseAsync(UUID modelId)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelWithResponseAsync(java.util.UUID,com.azure.core.util.Context)
  id: deleteCustomModelWithResponseAsync(java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: deleteCustomModelWithResponseAsync(UUID modelId, Context context)
  nameWithType: FormRecognizerClientImpl.deleteCustomModelWithResponseAsync(UUID modelId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelWithResponseAsync(UUID modelId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Mark model for deletion. Model artifacts will be permanently removed within a predetermined period.
  syntax:
    content: public Mono<Response<Void>> deleteCustomModelWithResponseAsync(UUID modelId, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorization()
  id: generateModelCopyAuthorization()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: generateModelCopyAuthorization()
  nameWithType: FormRecognizerClientImpl.generateModelCopyAuthorization()
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorization()
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorization*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Generate authorization to copy a model into the target Form Recognizer resource.
  syntax:
    content: public CopyAuthorizationResult generateModelCopyAuthorization()
    return:
      type: com.azure.ai.formrecognizer.implementation.models.CopyAuthorizationResult
      description: request parameter that contains authorization claims for copy operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorization(com.azure.core.util.Context)
  id: generateModelCopyAuthorization(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: generateModelCopyAuthorization(Context context)
  nameWithType: FormRecognizerClientImpl.generateModelCopyAuthorization(Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorization(Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorization*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Generate authorization to copy a model into the target Form Recognizer resource.
  syntax:
    content: public CopyAuthorizationResult generateModelCopyAuthorization(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.ai.formrecognizer.implementation.models.CopyAuthorizationResult
      description: request parameter that contains authorization claims for copy operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationAsync()
  id: generateModelCopyAuthorizationAsync()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: generateModelCopyAuthorizationAsync()
  nameWithType: FormRecognizerClientImpl.generateModelCopyAuthorizationAsync()
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationAsync()
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Generate authorization to copy a model into the target Form Recognizer resource.
  syntax:
    content: public Mono<CopyAuthorizationResult> generateModelCopyAuthorizationAsync()
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.CopyAuthorizationResult>
      description: request parameter that contains authorization claims for copy operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationAsync(com.azure.core.util.Context)
  id: generateModelCopyAuthorizationAsync(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: generateModelCopyAuthorizationAsync(Context context)
  nameWithType: FormRecognizerClientImpl.generateModelCopyAuthorizationAsync(Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationAsync(Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Generate authorization to copy a model into the target Form Recognizer resource.
  syntax:
    content: public Mono<CopyAuthorizationResult> generateModelCopyAuthorizationAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.CopyAuthorizationResult>
      description: request parameter that contains authorization claims for copy operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync()
  id: generateModelCopyAuthorizationWithResponseAsync()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: generateModelCopyAuthorizationWithResponseAsync()
  nameWithType: FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync()
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync()
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Generate authorization to copy a model into the target Form Recognizer resource.
  syntax:
    content: public Mono<GenerateModelCopyAuthorizationResponse> generateModelCopyAuthorizationWithResponseAsync()
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.GenerateModelCopyAuthorizationResponse>
      description: request parameter that contains authorization claims for copy operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync(com.azure.core.util.Context)
  id: generateModelCopyAuthorizationWithResponseAsync(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: generateModelCopyAuthorizationWithResponseAsync(Context context)
  nameWithType: FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync(Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync(Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Generate authorization to copy a model into the target Form Recognizer resource.
  syntax:
    content: public Mono<GenerateModelCopyAuthorizationResponse> generateModelCopyAuthorizationWithResponseAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.GenerateModelCopyAuthorizationResponse>
      description: request parameter that contains authorization claims for copy operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResult(java.util.UUID,java.util.UUID)
  id: getAnalyzeFormResult(java.util.UUID,java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeFormResult(UUID modelId, UUID resultId)
  nameWithType: FormRecognizerClientImpl.getAnalyzeFormResult(UUID modelId, UUID resultId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResult(UUID modelId, UUID resultId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResult*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Obtain current status and the result of the analyze form operation.
  syntax:
    content: public AnalyzeOperationResult getAnalyzeFormResult(UUID modelId, UUID resultId)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    return:
      type: com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResult(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  id: getAnalyzeFormResult(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeFormResult(UUID modelId, UUID resultId, Context context)
  nameWithType: FormRecognizerClientImpl.getAnalyzeFormResult(UUID modelId, UUID resultId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResult(UUID modelId, UUID resultId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResult*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Obtain current status and the result of the analyze form operation.
  syntax:
    content: public AnalyzeOperationResult getAnalyzeFormResult(UUID modelId, UUID resultId, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultAsync(java.util.UUID,java.util.UUID)
  id: getAnalyzeFormResultAsync(java.util.UUID,java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeFormResultAsync(UUID modelId, UUID resultId)
  nameWithType: FormRecognizerClientImpl.getAnalyzeFormResultAsync(UUID modelId, UUID resultId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultAsync(UUID modelId, UUID resultId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Obtain current status and the result of the analyze form operation.
  syntax:
    content: public Mono<AnalyzeOperationResult> getAnalyzeFormResultAsync(UUID modelId, UUID resultId)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultAsync(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  id: getAnalyzeFormResultAsync(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeFormResultAsync(UUID modelId, UUID resultId, Context context)
  nameWithType: FormRecognizerClientImpl.getAnalyzeFormResultAsync(UUID modelId, UUID resultId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultAsync(UUID modelId, UUID resultId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Obtain current status and the result of the analyze form operation.
  syntax:
    content: public Mono<AnalyzeOperationResult> getAnalyzeFormResultAsync(UUID modelId, UUID resultId, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync(java.util.UUID,java.util.UUID)
  id: getAnalyzeFormResultWithResponseAsync(java.util.UUID,java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeFormResultWithResponseAsync(UUID modelId, UUID resultId)
  nameWithType: FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync(UUID modelId, UUID resultId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync(UUID modelId, UUID resultId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Obtain current status and the result of the analyze form operation.
  syntax:
    content: public Mono<Response<AnalyzeOperationResult>> getAnalyzeFormResultWithResponseAsync(UUID modelId, UUID resultId)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>>
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  id: getAnalyzeFormResultWithResponseAsync(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeFormResultWithResponseAsync(UUID modelId, UUID resultId, Context context)
  nameWithType: FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync(UUID modelId, UUID resultId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync(UUID modelId, UUID resultId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Obtain current status and the result of the analyze form operation.
  syntax:
    content: public Mono<Response<AnalyzeOperationResult>> getAnalyzeFormResultWithResponseAsync(UUID modelId, UUID resultId, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>>
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResult(java.util.UUID)
  id: getAnalyzeLayoutResult(java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeLayoutResult(UUID resultId)
  nameWithType: FormRecognizerClientImpl.getAnalyzeLayoutResult(UUID resultId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResult(UUID resultId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResult*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Track the progress and obtain the result of the analyze layout operation.
  syntax:
    content: public AnalyzeOperationResult getAnalyzeLayoutResult(UUID resultId)
    parameters:
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    return:
      type: com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResult(java.util.UUID,com.azure.core.util.Context)
  id: getAnalyzeLayoutResult(java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeLayoutResult(UUID resultId, Context context)
  nameWithType: FormRecognizerClientImpl.getAnalyzeLayoutResult(UUID resultId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResult(UUID resultId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResult*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Track the progress and obtain the result of the analyze layout operation.
  syntax:
    content: public AnalyzeOperationResult getAnalyzeLayoutResult(UUID resultId, Context context)
    parameters:
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultAsync(java.util.UUID)
  id: getAnalyzeLayoutResultAsync(java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeLayoutResultAsync(UUID resultId)
  nameWithType: FormRecognizerClientImpl.getAnalyzeLayoutResultAsync(UUID resultId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultAsync(UUID resultId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Track the progress and obtain the result of the analyze layout operation.
  syntax:
    content: public Mono<AnalyzeOperationResult> getAnalyzeLayoutResultAsync(UUID resultId)
    parameters:
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultAsync(java.util.UUID,com.azure.core.util.Context)
  id: getAnalyzeLayoutResultAsync(java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeLayoutResultAsync(UUID resultId, Context context)
  nameWithType: FormRecognizerClientImpl.getAnalyzeLayoutResultAsync(UUID resultId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultAsync(UUID resultId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Track the progress and obtain the result of the analyze layout operation.
  syntax:
    content: public Mono<AnalyzeOperationResult> getAnalyzeLayoutResultAsync(UUID resultId, Context context)
    parameters:
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync(java.util.UUID)
  id: getAnalyzeLayoutResultWithResponseAsync(java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeLayoutResultWithResponseAsync(UUID resultId)
  nameWithType: FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync(UUID resultId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync(UUID resultId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Track the progress and obtain the result of the analyze layout operation.
  syntax:
    content: public Mono<Response<AnalyzeOperationResult>> getAnalyzeLayoutResultWithResponseAsync(UUID resultId)
    parameters:
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>>
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync(java.util.UUID,com.azure.core.util.Context)
  id: getAnalyzeLayoutResultWithResponseAsync(java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeLayoutResultWithResponseAsync(UUID resultId, Context context)
  nameWithType: FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync(UUID resultId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync(UUID resultId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Track the progress and obtain the result of the analyze layout operation.
  syntax:
    content: public Mono<Response<AnalyzeOperationResult>> getAnalyzeLayoutResultWithResponseAsync(UUID resultId, Context context)
    parameters:
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>>
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResult(java.util.UUID)
  id: getAnalyzeReceiptResult(java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeReceiptResult(UUID resultId)
  nameWithType: FormRecognizerClientImpl.getAnalyzeReceiptResult(UUID resultId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResult(UUID resultId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResult*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Track the progress and obtain the result of the analyze receipt operation.
  syntax:
    content: public AnalyzeOperationResult getAnalyzeReceiptResult(UUID resultId)
    parameters:
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    return:
      type: com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResult(java.util.UUID,com.azure.core.util.Context)
  id: getAnalyzeReceiptResult(java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeReceiptResult(UUID resultId, Context context)
  nameWithType: FormRecognizerClientImpl.getAnalyzeReceiptResult(UUID resultId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResult(UUID resultId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResult*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Track the progress and obtain the result of the analyze receipt operation.
  syntax:
    content: public AnalyzeOperationResult getAnalyzeReceiptResult(UUID resultId, Context context)
    parameters:
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultAsync(java.util.UUID)
  id: getAnalyzeReceiptResultAsync(java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeReceiptResultAsync(UUID resultId)
  nameWithType: FormRecognizerClientImpl.getAnalyzeReceiptResultAsync(UUID resultId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultAsync(UUID resultId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Track the progress and obtain the result of the analyze receipt operation.
  syntax:
    content: public Mono<AnalyzeOperationResult> getAnalyzeReceiptResultAsync(UUID resultId)
    parameters:
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultAsync(java.util.UUID,com.azure.core.util.Context)
  id: getAnalyzeReceiptResultAsync(java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeReceiptResultAsync(UUID resultId, Context context)
  nameWithType: FormRecognizerClientImpl.getAnalyzeReceiptResultAsync(UUID resultId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultAsync(UUID resultId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Track the progress and obtain the result of the analyze receipt operation.
  syntax:
    content: public Mono<AnalyzeOperationResult> getAnalyzeReceiptResultAsync(UUID resultId, Context context)
    parameters:
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync(java.util.UUID)
  id: getAnalyzeReceiptResultWithResponseAsync(java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeReceiptResultWithResponseAsync(UUID resultId)
  nameWithType: FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync(UUID resultId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync(UUID resultId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Track the progress and obtain the result of the analyze receipt operation.
  syntax:
    content: public Mono<Response<AnalyzeOperationResult>> getAnalyzeReceiptResultWithResponseAsync(UUID resultId)
    parameters:
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>>
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync(java.util.UUID,com.azure.core.util.Context)
  id: getAnalyzeReceiptResultWithResponseAsync(java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getAnalyzeReceiptResultWithResponseAsync(UUID resultId, Context context)
  nameWithType: FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync(UUID resultId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync(UUID resultId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Track the progress and obtain the result of the analyze receipt operation.
  syntax:
    content: public Mono<Response<AnalyzeOperationResult>> getAnalyzeReceiptResultWithResponseAsync(UUID resultId, Context context)
    parameters:
    - id: resultId
      type: java.util.UUID
      description: Analyze operation result identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>>
      description: status and result of the queued analyze operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModel(java.util.UUID,java.lang.Boolean)
  id: getCustomModel(java.util.UUID,java.lang.Boolean)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModel(UUID modelId, Boolean includeKeys)
  nameWithType: FormRecognizerClientImpl.getCustomModel(UUID modelId, Boolean includeKeys)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModel(UUID modelId, Boolean includeKeys)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get detailed information about a custom model.
  syntax:
    content: public Model getCustomModel(UUID modelId, Boolean includeKeys)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: includeKeys
      type: java.lang.Boolean
      description: Include list of extracted keys in model information.
    return:
      type: com.azure.ai.formrecognizer.implementation.models.Model
      description: detailed information about a custom model.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModel(java.util.UUID,java.lang.Boolean,com.azure.core.util.Context)
  id: getCustomModel(java.util.UUID,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModel(UUID modelId, Boolean includeKeys, Context context)
  nameWithType: FormRecognizerClientImpl.getCustomModel(UUID modelId, Boolean includeKeys, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModel(UUID modelId, Boolean includeKeys, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get detailed information about a custom model.
  syntax:
    content: public Model getCustomModel(UUID modelId, Boolean includeKeys, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: includeKeys
      type: java.lang.Boolean
      description: Include list of extracted keys in model information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.ai.formrecognizer.implementation.models.Model
      description: detailed information about a custom model.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelAsync(java.util.UUID,java.lang.Boolean)
  id: getCustomModelAsync(java.util.UUID,java.lang.Boolean)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelAsync(UUID modelId, Boolean includeKeys)
  nameWithType: FormRecognizerClientImpl.getCustomModelAsync(UUID modelId, Boolean includeKeys)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelAsync(UUID modelId, Boolean includeKeys)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get detailed information about a custom model.
  syntax:
    content: public Mono<Model> getCustomModelAsync(UUID modelId, Boolean includeKeys)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: includeKeys
      type: java.lang.Boolean
      description: Include list of extracted keys in model information.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.Model>
      description: detailed information about a custom model.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelAsync(java.util.UUID,java.lang.Boolean,com.azure.core.util.Context)
  id: getCustomModelAsync(java.util.UUID,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelAsync(UUID modelId, Boolean includeKeys, Context context)
  nameWithType: FormRecognizerClientImpl.getCustomModelAsync(UUID modelId, Boolean includeKeys, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelAsync(UUID modelId, Boolean includeKeys, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get detailed information about a custom model.
  syntax:
    content: public Mono<Model> getCustomModelAsync(UUID modelId, Boolean includeKeys, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: includeKeys
      type: java.lang.Boolean
      description: Include list of extracted keys in model information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.Model>
      description: detailed information about a custom model.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResult(java.util.UUID,java.util.UUID)
  id: getCustomModelCopyResult(java.util.UUID,java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelCopyResult(UUID modelId, UUID resultId)
  nameWithType: FormRecognizerClientImpl.getCustomModelCopyResult(UUID modelId, UUID resultId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResult(UUID modelId, UUID resultId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResult*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Obtain current status and the result of a custom model copy operation.
  syntax:
    content: public CopyOperationResult getCustomModelCopyResult(UUID modelId, UUID resultId)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: resultId
      type: java.util.UUID
      description: Copy operation result identifier.
    return:
      type: com.azure.ai.formrecognizer.implementation.models.CopyOperationResult
      description: status and result of the queued copy operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResult(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  id: getCustomModelCopyResult(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelCopyResult(UUID modelId, UUID resultId, Context context)
  nameWithType: FormRecognizerClientImpl.getCustomModelCopyResult(UUID modelId, UUID resultId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResult(UUID modelId, UUID resultId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResult*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Obtain current status and the result of a custom model copy operation.
  syntax:
    content: public CopyOperationResult getCustomModelCopyResult(UUID modelId, UUID resultId, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: resultId
      type: java.util.UUID
      description: Copy operation result identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.ai.formrecognizer.implementation.models.CopyOperationResult
      description: status and result of the queued copy operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultAsync(java.util.UUID,java.util.UUID)
  id: getCustomModelCopyResultAsync(java.util.UUID,java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelCopyResultAsync(UUID modelId, UUID resultId)
  nameWithType: FormRecognizerClientImpl.getCustomModelCopyResultAsync(UUID modelId, UUID resultId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultAsync(UUID modelId, UUID resultId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Obtain current status and the result of a custom model copy operation.
  syntax:
    content: public Mono<CopyOperationResult> getCustomModelCopyResultAsync(UUID modelId, UUID resultId)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: resultId
      type: java.util.UUID
      description: Copy operation result identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.CopyOperationResult>
      description: status and result of the queued copy operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultAsync(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  id: getCustomModelCopyResultAsync(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelCopyResultAsync(UUID modelId, UUID resultId, Context context)
  nameWithType: FormRecognizerClientImpl.getCustomModelCopyResultAsync(UUID modelId, UUID resultId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultAsync(UUID modelId, UUID resultId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Obtain current status and the result of a custom model copy operation.
  syntax:
    content: public Mono<CopyOperationResult> getCustomModelCopyResultAsync(UUID modelId, UUID resultId, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: resultId
      type: java.util.UUID
      description: Copy operation result identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.CopyOperationResult>
      description: status and result of the queued copy operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync(java.util.UUID,java.util.UUID)
  id: getCustomModelCopyResultWithResponseAsync(java.util.UUID,java.util.UUID)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelCopyResultWithResponseAsync(UUID modelId, UUID resultId)
  nameWithType: FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync(UUID modelId, UUID resultId)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync(UUID modelId, UUID resultId)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Obtain current status and the result of a custom model copy operation.
  syntax:
    content: public Mono<Response<CopyOperationResult>> getCustomModelCopyResultWithResponseAsync(UUID modelId, UUID resultId)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: resultId
      type: java.util.UUID
      description: Copy operation result identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.CopyOperationResult>>
      description: status and result of the queued copy operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  id: getCustomModelCopyResultWithResponseAsync(java.util.UUID,java.util.UUID,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelCopyResultWithResponseAsync(UUID modelId, UUID resultId, Context context)
  nameWithType: FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync(UUID modelId, UUID resultId, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync(UUID modelId, UUID resultId, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Obtain current status and the result of a custom model copy operation.
  syntax:
    content: public Mono<Response<CopyOperationResult>> getCustomModelCopyResultWithResponseAsync(UUID modelId, UUID resultId, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: resultId
      type: java.util.UUID
      description: Copy operation result identifier.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.CopyOperationResult>>
      description: status and result of the queued copy operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelWithResponseAsync(java.util.UUID,java.lang.Boolean)
  id: getCustomModelWithResponseAsync(java.util.UUID,java.lang.Boolean)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelWithResponseAsync(UUID modelId, Boolean includeKeys)
  nameWithType: FormRecognizerClientImpl.getCustomModelWithResponseAsync(UUID modelId, Boolean includeKeys)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelWithResponseAsync(UUID modelId, Boolean includeKeys)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get detailed information about a custom model.
  syntax:
    content: public Mono<Response<Model>> getCustomModelWithResponseAsync(UUID modelId, Boolean includeKeys)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: includeKeys
      type: java.lang.Boolean
      description: Include list of extracted keys in model information.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.Model>>
      description: detailed information about a custom model.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelWithResponseAsync(java.util.UUID,java.lang.Boolean,com.azure.core.util.Context)
  id: getCustomModelWithResponseAsync(java.util.UUID,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelWithResponseAsync(UUID modelId, Boolean includeKeys, Context context)
  nameWithType: FormRecognizerClientImpl.getCustomModelWithResponseAsync(UUID modelId, Boolean includeKeys, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelWithResponseAsync(UUID modelId, Boolean includeKeys, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get detailed information about a custom model.
  syntax:
    content: public Mono<Response<Model>> getCustomModelWithResponseAsync(UUID modelId, Boolean includeKeys, Context context)
    parameters:
    - id: modelId
      type: java.util.UUID
      description: Model identifier.
    - id: includeKeys
      type: java.lang.Boolean
      description: Include list of extracted keys in model information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.Model>>
      description: detailed information about a custom model.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModels()
  id: getCustomModels()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModels()
  nameWithType: FormRecognizerClientImpl.getCustomModels()
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModels()
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModels*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get information about all custom models.
  syntax:
    content: public Models getCustomModels()
    return:
      type: com.azure.ai.formrecognizer.implementation.models.Models
      description: information about all custom models.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModels(com.azure.core.util.Context)
  id: getCustomModels(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModels(Context context)
  nameWithType: FormRecognizerClientImpl.getCustomModels(Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModels(Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModels*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get information about all custom models.
  syntax:
    content: public Models getCustomModels(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.ai.formrecognizer.implementation.models.Models
      description: information about all custom models.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsAsync()
  id: getCustomModelsAsync()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelsAsync()
  nameWithType: FormRecognizerClientImpl.getCustomModelsAsync()
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsAsync()
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get information about all custom models.
  syntax:
    content: public Mono<Models> getCustomModelsAsync()
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.Models>
      description: information about all custom models.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsAsync(com.azure.core.util.Context)
  id: getCustomModelsAsync(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelsAsync(Context context)
  nameWithType: FormRecognizerClientImpl.getCustomModelsAsync(Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsAsync(Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get information about all custom models.
  syntax:
    content: public Mono<Models> getCustomModelsAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.Models>
      description: information about all custom models.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsWithResponseAsync()
  id: getCustomModelsWithResponseAsync()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelsWithResponseAsync()
  nameWithType: FormRecognizerClientImpl.getCustomModelsWithResponseAsync()
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsWithResponseAsync()
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get information about all custom models.
  syntax:
    content: public Mono<Response<Models>> getCustomModelsWithResponseAsync()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.Models>>
      description: information about all custom models.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsWithResponseAsync(com.azure.core.util.Context)
  id: getCustomModelsWithResponseAsync(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getCustomModelsWithResponseAsync(Context context)
  nameWithType: FormRecognizerClientImpl.getCustomModelsWithResponseAsync(Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsWithResponseAsync(Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get information about all custom models.
  syntax:
    content: public Mono<Response<Models>> getCustomModelsWithResponseAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.Models>>
      description: information about all custom models.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getEndpoint()
  id: getEndpoint()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getEndpoint()
  nameWithType: FormRecognizerClientImpl.getEndpoint()
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getEndpoint()
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getEndpoint*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: 'Gets Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus2.api.cognitive.microsoft.com).'
  syntax:
    content: public String getEndpoint()
    return:
      type: java.lang.String
      description: the endpoint value.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getHttpPipeline()
  id: getHttpPipeline()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getHttpPipeline()
  nameWithType: FormRecognizerClientImpl.getHttpPipeline()
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getHttpPipeline()
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getHttpPipeline*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Gets The HTTP pipeline to send requests through.
  syntax:
    content: public HttpPipeline getHttpPipeline()
    return:
      type: com.azure.core.http.HttpPipeline
      description: the httpPipeline value.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getSerializerAdapter()
  id: getSerializerAdapter()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: getSerializerAdapter()
  nameWithType: FormRecognizerClientImpl.getSerializerAdapter()
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getSerializerAdapter()
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getSerializerAdapter*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Gets The serializer to serialize an object into a string.
  syntax:
    content: public SerializerAdapter getSerializerAdapter()
    return:
      type: com.azure.core.util.serializer.SerializerAdapter
      description: the serializerAdapter value.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModels()
  id: listCustomModels()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: listCustomModels()
  nameWithType: FormRecognizerClientImpl.listCustomModels()
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModels()
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModels*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get information about all custom models.
  syntax:
    content: public PagedIterable<ModelInfo> listCustomModels()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.ai.formrecognizer.implementation.models.ModelInfo>
      description: information about all custom models.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModels(com.azure.core.util.Context)
  id: listCustomModels(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: listCustomModels(Context context)
  nameWithType: FormRecognizerClientImpl.listCustomModels(Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModels(Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModels*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get information about all custom models.
  syntax:
    content: public PagedIterable<ModelInfo> listCustomModels(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.ai.formrecognizer.implementation.models.ModelInfo>
      description: information about all custom models.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsAsync()
  id: listCustomModelsAsync()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: listCustomModelsAsync()
  nameWithType: FormRecognizerClientImpl.listCustomModelsAsync()
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsAsync()
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get information about all custom models.
  syntax:
    content: public PagedFlux<ModelInfo> listCustomModelsAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.ai.formrecognizer.implementation.models.ModelInfo>
      description: information about all custom models.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsAsync(com.azure.core.util.Context)
  id: listCustomModelsAsync(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: listCustomModelsAsync(Context context)
  nameWithType: FormRecognizerClientImpl.listCustomModelsAsync(Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsAsync(Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get information about all custom models.
  syntax:
    content: public PagedFlux<ModelInfo> listCustomModelsAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.ai.formrecognizer.implementation.models.ModelInfo>
      description: information about all custom models.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync(java.lang.String)
  id: listCustomModelsNextSinglePageAsync(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: listCustomModelsNextSinglePageAsync(String nextLink)
  nameWithType: FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync(String nextLink)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync(String nextLink)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ModelInfo>> listCustomModelsNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.ai.formrecognizer.implementation.models.ModelInfo>>
      description: response to the list custom models operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listCustomModelsNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: listCustomModelsNextSinglePageAsync(String nextLink, Context context)
  nameWithType: FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ModelInfo>> listCustomModelsNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.ai.formrecognizer.implementation.models.ModelInfo>>
      description: response to the list custom models operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsSinglePageAsync()
  id: listCustomModelsSinglePageAsync()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: listCustomModelsSinglePageAsync()
  nameWithType: FormRecognizerClientImpl.listCustomModelsSinglePageAsync()
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsSinglePageAsync()
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsSinglePageAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get information about all custom models.
  syntax:
    content: public Mono<PagedResponse<ModelInfo>> listCustomModelsSinglePageAsync()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.ai.formrecognizer.implementation.models.ModelInfo>>
      description: information about all custom models.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsSinglePageAsync(com.azure.core.util.Context)
  id: listCustomModelsSinglePageAsync(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: listCustomModelsSinglePageAsync(Context context)
  nameWithType: FormRecognizerClientImpl.listCustomModelsSinglePageAsync(Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsSinglePageAsync(Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsSinglePageAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Get information about all custom models.
  syntax:
    content: public Mono<PagedResponse<ModelInfo>> listCustomModelsSinglePageAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.ai.formrecognizer.implementation.models.ModelInfo>>
      description: information about all custom models.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest)
  id: trainCustomModelAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: trainCustomModelAsync(TrainRequest trainRequest)
  nameWithType: FormRecognizerClientImpl.trainCustomModelAsync(TrainRequest trainRequest)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsync(TrainRequest trainRequest)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Create and train a custom model. The request must include a source parameter that is either an externally accessible Azure storage blob container Uri (preferably a Shared Access Signature Uri) or valid path to a data folder in a locally mounted drive. When local paths are specified, they must follow the Linux/Unix path format and be an absolute path rooted to the input mount configuration setting value e.g., if '\{Mounts:Input\}' configuration setting value is '/input' then a valid source path would be '/input/contosodataset'. All data to be trained is expected to be under the source folder or sub folders under it. Models are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.
  syntax:
    content: public void trainCustomModelAsync(TrainRequest trainRequest)
    parameters:
    - id: trainRequest
      type: com.azure.ai.formrecognizer.implementation.models.TrainRequest
      description: Request parameter to train a new custom model.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest,com.azure.core.util.Context)
  id: trainCustomModelAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: trainCustomModelAsync(TrainRequest trainRequest, Context context)
  nameWithType: FormRecognizerClientImpl.trainCustomModelAsync(TrainRequest trainRequest, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsync(TrainRequest trainRequest, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Create and train a custom model. The request must include a source parameter that is either an externally accessible Azure storage blob container Uri (preferably a Shared Access Signature Uri) or valid path to a data folder in a locally mounted drive. When local paths are specified, they must follow the Linux/Unix path format and be an absolute path rooted to the input mount configuration setting value e.g., if '\{Mounts:Input\}' configuration setting value is '/input' then a valid source path would be '/input/contosodataset'. All data to be trained is expected to be under the source folder or sub folders under it. Models are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.
  syntax:
    content: public void trainCustomModelAsync(TrainRequest trainRequest, Context context)
    parameters:
    - id: trainRequest
      type: com.azure.ai.formrecognizer.implementation.models.TrainRequest
      description: Request parameter to train a new custom model.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest)
  id: trainCustomModelAsyncAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: trainCustomModelAsyncAsync(TrainRequest trainRequest)
  nameWithType: FormRecognizerClientImpl.trainCustomModelAsyncAsync(TrainRequest trainRequest)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncAsync(TrainRequest trainRequest)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Create and train a custom model. The request must include a source parameter that is either an externally accessible Azure storage blob container Uri (preferably a Shared Access Signature Uri) or valid path to a data folder in a locally mounted drive. When local paths are specified, they must follow the Linux/Unix path format and be an absolute path rooted to the input mount configuration setting value e.g., if '\{Mounts:Input\}' configuration setting value is '/input' then a valid source path would be '/input/contosodataset'. All data to be trained is expected to be under the source folder or sub folders under it. Models are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.
  syntax:
    content: public Mono<Void> trainCustomModelAsyncAsync(TrainRequest trainRequest)
    parameters:
    - id: trainRequest
      type: com.azure.ai.formrecognizer.implementation.models.TrainRequest
      description: Request parameter to train a new custom model.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest,com.azure.core.util.Context)
  id: trainCustomModelAsyncAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: trainCustomModelAsyncAsync(TrainRequest trainRequest, Context context)
  nameWithType: FormRecognizerClientImpl.trainCustomModelAsyncAsync(TrainRequest trainRequest, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncAsync(TrainRequest trainRequest, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Create and train a custom model. The request must include a source parameter that is either an externally accessible Azure storage blob container Uri (preferably a Shared Access Signature Uri) or valid path to a data folder in a locally mounted drive. When local paths are specified, they must follow the Linux/Unix path format and be an absolute path rooted to the input mount configuration setting value e.g., if '\{Mounts:Input\}' configuration setting value is '/input' then a valid source path would be '/input/contosodataset'. All data to be trained is expected to be under the source folder or sub folders under it. Models are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.
  syntax:
    content: public Mono<Void> trainCustomModelAsyncAsync(TrainRequest trainRequest, Context context)
    parameters:
    - id: trainRequest
      type: com.azure.ai.formrecognizer.implementation.models.TrainRequest
      description: Request parameter to train a new custom model.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest)
  id: trainCustomModelAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: trainCustomModelAsyncWithResponseAsync(TrainRequest trainRequest)
  nameWithType: FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync(TrainRequest trainRequest)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync(TrainRequest trainRequest)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Create and train a custom model. The request must include a source parameter that is either an externally accessible Azure storage blob container Uri (preferably a Shared Access Signature Uri) or valid path to a data folder in a locally mounted drive. When local paths are specified, they must follow the Linux/Unix path format and be an absolute path rooted to the input mount configuration setting value e.g., if '\{Mounts:Input\}' configuration setting value is '/input' then a valid source path would be '/input/contosodataset'. All data to be trained is expected to be under the source folder or sub folders under it. Models are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.
  syntax:
    content: public Mono<TrainCustomModelAsyncResponse> trainCustomModelAsyncWithResponseAsync(TrainRequest trainRequest)
    parameters:
    - id: trainRequest
      type: com.azure.ai.formrecognizer.implementation.models.TrainRequest
      description: Request parameter to train a new custom model.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.TrainCustomModelAsyncResponse>
      description: the completion.
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest,com.azure.core.util.Context)
  id: trainCustomModelAsyncWithResponseAsync(com.azure.ai.formrecognizer.implementation.models.TrainRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  langs:
  - java
  name: trainCustomModelAsyncWithResponseAsync(TrainRequest trainRequest, Context context)
  nameWithType: FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync(TrainRequest trainRequest, Context context)
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync(TrainRequest trainRequest, Context context)
  overload: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync*
  type: Method
  package: com.azure.ai.formrecognizer.implementation
  summary: Create and train a custom model. The request must include a source parameter that is either an externally accessible Azure storage blob container Uri (preferably a Shared Access Signature Uri) or valid path to a data folder in a locally mounted drive. When local paths are specified, they must follow the Linux/Unix path format and be an absolute path rooted to the input mount configuration setting value e.g., if '\{Mounts:Input\}' configuration setting value is '/input' then a valid source path would be '/input/contosodataset'. All data to be trained is expected to be under the source folder or sub folders under it. Models are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.
  syntax:
    content: public Mono<TrainCustomModelAsyncResponse> trainCustomModelAsyncWithResponseAsync(TrainRequest trainRequest, Context context)
    parameters:
    - id: trainRequest
      type: com.azure.ai.formrecognizer.implementation.models.TrainRequest
      description: Request parameter to train a new custom model.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.TrainCustomModelAsyncResponse>
      description: the completion.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.FormRecognizerClientImpl*
  name: FormRecognizerClientImpl
  nameWithType: FormRecognizerClientImpl.FormRecognizerClientImpl
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.FormRecognizerClientImpl
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.core.util.serializer.SerializerAdapter
  spec.java:
  - uid: com.azure.core.util.serializer.SerializerAdapter
    name: SerializerAdapter
    fullName: com.azure.core.util.serializer.SerializerAdapter
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getEndpoint*
  name: getEndpoint
  nameWithType: FormRecognizerClientImpl.getEndpoint
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getEndpoint
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getHttpPipeline*
  name: getHttpPipeline
  nameWithType: FormRecognizerClientImpl.getHttpPipeline
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getHttpPipeline
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getSerializerAdapter*
  name: getSerializerAdapter
  nameWithType: FormRecognizerClientImpl.getSerializerAdapter
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getSerializerAdapter
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.models.TrainRequest
  name: TrainRequest
  nameWithType: TrainRequest
  fullName: com.azure.ai.formrecognizer.implementation.models.TrainRequest
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.TrainCustomModelAsyncResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.TrainCustomModelAsyncResponse
    name: TrainCustomModelAsyncResponse
    fullName: com.azure.ai.formrecognizer.implementation.models.TrainCustomModelAsyncResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync*
  name: trainCustomModelAsyncWithResponseAsync
  nameWithType: FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncAsync*
  name: trainCustomModelAsyncAsync
  nameWithType: FormRecognizerClientImpl.trainCustomModelAsyncAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsyncAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsync*
  name: trainCustomModelAsync
  nameWithType: FormRecognizerClientImpl.trainCustomModelAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.trainCustomModelAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: java.util.UUID
  spec.java:
  - uid: java.util.UUID
    name: UUID
    fullName: java.util.UUID
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.Model>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.Model
    name: Model
    fullName: com.azure.ai.formrecognizer.implementation.models.Model
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelWithResponseAsync*
  name: getCustomModelWithResponseAsync
  nameWithType: FormRecognizerClientImpl.getCustomModelWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.Model>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.Model
    name: Model
    fullName: com.azure.ai.formrecognizer.implementation.models.Model
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelAsync*
  name: getCustomModelAsync
  nameWithType: FormRecognizerClientImpl.getCustomModelAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.models.Model
  name: Model
  nameWithType: Model
  fullName: com.azure.ai.formrecognizer.implementation.models.Model
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModel*
  name: getCustomModel
  nameWithType: FormRecognizerClientImpl.getCustomModel
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModel
  package: com.azure.ai.formrecognizer.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelWithResponseAsync*
  name: deleteCustomModelWithResponseAsync
  nameWithType: FormRecognizerClientImpl.deleteCustomModelWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelAsync*
  name: deleteCustomModelAsync
  nameWithType: FormRecognizerClientImpl.deleteCustomModelAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModelAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModel*
  name: deleteCustomModel
  nameWithType: FormRecognizerClientImpl.deleteCustomModel
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.deleteCustomModel
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.models.ContentType
  name: ContentType
  nameWithType: ContentType
  fullName: com.azure.ai.formrecognizer.implementation.models.ContentType
- uid: reactor.core.publisher.Flux<java.nio.ByteBuffer>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeWithCustomModelResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.AnalyzeWithCustomModelResponse
    name: AnalyzeWithCustomModelResponse
    fullName: com.azure.ai.formrecognizer.implementation.models.AnalyzeWithCustomModelResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync*
  name: analyzeWithCustomModelWithResponseAsync
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync*
  name: analyzeWithCustomModelAsync
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModelAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModelAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel*
  name: analyzeWithCustomModel
  nameWithType: FormRecognizerClientImpl.analyzeWithCustomModel
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeWithCustomModel
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.models.SourcePath
  name: SourcePath
  nameWithType: SourcePath
  fullName: com.azure.ai.formrecognizer.implementation.models.SourcePath
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult
    name: AnalyzeOperationResult
    fullName: com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync*
  name: getAnalyzeFormResultWithResponseAsync
  nameWithType: FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult
    name: AnalyzeOperationResult
    fullName: com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultAsync*
  name: getAnalyzeFormResultAsync
  nameWithType: FormRecognizerClientImpl.getAnalyzeFormResultAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResultAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult
  name: AnalyzeOperationResult
  nameWithType: AnalyzeOperationResult
  fullName: com.azure.ai.formrecognizer.implementation.models.AnalyzeOperationResult
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResult*
  name: getAnalyzeFormResult
  nameWithType: FormRecognizerClientImpl.getAnalyzeFormResult
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeFormResult
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.models.CopyRequest
  name: CopyRequest
  nameWithType: CopyRequest
  fullName: com.azure.ai.formrecognizer.implementation.models.CopyRequest
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.CopyCustomModelResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.CopyCustomModelResponse
    name: CopyCustomModelResponse
    fullName: com.azure.ai.formrecognizer.implementation.models.CopyCustomModelResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelWithResponseAsync*
  name: copyCustomModelWithResponseAsync
  nameWithType: FormRecognizerClientImpl.copyCustomModelWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelAsync*
  name: copyCustomModelAsync
  nameWithType: FormRecognizerClientImpl.copyCustomModelAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModelAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModel*
  name: copyCustomModel
  nameWithType: FormRecognizerClientImpl.copyCustomModel
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.copyCustomModel
  package: com.azure.ai.formrecognizer.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.CopyOperationResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.CopyOperationResult
    name: CopyOperationResult
    fullName: com.azure.ai.formrecognizer.implementation.models.CopyOperationResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync*
  name: getCustomModelCopyResultWithResponseAsync
  nameWithType: FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.CopyOperationResult>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.CopyOperationResult
    name: CopyOperationResult
    fullName: com.azure.ai.formrecognizer.implementation.models.CopyOperationResult
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultAsync*
  name: getCustomModelCopyResultAsync
  nameWithType: FormRecognizerClientImpl.getCustomModelCopyResultAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResultAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.models.CopyOperationResult
  name: CopyOperationResult
  nameWithType: CopyOperationResult
  fullName: com.azure.ai.formrecognizer.implementation.models.CopyOperationResult
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResult*
  name: getCustomModelCopyResult
  nameWithType: FormRecognizerClientImpl.getCustomModelCopyResult
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelCopyResult
  package: com.azure.ai.formrecognizer.implementation
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.GenerateModelCopyAuthorizationResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.GenerateModelCopyAuthorizationResponse
    name: GenerateModelCopyAuthorizationResponse
    fullName: com.azure.ai.formrecognizer.implementation.models.GenerateModelCopyAuthorizationResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync*
  name: generateModelCopyAuthorizationWithResponseAsync
  nameWithType: FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.CopyAuthorizationResult>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.CopyAuthorizationResult
    name: CopyAuthorizationResult
    fullName: com.azure.ai.formrecognizer.implementation.models.CopyAuthorizationResult
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationAsync*
  name: generateModelCopyAuthorizationAsync
  nameWithType: FormRecognizerClientImpl.generateModelCopyAuthorizationAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorizationAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.models.CopyAuthorizationResult
  name: CopyAuthorizationResult
  nameWithType: CopyAuthorizationResult
  fullName: com.azure.ai.formrecognizer.implementation.models.CopyAuthorizationResult
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorization*
  name: generateModelCopyAuthorization
  nameWithType: FormRecognizerClientImpl.generateModelCopyAuthorization
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.generateModelCopyAuthorization
  package: com.azure.ai.formrecognizer.implementation
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeReceiptAsyncResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.AnalyzeReceiptAsyncResponse
    name: AnalyzeReceiptAsyncResponse
    fullName: com.azure.ai.formrecognizer.implementation.models.AnalyzeReceiptAsyncResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync*
  name: analyzeReceiptAsyncWithResponseAsync
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync*
  name: analyzeReceiptAsyncAsync
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsyncAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsyncAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync*
  name: analyzeReceiptAsync
  nameWithType: FormRecognizerClientImpl.analyzeReceiptAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeReceiptAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync*
  name: getAnalyzeReceiptResultWithResponseAsync
  nameWithType: FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultAsync*
  name: getAnalyzeReceiptResultAsync
  nameWithType: FormRecognizerClientImpl.getAnalyzeReceiptResultAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResultAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResult*
  name: getAnalyzeReceiptResult
  nameWithType: FormRecognizerClientImpl.getAnalyzeReceiptResult
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeReceiptResult
  package: com.azure.ai.formrecognizer.implementation
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.AnalyzeLayoutAsyncResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.AnalyzeLayoutAsyncResponse
    name: AnalyzeLayoutAsyncResponse
    fullName: com.azure.ai.formrecognizer.implementation.models.AnalyzeLayoutAsyncResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync*
  name: analyzeLayoutAsyncWithResponseAsync
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync*
  name: analyzeLayoutAsyncAsync
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsyncAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsyncAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync*
  name: analyzeLayoutAsync
  nameWithType: FormRecognizerClientImpl.analyzeLayoutAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync*
  name: getAnalyzeLayoutResultWithResponseAsync
  nameWithType: FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultAsync*
  name: getAnalyzeLayoutResultAsync
  nameWithType: FormRecognizerClientImpl.getAnalyzeLayoutResultAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResultAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResult*
  name: getAnalyzeLayoutResult
  nameWithType: FormRecognizerClientImpl.getAnalyzeLayoutResult
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getAnalyzeLayoutResult
  package: com.azure.ai.formrecognizer.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.ai.formrecognizer.implementation.models.ModelInfo>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.ModelInfo
    name: ModelInfo
    fullName: com.azure.ai.formrecognizer.implementation.models.ModelInfo
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsSinglePageAsync*
  name: listCustomModelsSinglePageAsync
  nameWithType: FormRecognizerClientImpl.listCustomModelsSinglePageAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsSinglePageAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.ai.formrecognizer.implementation.models.ModelInfo>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.ModelInfo
    name: ModelInfo
    fullName: com.azure.ai.formrecognizer.implementation.models.ModelInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsAsync*
  name: listCustomModelsAsync
  nameWithType: FormRecognizerClientImpl.listCustomModelsAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.ai.formrecognizer.implementation.models.ModelInfo>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.ModelInfo
    name: ModelInfo
    fullName: com.azure.ai.formrecognizer.implementation.models.ModelInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModels*
  name: listCustomModels
  nameWithType: FormRecognizerClientImpl.listCustomModels
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModels
  package: com.azure.ai.formrecognizer.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.implementation.models.Models>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.Models
    name: Models
    fullName: com.azure.ai.formrecognizer.implementation.models.Models
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsWithResponseAsync*
  name: getCustomModelsWithResponseAsync
  nameWithType: FormRecognizerClientImpl.getCustomModelsWithResponseAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsWithResponseAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.implementation.models.Models>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.implementation.models.Models
    name: Models
    fullName: com.azure.ai.formrecognizer.implementation.models.Models
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsAsync*
  name: getCustomModelsAsync
  nameWithType: FormRecognizerClientImpl.getCustomModelsAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModelsAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.models.Models
  name: Models
  nameWithType: Models
  fullName: com.azure.ai.formrecognizer.implementation.models.Models
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModels*
  name: getCustomModels
  nameWithType: FormRecognizerClientImpl.getCustomModels
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.getCustomModels
  package: com.azure.ai.formrecognizer.implementation
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync*
  name: listCustomModelsNextSinglePageAsync
  nameWithType: FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.listCustomModelsNextSinglePageAsync
  package: com.azure.ai.formrecognizer.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.ai.formrecognizer.implementation.models.TrainCustomModelAsyncResponse
  name: TrainCustomModelAsyncResponse
  nameWithType: TrainCustomModelAsyncResponse
  fullName: com.azure.ai.formrecognizer.implementation.models.TrainCustomModelAsyncResponse
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.ai.formrecognizer.implementation.models.AnalyzeWithCustomModelResponse
  name: AnalyzeWithCustomModelResponse
  nameWithType: AnalyzeWithCustomModelResponse
  fullName: com.azure.ai.formrecognizer.implementation.models.AnalyzeWithCustomModelResponse
- uid: com.azure.ai.formrecognizer.implementation.models.CopyCustomModelResponse
  name: CopyCustomModelResponse
  nameWithType: CopyCustomModelResponse
  fullName: com.azure.ai.formrecognizer.implementation.models.CopyCustomModelResponse
- uid: com.azure.ai.formrecognizer.implementation.models.GenerateModelCopyAuthorizationResponse
  name: GenerateModelCopyAuthorizationResponse
  nameWithType: GenerateModelCopyAuthorizationResponse
  fullName: com.azure.ai.formrecognizer.implementation.models.GenerateModelCopyAuthorizationResponse
- uid: com.azure.ai.formrecognizer.implementation.models.AnalyzeReceiptAsyncResponse
  name: AnalyzeReceiptAsyncResponse
  nameWithType: AnalyzeReceiptAsyncResponse
  fullName: com.azure.ai.formrecognizer.implementation.models.AnalyzeReceiptAsyncResponse
- uid: com.azure.ai.formrecognizer.implementation.models.AnalyzeLayoutAsyncResponse
  name: AnalyzeLayoutAsyncResponse
  nameWithType: AnalyzeLayoutAsyncResponse
  fullName: com.azure.ai.formrecognizer.implementation.models.AnalyzeLayoutAsyncResponse
- uid: com.azure.ai.formrecognizer.implementation.models.ModelInfo
  name: ModelInfo
  nameWithType: ModelInfo
  fullName: com.azure.ai.formrecognizer.implementation.models.ModelInfo
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
