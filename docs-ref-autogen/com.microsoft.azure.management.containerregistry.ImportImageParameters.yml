### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters
  id: ImportImageParameters
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry
  children:
  - com.microsoft.azure.management.containerregistry.ImportImageParameters.ImportImageParameters()
  - com.microsoft.azure.management.containerregistry.ImportImageParameters.mode()
  - com.microsoft.azure.management.containerregistry.ImportImageParameters.source()
  - com.microsoft.azure.management.containerregistry.ImportImageParameters.targetTags()
  - com.microsoft.azure.management.containerregistry.ImportImageParameters.untaggedTargetRepositories()
  - com.microsoft.azure.management.containerregistry.ImportImageParameters.withMode(com.microsoft.azure.management.containerregistry.ImportMode)
  - com.microsoft.azure.management.containerregistry.ImportImageParameters.withSource(com.microsoft.azure.management.containerregistry.ImportSource)
  - com.microsoft.azure.management.containerregistry.ImportImageParameters.withTargetTags(java.util.List<java.lang.String>)
  - com.microsoft.azure.management.containerregistry.ImportImageParameters.withUntaggedTargetRepositories(java.util.List<java.lang.String>)
  langs:
  - java
  name: ImportImageParameters
  nameWithType: ImportImageParameters
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters
  type: Class
  package: com.microsoft.azure.management.containerregistry
  summary: The ImportImageParameters model.
  syntax:
    content: public class ImportImageParameters
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.ImportImageParameters()
  id: ImportImageParameters()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.ImportImageParameters
  langs:
  - java
  name: ImportImageParameters()
  nameWithType: ImportImageParameters.ImportImageParameters()
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.ImportImageParameters()
  overload: com.microsoft.azure.management.containerregistry.ImportImageParameters.ImportImageParameters*
  type: Constructor
  package: com.microsoft.azure.management.containerregistry
  syntax:
    content: public ImportImageParameters()
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.mode()
  id: mode()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.ImportImageParameters
  langs:
  - java
  name: mode()
  nameWithType: ImportImageParameters.mode()
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.mode()
  overload: com.microsoft.azure.management.containerregistry.ImportImageParameters.mode*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: "Get when Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins. Possible values include: 'NoForce', 'Force'."
  syntax:
    content: public ImportMode mode()
    return:
      type: com.microsoft.azure.management.containerregistry.ImportMode
      description: the mode value
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.source()
  id: source()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.ImportImageParameters
  langs:
  - java
  name: source()
  nameWithType: ImportImageParameters.source()
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.source()
  overload: com.microsoft.azure.management.containerregistry.ImportImageParameters.source*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Get the source of the image.
  syntax:
    content: public ImportSource source()
    return:
      type: com.microsoft.azure.management.containerregistry.ImportSource
      description: the source value
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.targetTags()
  id: targetTags()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.ImportImageParameters
  langs:
  - java
  name: targetTags()
  nameWithType: ImportImageParameters.targetTags()
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.targetTags()
  overload: com.microsoft.azure.management.containerregistry.ImportImageParameters.targetTags*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Get list of strings of the form repo\[:tag\]. When tag is omitted the source will be used (or 'latest' if source tag is also omitted).
  syntax:
    content: public List<String> targetTags()
    return:
      type: java.util.List<java.lang.String>
      description: the targetTags value
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.untaggedTargetRepositories()
  id: untaggedTargetRepositories()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.ImportImageParameters
  langs:
  - java
  name: untaggedTargetRepositories()
  nameWithType: ImportImageParameters.untaggedTargetRepositories()
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.untaggedTargetRepositories()
  overload: com.microsoft.azure.management.containerregistry.ImportImageParameters.untaggedTargetRepositories*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Get list of strings of repository names to do a manifest only copy. No tag will be created.
  syntax:
    content: public List<String> untaggedTargetRepositories()
    return:
      type: java.util.List<java.lang.String>
      description: the untaggedTargetRepositories value
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.withMode(com.microsoft.azure.management.containerregistry.ImportMode)
  id: withMode(com.microsoft.azure.management.containerregistry.ImportMode)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.ImportImageParameters
  langs:
  - java
  name: withMode(ImportMode mode)
  nameWithType: ImportImageParameters.withMode(ImportMode mode)
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.withMode(ImportMode mode)
  overload: com.microsoft.azure.management.containerregistry.ImportImageParameters.withMode*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: "Set when Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins. Possible values include: 'NoForce', 'Force'."
  syntax:
    content: public ImportImageParameters withMode(ImportMode mode)
    parameters:
    - id: mode
      type: com.microsoft.azure.management.containerregistry.ImportMode
      description: the mode value to set
    return:
      type: com.microsoft.azure.management.containerregistry.ImportImageParameters
      description: the ImportImageParameters object itself.
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.withSource(com.microsoft.azure.management.containerregistry.ImportSource)
  id: withSource(com.microsoft.azure.management.containerregistry.ImportSource)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.ImportImageParameters
  langs:
  - java
  name: withSource(ImportSource source)
  nameWithType: ImportImageParameters.withSource(ImportSource source)
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.withSource(ImportSource source)
  overload: com.microsoft.azure.management.containerregistry.ImportImageParameters.withSource*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Set the source of the image.
  syntax:
    content: public ImportImageParameters withSource(ImportSource source)
    parameters:
    - id: source
      type: com.microsoft.azure.management.containerregistry.ImportSource
      description: the source value to set
    return:
      type: com.microsoft.azure.management.containerregistry.ImportImageParameters
      description: the ImportImageParameters object itself.
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.withTargetTags(java.util.List<java.lang.String>)
  id: withTargetTags(java.util.List<java.lang.String>)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.ImportImageParameters
  langs:
  - java
  name: withTargetTags(List<String> targetTags)
  nameWithType: ImportImageParameters.withTargetTags(List<String> targetTags)
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.withTargetTags(List<String> targetTags)
  overload: com.microsoft.azure.management.containerregistry.ImportImageParameters.withTargetTags*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Set list of strings of the form repo\[:tag\]. When tag is omitted the source will be used (or 'latest' if source tag is also omitted).
  syntax:
    content: public ImportImageParameters withTargetTags(List<String> targetTags)
    parameters:
    - id: targetTags
      type: java.util.List<java.lang.String>
      description: the targetTags value to set
    return:
      type: com.microsoft.azure.management.containerregistry.ImportImageParameters
      description: the ImportImageParameters object itself.
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.withUntaggedTargetRepositories(java.util.List<java.lang.String>)
  id: withUntaggedTargetRepositories(java.util.List<java.lang.String>)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.ImportImageParameters
  langs:
  - java
  name: withUntaggedTargetRepositories(List<String> untaggedTargetRepositories)
  nameWithType: ImportImageParameters.withUntaggedTargetRepositories(List<String> untaggedTargetRepositories)
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.withUntaggedTargetRepositories(List<String> untaggedTargetRepositories)
  overload: com.microsoft.azure.management.containerregistry.ImportImageParameters.withUntaggedTargetRepositories*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Set list of strings of repository names to do a manifest only copy. No tag will be created.
  syntax:
    content: public ImportImageParameters withUntaggedTargetRepositories(List<String> untaggedTargetRepositories)
    parameters:
    - id: untaggedTargetRepositories
      type: java.util.List<java.lang.String>
      description: the untaggedTargetRepositories value to set
    return:
      type: com.microsoft.azure.management.containerregistry.ImportImageParameters
      description: the ImportImageParameters object itself.
references:
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.ImportImageParameters*
  name: ImportImageParameters
  nameWithType: ImportImageParameters.ImportImageParameters
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.ImportImageParameters
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.ImportSource
  name: ImportSource
  nameWithType: ImportSource
  fullName: com.microsoft.azure.management.containerregistry.ImportSource
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.source*
  name: source
  nameWithType: ImportImageParameters.source
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.source
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.withSource*
  name: withSource
  nameWithType: ImportImageParameters.withSource
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.withSource
  package: com.microsoft.azure.management.containerregistry
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.targetTags*
  name: targetTags
  nameWithType: ImportImageParameters.targetTags
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.targetTags
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.withTargetTags*
  name: withTargetTags
  nameWithType: ImportImageParameters.withTargetTags
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.withTargetTags
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.untaggedTargetRepositories*
  name: untaggedTargetRepositories
  nameWithType: ImportImageParameters.untaggedTargetRepositories
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.untaggedTargetRepositories
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.withUntaggedTargetRepositories*
  name: withUntaggedTargetRepositories
  nameWithType: ImportImageParameters.withUntaggedTargetRepositories
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.withUntaggedTargetRepositories
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.ImportMode
  name: ImportMode
  nameWithType: ImportMode
  fullName: com.microsoft.azure.management.containerregistry.ImportMode
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.mode*
  name: mode
  nameWithType: ImportImageParameters.mode
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.mode
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.withMode*
  name: withMode
  nameWithType: ImportImageParameters.withMode
  fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.withMode
  package: com.microsoft.azure.management.containerregistry
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.String
  name: String
  nameWithType: String
  fullName: java.lang.String
