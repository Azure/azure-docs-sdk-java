### YamlMime:JavaType
uid: "com.microsoft.azure.management.containerregistry.ImportImageParameters"
fullName: "com.microsoft.azure.management.containerregistry.ImportImageParameters"
name: "ImportImageParameters"
nameWithType: "ImportImageParameters"
summary: "The Import<wbr>Image<wbr>Parameters model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **ImportImageParameters**"
constructors:
- uid: "com.microsoft.azure.management.containerregistry.ImportImageParameters.ImportImageParameters()"
  fullName: "com.microsoft.azure.management.containerregistry.ImportImageParameters.ImportImageParameters()"
  name: "ImportImageParameters()"
  nameWithType: "ImportImageParameters.ImportImageParameters()"
  syntax: "public ImportImageParameters()"
methods:
- uid: "com.microsoft.azure.management.containerregistry.ImportImageParameters.mode()"
  fullName: "com.microsoft.azure.management.containerregistry.ImportImageParameters.mode()"
  name: "mode()"
  nameWithType: "ImportImageParameters.mode()"
  summary: "Get when Force, any existing target tags will be overwritten."
  syntax: "public ImportMode mode()"
  desc: "Get when Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins. Possible values include: 'NoForce', 'Force'."
  returns:
    description: "the mode value"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportMode?alt=com.microsoft.azure.management.containerregistry.ImportMode&text=ImportMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.ImportImageParameters.source()"
  fullName: "com.microsoft.azure.management.containerregistry.ImportImageParameters.source()"
  name: "source()"
  nameWithType: "ImportImageParameters.source()"
  summary: "Get the source of the image."
  syntax: "public ImportSource source()"
  desc: "Get the source of the image."
  returns:
    description: "the source value"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportSource?alt=com.microsoft.azure.management.containerregistry.ImportSource&text=ImportSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.ImportImageParameters.targetTags()"
  fullName: "com.microsoft.azure.management.containerregistry.ImportImageParameters.targetTags()"
  name: "targetTags()"
  nameWithType: "ImportImageParameters.targetTags()"
  summary: "Get list of strings of the form repo\\[:tag\\]."
  syntax: "public List<String> targetTags()"
  desc: "Get list of strings of the form repo\\[:tag\\]. When tag is omitted the source will be used (or 'latest' if source tag is also omitted)."
  returns:
    description: "the targetTags value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.containerregistry.ImportImageParameters.untaggedTargetRepositories()"
  fullName: "com.microsoft.azure.management.containerregistry.ImportImageParameters.untaggedTargetRepositories()"
  name: "untaggedTargetRepositories()"
  nameWithType: "ImportImageParameters.untaggedTargetRepositories()"
  summary: "Get list of strings of repository names to do a manifest only copy."
  syntax: "public List<String> untaggedTargetRepositories()"
  desc: "Get list of strings of repository names to do a manifest only copy. No tag will be created."
  returns:
    description: "the untaggedTargetRepositories value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.containerregistry.ImportImageParameters.withMode(com.microsoft.azure.management.containerregistry.ImportMode)"
  fullName: "com.microsoft.azure.management.containerregistry.ImportImageParameters.withMode(ImportMode mode)"
  name: "withMode(ImportMode mode)"
  nameWithType: "ImportImageParameters.withMode(ImportMode mode)"
  summary: "Set when Force, any existing target tags will be overwritten."
  parameters:
  - description: "the mode value to set"
    name: "mode"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportMode?alt=com.microsoft.azure.management.containerregistry.ImportMode&text=ImportMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportImageParameters withMode(ImportMode mode)"
  desc: "Set when Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins. Possible values include: 'NoForce', 'Force'."
  returns:
    description: "the ImportImageParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportImageParameters?alt=com.microsoft.azure.management.containerregistry.ImportImageParameters&text=ImportImageParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.ImportImageParameters.withSource(com.microsoft.azure.management.containerregistry.ImportSource)"
  fullName: "com.microsoft.azure.management.containerregistry.ImportImageParameters.withSource(ImportSource source)"
  name: "withSource(ImportSource source)"
  nameWithType: "ImportImageParameters.withSource(ImportSource source)"
  summary: "Set the source of the image."
  parameters:
  - description: "the source value to set"
    name: "source"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportSource?alt=com.microsoft.azure.management.containerregistry.ImportSource&text=ImportSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportImageParameters withSource(ImportSource source)"
  desc: "Set the source of the image."
  returns:
    description: "the ImportImageParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportImageParameters?alt=com.microsoft.azure.management.containerregistry.ImportImageParameters&text=ImportImageParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.ImportImageParameters.withTargetTags(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.containerregistry.ImportImageParameters.withTargetTags(List<String> targetTags)"
  name: "withTargetTags(List<String> targetTags)"
  nameWithType: "ImportImageParameters.withTargetTags(List<String> targetTags)"
  summary: "Set list of strings of the form repo\\[:tag\\]."
  parameters:
  - description: "the targetTags value to set"
    name: "targetTags"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ImportImageParameters withTargetTags(List<String> targetTags)"
  desc: "Set list of strings of the form repo\\[:tag\\]. When tag is omitted the source will be used (or 'latest' if source tag is also omitted)."
  returns:
    description: "the ImportImageParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportImageParameters?alt=com.microsoft.azure.management.containerregistry.ImportImageParameters&text=ImportImageParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.ImportImageParameters.withUntaggedTargetRepositories(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.containerregistry.ImportImageParameters.withUntaggedTargetRepositories(List<String> untaggedTargetRepositories)"
  name: "withUntaggedTargetRepositories(List<String> untaggedTargetRepositories)"
  nameWithType: "ImportImageParameters.withUntaggedTargetRepositories(List<String> untaggedTargetRepositories)"
  summary: "Set list of strings of repository names to do a manifest only copy."
  parameters:
  - description: "the untaggedTargetRepositories value to set"
    name: "untaggedTargetRepositories"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ImportImageParameters withUntaggedTargetRepositories(List<String> untaggedTargetRepositories)"
  desc: "Set list of strings of repository names to do a manifest only copy. No tag will be created."
  returns:
    description: "the ImportImageParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportImageParameters?alt=com.microsoft.azure.management.containerregistry.ImportImageParameters&text=ImportImageParameters\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The ImportImageParameters model."
metadata: {}
package: "com.microsoft.azure.management.containerregistry"
artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.41.4
