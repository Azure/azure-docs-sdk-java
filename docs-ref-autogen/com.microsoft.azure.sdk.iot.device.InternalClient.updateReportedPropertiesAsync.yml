### YamlMime:JavaMember
nameWithType: InternalClient.updateReportedPropertiesAsync
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.device.InternalClient.updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesCallback reportedPropertiesCallback, Object callbackContext)
  name: updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesCallback reportedPropertiesCallback, Object callbackContext)
  nameWithType: InternalClient.updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesCallback reportedPropertiesCallback, Object callbackContext)
  parameters:
  - description: <p>The reported property key/value pairs to add/update in the twin. </p>
    name: reportedProperties
    type: <xref href="com.microsoft.azure.sdk.iot.device.twin.TwinCollection?alt=com.microsoft.azure.sdk.iot.device.twin.TwinCollection&text=TwinCollection" data-throw-if-not-resolved="False"/>
  - description: <p>The callback to be executed once the reported properties update request has been acknowledged by the service. </p>
    name: reportedPropertiesCallback
    type: <xref href="com.microsoft.azure.sdk.iot.device.twin.ReportedPropertiesCallback?alt=com.microsoft.azure.sdk.iot.device.twin.ReportedPropertiesCallback&text=ReportedPropertiesCallback" data-throw-if-not-resolved="False"/>
  - description: <p>The context that will be included in the callback of reportedPropertiesCallback. May be null. </p>
    name: callbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>if this client is not open or if this client has not subscribed to desired properties yet. </p>
  summary: >-
    <p>Patch this client's twin with the provided reported properties asynchronously. This client must have subscribed to desired properties before this method can be called.</p>

    <p></p>
  syntax: public void updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesCallback reportedPropertiesCallback, Object callbackContext)
  uid: com.microsoft.azure.sdk.iot.device.InternalClient.updateReportedPropertiesAsync(TwinCollection,ReportedPropertiesCallback,Object)
- fullName: com.microsoft.azure.sdk.iot.device.InternalClient.updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesUpdateCorrelatingMessageCallback reportedPropertiesUpdateCorrelatingMessageCallback, Object callbackContext)
  name: updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesUpdateCorrelatingMessageCallback reportedPropertiesUpdateCorrelatingMessageCallback, Object callbackContext)
  nameWithType: InternalClient.updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesUpdateCorrelatingMessageCallback reportedPropertiesUpdateCorrelatingMessageCallback, Object callbackContext)
  parameters:
  - description: <p>The reported property key/value pairs to add/update in the twin. </p>
    name: reportedProperties
    type: <xref href="com.microsoft.azure.sdk.iot.device.twin.TwinCollection?alt=com.microsoft.azure.sdk.iot.device.twin.TwinCollection&text=TwinCollection" data-throw-if-not-resolved="False"/>
  - description: <p>The callback to be executed once the state of the reported properties update request message has changed. This provides context on when the message is queued, sent, acknowledged, etc. </p>
    name: reportedPropertiesUpdateCorrelatingMessageCallback
    type: <xref href="com.microsoft.azure.sdk.iot.device.twin.ReportedPropertiesUpdateCorrelatingMessageCallback?alt=com.microsoft.azure.sdk.iot.device.twin.ReportedPropertiesUpdateCorrelatingMessageCallback&text=ReportedPropertiesUpdateCorrelatingMessageCallback" data-throw-if-not-resolved="False"/>
  - description: <p>The context that will be included in each callback of updateReportedPropertiesCallback. May be null. </p>
    name: callbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>if this client is not open or if this client has not subscribed to desired properties yet. </p>
  summary: >-
    <p>Patch this client's twin with the provided reported properties asynchronously. This client must have subscribed to desired properties before this method can be called.</p>

    <p>This overload utilizes a more verbose callback than <xref uid="com.microsoft.azure.sdk.iot.device.InternalClient.updateReportedPropertiesAsync(TwinCollection,ReportedPropertiesCallback,Object)" data-throw-if-not-resolved="false" data-raw-source="updateReportedPropertiesAsync(TwinCollection, ReportedPropertiesCallback, Object)"></xref> and is only intended for users who need insight on the state of this process every step of the way. </p>

    <p></p>
  syntax: public void updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesUpdateCorrelatingMessageCallback reportedPropertiesUpdateCorrelatingMessageCallback, Object callbackContext)
  uid: com.microsoft.azure.sdk.iot.device.InternalClient.updateReportedPropertiesAsync(TwinCollection,ReportedPropertiesUpdateCorrelatingMessageCallback,Object)
uid: com.microsoft.azure.sdk.iot.device.InternalClient.updateReportedPropertiesAsync*
fullName: com.microsoft.azure.sdk.iot.device.InternalClient.updateReportedPropertiesAsync
name: updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesCallback reportedPropertiesCallback, Object callbackContext)
package: com.microsoft.azure.sdk.iot.device
metadata: {}
