### YamlMime:JavaMember
uid: "com.microsoft.azure.servicebus.primitives.TimeoutTracker.TimeoutTracker*"
fullName: "com.microsoft.azure.servicebus.primitives.TimeoutTracker.TimeoutTracker"
name: "TimeoutTracker"
nameWithType: "TimeoutTracker.TimeoutTracker"
members:
- uid: "com.microsoft.azure.servicebus.primitives.TimeoutTracker.TimeoutTracker(java.time.Duration,boolean)"
  fullName: "com.microsoft.azure.servicebus.primitives.TimeoutTracker.TimeoutTracker(Duration timeout, boolean startTrackingTimeout)"
  name: "TimeoutTracker(Duration timeout, boolean startTrackingTimeout)"
  nameWithType: "TimeoutTracker.TimeoutTracker(Duration timeout, boolean startTrackingTimeout)"
  parameters:
  - description: "original operationTimeout"
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "whether/not to start the timeout tracking - right now. if not started now, timer tracking will start upon the first call to <xref uid=\"com.microsoft.azure.servicebus.primitives.TimeoutTracker.elapsed()\" data-throw-if-not-resolved=\"false\">TimeoutTracker#elapsed()</xref>/<xref uid=\"com.microsoft.azure.servicebus.primitives.TimeoutTracker.remaining()\" data-throw-if-not-resolved=\"false\">TimeoutTracker#remaining()</xref>"
    name: "startTrackingTimeout"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TimeoutTracker(Duration timeout, boolean startTrackingTimeout)"
type: "constructor"
metadata: {}
package: "com.microsoft.azure.servicebus.primitives"
artifact: com.microsoft.azure:azure-servicebus:3.4.0
