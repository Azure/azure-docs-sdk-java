### YamlMime:JavaType
uid: "com.azure.resourcemanager.databricks.models.Encryption"
fullName: "com.azure.resourcemanager.databricks.models.Encryption"
name: "Encryption"
nameWithType: "Encryption"
summary: "The object that contains details of encryption used on the workspace."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **Encryption**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.databricks.models.Encryption?alt=com.azure.resourcemanager.databricks.models.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.databricks.models.Encryption.Encryption()"
  fullName: "com.azure.resourcemanager.databricks.models.Encryption.Encryption()"
  name: "Encryption()"
  nameWithType: "Encryption.Encryption()"
  summary: "Creates an instance of Encryption class."
  syntax: "public Encryption()"
  desc: "Creates an instance of Encryption class."
methods:
- uid: "com.azure.resourcemanager.databricks.models.Encryption.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.databricks.models.Encryption.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "Encryption.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Encryption from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Encryption fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the Encryption."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads an instance of Encryption from the JsonReader."
  returns:
    description: "An instance of Encryption if the JsonReader was pointing to an instance of it, or null if it was pointing\n to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.Encryption?alt=com.azure.resourcemanager.databricks.models.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.Encryption.keyName()"
  fullName: "com.azure.resourcemanager.databricks.models.Encryption.keyName()"
  name: "keyName()"
  nameWithType: "Encryption.keyName()"
  summary: "Get the key<wbr>Name property: The name of Key<wbr>Vault key."
  syntax: "public String keyName()"
  desc: "Get the keyName property: The name of KeyVault key."
  returns:
    description: "the keyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.Encryption.keySource()"
  fullName: "com.azure.resourcemanager.databricks.models.Encryption.keySource()"
  name: "keySource()"
  nameWithType: "Encryption.keySource()"
  summary: "Get the key<wbr>Source property: The encryption key<wbr>Source (provider)."
  syntax: "public KeySource keySource()"
  desc: "Get the keySource property: The encryption keySource (provider). Possible values (case-insensitive): Default, Microsoft.Keyvault."
  returns:
    description: "the keySource value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.KeySource?alt=com.azure.resourcemanager.databricks.models.KeySource&text=KeySource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.Encryption.keyVaultUri()"
  fullName: "com.azure.resourcemanager.databricks.models.Encryption.keyVaultUri()"
  name: "keyVaultUri()"
  nameWithType: "Encryption.keyVaultUri()"
  summary: "Get the key<wbr>Vault<wbr>Uri property: The Uri of Key<wbr>Vault."
  syntax: "public String keyVaultUri()"
  desc: "Get the keyVaultUri property: The Uri of KeyVault."
  returns:
    description: "the keyVaultUri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.Encryption.keyVersion()"
  fullName: "com.azure.resourcemanager.databricks.models.Encryption.keyVersion()"
  name: "keyVersion()"
  nameWithType: "Encryption.keyVersion()"
  summary: "Get the key<wbr>Version property: The version of Key<wbr>Vault key."
  syntax: "public String keyVersion()"
  desc: "Get the keyVersion property: The version of KeyVault key."
  returns:
    description: "the keyVersion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.Encryption.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.databricks.models.Encryption.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "Encryption.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.Encryption.validate()"
  fullName: "com.azure.resourcemanager.databricks.models.Encryption.validate()"
  name: "validate()"
  nameWithType: "Encryption.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.databricks.models.Encryption.withKeyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.databricks.models.Encryption.withKeyName(String keyName)"
  name: "withKeyName(String keyName)"
  nameWithType: "Encryption.withKeyName(String keyName)"
  summary: "Set the key<wbr>Name property: The name of Key<wbr>Vault key."
  parameters:
  - description: "the keyName value to set."
    name: "keyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Encryption withKeyName(String keyName)"
  desc: "Set the keyName property: The name of KeyVault key."
  returns:
    description: "the Encryption object itself."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.Encryption?alt=com.azure.resourcemanager.databricks.models.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.Encryption.withKeySource(com.azure.resourcemanager.databricks.models.KeySource)"
  fullName: "com.azure.resourcemanager.databricks.models.Encryption.withKeySource(KeySource keySource)"
  name: "withKeySource(KeySource keySource)"
  nameWithType: "Encryption.withKeySource(KeySource keySource)"
  summary: "Set the key<wbr>Source property: The encryption key<wbr>Source (provider)."
  parameters:
  - description: "the keySource value to set."
    name: "keySource"
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.KeySource?alt=com.azure.resourcemanager.databricks.models.KeySource&text=KeySource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Encryption withKeySource(KeySource keySource)"
  desc: "Set the keySource property: The encryption keySource (provider). Possible values (case-insensitive): Default, Microsoft.Keyvault."
  returns:
    description: "the Encryption object itself."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.Encryption?alt=com.azure.resourcemanager.databricks.models.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.Encryption.withKeyVaultUri(java.lang.String)"
  fullName: "com.azure.resourcemanager.databricks.models.Encryption.withKeyVaultUri(String keyVaultUri)"
  name: "withKeyVaultUri(String keyVaultUri)"
  nameWithType: "Encryption.withKeyVaultUri(String keyVaultUri)"
  summary: "Set the key<wbr>Vault<wbr>Uri property: The Uri of Key<wbr>Vault."
  parameters:
  - description: "the keyVaultUri value to set."
    name: "keyVaultUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Encryption withKeyVaultUri(String keyVaultUri)"
  desc: "Set the keyVaultUri property: The Uri of KeyVault."
  returns:
    description: "the Encryption object itself."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.Encryption?alt=com.azure.resourcemanager.databricks.models.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.Encryption.withKeyVersion(java.lang.String)"
  fullName: "com.azure.resourcemanager.databricks.models.Encryption.withKeyVersion(String keyVersion)"
  name: "withKeyVersion(String keyVersion)"
  nameWithType: "Encryption.withKeyVersion(String keyVersion)"
  summary: "Set the key<wbr>Version property: The version of Key<wbr>Vault key."
  parameters:
  - description: "the keyVersion value to set."
    name: "keyVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Encryption withKeyVersion(String keyVersion)"
  desc: "Set the keyVersion property: The version of KeyVault key."
  returns:
    description: "the Encryption object itself."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.Encryption?alt=com.azure.resourcemanager.databricks.models.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The object that contains details of encryption used on the workspace."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.databricks.models.Encryption?alt=com.azure.resourcemanager.databricks.models.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.databricks.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-databricks:1.0.0
