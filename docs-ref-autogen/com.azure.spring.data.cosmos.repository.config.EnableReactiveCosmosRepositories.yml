### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories"
fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories"
name: "EnableReactiveCosmosRepositories"
nameWithType: "EnableReactiveCosmosRepositories"
summary: "Interface to enable reactive cosmos repository"
syntax: "public interface **EnableReactiveCosmosRepositories**</br> implements <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Annotation.html\">Annotation</a>"
methods:
- uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.basePackageClasses()"
  fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.basePackageClasses()"
  name: "basePackageClasses()"
  nameWithType: "EnableReactiveCosmosRepositories.basePackageClasses()"
  summary: "To set base package class"
  modifiers:
  - "abstract"
  syntax: "public abstract Class<?>[] basePackageClasses()"
  desc: "To set base package class"
  returns:
    description: "default as {}"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;[]"
- uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.basePackages()"
  fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.basePackages()"
  name: "basePackages()"
  nameWithType: "EnableReactiveCosmosRepositories.basePackages()"
  summary: "To set base packages"
  modifiers:
  - "abstract"
  syntax: "public abstract String[] basePackages()"
  desc: "To set base packages"
  returns:
    description: "default as {}"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>[]"
- uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.considerNestedRepositories()"
  fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.considerNestedRepositories()"
  name: "considerNestedRepositories()"
  nameWithType: "EnableReactiveCosmosRepositories.considerNestedRepositories()"
  summary: "To set if consider nested repositories"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean considerNestedRepositories()"
  desc: "To set if consider nested repositories"
  returns:
    description: "default value is false"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.excludeFilters()"
  fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.excludeFilters()"
  name: "excludeFilters()"
  nameWithType: "EnableReactiveCosmosRepositories.excludeFilters()"
  summary: "To exclude filters"
  modifiers:
  - "abstract"
  syntax: "public abstract ComponentScan.Filter[] excludeFilters()"
  desc: "To exclude filters"
  returns:
    description: "default as {}"
    type: "<xref href=\"org.springframework.context.annotation.ComponentScan.Filter?alt=org.springframework.context.annotation.ComponentScan.Filter&text=Filter\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.includeFilters()"
  fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.includeFilters()"
  name: "includeFilters()"
  nameWithType: "EnableReactiveCosmosRepositories.includeFilters()"
  summary: "To include filters"
  modifiers:
  - "abstract"
  syntax: "public abstract ComponentScan.Filter[] includeFilters()"
  desc: "To include filters"
  returns:
    description: "default as {}"
    type: "<xref href=\"org.springframework.context.annotation.ComponentScan.Filter?alt=org.springframework.context.annotation.ComponentScan.Filter&text=Filter\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.namedQueriesLocation()"
  fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.namedQueriesLocation()"
  name: "namedQueriesLocation()"
  nameWithType: "EnableReactiveCosmosRepositories.namedQueriesLocation()"
  summary: "To set the named query location"
  modifiers:
  - "abstract"
  syntax: "public abstract String namedQueriesLocation()"
  desc: "To set the named query location"
  returns:
    description: "default as \"\""
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.queryLookupStrategy()"
  fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.queryLookupStrategy()"
  name: "queryLookupStrategy()"
  nameWithType: "EnableReactiveCosmosRepositories.queryLookupStrategy()"
  summary: "To set query look up strategy"
  modifiers:
  - "abstract"
  syntax: "public abstract QueryLookupStrategy.Key queryLookupStrategy()"
  desc: "To set query look up strategy"
  returns:
    description: "QueryLookupStrategy.Key"
    type: "<xref href=\"org.springframework.data.repository.query.QueryLookupStrategy.Key?alt=org.springframework.data.repository.query.QueryLookupStrategy.Key&text=Key\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.reactiveCosmosTemplateRef()"
  fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.reactiveCosmosTemplateRef()"
  name: "reactiveCosmosTemplateRef()"
  nameWithType: "EnableReactiveCosmosRepositories.reactiveCosmosTemplateRef()"
  summary: "Configures the name of the <xref uid=\"com.azure.spring.data.cosmos.core.ReactiveCosmosTemplate\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReactiveCosmosTemplate\"></xref> bean to be used with the repositories detected."
  modifiers:
  - "abstract"
  syntax: "public abstract String reactiveCosmosTemplateRef()"
  desc: "Configures the name of the <xref uid=\"com.azure.spring.data.cosmos.core.ReactiveCosmosTemplate\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReactiveCosmosTemplate\"></xref> bean to be used with the repositories detected."
  returns:
    description: "reactiveCosmosTemplate by default."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.repositoryBaseClass()"
  fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.repositoryBaseClass()"
  name: "repositoryBaseClass()"
  nameWithType: "EnableReactiveCosmosRepositories.repositoryBaseClass()"
  summary: "To set base class of repo"
  modifiers:
  - "abstract"
  syntax: "public abstract Class<?> repositoryBaseClass()"
  desc: "To set base class of repo"
  returns:
    description: "default value is DefaultRepositoryBaseClass.class"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
- uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.repositoryFactoryBeanClass()"
  fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.repositoryFactoryBeanClass()"
  name: "repositoryFactoryBeanClass()"
  nameWithType: "EnableReactiveCosmosRepositories.repositoryFactoryBeanClass()"
  summary: "To set factory bean class of repo"
  modifiers:
  - "abstract"
  syntax: "public abstract Class<?> repositoryFactoryBeanClass()"
  desc: "To set factory bean class of repo"
  returns:
    description: "default value is ReactiveCosmosRepositoryFactoryBean.class"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
- uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.repositoryImplementationPostfix()"
  fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.repositoryImplementationPostfix()"
  name: "repositoryImplementationPostfix()"
  nameWithType: "EnableReactiveCosmosRepositories.repositoryImplementationPostfix()"
  summary: "To set repo Implement postfix"
  modifiers:
  - "abstract"
  syntax: "public abstract String repositoryImplementationPostfix()"
  desc: "To set repo Implement postfix"
  returns:
    description: "default as \"Impl\""
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.value()"
  fullName: "com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories.value()"
  name: "value()"
  nameWithType: "EnableReactiveCosmosRepositories.value()"
  summary: "To set repo value"
  modifiers:
  - "abstract"
  syntax: "public abstract String[] value()"
  desc: "To set repo value"
  returns:
    description: "default as {}"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>[]"
type: "interface"
desc: "Interface to enable reactive cosmos repository"
implements:
- "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Annotation.html\">Annotation</a>"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.config"
artifact: com.azure:azure-spring-data-cosmos:5.18.0
