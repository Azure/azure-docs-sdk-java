### YamlMime:JavaType
uid: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource"
fullName: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource"
name: "SqlServerDataFeedSource"
nameWithType: "SqlServerDataFeedSource"
summary: "The SQLServer<wbr>Data<wbr>Feed<wbr>Source model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.ai.metricsadvisor.administration.models.DataFeedSource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SqlServerDataFeedSource extends DataFeedSource"
methods:
- uid: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.fromBasicCredential(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.fromBasicCredential(String connectionString, String query)"
  name: "fromBasicCredential(String connectionString, String query)"
  nameWithType: "SqlServerDataFeedSource.fromBasicCredential(String connectionString, String query)"
  summary: "Create a SQLServer<wbr>Data<wbr>Feed<wbr>Source with credential included in the `connectionString` as plain text."
  modifiers:
  - "static"
  parameters:
  - description: "The SQL server connection string."
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The query that retrieves the values to be analyzed for anomalies."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SqlServerDataFeedSource fromBasicCredential(String connectionString, String query)"
  desc: "Create a SQLServerDataFeedSource with credential included in the `connectionString` as plain text."
  returns:
    description: "The SQLServerDataFeedSource."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource?alt=com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource&text=SqlServerDataFeedSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.fromConnectionStringCredential(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.fromConnectionStringCredential(String query, String credentialId)"
  name: "fromConnectionStringCredential(String query, String credentialId)"
  nameWithType: "SqlServerDataFeedSource.fromConnectionStringCredential(String query, String credentialId)"
  summary: "Create a SQLServer<wbr>Data<wbr>Feed<wbr>Source with the `credentialId` identifying a credential entity of type <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceSqlServerConnectionString\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceSqlServerConnectionString\"></xref> that contains the SQL connection string."
  modifiers:
  - "static"
  parameters:
  - description: "The query that retrieves the values to be analyzed for anomalies."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The unique id of a credential entity of type\n <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceSqlServerConnectionString\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceSqlServerConnectionString\"></xref>."
    name: "credentialId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SqlServerDataFeedSource fromConnectionStringCredential(String query, String credentialId)"
  desc: "Create a SQLServerDataFeedSource with the `credentialId` identifying a credential entity of type <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceSqlServerConnectionString\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceSqlServerConnectionString\"></xref> that contains the SQL connection string."
  returns:
    description: "The SQLServerDataFeedSource."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource?alt=com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource&text=SqlServerDataFeedSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.fromManagedIdentityCredential(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.fromManagedIdentityCredential(String connectionString, String query)"
  name: "fromManagedIdentityCredential(String connectionString, String query)"
  nameWithType: "SqlServerDataFeedSource.fromManagedIdentityCredential(String connectionString, String query)"
  summary: "Create a SQLServer<wbr>Data<wbr>Feed<wbr>Source with the `connectionString` containing the resource id of the SQL server on which metrics advisor has MSI access."
  modifiers:
  - "static"
  parameters:
  - description: "The SQL server connection string."
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The query that retrieves the values to be analyzed for anomalies."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SqlServerDataFeedSource fromManagedIdentityCredential(String connectionString, String query)"
  desc: "Create a SQLServerDataFeedSource with the `connectionString` containing the resource id of the SQL server on which metrics advisor has MSI access."
  returns:
    description: "The SQLServerDataFeedSource."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource?alt=com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource&text=SqlServerDataFeedSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.fromServicePrincipalCredential(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.fromServicePrincipalCredential(String connectionString, String query, String credentialId)"
  name: "fromServicePrincipalCredential(String connectionString, String query, String credentialId)"
  nameWithType: "SqlServerDataFeedSource.fromServicePrincipalCredential(String connectionString, String query, String credentialId)"
  summary: "Create a SQLServer<wbr>Data<wbr>Feed<wbr>Source with the `credentialId` identifying a credential entity of type <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceServicePrincipal\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceServicePrincipal\"></xref>, the entity contains Service Principal to access the SQL Server."
  modifiers:
  - "static"
  parameters:
  - description: "The SQL server connection string."
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The query that retrieves the values to be analyzed for anomalies."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The unique id of a credential entity of type\n <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceServicePrincipal\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceServicePrincipal\"></xref>."
    name: "credentialId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SqlServerDataFeedSource fromServicePrincipalCredential(String connectionString, String query, String credentialId)"
  desc: "Create a SQLServerDataFeedSource with the `credentialId` identifying a credential entity of type <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceServicePrincipal\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceServicePrincipal\"></xref>, the entity contains Service Principal to access the SQL Server."
  returns:
    description: "The SQLServerDataFeedSource."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource?alt=com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource&text=SqlServerDataFeedSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.fromServicePrincipalInKeyVaultCredential(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.fromServicePrincipalInKeyVaultCredential(String connectionString, String query, String credentialId)"
  name: "fromServicePrincipalInKeyVaultCredential(String connectionString, String query, String credentialId)"
  nameWithType: "SqlServerDataFeedSource.fromServicePrincipalInKeyVaultCredential(String connectionString, String query, String credentialId)"
  summary: "Create a SQLServer<wbr>Data<wbr>Feed<wbr>Source with the `credentialId` identifying a credential entity of type <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceServicePrincipalInKeyVault\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceServicePrincipalInKeyVault\"></xref>, the entity contains details of the Key<wbr>Vault holding the Service Principal to access the SQL Server."
  modifiers:
  - "static"
  parameters:
  - description: "The SQL server connection string."
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The query that retrieves the values to be analyzed for anomalies."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The unique id of a credential entity of type\n <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceServicePrincipalInKeyVault\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceServicePrincipalInKeyVault\"></xref>."
    name: "credentialId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SqlServerDataFeedSource fromServicePrincipalInKeyVaultCredential(String connectionString, String query, String credentialId)"
  desc: "Create a SQLServerDataFeedSource with the `credentialId` identifying a credential entity of type <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceServicePrincipalInKeyVault\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceServicePrincipalInKeyVault\"></xref>, the entity contains details of the KeyVault holding the Service Principal to access the SQL Server."
  returns:
    description: "The SQLServerDataFeedSource."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource?alt=com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource&text=SqlServerDataFeedSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.getAuthenticationType()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.getAuthenticationType()"
  name: "getAuthenticationType()"
  nameWithType: "SqlServerDataFeedSource.getAuthenticationType()"
  summary: "Gets the authentication type to access the data source."
  syntax: "public DataSourceAuthenticationType getAuthenticationType()"
  desc: "Gets the authentication type to access the data source."
  returns:
    description: "The authentication type."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.DataSourceAuthenticationType?alt=com.azure.ai.metricsadvisor.administration.models.DataSourceAuthenticationType&text=DataSourceAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.getCredentialId()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.getCredentialId()"
  name: "getCredentialId()"
  nameWithType: "SqlServerDataFeedSource.getCredentialId()"
  summary: "Gets the id of the <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"credential resource\"></xref> to authenticate the data source."
  syntax: "public String getCredentialId()"
  desc: "Gets the id of the <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"credential resource\"></xref> to authenticate the data source."
  returns:
    description: "The credential resource id."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.getQuery()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.SqlServerDataFeedSource.getQuery()"
  name: "getQuery()"
  nameWithType: "SqlServerDataFeedSource.getQuery()"
  summary: "Get the query that retrieves the values to be analyzed for anomalies."
  syntax: "public String getQuery()"
  desc: "Get the query that retrieves the values to be analyzed for anomalies."
  returns:
    description: "the query."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The SQLServerDataFeedSource model."
metadata: {}
package: "com.azure.ai.metricsadvisor.administration.models"
artifact: com.azure:azure-ai-metricsadvisor:1.1.6
