### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.models.Ingress"
fullName: "com.azure.resourcemanager.appservice.models.Ingress"
name: "Ingress"
nameWithType: "Ingress"
summary: "Container App Ingress configuration."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Ingress"
constructors:
- uid: "com.azure.resourcemanager.appservice.models.Ingress.Ingress()"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.Ingress()"
  name: "Ingress()"
  nameWithType: "Ingress.Ingress()"
  syntax: "public Ingress()"
methods:
- uid: "com.azure.resourcemanager.appservice.models.Ingress.allowInsecure()"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.allowInsecure()"
  name: "allowInsecure()"
  nameWithType: "Ingress.allowInsecure()"
  summary: "Get the allow<wbr>Insecure property: Bool indicating if HTTP connections to is allowed."
  syntax: "public Boolean allowInsecure()"
  desc: "Get the allowInsecure property: Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections."
  returns:
    description: "the allowInsecure value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.Ingress.external()"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.external()"
  name: "external()"
  nameWithType: "Ingress.external()"
  summary: "Get the external property: Bool indicating if app exposes an external http endpoint."
  syntax: "public Boolean external()"
  desc: "Get the external property: Bool indicating if app exposes an external http endpoint."
  returns:
    description: "the external value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.Ingress.fqdn()"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.fqdn()"
  name: "fqdn()"
  nameWithType: "Ingress.fqdn()"
  summary: "Get the fqdn property: Hostname."
  syntax: "public String fqdn()"
  desc: "Get the fqdn property: Hostname."
  returns:
    description: "the fqdn value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.Ingress.targetPort()"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.targetPort()"
  name: "targetPort()"
  nameWithType: "Ingress.targetPort()"
  summary: "Get the target<wbr>Port property: Target Port in containers for traffic from ingress."
  syntax: "public Integer targetPort()"
  desc: "Get the targetPort property: Target Port in containers for traffic from ingress."
  returns:
    description: "the targetPort value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.Ingress.traffic()"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.traffic()"
  name: "traffic()"
  nameWithType: "Ingress.traffic()"
  summary: "Get the traffic property: The traffic property."
  syntax: "public List<TrafficWeight> traffic()"
  desc: "Get the traffic property: The traffic property."
  returns:
    description: "the traffic value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.models.TrafficWeight?alt=com.azure.resourcemanager.appservice.models.TrafficWeight&text=TrafficWeight\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.models.Ingress.transport()"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.transport()"
  name: "transport()"
  nameWithType: "Ingress.transport()"
  summary: "Get the transport property: Ingress transport protocol."
  syntax: "public IngressTransportMethod transport()"
  desc: "Get the transport property: Ingress transport protocol."
  returns:
    description: "the transport value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.IngressTransportMethod?alt=com.azure.resourcemanager.appservice.models.IngressTransportMethod&text=IngressTransportMethod\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.Ingress.validate()"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.validate()"
  name: "validate()"
  nameWithType: "Ingress.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appservice.models.Ingress.withAllowInsecure(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.withAllowInsecure(Boolean allowInsecure)"
  name: "withAllowInsecure(Boolean allowInsecure)"
  nameWithType: "Ingress.withAllowInsecure(Boolean allowInsecure)"
  summary: "Set the allow<wbr>Insecure property: Bool indicating if HTTP connections to is allowed."
  parameters:
  - description: "the allowInsecure value to set."
    name: "allowInsecure"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Ingress withAllowInsecure(Boolean allowInsecure)"
  desc: "Set the allowInsecure property: Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.Ingress?alt=com.azure.resourcemanager.appservice.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.Ingress.withExternal(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.withExternal(Boolean external)"
  name: "withExternal(Boolean external)"
  nameWithType: "Ingress.withExternal(Boolean external)"
  summary: "Set the external property: Bool indicating if app exposes an external http endpoint."
  parameters:
  - description: "the external value to set."
    name: "external"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Ingress withExternal(Boolean external)"
  desc: "Set the external property: Bool indicating if app exposes an external http endpoint."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.Ingress?alt=com.azure.resourcemanager.appservice.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.Ingress.withTargetPort(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.withTargetPort(Integer targetPort)"
  name: "withTargetPort(Integer targetPort)"
  nameWithType: "Ingress.withTargetPort(Integer targetPort)"
  summary: "Set the target<wbr>Port property: Target Port in containers for traffic from ingress."
  parameters:
  - description: "the targetPort value to set."
    name: "targetPort"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Ingress withTargetPort(Integer targetPort)"
  desc: "Set the targetPort property: Target Port in containers for traffic from ingress."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.Ingress?alt=com.azure.resourcemanager.appservice.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.Ingress.withTraffic(java.util.List<com.azure.resourcemanager.appservice.models.TrafficWeight>)"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.withTraffic(List<TrafficWeight> traffic)"
  name: "withTraffic(List<TrafficWeight> traffic)"
  nameWithType: "Ingress.withTraffic(List<TrafficWeight> traffic)"
  summary: "Set the traffic property: The traffic property."
  parameters:
  - description: "the traffic value to set."
    name: "traffic"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.models.TrafficWeight?alt=com.azure.resourcemanager.appservice.models.TrafficWeight&text=TrafficWeight\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Ingress withTraffic(List<TrafficWeight> traffic)"
  desc: "Set the traffic property: The traffic property."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.Ingress?alt=com.azure.resourcemanager.appservice.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.Ingress.withTransport(com.azure.resourcemanager.appservice.models.IngressTransportMethod)"
  fullName: "com.azure.resourcemanager.appservice.models.Ingress.withTransport(IngressTransportMethod transport)"
  name: "withTransport(IngressTransportMethod transport)"
  nameWithType: "Ingress.withTransport(IngressTransportMethod transport)"
  summary: "Set the transport property: Ingress transport protocol."
  parameters:
  - description: "the transport value to set."
    name: "transport"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.IngressTransportMethod?alt=com.azure.resourcemanager.appservice.models.IngressTransportMethod&text=IngressTransportMethod\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Ingress withTransport(IngressTransportMethod transport)"
  desc: "Set the transport property: Ingress transport protocol."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.Ingress?alt=com.azure.resourcemanager.appservice.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Container App Ingress configuration."
metadata: {}
package: "com.azure.resourcemanager.appservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.16.0
