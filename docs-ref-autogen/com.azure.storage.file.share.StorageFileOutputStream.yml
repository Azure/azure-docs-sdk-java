### YamlMime:JavaType
uid: "com.azure.storage.file.share.StorageFileOutputStream"
fullName: "com.azure.storage.file.share.StorageFileOutputStream"
name: "StorageFileOutputStream"
nameWithType: "StorageFileOutputStream"
summary: "Provides an output stream to write a given storage file resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.OutputStream?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.storage.common.StorageOutputStream?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.storage.common.StorageOutputStream.checkStreamState()"
- "com.azure.storage.common.StorageOutputStream.close()"
- "com.azure.storage.common.StorageOutputStream.dispatchWrite(byte[],int,long)"
- "com.azure.storage.common.StorageOutputStream.flush()"
- "com.azure.storage.common.StorageOutputStream.write(byte[])"
- "com.azure.storage.common.StorageOutputStream.write(byte[],int,int)"
- "com.azure.storage.common.StorageOutputStream.write(int)"
- "com.azure.storage.common.StorageOutputStream.writeInternal(byte[],int,int)"
- "java.io.OutputStream.nullOutputStream()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class StorageFileOutputStream extends StorageOutputStream"
methods:
- uid: "com.azure.storage.file.share.StorageFileOutputStream.dispatchWrite(byte[],int,long)"
  fullName: "com.azure.storage.file.share.StorageFileOutputStream.dispatchWrite(byte[] data, int writeLength, long offset)"
  name: "dispatchWrite(byte[] data, int writeLength, long offset)"
  nameWithType: "StorageFileOutputStream.dispatchWrite(byte[] data, int writeLength, long offset)"
  modifiers:
  - "protected"
  overridden: "com.azure.storage.common.StorageOutputStream.dispatchWrite(byte[],int,long)"
  parameters:
  - name: "data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "writeLength"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "offset"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Mono<Void> dispatchWrite(byte[] data, int writeLength, long offset)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Provides an output stream to write a given storage file resource."
metadata: {}
package: "com.azure.storage.file.share"
artifact: com.azure:azure-storage-file-share:12.15.0
