### YamlMime:JavaMember
uid: "com.azure.resourcemanager.network.fluent.models.ProbePropertiesFormat.withProtocol*"
fullName: "com.azure.resourcemanager.network.fluent.models.ProbePropertiesFormat.withProtocol"
name: "withProtocol"
nameWithType: "ProbePropertiesFormat.withProtocol"
members:
- uid: "com.azure.resourcemanager.network.fluent.models.ProbePropertiesFormat.withProtocol(com.azure.resourcemanager.network.models.ProbeProtocol)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbePropertiesFormat.withProtocol(ProbeProtocol protocol)"
  name: "withProtocol(ProbeProtocol protocol)"
  nameWithType: "ProbePropertiesFormat.withProtocol(ProbeProtocol protocol)"
  summary: "Set the protocol property: The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful."
  parameters:
  - description: "the protocol value to set."
    name: "protocol"
    type: "<xref href=\"com.azure.resourcemanager.network.models.ProbeProtocol?alt=com.azure.resourcemanager.network.models.ProbeProtocol&text=ProbeProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ProbePropertiesFormat withProtocol(ProbeProtocol protocol)"
  returns:
    description: "the ProbePropertiesFormat object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ProbePropertiesFormat?alt=com.azure.resourcemanager.network.fluent.models.ProbePropertiesFormat&text=ProbePropertiesFormat\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.13.0
