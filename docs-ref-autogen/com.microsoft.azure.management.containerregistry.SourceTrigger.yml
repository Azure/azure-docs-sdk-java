### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerregistry.SourceTrigger.name()
  name: name()
  nameWithType: SourceTrigger.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name of the trigger.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.containerregistry.SourceTrigger.name()
- fullName: com.microsoft.azure.management.containerregistry.SourceTrigger.sourceRepository()
  name: sourceRepository()
  nameWithType: SourceTrigger.sourceRepository()
  returns:
    description: <p>the sourceRepository value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceProperties?alt=com.microsoft.azure.management.containerregistry.SourceProperties&text=SourceProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the properties that describes the source(code) for the task.</p>

    <p></p>
  syntax: public SourceProperties sourceRepository()
  uid: com.microsoft.azure.management.containerregistry.SourceTrigger.sourceRepository()
- fullName: com.microsoft.azure.management.containerregistry.SourceTrigger.sourceTriggerEvents()
  name: sourceTriggerEvents()
  nameWithType: SourceTrigger.sourceTriggerEvents()
  returns:
    description: <p>the sourceTriggerEvents value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.containerregistry.SourceTriggerEvent?alt=com.microsoft.azure.management.containerregistry.SourceTriggerEvent&text=SourceTriggerEvent" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the source event corresponding to the trigger.</p>

    <p></p>
  syntax: public List<SourceTriggerEvent> sourceTriggerEvents()
  uid: com.microsoft.azure.management.containerregistry.SourceTrigger.sourceTriggerEvents()
- fullName: com.microsoft.azure.management.containerregistry.SourceTrigger.status()
  name: status()
  nameWithType: SourceTrigger.status()
  returns:
    description: <p>the status value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.TriggerStatus?alt=com.microsoft.azure.management.containerregistry.TriggerStatus&text=TriggerStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the current status of trigger. Possible values include: 'Disabled', 'Enabled'.</p>

    <p></p>
  syntax: public TriggerStatus status()
  uid: com.microsoft.azure.management.containerregistry.SourceTrigger.status()
- fullName: com.microsoft.azure.management.containerregistry.SourceTrigger.withName(String name)
  name: withName(String name)
  nameWithType: SourceTrigger.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SourceTrigger object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceTrigger?alt=com.microsoft.azure.management.containerregistry.SourceTrigger&text=SourceTrigger" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name of the trigger.</p>

    <p></p>
  syntax: public SourceTrigger withName(String name)
  uid: com.microsoft.azure.management.containerregistry.SourceTrigger.withName(String)
- fullName: com.microsoft.azure.management.containerregistry.SourceTrigger.withSourceRepository(SourceProperties sourceRepository)
  name: withSourceRepository(SourceProperties sourceRepository)
  nameWithType: SourceTrigger.withSourceRepository(SourceProperties sourceRepository)
  parameters:
  - description: <p>the sourceRepository value to set </p>
    name: sourceRepository
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceProperties?alt=com.microsoft.azure.management.containerregistry.SourceProperties&text=SourceProperties" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SourceTrigger object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceTrigger?alt=com.microsoft.azure.management.containerregistry.SourceTrigger&text=SourceTrigger" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the properties that describes the source(code) for the task.</p>

    <p></p>
  syntax: public SourceTrigger withSourceRepository(SourceProperties sourceRepository)
  uid: com.microsoft.azure.management.containerregistry.SourceTrigger.withSourceRepository(SourceProperties)
- fullName: com.microsoft.azure.management.containerregistry.SourceTrigger.withSourceTriggerEvents(List<SourceTriggerEvent> sourceTriggerEvents)
  name: withSourceTriggerEvents(List<SourceTriggerEvent> sourceTriggerEvents)
  nameWithType: SourceTrigger.withSourceTriggerEvents(List<SourceTriggerEvent> sourceTriggerEvents)
  parameters:
  - description: <p>the sourceTriggerEvents value to set </p>
    name: sourceTriggerEvents
    type: List&lt;<xref href="com.microsoft.azure.management.containerregistry.SourceTriggerEvent?alt=com.microsoft.azure.management.containerregistry.SourceTriggerEvent&text=SourceTriggerEvent" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the SourceTrigger object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceTrigger?alt=com.microsoft.azure.management.containerregistry.SourceTrigger&text=SourceTrigger" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the source event corresponding to the trigger.</p>

    <p></p>
  syntax: public SourceTrigger withSourceTriggerEvents(List<SourceTriggerEvent> sourceTriggerEvents)
  uid: com.microsoft.azure.management.containerregistry.SourceTrigger.withSourceTriggerEvents(List<SourceTriggerEvent>)
- fullName: com.microsoft.azure.management.containerregistry.SourceTrigger.withStatus(TriggerStatus status)
  name: withStatus(TriggerStatus status)
  nameWithType: SourceTrigger.withStatus(TriggerStatus status)
  parameters:
  - description: <p>the status value to set </p>
    name: status
    type: <xref href="com.microsoft.azure.management.containerregistry.TriggerStatus?alt=com.microsoft.azure.management.containerregistry.TriggerStatus&text=TriggerStatus" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SourceTrigger object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceTrigger?alt=com.microsoft.azure.management.containerregistry.SourceTrigger&text=SourceTrigger" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the current status of trigger. Possible values include: 'Disabled', 'Enabled'.</p>

    <p></p>
  syntax: public SourceTrigger withStatus(TriggerStatus status)
  uid: com.microsoft.azure.management.containerregistry.SourceTrigger.withStatus(TriggerStatus)
nameWithType: SourceTrigger
syntax: public class SourceTrigger
type: class
uid: com.microsoft.azure.management.containerregistry.SourceTrigger
fullName: com.microsoft.azure.management.containerregistry.SourceTrigger
name: SourceTrigger
package: com.microsoft.azure.management.containerregistry
summary: <p>The properties of a source based trigger. </p>
metadata: {}
