### YamlMime:JavaType
uid: "com.azure.resourcemanager.postgresql.models.Configurations"
fullName: "com.azure.resourcemanager.postgresql.models.Configurations"
name: "Configurations"
nameWithType: "Configurations"
summary: "Resource collection API of Configurations."
syntax: "public interface Configurations"
methods:
- uid: "com.azure.resourcemanager.postgresql.models.Configurations.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.models.Configurations.define(String name)"
  name: "define(String name)"
  nameWithType: "Configurations.define(String name)"
  summary: "Begins definition for a new Configuration resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Configuration.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new Configuration resource."
  returns:
    description: "the first stage of the new Configuration definition."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.Configuration.DefinitionStages.Blank?alt=com.azure.resourcemanager.postgresql.models.Configuration.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.models.Configurations.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.models.Configurations.get(String resourceGroupName, String serverName, String configurationName)"
  name: "get(String resourceGroupName, String serverName, String configurationName)"
  nameWithType: "Configurations.get(String resourceGroupName, String serverName, String configurationName)"
  summary: "Gets information about a configuration of server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server."
    name: "serverName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server configuration."
    name: "configurationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Configuration get(String resourceGroupName, String serverName, String configurationName)"
  desc: "Gets information about a configuration of server."
  returns:
    description: "information about a configuration of server."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.Configuration?alt=com.azure.resourcemanager.postgresql.models.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.models.Configurations.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.models.Configurations.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Configurations.getById(String id)"
  summary: "Gets information about a configuration of server."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Configuration getById(String id)"
  desc: "Gets information about a configuration of server."
  returns:
    description: "information about a configuration of server along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.Configuration?alt=com.azure.resourcemanager.postgresql.models.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.models.Configurations.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.postgresql.models.Configurations.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Configurations.getByIdWithResponse(String id, Context context)"
  summary: "Gets information about a configuration of server."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Configuration> getByIdWithResponse(String id, Context context)"
  desc: "Gets information about a configuration of server."
  returns:
    description: "information about a configuration of server along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresql.models.Configuration?alt=com.azure.resourcemanager.postgresql.models.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.postgresql.models.Configurations.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.postgresql.models.Configurations.getWithResponse(String resourceGroupName, String serverName, String configurationName, Context context)"
  name: "getWithResponse(String resourceGroupName, String serverName, String configurationName, Context context)"
  nameWithType: "Configurations.getWithResponse(String resourceGroupName, String serverName, String configurationName, Context context)"
  summary: "Gets information about a configuration of server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server."
    name: "serverName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server configuration."
    name: "configurationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Configuration> getWithResponse(String resourceGroupName, String serverName, String configurationName, Context context)"
  desc: "Gets information about a configuration of server."
  returns:
    description: "information about a configuration of server along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresql.models.Configuration?alt=com.azure.resourcemanager.postgresql.models.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.postgresql.models.Configurations.listByServer(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.models.Configurations.listByServer(String resourceGroupName, String serverName)"
  name: "listByServer(String resourceGroupName, String serverName)"
  nameWithType: "Configurations.listByServer(String resourceGroupName, String serverName)"
  summary: "List all the configurations in a given server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server."
    name: "serverName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Configuration> listByServer(String resourceGroupName, String serverName)"
  desc: "List all the configurations in a given server."
  returns:
    description: "a list of server configurations."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresql.models.Configuration?alt=com.azure.resourcemanager.postgresql.models.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.postgresql.models.Configurations.listByServer(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.postgresql.models.Configurations.listByServer(String resourceGroupName, String serverName, Context context)"
  name: "listByServer(String resourceGroupName, String serverName, Context context)"
  nameWithType: "Configurations.listByServer(String resourceGroupName, String serverName, Context context)"
  summary: "List all the configurations in a given server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server."
    name: "serverName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Configuration> listByServer(String resourceGroupName, String serverName, Context context)"
  desc: "List all the configurations in a given server."
  returns:
    description: "a list of server configurations."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresql.models.Configuration?alt=com.azure.resourcemanager.postgresql.models.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Configurations."
metadata: {}
package: "com.azure.resourcemanager.postgresql.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-postgresql:1.0.2
