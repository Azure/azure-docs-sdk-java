### YamlMime:JavaMember
nameWithType: VolatileActorStateProvider.initialize
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  name: initialize(ActorTypeInformation actorTypeInformation)
  nameWithType: VolatileActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.initialize(ActorTypeInformation)
  parameters:
  - description: >-
      <p>

        <xref uid="microsoft.servicefabric.actors.runtime.ActorTypeInformation" data-throw-if-not-resolved="false">ActorTypeInformation</xref> Type information of the actor class. </p>
    name: actorTypeInformation
    type: <xref href="microsoft.servicefabric.actors.runtime.ActorTypeInformation?alt=microsoft.servicefabric.actors.runtime.ActorTypeInformation&text=ActorTypeInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes the actor state provider with type information of the actor type associated with it.</p>

    <p></p>
  syntax: public void initialize(ActorTypeInformation actorTypeInformation)
  uid: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.initialize(ActorTypeInformation)
- fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.initialize(StatefulServiceInitializationParameters initializationParameters)
  name: initialize(StatefulServiceInitializationParameters initializationParameters)
  nameWithType: VolatileActorStateProvider.initialize(StatefulServiceInitializationParameters initializationParameters)
  overridden: microsoft.servicefabric.data.StateProviderReplica.initialize(StatefulServiceInitializationParameters)
  parameters:
  - description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false">StatefulServiceInitializationParameters</xref> such as service name, partition id, replica id, and code package information. </p>
    name: initializationParameters
    type: <xref href="system.fabric.StatefulServiceInitializationParameters?alt=system.fabric.StatefulServiceInitializationParameters&text=StatefulServiceInitializationParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initialize the state provider replica using the service initialization information.</p>

    <p>

      <b>Remarks:</b>No complex processing should be done during Initialize. Expensive or long-running initialization should be done in OpenAsync. </p>
  syntax: public void initialize(StatefulServiceInitializationParameters initializationParameters)
  uid: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.initialize(StatefulServiceInitializationParameters)
uid: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.initialize*
fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
name: initialize(ActorTypeInformation actorTypeInformation)
package: microsoft.servicefabric.actors.runtime
metadata: {}
