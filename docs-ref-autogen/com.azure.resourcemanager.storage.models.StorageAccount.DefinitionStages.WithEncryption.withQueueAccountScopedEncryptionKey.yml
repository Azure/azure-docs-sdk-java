### YamlMime:JavaMember
uid: "com.azure.resourcemanager.storage.models.StorageAccount.DefinitionStages.WithEncryption.withQueueAccountScopedEncryptionKey*"
fullName: "com.azure.resourcemanager.storage.models.StorageAccount.DefinitionStages.WithEncryption.withQueueAccountScopedEncryptionKey"
name: "withQueueAccountScopedEncryptionKey"
nameWithType: "StorageAccount.DefinitionStages.WithEncryption.withQueueAccountScopedEncryptionKey"
members:
- uid: "com.azure.resourcemanager.storage.models.StorageAccount.DefinitionStages.WithEncryption.withQueueAccountScopedEncryptionKey()"
  fullName: "com.azure.resourcemanager.storage.models.StorageAccount.DefinitionStages.WithEncryption.withQueueAccountScopedEncryptionKey()"
  name: "withQueueAccountScopedEncryptionKey()"
  nameWithType: "StorageAccount.DefinitionStages.WithEncryption.withQueueAccountScopedEncryptionKey()"
  summary: "Specifies that queue service uses an encryption key that is scoped to the account. Customer-managed key can then be enabled for queue service. Refer to <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Update#withEncryptionKeyFromKeyVault(String, String, String)\"></xref> to enable customer-managed key."
  syntax: "public abstract StorageAccount.DefinitionStages.WithCreate withQueueAccountScopedEncryptionKey()"
  returns:
    description: "the next stage of storage account definition"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.StorageAccount.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.storage.models.StorageAccount.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.storage.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.13.0
