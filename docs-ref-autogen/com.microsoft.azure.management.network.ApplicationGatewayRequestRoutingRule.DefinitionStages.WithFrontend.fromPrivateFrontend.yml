### YamlMime:JavaMember
nameWithType: ApplicationGatewayRequestRoutingRule.DefinitionStages.WithFrontend<ParentT>.fromPrivateFrontend
type: method
members:
- fullName: com.microsoft.azure.management.network.ApplicationGatewayRequestRoutingRule.DefinitionStages.WithFrontend<ParentT>.fromPrivateFrontend()
  name: fromPrivateFrontend()
  nameWithType: ApplicationGatewayRequestRoutingRule.DefinitionStages.WithFrontend<ParentT>.fromPrivateFrontend()
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.network.ApplicationGatewayRequestRoutingRule.DefinitionStages.WithFrontendPort?alt=com.microsoft.azure.management.network.ApplicationGatewayRequestRoutingRule.DefinitionStages.WithFrontendPort&text=ApplicationGatewayRequestRoutingRule.DefinitionStages.WithFrontendPort" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: >-
    <p>Enables the rule to apply to the application gateway's private (internal) frontend. </p>

    <p>If the private frontend IP configuration does not yet exist, it will be created under an auto-generated name. </p>

    <p>If the application gateway does not have a subnet specified for its private frontend, one will be created automatically, unless a specific subnet is specified in the application gateway definition's optional settings. </p>
  syntax: public WithFrontendPort<ParentT> fromPrivateFrontend()
  uid: com.microsoft.azure.management.network.ApplicationGatewayRequestRoutingRule.DefinitionStages.WithFrontend.fromPrivateFrontend()
uid: com.microsoft.azure.management.network.ApplicationGatewayRequestRoutingRule.DefinitionStages.WithFrontend.fromPrivateFrontend*
fullName: com.microsoft.azure.management.network.ApplicationGatewayRequestRoutingRule.DefinitionStages.WithFrontend<ParentT>.fromPrivateFrontend()
name: fromPrivateFrontend()
package: com.microsoft.azure.management.network
metadata: {}
